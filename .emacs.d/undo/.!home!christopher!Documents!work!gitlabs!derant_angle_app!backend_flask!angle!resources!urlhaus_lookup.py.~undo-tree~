(undo-tree-save-format-version . 1)
"b490c82af3ef45599d180606de36cde65afb11f8"
[nil nil nil nil (25729 52415 242253 527000) 0 nil]
([nil nil ((#("scanio" 0 6 (fontified t face font-lock-function-name-face)) . 907) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (t 25709 64565 715348 0)) nil (25729 52415 242251 597000) 0 nil])
([nil nil ((907 . 912)) nil (25729 52415 242246 383000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-function-name-face)) . -907) (undo-tree-id30 . -1) (#("h" 0 1 (fontified t face font-lock-function-name-face)) . -908) (undo-tree-id31 . -1) (#("u" 0 1 (fontified nil face font-lock-function-name-face)) . -909) (undo-tree-id32 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -910) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -911) (undo-tree-id34 . -1) 912) nil (25729 52415 242244 525000) 0 nil])
([nil nil ((907 . 911)) nil (25729 52415 242237 579000) 0 nil])
([nil nil ((#("Scan" 0 4 (fontified t face font-lock-type-face)) . 3578) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4)) nil (25729 52415 242236 358000) 0 nil])
([nil nil ((3578 . 3582)) nil (25729 52415 242232 150000) 0 nil])
([nil nil ((#("cani" 0 4 (fontified t)) . 4893) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4)) nil (25729 52415 242230 959000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4893)) nil (25729 52415 242226 571000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4892) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 4893) nil (25729 52415 242225 187000) 0 nil])
([nil nil ((4892 . 4897)) nil (25729 52415 242220 410000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4895) (undo-tree-id19 . -1) (#("s" 0 1 (fontified t)) . -4896) (undo-tree-id20 . -1) 4897) nil (25729 52415 242218 834000) 0 nil])
([nil nil ((4895 . 4896)) nil (25729 52416 211015 235000) 0 nil])
([nil nil ((#("scanio_request" 0 14 (fontified t face font-lock-function-name-face)) . 281) (undo-tree-id84 . -14) (undo-tree-id85 . -14)) nil (25729 52702 556428 521000) 0 nil] [nil nil ((#("def urlscanio_request(url):
    data = {
        'url': url,
        \"visibility\": \"public\"
    }

    headers = {
        'Content-Type': 'application/json',
        'API-Key': os.getenv('URLSCAN_API_KEY')
    }

    response = requests.post('https://urlscan.io/api/v1/scan/',headers=headers, data=json.dumps(data))

    # Formatted output
    decodedResponse = response.json()
    print(decodedResponse)

    if decodedResponse['message'] == 'Submission successful' and decodedResponse['uuid']:
        return urlscanio_getdata(decodedResponse['uuid'])
    else:
        return {'message': decodedResponse['message']}, 500" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-1-face)) 26 32 (fontified t) 32 36 (fontified t face font-lock-variable-name-face) 36 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 49 (fontified t) 49 54 (fontified t face font-lock-string-face) 54 69 (fontified t) 69 81 (fontified t face font-lock-string-face) 81 83 (fontified t) 83 91 (fontified t face font-lock-string-face) 91 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-1-face)) 97 103 (fontified t) 103 110 (fontified t face font-lock-variable-name-face) 110 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-1-face)) 114 123 (fontified t) 123 137 (fontified t face font-lock-string-face) 137 139 (fontified t) 139 157 (fontified t face font-lock-string-face) 157 167 (fontified t) 167 176 (fontified t face font-lock-string-face) 176 187 (fontified t) 187 188 (fontified t face (rainbow-delimiters-depth-2-face)) 188 205 (fontified t face font-lock-string-face) 205 206 (fontified t face (rainbow-delimiters-depth-2-face)) 206 211 (fontified t) 211 212 (fontified t face (rainbow-delimiters-depth-1-face)) 212 218 (fontified t) 218 226 (fontified t face font-lock-variable-name-face) 226 227 (fontified t) 227 242 (fontified t) 242 243 (fontified t face (rainbow-delimiters-depth-1-face)) 243 276 (fontified t face font-lock-string-face) 276 309 (fontified t) 309 310 (fontified t face (rainbow-delimiters-depth-2-face)) 310 314 (fontified t) 314 315 (fontified t face (rainbow-delimiters-depth-2-face)) 315 316 (fontified t face (rainbow-delimiters-depth-1-face)) 316 317 (fontified t) 317 322 (fontified t) 322 324 (fontified t face font-lock-comment-delimiter-face) 324 341 (fontified t face font-lock-comment-face) 341 345 (fontified t) 345 360 (fontified t face font-lock-variable-name-face) 360 376 (fontified t) 376 377 (fontified t face (rainbow-delimiters-depth-1-face)) 377 378 (fontified t face (rainbow-delimiters-depth-1-face)) 378 383 (fontified t) 383 388 (fontified t face font-lock-keyword-face) 388 389 (fontified t face (rainbow-delimiters-depth-1-face)) 389 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 411 (fontified t) 411 413 (fontified t face font-lock-keyword-face) 413 429 (fontified t) 429 430 (fontified t face (rainbow-delimiters-depth-1-face)) 430 439 (fontified t face font-lock-string-face) 439 440 (fontified t face (rainbow-delimiters-depth-1-face)) 440 444 (fontified t) 444 467 (fontified t face font-lock-string-face) 467 468 (fontified t) 468 471 (fontified t face font-lock-keyword-face) 471 487 (fontified t) 487 488 (fontified t face (rainbow-delimiters-depth-1-face)) 488 494 (fontified t face font-lock-string-face) 494 495 (fontified t face (rainbow-delimiters-depth-1-face)) 495 505 (fontified t) 505 511 (fontified t face font-lock-keyword-face) 511 529 (fontified t) 529 530 (fontified t face (rainbow-delimiters-depth-1-face)) 530 545 (fontified t) 545 546 (fontified t face (rainbow-delimiters-depth-2-face)) 546 552 (fontified t face font-lock-string-face) 552 553 (fontified t face (rainbow-delimiters-depth-2-face)) 553 554 (fontified t face (rainbow-delimiters-depth-1-face)) 554 559 (fontified t) 559 563 (fontified t face font-lock-keyword-face) 563 573 (fontified t) 573 579 (fontified t face font-lock-keyword-face) 579 580 (fontified t) 580 581 (fontified t face (rainbow-delimiters-depth-1-face)) 581 590 (fontified t face font-lock-string-face) 590 607 (fontified t) 607 608 (fontified t face (rainbow-delimiters-depth-2-face)) 608 617 (fontified t face font-lock-string-face) 617 618 (fontified t face (rainbow-delimiters-depth-2-face)) 618 619 (fontified t face (rainbow-delimiters-depth-1-face)) 619 624 (fontified t)) . 274) (undo-tree-id13 . -28) (undo-tree-id14 . -624) (undo-tree-id15 . -554) (undo-tree-id16 . -624) (undo-tree-id17 . -554) (undo-tree-id18 . -624)) ((274 . 898)) (25729 52415 832562 231000) 0 nil])
([nil nil ((281 . 290)) nil (25729 52702 556425 286000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -272) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("
" 0 1 (fontified t)) . -273) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 274) ((272 . 274)) (25729 52415 528098 932000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-function-name-face)) . -287) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -288) (undo-tree-id82 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -289) (undo-tree-id83 . -1) 290) nil (25729 52702 556423 772000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 272) (undo-tree-id0 . -1)) ((272 . 273)) (25729 52415 242330 462000) 0 nil])
([nil nil ((287 . 292)) nil (25729 52702 556419 154000) 0 nil])
([nil nil ((272 . 273)) ((#("
" 0 1 (fontified t)) . 272)) (25729 52415 242169 306000) 0 nil])
([nil nil ((#("
def urlhaus_getdata(q_uuid):
    result_obj = None
    result_dom_img = None
    result_png_img = None
    print(\"QUIID:\", q_uuid)
    for x in range(10):
        try:
            ## Check for url data
            res = requests.get('https://urlscan.io/api/v1/result/'+q_uuid+'/')
            res.raise_for_status()
            result_obj = res.json()
            break
        except requests.HTTPError as e:
            if e.response.status_code == 404:
                time.sleep(5)
                continue
            else:
                print(e)
                return {'message': 'The url request went wrong: '+e.response.message}, 500

    if not result_obj:
        return {'message': 'The url request didn\\'t return'}, 500

    # Set url object
    url_object = {}
    url_object['Time of Scan'] = result_obj['task']['time'] if 'time' in result_obj['task'] else None
    url_object['Scan UUID'] = result_obj['task']['uuid'] if 'uuid' in result_obj['task'] else None
    url_object['Domain Name'] = result_obj['page']['domain'] if 'domain' in result_obj['page'] else None
    url_object['Domain IP'] = result_obj['page']['ip'] if 'ip' in result_obj['page'] else None
    url_object['Domain Country'] = result_obj['page']['country'] if 'country' in result_obj['page'] else None
    url_object['Domain Maliciousness Score'] = result_obj['verdicts']['overall']['score'] if 'score' in result_obj['verdicts']['overall'] else None
    url_object['Domain Maliciousness Catagory'] = result_obj['verdicts']['overall']['categories'] if 'categories' in result_obj['verdicts']['overall'] else None

    # See if dom snapshot is available
    result_dom_img = None
    try:
        # Check for dom image
        dom_res = requests.get('https://urlscan.io/screenshots/'+q_uuid+'.png')
        dom_res.raise_for_status()
        result_dom_img = (base64.b64encode(dom_res.content)).decode('utf-8')
    except requests.HTTPError as e:
        if e.response.status_code == 404:
            print('Dom image couldn\\'t be found')

    # See if png snapshot is available
    result_png_img = None
    try:
        # Check for png image
        png_res = requests.get('https://urlscan.io/dom/'+q_uuid+'.png')
        png_res.raise_for_status()
        result_png_img = (base64.b64encode(png_res.content)).decode('utf-8')
    except requests.HTTPError as e:
        if e.response.status_code == 404:
            print('Png image couldn\\'t be found')

    if result_obj:
        return {'message': 'url found', 'url_info': url_object, 'img_dom': result_dom_img, 'img_png': result_png_img}, 200
    else:
        return {'message': 'Url request did not return or timed out'}, 500" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 30 (fontified t) 30 34 (fontified t) 34 44 (fontified t face font-lock-variable-name-face) 44 47 (fontified t) 47 51 (fontified t face font-lock-constant-face) 51 56 (fontified t) 56 70 (fontified t face font-lock-variable-name-face) 70 73 (fontified t) 73 77 (fontified t face font-lock-constant-face) 77 82 (fontified t) 82 96 (fontified t face font-lock-variable-name-face) 96 99 (fontified t) 99 100 (fontified t face font-lock-constant-face) 100 103 (fontified t face font-lock-constant-face) 103 108 (fontified t) 108 113 (fontified t face font-lock-keyword-face) 113 114 (fontified t face (rainbow-delimiters-depth-1-face)) 114 122 (fontified t face font-lock-string-face) 122 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-1-face)) 131 132 (fontified t) 132 136 (fontified t) 136 139 (fontified t face font-lock-keyword-face) 139 142 (fontified t) 142 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 150 (fontified t face font-lock-builtin-face) 150 151 (fontified t face (rainbow-delimiters-depth-1-face)) 151 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 156 (fontified t) 156 164 (fontified t) 164 167 (fontified t face font-lock-keyword-face) 167 181 (fontified t) 181 184 (fontified t face font-lock-comment-delimiter-face) 184 190 (fontified t face font-lock-comment-face) 190 203 (fontified t face font-lock-comment-face) 203 215 (fontified t) 215 218 (fontified t face font-lock-variable-name-face) 218 233 (fontified t) 233 234 (fontified t face (rainbow-delimiters-depth-1-face)) 234 269 (fontified t face font-lock-string-face) 269 277 (fontified t) 277 280 (fontified t face font-lock-string-face) 280 281 (fontified t face (rainbow-delimiters-depth-1-face)) 281 314 (fontified t) 314 315 (fontified t face (rainbow-delimiters-depth-1-face)) 315 316 (fontified t face (rainbow-delimiters-depth-1-face)) 316 329 (fontified t) 329 339 (fontified t face font-lock-variable-name-face) 339 350 (fontified t) 350 351 (fontified t face (rainbow-delimiters-depth-1-face)) 351 352 (fontified t face (rainbow-delimiters-depth-1-face)) 352 365 (fontified t) 365 370 (fontified t face font-lock-keyword-face) 370 379 (fontified t) 379 385 (fontified t face font-lock-keyword-face) 385 403 (fontified t) 403 405 (fontified t) 405 407 (fontified t face font-lock-keyword-face) 407 423 (fontified t) 423 425 (fontified t face font-lock-keyword-face) 425 440 (fontified t) 440 457 (fontified t) 457 483 (fontified t) 483 484 (fontified t face (rainbow-delimiters-depth-1-face)) 484 485 (fontified t) 485 486 (fontified t face (rainbow-delimiters-depth-1-face)) 486 487 (fontified t) 487 491 (fontified t) 491 500 (fontified t) 500 501 (fontified t) 501 503 (fontified t) 503 504 (fontified t face font-lock-keyword-face) 504 511 (fontified t face font-lock-keyword-face) 511 512 (fontified t) 512 524 (fontified t) 524 528 (fontified t face font-lock-keyword-face) 528 530 (fontified t) 530 546 (fontified t) 546 551 (fontified t face font-lock-keyword-face) 551 552 (fontified t face (rainbow-delimiters-depth-1-face)) 552 553 (fontified t) 553 554 (fontified t face (rainbow-delimiters-depth-1-face)) 554 571 (fontified t) 571 577 (fontified t face font-lock-keyword-face) 577 578 (fontified t) 578 579 (fontified t face (rainbow-delimiters-depth-1-face)) 579 588 (fontified t face font-lock-string-face) 588 590 (fontified t) 590 620 (fontified t face font-lock-string-face) 620 639 (fontified t) 639 640 (fontified t face (rainbow-delimiters-depth-1-face)) 640 651 (fontified t) 651 653 (fontified t face font-lock-keyword-face) 653 654 (fontified t) 654 657 (fontified t face font-lock-keyword-face) 657 678 (fontified t) 678 684 (fontified t face font-lock-keyword-face) 684 685 (fontified t) 685 686 (fontified t face (rainbow-delimiters-depth-1-face)) 686 695 (fontified t face font-lock-string-face) 695 697 (fontified t) 697 703 (fontified t face font-lock-string-face) 703 729 (fontified t face font-lock-string-face) 729 730 (fontified t face (rainbow-delimiters-depth-1-face)) 730 736 (fontified t) 736 741 (fontified t) 741 743 (fontified t face font-lock-comment-delimiter-face) 743 758 (fontified t face font-lock-comment-face) 758 762 (fontified t) 762 772 (fontified t face font-lock-variable-name-face) 772 775 (fontified t) 775 776 (fontified t face (rainbow-delimiters-depth-1-face)) 776 777 (fontified t face (rainbow-delimiters-depth-1-face)) 777 782 (fontified t) 782 792 (fontified t face font-lock-variable-name-face) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 807 (fontified t face font-lock-string-face) 807 808 (fontified t face (rainbow-delimiters-depth-1-face)) 808 821 (fontified t) 821 822 (fontified t face (rainbow-delimiters-depth-1-face)) 822 828 (fontified t face font-lock-string-face) 828 829 (fontified t face (rainbow-delimiters-depth-1-face)) 829 830 (fontified t face (rainbow-delimiters-depth-1-face)) 830 836 (fontified t face font-lock-string-face) 836 837 (fontified t face (rainbow-delimiters-depth-1-face)) 837 838 (fontified t) 838 840 (fontified t face font-lock-keyword-face) 840 841 (fontified t) 841 847 (fontified t face font-lock-string-face) 847 848 (fontified t) 848 850 (fontified t face font-lock-keyword-face) 850 861 (fontified t) 861 862 (fontified t face (rainbow-delimiters-depth-1-face)) 862 868 (fontified t face font-lock-string-face) 868 869 (fontified t face (rainbow-delimiters-depth-1-face)) 869 870 (fontified t) 870 874 (fontified t face font-lock-keyword-face) 874 875 (fontified t) 875 879 (fontified t face font-lock-constant-face) 879 884 (fontified t) 884 894 (fontified t face font-lock-variable-name-face) 894 895 (fontified t face (rainbow-delimiters-depth-1-face)) 895 903 (fontified t face font-lock-string-face) 903 906 (fontified t face font-lock-string-face) 906 907 (fontified t face (rainbow-delimiters-depth-1-face)) 907 920 (fontified t) 920 921 (fontified t face (rainbow-delimiters-depth-1-face)) 921 927 (fontified t face font-lock-string-face) 927 928 (fontified t face (rainbow-delimiters-depth-1-face)) 928 929 (fontified t face (rainbow-delimiters-depth-1-face)) 929 935 (fontified t face font-lock-string-face) 935 936 (fontified t face (rainbow-delimiters-depth-1-face)) 936 937 (fontified t) 937 939 (fontified t face font-lock-keyword-face) 939 940 (fontified t) 940 946 (fontified t face font-lock-string-face) 946 947 (fontified t) 947 949 (fontified t face font-lock-keyword-face) 949 957 (fontified t) 957 960 (fontified t) 960 961 (fontified t face (rainbow-delimiters-depth-1-face)) 961 967 (fontified t face font-lock-string-face) 967 968 (fontified t face (rainbow-delimiters-depth-1-face)) 968 969 (fontified t) 969 973 (fontified t face font-lock-keyword-face) 973 974 (fontified t) 974 978 (fontified t face font-lock-constant-face) 978 979 (fontified t) 979 983 (fontified t) 983 993 (fontified t face font-lock-variable-name-face) 993 994 (fontified t face (rainbow-delimiters-depth-1-face)) 994 1000 (fontified t face font-lock-string-face) 1000 1001 (fontified t face font-lock-string-face) 1001 1007 (fontified t face font-lock-string-face) 1007 1008 (fontified t face (rainbow-delimiters-depth-1-face)) 1008 1012 (fontified t) 1012 1021 (fontified t) 1021 1022 (fontified t face (rainbow-delimiters-depth-1-face)) 1022 1028 (fontified t face font-lock-string-face) 1028 1029 (fontified t face (rainbow-delimiters-depth-1-face)) 1029 1030 (fontified t face (rainbow-delimiters-depth-1-face)) 1030 1038 (fontified t face font-lock-string-face) 1038 1039 (fontified t face (rainbow-delimiters-depth-1-face)) 1039 1040 (fontified t) 1040 1042 (fontified t face font-lock-keyword-face) 1042 1043 (fontified t) 1043 1051 (fontified t face font-lock-string-face) 1051 1052 (fontified t) 1052 1054 (fontified t face font-lock-keyword-face) 1054 1065 (fontified t) 1065 1066 (fontified t face (rainbow-delimiters-depth-1-face)) 1066 1072 (fontified t face font-lock-string-face) 1072 1073 (fontified t face (rainbow-delimiters-depth-1-face)) 1073 1074 (fontified t) 1074 1078 (fontified t face font-lock-keyword-face) 1078 1079 (fontified t) 1079 1083 (fontified t face font-lock-constant-face) 1083 1084 (fontified t) 1084 1088 (fontified t) 1088 1098 (fontified t face font-lock-variable-name-face) 1098 1099 (fontified t face (rainbow-delimiters-depth-1-face)) 1099 1110 (fontified t face font-lock-string-face) 1110 1111 (fontified t face (rainbow-delimiters-depth-1-face)) 1111 1124 (fontified t) 1124 1125 (fontified t face (rainbow-delimiters-depth-1-face)) 1125 1131 (fontified t face font-lock-string-face) 1131 1132 (fontified t face (rainbow-delimiters-depth-1-face)) 1132 1133 (fontified t face (rainbow-delimiters-depth-1-face)) 1133 1137 (fontified t face font-lock-string-face) 1137 1138 (fontified t face (rainbow-delimiters-depth-1-face)) 1138 1139 (fontified t) 1139 1141 (fontified t face font-lock-keyword-face) 1141 1142 (fontified t) 1142 1146 (fontified t face font-lock-string-face) 1146 1147 (fontified t) 1147 1149 (fontified t face font-lock-keyword-face) 1149 1160 (fontified t) 1160 1161 (fontified t face (rainbow-delimiters-depth-1-face)) 1161 1167 (fontified t face font-lock-string-face) 1167 1168 (fontified t face (rainbow-delimiters-depth-1-face)) 1168 1169 (fontified t) 1169 1173 (fontified t face font-lock-keyword-face) 1173 1174 (fontified t) 1174 1178 (fontified t face font-lock-constant-face) 1178 1183 (fontified t) 1183 1193 (fontified t face font-lock-variable-name-face) 1193 1194 (fontified t face (rainbow-delimiters-depth-1-face)) 1194 1210 (fontified t face font-lock-string-face) 1210 1211 (fontified t face (rainbow-delimiters-depth-1-face)) 1211 1224 (fontified t) 1224 1225 (fontified t face (rainbow-delimiters-depth-1-face)) 1225 1231 (fontified t face font-lock-string-face) 1231 1232 (fontified t face (rainbow-delimiters-depth-1-face)) 1232 1233 (fontified t face (rainbow-delimiters-depth-1-face)) 1233 1236 (fontified t face font-lock-string-face) 1236 1242 (fontified t face font-lock-string-face) 1242 1243 (fontified t face (rainbow-delimiters-depth-1-face)) 1243 1244 (fontified t) 1244 1246 (fontified t face font-lock-keyword-face) 1246 1247 (fontified t) 1247 1256 (fontified t face font-lock-string-face) 1256 1257 (fontified t) 1257 1259 (fontified t face font-lock-keyword-face) 1259 1270 (fontified t) 1270 1271 (fontified t face (rainbow-delimiters-depth-1-face)) 1271 1277 (fontified t face font-lock-string-face) 1277 1278 (fontified t face (rainbow-delimiters-depth-1-face)) 1278 1279 (fontified t) 1279 1283 (fontified t face font-lock-keyword-face) 1283 1284 (fontified t) 1284 1288 (fontified t face font-lock-constant-face) 1288 1289 (fontified t) 1289 1293 (fontified t) 1293 1303 (fontified t face font-lock-variable-name-face) 1303 1304 (fontified t face (rainbow-delimiters-depth-1-face)) 1304 1332 (fontified t face font-lock-string-face) 1332 1333 (fontified t face (rainbow-delimiters-depth-1-face)) 1333 1346 (fontified t) 1346 1347 (fontified t face (rainbow-delimiters-depth-1-face)) 1347 1357 (fontified t face font-lock-string-face) 1357 1358 (fontified t face (rainbow-delimiters-depth-1-face)) 1358 1359 (fontified t face (rainbow-delimiters-depth-1-face)) 1359 1368 (fontified t face font-lock-string-face) 1368 1369 (fontified t face (rainbow-delimiters-depth-1-face)) 1369 1370 (fontified t face (rainbow-delimiters-depth-1-face)) 1370 1377 (fontified t face font-lock-string-face) 1377 1378 (fontified t face (rainbow-delimiters-depth-1-face)) 1378 1379 (fontified t) 1379 1381 (fontified t face font-lock-keyword-face) 1381 1382 (fontified t) 1382 1389 (fontified t face font-lock-string-face) 1389 1390 (fontified t) 1390 1392 (fontified t face font-lock-keyword-face) 1392 1403 (fontified t) 1403 1404 (fontified t face (rainbow-delimiters-depth-1-face)) 1404 1414 (fontified t face font-lock-string-face) 1414 1415 (fontified t face (rainbow-delimiters-depth-1-face)) 1415 1416 (fontified t face (rainbow-delimiters-depth-1-face)) 1416 1425 (fontified t face font-lock-string-face) 1425 1426 (fontified t face (rainbow-delimiters-depth-1-face)) 1426 1427 (fontified t) 1427 1431 (fontified t face font-lock-keyword-face) 1431 1432 (fontified t) 1432 1436 (fontified t face font-lock-constant-face) 1436 1441 (fontified t) 1441 1451 (fontified t face font-lock-variable-name-face) 1451 1452 (fontified t face (rainbow-delimiters-depth-1-face)) 1452 1479 (fontified t face font-lock-string-face) 1479 1483 (fontified t face font-lock-string-face) 1483 1484 (fontified t face (rainbow-delimiters-depth-1-face)) 1484 1497 (fontified t) 1497 1498 (fontified t face (rainbow-delimiters-depth-1-face)) 1498 1500 (fontified t face font-lock-string-face) 1500 1501 (fontified t face font-lock-string-face) 1501 1508 (fontified t face font-lock-string-face) 1508 1509 (fontified t face (rainbow-delimiters-depth-1-face)) 1509 1510 (fontified t face (rainbow-delimiters-depth-1-face)) 1510 1519 (fontified t face font-lock-string-face) 1519 1520 (fontified t face (rainbow-delimiters-depth-1-face)) 1520 1521 (fontified t face (rainbow-delimiters-depth-1-face)) 1521 1530 (fontified t face font-lock-string-face) 1530 1533 (fontified t face font-lock-string-face) 1533 1534 (fontified t face (rainbow-delimiters-depth-1-face)) 1534 1535 (fontified t) 1535 1537 (fontified t face font-lock-keyword-face) 1537 1538 (fontified t) 1538 1550 (fontified t face font-lock-string-face) 1550 1551 (fontified t) 1551 1553 (fontified t face font-lock-keyword-face) 1553 1564 (fontified t) 1564 1565 (fontified t face (rainbow-delimiters-depth-1-face)) 1565 1575 (fontified t face font-lock-string-face) 1575 1576 (fontified t face (rainbow-delimiters-depth-1-face)) 1576 1577 (fontified t face (rainbow-delimiters-depth-1-face)) 1577 1584 (fontified t face font-lock-string-face) 1584 1586 (fontified t face font-lock-string-face) 1586 1587 (fontified t face (rainbow-delimiters-depth-1-face)) 1587 1588 (fontified t face (whitespace-line)) 1588 1592 (fontified t face (whitespace-line font-lock-keyword-face)) 1592 1593 (fontified t face (whitespace-line)) 1593 1597 (fontified t face (whitespace-line font-lock-constant-face)) 1597 1598 (fontified t) 1598 1603 (fontified t) 1603 1605 (fontified t face font-lock-comment-delimiter-face) 1605 1638 (fontified t face font-lock-comment-face) 1638 1642 (fontified t) 1642 1656 (fontified t face font-lock-variable-name-face) 1656 1659 (fontified t) 1659 1663 (fontified t face font-lock-constant-face) 1663 1668 (fontified t) 1668 1671 (fontified t face font-lock-keyword-face) 1671 1681 (fontified t) 1681 1683 (fontified t face font-lock-comment-delimiter-face) 1683 1703 (fontified t face font-lock-comment-face) 1703 1711 (fontified t) 1711 1718 (fontified t face font-lock-variable-name-face) 1718 1733 (fontified t) 1733 1734 (fontified t face (rainbow-delimiters-depth-1-face)) 1734 1736 (fontified t face font-lock-string-face) 1736 1767 (fontified t face font-lock-string-face) 1767 1775 (fontified t) 1775 1781 (fontified t face font-lock-string-face) 1781 1782 (fontified t face (rainbow-delimiters-depth-1-face)) 1782 1789 (fontified t) 1789 1815 (fontified t) 1815 1816 (fontified t face (rainbow-delimiters-depth-1-face)) 1816 1817 (fontified t face (rainbow-delimiters-depth-1-face)) 1817 1818 (fontified t) 1818 1826 (fontified t) 1826 1840 (fontified t face font-lock-variable-name-face) 1840 1843 (fontified t) 1843 1844 (fontified t face (rainbow-delimiters-depth-1-face)) 1844 1860 (fontified t) 1860 1861 (fontified t face (rainbow-delimiters-depth-2-face)) 1861 1876 (fontified t) 1876 1877 (fontified t face (rainbow-delimiters-depth-2-face)) 1877 1878 (fontified t face (rainbow-delimiters-depth-1-face)) 1878 1885 (fontified t) 1885 1886 (fontified t face (rainbow-delimiters-depth-1-face)) 1886 1893 (fontified t face font-lock-string-face) 1893 1894 (fontified t face (rainbow-delimiters-depth-1-face)) 1894 1899 (fontified t) 1899 1903 (fontified t face font-lock-keyword-face) 1903 1905 (fontified t face font-lock-keyword-face) 1905 1925 (fontified t) 1925 1927 (fontified t face font-lock-keyword-face) 1927 1939 (fontified t) 1939 1941 (fontified t face font-lock-keyword-face) 1941 1985 (fontified t) 1985 1990 (fontified t face font-lock-keyword-face) 1990 1991 (fontified t face (rainbow-delimiters-depth-1-face)) 1991 2000 (fontified t face font-lock-string-face) 2000 2001 (fontified t face font-lock-string-face) 2001 2021 (fontified t face font-lock-string-face) 2021 2022 (fontified t face (rainbow-delimiters-depth-1-face)) 2022 2028 (fontified t) 2028 2030 (fontified t face font-lock-comment-delimiter-face) 2030 2063 (fontified t face font-lock-comment-face) 2063 2067 (fontified t) 2067 2081 (fontified t face font-lock-variable-name-face) 2081 2084 (fontified t) 2084 2088 (fontified t face font-lock-constant-face) 2088 2093 (fontified t) 2093 2096 (fontified t face font-lock-keyword-face) 2096 2098 (fontified t) 2098 2106 (fontified t) 2106 2108 (fontified t face font-lock-comment-delimiter-face) 2108 2128 (fontified t face font-lock-comment-face) 2128 2136 (fontified t) 2136 2143 (fontified t face font-lock-variable-name-face) 2143 2158 (fontified t) 2158 2159 (fontified t face (rainbow-delimiters-depth-1-face)) 2159 2184 (fontified t face font-lock-string-face) 2184 2192 (fontified t) 2192 2198 (fontified t face font-lock-string-face) 2198 2199 (fontified t face (rainbow-delimiters-depth-1-face)) 2199 2232 (fontified t) 2232 2233 (fontified t face (rainbow-delimiters-depth-1-face)) 2233 2234 (fontified t face (rainbow-delimiters-depth-1-face)) 2234 2243 (fontified t) 2243 2257 (fontified t face font-lock-variable-name-face) 2257 2260 (fontified t) 2260 2261 (fontified t face (rainbow-delimiters-depth-1-face)) 2261 2277 (fontified t) 2277 2278 (fontified t face (rainbow-delimiters-depth-2-face)) 2278 2293 (fontified t) 2293 2294 (fontified t face (rainbow-delimiters-depth-2-face)) 2294 2295 (fontified t face (rainbow-delimiters-depth-1-face)) 2295 2302 (fontified t) 2302 2303 (fontified t face (rainbow-delimiters-depth-1-face)) 2303 2310 (fontified t face font-lock-string-face) 2310 2311 (fontified t face (rainbow-delimiters-depth-1-face)) 2311 2316 (fontified t) 2316 2318 (fontified t face font-lock-keyword-face) 2318 2322 (fontified t face font-lock-keyword-face) 2322 2342 (fontified t) 2342 2344 (fontified t face font-lock-keyword-face) 2344 2348 (fontified t) 2348 2356 (fontified t) 2356 2358 (fontified t face font-lock-keyword-face) 2358 2402 (fontified t) 2402 2407 (fontified t face font-lock-keyword-face) 2407 2408 (fontified t face (rainbow-delimiters-depth-1-face)) 2408 2438 (fontified t face font-lock-string-face) 2438 2439 (fontified t face (rainbow-delimiters-depth-1-face)) 2439 2445 (fontified t) 2445 2447 (fontified t face font-lock-keyword-face) 2447 2468 (fontified t) 2468 2474 (fontified t face font-lock-keyword-face) 2474 2475 (fontified t) 2475 2476 (fontified t face (rainbow-delimiters-depth-1-face)) 2476 2485 (fontified t face font-lock-string-face) 2485 2487 (fontified t) 2487 2498 (fontified t face font-lock-string-face) 2498 2500 (fontified t) 2500 2501 (fontified t face font-lock-string-face) 2501 2510 (fontified t face font-lock-string-face) 2510 2524 (fontified t) 2524 2530 (fontified t face font-lock-string-face) 2530 2533 (fontified t face font-lock-string-face) 2533 2551 (fontified t) 2551 2560 (fontified t face font-lock-string-face) 2560 2576 (fontified t) 2576 2577 (fontified t face (rainbow-delimiters-depth-1-face)) 2577 2587 (fontified t) 2587 2591 (fontified t face font-lock-keyword-face) 2591 2598 (fontified t) 2598 2601 (fontified t) 2601 2607 (fontified t face font-lock-keyword-face) 2607 2608 (fontified t) 2608 2609 (fontified t face (rainbow-delimiters-depth-1-face)) 2609 2618 (fontified t face font-lock-string-face) 2618 2620 (fontified t) 2620 2661 (fontified t face font-lock-string-face) 2661 2662 (fontified t face (rainbow-delimiters-depth-1-face)) 2662 2667 (fontified t)) . 896) (undo-tree-id77 . -1) (undo-tree-id78 . -2667) (undo-tree-id79 . -8) (undo-tree-id80 . -2667)) nil (25729 52702 556417 942000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -895) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 896) nil (25729 52702 556412 790000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 895) (undo-tree-id72 . -1)) nil (25729 52702 556404 550000) 0 nil])
([nil nil ((#("urlhaus_request" 0 15 (fontified t)) . 2217) (undo-tree-id69 . -15) (undo-tree-id70 . -3) (undo-tree-id71 . -15)) nil (25729 52702 556402 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2230 . 2231) (nil fontified nil 2217 . 2231) (2217 . 2231)) nil (25729 52702 556398 87000) 0 nil])
([nil nil ((#("    data = {
        'url': url,
        \"visibility\": \"public\"
    }

    headers = {
        'Content-Type': 'application/json',
        'API-Key': os.getenv('URLSCAN_API_KEY')
    }

    response = requests.post('https://urlscan.io/api/v1/scan/',headers=headers, data=json.dumps(data))

    # Formatted output
    decodedResponse = response.json()
    print(decodedResponse)

    if decodedResponse['message'] == 'Submission successful' and decodedResponse['uuid']:
        return urlscanio_getdata(decodedResponse['uuid'])
    else:
        return {'message': decodedResponse['message']}, 500" 0 4 (fontified t) 4 8 (fontified t face font-lock-variable-name-face) 8 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-1-face)) 12 21 (fontified t) 21 26 (fontified t face font-lock-string-face) 26 33 (fontified t) 33 41 (fontified t) 41 53 (fontified t face font-lock-string-face) 53 55 (fontified t) 55 63 (fontified t face font-lock-string-face) 63 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-1-face)) 69 75 (fontified t) 75 82 (fontified t face font-lock-variable-name-face) 82 85 (fontified t) 85 86 (fontified t face (rainbow-delimiters-depth-1-face)) 86 95 (fontified t) 95 109 (fontified t face font-lock-string-face) 109 111 (fontified t) 111 129 (fontified t face font-lock-string-face) 129 139 (fontified t) 139 148 (fontified t face font-lock-string-face) 148 159 (fontified t) 159 160 (fontified t face (rainbow-delimiters-depth-2-face)) 160 177 (fontified t face font-lock-string-face) 177 178 (fontified t face (rainbow-delimiters-depth-2-face)) 178 183 (fontified t) 183 184 (fontified t face (rainbow-delimiters-depth-1-face)) 184 190 (fontified t) 190 198 (fontified t face font-lock-variable-name-face) 198 199 (fontified t) 199 214 (fontified t) 214 215 (fontified t face (rainbow-delimiters-depth-1-face)) 215 248 (fontified t face font-lock-string-face) 248 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-2-face)) 282 286 (fontified t) 286 287 (fontified t face (rainbow-delimiters-depth-2-face)) 287 288 (fontified t face (rainbow-delimiters-depth-1-face)) 288 289 (fontified t) 289 294 (fontified t) 294 296 (fontified t face font-lock-comment-delimiter-face) 296 313 (fontified t face font-lock-comment-face) 313 317 (fontified t) 317 332 (fontified t face font-lock-variable-name-face) 332 348 (fontified t) 348 349 (fontified t face (rainbow-delimiters-depth-1-face)) 349 350 (fontified t face (rainbow-delimiters-depth-1-face)) 350 355 (fontified t) 355 360 (fontified t face font-lock-keyword-face) 360 361 (fontified t face (rainbow-delimiters-depth-1-face)) 361 376 (fontified t) 376 377 (fontified t face (rainbow-delimiters-depth-1-face)) 377 383 (fontified t) 383 385 (fontified t face font-lock-keyword-face) 385 401 (fontified t) 401 402 (fontified t face (rainbow-delimiters-depth-1-face)) 402 411 (fontified t face font-lock-string-face) 411 412 (fontified t face (rainbow-delimiters-depth-1-face)) 412 416 (fontified t) 416 439 (fontified t face font-lock-string-face) 439 440 (fontified t) 440 443 (fontified t face font-lock-keyword-face) 443 459 (fontified t) 459 460 (fontified t face (rainbow-delimiters-depth-1-face)) 460 466 (fontified t face font-lock-string-face) 466 467 (fontified t face (rainbow-delimiters-depth-1-face)) 467 472 (fontified t) 472 477 (fontified t) 477 483 (fontified t face font-lock-keyword-face) 483 500 (fontified t) 500 501 (fontified t) 501 502 (fontified t face (rainbow-delimiters-depth-1-face)) 502 517 (fontified t) 517 518 (fontified t face (rainbow-delimiters-depth-2-face)) 518 524 (fontified t face font-lock-string-face) 524 525 (fontified t face (rainbow-delimiters-depth-2-face)) 525 526 (fontified t face (rainbow-delimiters-depth-1-face)) 526 527 (fontified t) 527 531 (fontified t) 531 533 (fontified t face font-lock-keyword-face) 533 535 (fontified t face font-lock-keyword-face) 535 537 (fontified t) 537 545 (fontified t) 545 551 (fontified t face font-lock-keyword-face) 551 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-1-face)) 553 562 (fontified t face font-lock-string-face) 562 579 (fontified t) 579 580 (fontified t face (rainbow-delimiters-depth-2-face)) 580 589 (fontified t face font-lock-string-face) 589 590 (fontified t face (rainbow-delimiters-depth-2-face)) 590 591 (fontified t face (rainbow-delimiters-depth-1-face)) 591 596 (fontified t)) . 299) (undo-tree-id61 . -596) (undo-tree-id62 . -596) (undo-tree-id63 . -526) (undo-tree-id64 . -596) (undo-tree-id65 . -596) (undo-tree-id66 . -596) (undo-tree-id67 . -13) (undo-tree-id68 . -596)) nil (25729 52702 556395 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 829 . 830) (nil fontified nil 820 . 830) (nil fontified nil 814 . 820) (nil fontified nil 809 . 814) (nil fontified nil 805 . 809) (nil fontified nil 802 . 805) (nil fontified nil 801 . 802) (nil fontified nil 790 . 801) (nil fontified nil 789 . 790) (nil fontified nil 788 . 789) (nil fontified nil 787 . 788) (nil fontified nil 786 . 787) (nil fontified nil 767 . 786) (nil fontified nil 763 . 767) (nil fontified nil 758 . 763) (nil fontified nil 757 . 758) (nil fontified nil 741 . 757) (nil fontified nil 740 . 741) (nil fontified nil 737 . 740) (nil fontified nil 734 . 737) (nil fontified nil 733 . 734) (nil fontified nil 721 . 733) (nil fontified nil 720 . 721) (nil fontified nil 719 . 720) (nil fontified nil 695 . 719) (nil fontified nil 694 . 695) (nil fontified nil 693 . 694) (nil fontified nil 692 . 693) (nil fontified nil 691 . 692) (nil fontified nil 651 . 691) (nil fontified nil 649 . 651) (nil fontified nil 637 . 649) (nil fontified nil 636 . 637) (nil fontified nil 635 . 636) (nil fontified nil 616 . 635) (nil fontified nil 603 . 616) (nil fontified nil 551 . 603) (nil fontified nil 527 . 551) (nil fontified nil 513 . 527) (nil fontified nil 512 . 513) (nil fontified nil 509 . 512) (nil fontified nil 508 . 509) (nil fontified nil 484 . 508) (nil fontified nil 483 . 484) (nil fontified nil 482 . 483) (nil fontified nil 481 . 482) (nil fontified nil 480 . 481) (nil fontified nil 448 . 480) (nil fontified nil 446 . 448) (nil fontified nil 439 . 446) (nil fontified nil 436 . 439) (nil fontified nil 417 . 436) (nil fontified nil 415 . 417) (nil fontified nil 403 . 415) (nil fontified nil 402 . 403) (nil fontified nil 395 . 402) (nil fontified nil 394 . 395) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 377 . 391) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 367 . 370) (nil fontified nil 358 . 367) (nil fontified nil 353 . 358) (nil fontified nil 352 . 353) (nil fontified nil 348 . 352) (nil fontified nil 347 . 348) (nil fontified nil 311 . 347) (nil fontified nil 303 . 311) (nil fontified nil 299 . 303) (299 . 830)) nil (25729 52702 556382 429000) 0 nil])
([nil nil ((#("port" 0 4 (fontified t face font-lock-variable-name-face)) . 303) (undo-tree-id59 . -4) (undo-tree-id60 . -4)) nil (25729 52702 556364 413000) 0 nil])
([nil nil ((303 . 306)) nil (25729 52702 556361 309000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -357) (undo-tree-id55 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -358) (undo-tree-id56 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -359) (undo-tree-id57 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -360) (undo-tree-id58 . -1) 361) nil (25729 52702 556359 496000) 0 nil])
([nil nil ((357 . 360)) nil (25729 52702 556353 365000) 0 nil])
([nil nil ((#("port" 0 4 (fontified t)) . -808) (812 . 815) (#("port" 0 4 (fontified t)) . -765) (769 . 772) (#("port" 0 4 (fontified nil)) . -736) (740 . 743) (712 . 715) (#("url" 0 3 (fontified nil)) . -712) (#("Port" 0 4 (fontified nil face font-lock-string-face)) . -712) (716 . 719) (#("port" 0 4 (fontified t)) . -697) (701 . 704) (#("port" 0 4 (fontified t)) . -650) (654 . 657) (#("port" 0 4 (fontified nil)) . -488) (492 . 495) (#("port" 0 4 (fontified t)) . -465) (469 . 472) (#("port" 0 4 (fontified t)) . -444) (448 . 451) (#("port" 0 4 (fontified t)) . -414) (418 . 421) (#("port" 0 4 (fontified nil)) . -403) (407 . 410) (#("port" 0 4 (fontified t)) . -380) (384 . 387) 376) nil (25729 52702 556350 216000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -593) 619) nil (25729 52702 556343 244000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -388) (undo-tree-id52 . -1) (#("0" 0 1 (fontified t)) . -389) (undo-tree-id53 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -390) (undo-tree-id54 . -1) 391) nil (25729 52702 556341 499000) 0 nil])
([nil nil ((#("['query'] " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 8 (fontified t face font-lock-string-face) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 10 (fontified t)) . 388) (undo-tree-id50 . -10) (undo-tree-id51 . -10)) nil (25729 52702 556336 546000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -307) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -308) (undo-tree-id48 . -1) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -309) (undo-tree-id49 . -1) 310) nil (25729 52702 556332 740000) 0 nil])
([nil nil ((307 . 309)) nil (25729 52702 556327 790000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -307) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -308) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 309) nil (25729 52702 556326 445000) 0 nil])
([nil nil ((307 . 311)) nil (25729 52702 556320 868000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -310) (undo-tree-id42 . -1) 311) nil (25729 52702 556319 738000) 0 nil])
([nil nil ((354 . 358) (#("    " 0 4 (fontified nil)) . 353) (undo-tree-id41 . -4) (352 . 358)) nil (25729 52702 556317 151000) 0 nil])
([nil nil ((353 . 358)) nil (25729 52702 556314 346000) 0 nil])
([nil nil ((358 . 366)) nil (25729 52702 556313 146000) 0 nil])
([nil nil ((366 . 369)) nil (25729 52702 556312 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -368) (undo-tree-id40 . -1) 369) nil (25729 52702 556311 4000) 0 nil])
([nil nil ((368 . 370)) nil (25729 52702 556308 38000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -369) (undo-tree-id39 . -1) 370) nil (25729 52702 818827 816000) 0 nil])
([nil nil ((353 . 357)) nil (25729 53105 448578 376000) 0 nil] [nil nil ((369 . 378)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 369) (undo-tree-id88 . -9) (undo-tree-id89 . -9) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -1) (undo-tree-id97 . -9) (undo-tree-id98 . -9) (undo-tree-id99 . -9) (undo-tree-id100 . -9) (undo-tree-id101 . -9) (undo-tree-id102 . -9)) (25729 52702 556512 410000) 0 nil])
([nil nil ((357 . 361)) nil (25729 53105 448577 519000) 0 nil])
([nil nil ((378 . 381)) ((#("url" 0 3 (fontified t)) . 378) (undo-tree-id86 . -3) (undo-tree-id87 . -3)) (25729 52702 556286 590000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -359) (undo-tree-id160 . -1) (#("_" 0 1 (fontified t)) . -360) (undo-tree-id161 . -1) 361) nil (25729 53105 448576 180000) 0 nil])
nil
([nil nil ((359 . 362)) nil (25729 53105 448572 957000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -361) (undo-tree-id159 . -1) 362) nil (25729 53105 448571 780000) 0 nil])
([nil nil ((361 . 365)) nil (25729 53105 448569 393000) 0 nil])
([nil nil ((365 . 367)) nil (25729 53105 448568 521000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -366) (undo-tree-id158 . -1) 367) nil (25729 53105 448567 397000) 0 nil])
([nil nil ((366 . 371)) nil (25729 53105 448565 68000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t)) . -368) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("R" 0 1 (fontified t)) . -369) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("L" 0 1 (fontified t)) . -370) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 371) nil (25729 53105 448563 288000) 0 nil])
([nil nil ((368 . 369)) nil (25729 53105 448555 422000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -368) (undo-tree-id151 . -1) 369) nil (25729 53105 448554 126000) 0 nil])
([nil nil ((368 . 372)) nil (25729 53105 448551 975000) 0 nil])
([nil nil ((372 . 373)) nil (25729 53105 448550 788000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -372) (undo-tree-id150 . -1) 373) nil (25729 53105 448549 573000) 0 nil])
([nil nil ((373 . 380) (372 . 374) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -372) (372 . 373)) nil (25729 53105 448547 217000) 0 nil])
([nil nil ((399 . 401) (398 . 400) (#("{" 0 1 (fontified nil)) . -398) (381 . 399)) nil (25729 53105 448545 375000) 0 nil])
([nil nil ((400 . 409)) nil (25729 53105 448543 771000) 0 nil])
([nil nil ((410 . 411)) nil (25729 53105 448542 896000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -410) (undo-tree-id149 . -1) 411) nil (25729 53105 448541 778000) 0 nil])
([nil nil ((410 . 417)) nil (25729 53105 448539 688000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -412) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("r" 0 1 (fontified t)) . -413) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("u" 0 1 (fontified t)) . -414) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("e" 0 1 (fontified t)) . -415) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -416) (undo-tree-id148 . -1) 417) nil (25729 53105 448537 597000) 0 nil])
([nil nil ((412 . 417)) nil (25729 53105 448527 810000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -416) (undo-tree-id140 . -1) 417) nil (25729 53105 448526 658000) 0 nil])
([nil nil ((#("    if url_raw:
    
    url_info = [{},{}]
    url_info= url
    if url_raw:
        for p_row in url_raw:
            url_info[1][p_row.transurl_protocol] = {'Service Name': p_row.service_name,
                                                    'Description': p_row.description}
            if p_row.url_range:
                p_row[1][p_row.transurl_protocol]['Url Range'] = str(p_row.url_range)
    else:
        url_info[0]['not_found'] = True
    return url_info" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t face whitespace-trailing) 20 21 (fontified t) 21 25 (fontified t) 25 28 (fontified t face font-lock-variable-name-face) 28 33 (fontified t face font-lock-variable-name-face) 33 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-1-face)) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-2-face)) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 44 (fontified t) 44 48 (fontified t) 48 51 (fontified t face font-lock-variable-name-face) 51 56 (fontified t face font-lock-variable-name-face) 56 58 (fontified t) 58 61 (fontified t) 61 62 (fontified t) 62 66 (fontified t) 66 68 (fontified t face font-lock-keyword-face) 68 69 (fontified t) 69 72 (fontified t) 72 78 (fontified t) 78 86 (fontified t) 86 89 (fontified t face font-lock-keyword-face) 89 96 (fontified t) 96 98 (fontified t face font-lock-keyword-face) 98 99 (fontified t) 99 102 (fontified t) 102 108 (fontified t) 108 120 (fontified t) 120 123 (fontified t) 123 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-1-face)) 131 132 (fontified t face (rainbow-delimiters-depth-1-face)) 132 143 (fontified t) 143 146 (fontified t) 146 155 (fontified t) 155 156 (fontified t face (rainbow-delimiters-depth-1-face)) 156 159 (fontified t) 159 160 (fontified t face (rainbow-delimiters-depth-1-face)) 160 174 (fontified t face font-lock-string-face) 174 196 (fontified t) 196 198 (fontified t) 198 248 (fontified t) 248 261 (fontified t face font-lock-string-face) 261 280 (fontified t) 280 281 (fontified t face (rainbow-delimiters-depth-1-face)) 281 282 (fontified t) 282 294 (fontified t) 294 296 (fontified t face font-lock-keyword-face) 296 303 (fontified t) 303 306 (fontified t) 306 314 (fontified t) 314 335 (fontified t) 335 336 (fontified t face (rainbow-delimiters-depth-1-face)) 336 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 339 (fontified t face (rainbow-delimiters-depth-1-face)) 339 350 (fontified t) 350 353 (fontified t) 353 362 (fontified t) 362 363 (fontified t face (rainbow-delimiters-depth-1-face)) 363 364 (fontified t face (rainbow-delimiters-depth-1-face)) 364 365 (fontified t face font-lock-string-face) 365 368 (fontified t face font-lock-string-face) 368 375 (fontified t face font-lock-string-face) 375 376 (fontified t face (rainbow-delimiters-depth-1-face)) 376 379 (fontified t) 379 382 (fontified t face font-lock-builtin-face) 382 383 (fontified t face (rainbow-delimiters-depth-1-face)) 383 389 (fontified t) 389 392 (fontified t) 392 398 (fontified t) 398 399 (fontified t face (rainbow-delimiters-depth-1-face)) 399 400 (fontified t) 400 404 (fontified t) 404 408 (fontified t face font-lock-keyword-face) 408 410 (fontified t) 410 418 (fontified t) 418 421 (fontified t) 421 426 (fontified t) 426 427 (fontified t face (rainbow-delimiters-depth-1-face)) 427 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-1-face)) 429 430 (fontified t face (rainbow-delimiters-depth-1-face)) 430 439 (fontified t face font-lock-string-face) 439 440 (fontified t face font-lock-string-face) 440 441 (fontified t face font-lock-string-face) 441 442 (fontified t face (rainbow-delimiters-depth-1-face)) 442 445 (fontified t) 445 446 (fontified t face font-lock-constant-face) 446 449 (fontified t face font-lock-constant-face) 449 450 (fontified t) 450 452 (fontified t) 452 454 (fontified t) 454 460 (fontified t face font-lock-keyword-face) 460 461 (fontified t) 461 462 (fontified t) 462 464 (fontified t) 464 466 (fontified t) 466 468 (fontified t) 468 469 (rear-nonsticky t fontified t)) . 418) (undo-tree-id133 . -469) (undo-tree-id134 . -61) (undo-tree-id135 . -43) (undo-tree-id136 . -16) (undo-tree-id137 . -61) (undo-tree-id138 . -56) (undo-tree-id139 . -469)) nil (25729 53105 448523 846000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -417) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 418) nil (25729 53105 448514 90000) 0 nil])
([nil nil ((1719 . 1732)) nil (25729 53105 448504 463000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1849 . 1850) (nil fontified nil 1849 . 1850) (nil fontified nil 1845 . 1849) (nil fontified nil 1843 . 1845) (nil fontified nil 1832 . 1843) (nil fontified nil 1831 . 1832) (nil fontified nil 1830 . 1831) (nil fontified nil 1826 . 1830) (nil fontified nil 1817 . 1826) (nil fontified nil 1815 . 1817) (nil fontified nil 1814 . 1815) (nil fontified nil 1813 . 1814) (nil fontified nil 1806 . 1813) (nil fontified nil 1805 . 1806) (nil fontified nil 1801 . 1805) (nil fontified nil 1798 . 1801) (nil fontified nil 1790 . 1798) (nil fontified nil 1786 . 1790) (nil fontified nil 1785 . 1786) (nil fontified nil 1784 . 1785) (nil fontified nil 1780 . 1784) (nil fontified nil 1779 . 1780) (nil fontified nil 1743 . 1779) (nil fontified nil 1739 . 1743) (nil fontified nil 1736 . 1739) (nil fontified nil 1732 . 1736) (1732 . 1850)) nil (25729 53105 448502 115000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1732) 1784) nil (25729 53105 448495 178000) 0 nil])
([nil nil ((1782 . 1794) (#("    " 0 4 (fontified t)) . 1782) 1842) nil (25729 53105 448493 652000) 0 nil])
([nil nil ((#("urlhaus_search(src_url)" 0 13 (fontified t) 13 14 (rear-nonsticky t fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face))) . 1874) (undo-tree-id123 . -23) (undo-tree-id124 . -23) (undo-tree-id125 . -23)) nil (25729 53105 448491 255000) 0 nil])
([nil nil ((nil fontified nil 1922 . 1923) (nil fontified nil 1918 . 1922) (nil fontified nil 1916 . 1918) (nil fontified nil 1905 . 1916) (nil fontified nil 1904 . 1905) (nil fontified nil 1903 . 1904) (nil fontified nil 1899 . 1903) (nil fontified nil 1890 . 1899) (nil fontified nil 1888 . 1890) (nil fontified nil 1887 . 1888) (nil fontified nil 1886 . 1887) (nil fontified nil 1879 . 1886) (nil fontified nil 1878 . 1879) (nil fontified nil 1874 . 1878) (1874 . 1923)) nil (25729 53105 448371 249000) 0 nil])
([nil nil ((#("
            url_info = dict(url_raw) if url_raw else {'not_found': True}" 0 1 (fontified t) 1 13 (fontified t) 13 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 28 (fontified t face font-lock-builtin-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-1-face)) 37 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 49 (fontified t) 49 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 66 (fontified t face font-lock-string-face) 66 68 (fontified t) 68 72 (fontified t face font-lock-constant-face) 72 73 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 1781) (undo-tree-id118 . -73) (undo-tree-id119 . -1) (undo-tree-id120 . -73) (undo-tree-id121 . -73) (undo-tree-id122 . -73)) nil (25729 53105 448367 117000) 0 nil])
([nil nil ((#("
def urlhaus_search(url):
    url_raw = IANAPortsModel.find_specific_port(port)
    url_info = dict(url_raw) if url_raw else {'not_found': True}
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 19 (fontified t face font-lock-function-name-face) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 26 (fontified t) 26 30 (fontified t) 30 33 (fontified t face font-lock-variable-name-face) 33 37 (fontified t face font-lock-variable-name-face) 37 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-1-face)) 74 78 (fontified t) 78 79 (fontified t face (rainbow-delimiters-depth-1-face)) 79 80 (fontified t) 80 84 (fontified t) 84 92 (fontified t face font-lock-variable-name-face) 92 95 (fontified t) 95 99 (fontified t face font-lock-builtin-face) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 107 (fontified t) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 109 (fontified t) 109 111 (fontified t face font-lock-keyword-face) 111 120 (fontified t) 120 124 (fontified t face font-lock-keyword-face) 124 125 (fontified t) 125 126 (fontified t face (rainbow-delimiters-depth-1-face)) 126 137 (fontified t face font-lock-string-face) 137 139 (fontified t) 139 143 (fontified t face font-lock-constant-face) 143 144 (fontified t face (rainbow-delimiters-depth-1-face)) 144 145 (fontified t)) . 273) (undo-tree-id106 . -145) (undo-tree-id107 . -26) (undo-tree-id108 . -26) (undo-tree-id109 . -143) (undo-tree-id110 . -144) (undo-tree-id111 . -144) (undo-tree-id112 . -1) (undo-tree-id113 . -144) (undo-tree-id114 . -144) (undo-tree-id115 . -144) (undo-tree-id116 . -144) (undo-tree-id117 . -145)) nil (25729 53105 448360 433000) 0 nil])
([nil nil ((128 . 130)) nil (25729 53105 448346 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 141 . 142) (nil fontified nil 130 . 142) (130 . 142)) nil (25729 53105 448344 811000) 0 nil])
([nil nil ((#("IANAPortsModel" 0 14 (fontified t)) . 1611) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14)) nil (25729 53105 448342 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1622 . 1623) (nil fontified nil 1611 . 1623) (1611 . 1623)) nil (25729 53105 448324 884000) 0 nil])
([nil nil ((#("
import requests" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 16 (fontified t)) . 234) (undo-tree-id167 . -16) (undo-tree-id168 . -1) (undo-tree-id169 . -16) (t 25729 53105 454685 748000)) nil (25729 53116 365248 841000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -247) (undo-tree-id166 . -1) 248) nil (25729 53116 365243 136000) 0 nil])
([nil nil ((#("
import base6" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 13 (fontified t)) . 234) (undo-tree-id162 . -13) (undo-tree-id163 . -1) (undo-tree-id164 . -13) (undo-tree-id165 . -13)) nil (25729 53116 365236 296000) 0 nil])
([nil nil ((1767 . 1768) (t 25729 53116 370752 852000)) nil (25729 55709 574288 463000) 0 nil])
([nil nil ((#("find_specific_port" 0 17 (fontified t) 17 18 (fontified t)) . 1594) (undo-tree-id174 . -18) (undo-tree-id175 . -18) (undo-tree-id176 . -18) (t 25729 55709 589768 946000)) nil (25729 55780 240263 42000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1610 . 1611) (nil fontified nil 1594 . 1611) (1594 . 1611)) nil (25729 55780 240256 813000) 0 nil])
([nil nil ((#("port" 0 4 (fontified t)) . 1612) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4)) nil (25729 55780 240252 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1618 . 1619) (nil fontified nil 1612 . 1619) (1612 . 1619)) nil (25729 55780 240225 305000) 0 nil])
([nil nil ((#(" 'not_found': True" 0 1 (fontified t) 1 12 (fontified t face font-lock-string-face) 12 14 (fontified t) 14 16 (fontified t face font-lock-constant-face) 16 18 (fontified t face font-lock-constant-face)) . 1764) (undo-tree-id208 . -18) (undo-tree-id209 . -5) (undo-tree-id210 . -18) (undo-tree-id211 . -18) (t 25729 55780 250788 759000)) nil (25729 56192 914079 180000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1763) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 1764) nil (25729 56192 914055 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1779 . 1780) (nil fontified nil 1776 . 1780) (nil fontified nil 1774 . 1776) (nil fontified nil 1763 . 1774) (1763 . 1780)) nil (25729 56192 914036 326000) 0 nil])
([nil nil ((1763 . 1765)) nil (25729 56192 914029 693000) 0 nil])
([nil nil ((#(" 'not_found': True" 0 1 (fontified t) 1 12 (fontified t face font-lock-string-face) 12 14 (fontified t) 14 17 (fontified t face font-lock-constant-face) 17 18 (fontified t rear-nonsticky t face font-lock-constant-face)) . 1764) (undo-tree-id200 . -18) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -18)) nil (25729 56192 914015 439000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1763) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 1764) nil (25729 56192 913059 731000) 0 nil])
([nil nil ((1763 . 1765)) nil (25729 56192 913051 639000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1764) (undo-tree-id195 . -1) 1765) nil (25729 56192 913049 579000) 0 nil])
([nil nil ((1764 . 1771)) nil (25729 56192 913046 67000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1768) (undo-tree-id192 . -1) (#("r" 0 1 (fontified t)) . -1769) (undo-tree-id193 . -1) (#(" " 0 1 (fontified t)) . -1770) (undo-tree-id194 . -1) 1771) nil (25729 56192 913041 365000) 0 nil])
([nil nil ((1768 . 1771)) nil (25729 56192 912377 311000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1765) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("r" 0 1 (fontified t)) . -1766) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("r" 0 1 (fontified defer)) . -1767) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("o" 0 1 (fontified defer)) . -1768) (undo-tree-id189 . -1) (#("r" 0 1 (fontified t)) . -1769) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t)) . -1770) (undo-tree-id191 . -1) 1771) nil (25729 56192 912351 499000) 0 nil])
([nil nil ((1765 . 1767)) nil (25729 56192 912310 348000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1763) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#(" " 0 1 (fontified t)) . -1764) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1765) (undo-tree-id181 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1766) (undo-tree-id182 . -1) 1767) nil (25729 56192 912297 547000) 0 nil])
([nil nil ((1645 . 1647) (t 25729 56192 932969 265000)) nil (25729 57151 674730 823000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1645) (undo-tree-id218 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1646) (undo-tree-id219 . -1) 1647) nil (25729 57151 674727 521000) 0 nil])
([nil nil ((1640 . 1642) (#("{" 0 1 (fontified nil)) . -1640) (1640 . 1641)) nil (25729 57151 674719 758000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1641)) nil (25729 57151 674716 607000) 0 nil])
([nil nil ((1654 . 1655)) nil (25729 57151 674714 529000) 0 nil])
([nil nil ((1641 . 1643)) nil (25729 57151 674712 286000) 0 nil])
([nil nil ((1642 . 1650)) nil (25729 57151 674710 251000) 0 nil])
([nil nil ((1651 . 1653)) nil (25729 57151 674708 120000) 0 nil])
([nil nil ((#("{'url_info': " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 11 (fontified t face font-lock-string-face) 11 13 (fontified t)) . 1640) (undo-tree-id214 . -13) (undo-tree-id215 . -13) (undo-tree-id216 . -13) (undo-tree-id217 . -13)) nil (25729 57151 674704 819000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -1653) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 1654) nil (25729 57151 674689 23000) 0 nil])
([nil nil ((1763 . 1767) (t 25729 57151 683461 987000)) nil (25729 57264 354507 334000) 0 nil])
([nil nil ((1766 . 1772)) nil (25729 57264 354505 870000) 0 nil])
([nil nil ((1773 . 1777)) nil (25729 57264 354504 865000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1776) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 1777) nil (25729 57264 354503 311000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1775) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 1776) nil (25729 57264 354495 479000) 0 nil])
([nil nil ((1775 . 1780)) nil (25729 57264 354485 863000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -1779) (undo-tree-id220 . -1) 1780) nil (25729 57264 354478 39000) 0 nil])
nil
