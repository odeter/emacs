(undo-tree-save-format-version . 1)
"0529e8ae7ee2fa7d2abefff7e6a7b3016954f9a5"
[nil nil nil nil (25814 5646 630649 986000) 0 nil]
([nil nil ((#("          <!-- <v-col class=\"pa-0 ma-0 pr-3\" sm=\"2\" md=\"2\" cols=\"2\" align=\"end\">
               <v-item-group>
               <v-tooltip bottom>
               <template v-slot:activator=\"{ on, attrs }\">
               <v-btn
               v-bind=\"attrs\"
               v-on=\"on\"
               icon
               right
               class=\"buttonfilter\"
               color=\"\"
               @click.stop=\"\"
               @click=\"get_filter_selections();filterSelSaveDialog_open()\"
               >
               <v-icon>mdi-content-save</v-icon>
               </v-btn>
               </template>
               <span>{{ $t('AnalysisNetwork.saveFilterSelectionTooltip') }}</span>
               </v-tooltip>
               </v-item-group>
               </v-col> -->" 10 11 (tag-type comment tag-beg 0 font-lock-face web-mode-comment-face) 11 176 (tag-type comment font-lock-face web-mode-comment-face) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 177 178 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 178 179 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 179 180 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 180 181 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 181 182 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 182 183 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 183 184 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 184 185 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 185 186 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 186 188 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 188 190 (block-side t tag-type comment) 190 191 (block-side t tag-type comment face web-mode-variable-name-face) 191 192 (block-side t tag-type comment face web-mode-variable-name-face) 192 194 (block-side t tag-type comment) 194 195 (block-side t tag-type comment face web-mode-variable-name-face) 195 196 (block-side t tag-type comment face web-mode-variable-name-face) 196 197 (block-side t tag-type comment face web-mode-variable-name-face) 197 198 (block-side t tag-type comment face web-mode-variable-name-face) 198 199 (block-side t tag-type comment face web-mode-variable-name-face) 199 201 (block-side t tag-type comment) 201 202 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 202 427 (tag-type comment font-lock-face web-mode-comment-face) 427 428 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 428 429 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 429 430 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 430 431 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 431 432 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 432 433 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 433 435 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 435 456 (block-side t tag-type comment face web-mode-function-call-face) 456 459 (block-side t tag-type comment) 459 483 (block-side t tag-type comment face web-mode-function-call-face) 483 485 (block-side t tag-type comment) 485 486 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 486 625 (tag-type comment font-lock-face web-mode-comment-face) 625 626 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 626 627 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 627 629 (block-side t tag-type comment) 629 630 (block-side t tag-type comment face web-mode-variable-name-face) 630 631 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 631 632 (block-side t tag-type comment) 632 633 (block-side t tag-type comment face web-mode-variable-name-face) 633 634 (block-side t tag-type comment face web-mode-variable-name-face) 634 635 (block-side t tag-type comment face web-mode-variable-name-face) 635 636 (block-side t tag-type comment face web-mode-variable-name-face) 636 637 (block-side t tag-type comment face web-mode-variable-name-face) 637 638 (block-side t tag-type comment face web-mode-variable-name-face) 638 639 (block-side t tag-type comment face web-mode-variable-name-face) 639 640 (block-side t tag-type comment face web-mode-variable-name-face) 640 641 (block-side t tag-type comment face web-mode-variable-name-face) 641 642 (block-side t tag-type comment face web-mode-variable-name-face) 642 643 (block-side t tag-type comment face web-mode-variable-name-face) 643 644 (block-side t tag-type comment face web-mode-variable-name-face) 644 645 (block-side t tag-type comment face web-mode-variable-name-face) 645 646 (block-side t tag-type comment face web-mode-variable-name-face) 646 647 (block-side t tag-type comment face web-mode-variable-name-face) 647 648 (block-side t tag-type comment) 648 649 (block-side t tag-type comment face web-mode-variable-name-face) 649 650 (block-side t tag-type comment face web-mode-variable-name-face) 650 651 (block-side t tag-type comment face web-mode-variable-name-face) 651 652 (block-side t tag-type comment face web-mode-variable-name-face) 652 653 (block-side t tag-type comment face web-mode-variable-name-face) 653 654 (block-side t tag-type comment face web-mode-variable-name-face) 654 655 (block-side t tag-type comment face web-mode-variable-name-face) 655 656 (block-side t tag-type comment face web-mode-variable-name-face) 656 657 (block-side t tag-type comment face web-mode-variable-name-face) 657 658 (block-side t tag-type comment face web-mode-variable-name-face) 658 659 (block-side t tag-type comment face web-mode-variable-name-face) 659 660 (block-side t tag-type comment face web-mode-variable-name-face) 660 661 (block-side t tag-type comment face web-mode-variable-name-face) 661 662 (block-side t tag-type comment face web-mode-variable-name-face) 662 663 (block-side t tag-type comment face web-mode-variable-name-face) 663 664 (block-side t tag-type comment face web-mode-variable-name-face) 664 665 (block-side t tag-type comment face web-mode-variable-name-face) 665 666 (block-side t tag-type comment face web-mode-variable-name-face) 666 667 (block-side t tag-type comment face web-mode-variable-name-face) 667 668 (block-side t tag-type comment face web-mode-variable-name-face) 668 669 (block-side t tag-type comment face web-mode-variable-name-face) 669 670 (block-side t tag-type comment face web-mode-variable-name-face) 670 671 (block-side t tag-type comment face web-mode-variable-name-face) 671 672 (block-side t tag-type comment face web-mode-variable-name-face) 672 673 (block-side t tag-type comment face web-mode-variable-name-face) 673 674 (block-side t tag-type comment face web-mode-variable-name-face) 674 675 (block-side t tag-type comment) 675 676 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 676 677 (block-side t tag-type comment) 677 678 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 678 679 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 679 772 (tag-type comment font-lock-face web-mode-comment-face) 772 773 (tag-type comment tag-end t font-lock-face web-mode-comment-face)) . 6233) (undo-tree-id25 . -81) (undo-tree-id26 . -773) (undo-tree-id27 . -745) (undo-tree-id28 . -773) (undo-tree-id29 . -745) (undo-tree-id30 . -773) (t 25810 18327 743777 784000)) nil (25814 5646 630647 530000) 0 nil])
([nil nil (("
" . -6232) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 6233) nil (25814 5646 630637 893000) 0 nil])
([nil nil ((#("  <!-- <v-divider></v-divider>
         <v-row class=\"pt-3\">
         <v-col cols=\"12\" class=\"pa-0 ma-0\">
         <v-row class=\"pa-0 ma-0\">
         <v-col class=\"pa-0 ma-0\" sm=\"9\" md=\"9\" cols=\"9\" align=\"start\">
         <v-subheader v-if=\"check_active_filter\">{{ $t('AnalysisNetwork.filterPreview' ) + ' -&nbsp;'}}

         <v-tooltip bottom>
         <template v-slot:activator=\"{ on, attrs }\">
         <span
         v-bind=\"attrs\"
         v-on=\"on\"
         class=\"blue--text text-truncate\"
         style=\"width:70%;\">
         {{active[0].name}}
         </span>
         </template>
         <span style=\"word-break: break-all;\">{{active[0].name}}</span>
         </v-tooltip>

         </v-subheader>
         <v-subheader v-else>{{ $t('AnalysisNetwork.filterPreview' )}}</v-subheader>
         </v-col>
         <v-col sm=\"3\" md=\"3\" cols=\"1\" class=\"pa-0 ma-0\" align=\"end\">
         <v-item-group>
         <v-tooltip bottom>
         <template v-slot:activator=\"{ on, attrs }\">
         <v-btn
         v-bind=\"attrs\"
         v-on=\"on\"
         icon
         right
         :disabled=\"!check_active_filter\"
         class=\"buttonfilter\"
         color=\"\"
         @click.stop=\"\"
         @click=\"insert_filter()\"
         >
         <v-icon>mdi-content-paste</v-icon>
         </v-btn>
         </template>
         <span>{{ $t('AnalysisNetwork.insertTooltip') }}</span>
         </v-tooltip>

         <v-tooltip bottom>
         <template v-slot:activator=\"{ on, attrs }\">
         <v-btn
         v-bind=\"attrs\"
         v-on=\"on\"
         icon
         right
         :disabled=\"!check_active_filter\"
         class=\"buttonfilter\"
         @click.stop=\"\"
         @click=\"open_filter_rename_dialog()\"
         >
         <v-icon>mdi-pen</v-icon>
         </v-btn>
         </template>
         <span>{{ $t('AnalysisNetwork.renameTooltip') }}</span>
         </v-tooltip>

         <v-tooltip bottom>
         <template v-slot:activator=\"{ on, attrs }\">
         <v-btn
         v-bind=\"attrs\"
         v-on=\"on\"
         icon
         right
         :disabled=\"!check_active_filter\"
         class=\"buttonfilter\"
         @click.stop=\"\"
         @click=\"deleteDialog=true\"
         >
         <v-icon>mdi-delete</v-icon>
         </v-btn>
         </template>
         <span>{{ $t('AnalysisNetwork.deleteTooltip') }}</span>
         </v-tooltip>
         </v-item-group>
         </v-col>
         </v-row>
         <v-row class=\"pa-0 ma-0\">
         <v-col class=\"pa-0 ma-0\">
         <div class=\"filter_div\">
         <span v-if=\"check_active_filter\" style=\"font-family: Consolas;\">{{filtertostring(active[0].filter)}}</span>
         </div>
         </v-col>
         </v-row>
         </v-col>
         </v-row> -->" 2 3 (tag-type comment tag-beg 0 font-lock-face web-mode-comment-face) 3 262 (tag-type comment font-lock-face web-mode-comment-face) 262 263 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 263 264 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 264 266 (block-side t tag-type comment) 266 267 (block-side t tag-type comment face web-mode-variable-name-face) 267 268 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 268 269 (block-side t tag-type comment) 269 270 (block-side t tag-type comment face web-mode-variable-name-face) 270 271 (block-side t tag-type comment face web-mode-variable-name-face) 271 272 (block-side t tag-type comment face web-mode-variable-name-face) 272 273 (block-side t tag-type comment face web-mode-variable-name-face) 273 274 (block-side t tag-type comment face web-mode-variable-name-face) 274 275 (block-side t tag-type comment face web-mode-variable-name-face) 275 276 (block-side t tag-type comment face web-mode-variable-name-face) 276 277 (block-side t tag-type comment face web-mode-variable-name-face) 277 278 (block-side t tag-type comment face web-mode-variable-name-face) 278 279 (block-side t tag-type comment face web-mode-variable-name-face) 279 280 (block-side t tag-type comment face web-mode-variable-name-face) 280 281 (block-side t tag-type comment face web-mode-variable-name-face) 281 282 (block-side t tag-type comment face web-mode-variable-name-face) 282 283 (block-side t tag-type comment face web-mode-variable-name-face) 283 284 (block-side t tag-type comment face web-mode-variable-name-face) 284 285 (block-side t tag-type comment) 285 286 (block-side t tag-type comment face web-mode-variable-name-face) 286 287 (block-side t tag-type comment face web-mode-variable-name-face) 287 288 (block-side t tag-type comment face web-mode-variable-name-face) 288 289 (block-side t tag-type comment face web-mode-variable-name-face) 289 290 (block-side t tag-type comment face web-mode-variable-name-face) 290 291 (block-side t tag-type comment face web-mode-variable-name-face) 291 292 (block-side t tag-type comment face web-mode-variable-name-face) 292 293 (block-side t tag-type comment face web-mode-variable-name-face) 293 294 (block-side t tag-type comment face web-mode-variable-name-face) 294 295 (block-side t tag-type comment face web-mode-variable-name-face) 295 296 (block-side t tag-type comment face web-mode-variable-name-face) 296 297 (block-side t tag-type comment face web-mode-variable-name-face) 297 298 (block-side t tag-type comment face web-mode-variable-name-face) 298 300 (block-side t tag-type comment) 300 301 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 301 308 (block-side t tag-type comment) 308 309 (block-side t tag-type comment face web-mode-variable-name-face) 309 310 (block-side t tag-type comment face web-mode-variable-name-face) 310 311 (block-side t tag-type comment face web-mode-variable-name-face) 311 312 (block-side t tag-type comment face web-mode-variable-name-face) 312 314 (block-side t tag-type comment) 314 315 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 315 316 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 316 371 (tag-type comment font-lock-face web-mode-comment-face) 371 372 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 372 373 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 373 374 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 374 375 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 375 376 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 376 377 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 377 378 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 378 379 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 379 380 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 380 381 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 381 383 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 383 385 (block-side t tag-type comment) 385 386 (block-side t tag-type comment face web-mode-variable-name-face) 386 387 (block-side t tag-type comment face web-mode-variable-name-face) 387 389 (block-side t tag-type comment) 389 390 (block-side t tag-type comment face web-mode-variable-name-face) 390 391 (block-side t tag-type comment face web-mode-variable-name-face) 391 392 (block-side t tag-type comment face web-mode-variable-name-face) 392 393 (block-side t tag-type comment face web-mode-variable-name-face) 393 394 (block-side t tag-type comment face web-mode-variable-name-face) 394 396 (block-side t tag-type comment) 396 397 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 397 537 (tag-type comment font-lock-face web-mode-comment-face) 537 538 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 538 539 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 539 540 (block-side t tag-type comment face web-mode-variable-name-face) 540 541 (block-side t tag-type comment face web-mode-variable-name-face) 541 542 (block-side t tag-type comment face web-mode-variable-name-face) 542 543 (block-side t tag-type comment face web-mode-variable-name-face) 543 544 (block-side t tag-type comment face web-mode-variable-name-face) 544 545 (block-side t tag-type comment face web-mode-variable-name-face) 545 546 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 546 547 (block-side t tag-type comment) 547 548 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 548 549 (block-side t tag-type comment) 549 550 (block-side t tag-type comment face web-mode-variable-name-face) 550 551 (block-side t tag-type comment face web-mode-variable-name-face) 551 552 (block-side t tag-type comment face web-mode-variable-name-face) 552 553 (block-side t tag-type comment face web-mode-variable-name-face) 553 554 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 554 555 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 555 640 (tag-type comment font-lock-face web-mode-comment-face) 640 641 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 641 642 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 642 643 (block-side t tag-type comment face web-mode-variable-name-face) 643 644 (block-side t tag-type comment face web-mode-variable-name-face) 644 645 (block-side t tag-type comment face web-mode-variable-name-face) 645 646 (block-side t tag-type comment face web-mode-variable-name-face) 646 647 (block-side t tag-type comment face web-mode-variable-name-face) 647 648 (block-side t tag-type comment face web-mode-variable-name-face) 648 649 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 649 650 (block-side t tag-type comment) 650 651 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 651 652 (block-side t tag-type comment) 652 653 (block-side t tag-type comment face web-mode-variable-name-face) 653 654 (block-side t tag-type comment face web-mode-variable-name-face) 654 655 (block-side t tag-type comment face web-mode-variable-name-face) 655 656 (block-side t tag-type comment face web-mode-variable-name-face) 656 657 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 657 658 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 658 742 (tag-type comment font-lock-face web-mode-comment-face) 742 743 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 743 744 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 744 746 (block-side t tag-type comment) 746 747 (block-side t tag-type comment face web-mode-variable-name-face) 747 748 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 748 749 (block-side t tag-type comment) 749 750 (block-side t tag-type comment face web-mode-variable-name-face) 750 751 (block-side t tag-type comment face web-mode-variable-name-face) 751 752 (block-side t tag-type comment face web-mode-variable-name-face) 752 753 (block-side t tag-type comment face web-mode-variable-name-face) 753 754 (block-side t tag-type comment face web-mode-variable-name-face) 754 755 (block-side t tag-type comment face web-mode-variable-name-face) 755 756 (block-side t tag-type comment face web-mode-variable-name-face) 756 757 (block-side t tag-type comment face web-mode-variable-name-face) 757 758 (block-side t tag-type comment face web-mode-variable-name-face) 758 759 (block-side t tag-type comment face web-mode-variable-name-face) 759 760 (block-side t tag-type comment face web-mode-variable-name-face) 760 761 (block-side t tag-type comment face web-mode-variable-name-face) 761 762 (block-side t tag-type comment face web-mode-variable-name-face) 762 763 (block-side t tag-type comment face web-mode-variable-name-face) 763 764 (block-side t tag-type comment face web-mode-variable-name-face) 764 765 (block-side t tag-type comment) 765 766 (block-side t tag-type comment face web-mode-variable-name-face) 766 767 (block-side t tag-type comment face web-mode-variable-name-face) 767 768 (block-side t tag-type comment face web-mode-variable-name-face) 768 769 (block-side t tag-type comment face web-mode-variable-name-face) 769 770 (block-side t tag-type comment face web-mode-variable-name-face) 770 771 (block-side t tag-type comment face web-mode-variable-name-face) 771 772 (block-side t tag-type comment face web-mode-variable-name-face) 772 773 (block-side t tag-type comment face web-mode-variable-name-face) 773 774 (block-side t tag-type comment face web-mode-variable-name-face) 774 775 (block-side t tag-type comment face web-mode-variable-name-face) 775 776 (block-side t tag-type comment face web-mode-variable-name-face) 776 777 (block-side t tag-type comment face web-mode-variable-name-face) 777 778 (block-side t tag-type comment face web-mode-variable-name-face) 778 780 (block-side t tag-type comment) 780 781 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 781 782 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 782 783 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 783 963 (tag-type comment font-lock-face web-mode-comment-face) 963 964 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 964 965 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 965 966 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 966 967 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 967 968 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 968 969 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 969 970 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 970 971 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 971 972 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 972 973 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 973 975 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 975 977 (block-side t tag-type comment) 977 978 (block-side t tag-type comment face web-mode-variable-name-face) 978 979 (block-side t tag-type comment face web-mode-variable-name-face) 979 981 (block-side t tag-type comment) 981 982 (block-side t tag-type comment face web-mode-variable-name-face) 982 983 (block-side t tag-type comment face web-mode-variable-name-face) 983 984 (block-side t tag-type comment face web-mode-variable-name-face) 984 985 (block-side t tag-type comment face web-mode-variable-name-face) 985 986 (block-side t tag-type comment face web-mode-variable-name-face) 986 988 (block-side t tag-type comment) 988 989 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 989 1088 (tag-type comment font-lock-face web-mode-comment-face) 1088 1089 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1089 1090 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1090 1091 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1091 1092 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1092 1093 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1093 1094 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1094 1095 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1095 1096 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1096 1097 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1097 1099 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1099 1100 (block-side t tag-type comment) 1100 1101 (block-side t tag-type comment face web-mode-variable-name-face) 1101 1102 (block-side t tag-type comment face web-mode-variable-name-face) 1102 1103 (block-side t tag-type comment face web-mode-variable-name-face) 1103 1104 (block-side t tag-type comment face web-mode-variable-name-face) 1104 1105 (block-side t tag-type comment face web-mode-variable-name-face) 1105 1106 (block-side t tag-type comment face web-mode-variable-name-face) 1106 1107 (block-side t tag-type comment face web-mode-variable-name-face) 1107 1108 (block-side t tag-type comment face web-mode-variable-name-face) 1108 1109 (block-side t tag-type comment face web-mode-variable-name-face) 1109 1110 (block-side t tag-type comment face web-mode-variable-name-face) 1110 1111 (block-side t tag-type comment face web-mode-variable-name-face) 1111 1112 (block-side t tag-type comment face web-mode-variable-name-face) 1112 1113 (block-side t tag-type comment face web-mode-variable-name-face) 1113 1114 (block-side t tag-type comment face web-mode-variable-name-face) 1114 1115 (block-side t tag-type comment face web-mode-variable-name-face) 1115 1116 (block-side t tag-type comment face web-mode-variable-name-face) 1116 1117 (block-side t tag-type comment face web-mode-variable-name-face) 1117 1118 (block-side t tag-type comment face web-mode-variable-name-face) 1118 1119 (block-side t tag-type comment face web-mode-variable-name-face) 1119 1120 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1120 1202 (tag-type comment font-lock-face web-mode-comment-face) 1202 1203 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1203 1204 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1204 1205 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1205 1206 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1206 1207 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1207 1208 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1208 1210 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1210 1223 (block-side t tag-type comment face web-mode-function-call-face) 1223 1225 (block-side t tag-type comment) 1225 1226 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1226 1336 (tag-type comment font-lock-face web-mode-comment-face) 1336 1337 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1337 1338 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1338 1340 (block-side t tag-type comment) 1340 1341 (block-side t tag-type comment face web-mode-variable-name-face) 1341 1342 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 1342 1343 (block-side t tag-type comment) 1343 1344 (block-side t tag-type comment face web-mode-variable-name-face) 1344 1345 (block-side t tag-type comment face web-mode-variable-name-face) 1345 1346 (block-side t tag-type comment face web-mode-variable-name-face) 1346 1347 (block-side t tag-type comment face web-mode-variable-name-face) 1347 1348 (block-side t tag-type comment face web-mode-variable-name-face) 1348 1349 (block-side t tag-type comment face web-mode-variable-name-face) 1349 1350 (block-side t tag-type comment face web-mode-variable-name-face) 1350 1351 (block-side t tag-type comment face web-mode-variable-name-face) 1351 1352 (block-side t tag-type comment face web-mode-variable-name-face) 1352 1353 (block-side t tag-type comment face web-mode-variable-name-face) 1353 1354 (block-side t tag-type comment face web-mode-variable-name-face) 1354 1355 (block-side t tag-type comment face web-mode-variable-name-face) 1355 1356 (block-side t tag-type comment face web-mode-variable-name-face) 1356 1357 (block-side t tag-type comment face web-mode-variable-name-face) 1357 1358 (block-side t tag-type comment face web-mode-variable-name-face) 1358 1359 (block-side t tag-type comment) 1359 1360 (block-side t tag-type comment face web-mode-variable-name-face) 1360 1361 (block-side t tag-type comment face web-mode-variable-name-face) 1361 1362 (block-side t tag-type comment face web-mode-variable-name-face) 1362 1363 (block-side t tag-type comment face web-mode-variable-name-face) 1363 1364 (block-side t tag-type comment face web-mode-variable-name-face) 1364 1365 (block-side t tag-type comment face web-mode-variable-name-face) 1365 1366 (block-side t tag-type comment face web-mode-variable-name-face) 1366 1367 (block-side t tag-type comment face web-mode-variable-name-face) 1367 1368 (block-side t tag-type comment face web-mode-variable-name-face) 1368 1369 (block-side t tag-type comment face web-mode-variable-name-face) 1369 1370 (block-side t tag-type comment face web-mode-variable-name-face) 1370 1371 (block-side t tag-type comment face web-mode-variable-name-face) 1371 1372 (block-side t tag-type comment face web-mode-variable-name-face) 1372 1373 (block-side t tag-type comment) 1373 1374 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 1374 1375 (block-side t tag-type comment) 1375 1376 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1376 1377 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1377 1461 (tag-type comment font-lock-face web-mode-comment-face) 1461 1462 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1462 1463 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1463 1464 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1464 1465 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1465 1466 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1466 1467 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1467 1468 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1468 1469 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1469 1470 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1470 1471 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1471 1473 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1473 1475 (block-side t tag-type comment) 1475 1476 (block-side t tag-type comment face web-mode-variable-name-face) 1476 1477 (block-side t tag-type comment face web-mode-variable-name-face) 1477 1479 (block-side t tag-type comment) 1479 1480 (block-side t tag-type comment face web-mode-variable-name-face) 1480 1481 (block-side t tag-type comment face web-mode-variable-name-face) 1481 1482 (block-side t tag-type comment face web-mode-variable-name-face) 1482 1483 (block-side t tag-type comment face web-mode-variable-name-face) 1483 1484 (block-side t tag-type comment face web-mode-variable-name-face) 1484 1486 (block-side t tag-type comment) 1486 1487 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1487 1586 (tag-type comment font-lock-face web-mode-comment-face) 1586 1587 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1587 1588 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1588 1589 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1589 1590 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1590 1591 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1591 1592 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1592 1593 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1593 1594 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1594 1595 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1595 1597 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1597 1598 (block-side t tag-type comment) 1598 1599 (block-side t tag-type comment face web-mode-variable-name-face) 1599 1600 (block-side t tag-type comment face web-mode-variable-name-face) 1600 1601 (block-side t tag-type comment face web-mode-variable-name-face) 1601 1602 (block-side t tag-type comment face web-mode-variable-name-face) 1602 1603 (block-side t tag-type comment face web-mode-variable-name-face) 1603 1604 (block-side t tag-type comment face web-mode-variable-name-face) 1604 1605 (block-side t tag-type comment face web-mode-variable-name-face) 1605 1606 (block-side t tag-type comment face web-mode-variable-name-face) 1606 1607 (block-side t tag-type comment face web-mode-variable-name-face) 1607 1608 (block-side t tag-type comment face web-mode-variable-name-face) 1608 1609 (block-side t tag-type comment face web-mode-variable-name-face) 1609 1610 (block-side t tag-type comment face web-mode-variable-name-face) 1610 1611 (block-side t tag-type comment face web-mode-variable-name-face) 1611 1612 (block-side t tag-type comment face web-mode-variable-name-face) 1612 1613 (block-side t tag-type comment face web-mode-variable-name-face) 1613 1614 (block-side t tag-type comment face web-mode-variable-name-face) 1614 1615 (block-side t tag-type comment face web-mode-variable-name-face) 1615 1616 (block-side t tag-type comment face web-mode-variable-name-face) 1616 1617 (block-side t tag-type comment face web-mode-variable-name-face) 1617 1618 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1618 1682 (tag-type comment font-lock-face web-mode-comment-face) 1682 1683 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1683 1684 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1684 1685 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1685 1686 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1686 1687 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1687 1688 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1688 1690 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1690 1715 (block-side t tag-type comment face web-mode-function-call-face) 1715 1717 (block-side t tag-type comment) 1717 1718 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1718 1818 (tag-type comment font-lock-face web-mode-comment-face) 1818 1819 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1819 1820 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1820 1822 (block-side t tag-type comment) 1822 1823 (block-side t tag-type comment face web-mode-variable-name-face) 1823 1824 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 1824 1825 (block-side t tag-type comment) 1825 1826 (block-side t tag-type comment face web-mode-variable-name-face) 1826 1827 (block-side t tag-type comment face web-mode-variable-name-face) 1827 1828 (block-side t tag-type comment face web-mode-variable-name-face) 1828 1829 (block-side t tag-type comment face web-mode-variable-name-face) 1829 1830 (block-side t tag-type comment face web-mode-variable-name-face) 1830 1831 (block-side t tag-type comment face web-mode-variable-name-face) 1831 1832 (block-side t tag-type comment face web-mode-variable-name-face) 1832 1833 (block-side t tag-type comment face web-mode-variable-name-face) 1833 1834 (block-side t tag-type comment face web-mode-variable-name-face) 1834 1835 (block-side t tag-type comment face web-mode-variable-name-face) 1835 1836 (block-side t tag-type comment face web-mode-variable-name-face) 1836 1837 (block-side t tag-type comment face web-mode-variable-name-face) 1837 1838 (block-side t tag-type comment face web-mode-variable-name-face) 1838 1839 (block-side t tag-type comment face web-mode-variable-name-face) 1839 1840 (block-side t tag-type comment face web-mode-variable-name-face) 1840 1841 (block-side t tag-type comment) 1841 1842 (block-side t tag-type comment face web-mode-variable-name-face) 1842 1843 (block-side t tag-type comment face web-mode-variable-name-face) 1843 1844 (block-side t tag-type comment face web-mode-variable-name-face) 1844 1845 (block-side t tag-type comment face web-mode-variable-name-face) 1845 1846 (block-side t tag-type comment face web-mode-variable-name-face) 1846 1847 (block-side t tag-type comment face web-mode-variable-name-face) 1847 1848 (block-side t tag-type comment face web-mode-variable-name-face) 1848 1849 (block-side t tag-type comment face web-mode-variable-name-face) 1849 1850 (block-side t tag-type comment face web-mode-variable-name-face) 1850 1851 (block-side t tag-type comment face web-mode-variable-name-face) 1851 1852 (block-side t tag-type comment face web-mode-variable-name-face) 1852 1853 (block-side t tag-type comment face web-mode-variable-name-face) 1853 1854 (block-side t tag-type comment face web-mode-variable-name-face) 1854 1855 (block-side t tag-type comment) 1855 1856 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 1856 1857 (block-side t tag-type comment) 1857 1858 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1858 1859 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1859 1943 (tag-type comment font-lock-face web-mode-comment-face) 1943 1944 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1944 1945 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1945 1946 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1946 1947 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1947 1948 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1948 1949 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1949 1950 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1950 1951 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1951 1952 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1952 1953 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1953 1955 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 1955 1957 (block-side t tag-type comment) 1957 1958 (block-side t tag-type comment face web-mode-variable-name-face) 1958 1959 (block-side t tag-type comment face web-mode-variable-name-face) 1959 1961 (block-side t tag-type comment) 1961 1962 (block-side t tag-type comment face web-mode-variable-name-face) 1962 1963 (block-side t tag-type comment face web-mode-variable-name-face) 1963 1964 (block-side t tag-type comment face web-mode-variable-name-face) 1964 1965 (block-side t tag-type comment face web-mode-variable-name-face) 1965 1966 (block-side t tag-type comment face web-mode-variable-name-face) 1966 1968 (block-side t tag-type comment) 1968 1969 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 1969 2068 (tag-type comment font-lock-face web-mode-comment-face) 2068 2069 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2069 2070 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2070 2071 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2071 2072 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2072 2073 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2073 2074 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2074 2075 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2075 2076 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2076 2077 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2077 2079 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2079 2080 (block-side t tag-type comment) 2080 2081 (block-side t tag-type comment face web-mode-variable-name-face) 2081 2082 (block-side t tag-type comment face web-mode-variable-name-face) 2082 2083 (block-side t tag-type comment face web-mode-variable-name-face) 2083 2084 (block-side t tag-type comment face web-mode-variable-name-face) 2084 2085 (block-side t tag-type comment face web-mode-variable-name-face) 2085 2086 (block-side t tag-type comment face web-mode-variable-name-face) 2086 2087 (block-side t tag-type comment face web-mode-variable-name-face) 2087 2088 (block-side t tag-type comment face web-mode-variable-name-face) 2088 2089 (block-side t tag-type comment face web-mode-variable-name-face) 2089 2090 (block-side t tag-type comment face web-mode-variable-name-face) 2090 2091 (block-side t tag-type comment face web-mode-variable-name-face) 2091 2092 (block-side t tag-type comment face web-mode-variable-name-face) 2092 2093 (block-side t tag-type comment face web-mode-variable-name-face) 2093 2094 (block-side t tag-type comment face web-mode-variable-name-face) 2094 2095 (block-side t tag-type comment face web-mode-variable-name-face) 2095 2096 (block-side t tag-type comment face web-mode-variable-name-face) 2096 2097 (block-side t tag-type comment face web-mode-variable-name-face) 2097 2098 (block-side t tag-type comment face web-mode-variable-name-face) 2098 2099 (block-side t tag-type comment face web-mode-variable-name-face) 2099 2100 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 2100 2164 (tag-type comment font-lock-face web-mode-comment-face) 2164 2165 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2165 2166 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2166 2167 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2167 2168 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2168 2169 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2169 2170 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2170 2172 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 2172 2173 (block-side t tag-type comment face web-mode-variable-name-face) 2173 2174 (block-side t tag-type comment face web-mode-variable-name-face) 2174 2175 (block-side t tag-type comment face web-mode-variable-name-face) 2175 2176 (block-side t tag-type comment face web-mode-variable-name-face) 2176 2177 (block-side t tag-type comment face web-mode-variable-name-face) 2177 2178 (block-side t tag-type comment face web-mode-variable-name-face) 2178 2179 (block-side t tag-type comment face web-mode-variable-name-face) 2179 2180 (block-side t tag-type comment face web-mode-variable-name-face) 2180 2181 (block-side t tag-type comment face web-mode-variable-name-face) 2181 2182 (block-side t tag-type comment face web-mode-variable-name-face) 2182 2183 (block-side t tag-type comment face web-mode-variable-name-face) 2183 2184 (block-side t tag-type comment face web-mode-variable-name-face) 2184 2185 (block-side t tag-type comment) 2185 2186 (block-side t tag-type comment face web-mode-variable-name-face) 2186 2187 (block-side t tag-type comment face web-mode-variable-name-face) 2187 2188 (block-side t tag-type comment face web-mode-variable-name-face) 2188 2189 (block-side t tag-type comment face web-mode-variable-name-face) 2189 2190 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 2190 2293 (tag-type comment font-lock-face web-mode-comment-face) 2293 2294 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2294 2295 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2295 2297 (block-side t tag-type comment) 2297 2298 (block-side t tag-type comment face web-mode-variable-name-face) 2298 2299 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 2299 2300 (block-side t tag-type comment) 2300 2301 (block-side t tag-type comment face web-mode-variable-name-face) 2301 2302 (block-side t tag-type comment face web-mode-variable-name-face) 2302 2303 (block-side t tag-type comment face web-mode-variable-name-face) 2303 2304 (block-side t tag-type comment face web-mode-variable-name-face) 2304 2305 (block-side t tag-type comment face web-mode-variable-name-face) 2305 2306 (block-side t tag-type comment face web-mode-variable-name-face) 2306 2307 (block-side t tag-type comment face web-mode-variable-name-face) 2307 2308 (block-side t tag-type comment face web-mode-variable-name-face) 2308 2309 (block-side t tag-type comment face web-mode-variable-name-face) 2309 2310 (block-side t tag-type comment face web-mode-variable-name-face) 2310 2311 (block-side t tag-type comment face web-mode-variable-name-face) 2311 2312 (block-side t tag-type comment face web-mode-variable-name-face) 2312 2313 (block-side t tag-type comment face web-mode-variable-name-face) 2313 2314 (block-side t tag-type comment face web-mode-variable-name-face) 2314 2315 (block-side t tag-type comment face web-mode-variable-name-face) 2315 2316 (block-side t tag-type comment) 2316 2317 (block-side t tag-type comment face web-mode-variable-name-face) 2317 2318 (block-side t tag-type comment face web-mode-variable-name-face) 2318 2319 (block-side t tag-type comment face web-mode-variable-name-face) 2319 2320 (block-side t tag-type comment face web-mode-variable-name-face) 2320 2321 (block-side t tag-type comment face web-mode-variable-name-face) 2321 2322 (block-side t tag-type comment face web-mode-variable-name-face) 2322 2323 (block-side t tag-type comment face web-mode-variable-name-face) 2323 2324 (block-side t tag-type comment face web-mode-variable-name-face) 2324 2325 (block-side t tag-type comment face web-mode-variable-name-face) 2325 2326 (block-side t tag-type comment face web-mode-variable-name-face) 2326 2327 (block-side t tag-type comment face web-mode-variable-name-face) 2327 2328 (block-side t tag-type comment face web-mode-variable-name-face) 2328 2329 (block-side t tag-type comment face web-mode-variable-name-face) 2329 2330 (block-side t tag-type comment) 2330 2331 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 2331 2332 (block-side t tag-type comment) 2332 2333 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2333 2334 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2334 2602 (tag-type comment font-lock-face web-mode-comment-face) 2602 2603 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2603 2604 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2604 2618 (block-side t tag-type comment face web-mode-function-call-face) 2618 2619 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 2619 2620 (block-side t tag-type comment face web-mode-variable-name-face) 2620 2621 (block-side t tag-type comment face web-mode-variable-name-face) 2621 2622 (block-side t tag-type comment face web-mode-variable-name-face) 2622 2623 (block-side t tag-type comment face web-mode-variable-name-face) 2623 2624 (block-side t tag-type comment face web-mode-variable-name-face) 2624 2625 (block-side t tag-type comment face web-mode-variable-name-face) 2625 2626 (block-side t tag-type comment face (rainbow-delimiters-depth-4-face)) 2626 2627 (block-side t tag-type comment) 2627 2628 (block-side t tag-type comment face (rainbow-delimiters-depth-4-face)) 2628 2629 (block-side t tag-type comment) 2629 2630 (block-side t tag-type comment face web-mode-variable-name-face) 2630 2631 (block-side t tag-type comment face web-mode-variable-name-face) 2631 2632 (block-side t tag-type comment face web-mode-variable-name-face) 2632 2633 (block-side t tag-type comment face web-mode-variable-name-face) 2633 2634 (block-side t tag-type comment face web-mode-variable-name-face) 2634 2635 (block-side t tag-type comment face web-mode-variable-name-face) 2635 2636 (block-side t tag-type comment face (rainbow-delimiters-depth-3-face)) 2636 2637 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2637 2638 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2638 2736 (tag-type comment font-lock-face web-mode-comment-face) 2736 2737 (tag-type comment tag-end t font-lock-face web-mode-comment-face)) . 12795) (undo-tree-id15 . -31) (undo-tree-id16 . -2737) (undo-tree-id17 . -2737) (undo-tree-id18 . -2737)) nil (25814 5646 630629 656000) 0 nil])
([nil nil (("
" . -12791) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) ("
" . -12792) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (" " . -12793) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (" " . -12794) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 12795) nil (25814 5646 630621 644000) 0 nil])
([nil nil (("
" . 12791) (undo-tree-id0 . -1)) nil (25814 5646 630599 248000) 0 nil])
([nil nil (("
" . -9612) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) ("
" . -9613) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 9614 (t 25814 5646 637445 782000)) nil (25814 5664 328011 455000) 0 nil])
([nil nil (("
" . 9684) (undo-tree-id31 . -1)) nil (25814 5664 327997 396000) 0 nil])
([nil nil ((7021 . 7040) (t 25814 5664 333486 582000)) nil (25814 6888 34395 605000) 0 nil])
([nil nil ((7040 . 7043)) nil (25814 6888 34394 312000) 0 nil])
([nil nil (("-" . -7041) (undo-tree-id75 . -1) ("v" . -7042) (undo-tree-id76 . -1) 7043) nil (25814 6888 34392 981000) 0 nil])
([nil nil ((7041 . 7052)) nil (25814 6888 34389 747000) 0 nil])
([nil nil ((#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7050) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("f" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7051) (undo-tree-id74 . -1) 7052) nil (25814 6888 34388 303000) 0 nil])
([nil nil ((7050 . 7057)) nil (25814 6888 34382 619000) 0 nil])
([nil nil ((#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7054) (undo-tree-id68 . -1) (#("f" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7055) (undo-tree-id69 . -1) (#(" " 0 1 (tag-name "v-icon" tag-type start)) . -7056) (undo-tree-id70 . -1) 7057) nil (25814 6888 34380 942000) 0 nil])
([nil nil ((7054 . 7060)) nil (25814 6888 34376 292000) 0 nil])
([nil nil ((7060 . 7070)) nil (25814 6888 34375 447000) 0 nil])
([nil nil ((7062 . 7082) (7063 . 7081) (#("                    " 0 20 (face whitespace-trailing)) . 7062) (7062 . 7082) (7062 . 7063) ("                  " . 7062) (7061 . 7080)) nil (25814 6888 34373 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7070 . 7071) (nil tag-attr t 7059 . 7071) (nil tag-name "v-icon" 7059 . 7071) (nil tag-type start 7059 . 7071) (nil font-lock-face web-mode-html-attr-value-face 7059 . 7071) (7059 . 7071)) nil (25814 6888 34371 59000) 0 nil])
([nil nil ((#("f" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7065) (undo-tree-id62 . -1) (#("i" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7066) (undo-tree-id63 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7067) (undo-tree-id64 . -1) (#("t" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7068) (undo-tree-id65 . -1) (#("e" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7069) (undo-tree-id66 . -1) (#("r" 0 1 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7070) (undo-tree-id67 . -1) 7071) nil (25814 6888 34367 708000) 0 nil])
([nil nil ((7065 . 7072)) nil (25814 6888 34355 217000) 0 nil])
([nil nil ((#("!" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7059) (undo-tree-id61 . -1) 7060) nil (25814 6888 34353 952000) 0 nil])
([nil nil ((6909 . 6914)) nil (25814 6888 34351 807000) 0 nil])
([nil nil ((6882 . 7027) (#("                  <v-icon v-else-if=\"!item.filter\">
                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}
                  </v-icon>" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 35 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 36 49 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 9 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 73 74 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 74 75 (block-side t) 75 76 (block-side t) 76 77 (block-side t) 77 78 (block-side t) 78 79 (block-side t) 79 83 (block-side t) 83 84 (block-side t) 84 85 (block-side t) 85 86 (block-side t) 86 87 (block-side t) 87 88 (block-side t) 88 89 (block-side t) 89 90 (block-side t) 90 91 (block-side t) 91 92 (block-side t) 92 93 (block-side t) 93 94 (block-side t) 94 95 (block-side t) 95 96 (block-side t) 96 97 (block-side t) 97 98 (block-side t) 98 103 (block-side t) 103 104 (block-side t) 104 105 (block-side t) 105 106 (block-side t) 106 107 (block-side t) 107 108 (block-side t) 108 109 (block-side t) 109 110 (block-side t) 110 111 (block-side t) 111 112 (block-side t) 112 113 (block-side t) 113 115 (block-side t) 115 116 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 116 117 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face)) 136 137 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 137 138 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 138 144 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 144 145 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6881) (undo-tree-id55 . -145) (undo-tree-id56 . -100) (undo-tree-id57 . -49) (undo-tree-id58 . -49) (undo-tree-id59 . -52) (undo-tree-id60 . -145)) nil (25814 6888 34350 196000) 0 nil])
([nil nil ((6934 . 7079) (#("                  <v-icon v-else-if=\"!item.filter\">
                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}
                  </v-icon>" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 35 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 36 49 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 9 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 73 74 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 74 75 (block-side t) 75 76 (block-side t) 76 77 (block-side t) 77 78 (block-side t) 78 79 (block-side t) 79 83 (block-side t) 83 84 (block-side t) 84 85 (block-side t) 85 86 (block-side t) 86 87 (block-side t) 87 88 (block-side t) 88 89 (block-side t) 89 90 (block-side t) 90 91 (block-side t) 91 92 (block-side t) 92 93 (block-side t) 93 94 (block-side t) 94 95 (block-side t) 95 96 (block-side t) 96 97 (block-side t) 97 98 (block-side t) 98 103 (block-side t) 103 104 (block-side t) 104 105 (block-side t) 105 106 (block-side t) 106 107 (block-side t) 107 108 (block-side t) 108 109 (block-side t) 109 110 (block-side t) 110 111 (block-side t) 111 112 (block-side t) 112 113 (block-side t) 113 115 (block-side t) 115 116 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 116 117 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face)) 136 137 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 137 138 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 138 144 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 144 145 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -6882) (undo-tree-id52 . -145) (undo-tree-id53 . -118) (undo-tree-id54 . -145) 7027) nil (25814 6888 34342 479000) 0 nil])
([nil nil ((6955 . 7100) (#("                  <v-icon v-else-if=\"!item.filter\">
                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}
                  </v-icon>" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 35 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 36 49 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 9 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 73 74 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 74 75 (block-side t) 75 76 (block-side t) 76 77 (block-side t) 77 78 (block-side t) 78 79 (block-side t) 79 83 (block-side t) 83 84 (block-side t) 84 85 (block-side t) 85 86 (block-side t) 86 87 (block-side t) 87 88 (block-side t) 88 89 (block-side t) 89 90 (block-side t) 90 91 (block-side t) 91 92 (block-side t) 92 93 (block-side t) 93 94 (block-side t) 94 95 (block-side t) 95 96 (block-side t) 96 97 (block-side t) 97 98 (block-side t) 98 103 (block-side t) 103 104 (block-side t) 104 105 (block-side t) 105 106 (block-side t) 106 107 (block-side t) 107 108 (block-side t) 108 109 (block-side t) 109 110 (block-side t) 110 111 (block-side t) 111 112 (block-side t) 112 113 (block-side t) 113 115 (block-side t) 115 116 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 116 117 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face)) 136 137 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 137 138 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 138 144 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 144 145 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -6934) (undo-tree-id49 . -145) (undo-tree-id50 . -118) (undo-tree-id51 . -145) 7079) nil (25814 6888 34337 737000) 0 nil])
([nil nil ((6983 . 7128) (#("                  <v-icon v-else-if=\"!item.filter\">
                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}
                  </v-icon>" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 35 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 36 49 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 9 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 73 74 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 74 75 (block-side t) 75 76 (block-side t) 76 77 (block-side t) 77 78 (block-side t) 78 79 (block-side t) 79 83 (block-side t) 83 84 (block-side t) 84 85 (block-side t) 85 86 (block-side t) 86 87 (block-side t) 87 88 (block-side t) 88 89 (block-side t) 89 90 (block-side t) 90 91 (block-side t) 91 92 (block-side t) 92 93 (block-side t) 93 94 (block-side t) 94 95 (block-side t) 95 96 (block-side t) 96 97 (block-side t) 97 98 (block-side t) 98 103 (block-side t) 103 104 (block-side t) 104 105 (block-side t) 105 106 (block-side t) 106 107 (block-side t) 107 108 (block-side t) 108 109 (block-side t) 109 110 (block-side t) 110 111 (block-side t) 111 112 (block-side t) 112 113 (block-side t) 113 115 (block-side t) 115 116 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 116 117 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face)) 136 137 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 137 138 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 138 144 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 144 145 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -6955) (undo-tree-id46 . -145) (undo-tree-id47 . -118) (undo-tree-id48 . -145) 7100) nil (25814 6888 34332 863000) 0 nil])
([nil nil ((7128 . 7129)) nil (25814 6888 34328 221000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -6909) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("e" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -6910) (undo-tree-id42 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -6911) (undo-tree-id43 . -1) (#("s" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -6912) (undo-tree-id44 . -1) (#("e" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -6913) (undo-tree-id45 . -1) 6914) nil (25814 6888 34326 66000) 0 nil])
([nil nil ((6949 . 6961)) nil (25814 6888 34317 586000) 0 nil])
([nil nil ((6881 . 6899)) nil (25814 6888 34316 302000) 0 nil])
([nil nil (("
" . 6899) (undo-tree-id38 . -1) (undo-tree-id39 . 1)) nil (25814 6888 34314 231000) 0 nil])
([nil nil (("                  " . -6899)) nil (25814 6888 34294 754000) 0 nil])
([nil nil ((#("f" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6918) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("o" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6919) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6920) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("d" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6921) (undo-tree-id86 . -1) (#("_" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6922) (undo-tree-id87 . -1) 6923 (t 25814 6888 40997 634000)) nil (25814 7094 125807 235000) 0 nil])
([nil nil ((6920 . 6923)) nil (25814 7094 125795 314000) 0 nil])
([nil nil ((#(">" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6921) (undo-tree-id78 . -1) (#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6922) (undo-tree-id79 . -1) 6923) nil (25814 7094 125793 664000) 0 nil])
([nil nil ((6921 . 6925)) nil (25814 7094 125788 783000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6924) (undo-tree-id77 . -1) 6925) nil (25814 7094 125786 737000) 0 nil])
([nil nil ((6922 . 6925)) nil (25814 7094 125775 632000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6923) (#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6923)) nil (25814 7094 125764 983000) 0 nil])
([nil nil ((6925 . 6938) (t 25814 7094 133560 383000)) nil (25814 7188 310821 353000) 0 nil])
([nil nil ((#("<" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6937) (undo-tree-id191 . -1) 6938) nil (25814 7188 310820 17000) 0 nil])
([nil nil ((6937 . 6941)) nil (25814 7188 310817 632000) 0 nil])
([nil nil ((#(">" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6937) (undo-tree-id187 . -1) (#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6938) (undo-tree-id188 . -1) (#("2" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6939) (undo-tree-id189 . -1) (#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6940) (undo-tree-id190 . -1) 6941) nil (25814 7188 310815 708000) 0 nil])
([nil nil ((6937 . 6939)) nil (25814 7188 310808 391000) 0 nil])
([nil nil ((#("<" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6937) (undo-tree-id185 . -1) (#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6938) (undo-tree-id186 . -1) 6939) nil (25814 7188 310806 887000) 0 nil])
([nil nil ((6937 . 6939)) nil (25814 7188 310803 344000) 0 nil])
([nil nil ((6939 . 6942)) nil (25814 7188 310802 416000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6941) (undo-tree-id184 . -1) 6942) nil (25814 7188 310801 202000) 0 nil])
([nil nil ((6938 . 6941)) nil (25814 7188 310798 515000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6939) (#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6939) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1)) nil (25814 7188 310795 631000) 0 nil])
([nil nil ((#("=" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6938) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1)) nil (25814 7188 310763 3000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6940)) nil (25814 7188 310639 578000) 0 nil])
([nil nil ((6940 . 6941)) nil (25814 7188 310631 985000) 0 nil])
([nil nil ((1906 . 1925) (t 25814 7188 317813 857000)) nil (25814 8261 304629 233000) 0 nil])
([nil nil ((1925 . 1927)) nil (25814 8261 304628 62000) 0 nil])
([nil nil (("v" . -1925) (undo-tree-id197 . -1) (undo-tree-id198 . -1) ("-" . -1926) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 1927) nil (25814 8261 304626 532000) 0 nil])
([nil nil ((1925 . 1929)) nil (25814 8261 304620 509000) 0 nil])
([nil nil ((#("c" 0 1 (tag-name "v-c" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -1928) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 1929) nil (25814 8261 304619 221000) 0 nil])
([nil nil ((1928 . 1942)) nil (25814 8261 304613 888000) 0 nil])
([nil nil ((1934 . 1954) (1935 . 1953) (#("                    " 0 20 (face whitespace-trailing)) . 1934) (1934 . 1954) (1934 . 1935) ("                  " . 1934) (1933 . 1952)) nil (25814 8261 304612 289000) 0 nil])
([nil nil ((1932 . 1943)) nil (25814 8261 304609 879000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-icon" tag-type start)) . -1942) (undo-tree-id193 . -1) 1943) nil (25814 8261 304608 309000) 0 nil])
([nil nil ((1944 . 1945) (1942 . 1945)) nil (25814 8261 304548 628000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1944) (undo-tree-id192 . -1) 1945) nil (25814 8261 304546 290000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1971 . 1972) (nil tag-attr t 1970 . 1972) (nil tag-name "v-icon" 1970 . 1972) (nil tag-type start 1970 . 1972) (nil font-lock-face web-mode-html-attr-value-face 1970 . 1972) (nil tag-attr t 1969 . 1970) (nil tag-name "v-icon" 1969 . 1970) (nil tag-type start 1969 . 1970) (nil font-lock-face web-mode-html-attr-value-face 1969 . 1970) (nil tag-attr t 1955 . 1969) (nil tag-name "v-icon" 1955 . 1969) (nil tag-type start 1955 . 1969) (nil font-lock-face web-mode-html-attr-value-face 1955 . 1969) (nil tag-attr t 1954 . 1955) (nil tag-name "v-icon" 1954 . 1955) (nil tag-type start 1954 . 1955) (nil font-lock-face web-mode-html-attr-value-face 1954 . 1955) (nil tag-attr t 1944 . 1954) (nil tag-name "v-icon" 1944 . 1954) (nil tag-type start 1944 . 1954) (nil font-lock-face web-mode-html-attr-value-face 1944 . 1954) (1944 . 1972)) nil (25814 8261 304506 611000) 0 nil])
([nil nil ((1995 . 2007)) nil (25814 8261 304494 465000) 0 nil])
([nil nil ((1567 . 1586) (t 25814 8261 308376 190000)) nil (25814 8378 556871 259000) 0 nil])
([nil nil ((1588 . 1593) (1587 . 1589) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -1587) (1587 . 1588) (1586 . 1588) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -1586) (1586 . 1587)) nil (25814 8378 556868 580000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -1592) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 1593) nil (25814 8378 556860 971000) 0 nil])
([nil nil ((#("3" 0 1 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1998) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 1999 (t 25814 8378 568574 78000)) nil (25814 8431 121745 461000) 0 nil])
([nil nil ((1998 . 1999)) nil (25814 8431 121688 306000) 0 nil])
([nil nil ((#("                  {{item}}" 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 19 20 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 20 24 (block-side t) 24 25 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 25 26 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face))) . 1568) (undo-tree-id231 . -26) (undo-tree-id232 . -24) (undo-tree-id233 . -26) (t 25814 8431 128668 740000)) nil (25814 8436 146874 79000) 0 nil])
([nil nil (("
" . -1567) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 1568) nil (25814 8436 146863 839000) 0 nil])
([nil nil ((#("
                      color=\"primary\"" 0 23 (tag-name "v-tooltip" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 37 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7632) (undo-tree-id234 . -38) (undo-tree-id235 . -1) (undo-tree-id236 . -38) (undo-tree-id237 . -38) (undo-tree-id238 . -38) (undo-tree-id239 . -38) (undo-tree-id240 . -38) (undo-tree-id241 . -38) (undo-tree-id242 . -38) (undo-tree-id243 . -38) (undo-tree-id244 . -38) (undo-tree-id245 . -38) (undo-tree-id246 . -38) (undo-tree-id247 . -38) (undo-tree-id248 . -38) (undo-tree-id249 . -38) (undo-tree-id250 . -38) (undo-tree-id251 . -38) (undo-tree-id252 . -38) (undo-tree-id253 . -38) (undo-tree-id254 . -38) (undo-tree-id255 . -38) (undo-tree-id256 . -38) (t 25814 8436 152677 963000)) nil (25814 8643 542932 971000) 0 nil])
([nil nil ((6361 . 6372) (t 25814 8643 549080 806000)) nil (25818 11922 61438 40000) 0 nil])
([nil nil ((6372 . 6387)) nil (25818 11922 61436 709000) 0 nil])
([nil nil ((6380 . 6392) (6381 . 6391) (#("            " 0 12 (face whitespace-trailing)) . 6380) (6380 . 6392) (6380 . 6381) ("          " . 6380) (6379 . 6390)) nil (25818 11922 61435 296000) 0 nil])
([nil nil ((#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5999) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 6000) nil (25818 11922 61432 896000) 0 nil])
([nil nil ((5999 . 6000)) nil (25818 11922 61429 535000) 0 nil])
([nil nil ((#("9" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6008) (undo-tree-id13 . -1) 6009) nil (25818 11922 61428 351000) 0 nil])
([nil nil ((6008 . 6009)) nil (25818 11922 61424 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6496 . 6497) (nil tag-name "v-switch" 6496 . 6497) (nil tag-type end 6496 . 6497) (nil tag-end t 6496 . 6497) (nil font-lock-face web-mode-html-tag-bracket-face 6496 . 6497) (nil tag-name "v-switch" 6488 . 6496) (nil tag-type end 6488 . 6496) (nil font-lock-face web-mode-html-tag-custom-face 6488 . 6496) (nil tag-name "v-switch" 6487 . 6488) (nil tag-type end 6487 . 6488) (nil font-lock-face web-mode-html-tag-bracket-face 6487 . 6488) (nil tag-name "v-switch" 6486 . 6487) (nil tag-type end 6486 . 6487) (nil tag-beg 22 6486 . 6487) (nil font-lock-face web-mode-html-tag-bracket-face 6486 . 6487) (nil tag-name "v-switch" 6485 . 6486) (nil tag-type start 6485 . 6486) (nil tag-end t 6485 . 6486) (nil font-lock-face web-mode-html-tag-bracket-face 6485 . 6486) (nil tag-name "v-switch" 6478 . 6485) (nil tag-type start 6478 . 6485) (nil block-side t 6477 . 6478) (nil block-end t 6477 . 6478) (nil block-token delimiter-end 6477 . 6478) (nil tag-attr t 6477 . 6478) (nil tag-attr-end 6 6477 . 6478) (nil tag-name "v-switch" 6477 . 6478) (nil tag-type start 6477 . 6478) (nil font-lock-face web-mode-block-delimiter-face 6477 . 6478) (nil block-side t 6473 . 6477) (nil tag-attr t 6473 . 6477) (nil tag-name "v-switch" 6473 . 6477) (nil tag-type start 6473 . 6477) (nil block-side t 6465 . 6473) (nil tag-attr t 6465 . 6473) (nil tag-name "v-switch" 6465 . 6473) (nil tag-type start 6465 . 6473) (nil face web-mode-function-call-face 6465 . 6473) (nil block-side t 6463 . 6465) (nil tag-attr t 6463 . 6465) (nil tag-name "v-switch" 6463 . 6465) (nil tag-type start 6463 . 6465) (nil block-side t 6462 . 6463) (nil tag-attr t 6462 . 6463) (nil tag-name "v-switch" 6462 . 6463) (nil tag-type start 6462 . 6463) (nil face web-mode-variable-name-face 6462 . 6463) (nil block-side t 6461 . 6462) (nil tag-attr t 6461 . 6462) (nil tag-name "v-switch" 6461 . 6462) (nil tag-type start 6461 . 6462) (nil face web-mode-variable-name-face 6461 . 6462) (nil block-side t 6460 . 6461) (nil tag-attr t 6460 . 6461) (nil tag-name "v-switch" 6460 . 6461) (nil tag-type start 6460 . 6461) (nil face web-mode-variable-name-face 6460 . 6461) (nil block-side t 6459 . 6460) (nil tag-attr t 6459 . 6460) (nil tag-name "v-switch" 6459 . 6460) (nil tag-type start 6459 . 6460) (nil face web-mode-variable-name-face 6459 . 6460) (nil block-side t 6458 . 6459) (nil tag-attr t 6458 . 6459) (nil tag-name "v-switch" 6458 . 6459) (nil tag-type start 6458 . 6459) (nil face web-mode-variable-name-face 6458 . 6459) (nil block-side t 6457 . 6458) (nil tag-attr t 6457 . 6458) (nil tag-name "v-switch" 6457 . 6458) (nil tag-type start 6457 . 6458) (nil face web-mode-variable-name-face 6457 . 6458) (nil block-side t 6451 . 6457) (nil tag-attr t 6451 . 6457) (nil tag-name "v-switch" 6451 . 6457) (nil tag-type start 6451 . 6457) (nil block-side t 6450 . 6451) (nil tag-attr t 6450 . 6451) (nil tag-name "v-switch" 6450 . 6451) (nil tag-type start 6450 . 6451) (nil face web-mode-variable-name-face 6450 . 6451) (nil block-side t 6449 . 6450) (nil tag-attr t 6449 . 6450) (nil tag-name "v-switch" 6449 . 6450) (nil tag-type start 6449 . 6450) (nil face web-mode-variable-name-face 6449 . 6450) (nil block-side t 6448 . 6449) (nil tag-attr t 6448 . 6449) (nil tag-name "v-switch" 6448 . 6449) (nil tag-type start 6448 . 6449) (nil face web-mode-variable-name-face 6448 . 6449) (nil block-side t 6447 . 6448) (nil tag-attr t 6447 . 6448) (nil tag-name "v-switch" 6447 . 6448) (nil tag-type start 6447 . 6448) (nil face web-mode-variable-name-face 6447 . 6448) (nil block-side t 6446 . 6447) (nil tag-attr t 6446 . 6447) (nil tag-name "v-switch" 6446 . 6447) (nil tag-type start 6446 . 6447) (nil face web-mode-variable-name-face 6446 . 6447) (nil block-side t 6445 . 6446) (nil tag-attr t 6445 . 6446) (nil tag-name "v-switch" 6445 . 6446) (nil tag-type start 6445 . 6446) (nil face web-mode-variable-name-face 6445 . 6446) (nil block-side t 6444 . 6445) (nil tag-attr t 6444 . 6445) (nil tag-name "v-switch" 6444 . 6445) (nil tag-type start 6444 . 6445) (nil block-side t 6443 . 6444) (nil block-token delimiter-beg 6443 . 6444) (nil tag-attr t 6443 . 6444) (nil tag-name "v-switch" 6443 . 6444) (nil tag-type start 6443 . 6444) (nil font-lock-face web-mode-block-delimiter-face 6443 . 6444) (nil block-side t 6442 . 6443) (nil block-token delimiter-beg 6442 . 6443) (nil tag-attr t 6442 . 6443) (nil tag-name "v-switch" 6442 . 6443) (nil tag-type start 6442 . 6443) (nil font-lock-face web-mode-block-delimiter-face 6442 . 6443) (nil block-side t 6441 . 6442) (nil block-token delimiter-beg 6441 . 6442) (nil tag-attr t 6441 . 6442) (nil tag-name "v-switch" 6441 . 6442) (nil tag-type start 6441 . 6442) (nil font-lock-face web-mode-block-delimiter-face 6441 . 6442) (nil block-side t 6440 . 6441) (nil block-token delimiter-beg 6440 . 6441) (nil tag-attr t 6440 . 6441) (nil tag-name "v-switch" 6440 . 6441) (nil tag-type start 6440 . 6441) (nil font-lock-face web-mode-block-delimiter-face 6440 . 6441) (nil block-side t 6439 . 6440) (nil block-token delimiter-beg 6439 . 6440) (nil tag-attr t 6439 . 6440) (nil tag-name "v-switch" 6439 . 6440) (nil tag-type start 6439 . 6440) (nil font-lock-face web-mode-block-delimiter-face 6439 . 6440) (nil block-side t 6438 . 6439) (nil block-token delimiter-beg 6438 . 6439) (nil tag-attr t 6438 . 6439) (nil tag-name "v-switch" 6438 . 6439) (nil tag-type start 6438 . 6439) (nil font-lock-face web-mode-block-delimiter-face 6438 . 6439) (nil block-side t 6437 . 6438) (nil block-token delimiter-beg 6437 . 6438) (nil tag-attr t 6437 . 6438) (nil tag-name "v-switch" 6437 . 6438) (nil tag-type start 6437 . 6438) (nil font-lock-face web-mode-block-delimiter-face 6437 . 6438) (nil block-beg 0 6436 . 6437) (nil block-controls 0 6436 . 6437) (nil block-side t 6436 . 6437) (nil block-token delimiter-beg 6436 . 6437) (nil tag-attr-beg 2 6436 . 6437) (nil tag-attr t 6436 . 6437) (nil tag-name "v-switch" 6436 . 6437) (nil tag-type start 6436 . 6437) (nil font-lock-face web-mode-block-delimiter-face 6436 . 6437) (nil tag-name "v-switch" 6427 . 6436) (nil tag-type start 6427 . 6436) (nil tag-attr t 6426 . 6427) (nil tag-attr-end 7 6426 . 6427) (nil tag-name "v-switch" 6426 . 6427) (nil tag-type start 6426 . 6427) (nil font-lock-face web-mode-html-attr-value-face 6426 . 6427) (nil tag-attr t 6418 . 6426) (nil tag-name "v-switch" 6418 . 6426) (nil tag-type start 6418 . 6426) (nil font-lock-face web-mode-html-attr-value-face 6418 . 6426) (nil tag-attr t 6417 . 6418) (nil tag-name "v-switch" 6417 . 6418) (nil tag-type start 6417 . 6418) (nil font-lock-face web-mode-html-attr-equal-face 6417 . 6418) (nil tag-attr t 6411 . 6417) (nil tag-name "v-switch" 6411 . 6417) (nil tag-type start 6411 . 6417) (nil font-lock-face web-mode-html-attr-engine-face 6411 . 6417) (nil tag-attr-beg 2 6410 . 6411) (nil tag-attr t 6410 . 6411) (nil tag-name "v-switch" 6410 . 6411) (nil tag-type start 6410 . 6411) (nil font-lock-face web-mode-html-attr-engine-face 6410 . 6411) (nil tag-name "v-switch" 6401 . 6410) (nil tag-type start 6401 . 6410) (nil tag-name "v-switch" 6393 . 6401) (nil tag-type start 6393 . 6401) (nil font-lock-face web-mode-html-tag-custom-face 6393 . 6401) (nil tag-name "v-switch" 6392 . 6393) (nil tag-type start 6392 . 6393) (nil tag-beg 19 6392 . 6393) (nil font-lock-face web-mode-html-tag-bracket-face 6392 . 6393) (6392 . 6497)) nil (25818 11922 61413 474000) 0 nil])
([nil nil ((6479 . 6491) (#("      " 0 6 (tag-type start tag-name "v-switch")) . 6479) 6497) nil (25818 11922 61340 944000) 0 nil])
([nil nil ((6410 . 6416) 6427) nil (25818 11922 61338 498000) 0 nil])
([nil nil ((6442 . 6448) 6465) nil (25818 11922 61336 660000) 0 nil])
([nil nil ((#("Switch 1: ${switch1.toString()}" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 6 12 (tag-type start tag-name "v-switch" tag-attr t block-side t) 12 13 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 15 16 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 16 17 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 17 18 (face web-mode-variable-name-face tag-type start tag-name "v-switch" tag-attr t block-side t) 18 20 (tag-type start tag-name "v-switch" tag-attr t block-side t) 20 28 (face web-mode-function-call-face tag-type start tag-name "v-switch" tag-attr t block-side t) 28 31 (tag-type start tag-name "v-switch" tag-attr t block-side t)) . 6457) (undo-tree-id10 . -31) (undo-tree-id11 . -31) (undo-tree-id12 . -31)) nil (25818 11922 61334 556000) 0 nil])
([nil nil ((6457 . 6467)) nil (25818 11922 61327 586000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-switch" tag-attr t block-side t)) . -6466) (undo-tree-id9 . -1) 6467) nil (25818 11922 61323 248000) 0 nil])
([nil nil ((#("`" 0 1 (tag-type start tag-name "v-switch" tag-attr t block-side t)) . 6466)) nil (25818 11922 61317 145000) 0 nil])
([nil nil ((#("`" 0 1 (tag-type start tag-name "v-switch" tag-attr t block-side t)) . 6456) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25818 11922 61315 319000) 0 nil])
([nil nil ((#(":" 0 1 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-switch" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0)) . -6448) (undo-tree-id6 . -1) 6449) nil (25818 11922 61310 276000) 0 nil])
([nil nil ((#("witch1" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t)) . 6426) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6)) nil (25818 11922 61305 854000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t)) . -6425) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 6426) nil (25818 11922 61298 51000) 0 nil])
([nil nil ((6425 . 6430)) nil (25818 11922 61273 387000) 0 nil])
([nil nil ((6430 . 6434)) nil (25818 11922 61264 354000) 0 nil])
([nil nil ((26961 . 26962) (t 25818 11922 72610 500000)) nil (25818 11942 841657 923000) 0 nil])
([nil nil ((26964 . 26972) (#("        " 0 8 (part-side javascript)) . 26963) (undo-tree-id19 . -8) (26962 . 26972)) nil (25818 11942 841655 683000) 0 nil])
([nil nil ((26972 . 26989)) nil (25818 11942 841652 218000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -26988) (undo-tree-id18 . -1) 26989) nil (25818 11942 841650 223000) 0 nil])
([nil nil ((26988 . 26990)) nil (25818 11942 841646 193000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -26988) (undo-tree-id16 . -1) (#(" " 0 1 (part-side javascript)) . -26989) (undo-tree-id17 . -1) 26990) nil (25818 11942 841639 430000) 0 nil])
([nil nil ((6378 . 6379) (t 25818 11942 852516 921000)) nil (25818 11976 546043 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6430 . 6431) (nil tag-attr t 6430 . 6431) (nil tag-attr-end 5 6430 . 6431) (nil tag-name "v-col" 6430 . 6431) (nil tag-type start 6430 . 6431) (nil font-lock-face web-mode-html-attr-value-face 6430 . 6431) (nil tag-attr t 6426 . 6430) (nil tag-name "v-col" 6426 . 6430) (nil tag-type start 6426 . 6430) (nil font-lock-face web-mode-html-attr-value-face 6426 . 6430) (nil tag-attr t 6425 . 6426) (nil tag-name "v-col" 6425 . 6426) (nil tag-type start 6425 . 6426) (nil font-lock-face web-mode-html-attr-equal-face 6425 . 6426) (nil tag-attr t 6421 . 6425) (nil tag-name "v-col" 6421 . 6425) (nil tag-type start 6421 . 6425) (nil font-lock-face web-mode-html-attr-name-face 6421 . 6425) (nil tag-attr-beg 0 6420 . 6421) (nil tag-attr t 6420 . 6421) (nil tag-name "v-col" 6420 . 6421) (nil tag-type start 6420 . 6421) (nil font-lock-face web-mode-html-attr-name-face 6420 . 6421) (nil tag-name "v-col" 6419 . 6420) (nil tag-type start 6419 . 6420) (nil tag-attr t 6418 . 6419) (nil tag-attr-end 4 6418 . 6419) (nil tag-name "v-col" 6418 . 6419) (nil tag-type start 6418 . 6419) (nil font-lock-face web-mode-html-attr-value-face 6418 . 6419) (nil tag-attr t 6416 . 6418) (nil tag-name "v-col" 6416 . 6418) (nil tag-type start 6416 . 6418) (nil font-lock-face web-mode-html-attr-value-face 6416 . 6418) (nil tag-attr t 6415 . 6416) (nil tag-name "v-col" 6415 . 6416) (nil tag-type start 6415 . 6416) (nil font-lock-face web-mode-html-attr-equal-face 6415 . 6416) (nil tag-attr t 6412 . 6415) (nil tag-name "v-col" 6412 . 6415) (nil tag-type start 6412 . 6415) (nil font-lock-face web-mode-html-attr-name-face 6412 . 6415) (nil tag-attr-beg 0 6411 . 6412) (nil tag-attr t 6411 . 6412) (nil tag-name "v-col" 6411 . 6412) (nil tag-type start 6411 . 6412) (nil font-lock-face web-mode-html-attr-name-face 6411 . 6412) (nil tag-name "v-col" 6410 . 6411) (nil tag-type start 6410 . 6411) (nil tag-attr t 6409 . 6410) (nil tag-attr-end 2 6409 . 6410) (nil tag-name "v-col" 6409 . 6410) (nil tag-type start 6409 . 6410) (nil font-lock-face web-mode-html-attr-value-face 6409 . 6410) (nil tag-attr t 6407 . 6409) (nil tag-name "v-col" 6407 . 6409) (nil tag-type start 6407 . 6409) (nil font-lock-face web-mode-html-attr-value-face 6407 . 6409) (nil tag-attr t 6406 . 6407) (nil tag-name "v-col" 6406 . 6407) (nil tag-type start 6406 . 6407) (nil font-lock-face web-mode-html-attr-equal-face 6406 . 6407) (nil tag-attr t 6405 . 6406) (nil tag-name "v-col" 6405 . 6406) (nil tag-type start 6405 . 6406) (nil font-lock-face web-mode-html-attr-name-face 6405 . 6406) (nil tag-attr-beg 0 6404 . 6405) (nil tag-attr t 6404 . 6405) (nil tag-name "v-col" 6404 . 6405) (nil tag-type start 6404 . 6405) (nil font-lock-face web-mode-html-attr-name-face 6404 . 6405) (nil tag-name "v-col" 6403 . 6404) (nil tag-type start 6403 . 6404) (nil tag-attr t 6402 . 6403) (nil tag-attr-end 2 6402 . 6403) (nil tag-name "v-col" 6402 . 6403) (nil tag-type start 6402 . 6403) (nil font-lock-face web-mode-html-attr-value-face 6402 . 6403) (nil tag-attr t 6400 . 6402) (nil tag-name "v-col" 6400 . 6402) (nil tag-type start 6400 . 6402) (nil font-lock-face web-mode-html-attr-value-face 6400 . 6402) (nil tag-attr t 6399 . 6400) (nil tag-name "v-col" 6399 . 6400) (nil tag-type start 6399 . 6400) (nil font-lock-face web-mode-html-attr-equal-face 6399 . 6400) (nil tag-attr t 6398 . 6399) (nil tag-name "v-col" 6398 . 6399) (nil tag-type start 6398 . 6399) (nil font-lock-face web-mode-html-attr-name-face 6398 . 6399) (nil tag-attr-beg 0 6397 . 6398) (nil tag-attr t 6397 . 6398) (nil tag-name "v-col" 6397 . 6398) (nil tag-type start 6397 . 6398) (nil font-lock-face web-mode-html-attr-name-face 6397 . 6398) (nil tag-name "v-col" 6396 . 6397) (nil tag-type start 6396 . 6397) (nil tag-attr t 6395 . 6396) (nil tag-attr-end 5 6395 . 6396) (nil tag-name "v-col" 6395 . 6396) (nil tag-type start 6395 . 6396) (nil font-lock-face web-mode-html-attr-value-face 6395 . 6396) (nil tag-attr t 6385 . 6395) (nil tag-name "v-col" 6385 . 6395) (nil tag-type start 6385 . 6395) (nil font-lock-face web-mode-html-attr-value-face 6385 . 6395) (nil tag-attr t 6384 . 6385) (nil tag-name "v-col" 6384 . 6385) (nil tag-type start 6384 . 6385) (nil font-lock-face web-mode-html-attr-equal-face 6384 . 6385) (nil tag-attr t 6380 . 6384) (nil tag-name "v-col" 6380 . 6384) (nil tag-type start 6380 . 6384) (nil font-lock-face web-mode-html-attr-name-face 6380 . 6384) (nil tag-attr-beg 0 6379 . 6380) (nil tag-attr t 6379 . 6380) (nil tag-name "v-col" 6379 . 6380) (nil tag-type start 6379 . 6380) (nil font-lock-face web-mode-html-attr-name-face 6379 . 6380) (6379 . 6431)) nil (25818 11976 546029 505000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6408) (t 25818 11976 552370 940000)) nil (25818 12035 683234 218000) 0 nil])
([nil nil ((6408 . 6409)) nil (25818 12035 683233 64000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6417)) nil (25818 12035 683232 104000) 0 nil])
([nil nil ((6417 . 6418)) nil (25818 12035 683231 174000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6401)) nil (25818 12035 683230 111000) 0 nil])
([nil nil ((6401 . 6402)) nil (25818 12035 683228 954000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5999) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 6000) nil (25818 12035 683227 626000) 0 nil])
([nil nil ((5999 . 6000)) nil (25818 12035 683224 263000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6008) (undo-tree-id22 . -1) 6009) nil (25818 12035 683222 779000) 0 nil])
([nil nil ((6008 . 6009)) nil (25818 12035 683219 814000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5992) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 5993) nil (25818 12035 683217 58000) 0 nil])
([nil nil ((5992 . 5993)) nil (25818 12052 718886 521000) 0 nil])
([nil nil ((#("align=\"end\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 6 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t)) . 6011) (undo-tree-id31 . -11) (undo-tree-id32 . -11) (undo-tree-id33 . -11)) nil (25818 12056 854277 534000) 0 nil] [nil nil ((#(" align=\"end\"" 0 1 (tag-type start tag-name "v-col") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 2 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 7 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t rear-nonsticky t)) . 6419) (undo-tree-id25 . -12) (undo-tree-id26 . -12) (t 25818 12035 692130 832000)) ((6419 . 6431) (t 25818 12050 712072 887000)) (25818 12050 704444 889000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -6010) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 6011) nil (25818 12056 854269 234000) 0 nil])
nil
([nil nil ((6442 . 6457) (t 25818 12056 864049 494000)) nil (25818 12067 737711 110000) 0 nil])
([nil nil ((6457 . 6462)) nil (25818 12067 737703 924000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5787) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 5788 (t 25818 12067 748008 574000)) nil (25818 12098 61496 164000) 0 nil])
([nil nil ((5787 . 5788)) nil (25818 12098 61492 619000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5796) (undo-tree-id37 . -1) 5797) nil (25818 12098 61491 618000) 0 nil])
([nil nil ((5796 . 5797)) nil (25818 12098 61489 515000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6008) (undo-tree-id36 . -1) 6009) nil (25818 12098 61488 493000) 0 nil])
([nil nil ((6008 . 6009)) nil (25818 12098 61486 278000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5999) (undo-tree-id35 . -1) 6000) nil (25818 12098 61485 56000) 0 nil])
([nil nil ((5999 . 6000)) nil (25818 12098 61482 149000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5992) (undo-tree-id34 . -1) 5993) nil (25818 12098 61479 702000) 0 nil])
([nil nil ((5992 . 5993)) nil (25818 12098 61466 589000) 0 nil])
([nil nil ((6420 . 6433) (t 25818 12098 71897 631000)) nil (25818 12130 525360 152000) 0 nil])
([nil nil ((6433 . 6436)) nil (25818 12130 525358 561000) 0 nil])
([nil nil (("z" . -6433) (undo-tree-id40 . -1) ("v" . -6434) (undo-tree-id41 . -1) ("-" . -6435) (undo-tree-id42 . -1) 6436) nil (25818 12130 525355 534000) 0 nil])
([nil nil ((6433 . 6454)) nil (25818 12130 525336 358000) 0 nil])
([nil nil ((6010 . 6011) (t 25818 12130 531783 658000)) nil (25818 12147 182789 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6021 . 6022) (nil rear-nonsticky t 6021 . 6022) (nil tag-attr t 6021 . 6022) (nil tag-attr-end 5 6021 . 6022) (nil tag-name "v-col" 6021 . 6022) (nil tag-type start 6021 . 6022) (nil font-lock-face web-mode-html-attr-value-face 6021 . 6022) (nil tag-attr t 6017 . 6021) (nil tag-name "v-col" 6017 . 6021) (nil tag-type start 6017 . 6021) (nil font-lock-face web-mode-html-attr-value-face 6017 . 6021) (nil tag-attr t 6016 . 6017) (nil tag-name "v-col" 6016 . 6017) (nil tag-type start 6016 . 6017) (nil font-lock-face web-mode-html-attr-equal-face 6016 . 6017) (nil tag-attr t 6012 . 6016) (nil tag-name "v-col" 6012 . 6016) (nil tag-type start 6012 . 6016) (nil font-lock-face web-mode-html-attr-name-face 6012 . 6016) (nil tag-attr-beg 0 6011 . 6012) (nil tag-attr t 6011 . 6012) (nil tag-name "v-col" 6011 . 6012) (nil tag-type start 6011 . 6012) (nil font-lock-face web-mode-html-attr-name-face 6011 . 6012) (6011 . 6022)) nil (25818 12147 182781 564000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6401) (undo-tree-id43 . -1) 6402 (t 25818 12147 187726 988000)) nil (25818 12162 653764 731000) 0 nil])
([nil nil ((6401 . 6402)) nil (25818 12162 653753 150000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6408)) nil (25818 12162 653751 618000) 0 nil])
([nil nil ((6408 . 6409)) nil (25818 12162 653750 327000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6417)) nil (25818 12162 653748 57000) 0 nil])
([nil nil ((6417 . 6418)) nil (25818 12162 653740 309000) 0 nil])
([nil nil ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 5992) (t 25818 12162 659675 412000)) nil (25818 12172 90849 197000) 0 nil])
([nil nil ((5992 . 5993)) nil (25818 12172 90845 476000) 0 nil])
([nil nil ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 5999)) nil (25818 12172 90841 917000) 0 nil])
([nil nil ((5999 . 6000)) nil (25818 12172 90838 331000) 0 nil])
([nil nil ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6008)) nil (25818 12172 90833 625000) 0 nil])
([nil nil ((6008 . 6009)) nil (25818 12172 90821 806000) 0 nil])
([nil nil ((#("            <v-spacer></v-spacer>" 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-spacer") 13 21 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-spacer") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-spacer") 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-spacer") 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-spacer") 24 32 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-spacer") 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-spacer")) . 6433) (undo-tree-id50 . -20) (undo-tree-id51 . -33) (undo-tree-id52 . -16) (undo-tree-id53 . -33) (undo-tree-id54 . -33) (t 25818 12172 99644 429000)) nil (25818 12195 424934 284000) 0 nil])
([nil nil (("
" . -6432) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 6433) nil (25818 12212 928141 397000) 0 nil] [nil nil (("
" . -6432) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 6433) ((6432 . 6433)) (25818 12195 149670 145000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6387) (undo-tree-id66 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6388) (undo-tree-id67 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6389) (undo-tree-id68 . -1) 6390) nil (25818 12212 928131 466000) 0 nil])
([nil nil ((6454 . 6469)) ((#("
              " 0 1 (tag-type start tag-name "v-switch") 1 15 (tag-type start tag-name "v-switch")) . 6454) (undo-tree-id55 . -15) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) (25818 12195 147913 594000) 0 nil])
([nil nil ((6387 . 6393)) nil (25818 12212 928126 753000) 0 nil])
nil
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6392) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 6393) nil (25818 12212 928125 165000) 0 nil])
([nil nil ((6392 . 6396)) nil (25818 12212 928121 16000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6395) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 6396) nil (25818 12212 928115 738000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6387) (undo-tree-id75 . -1) 6388 (t 25818 12212 939514 479000)) nil (25818 12219 269644 19000) 0 nil])
([nil nil ((6387 . 6388)) nil (25818 12219 269626 908000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6389) (undo-tree-id76 . -1) 6390 (t 25818 12219 279494 880000)) nil (25818 12224 950810 274000) 0 nil])
([nil nil ((6389 . 6391)) nil (25818 12224 950796 799000) 0 nil])
([nil nil ((6438 . 6451) (t 25818 12224 959477 446000)) nil (25818 12523 855899 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7046 . 7047) (nil tag-name "v-btn" 7046 . 7047) (nil tag-type end 7046 . 7047) (nil tag-end t 7046 . 7047) (nil font-lock-face web-mode-html-tag-bracket-face 7046 . 7047) (nil tag-name "v-btn" 7041 . 7046) (nil tag-type end 7041 . 7046) (nil font-lock-face web-mode-html-tag-custom-face 7041 . 7046) (nil tag-name "v-btn" 7040 . 7041) (nil tag-type end 7040 . 7041) (nil font-lock-face web-mode-html-tag-bracket-face 7040 . 7041) (nil tag-name "v-btn" 7039 . 7040) (nil tag-type end 7039 . 7040) (nil tag-beg 22 7039 . 7040) (nil font-lock-face web-mode-html-tag-bracket-face 7039 . 7040) (nil tag-name "v-icon" 7021 . 7022) (nil tag-type end 7021 . 7022) (nil tag-end t 7021 . 7022) (nil font-lock-face web-mode-html-tag-bracket-face 7021 . 7022) (nil tag-name "v-icon" 7015 . 7021) (nil tag-type end 7015 . 7021) (nil font-lock-face web-mode-html-tag-custom-face 7015 . 7021) (nil tag-name "v-icon" 7014 . 7015) (nil tag-type end 7014 . 7015) (nil font-lock-face web-mode-html-tag-bracket-face 7014 . 7015) (nil tag-name "v-icon" 7013 . 7014) (nil tag-type end 7013 . 7014) (nil tag-beg 22 7013 . 7014) (nil font-lock-face web-mode-html-tag-bracket-face 7013 . 7014) (nil tag-name "v-icon" 6995 . 6996) (nil tag-type start 6995 . 6996) (nil tag-end t 6995 . 6996) (nil font-lock-face web-mode-html-tag-bracket-face 6995 . 6996) (nil tag-attr t 6994 . 6995) (nil tag-attr-end 0 6994 . 6995) (nil tag-name "v-icon" 6994 . 6995) (nil tag-type start 6994 . 6995) (nil font-lock-face web-mode-html-attr-engine-face 6994 . 6995) (nil tag-attr t 6990 . 6994) (nil tag-name "v-icon" 6990 . 6994) (nil tag-type start 6990 . 6994) (nil font-lock-face web-mode-html-attr-engine-face 6990 . 6994) (nil tag-attr-beg 2 6989 . 6990) (nil tag-attr t 6989 . 6990) (nil tag-name "v-icon" 6989 . 6990) (nil tag-type start 6989 . 6990) (nil font-lock-face web-mode-html-attr-engine-face 6989 . 6990) (nil tag-name "v-icon" 6988 . 6989) (nil tag-type start 6988 . 6989) (nil tag-attr t 6987 . 6988) (nil tag-attr-end 5 6987 . 6988) (nil tag-name "v-icon" 6987 . 6988) (nil tag-type start 6987 . 6988) (nil font-lock-face web-mode-html-attr-value-face 6987 . 6988) (nil tag-attr t 6982 . 6987) (nil tag-name "v-icon" 6982 . 6987) (nil tag-type start 6982 . 6987) (nil font-lock-face web-mode-html-attr-value-face 6982 . 6987) (nil tag-attr t 6981 . 6982) (nil tag-name "v-icon" 6981 . 6982) (nil tag-type start 6981 . 6982) (nil font-lock-face web-mode-html-attr-equal-face 6981 . 6982) (nil tag-attr t 6977 . 6981) (nil tag-name "v-icon" 6977 . 6981) (nil tag-type start 6977 . 6981) (nil font-lock-face web-mode-html-attr-name-face 6977 . 6981) (nil tag-attr-beg 0 6976 . 6977) (nil tag-attr t 6976 . 6977) (nil tag-name "v-icon" 6976 . 6977) (nil tag-type start 6976 . 6977) (nil font-lock-face web-mode-html-attr-name-face 6976 . 6977) (nil tag-name "v-icon" 6975 . 6976) (nil tag-type start 6975 . 6976) (nil tag-attr t 6974 . 6975) (nil tag-attr-end 0 6974 . 6975) (nil tag-name "v-icon" 6974 . 6975) (nil tag-type start 6974 . 6975) (nil font-lock-face web-mode-html-attr-name-face 6974 . 6975) (nil tag-attr t 6971 . 6974) (nil tag-name "v-icon" 6971 . 6974) (nil tag-type start 6971 . 6974) (nil font-lock-face web-mode-html-attr-name-face 6971 . 6974) (nil tag-attr-beg 0 6970 . 6971) (nil tag-attr t 6970 . 6971) (nil tag-name "v-icon" 6970 . 6971) (nil tag-type start 6970 . 6971) (nil font-lock-face web-mode-html-attr-name-face 6970 . 6971) (nil tag-name "v-icon" 6969 . 6970) (nil tag-type start 6969 . 6970) (nil tag-name "v-icon" 6963 . 6969) (nil tag-type start 6963 . 6969) (nil font-lock-face web-mode-html-tag-custom-face 6963 . 6969) (nil tag-name "v-icon" 6962 . 6963) (nil tag-type start 6962 . 6963) (nil tag-beg 19 6962 . 6963) (nil font-lock-face web-mode-html-tag-bracket-face 6962 . 6963) (nil tag-name "v-icon" 6942 . 6943) (nil tag-type end 6942 . 6943) (nil tag-end t 6942 . 6943) (nil font-lock-face web-mode-html-tag-bracket-face 6942 . 6943) (nil tag-name "v-icon" 6936 . 6942) (nil tag-type end 6936 . 6942) (nil font-lock-face web-mode-html-tag-custom-face 6936 . 6942) (nil tag-name "v-icon" 6935 . 6936) (nil tag-type end 6935 . 6936) (nil font-lock-face web-mode-html-tag-bracket-face 6935 . 6936) (nil tag-name "v-icon" 6934 . 6935) (nil tag-type end 6934 . 6935) (nil tag-beg 22 6934 . 6935) (nil font-lock-face web-mode-html-tag-bracket-face 6934 . 6935) (nil tag-name "v-icon" 6912 . 6913) (nil tag-type start 6912 . 6913) (nil tag-end t 6912 . 6913) (nil font-lock-face web-mode-html-tag-bracket-face 6912 . 6913) (nil tag-attr t 6911 . 6912) (nil tag-attr-end 4 6911 . 6912) (nil tag-name "v-icon" 6911 . 6912) (nil tag-type start 6911 . 6912) (nil font-lock-face web-mode-html-attr-value-face 6911 . 6912) (nil tag-attr t 6894 . 6911) (nil tag-name "v-icon" 6894 . 6911) (nil tag-type start 6894 . 6911) (nil font-lock-face web-mode-html-attr-value-face 6894 . 6911) (nil tag-attr t 6893 . 6894) (nil tag-name "v-icon" 6893 . 6894) (nil tag-type start 6893 . 6894) (nil font-lock-face web-mode-html-attr-equal-face 6893 . 6894) (nil tag-attr t 6890 . 6893) (nil tag-name "v-icon" 6890 . 6893) (nil tag-type start 6890 . 6893) (nil font-lock-face web-mode-html-attr-engine-face 6890 . 6893) (nil tag-attr-beg 2 6889 . 6890) (nil tag-attr t 6889 . 6890) (nil tag-name "v-icon" 6889 . 6890) (nil tag-type start 6889 . 6890) (nil font-lock-face web-mode-html-attr-engine-face 6889 . 6890) (nil tag-name "v-icon" 6888 . 6889) (nil tag-type start 6888 . 6889) (nil tag-attr t 6887 . 6888) (nil tag-attr-end 5 6887 . 6888) (nil tag-name "v-icon" 6887 . 6888) (nil tag-type start 6887 . 6888) (nil font-lock-face web-mode-html-attr-value-face 6887 . 6888) (nil tag-attr t 6882 . 6887) (nil tag-name "v-icon" 6882 . 6887) (nil tag-type start 6882 . 6887) (nil font-lock-face web-mode-html-attr-value-face 6882 . 6887) (nil tag-attr t 6881 . 6882) (nil tag-name "v-icon" 6881 . 6882) (nil tag-type start 6881 . 6882) (nil font-lock-face web-mode-html-attr-equal-face 6881 . 6882) (nil tag-attr t 6877 . 6881) (nil tag-name "v-icon" 6877 . 6881) (nil tag-type start 6877 . 6881) (nil font-lock-face web-mode-html-attr-name-face 6877 . 6881) (nil tag-attr-beg 0 6876 . 6877) (nil tag-attr t 6876 . 6877) (nil tag-name "v-icon" 6876 . 6877) (nil tag-type start 6876 . 6877) (nil font-lock-face web-mode-html-attr-name-face 6876 . 6877) (nil tag-name "v-icon" 6875 . 6876) (nil tag-type start 6875 . 6876) (nil tag-attr t 6874 . 6875) (nil tag-attr-end 0 6874 . 6875) (nil tag-name "v-icon" 6874 . 6875) (nil tag-type start 6874 . 6875) (nil font-lock-face web-mode-html-attr-name-face 6874 . 6875) (nil tag-attr t 6871 . 6874) (nil tag-name "v-icon" 6871 . 6874) (nil tag-type start 6871 . 6874) (nil font-lock-face web-mode-html-attr-name-face 6871 . 6874) (nil tag-attr-beg 0 6870 . 6871) (nil tag-attr t 6870 . 6871) (nil tag-name "v-icon" 6870 . 6871) (nil tag-type start 6870 . 6871) (nil font-lock-face web-mode-html-attr-name-face 6870 . 6871) (nil tag-name "v-icon" 6869 . 6870) (nil tag-type start 6869 . 6870) (nil tag-name "v-icon" 6863 . 6869) (nil tag-type start 6863 . 6869) (nil font-lock-face web-mode-html-tag-custom-face 6863 . 6869) (nil tag-name "v-icon" 6862 . 6863) (nil tag-type start 6862 . 6863) (nil tag-beg 19 6862 . 6863) (nil font-lock-face web-mode-html-tag-bracket-face 6862 . 6863) (nil tag-name "v-btn" 6816 . 6817) (nil tag-type start 6816 . 6817) (nil tag-end t 6816 . 6817) (nil font-lock-face web-mode-html-tag-bracket-face 6816 . 6817) (nil tag-name "v-btn" 6799 . 6816) (nil tag-type start 6799 . 6816) (nil block-side t 6798 . 6799) (nil block-end t 6798 . 6799) (nil block-token delimiter-end 6798 . 6799) (nil tag-attr t 6798 . 6799) (nil tag-attr-end 6 6798 . 6799) (nil tag-name "v-btn" 6798 . 6799) (nil tag-type start 6798 . 6799) (nil font-lock-face web-mode-block-delimiter-face 6798 . 6799) (nil block-side t 6797 . 6798) (nil tag-attr t 6797 . 6798) (nil tag-name "v-btn" 6797 . 6798) (nil tag-type start 6797 . 6798) (nil block-side t 6796 . 6797) (nil tag-attr t 6796 . 6797) (nil tag-name "v-btn" 6796 . 6797) (nil tag-type start 6796 . 6797) (nil face web-mode-variable-name-face 6796 . 6797) (nil block-side t 6795 . 6796) (nil tag-attr t 6795 . 6796) (nil tag-name "v-btn" 6795 . 6796) (nil tag-type start 6795 . 6796) (nil face web-mode-variable-name-face 6795 . 6796) (nil block-side t 6794 . 6795) (nil tag-attr t 6794 . 6795) (nil tag-name "v-btn" 6794 . 6795) (nil tag-type start 6794 . 6795) (nil face web-mode-variable-name-face 6794 . 6795) (nil block-side t 6793 . 6794) (nil tag-attr t 6793 . 6794) (nil tag-name "v-btn" 6793 . 6794) (nil tag-type start 6793 . 6794) (nil face web-mode-variable-name-face 6793 . 6794) (nil block-side t 6792 . 6793) (nil tag-attr t 6792 . 6793) (nil tag-name "v-btn" 6792 . 6793) (nil tag-type start 6792 . 6793) (nil face web-mode-variable-name-face 6792 . 6793) (nil block-side t 6787 . 6792) (nil tag-attr t 6787 . 6792) (nil tag-name "v-btn" 6787 . 6792) (nil tag-type start 6787 . 6792) (nil block-side t 6786 . 6787) (nil tag-attr t 6786 . 6787) (nil tag-name "v-btn" 6786 . 6787) (nil tag-type start 6786 . 6787) (nil face web-mode-variable-name-face 6786 . 6787) (nil block-side t 6785 . 6786) (nil tag-attr t 6785 . 6786) (nil tag-name "v-btn" 6785 . 6786) (nil tag-type start 6785 . 6786) (nil face web-mode-variable-name-face 6785 . 6786) (nil block-side t 6784 . 6785) (nil tag-attr t 6784 . 6785) (nil tag-name "v-btn" 6784 . 6785) (nil tag-type start 6784 . 6785) (nil face web-mode-variable-name-face 6784 . 6785) (nil block-side t 6783 . 6784) (nil tag-attr t 6783 . 6784) (nil tag-name "v-btn" 6783 . 6784) (nil tag-type start 6783 . 6784) (nil face web-mode-variable-name-face 6783 . 6784) (nil block-side t 6779 . 6783) (nil tag-attr t 6779 . 6783) (nil tag-name "v-btn" 6779 . 6783) (nil tag-type start 6779 . 6783) (nil block-side t 6778 . 6779) (nil tag-attr t 6778 . 6779) (nil tag-name "v-btn" 6778 . 6779) (nil tag-type start 6778 . 6779) (nil face web-mode-variable-name-face 6778 . 6779) (nil block-side t 6777 . 6778) (nil tag-attr t 6777 . 6778) (nil tag-name "v-btn" 6777 . 6778) (nil tag-type start 6777 . 6778) (nil face web-mode-variable-name-face 6777 . 6778) (nil block-side t 6776 . 6777) (nil tag-attr t 6776 . 6777) (nil tag-name "v-btn" 6776 . 6777) (nil tag-type start 6776 . 6777) (nil face web-mode-variable-name-face 6776 . 6777) (nil block-side t 6775 . 6776) (nil tag-attr t 6775 . 6776) (nil tag-name "v-btn" 6775 . 6776) (nil tag-type start 6775 . 6776) (nil face web-mode-variable-name-face 6775 . 6776) (nil block-side t 6774 . 6775) (nil tag-attr t 6774 . 6775) (nil tag-name "v-btn" 6774 . 6775) (nil tag-type start 6774 . 6775) (nil face web-mode-variable-name-face 6774 . 6775) (nil block-side t 6773 . 6774) (nil tag-attr t 6773 . 6774) (nil tag-name "v-btn" 6773 . 6774) (nil tag-type start 6773 . 6774) (nil face web-mode-variable-name-face 6773 . 6774) (nil block-side t 6772 . 6773) (nil tag-attr t 6772 . 6773) (nil tag-name "v-btn" 6772 . 6773) (nil tag-type start 6772 . 6773) (nil face web-mode-variable-name-face 6772 . 6773) (nil block-side t 6771 . 6772) (nil tag-attr t 6771 . 6772) (nil tag-name "v-btn" 6771 . 6772) (nil tag-type start 6771 . 6772) (nil face web-mode-variable-name-face 6771 . 6772) (nil block-side t 6770 . 6771) (nil tag-attr t 6770 . 6771) (nil tag-name "v-btn" 6770 . 6771) (nil tag-type start 6770 . 6771) (nil face web-mode-variable-name-face 6770 . 6771) (nil block-side t 6769 . 6770) (nil tag-attr t 6769 . 6770) (nil tag-name "v-btn" 6769 . 6770) (nil tag-type start 6769 . 6770) (nil face web-mode-variable-name-face 6769 . 6770) (nil block-side t 6768 . 6769) (nil tag-attr t 6768 . 6769) (nil tag-name "v-btn" 6768 . 6769) (nil tag-type start 6768 . 6769) (nil face web-mode-variable-name-face 6768 . 6769) (nil block-side t 6767 . 6768) (nil tag-attr t 6767 . 6768) (nil tag-name "v-btn" 6767 . 6768) (nil tag-type start 6767 . 6768) (nil face web-mode-variable-name-face 6767 . 6768) (nil block-side t 6766 . 6767) (nil tag-attr t 6766 . 6767) (nil tag-name "v-btn" 6766 . 6767) (nil tag-type start 6766 . 6767) (nil face web-mode-variable-name-face 6766 . 6767) (nil block-side t 6765 . 6766) (nil tag-attr t 6765 . 6766) (nil tag-name "v-btn" 6765 . 6766) (nil tag-type start 6765 . 6766) (nil face web-mode-variable-name-face 6765 . 6766) (nil block-side t 6764 . 6765) (nil tag-attr t 6764 . 6765) (nil tag-name "v-btn" 6764 . 6765) (nil tag-type start 6764 . 6765) (nil face web-mode-variable-name-face 6764 . 6765) (nil block-side t 6763 . 6764) (nil tag-attr t 6763 . 6764) (nil tag-name "v-btn" 6763 . 6764) (nil tag-type start 6763 . 6764) (nil face web-mode-variable-name-face 6763 . 6764) (nil block-side t 6762 . 6763) (nil block-token delimiter-beg 6762 . 6763) (nil tag-attr t 6762 . 6763) (nil tag-name "v-btn" 6762 . 6763) (nil tag-type start 6762 . 6763) (nil font-lock-face web-mode-block-delimiter-face 6762 . 6763) (nil block-side t 6761 . 6762) (nil block-token delimiter-beg 6761 . 6762) (nil tag-attr t 6761 . 6762) (nil tag-name "v-btn" 6761 . 6762) (nil tag-type start 6761 . 6762) (nil font-lock-face web-mode-block-delimiter-face 6761 . 6762) (nil block-side t 6760 . 6761) (nil block-token delimiter-beg 6760 . 6761) (nil tag-attr t 6760 . 6761) (nil tag-name "v-btn" 6760 . 6761) (nil tag-type start 6760 . 6761) (nil font-lock-face web-mode-block-delimiter-face 6760 . 6761) (nil block-side t 6759 . 6760) (nil block-token delimiter-beg 6759 . 6760) (nil tag-attr t 6759 . 6760) (nil tag-name "v-btn" 6759 . 6760) (nil tag-type start 6759 . 6760) (nil font-lock-face web-mode-block-delimiter-face 6759 . 6760) (nil block-side t 6758 . 6759) (nil block-token delimiter-beg 6758 . 6759) (nil tag-attr t 6758 . 6759) (nil tag-name "v-btn" 6758 . 6759) (nil tag-type start 6758 . 6759) (nil font-lock-face web-mode-block-delimiter-face 6758 . 6759) (nil block-side t 6757 . 6758) (nil block-token delimiter-beg 6757 . 6758) (nil tag-attr t 6757 . 6758) (nil tag-name "v-btn" 6757 . 6758) (nil tag-type start 6757 . 6758) (nil font-lock-face web-mode-block-delimiter-face 6757 . 6758) (nil block-side t 6756 . 6757) (nil block-token delimiter-beg 6756 . 6757) (nil tag-attr t 6756 . 6757) (nil tag-name "v-btn" 6756 . 6757) (nil tag-type start 6756 . 6757) (nil font-lock-face web-mode-block-delimiter-face 6756 . 6757) (nil block-beg 0 6755 . 6756) (nil block-controls 0 6755 . 6756) (nil block-side t 6755 . 6756) (nil block-token delimiter-beg 6755 . 6756) (nil tag-attr-beg 2 6755 . 6756) (nil tag-attr t 6755 . 6756) (nil tag-name "v-btn" 6755 . 6756) (nil tag-type start 6755 . 6756) (nil font-lock-face web-mode-block-delimiter-face 6755 . 6756) (nil tag-name "v-btn" 6736 . 6755) (nil tag-type start 6736 . 6755) (nil block-side t 6735 . 6736) (nil block-end t 6735 . 6736) (nil block-token delimiter-end 6735 . 6736) (nil tag-attr t 6735 . 6736) (nil tag-attr-end 9 6735 . 6736) (nil tag-name "v-btn" 6735 . 6736) (nil tag-type start 6735 . 6736) (nil font-lock-face web-mode-block-delimiter-face 6735 . 6736) (nil block-side t 6734 . 6735) (nil tag-attr t 6734 . 6735) (nil tag-name "v-btn" 6734 . 6735) (nil tag-type start 6734 . 6735) (nil face web-mode-variable-name-face 6734 . 6735) (nil block-side t 6733 . 6734) (nil tag-attr t 6733 . 6734) (nil tag-name "v-btn" 6733 . 6734) (nil tag-type start 6733 . 6734) (nil face web-mode-variable-name-face 6733 . 6734) (nil block-side t 6732 . 6733) (nil tag-attr t 6732 . 6733) (nil tag-name "v-btn" 6732 . 6733) (nil tag-type start 6732 . 6733) (nil face web-mode-variable-name-face 6732 . 6733) (nil block-side t 6731 . 6732) (nil tag-attr t 6731 . 6732) (nil tag-name "v-btn" 6731 . 6732) (nil tag-type start 6731 . 6732) (nil face web-mode-variable-name-face 6731 . 6732) (nil block-side t 6730 . 6731) (nil tag-attr t 6730 . 6731) (nil tag-name "v-btn" 6730 . 6731) (nil tag-type start 6730 . 6731) (nil face web-mode-variable-name-face 6730 . 6731) (nil block-side t 6729 . 6730) (nil tag-attr t 6729 . 6730) (nil tag-name "v-btn" 6729 . 6730) (nil tag-type start 6729 . 6730) (nil face web-mode-variable-name-face 6729 . 6730) (nil block-side t 6728 . 6729) (nil tag-attr t 6728 . 6729) (nil tag-name "v-btn" 6728 . 6729) (nil tag-type start 6728 . 6729) (nil face web-mode-variable-name-face 6728 . 6729) (nil block-side t 6727 . 6728) (nil tag-attr t 6727 . 6728) (nil tag-name "v-btn" 6727 . 6728) (nil tag-type start 6727 . 6728) (nil face web-mode-variable-name-face 6727 . 6728) (nil block-side t 6726 . 6727) (nil tag-attr t 6726 . 6727) (nil tag-name "v-btn" 6726 . 6727) (nil tag-type start 6726 . 6727) (nil face web-mode-variable-name-face 6726 . 6727) (nil block-side t 6725 . 6726) (nil tag-attr t 6725 . 6726) (nil tag-name "v-btn" 6725 . 6726) (nil tag-type start 6725 . 6726) (nil face web-mode-variable-name-face 6725 . 6726) (nil block-side t 6724 . 6725) (nil tag-attr t 6724 . 6725) (nil tag-name "v-btn" 6724 . 6725) (nil tag-type start 6724 . 6725) (nil face web-mode-variable-name-face 6724 . 6725) (nil block-side t 6723 . 6724) (nil tag-attr t 6723 . 6724) (nil tag-name "v-btn" 6723 . 6724) (nil tag-type start 6723 . 6724) (nil face web-mode-variable-name-face 6723 . 6724) (nil block-side t 6722 . 6723) (nil tag-attr t 6722 . 6723) (nil tag-name "v-btn" 6722 . 6723) (nil tag-type start 6722 . 6723) (nil face web-mode-variable-name-face 6722 . 6723) (nil block-side t 6721 . 6722) (nil tag-attr t 6721 . 6722) (nil tag-name "v-btn" 6721 . 6722) (nil tag-type start 6721 . 6722) (nil face web-mode-variable-name-face 6721 . 6722) (nil block-side t 6720 . 6721) (nil tag-attr t 6720 . 6721) (nil tag-name "v-btn" 6720 . 6721) (nil tag-type start 6720 . 6721) (nil face web-mode-variable-name-face 6720 . 6721) (nil block-side t 6719 . 6720) (nil tag-attr t 6719 . 6720) (nil tag-name "v-btn" 6719 . 6720) (nil tag-type start 6719 . 6720) (nil face web-mode-variable-name-face 6719 . 6720) (nil block-side t 6718 . 6719) (nil tag-attr t 6718 . 6719) (nil tag-name "v-btn" 6718 . 6719) (nil tag-type start 6718 . 6719) (nil face web-mode-variable-name-face 6718 . 6719) (nil block-side t 6713 . 6718) (nil tag-attr t 6713 . 6718) (nil tag-name "v-btn" 6713 . 6718) (nil tag-type start 6713 . 6718) (nil block-side t 6712 . 6713) (nil tag-attr t 6712 . 6713) (nil tag-name "v-btn" 6712 . 6713) (nil tag-type start 6712 . 6713) (nil face web-mode-variable-name-face 6712 . 6713) (nil block-side t 6711 . 6712) (nil tag-attr t 6711 . 6712) (nil tag-name "v-btn" 6711 . 6712) (nil tag-type start 6711 . 6712) (nil face web-mode-variable-name-face 6711 . 6712) (nil block-side t 6710 . 6711) (nil tag-attr t 6710 . 6711) (nil tag-name "v-btn" 6710 . 6711) (nil tag-type start 6710 . 6711) (nil face web-mode-variable-name-face 6710 . 6711) (nil block-side t 6709 . 6710) (nil tag-attr t 6709 . 6710) (nil tag-name "v-btn" 6709 . 6710) (nil tag-type start 6709 . 6710) (nil face web-mode-variable-name-face 6709 . 6710) (nil block-side t 6708 . 6709) (nil tag-attr t 6708 . 6709) (nil tag-name "v-btn" 6708 . 6709) (nil tag-type start 6708 . 6709) (nil face web-mode-variable-name-face 6708 . 6709) (nil block-side t 6707 . 6708) (nil tag-attr t 6707 . 6708) (nil tag-name "v-btn" 6707 . 6708) (nil tag-type start 6707 . 6708) (nil face web-mode-variable-name-face 6707 . 6708) (nil block-side t 6706 . 6707) (nil tag-attr t 6706 . 6707) (nil tag-name "v-btn" 6706 . 6707) (nil tag-type start 6706 . 6707) (nil face web-mode-variable-name-face 6706 . 6707) (nil block-side t 6705 . 6706) (nil tag-attr t 6705 . 6706) (nil tag-name "v-btn" 6705 . 6706) (nil tag-type start 6705 . 6706) (nil face web-mode-variable-name-face 6705 . 6706) (nil block-side t 6704 . 6705) (nil tag-attr t 6704 . 6705) (nil tag-name "v-btn" 6704 . 6705) (nil tag-type start 6704 . 6705) (nil face web-mode-variable-name-face 6704 . 6705) (nil block-side t 6703 . 6704) (nil tag-attr t 6703 . 6704) (nil tag-name "v-btn" 6703 . 6704) (nil tag-type start 6703 . 6704) (nil face web-mode-variable-name-face 6703 . 6704) (nil block-side t 6702 . 6703) (nil tag-attr t 6702 . 6703) (nil tag-name "v-btn" 6702 . 6703) (nil tag-type start 6702 . 6703) (nil face web-mode-variable-name-face 6702 . 6703) (nil block-side t 6701 . 6702) (nil tag-attr t 6701 . 6702) (nil tag-name "v-btn" 6701 . 6702) (nil tag-type start 6701 . 6702) (nil face web-mode-variable-name-face 6701 . 6702) (nil block-side t 6700 . 6701) (nil block-token delimiter-beg 6700 . 6701) (nil tag-attr t 6700 . 6701) (nil tag-name "v-btn" 6700 . 6701) (nil tag-type start 6700 . 6701) (nil font-lock-face web-mode-block-delimiter-face 6700 . 6701) (nil block-side t 6699 . 6700) (nil block-token delimiter-beg 6699 . 6700) (nil tag-attr t 6699 . 6700) (nil tag-name "v-btn" 6699 . 6700) (nil tag-type start 6699 . 6700) (nil font-lock-face web-mode-block-delimiter-face 6699 . 6700) (nil block-side t 6698 . 6699) (nil block-token delimiter-beg 6698 . 6699) (nil tag-attr t 6698 . 6699) (nil tag-name "v-btn" 6698 . 6699) (nil tag-type start 6698 . 6699) (nil font-lock-face web-mode-block-delimiter-face 6698 . 6699) (nil block-side t 6697 . 6698) (nil block-token delimiter-beg 6697 . 6698) (nil tag-attr t 6697 . 6698) (nil tag-name "v-btn" 6697 . 6698) (nil tag-type start 6697 . 6698) (nil font-lock-face web-mode-block-delimiter-face 6697 . 6698) (nil block-side t 6696 . 6697) (nil block-token delimiter-beg 6696 . 6697) (nil tag-attr t 6696 . 6697) (nil tag-name "v-btn" 6696 . 6697) (nil tag-type start 6696 . 6697) (nil font-lock-face web-mode-block-delimiter-face 6696 . 6697) (nil block-side t 6695 . 6696) (nil block-token delimiter-beg 6695 . 6696) (nil tag-attr t 6695 . 6696) (nil tag-name "v-btn" 6695 . 6696) (nil tag-type start 6695 . 6696) (nil font-lock-face web-mode-block-delimiter-face 6695 . 6696) (nil block-side t 6694 . 6695) (nil block-token delimiter-beg 6694 . 6695) (nil tag-attr t 6694 . 6695) (nil tag-name "v-btn" 6694 . 6695) (nil tag-type start 6694 . 6695) (nil font-lock-face web-mode-block-delimiter-face 6694 . 6695) (nil block-side t 6693 . 6694) (nil block-token delimiter-beg 6693 . 6694) (nil tag-attr t 6693 . 6694) (nil tag-name "v-btn" 6693 . 6694) (nil tag-type start 6693 . 6694) (nil font-lock-face web-mode-block-delimiter-face 6693 . 6694) (nil block-side t 6692 . 6693) (nil block-token delimiter-beg 6692 . 6693) (nil tag-attr t 6692 . 6693) (nil tag-name "v-btn" 6692 . 6693) (nil tag-type start 6692 . 6693) (nil font-lock-face web-mode-block-delimiter-face 6692 . 6693) (nil block-side t 6691 . 6692) (nil block-token delimiter-beg 6691 . 6692) (nil tag-attr t 6691 . 6692) (nil tag-name "v-btn" 6691 . 6692) (nil tag-type start 6691 . 6692) (nil font-lock-face web-mode-block-delimiter-face 6691 . 6692) (nil block-beg 0 6690 . 6691) (nil block-controls 0 6690 . 6691) (nil block-side t 6690 . 6691) (nil block-token delimiter-beg 6690 . 6691) (nil tag-attr-beg 2 6690 . 6691) (nil tag-attr t 6690 . 6691) (nil tag-name "v-btn" 6690 . 6691) (nil tag-type start 6690 . 6691) (nil font-lock-face web-mode-block-delimiter-face 6690 . 6691) (nil tag-name "v-btn" 6671 . 6690) (nil tag-type start 6671 . 6690) (nil block-side t 6670 . 6671) (nil block-end t 6670 . 6671) (nil block-token delimiter-end 6670 . 6671) (nil tag-attr t 6670 . 6671) (nil tag-attr-end 6 6670 . 6671) (nil tag-name "v-btn" 6670 . 6671) (nil tag-type start 6670 . 6671) (nil font-lock-face web-mode-block-delimiter-face 6670 . 6671) (nil block-side t 6668 . 6670) (nil tag-attr t 6668 . 6670) (nil tag-name "v-btn" 6668 . 6670) (nil tag-type start 6668 . 6670) (nil block-side t 6650 . 6668) (nil tag-attr t 6650 . 6668) (nil tag-name "v-btn" 6650 . 6668) (nil tag-type start 6650 . 6668) (nil face web-mode-function-call-face 6650 . 6668) (nil block-side t 6649 . 6650) (nil block-token delimiter-beg 6649 . 6650) (nil tag-attr t 6649 . 6650) (nil tag-name "v-btn" 6649 . 6650) (nil tag-type start 6649 . 6650) (nil font-lock-face web-mode-block-delimiter-face 6649 . 6650) (nil block-side t 6648 . 6649) (nil block-token delimiter-beg 6648 . 6649) (nil tag-attr t 6648 . 6649) (nil tag-name "v-btn" 6648 . 6649) (nil tag-type start 6648 . 6649) (nil font-lock-face web-mode-block-delimiter-face 6648 . 6649) (nil block-side t 6647 . 6648) (nil block-token delimiter-beg 6647 . 6648) (nil tag-attr t 6647 . 6648) (nil tag-name "v-btn" 6647 . 6648) (nil tag-type start 6647 . 6648) (nil font-lock-face web-mode-block-delimiter-face 6647 . 6648) (nil block-side t 6646 . 6647) (nil block-token delimiter-beg 6646 . 6647) (nil tag-attr t 6646 . 6647) (nil tag-name "v-btn" 6646 . 6647) (nil tag-type start 6646 . 6647) (nil font-lock-face web-mode-block-delimiter-face 6646 . 6647) (nil block-side t 6645 . 6646) (nil block-token delimiter-beg 6645 . 6646) (nil tag-attr t 6645 . 6646) (nil tag-name "v-btn" 6645 . 6646) (nil tag-type start 6645 . 6646) (nil font-lock-face web-mode-block-delimiter-face 6645 . 6646) (nil block-side t 6644 . 6645) (nil block-token delimiter-beg 6644 . 6645) (nil tag-attr t 6644 . 6645) (nil tag-name "v-btn" 6644 . 6645) (nil tag-type start 6644 . 6645) (nil font-lock-face web-mode-block-delimiter-face 6644 . 6645) (nil block-side t 6643 . 6644) (nil block-token delimiter-beg 6643 . 6644) (nil tag-attr t 6643 . 6644) (nil tag-name "v-btn" 6643 . 6644) (nil tag-type start 6643 . 6644) (nil font-lock-face web-mode-block-delimiter-face 6643 . 6644) (nil block-beg 0 6642 . 6643) (nil block-controls 0 6642 . 6643) (nil block-side t 6642 . 6643) (nil block-token delimiter-beg 6642 . 6643) (nil tag-attr-beg 2 6642 . 6643) (nil tag-attr t 6642 . 6643) (nil tag-name "v-btn" 6642 . 6643) (nil tag-type start 6642 . 6643) (nil font-lock-face web-mode-block-delimiter-face 6642 . 6643) (nil tag-name "v-btn" 6623 . 6642) (nil tag-type start 6623 . 6642) (nil tag-attr t 6622 . 6623) (nil tag-attr-end 5 6622 . 6623) (nil tag-name "v-btn" 6622 . 6623) (nil tag-type start 6622 . 6623) (nil font-lock-face web-mode-html-attr-value-face 6622 . 6623) (nil tag-attr t 6610 . 6622) (nil tag-name "v-btn" 6610 . 6622) (nil tag-type start 6610 . 6622) (nil font-lock-face web-mode-html-attr-value-face 6610 . 6622) (nil tag-attr t 6609 . 6610) (nil tag-name "v-btn" 6609 . 6610) (nil tag-type start 6609 . 6610) (nil font-lock-face web-mode-html-attr-equal-face 6609 . 6610) (nil tag-attr t 6605 . 6609) (nil tag-name "v-btn" 6605 . 6609) (nil tag-type start 6605 . 6609) (nil font-lock-face web-mode-html-attr-name-face 6605 . 6609) (nil tag-attr-beg 0 6604 . 6605) (nil tag-attr t 6604 . 6605) (nil tag-name "v-btn" 6604 . 6605) (nil tag-type start 6604 . 6605) (nil font-lock-face web-mode-html-attr-name-face 6604 . 6605) (nil tag-name "v-btn" 6585 . 6604) (nil tag-type start 6585 . 6604) (nil tag-attr t 6584 . 6585) (nil tag-attr-end 0 6584 . 6585) (nil tag-name "v-btn" 6584 . 6585) (nil tag-type start 6584 . 6585) (nil font-lock-face web-mode-html-attr-name-face 6584 . 6585) (nil tag-attr t 6581 . 6584) (nil tag-name "v-btn" 6581 . 6584) (nil tag-type start 6581 . 6584) (nil font-lock-face web-mode-html-attr-name-face 6581 . 6584) (nil tag-attr-beg 0 6580 . 6581) (nil tag-attr t 6580 . 6581) (nil tag-name "v-btn" 6580 . 6581) (nil tag-type start 6580 . 6581) (nil font-lock-face web-mode-html-attr-name-face 6580 . 6581) (nil tag-name "v-btn" 6561 . 6580) (nil tag-type start 6561 . 6580) (nil tag-attr t 6560 . 6561) (nil tag-attr-end 0 6560 . 6561) (nil tag-name "v-btn" 6560 . 6561) (nil tag-type start 6560 . 6561) (nil font-lock-face web-mode-html-attr-name-face 6560 . 6561) (nil tag-attr t 6554 . 6560) (nil tag-name "v-btn" 6554 . 6560) (nil tag-type start 6554 . 6560) (nil font-lock-face web-mode-html-attr-name-face 6554 . 6560) (nil tag-attr-beg 0 6553 . 6554) (nil tag-attr t 6553 . 6554) (nil tag-name "v-btn" 6553 . 6554) (nil tag-type start 6553 . 6554) (nil font-lock-face web-mode-html-attr-name-face 6553 . 6554) (nil tag-name "v-btn" 6534 . 6553) (nil tag-type start 6534 . 6553) (nil tag-attr t 6533 . 6534) (nil tag-attr-end 4 6533 . 6534) (nil tag-name "v-btn" 6533 . 6534) (nil tag-type start 6533 . 6534) (nil font-lock-face web-mode-html-attr-value-face 6533 . 6534) (nil tag-attr t 6530 . 6533) (nil tag-name "v-btn" 6530 . 6533) (nil tag-type start 6530 . 6533) (nil font-lock-face web-mode-html-attr-value-face 6530 . 6533) (nil tag-attr t 6529 . 6530) (nil tag-name "v-btn" 6529 . 6530) (nil tag-type start 6529 . 6530) (nil font-lock-face web-mode-html-attr-equal-face 6529 . 6530) (nil tag-attr t 6526 . 6529) (nil tag-name "v-btn" 6526 . 6529) (nil tag-type start 6526 . 6529) (nil font-lock-face web-mode-html-attr-engine-face 6526 . 6529) (nil tag-attr-beg 2 6525 . 6526) (nil tag-attr t 6525 . 6526) (nil tag-name "v-btn" 6525 . 6526) (nil tag-type start 6525 . 6526) (nil font-lock-face web-mode-html-attr-engine-face 6525 . 6526) (nil tag-name "v-btn" 6506 . 6525) (nil tag-type start 6506 . 6525) (nil tag-attr t 6505 . 6506) (nil tag-attr-end 6 6505 . 6506) (nil tag-name "v-btn" 6505 . 6506) (nil tag-type start 6505 . 6506) (nil font-lock-face web-mode-html-attr-value-face 6505 . 6506) (nil tag-attr t 6499 . 6505) (nil tag-name "v-btn" 6499 . 6505) (nil tag-type start 6499 . 6505) (nil font-lock-face web-mode-html-attr-value-face 6499 . 6505) (nil tag-attr t 6498 . 6499) (nil tag-name "v-btn" 6498 . 6499) (nil tag-type start 6498 . 6499) (nil font-lock-face web-mode-html-attr-equal-face 6498 . 6499) (nil tag-attr t 6493 . 6498) (nil tag-name "v-btn" 6493 . 6498) (nil tag-type start 6493 . 6498) (nil font-lock-face web-mode-html-attr-engine-face 6493 . 6498) (nil tag-attr-beg 2 6492 . 6493) (nil tag-attr t 6492 . 6493) (nil tag-name "v-btn" 6492 . 6493) (nil tag-type start 6492 . 6493) (nil font-lock-face web-mode-html-attr-engine-face 6492 . 6493) (nil tag-name "v-btn" 6473 . 6492) (nil tag-type start 6473 . 6492) (nil tag-name "v-btn" 6468 . 6473) (nil tag-type start 6468 . 6473) (nil font-lock-face web-mode-html-tag-custom-face 6468 . 6473) (nil tag-name "v-btn" 6467 . 6468) (nil tag-type start 6467 . 6468) (nil tag-beg 19 6467 . 6468) (nil font-lock-face web-mode-html-tag-bracket-face 6467 . 6468) (6451 . 7047)) nil (25818 12523 855858 121000) 0 nil])
([nil nil (("    " . -6971) ("    " . -6898) ("    " . -6802) ("    " . -6780) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6764) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6707) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6646) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6602) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6568) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6548) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6525) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6501) (#("    " 0 4 (tag-type start tag-name "v-btn")) . -6472) ("                " . -6451) 6441) nil (25818 12523 855674 862000) 0 nil])
([nil nil ((#("filter_pure_text" 0 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t)) . 6835) (undo-tree-id119 . -16) (undo-tree-id120 . -16)) nil (25818 12523 855670 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6843 . 6844) (nil tag-attr t 6835 . 6844) (nil tag-name "v-icon" 6835 . 6844) (nil tag-type start 6835 . 6844) (nil font-lock-face web-mode-html-attr-value-face 6835 . 6844) (6835 . 6844)) nil (25818 12523 855667 324000) 0 nil])
([nil nil ((#("           <v-switch
              dense
              v-model=\"tree_edit\"
              label=\"Edit Mode\"
            ></v-switch>" 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-switch") 12 20 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-switch") 20 21 (tag-type start tag-name "v-switch") 21 35 (tag-type start tag-name "v-switch") 35 36 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t tag-attr-beg 0) 36 37 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr-end 0 tag-attr t) 40 55 (tag-type start tag-name "v-switch") 55 56 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-switch" tag-attr t tag-attr-beg 2) 56 62 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-switch" tag-attr t) 62 63 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-switch" tag-attr t) 63 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr-end 7 tag-attr t) 74 89 (tag-type start tag-name "v-switch") 89 90 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t tag-attr-beg 0) 90 91 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 91 92 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 92 93 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 93 94 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-switch" tag-attr t) 94 95 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-switch" tag-attr t) 95 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 98 99 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 99 100 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 100 101 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 101 102 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 102 103 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 103 104 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 104 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr t) 105 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-switch" tag-attr-end 5 tag-attr t) 106 119 (tag-type start tag-name "v-switch") 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-switch") 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-switch") 121 122 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-switch") 122 130 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-switch") 130 131 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-switch" rear-nonsticky t)) . 6974) (undo-tree-id116 . -131) (undo-tree-id117 . -21) (undo-tree-id118 . -131)) nil (25818 12523 855664 692000) 0 nil])
([nil nil (("
" . -6972) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (" " . -6973) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 6974) nil (25818 12523 855600 130000) 0 nil])
([nil nil ((6553 . 6568)) nil (25818 12523 855593 635000) 0 nil])
([nil nil ((6568 . 6574)) nil (25818 12523 855592 382000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-btn")) . -6573) (undo-tree-id110 . -1) 6574) nil (25818 12523 855591 33000) 0 nil])
([nil nil ((#("filter_type_switch" 0 18 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 6630) (undo-tree-id108 . -18) (undo-tree-id109 . -18)) nil (25818 12523 855588 691000) 0 nil])
([nil nil ((6630 . 6641)) nil (25818 12523 855585 816000) 0 nil])
([nil nil ((28926 . 28933)) nil (25818 12523 855584 996000) 0 nil])
([nil nil ((28944 . 28946) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -28944) (28933 . 28945)) nil (25818 12523 855583 930000) 0 nil])
([nil nil ((28947 . 28949) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -28947) (28946 . 28948)) nil (25818 12523 855582 355000) 0 nil])
([nil nil ((28950 . 28956) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 28949) (undo-tree-id106 . 10) (28949 . 28959) (#("      " 0 6 (part-side javascript)) . 28949) (undo-tree-id107 . -6) (28948 . 28956)) nil (25818 12523 855580 493000) 0 nil])
([nil nil ((28949 . 28959)) nil (25818 12523 855576 135000) 0 nil])
([nil nil ((28959 . 28964)) nil (25818 12523 855575 196000) 0 nil])
([nil nil ((28964 . 28970)) nil (25818 12523 855574 237000) 0 nil])
([nil nil ((28964 . 28975) (#("edit_s" 0 6 (part-side javascript)) . -28964) (undo-tree-id104 . -6) (undo-tree-id105 . -6) 28970) nil (25818 12523 855572 893000) 0 nil])
([nil nil ((28975 . 28991)) nil (25818 12523 855569 556000) 0 nil])
([nil nil ((28984 . 28995) (#("edit_sw" 0 7 (part-side javascript)) . -28984) (undo-tree-id102 . -7) (undo-tree-id103 . -7) 28991) nil (25818 12523 855568 130000) 0 nil])
([nil nil ((#("filter_pure_text" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 9 10 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 10 11 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 11 12 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 12 13 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 15 16 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 6728) (undo-tree-id100 . -16) (undo-tree-id101 . -16)) nil (25818 12523 855564 361000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6738 . 6739) (nil block-side t 6738 . 6739) (nil tag-attr t 6738 . 6739) (nil tag-name "v-btn" 6738 . 6739) (nil tag-type start 6738 . 6739) (nil face web-mode-variable-name-face 6738 . 6739) (nil block-side t 6737 . 6738) (nil tag-attr t 6737 . 6738) (nil tag-name "v-btn" 6737 . 6738) (nil tag-type start 6737 . 6738) (nil face web-mode-variable-name-face 6737 . 6738) (nil block-side t 6736 . 6737) (nil tag-attr t 6736 . 6737) (nil tag-name "v-btn" 6736 . 6737) (nil tag-type start 6736 . 6737) (nil face web-mode-variable-name-face 6736 . 6737) (nil block-side t 6735 . 6736) (nil tag-attr t 6735 . 6736) (nil tag-name "v-btn" 6735 . 6736) (nil tag-type start 6735 . 6736) (nil face web-mode-variable-name-face 6735 . 6736) (nil block-side t 6734 . 6735) (nil tag-attr t 6734 . 6735) (nil tag-name "v-btn" 6734 . 6735) (nil tag-type start 6734 . 6735) (nil face web-mode-variable-name-face 6734 . 6735) (nil block-side t 6733 . 6734) (nil tag-attr t 6733 . 6734) (nil tag-name "v-btn" 6733 . 6734) (nil tag-type start 6733 . 6734) (nil face web-mode-variable-name-face 6733 . 6734) (nil block-side t 6732 . 6733) (nil tag-attr t 6732 . 6733) (nil tag-name "v-btn" 6732 . 6733) (nil tag-type start 6732 . 6733) (nil face web-mode-variable-name-face 6732 . 6733) (nil block-side t 6731 . 6732) (nil tag-attr t 6731 . 6732) (nil tag-name "v-btn" 6731 . 6732) (nil tag-type start 6731 . 6732) (nil face web-mode-variable-name-face 6731 . 6732) (nil block-side t 6730 . 6731) (nil tag-attr t 6730 . 6731) (nil tag-name "v-btn" 6730 . 6731) (nil tag-type start 6730 . 6731) (nil face web-mode-variable-name-face 6730 . 6731) (nil block-side t 6729 . 6730) (nil tag-attr t 6729 . 6730) (nil tag-name "v-btn" 6729 . 6730) (nil tag-type start 6729 . 6730) (nil face web-mode-variable-name-face 6729 . 6730) (nil block-side t 6728 . 6729) (nil tag-attr t 6728 . 6729) (nil tag-name "v-btn" 6728 . 6729) (nil tag-type start 6728 . 6729) (nil face web-mode-variable-name-face 6728 . 6729) (6728 . 6739)) nil (25818 12523 855558 415000) 0 nil])
([nil nil ((#("
              :disabled=\"getting_data || !displayTextFields\"" 0 15 (tag-type start tag-name "v-btn") 15 16 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 17 18 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 18 19 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 20 21 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 23 24 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 35 36 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 36 37 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 37 38 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 38 43 (tag-type start tag-name "v-btn" tag-attr t block-side t) 43 44 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 44 45 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 45 46 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 46 47 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 47 48 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 48 49 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 49 50 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 50 51 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 51 52 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 52 53 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 53 54 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 54 55 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 55 56 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 56 57 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 57 58 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 58 59 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 59 60 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 60 61 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 9 tag-attr t block-token delimiter-end block-end t block-side t)) . 6644) (undo-tree-id97 . -61) (undo-tree-id98 . -1) (undo-tree-id99 . -61)) nil (25818 12523 855543 505000) 0 nil])
([nil nil ((#("edit_switch" 0 11 (part-side javascript)) . 28898) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11)) nil (25818 12523 855538 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28906 . 28907) (nil rear-nonsticky t 28906 . 28907) (nil part-side javascript 28906 . 28907) (nil part-side javascript 28898 . 28906) (28898 . 28907)) nil (25818 12523 855534 84000) 0 nil])
([nil nil ((#("edit_switch" 0 11 (part-side javascript)) . 28916) (undo-tree-id92 . -11) (undo-tree-id93 . -11)) nil (25818 12523 855531 934000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28924 . 28925) (nil rear-nonsticky t 28924 . 28925) (nil part-side javascript 28924 . 28925) (nil part-side javascript 28916 . 28924) (28916 . 28925)) nil (25818 12523 855528 597000) 0 nil])
([nil nil ((#("edit_switch" 0 11 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 6630) (undo-tree-id90 . -11) (undo-tree-id91 . -11)) nil (25818 12523 855526 276000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6638 . 6639) (nil rear-nonsticky t 6638 . 6639) (nil block-side t 6638 . 6639) (nil tag-attr t 6638 . 6639) (nil tag-name "v-btn" 6638 . 6639) (nil tag-type start 6638 . 6639) (nil face web-mode-function-call-face 6638 . 6639) (nil block-side t 6630 . 6638) (nil tag-attr t 6630 . 6638) (nil tag-name "v-btn" 6630 . 6638) (nil tag-type start 6630 . 6638) (nil face web-mode-function-call-face 6630 . 6638) (6630 . 6639)) nil (25818 12523 855522 707000) 0 nil])
([nil nil ((#("edit_switch" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 9 10 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 10 11 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t)) . 6665) (undo-tree-id88 . -11) (undo-tree-id89 . -11)) nil (25818 12523 855519 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6673 . 6674) (nil rear-nonsticky t 6673 . 6674) (nil block-side t 6673 . 6674) (nil tag-attr t 6673 . 6674) (nil tag-name "v-btn" 6673 . 6674) (nil tag-type start 6673 . 6674) (nil face web-mode-variable-name-face 6673 . 6674) (nil block-side t 6672 . 6673) (nil tag-attr t 6672 . 6673) (nil tag-name "v-btn" 6672 . 6673) (nil tag-type start 6672 . 6673) (nil face web-mode-variable-name-face 6672 . 6673) (nil block-side t 6671 . 6672) (nil tag-attr t 6671 . 6672) (nil tag-name "v-btn" 6671 . 6672) (nil tag-type start 6671 . 6672) (nil face web-mode-variable-name-face 6671 . 6672) (nil block-side t 6670 . 6671) (nil tag-attr t 6670 . 6671) (nil tag-name "v-btn" 6670 . 6671) (nil tag-type start 6670 . 6671) (nil face web-mode-variable-name-face 6670 . 6671) (nil block-side t 6669 . 6670) (nil tag-attr t 6669 . 6670) (nil tag-name "v-btn" 6669 . 6670) (nil tag-type start 6669 . 6670) (nil face web-mode-variable-name-face 6669 . 6670) (nil block-side t 6668 . 6669) (nil tag-attr t 6668 . 6669) (nil tag-name "v-btn" 6668 . 6669) (nil tag-type start 6668 . 6669) (nil face web-mode-variable-name-face 6668 . 6669) (nil block-side t 6667 . 6668) (nil tag-attr t 6667 . 6668) (nil tag-name "v-btn" 6667 . 6668) (nil tag-type start 6667 . 6668) (nil face web-mode-variable-name-face 6667 . 6668) (nil block-side t 6666 . 6667) (nil tag-attr t 6666 . 6667) (nil tag-name "v-btn" 6666 . 6667) (nil tag-type start 6666 . 6667) (nil face web-mode-variable-name-face 6666 . 6667) (nil block-side t 6665 . 6666) (nil tag-attr t 6665 . 6666) (nil tag-name "v-btn" 6665 . 6666) (nil tag-type start 6665 . 6666) (nil face web-mode-variable-name-face 6665 . 6666) (6665 . 6674)) nil (25818 12523 855513 534000) 0 nil])
([nil nil (("Hotkeys" . 6723) (undo-tree-id86 . -7) (undo-tree-id87 . -7)) nil (25818 12523 855501 255000) 0 nil])
([nil nil ((6723 . 6733)) nil (25818 12523 855497 128000) 0 nil])
([nil nil ((" " . -6732) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 6733) nil (25818 12523 855491 554000) 0 nil])
([nil nil ((28931 . 28932) (t 25818 12523 866698 977000)) nil (25818 12542 251134 934000) 0 nil])
([nil nil ((#("pl-10 " 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6386) (undo-tree-id121 . -6) (undo-tree-id122 . -2) (undo-tree-id123 . -6) (t 25818 12542 262658 294000)) nil (25818 12558 326659 356000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6392) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6393) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6394) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 6395 (t 25818 12558 338623 285000)) nil (25818 12572 582872 755000) 0 nil])
([nil nil ((6392 . 6395)) nil (25818 12572 582849 332000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6394) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 6395 (t 25818 12572 594592 648000)) nil (25818 12585 719393 94000) 0 nil])
([nil nil ((6394 . 6395)) nil (25818 12585 719302 472000) 0 nil])
([nil nil ((6395 . 6399) (t 25818 12585 734564 747000)) nil (25818 12602 516078 577000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6397) (undo-tree-id175 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6398) (undo-tree-id176 . -1) 6399) nil (25818 12602 516076 799000) 0 nil])
([nil nil ((6397 . 6401)) nil (25818 12602 516072 830000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6400) (undo-tree-id174 . -1) 6401) nil (25818 12602 516071 310000) 0 nil])
([nil nil ((6400 . 6401)) nil (25818 12602 516068 705000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6400) (undo-tree-id173 . -1) 6401) nil (25818 12602 516066 978000) 0 nil])
([nil nil ((6400 . 6401)) nil (25818 12602 516063 578000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6395) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 6396) nil (25818 12602 516058 127000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6396) (undo-tree-id177 . -1) 6397 (t 25818 12602 530529 539000)) nil (25818 12613 929979 961000) 0 nil])
([nil nil ((6396 . 6397)) nil (25818 12613 929962 858000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . 6399) (t 25818 12613 942505 900000)) nil (25818 12620 648566 558000) 0 nil])
([nil nil ((6399 . 6400)) nil (25818 12620 648559 162000) 0 nil])
([nil nil ((#("tree_edit" 0 8 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t) 8 9 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t)) . 6629) (undo-tree-id178 . -9) (undo-tree-id179 . -9) (undo-tree-id180 . -9) (t 25818 12620 658492 94000)) nil (25818 12644 839211 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6639 . 6640) (nil block-side t 6629 . 6640) (nil tag-attr t 6629 . 6640) (nil tag-name "v-btn" 6629 . 6640) (nil tag-type start 6629 . 6640) (nil face web-mode-function-call-face 6629 . 6640) (6629 . 6640)) nil (25818 12644 839192 672000) 0 nil])
([nil nil ((#("              v-bind=\"attrs\"
              v-on=\"on\"" 0 14 (tag-type start tag-name "v-btn") 14 15 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2) 15 20 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-btn" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 21 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 6 tag-attr t) 28 43 (tag-type start tag-name "v-btn") 43 44 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2) 44 47 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-btn" tag-attr t) 47 48 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 48 51 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 4 tag-attr t)) . 6457) (undo-tree-id184 . -52) (undo-tree-id185 . -29) (undo-tree-id186 . -52) (t 25818 12644 850442 978000)) nil (25818 12664 337422 457000) 0 nil])
([nil nil ((#("
" 0 1 (tag-type start tag-name "v-btn")) . -6456) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 6457) nil (25819 27139 259723 360000) 0 nil])
([nil nil ((7106 . 7123)) nil (25819 27218 322988 59000) 0 nil] [nil nil ((7106 . 7123)) ((#("
                " 0 1 (tag-name "v-treeview" tag-type start) 1 17 (tag-name "v-treeview" tag-type start)) . 7106) (undo-tree-id166 . -1) (undo-tree-id167 . -17) (undo-tree-id168 . -1)) (25819 27139 257003 418000) 0 nil] [nil nil ((7106 . 7123) (t 25818 12664 350404 77000)) ((#("
                " 0 1 (tag-name "v-treeview" tag-type start) 1 17 (tag-name "v-treeview" tag-type start)) . 7106) (undo-tree-id143 . -17) (undo-tree-id144 . -17) (undo-tree-id145 . -1) (undo-tree-id146 . -17) (undo-tree-id147 . -17) (undo-tree-id148 . -17) (undo-tree-id149 . -17) (undo-tree-id150 . -17) (undo-tree-id151 . -17) (undo-tree-id152 . -17) (undo-tree-id153 . -17) (undo-tree-id154 . -1) (undo-tree-id155 . -17) (undo-tree-id156 . -17) (undo-tree-id157 . -17) (undo-tree-id158 . -17) (undo-tree-id159 . -17) (undo-tree-id160 . -17) (undo-tree-id161 . -17) (undo-tree-id162 . -17) (undo-tree-id163 . -17) (undo-tree-id164 . -17) (undo-tree-id165 . -17)) (25819 27122 442862 223000) 0 nil])
([nil nil ((7123 . 7128)) nil (25819 27218 322986 924000) 0 nil])
nil
([nil nil ((7123 . 7127)) ((#("dusa" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . 7123) (undo-tree-id133 . -2) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4)) (25819 27122 157132 705000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7125) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7126) (undo-tree-id180 . -1) (#("f" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -7127) (undo-tree-id181 . -1) 7128) nil (25819 27218 322985 29000) 0 nil])
([nil nil ((#("u" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7124) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("s" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7125) (undo-tree-id28 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7126) (undo-tree-id29 . -1) 7127) ((7124 . 7127)) (25819 27121 733860 957000) 0 nil])
([nil nil ((7125 . 7130)) nil (25819 27218 322977 651000) 0 nil])
([nil nil ((7124 . 7130)) ((#("isabel" 0 1 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . 7124) (undo-tree-id72 . -4) (undo-tree-id73 . -6) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6)) (25819 27121 457812 327000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7137 . 7138) (nil tag-attr t 7137 . 7138) (nil tag-name "v-treeview" 7137 . 7138) (nil tag-type start 7137 . 7138) (nil font-lock-face web-mode-html-attr-value-face 7137 . 7138) (nil tag-attr t 7136 . 7137) (nil tag-name "v-treeview" 7136 . 7137) (nil tag-type start 7136 . 7137) (nil font-lock-face web-mode-html-attr-value-face 7136 . 7137) (nil tag-attr t 7135 . 7136) (nil tag-name "v-treeview" 7135 . 7136) (nil tag-type start 7135 . 7136) (nil font-lock-face web-mode-html-attr-value-face 7135 . 7136) (nil tag-attr t 7134 . 7135) (nil tag-name "v-treeview" 7134 . 7135) (nil tag-type start 7134 . 7135) (nil font-lock-face web-mode-html-attr-value-face 7134 . 7135) (nil tag-attr t 7133 . 7134) (nil tag-name "v-treeview" 7133 . 7134) (nil tag-type start 7133 . 7134) (nil font-lock-face web-mode-html-attr-value-face 7133 . 7134) (nil tag-attr t 7132 . 7133) (nil tag-name "v-treeview" 7132 . 7133) (nil tag-type start 7132 . 7133) (nil font-lock-face web-mode-html-attr-value-face 7132 . 7133) (nil tag-attr t 7131 . 7132) (nil tag-name "v-treeview" 7131 . 7132) (nil tag-type start 7131 . 7132) (nil font-lock-face web-mode-html-attr-value-face 7131 . 7132) (nil tag-attr t 7130 . 7131) (nil tag-name "v-treeview" 7130 . 7131) (nil tag-type start 7130 . 7131) (nil font-lock-face web-mode-html-attr-value-face 7130 . 7131) (nil tag-attr t 7129 . 7130) (nil tag-name "v-treeview" 7129 . 7130) (nil tag-type start 7129 . 7130) (nil font-lock-face web-mode-html-attr-value-face 7129 . 7130) (7129 . 7138)) nil (25819 27218 322974 804000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7128) (undo-tree-id21 . -1) (undo-tree-id23 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7129) (undo-tree-id25 . -1) 7130) ((7128 . 7130)) (25819 27121 192351 364000) 0 nil])
([nil nil ((7123 . 7124)) nil (25819 27218 322964 938000) 0 nil])
([nil nil ((7128 . 7129)) ((#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . 7128) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1)) (25819 27120 900179 300000) 0 nil])
([nil nil ((7130 . 7131)) nil (25819 27218 322963 832000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7128) (undo-tree-id9 . -1) (undo-tree-id11 . -1) (undo-tree-id13 . -1) (undo-tree-id15 . -1) (undo-tree-id17 . -1) (undo-tree-id19 . -1) 7129) ((7128 . 7129)) (25819 27120 595692 519000) 0 nil])
([nil nil ((13449 . 13463) ("              " . 13448) (undo-tree-id176 . -14) (13447 . 13463)) nil (25819 27218 322962 563000) 0 nil])
([nil nil ((7128 . 7132)) ((#("led " 0 1 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-attr-end 0 tag-name "v-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-name "v-treeview" tag-type start)) . 7128) (undo-tree-id30 . -3) (undo-tree-id31 . -4) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4)) (25819 27120 225227 173000) 0 nil])
([nil nil ((13448 . 13462)) nil (25819 27218 322959 865000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-treeview" tag-type start)) . -7131) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) 7132) ((7131 . 7132) (t 25819 27105 705360 845000)) (25819 27105 694983 575000) 0 nil])
([nil nil ((13449 . 13463) ("              " . 13448) (undo-tree-id175 . -14) (13462 . 13463)) nil (25819 27218 322958 467000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 13929 . 13930) (nil tag-name "v-draggable-treeview" 13929 . 13930) (nil tag-type end 13929 . 13930) (nil tag-end t 13929 . 13930) (nil font-lock-face web-mode-html-tag-bracket-face 13929 . 13930) (nil tag-name "v-draggable-treeview" 13909 . 13929) (nil tag-type end 13909 . 13929) (nil font-lock-face web-mode-html-tag-custom-face 13909 . 13929) (nil tag-name "v-draggable-treeview" 13908 . 13909) (nil tag-type end 13908 . 13909) (nil font-lock-face web-mode-html-tag-bracket-face 13908 . 13909) (nil tag-name "v-draggable-treeview" 13907 . 13908) (nil tag-type end 13907 . 13908) (nil tag-beg 22 13907 . 13908) (nil font-lock-face web-mode-html-tag-bracket-face 13907 . 13908) (nil tag-name "template" 13905 . 13906) (nil tag-type end 13905 . 13906) (nil tag-end t 13905 . 13906) (nil font-lock-face web-mode-html-tag-bracket-face 13905 . 13906) (nil tag-name "template" 13897 . 13905) (nil tag-type end 13897 . 13905) (nil font-lock-face web-mode-html-tag-face 13897 . 13905) (nil tag-name "template" 13896 . 13897) (nil tag-type end 13896 . 13897) (nil font-lock-face web-mode-html-tag-bracket-face 13896 . 13897) (nil tag-name "template" 13895 . 13896) (nil tag-type end 13895 . 13896) (nil tag-beg 20 13895 . 13896) (nil font-lock-face web-mode-html-tag-bracket-face 13895 . 13896) (nil tag-name "template" 13891 . 13892) (nil tag-type end 13891 . 13892) (nil tag-end t 13891 . 13892) (nil font-lock-face web-mode-html-tag-bracket-face 13891 . 13892) (nil tag-name "template" 13883 . 13891) (nil tag-type end 13883 . 13891) (nil font-lock-face web-mode-html-tag-face 13883 . 13891) (nil tag-name "template" 13882 . 13883) (nil tag-type end 13882 . 13883) (nil font-lock-face web-mode-html-tag-bracket-face 13882 . 13883) (nil tag-name "template" 13881 . 13882) (nil tag-type end 13881 . 13882) (nil tag-beg 20 13881 . 13882) (nil font-lock-face web-mode-html-tag-bracket-face 13881 . 13882) (nil block-side t 13866 . 13867) (nil block-end t 13866 . 13867) (nil block-token delimiter-end 13866 . 13867) (nil font-lock-face web-mode-block-delimiter-face 13866 . 13867) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13866 . 13867) (nil block-side t 13865 . 13866) (nil block-token delimiter-end 13865 . 13866) (nil font-lock-face web-mode-block-delimiter-face 13865 . 13866) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13865 . 13866) (nil block-side t 13864 . 13865) (nil block-side t 13863 . 13864) (nil face web-mode-variable-name-face 13863 . 13864) (nil block-side t 13862 . 13863) (nil face web-mode-variable-name-face 13862 . 13863) (nil block-side t 13861 . 13862) (nil face web-mode-variable-name-face 13861 . 13862) (nil block-side t 13860 . 13861) (nil face web-mode-variable-name-face 13860 . 13861) (nil block-side t 13859 . 13860) (nil face web-mode-variable-name-face 13859 . 13860) (nil block-side t 13858 . 13859) (nil face web-mode-variable-name-face 13858 . 13859) (nil block-side t 13857 . 13858) (nil block-side t 13856 . 13857) (nil face web-mode-variable-name-face 13856 . 13857) (nil block-side t 13855 . 13856) (nil face web-mode-variable-name-face 13855 . 13856) (nil block-side t 13854 . 13855) (nil face web-mode-variable-name-face 13854 . 13855) (nil block-side t 13853 . 13854) (nil face web-mode-variable-name-face 13853 . 13854) (nil block-side t 13852 . 13853) (nil face web-mode-variable-name-face 13852 . 13853) (nil block-side t 13851 . 13852) (nil face web-mode-variable-name-face 13851 . 13852) (nil block-side t 13850 . 13851) (nil face web-mode-variable-name-face 13850 . 13851) (nil block-side t 13849 . 13850) (nil face web-mode-variable-name-face 13849 . 13850) (nil block-side t 13848 . 13849) (nil block-side t 13847 . 13848) (nil face web-mode-variable-name-face 13847 . 13848) (nil block-side t 13846 . 13847) (nil face web-mode-variable-name-face 13846 . 13847) (nil block-side t 13845 . 13846) (nil face web-mode-variable-name-face 13845 . 13846) (nil block-side t 13844 . 13845) (nil face web-mode-variable-name-face 13844 . 13845) (nil block-side t 13843 . 13844) (nil block-side t 13842 . 13843) (nil block-token delimiter-beg 13842 . 13843) (nil font-lock-face web-mode-block-delimiter-face 13842 . 13843) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13842 . 13843) (nil block-beg 0 13841 . 13842) (nil block-controls 0 13841 . 13842) (nil block-side t 13841 . 13842) (nil block-token delimiter-beg 13841 . 13842) (nil font-lock-face web-mode-block-delimiter-face 13841 . 13842) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13841 . 13842) (nil tag-name "template" 13829 . 13830) (nil tag-type start 13829 . 13830) (nil tag-end t 13829 . 13830) (nil font-lock-face web-mode-html-tag-bracket-face 13829 . 13830) (nil tag-name "template" 13824 . 13829) (nil tag-type start 13824 . 13829) (nil tag-attr t 13823 . 13824) (nil tag-attr-end 4 13823 . 13824) (nil tag-name "template" 13823 . 13824) (nil tag-type start 13823 . 13824) (nil font-lock-face web-mode-html-attr-value-face 13823 . 13824) (nil tag-attr t 13773 . 13823) (nil tag-name "template" 13773 . 13823) (nil tag-type start 13773 . 13823) (nil font-lock-face web-mode-html-attr-value-face 13773 . 13823) (nil tag-attr t 13772 . 13773) (nil tag-name "template" 13772 . 13773) (nil tag-type start 13772 . 13773) (nil font-lock-face web-mode-html-attr-equal-face 13772 . 13773) (nil tag-attr t 13769 . 13772) (nil tag-name "template" 13769 . 13772) (nil tag-type start 13769 . 13772) (nil font-lock-face web-mode-html-attr-engine-face 13769 . 13772) (nil tag-attr-beg 2 13768 . 13769) (nil tag-attr t 13768 . 13769) (nil tag-name "template" 13768 . 13769) (nil tag-type start 13768 . 13769) (nil font-lock-face web-mode-html-attr-engine-face 13768 . 13769) (nil tag-name "template" 13755 . 13768) (nil tag-type start 13755 . 13768) (nil tag-name "template" 13747 . 13755) (nil tag-type start 13747 . 13755) (nil font-lock-face web-mode-html-tag-face 13747 . 13755) (nil tag-name "template" 13746 . 13747) (nil tag-type start 13746 . 13747) (nil tag-beg 17 13746 . 13747) (nil font-lock-face web-mode-html-tag-bracket-face 13746 . 13747) (nil tag-name "template" 13740 . 13741) (nil tag-type start 13740 . 13741) (nil tag-end t 13740 . 13741) (nil font-lock-face web-mode-html-tag-bracket-face 13740 . 13741) (nil block-side t 13739 . 13740) (nil block-end t 13739 . 13740) (nil block-token delimiter-end 13739 . 13740) (nil tag-attr t 13739 . 13740) (nil tag-attr-end 13 13739 . 13740) (nil tag-name "template" 13739 . 13740) (nil tag-type start 13739 . 13740) (nil font-lock-face web-mode-block-delimiter-face 13739 . 13740) (nil block-side t 13737 . 13739) (nil tag-attr t 13737 . 13739) (nil tag-name "template" 13737 . 13739) (nil tag-type start 13737 . 13739) (nil block-side t 13736 . 13737) (nil tag-attr t 13736 . 13737) (nil tag-name "template" 13736 . 13737) (nil tag-type start 13736 . 13737) (nil face web-mode-variable-name-face 13736 . 13737) (nil block-side t 13735 . 13736) (nil tag-attr t 13735 . 13736) (nil tag-name "template" 13735 . 13736) (nil tag-type start 13735 . 13736) (nil face web-mode-variable-name-face 13735 . 13736) (nil block-side t 13734 . 13735) (nil tag-attr t 13734 . 13735) (nil tag-name "template" 13734 . 13735) (nil tag-type start 13734 . 13735) (nil face web-mode-variable-name-face 13734 . 13735) (nil block-side t 13733 . 13734) (nil tag-attr t 13733 . 13734) (nil tag-name "template" 13733 . 13734) (nil tag-type start 13733 . 13734) (nil face web-mode-variable-name-face 13733 . 13734) (nil block-side t 13731 . 13733) (nil tag-attr t 13731 . 13733) (nil tag-name "template" 13731 . 13733) (nil tag-type start 13731 . 13733) (nil block-side t 13730 . 13731) (nil block-token delimiter-beg 13730 . 13731) (nil tag-attr t 13730 . 13731) (nil tag-name "template" 13730 . 13731) (nil tag-type start 13730 . 13731) (nil font-lock-face web-mode-block-delimiter-face 13730 . 13731) (nil block-side t 13729 . 13730) (nil block-token delimiter-beg 13729 . 13730) (nil tag-attr t 13729 . 13730) (nil tag-name "template" 13729 . 13730) (nil tag-type start 13729 . 13730) (nil font-lock-face web-mode-block-delimiter-face 13729 . 13730) (nil block-side t 13728 . 13729) (nil block-token delimiter-beg 13728 . 13729) (nil tag-attr t 13728 . 13729) (nil tag-name "template" 13728 . 13729) (nil tag-type start 13728 . 13729) (nil font-lock-face web-mode-block-delimiter-face 13728 . 13729) (nil block-side t 13727 . 13728) (nil block-token delimiter-beg 13727 . 13728) (nil tag-attr t 13727 . 13728) (nil tag-name "template" 13727 . 13728) (nil tag-type start 13727 . 13728) (nil font-lock-face web-mode-block-delimiter-face 13727 . 13728) (nil block-side t 13726 . 13727) (nil block-token delimiter-beg 13726 . 13727) (nil tag-attr t 13726 . 13727) (nil tag-name "template" 13726 . 13727) (nil tag-type start 13726 . 13727) (nil font-lock-face web-mode-block-delimiter-face 13726 . 13727) (nil block-side t 13725 . 13726) (nil block-token delimiter-beg 13725 . 13726) (nil tag-attr t 13725 . 13726) (nil tag-name "template" 13725 . 13726) (nil tag-type start 13725 . 13726) (nil font-lock-face web-mode-block-delimiter-face 13725 . 13726) (nil block-side t 13724 . 13725) (nil block-token delimiter-beg 13724 . 13725) (nil tag-attr t 13724 . 13725) (nil tag-name "template" 13724 . 13725) (nil tag-type start 13724 . 13725) (nil font-lock-face web-mode-block-delimiter-face 13724 . 13725) (nil block-side t 13723 . 13724) (nil block-token delimiter-beg 13723 . 13724) (nil tag-attr t 13723 . 13724) (nil tag-name "template" 13723 . 13724) (nil tag-type start 13723 . 13724) (nil font-lock-face web-mode-block-delimiter-face 13723 . 13724) (nil block-beg 0 13722 . 13723) (nil block-controls 0 13722 . 13723) (nil block-side t 13722 . 13723) (nil block-token delimiter-beg 13722 . 13723) (nil tag-attr t 13722 . 13723) (nil tag-name "template" 13722 . 13723) (nil tag-type start 13722 . 13723) (nil font-lock-face web-mode-block-delimiter-face 13722 . 13723) (nil tag-attr t 13717 . 13722) (nil tag-name "template" 13717 . 13722) (nil tag-type start 13717 . 13722) (nil font-lock-face web-mode-html-attr-engine-face 13717 . 13722) (nil tag-attr-beg 2 13716 . 13717) (nil tag-attr t 13716 . 13717) (nil tag-name "template" 13716 . 13717) (nil tag-type start 13716 . 13717) (nil font-lock-face web-mode-html-attr-engine-face 13716 . 13717) (nil tag-name "template" 13715 . 13716) (nil tag-type start 13715 . 13716) (nil tag-name "template" 13707 . 13715) (nil tag-type start 13707 . 13715) (nil font-lock-face web-mode-html-tag-face 13707 . 13715) (nil tag-name "template" 13706 . 13707) (nil tag-type start 13706 . 13707) (nil tag-beg 17 13706 . 13707) (nil font-lock-face web-mode-html-tag-bracket-face 13706 . 13707) (nil tag-name "template" 13702 . 13703) (nil tag-type end 13702 . 13703) (nil tag-end t 13702 . 13703) (nil font-lock-face web-mode-html-tag-bracket-face 13702 . 13703) (nil tag-name "template" 13694 . 13702) (nil tag-type end 13694 . 13702) (nil font-lock-face web-mode-html-tag-face 13694 . 13702) (nil tag-name "template" 13693 . 13694) (nil tag-type end 13693 . 13694) (nil font-lock-face web-mode-html-tag-bracket-face 13693 . 13694) (nil tag-name "template" 13692 . 13693) (nil tag-type end 13692 . 13693) (nil tag-beg 20 13692 . 13693) (nil font-lock-face web-mode-html-tag-bracket-face 13692 . 13693) (nil tag-name "span" 13688 . 13689) (nil tag-type end 13688 . 13689) (nil tag-end t 13688 . 13689) (nil font-lock-face web-mode-html-tag-bracket-face 13688 . 13689) (nil tag-name "span" 13684 . 13688) (nil tag-type end 13684 . 13688) (nil font-lock-face web-mode-html-tag-face 13684 . 13688) (nil tag-name "span" 13683 . 13684) (nil tag-type end 13683 . 13684) (nil font-lock-face web-mode-html-tag-bracket-face 13683 . 13684) (nil tag-name "span" 13682 . 13683) (nil tag-type end 13682 . 13683) (nil tag-beg 20 13682 . 13683) (nil font-lock-face web-mode-html-tag-bracket-face 13682 . 13683) (nil block-side t 13681 . 13682) (nil block-end t 13681 . 13682) (nil block-token delimiter-end 13681 . 13682) (nil font-lock-face web-mode-block-delimiter-face 13681 . 13682) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13681 . 13682) (nil block-side t 13680 . 13681) (nil block-token delimiter-end 13680 . 13681) (nil font-lock-face web-mode-block-delimiter-face 13680 . 13681) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13680 . 13681) (nil block-side t 13679 . 13680) (nil block-side t 13678 . 13679) (nil face web-mode-variable-name-face 13678 . 13679) (nil block-side t 13677 . 13678) (nil face web-mode-variable-name-face 13677 . 13678) (nil block-side t 13676 . 13677) (nil face web-mode-variable-name-face 13676 . 13677) (nil block-side t 13675 . 13676) (nil face web-mode-variable-name-face 13675 . 13676) (nil block-side t 13674 . 13675) (nil block-side t 13673 . 13674) (nil face web-mode-variable-name-face 13673 . 13674) (nil block-side t 13672 . 13673) (nil face web-mode-variable-name-face 13672 . 13673) (nil block-side t 13671 . 13672) (nil face web-mode-variable-name-face 13671 . 13672) (nil block-side t 13670 . 13671) (nil face web-mode-variable-name-face 13670 . 13671) (nil block-side t 13669 . 13670) (nil block-side t 13668 . 13669) (nil block-token delimiter-beg 13668 . 13669) (nil font-lock-face web-mode-block-delimiter-face 13668 . 13669) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13668 . 13669) (nil block-beg 0 13667 . 13668) (nil block-controls 0 13667 . 13668) (nil block-side t 13667 . 13668) (nil block-token delimiter-beg 13667 . 13668) (nil font-lock-face web-mode-block-delimiter-face 13667 . 13668) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13667 . 13668) (nil tag-name "span" 13666 . 13667) (nil tag-type start 13666 . 13667) (nil tag-end t 13666 . 13667) (nil font-lock-face web-mode-html-tag-bracket-face 13666 . 13667) (nil tag-attr t 13665 . 13666) (nil tag-attr-end 5 13665 . 13666) (nil tag-name "span" 13665 . 13666) (nil tag-type start 13665 . 13666) (nil font-lock-face web-mode-html-attr-value-face 13665 . 13666) (nil tag-attr t 13651 . 13665) (nil tag-name "span" 13651 . 13665) (nil tag-type start 13651 . 13665) (nil font-lock-face web-mode-html-attr-value-face 13651 . 13665) (nil tag-attr t 13650 . 13651) (nil tag-name "span" 13650 . 13651) (nil tag-type start 13650 . 13651) (nil font-lock-face web-mode-html-attr-equal-face 13650 . 13651) (nil tag-attr t 13646 . 13650) (nil tag-name "span" 13646 . 13650) (nil tag-type start 13646 . 13650) (nil font-lock-face web-mode-html-attr-name-face 13646 . 13650) (nil tag-attr-beg 0 13645 . 13646) (nil tag-attr t 13645 . 13646) (nil tag-name "span" 13645 . 13646) (nil tag-type start 13645 . 13646) (nil font-lock-face web-mode-html-attr-name-face 13645 . 13646) (nil tag-name "span" 13644 . 13645) (nil tag-type start 13644 . 13645) (nil tag-name "span" 13640 . 13644) (nil tag-type start 13640 . 13644) (nil font-lock-face web-mode-html-tag-face 13640 . 13644) (nil tag-name "span" 13639 . 13640) (nil tag-type start 13639 . 13640) (nil tag-beg 17 13639 . 13640) (nil font-lock-face web-mode-html-tag-bracket-face 13639 . 13640) (nil tag-name "template" 13633 . 13634) (nil tag-type start 13633 . 13634) (nil tag-end t 13633 . 13634) (nil font-lock-face web-mode-html-tag-bracket-face 13633 . 13634) (nil block-side t 13632 . 13633) (nil block-end t 13632 . 13633) (nil block-token delimiter-end 13632 . 13633) (nil tag-attr t 13632 . 13633) (nil tag-attr-end 12 13632 . 13633) (nil tag-name "template" 13632 . 13633) (nil tag-type start 13632 . 13633) (nil font-lock-face web-mode-block-delimiter-face 13632 . 13633) (nil block-side t 13630 . 13632) (nil tag-attr t 13630 . 13632) (nil tag-name "template" 13630 . 13632) (nil tag-type start 13630 . 13632) (nil block-side t 13629 . 13630) (nil tag-attr t 13629 . 13630) (nil tag-name "template" 13629 . 13630) (nil tag-type start 13629 . 13630) (nil face web-mode-variable-name-face 13629 . 13630) (nil block-side t 13628 . 13629) (nil tag-attr t 13628 . 13629) (nil tag-name "template" 13628 . 13629) (nil tag-type start 13628 . 13629) (nil face web-mode-variable-name-face 13628 . 13629) (nil block-side t 13627 . 13628) (nil tag-attr t 13627 . 13628) (nil tag-name "template" 13627 . 13628) (nil tag-type start 13627 . 13628) (nil face web-mode-variable-name-face 13627 . 13628) (nil block-side t 13626 . 13627) (nil tag-attr t 13626 . 13627) (nil tag-name "template" 13626 . 13627) (nil tag-type start 13626 . 13627) (nil face web-mode-variable-name-face 13626 . 13627) (nil block-side t 13624 . 13626) (nil tag-attr t 13624 . 13626) (nil tag-name "template" 13624 . 13626) (nil tag-type start 13624 . 13626) (nil block-side t 13623 . 13624) (nil block-token delimiter-beg 13623 . 13624) (nil tag-attr t 13623 . 13624) (nil tag-name "template" 13623 . 13624) (nil tag-type start 13623 . 13624) (nil font-lock-face web-mode-block-delimiter-face 13623 . 13624) (nil block-side t 13622 . 13623) (nil block-token delimiter-beg 13622 . 13623) (nil tag-attr t 13622 . 13623) (nil tag-name "template" 13622 . 13623) (nil tag-type start 13622 . 13623) (nil font-lock-face web-mode-block-delimiter-face 13622 . 13623) (nil block-side t 13621 . 13622) (nil block-token delimiter-beg 13621 . 13622) (nil tag-attr t 13621 . 13622) (nil tag-name "template" 13621 . 13622) (nil tag-type start 13621 . 13622) (nil font-lock-face web-mode-block-delimiter-face 13621 . 13622) (nil block-side t 13620 . 13621) (nil block-token delimiter-beg 13620 . 13621) (nil tag-attr t 13620 . 13621) (nil tag-name "template" 13620 . 13621) (nil tag-type start 13620 . 13621) (nil font-lock-face web-mode-block-delimiter-face 13620 . 13621) (nil block-side t 13619 . 13620) (nil block-token delimiter-beg 13619 . 13620) (nil tag-attr t 13619 . 13620) (nil tag-name "template" 13619 . 13620) (nil tag-type start 13619 . 13620) (nil font-lock-face web-mode-block-delimiter-face 13619 . 13620) (nil block-side t 13618 . 13619) (nil block-token delimiter-beg 13618 . 13619) (nil tag-attr t 13618 . 13619) (nil tag-name "template" 13618 . 13619) (nil tag-type start 13618 . 13619) (nil font-lock-face web-mode-block-delimiter-face 13618 . 13619) (nil block-side t 13617 . 13618) (nil block-token delimiter-beg 13617 . 13618) (nil tag-attr t 13617 . 13618) (nil tag-name "template" 13617 . 13618) (nil tag-type start 13617 . 13618) (nil font-lock-face web-mode-block-delimiter-face 13617 . 13618) (nil block-beg 0 13616 . 13617) (nil block-controls 0 13616 . 13617) (nil block-side t 13616 . 13617) (nil block-token delimiter-beg 13616 . 13617) (nil tag-attr t 13616 . 13617) (nil tag-name "template" 13616 . 13617) (nil tag-type start 13616 . 13617) (nil font-lock-face web-mode-block-delimiter-face 13616 . 13617) (nil tag-attr t 13611 . 13616) (nil tag-name "template" 13611 . 13616) (nil tag-type start 13611 . 13616) (nil font-lock-face web-mode-html-attr-engine-face 13611 . 13616) (nil tag-attr-beg 2 13610 . 13611) (nil tag-attr t 13610 . 13611) (nil tag-name "template" 13610 . 13611) (nil tag-type start 13610 . 13611) (nil font-lock-face web-mode-html-attr-engine-face 13610 . 13611) (nil tag-name "template" 13609 . 13610) (nil tag-type start 13609 . 13610) (nil tag-name "template" 13601 . 13609) (nil tag-type start 13601 . 13609) (nil font-lock-face web-mode-html-tag-face 13601 . 13609) (nil tag-name "template" 13600 . 13601) (nil tag-type start 13600 . 13601) (nil tag-beg 17 13600 . 13601) (nil font-lock-face web-mode-html-tag-bracket-face 13600 . 13601) (nil tag-name "template" 13596 . 13597) (nil tag-type end 13596 . 13597) (nil tag-end t 13596 . 13597) (nil font-lock-face web-mode-html-tag-bracket-face 13596 . 13597) (nil tag-name "template" 13588 . 13596) (nil tag-type end 13588 . 13596) (nil font-lock-face web-mode-html-tag-face 13588 . 13596) (nil tag-name "template" 13587 . 13588) (nil tag-type end 13587 . 13588) (nil font-lock-face web-mode-html-tag-bracket-face 13587 . 13588) (nil tag-name "template" 13586 . 13587) (nil tag-type end 13586 . 13587) (nil tag-beg 20 13586 . 13587) (nil font-lock-face web-mode-html-tag-bracket-face 13586 . 13587) (nil tag-name "v-icon" 13582 . 13583) (nil tag-type end 13582 . 13583) (nil tag-end t 13582 . 13583) (nil font-lock-face web-mode-html-tag-bracket-face 13582 . 13583) (nil tag-name "v-icon" 13576 . 13582) (nil tag-type end 13576 . 13582) (nil font-lock-face web-mode-html-tag-custom-face 13576 . 13582) (nil tag-name "v-icon" 13575 . 13576) (nil tag-type end 13575 . 13576) (nil font-lock-face web-mode-html-tag-bracket-face 13575 . 13576) (nil tag-name "v-icon" 13574 . 13575) (nil tag-type end 13574 . 13575) (nil tag-beg 22 13574 . 13575) (nil font-lock-face web-mode-html-tag-bracket-face 13574 . 13575) (nil tag-name "v-icon" 13565 . 13566) (nil tag-type start 13565 . 13566) (nil tag-end t 13565 . 13566) (nil font-lock-face web-mode-html-tag-bracket-face 13565 . 13566) (nil tag-name "v-icon" 13559 . 13565) (nil tag-type start 13559 . 13565) (nil font-lock-face web-mode-html-tag-custom-face 13559 . 13565) (nil tag-name "v-icon" 13558 . 13559) (nil tag-type start 13558 . 13559) (nil tag-beg 18 13558 . 13559) (nil font-lock-face web-mode-html-tag-bracket-face 13558 . 13559) (nil tag-name "template" 13552 . 13553) (nil tag-type start 13552 . 13553) (nil tag-end t 13552 . 13553) (nil font-lock-face web-mode-html-tag-bracket-face 13552 . 13553) (nil block-side t 13551 . 13552) (nil block-end t 13551 . 13552) (nil block-token delimiter-end 13551 . 13552) (nil tag-attr t 13551 . 13552) (nil tag-attr-end 14 13551 . 13552) (nil tag-name "template" 13551 . 13552) (nil tag-type start 13551 . 13552) (nil font-lock-face web-mode-block-delimiter-face 13551 . 13552) (nil block-side t 13549 . 13551) (nil tag-attr t 13549 . 13551) (nil tag-name "template" 13549 . 13551) (nil tag-type start 13549 . 13551) (nil block-side t 13548 . 13549) (nil tag-attr t 13548 . 13549) (nil tag-name "template" 13548 . 13549) (nil tag-type start 13548 . 13549) (nil face web-mode-variable-name-face 13548 . 13549) (nil block-side t 13547 . 13548) (nil tag-attr t 13547 . 13548) (nil tag-name "template" 13547 . 13548) (nil tag-type start 13547 . 13548) (nil face web-mode-variable-name-face 13547 . 13548) (nil block-side t 13546 . 13547) (nil tag-attr t 13546 . 13547) (nil tag-name "template" 13546 . 13547) (nil tag-type start 13546 . 13547) (nil face web-mode-variable-name-face 13546 . 13547) (nil block-side t 13545 . 13546) (nil tag-attr t 13545 . 13546) (nil tag-name "template" 13545 . 13546) (nil tag-type start 13545 . 13546) (nil face web-mode-variable-name-face 13545 . 13546) (nil block-side t 13543 . 13545) (nil tag-attr t 13543 . 13545) (nil tag-name "template" 13543 . 13545) (nil tag-type start 13543 . 13545) (nil block-side t 13542 . 13543) (nil block-token delimiter-beg 13542 . 13543) (nil tag-attr t 13542 . 13543) (nil tag-name "template" 13542 . 13543) (nil tag-type start 13542 . 13543) (nil font-lock-face web-mode-block-delimiter-face 13542 . 13543) (nil block-side t 13541 . 13542) (nil block-token delimiter-beg 13541 . 13542) (nil tag-attr t 13541 . 13542) (nil tag-name "template" 13541 . 13542) (nil tag-type start 13541 . 13542) (nil font-lock-face web-mode-block-delimiter-face 13541 . 13542) (nil block-side t 13540 . 13541) (nil block-token delimiter-beg 13540 . 13541) (nil tag-attr t 13540 . 13541) (nil tag-name "template" 13540 . 13541) (nil tag-type start 13540 . 13541) (nil font-lock-face web-mode-block-delimiter-face 13540 . 13541) (nil block-side t 13539 . 13540) (nil block-token delimiter-beg 13539 . 13540) (nil tag-attr t 13539 . 13540) (nil tag-name "template" 13539 . 13540) (nil tag-type start 13539 . 13540) (nil font-lock-face web-mode-block-delimiter-face 13539 . 13540) (nil block-side t 13538 . 13539) (nil block-token delimiter-beg 13538 . 13539) (nil tag-attr t 13538 . 13539) (nil tag-name "template" 13538 . 13539) (nil tag-type start 13538 . 13539) (nil font-lock-face web-mode-block-delimiter-face 13538 . 13539) (nil block-side t 13537 . 13538) (nil block-token delimiter-beg 13537 . 13538) (nil tag-attr t 13537 . 13538) (nil tag-name "template" 13537 . 13538) (nil tag-type start 13537 . 13538) (nil font-lock-face web-mode-block-delimiter-face 13537 . 13538) (nil block-side t 13536 . 13537) (nil block-token delimiter-beg 13536 . 13537) (nil tag-attr t 13536 . 13537) (nil tag-name "template" 13536 . 13537) (nil tag-type start 13536 . 13537) (nil font-lock-face web-mode-block-delimiter-face 13536 . 13537) (nil block-side t 13535 . 13536) (nil block-token delimiter-beg 13535 . 13536) (nil tag-attr t 13535 . 13536) (nil tag-name "template" 13535 . 13536) (nil tag-type start 13535 . 13536) (nil font-lock-face web-mode-block-delimiter-face 13535 . 13536) (nil block-side t 13534 . 13535) (nil block-token delimiter-beg 13534 . 13535) (nil tag-attr t 13534 . 13535) (nil tag-name "template" 13534 . 13535) (nil tag-type start 13534 . 13535) (nil font-lock-face web-mode-block-delimiter-face 13534 . 13535) (nil block-beg 0 13533 . 13534) (nil block-controls 0 13533 . 13534) (nil block-side t 13533 . 13534) (nil block-token delimiter-beg 13533 . 13534) (nil tag-attr t 13533 . 13534) (nil tag-name "template" 13533 . 13534) (nil tag-type start 13533 . 13534) (nil font-lock-face web-mode-block-delimiter-face 13533 . 13534) (nil tag-attr t 13528 . 13533) (nil tag-name "template" 13528 . 13533) (nil tag-type start 13528 . 13533) (nil font-lock-face web-mode-html-attr-engine-face 13528 . 13533) (nil tag-attr-beg 2 13527 . 13528) (nil tag-attr t 13527 . 13528) (nil tag-name "template" 13527 . 13528) (nil tag-type start 13527 . 13528) (nil font-lock-face web-mode-html-attr-engine-face 13527 . 13528) (nil tag-name "template" 13526 . 13527) (nil tag-type start 13526 . 13527) (nil tag-name "template" 13518 . 13526) (nil tag-type start 13518 . 13526) (nil font-lock-face web-mode-html-tag-face 13518 . 13526) (nil tag-name "template" 13517 . 13518) (nil tag-type start 13517 . 13518) (nil tag-beg 17 13517 . 13518) (nil font-lock-face web-mode-html-tag-bracket-face 13517 . 13518) (nil tag-name "v-draggable-treeview" 13513 . 13514) (nil tag-type start 13513 . 13514) (nil tag-end t 13513 . 13514) (nil font-lock-face web-mode-html-tag-bracket-face 13513 . 13514) (nil tag-attr t 13512 . 13513) (nil tag-attr-end 5 13512 . 13513) (nil tag-name "v-draggable-treeview" 13512 . 13513) (nil tag-type start 13512 . 13513) (nil font-lock-face web-mode-html-attr-value-face 13512 . 13513) (nil tag-attr t 13507 . 13512) (nil tag-name "v-draggable-treeview" 13507 . 13512) (nil tag-type start 13507 . 13512) (nil font-lock-face web-mode-html-attr-value-face 13507 . 13512) (nil tag-attr t 13506 . 13507) (nil tag-name "v-draggable-treeview" 13506 . 13507) (nil tag-type start 13506 . 13507) (nil font-lock-face web-mode-html-attr-equal-face 13506 . 13507) (nil tag-attr t 13502 . 13506) (nil tag-name "v-draggable-treeview" 13502 . 13506) (nil tag-type start 13502 . 13506) (nil font-lock-face web-mode-html-attr-name-face 13502 . 13506) (nil tag-attr-beg 0 13501 . 13502) (nil tag-attr t 13501 . 13502) (nil tag-name "v-draggable-treeview" 13501 . 13502) (nil tag-type start 13501 . 13502) (nil font-lock-face web-mode-html-attr-name-face 13501 . 13502) (nil tag-name "v-draggable-treeview" 13500 . 13501) (nil tag-type start 13500 . 13501) (nil tag-attr t 13499 . 13500) (nil tag-attr-end 7 13499 . 13500) (nil tag-name "v-draggable-treeview" 13499 . 13500) (nil tag-type start 13499 . 13500) (nil font-lock-face web-mode-html-attr-value-face 13499 . 13500) (nil tag-attr t 13493 . 13499) (nil tag-name "v-draggable-treeview" 13493 . 13499) (nil tag-type start 13493 . 13499) (nil font-lock-face web-mode-html-attr-value-face 13493 . 13499) (nil tag-attr t 13492 . 13493) (nil tag-name "v-draggable-treeview" 13492 . 13493) (nil tag-type start 13492 . 13493) (nil font-lock-face web-mode-html-attr-equal-face 13492 . 13493) (nil tag-attr t 13486 . 13492) (nil tag-name "v-draggable-treeview" 13486 . 13492) (nil tag-type start 13486 . 13492) (nil font-lock-face web-mode-html-attr-engine-face 13486 . 13492) (nil tag-attr-beg 2 13485 . 13486) (nil tag-attr t 13485 . 13486) (nil tag-name "v-draggable-treeview" 13485 . 13486) (nil tag-type start 13485 . 13486) (nil font-lock-face web-mode-html-attr-engine-face 13485 . 13486) (nil tag-name "v-draggable-treeview" 13484 . 13485) (nil tag-type start 13484 . 13485) (nil tag-name "v-draggable-treeview" 13464 . 13484) (nil tag-type start 13464 . 13484) (nil font-lock-face web-mode-html-tag-custom-face 13464 . 13484) (nil tag-name "v-draggable-treeview" 13463 . 13464) (nil tag-type start 13463 . 13464) (nil tag-beg 19 13463 . 13464) (nil font-lock-face web-mode-html-tag-bracket-face 13463 . 13464) (13463 . 13930)) nil (25819 27218 322921 63000) 0 nil])
([nil nil ((14083 . 14097) (14055 . 14071) ("  " . 14055) (14025 . 14043) ("    " . 14025) (13965 . 13985) ("      " . 13965) (13945 . 13963) (#("    " 0 4 (tag-name "template" tag-type start)) . 13945) (13868 . 13888) (#("            " 0 12 (tag-name "template" tag-type start)) . 13868) (13840 . 13858) ("    " . 13840) (13788 . 13804) ("  " . 13788) (13760 . 13776) ("  " . 13760) (13691 . 13709) ("    " . 13691) (13640 . 13656) ("  " . 13640) (13612 . 13628) ("  " . 13612) (13568 . 13586) ("    " . 13568) (13515 . 13531) ("  " . 13515) 13450) nil (25819 27218 322765 976000) 0 nil])
([nil nil ((13485 . 13501) (#(" " 0 1 (tag-name "v-draggable-treeview" tag-type start)) . 13484) (undo-tree-id174 . -1) (13485 . 13486)) nil (25819 27218 322759 301000) 0 nil])
([nil nil ((13517 . 13533) (#(" " 0 1 (tag-name "v-draggable-treeview" tag-type start)) . 13516) (undo-tree-id173 . -1) (13517 . 13518)) nil (25819 27218 322756 639000) 0 nil])
([nil nil ((13547 . 13561) (#("                " 0 16 (tag-name "v-draggable-treeview" tag-type start face whitespace-trailing)) . 13546) (13546 . 13562) (#("              " 0 14 (tag-name "v-draggable-treeview" tag-type start)) . 13546) (undo-tree-id172 . -14) (13545 . 13561)) nil (25819 27218 322753 267000) 0 nil])
([nil nil ((13546 . 13562)) nil (25819 27218 322750 372000) 0 nil])
([nil nil ((13562 . 13564)) nil (25819 27218 322749 472000) 0 nil])
([nil nil ((13564 . 13569)) nil (25819 27218 322748 334000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-draggable-treeview" tag-type start)) . -13568) (undo-tree-id171 . -1) 13569) nil (25819 27218 322746 887000) 0 nil])
([nil nil ((#("items" 0 5 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13510) (undo-tree-id169 . -5) (undo-tree-id170 . -5)) nil (25819 27218 322743 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13516 . 13517) (nil tag-attr t 13516 . 13517) (nil tag-name "v-draggable-treeview" 13516 . 13517) (nil tag-type start 13516 . 13517) (nil font-lock-face web-mode-html-attr-value-face 13516 . 13517) (nil tag-attr t 13515 . 13516) (nil tag-name "v-draggable-treeview" 13515 . 13516) (nil tag-type start 13515 . 13516) (nil font-lock-face web-mode-html-attr-value-face 13515 . 13516) (nil tag-attr t 13514 . 13515) (nil tag-name "v-draggable-treeview" 13514 . 13515) (nil tag-type start 13514 . 13515) (nil font-lock-face web-mode-html-attr-value-face 13514 . 13515) (nil tag-attr t 13513 . 13514) (nil tag-name "v-draggable-treeview" 13513 . 13514) (nil tag-type start 13513 . 13514) (nil font-lock-face web-mode-html-attr-value-face 13513 . 13514) (nil tag-attr t 13512 . 13513) (nil tag-name "v-draggable-treeview" 13512 . 13513) (nil tag-type start 13512 . 13513) (nil font-lock-face web-mode-html-attr-value-face 13512 . 13513) (nil tag-attr t 13511 . 13512) (nil tag-name "v-draggable-treeview" 13511 . 13512) (nil tag-type start 13511 . 13512) (nil font-lock-face web-mode-html-attr-value-face 13511 . 13512) (nil tag-attr t 13510 . 13511) (nil tag-name "v-draggable-treeview" 13510 . 13511) (nil tag-type start 13510 . 13511) (nil font-lock-face web-mode-html-attr-value-face 13510 . 13511) (13510 . 13517)) nil (25819 27218 322730 316000) 0 nil])
([nil nil ((#("              " 0 14 (face whitespace-trailing)) . -14193) 13517) nil (25819 27218 322715 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13511 . 13512) (nil tag-name "v-container" 13511 . 13512) (nil tag-type start 13511 . 13512) (nil tag-end t 13511 . 13512) (nil font-lock-face web-mode-html-tag-bracket-face 13511 . 13512) (nil tag-name "v-container" 13510 . 13511) (nil tag-type start 13510 . 13511) (nil tag-attr t 13509 . 13510) (nil tag-attr-end 5 13509 . 13510) (nil tag-name "v-container" 13509 . 13510) (nil tag-type start 13509 . 13510) (nil font-lock-face web-mode-html-attr-value-face 13509 . 13510) (nil tag-attr t 13480 . 13509) (nil tag-name "v-container" 13480 . 13509) (nil tag-type start 13480 . 13509) (nil font-lock-face web-mode-html-attr-value-face 13480 . 13509) (nil tag-attr t 13479 . 13480) (nil tag-name "v-container" 13479 . 13480) (nil tag-type start 13479 . 13480) (nil font-lock-face web-mode-html-attr-equal-face 13479 . 13480) (nil tag-attr t 13475 . 13479) (nil tag-name "v-container" 13475 . 13479) (nil tag-type start 13475 . 13479) (nil font-lock-face web-mode-html-attr-name-face 13475 . 13479) (nil tag-attr-beg 0 13474 . 13475) (nil tag-attr t 13474 . 13475) (nil tag-name "v-container" 13474 . 13475) (nil tag-type start 13474 . 13475) (nil font-lock-face web-mode-html-attr-name-face 13474 . 13475) (nil tag-name "v-container" 13473 . 13474) (nil tag-type start 13473 . 13474) (nil tag-attr t 13472 . 13473) (nil tag-attr-end 5 13472 . 13473) (nil tag-name "v-container" 13472 . 13473) (nil tag-type start 13472 . 13473) (nil font-lock-face web-mode-html-attr-value-face 13472 . 13473) (nil tag-attr t 13467 . 13472) (nil tag-name "v-container" 13467 . 13472) (nil tag-type start 13467 . 13472) (nil font-lock-face web-mode-html-attr-value-face 13467 . 13472) (nil tag-attr t 13466 . 13467) (nil tag-name "v-container" 13466 . 13467) (nil tag-type start 13466 . 13467) (nil font-lock-face web-mode-html-attr-equal-face 13466 . 13467) (nil tag-attr t 13462 . 13466) (nil tag-name "v-container" 13462 . 13466) (nil tag-type start 13462 . 13466) (nil font-lock-face web-mode-html-attr-name-face 13462 . 13466) (nil tag-attr-beg 0 13461 . 13462) (nil tag-attr t 13461 . 13462) (nil tag-name "v-container" 13461 . 13462) (nil tag-type start 13461 . 13462) (nil font-lock-face web-mode-html-attr-name-face 13461 . 13462) (nil tag-name "v-container" 13460 . 13461) (nil tag-type start 13460 . 13461) (nil tag-name "v-container" 13449 . 13460) (nil tag-type start 13449 . 13460) (nil font-lock-face web-mode-html-tag-custom-face 13449 . 13460) (nil tag-name "v-container" 13448 . 13449) (nil tag-type start 13448 . 13449) (nil tag-beg 19 13448 . 13449) (nil font-lock-face web-mode-html-tag-bracket-face 13448 . 13449) (13448 . 13512) (t 25819 27218 333634 667000)) nil (25819 27268 938353 379000) 0 nil])
([nil nil ((13448 . 13462) 13512) nil (25819 27268 938339 334000) 0 nil])
([nil nil ((13447 . 13462)) nil (25819 27268 938338 266000) 0 nil])
([nil nil (("  " . -13460) (13462 . 13476)) nil (25819 27268 938337 3000) 0 nil])
([nil nil ((13474 . 13487)) nil (25819 27268 938335 810000) 0 nil])
([nil nil (("  " . -13500) 13534) nil (25819 27268 938334 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7046 . 7047) (nil block-side t 7046 . 7047) (nil block-end t 7046 . 7047) (nil block-token delimiter-end 7046 . 7047) (nil tag-attr t 7046 . 7047) (nil tag-attr-end 5 7046 . 7047) (nil tag-name "v-container" 7046 . 7047) (nil tag-type start 7046 . 7047) (nil font-lock-face web-mode-block-delimiter-face 7046 . 7047) (nil rear-nonsticky t 7045 . 7046) (nil block-side t 7045 . 7046) (nil tag-attr t 7045 . 7046) (nil tag-name "v-container" 7045 . 7046) (nil tag-type start 7045 . 7046) (nil face web-mode-variable-name-face 7045 . 7046) (nil block-side t 7044 . 7045) (nil tag-attr t 7044 . 7045) (nil tag-name "v-container" 7044 . 7045) (nil tag-type start 7044 . 7045) (nil face web-mode-variable-name-face 7044 . 7045) (nil block-side t 7043 . 7044) (nil tag-attr t 7043 . 7044) (nil tag-name "v-container" 7043 . 7044) (nil tag-type start 7043 . 7044) (nil face web-mode-variable-name-face 7043 . 7044) (nil block-side t 7042 . 7043) (nil tag-attr t 7042 . 7043) (nil tag-name "v-container" 7042 . 7043) (nil tag-type start 7042 . 7043) (nil face web-mode-variable-name-face 7042 . 7043) (nil block-side t 7041 . 7042) (nil tag-attr t 7041 . 7042) (nil tag-name "v-container" 7041 . 7042) (nil tag-type start 7041 . 7042) (nil face web-mode-variable-name-face 7041 . 7042) (nil block-side t 7040 . 7041) (nil tag-attr t 7040 . 7041) (nil tag-name "v-container" 7040 . 7041) (nil tag-type start 7040 . 7041) (nil face web-mode-variable-name-face 7040 . 7041) (nil block-side t 7039 . 7040) (nil tag-attr t 7039 . 7040) (nil tag-name "v-container" 7039 . 7040) (nil tag-type start 7039 . 7040) (nil face web-mode-variable-name-face 7039 . 7040) (nil block-side t 7038 . 7039) (nil tag-attr t 7038 . 7039) (nil tag-name "v-container" 7038 . 7039) (nil tag-type start 7038 . 7039) (nil face web-mode-variable-name-face 7038 . 7039) (nil block-side t 7037 . 7038) (nil tag-attr t 7037 . 7038) (nil tag-name "v-container" 7037 . 7038) (nil tag-type start 7037 . 7038) (nil face web-mode-variable-name-face 7037 . 7038) (nil block-side t 7036 . 7037) (nil tag-attr t 7036 . 7037) (nil tag-name "v-container" 7036 . 7037) (nil tag-type start 7036 . 7037) (nil block-side t 7035 . 7036) (nil block-token delimiter-beg 7035 . 7036) (nil tag-attr t 7035 . 7036) (nil tag-name "v-container" 7035 . 7036) (nil tag-type start 7035 . 7036) (nil font-lock-face web-mode-block-delimiter-face 7035 . 7036) (nil block-side t 7034 . 7035) (nil block-token delimiter-beg 7034 . 7035) (nil tag-attr t 7034 . 7035) (nil tag-name "v-container" 7034 . 7035) (nil tag-type start 7034 . 7035) (nil font-lock-face web-mode-block-delimiter-face 7034 . 7035) (nil block-side t 7033 . 7034) (nil block-token delimiter-beg 7033 . 7034) (nil tag-attr t 7033 . 7034) (nil tag-name "v-container" 7033 . 7034) (nil tag-type start 7033 . 7034) (nil font-lock-face web-mode-block-delimiter-face 7033 . 7034) (nil block-side t 7032 . 7033) (nil block-token delimiter-beg 7032 . 7033) (nil tag-attr t 7032 . 7033) (nil tag-name "v-container" 7032 . 7033) (nil tag-type start 7032 . 7033) (nil font-lock-face web-mode-block-delimiter-face 7032 . 7033) (nil block-side t 7031 . 7032) (nil block-token delimiter-beg 7031 . 7032) (nil tag-attr t 7031 . 7032) (nil tag-name "v-container" 7031 . 7032) (nil tag-type start 7031 . 7032) (nil font-lock-face web-mode-block-delimiter-face 7031 . 7032) (nil block-side t 7030 . 7031) (nil block-token delimiter-beg 7030 . 7031) (nil tag-attr t 7030 . 7031) (nil tag-name "v-container" 7030 . 7031) (nil tag-type start 7030 . 7031) (nil font-lock-face web-mode-block-delimiter-face 7030 . 7031) (nil block-beg 0 7029 . 7030) (nil block-controls 0 7029 . 7030) (nil block-side t 7029 . 7030) (nil block-token delimiter-beg 7029 . 7030) (nil tag-attr-beg 2 7029 . 7030) (nil tag-attr t 7029 . 7030) (nil tag-name "v-container" 7029 . 7030) (nil tag-type start 7029 . 7030) (nil font-lock-face web-mode-block-delimiter-face 7029 . 7030) (7029 . 7047)) nil (25819 27268 938328 324000) 0 nil])
([nil nil ((7047 . 7048)) nil (25819 27268 938303 669000) 0 nil])
([nil nil ((#("
                :v-if=\"!tree_edit\"" 0 1 (tag-name "v-treeview" tag-type start) 1 17 (tag-name "v-treeview" tag-type start) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t tag-attr t tag-name "v-treeview" tag-type start) 25 26 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 33 34 (rear-nonsticky t block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 34 35 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-treeview" tag-type start font-lock-face web-mode-block-delimiter-face)) . 7125) (undo-tree-id189 . -17) (undo-tree-id190 . -1) (undo-tree-id191 . -35) (undo-tree-id192 . -24) (undo-tree-id193 . -35) (undo-tree-id194 . -35) (undo-tree-id195 . -35)) nil (25819 27268 938302 71000) 0 nil])
([nil nil ((#("
                v-else" 0 1 (tag-name "v-draggable-treeview" tag-type start) 1 17 (tag-name "v-draggable-treeview" tag-type start) 17 18 (tag-attr-beg 2 tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face) 18 19 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face) 19 20 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face) 20 21 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face) 21 22 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face) 22 23 (tag-attr t tag-attr-end 0 tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-engine-face)) . 13647) (undo-tree-id185 . -1) (undo-tree-id186 . -23) (undo-tree-id187 . -20) (undo-tree-id188 . -23)) nil (25819 27268 938293 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13519 . 13520) (nil tag-attr t 13519 . 13520) (nil tag-name "v-container" 13519 . 13520) (nil tag-type start 13519 . 13520) (nil font-lock-face web-mode-html-attr-engine-face 13519 . 13520) (nil tag-attr t 13518 . 13519) (nil tag-name "v-container" 13518 . 13519) (nil tag-type start 13518 . 13519) (nil font-lock-face web-mode-html-attr-engine-face 13518 . 13519) (nil tag-attr t 13517 . 13518) (nil tag-name "v-container" 13517 . 13518) (nil tag-type start 13517 . 13518) (nil font-lock-face web-mode-html-attr-engine-face 13517 . 13518) (nil tag-attr t 13516 . 13517) (nil tag-name "v-container" 13516 . 13517) (nil tag-type start 13516 . 13517) (nil font-lock-face web-mode-html-attr-engine-face 13516 . 13517) (nil tag-attr t 13515 . 13516) (nil tag-name "v-container" 13515 . 13516) (nil tag-type start 13515 . 13516) (nil font-lock-face web-mode-html-attr-engine-face 13515 . 13516) (nil tag-attr-beg 2 13514 . 13515) (nil tag-attr t 13514 . 13515) (nil tag-name "v-container" 13514 . 13515) (nil tag-type start 13514 . 13515) (nil font-lock-face web-mode-html-attr-engine-face 13514 . 13515) (nil tag-name "v-container" 13498 . 13514) (nil tag-type start 13498 . 13514) (nil tag-name "v-container" 13497 . 13498) (nil tag-type start 13497 . 13498) (13497 . 13520)) nil (25819 27268 938286 65000) 0 nil])
([nil nil ((13520 . 13521)) nil (25819 27268 938278 327000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#(" " 0 1 (tag-name "v-container" tag-type start)) . 13496) (#("
" 0 1 (tag-name "v-container" tag-type start)) . 13496) (undo-tree-id182 . -1) (#(" " 0 1 (tag-name "v-container" tag-type start face whitespace-trailing)) . 13496) (undo-tree-id183 . -1) (undo-tree-id184 . -1)) nil (25819 27268 938274 198000) 0 nil])
([nil nil ((#("            " 0 12 (face whitespace-trailing)) . -13459) 13496) nil (25819 27268 938253 262000) 0 nil])
([nil nil ((#(":" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-block-delimiter-face)) . -7029) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 7030 (t 25819 27268 949757 782000)) nil (25819 27287 658531 976000) 0 nil])
([nil nil ((#("                <template v-slot:prepend=\"{ item }\">
                  <v-icon>mdi-file</v-icon>
                </template>" 16 17 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 17 25 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 25 26 (tag-name "template" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 32 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 42 44 (block-side t tag-attr t tag-name "template" tag-type start) 44 45 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 45 46 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 47 48 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 48 50 (block-side t tag-attr t tag-name "template" tag-type start) 50 51 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 14 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 72 78 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 78 79 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 87 88 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 88 89 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 89 95 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 95 96 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 113 114 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 114 115 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 115 123 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 123 124 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13658) (undo-tree-id221 . -53) (undo-tree-id222 . -124) (undo-tree-id223 . -124) (t 25819 27287 673803 331000)) nil (25819 30019 540897 937000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14182 . 14183) (nil tag-name "template" 14182 . 14183) (nil tag-type end 14182 . 14183) (nil tag-end t 14182 . 14183) (nil font-lock-face web-mode-html-tag-bracket-face 14182 . 14183) (nil tag-name "template" 14174 . 14182) (nil tag-type end 14174 . 14182) (nil font-lock-face web-mode-html-tag-face 14174 . 14182) (nil tag-name "template" 14173 . 14174) (nil tag-type end 14173 . 14174) (nil font-lock-face web-mode-html-tag-bracket-face 14173 . 14174) (nil tag-name "template" 14172 . 14173) (nil tag-type end 14172 . 14173) (nil tag-beg 20 14172 . 14173) (nil font-lock-face web-mode-html-tag-bracket-face 14172 . 14173) (nil tag-name "v-icon" 14154 . 14155) (nil tag-type end 14154 . 14155) (nil tag-end t 14154 . 14155) (nil font-lock-face web-mode-html-tag-bracket-face 14154 . 14155) (nil tag-name "v-icon" 14148 . 14154) (nil tag-type end 14148 . 14154) (nil font-lock-face web-mode-html-tag-custom-face 14148 . 14154) (nil tag-name "v-icon" 14147 . 14148) (nil tag-type end 14147 . 14148) (nil font-lock-face web-mode-html-tag-bracket-face 14147 . 14148) (nil tag-name "v-icon" 14146 . 14147) (nil tag-type end 14146 . 14147) (nil tag-beg 22 14146 . 14147) (nil font-lock-face web-mode-html-tag-bracket-face 14146 . 14147) (nil tag-name "v-icon" 14095 . 14096) (nil tag-type start 14095 . 14096) (nil tag-end t 14095 . 14096) (nil font-lock-face web-mode-html-tag-bracket-face 14095 . 14096) (nil tag-attr t 14094 . 14095) (nil tag-attr-end 0 14094 . 14095) (nil tag-name "v-icon" 14094 . 14095) (nil tag-type start 14094 . 14095) (nil font-lock-face web-mode-html-attr-engine-face 14094 . 14095) (nil tag-attr t 14090 . 14094) (nil tag-name "v-icon" 14090 . 14094) (nil tag-type start 14090 . 14094) (nil font-lock-face web-mode-html-attr-engine-face 14090 . 14094) (nil tag-attr-beg 2 14089 . 14090) (nil tag-attr t 14089 . 14090) (nil tag-name "v-icon" 14089 . 14090) (nil tag-type start 14089 . 14090) (nil font-lock-face web-mode-html-attr-engine-face 14089 . 14090) (nil tag-name "v-icon" 14088 . 14089) (nil tag-type start 14088 . 14089) (nil block-side t 14087 . 14088) (nil block-end t 14087 . 14088) (nil block-token delimiter-end 14087 . 14088) (nil tag-attr t 14087 . 14088) (nil tag-attr-end 6 14087 . 14088) (nil tag-name "v-icon" 14087 . 14088) (nil tag-type start 14087 . 14088) (nil font-lock-face web-mode-block-delimiter-face 14087 . 14088) (nil block-side t 14081 . 14087) (nil tag-attr t 14081 . 14087) (nil tag-name "v-icon" 14081 . 14087) (nil tag-type start 14081 . 14087) (nil block-side t 14080 . 14081) (nil tag-attr t 14080 . 14081) (nil tag-name "v-icon" 14080 . 14081) (nil tag-type start 14080 . 14081) (nil face web-mode-variable-name-face 14080 . 14081) (nil block-side t 14079 . 14080) (nil tag-attr t 14079 . 14080) (nil tag-name "v-icon" 14079 . 14080) (nil tag-type start 14079 . 14080) (nil face web-mode-variable-name-face 14079 . 14080) (nil block-side t 14078 . 14079) (nil tag-attr t 14078 . 14079) (nil tag-name "v-icon" 14078 . 14079) (nil tag-type start 14078 . 14079) (nil block-side t 14077 . 14078) (nil tag-attr t 14077 . 14078) (nil tag-name "v-icon" 14077 . 14078) (nil tag-type start 14077 . 14078) (nil face web-mode-variable-name-face 14077 . 14078) (nil block-side t 14076 . 14077) (nil tag-attr t 14076 . 14077) (nil tag-name "v-icon" 14076 . 14077) (nil tag-type start 14076 . 14077) (nil face web-mode-variable-name-face 14076 . 14077) (nil block-side t 14075 . 14076) (nil tag-attr t 14075 . 14076) (nil tag-name "v-icon" 14075 . 14076) (nil tag-type start 14075 . 14076) (nil face web-mode-variable-name-face 14075 . 14076) (nil block-side t 14074 . 14075) (nil tag-attr t 14074 . 14075) (nil tag-name "v-icon" 14074 . 14075) (nil tag-type start 14074 . 14075) (nil face web-mode-variable-name-face 14074 . 14075) (nil block-side t 14073 . 14074) (nil tag-attr t 14073 . 14074) (nil tag-name "v-icon" 14073 . 14074) (nil tag-type start 14073 . 14074) (nil block-side t 14072 . 14073) (nil tag-attr t 14072 . 14073) (nil tag-name "v-icon" 14072 . 14073) (nil tag-type start 14072 . 14073) (nil face web-mode-variable-name-face 14072 . 14073) (nil block-side t 14071 . 14072) (nil tag-attr t 14071 . 14072) (nil tag-name "v-icon" 14071 . 14072) (nil tag-type start 14071 . 14072) (nil face web-mode-variable-name-face 14071 . 14072) (nil block-side t 14070 . 14071) (nil tag-attr t 14070 . 14071) (nil tag-name "v-icon" 14070 . 14071) (nil tag-type start 14070 . 14071) (nil face web-mode-variable-name-face 14070 . 14071) (nil block-side t 14069 . 14070) (nil tag-attr t 14069 . 14070) (nil tag-name "v-icon" 14069 . 14070) (nil tag-type start 14069 . 14070) (nil face web-mode-variable-name-face 14069 . 14070) (nil block-side t 14068 . 14069) (nil tag-attr t 14068 . 14069) (nil tag-name "v-icon" 14068 . 14069) (nil tag-type start 14068 . 14069) (nil face web-mode-variable-name-face 14068 . 14069) (nil block-side t 14067 . 14068) (nil tag-attr t 14067 . 14068) (nil tag-name "v-icon" 14067 . 14068) (nil tag-type start 14067 . 14068) (nil face web-mode-variable-name-face 14067 . 14068) (nil block-side t 14066 . 14067) (nil tag-attr t 14066 . 14067) (nil tag-name "v-icon" 14066 . 14067) (nil tag-type start 14066 . 14067) (nil face web-mode-variable-name-face 14066 . 14067) (nil block-side t 14065 . 14066) (nil tag-attr t 14065 . 14066) (nil tag-name "v-icon" 14065 . 14066) (nil tag-type start 14065 . 14066) (nil face web-mode-variable-name-face 14065 . 14066) (nil block-side t 14064 . 14065) (nil tag-attr t 14064 . 14065) (nil tag-name "v-icon" 14064 . 14065) (nil tag-type start 14064 . 14065) (nil face web-mode-variable-name-face 14064 . 14065) (nil block-side t 14063 . 14064) (nil tag-attr t 14063 . 14064) (nil tag-name "v-icon" 14063 . 14064) (nil tag-type start 14063 . 14064) (nil face web-mode-variable-name-face 14063 . 14064) (nil block-side t 14062 . 14063) (nil tag-attr t 14062 . 14063) (nil tag-name "v-icon" 14062 . 14063) (nil tag-type start 14062 . 14063) (nil face web-mode-variable-name-face 14062 . 14063) (nil block-side t 14061 . 14062) (nil tag-attr t 14061 . 14062) (nil tag-name "v-icon" 14061 . 14062) (nil tag-type start 14061 . 14062) (nil face web-mode-variable-name-face 14061 . 14062) (nil block-side t 14060 . 14061) (nil tag-attr t 14060 . 14061) (nil tag-name "v-icon" 14060 . 14061) (nil tag-type start 14060 . 14061) (nil face web-mode-variable-name-face 14060 . 14061) (nil block-side t 14059 . 14060) (nil tag-attr t 14059 . 14060) (nil tag-name "v-icon" 14059 . 14060) (nil tag-type start 14059 . 14060) (nil face web-mode-variable-name-face 14059 . 14060) (nil block-side t 14058 . 14059) (nil tag-attr t 14058 . 14059) (nil tag-name "v-icon" 14058 . 14059) (nil tag-type start 14058 . 14059) (nil face web-mode-variable-name-face 14058 . 14059) (nil block-side t 14057 . 14058) (nil tag-attr t 14057 . 14058) (nil tag-name "v-icon" 14057 . 14058) (nil tag-type start 14057 . 14058) (nil face web-mode-variable-name-face 14057 . 14058) (nil block-side t 14054 . 14057) (nil tag-attr t 14054 . 14057) (nil tag-name "v-icon" 14054 . 14057) (nil tag-type start 14054 . 14057) (nil block-side t 14053 . 14054) (nil tag-attr t 14053 . 14054) (nil tag-name "v-icon" 14053 . 14054) (nil tag-type start 14053 . 14054) (nil face web-mode-variable-name-face 14053 . 14054) (nil block-side t 14052 . 14053) (nil tag-attr t 14052 . 14053) (nil tag-name "v-icon" 14052 . 14053) (nil tag-type start 14052 . 14053) (nil face web-mode-variable-name-face 14052 . 14053) (nil block-side t 14051 . 14052) (nil tag-attr t 14051 . 14052) (nil tag-name "v-icon" 14051 . 14052) (nil tag-type start 14051 . 14052) (nil face web-mode-variable-name-face 14051 . 14052) (nil block-side t 14050 . 14051) (nil tag-attr t 14050 . 14051) (nil tag-name "v-icon" 14050 . 14051) (nil tag-type start 14050 . 14051) (nil face web-mode-variable-name-face 14050 . 14051) (nil block-side t 14045 . 14050) (nil tag-attr t 14045 . 14050) (nil tag-name "v-icon" 14045 . 14050) (nil tag-type start 14045 . 14050) (nil block-side t 14044 . 14045) (nil tag-attr t 14044 . 14045) (nil tag-name "v-icon" 14044 . 14045) (nil tag-type start 14044 . 14045) (nil face web-mode-variable-name-face 14044 . 14045) (nil block-side t 14043 . 14044) (nil tag-attr t 14043 . 14044) (nil tag-name "v-icon" 14043 . 14044) (nil tag-type start 14043 . 14044) (nil face web-mode-variable-name-face 14043 . 14044) (nil block-side t 14042 . 14043) (nil tag-attr t 14042 . 14043) (nil tag-name "v-icon" 14042 . 14043) (nil tag-type start 14042 . 14043) (nil block-side t 14041 . 14042) (nil tag-attr t 14041 . 14042) (nil tag-name "v-icon" 14041 . 14042) (nil tag-type start 14041 . 14042) (nil face web-mode-variable-name-face 14041 . 14042) (nil block-side t 14040 . 14041) (nil tag-attr t 14040 . 14041) (nil tag-name "v-icon" 14040 . 14041) (nil tag-type start 14040 . 14041) (nil face web-mode-variable-name-face 14040 . 14041) (nil block-side t 14039 . 14040) (nil tag-attr t 14039 . 14040) (nil tag-name "v-icon" 14039 . 14040) (nil tag-type start 14039 . 14040) (nil face web-mode-variable-name-face 14039 . 14040) (nil block-side t 14038 . 14039) (nil tag-attr t 14038 . 14039) (nil tag-name "v-icon" 14038 . 14039) (nil tag-type start 14038 . 14039) (nil face web-mode-variable-name-face 14038 . 14039) (nil block-side t 14037 . 14038) (nil tag-attr t 14037 . 14038) (nil tag-name "v-icon" 14037 . 14038) (nil tag-type start 14037 . 14038) (nil block-side t 14036 . 14037) (nil tag-attr t 14036 . 14037) (nil tag-name "v-icon" 14036 . 14037) (nil tag-type start 14036 . 14037) (nil face web-mode-variable-name-face 14036 . 14037) (nil block-side t 14035 . 14036) (nil tag-attr t 14035 . 14036) (nil tag-name "v-icon" 14035 . 14036) (nil tag-type start 14035 . 14036) (nil face web-mode-variable-name-face 14035 . 14036) (nil block-side t 14034 . 14035) (nil tag-attr t 14034 . 14035) (nil tag-name "v-icon" 14034 . 14035) (nil tag-type start 14034 . 14035) (nil face web-mode-variable-name-face 14034 . 14035) (nil block-side t 14033 . 14034) (nil tag-attr t 14033 . 14034) (nil tag-name "v-icon" 14033 . 14034) (nil tag-type start 14033 . 14034) (nil face web-mode-variable-name-face 14033 . 14034) (nil block-side t 14032 . 14033) (nil tag-attr t 14032 . 14033) (nil tag-name "v-icon" 14032 . 14033) (nil tag-type start 14032 . 14033) (nil face web-mode-variable-name-face 14032 . 14033) (nil block-side t 14031 . 14032) (nil tag-attr t 14031 . 14032) (nil tag-name "v-icon" 14031 . 14032) (nil tag-type start 14031 . 14032) (nil face web-mode-variable-name-face 14031 . 14032) (nil block-side t 14030 . 14031) (nil tag-attr t 14030 . 14031) (nil tag-name "v-icon" 14030 . 14031) (nil tag-type start 14030 . 14031) (nil face web-mode-variable-name-face 14030 . 14031) (nil block-side t 14029 . 14030) (nil tag-attr t 14029 . 14030) (nil tag-name "v-icon" 14029 . 14030) (nil tag-type start 14029 . 14030) (nil face web-mode-variable-name-face 14029 . 14030) (nil block-side t 14028 . 14029) (nil tag-attr t 14028 . 14029) (nil tag-name "v-icon" 14028 . 14029) (nil tag-type start 14028 . 14029) (nil face web-mode-variable-name-face 14028 . 14029) (nil block-side t 14027 . 14028) (nil tag-attr t 14027 . 14028) (nil tag-name "v-icon" 14027 . 14028) (nil tag-type start 14027 . 14028) (nil face web-mode-variable-name-face 14027 . 14028) (nil block-side t 14026 . 14027) (nil tag-attr t 14026 . 14027) (nil tag-name "v-icon" 14026 . 14027) (nil tag-type start 14026 . 14027) (nil face web-mode-variable-name-face 14026 . 14027) (nil block-side t 14025 . 14026) (nil tag-attr t 14025 . 14026) (nil tag-name "v-icon" 14025 . 14026) (nil tag-type start 14025 . 14026) (nil face web-mode-variable-name-face 14025 . 14026) (nil block-side t 14024 . 14025) (nil tag-attr t 14024 . 14025) (nil tag-name "v-icon" 14024 . 14025) (nil tag-type start 14024 . 14025) (nil face web-mode-variable-name-face 14024 . 14025) (nil block-side t 14023 . 14024) (nil tag-attr t 14023 . 14024) (nil tag-name "v-icon" 14023 . 14024) (nil tag-type start 14023 . 14024) (nil face web-mode-variable-name-face 14023 . 14024) (nil block-side t 14022 . 14023) (nil tag-attr t 14022 . 14023) (nil tag-name "v-icon" 14022 . 14023) (nil tag-type start 14022 . 14023) (nil face web-mode-variable-name-face 14022 . 14023) (nil block-side t 14021 . 14022) (nil tag-attr t 14021 . 14022) (nil tag-name "v-icon" 14021 . 14022) (nil tag-type start 14021 . 14022) (nil face web-mode-variable-name-face 14021 . 14022) (nil block-side t 14020 . 14021) (nil block-token delimiter-beg 14020 . 14021) (nil tag-attr t 14020 . 14021) (nil tag-name "v-icon" 14020 . 14021) (nil tag-type start 14020 . 14021) (nil font-lock-face web-mode-block-delimiter-face 14020 . 14021) (nil block-side t 14019 . 14020) (nil block-token delimiter-beg 14019 . 14020) (nil tag-attr t 14019 . 14020) (nil tag-name "v-icon" 14019 . 14020) (nil tag-type start 14019 . 14020) (nil font-lock-face web-mode-block-delimiter-face 14019 . 14020) (nil block-side t 14018 . 14019) (nil block-token delimiter-beg 14018 . 14019) (nil tag-attr t 14018 . 14019) (nil tag-name "v-icon" 14018 . 14019) (nil tag-type start 14018 . 14019) (nil font-lock-face web-mode-block-delimiter-face 14018 . 14019) (nil block-side t 14017 . 14018) (nil block-token delimiter-beg 14017 . 14018) (nil tag-attr t 14017 . 14018) (nil tag-name "v-icon" 14017 . 14018) (nil tag-type start 14017 . 14018) (nil font-lock-face web-mode-block-delimiter-face 14017 . 14018) (nil block-side t 14016 . 14017) (nil block-token delimiter-beg 14016 . 14017) (nil tag-attr t 14016 . 14017) (nil tag-name "v-icon" 14016 . 14017) (nil tag-type start 14016 . 14017) (nil font-lock-face web-mode-block-delimiter-face 14016 . 14017) (nil block-side t 14015 . 14016) (nil block-token delimiter-beg 14015 . 14016) (nil tag-attr t 14015 . 14016) (nil tag-name "v-icon" 14015 . 14016) (nil tag-type start 14015 . 14016) (nil font-lock-face web-mode-block-delimiter-face 14015 . 14016) (nil block-side t 14014 . 14015) (nil block-token delimiter-beg 14014 . 14015) (nil tag-attr t 14014 . 14015) (nil tag-name "v-icon" 14014 . 14015) (nil tag-type start 14014 . 14015) (nil font-lock-face web-mode-block-delimiter-face 14014 . 14015) (nil block-beg 0 14013 . 14014) (nil block-controls 0 14013 . 14014) (nil block-side t 14013 . 14014) (nil block-token delimiter-beg 14013 . 14014) (nil tag-attr-beg 2 14013 . 14014) (nil tag-attr t 14013 . 14014) (nil tag-name "v-icon" 14013 . 14014) (nil tag-type start 14013 . 14014) (nil font-lock-face web-mode-block-delimiter-face 14013 . 14014) (nil tag-name "v-icon" 14012 . 14013) (nil tag-type start 14012 . 14013) (nil tag-name "v-icon" 14006 . 14012) (nil tag-type start 14006 . 14012) (nil font-lock-face web-mode-html-tag-custom-face 14006 . 14012) (nil tag-name "v-icon" 14005 . 14006) (nil tag-type start 14005 . 14006) (nil tag-beg 19 14005 . 14006) (nil font-lock-face web-mode-html-tag-bracket-face 14005 . 14006) (nil tag-name "v-icon" 13985 . 13986) (nil tag-type end 13985 . 13986) (nil tag-end t 13985 . 13986) (nil font-lock-face web-mode-html-tag-bracket-face 13985 . 13986) (nil tag-name "v-icon" 13979 . 13985) (nil tag-type end 13979 . 13985) (nil font-lock-face web-mode-html-tag-custom-face 13979 . 13985) (nil tag-name "v-icon" 13978 . 13979) (nil tag-type end 13978 . 13979) (nil font-lock-face web-mode-html-tag-bracket-face 13978 . 13979) (nil tag-name "v-icon" 13977 . 13978) (nil tag-type end 13977 . 13978) (nil tag-beg 22 13977 . 13978) (nil font-lock-face web-mode-html-tag-bracket-face 13977 . 13978) (nil block-side t 13957 . 13958) (nil block-end t 13957 . 13958) (nil block-token delimiter-end 13957 . 13958) (nil font-lock-face web-mode-block-delimiter-face 13957 . 13958) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13957 . 13958) (nil block-side t 13956 . 13957) (nil block-token delimiter-end 13956 . 13957) (nil font-lock-face web-mode-block-delimiter-face 13956 . 13957) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13956 . 13957) (nil block-side t 13954 . 13956) (nil block-side t 13953 . 13954) (nil face web-mode-variable-name-face 13953 . 13954) (nil block-side t 13952 . 13953) (nil face web-mode-variable-name-face 13952 . 13953) (nil block-side t 13951 . 13952) (nil face web-mode-variable-name-face 13951 . 13952) (nil block-side t 13950 . 13951) (nil face web-mode-variable-name-face 13950 . 13951) (nil block-side t 13949 . 13950) (nil face web-mode-variable-name-face 13949 . 13950) (nil block-side t 13948 . 13949) (nil face web-mode-variable-name-face 13948 . 13949) (nil block-side t 13947 . 13948) (nil block-side t 13946 . 13947) (nil face web-mode-variable-name-face 13946 . 13947) (nil block-side t 13945 . 13946) (nil face web-mode-variable-name-face 13945 . 13946) (nil block-side t 13944 . 13945) (nil face web-mode-variable-name-face 13944 . 13945) (nil block-side t 13939 . 13944) (nil block-side t 13938 . 13939) (nil face web-mode-variable-name-face 13938 . 13939) (nil block-side t 13937 . 13938) (nil face web-mode-variable-name-face 13937 . 13938) (nil block-side t 13936 . 13937) (nil face web-mode-variable-name-face 13936 . 13937) (nil block-side t 13935 . 13936) (nil face web-mode-variable-name-face 13935 . 13936) (nil block-side t 13934 . 13935) (nil block-side t 13933 . 13934) (nil face web-mode-variable-name-face 13933 . 13934) (nil block-side t 13932 . 13933) (nil face web-mode-variable-name-face 13932 . 13933) (nil block-side t 13931 . 13932) (nil face web-mode-variable-name-face 13931 . 13932) (nil block-side t 13930 . 13931) (nil face web-mode-variable-name-face 13930 . 13931) (nil block-side t 13929 . 13930) (nil face web-mode-variable-name-face 13929 . 13930) (nil block-side t 13928 . 13929) (nil face web-mode-variable-name-face 13928 . 13929) (nil block-side t 13927 . 13928) (nil block-side t 13926 . 13927) (nil face web-mode-variable-name-face 13926 . 13927) (nil block-side t 13925 . 13926) (nil face web-mode-variable-name-face 13925 . 13926) (nil block-side t 13924 . 13925) (nil face web-mode-variable-name-face 13924 . 13925) (nil block-side t 13920 . 13924) (nil block-side t 13919 . 13920) (nil face web-mode-variable-name-face 13919 . 13920) (nil block-side t 13918 . 13919) (nil face web-mode-variable-name-face 13918 . 13919) (nil block-side t 13917 . 13918) (nil face web-mode-variable-name-face 13917 . 13918) (nil block-side t 13916 . 13917) (nil face web-mode-variable-name-face 13916 . 13917) (nil block-side t 13915 . 13916) (nil block-side t 13914 . 13915) (nil block-token delimiter-beg 13914 . 13915) (nil font-lock-face web-mode-block-delimiter-face 13914 . 13915) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13914 . 13915) (nil block-beg 0 13913 . 13914) (nil block-controls 0 13913 . 13914) (nil block-side t 13913 . 13914) (nil block-token delimiter-beg 13913 . 13914) (nil font-lock-face web-mode-block-delimiter-face 13913 . 13914) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13913 . 13914) (nil tag-name "v-icon" 13891 . 13892) (nil tag-type start 13891 . 13892) (nil tag-end t 13891 . 13892) (nil font-lock-face web-mode-html-tag-bracket-face 13891 . 13892) (nil tag-attr t 13890 . 13891) (nil tag-attr-end 9 13890 . 13891) (nil tag-name "v-icon" 13890 . 13891) (nil tag-type start 13890 . 13891) (nil font-lock-face web-mode-html-attr-value-face 13890 . 13891) (nil tag-attr t 13877 . 13890) (nil tag-name "v-icon" 13877 . 13890) (nil tag-type start 13877 . 13890) (nil font-lock-face web-mode-html-attr-value-face 13877 . 13890) (nil tag-attr t 13876 . 13877) (nil tag-name "v-icon" 13876 . 13877) (nil tag-type start 13876 . 13877) (nil font-lock-face web-mode-html-attr-equal-face 13876 . 13877) (nil tag-attr t 13868 . 13876) (nil tag-name "v-icon" 13868 . 13876) (nil tag-type start 13868 . 13876) (nil font-lock-face web-mode-html-attr-engine-face 13868 . 13876) (nil tag-attr-beg 2 13867 . 13868) (nil tag-attr t 13867 . 13868) (nil tag-name "v-icon" 13867 . 13868) (nil tag-type start 13867 . 13868) (nil font-lock-face web-mode-html-attr-engine-face 13867 . 13868) (nil tag-name "v-icon" 13866 . 13867) (nil tag-type start 13866 . 13867) (nil tag-name "v-icon" 13860 . 13866) (nil tag-type start 13860 . 13866) (nil font-lock-face web-mode-html-tag-custom-face 13860 . 13866) (nil tag-name "v-icon" 13859 . 13860) (nil tag-type start 13859 . 13860) (nil tag-beg 19 13859 . 13860) (nil font-lock-face web-mode-html-tag-bracket-face 13859 . 13860) (nil tag-name "v-icon" 13839 . 13840) (nil tag-type end 13839 . 13840) (nil tag-end t 13839 . 13840) (nil font-lock-face web-mode-html-tag-bracket-face 13839 . 13840) (nil tag-name "v-icon" 13833 . 13839) (nil tag-type end 13833 . 13839) (nil font-lock-face web-mode-html-tag-custom-face 13833 . 13839) (nil tag-name "v-icon" 13832 . 13833) (nil tag-type end 13832 . 13833) (nil font-lock-face web-mode-html-tag-bracket-face 13832 . 13833) (nil tag-name "v-icon" 13831 . 13832) (nil tag-type end 13831 . 13832) (nil tag-beg 22 13831 . 13832) (nil font-lock-face web-mode-html-tag-bracket-face 13831 . 13832) (nil tag-name "v-icon" 13778 . 13779) (nil tag-type start 13778 . 13779) (nil tag-end t 13778 . 13779) (nil font-lock-face web-mode-html-tag-bracket-face 13778 . 13779) (nil tag-attr t 13777 . 13778) (nil tag-attr-end 4 13777 . 13778) (nil tag-name "v-icon" 13777 . 13778) (nil tag-type start 13777 . 13778) (nil font-lock-face web-mode-html-attr-value-face 13777 . 13778) (nil tag-attr t 13748 . 13777) (nil tag-name "v-icon" 13748 . 13777) (nil tag-type start 13748 . 13777) (nil font-lock-face web-mode-html-attr-value-face 13748 . 13777) (nil tag-attr t 13747 . 13748) (nil tag-name "v-icon" 13747 . 13748) (nil tag-type start 13747 . 13748) (nil font-lock-face web-mode-html-attr-equal-face 13747 . 13748) (nil tag-attr t 13744 . 13747) (nil tag-name "v-icon" 13744 . 13747) (nil tag-type start 13744 . 13747) (nil font-lock-face web-mode-html-attr-engine-face 13744 . 13747) (nil tag-attr-beg 2 13743 . 13744) (nil tag-attr t 13743 . 13744) (nil tag-name "v-icon" 13743 . 13744) (nil tag-type start 13743 . 13744) (nil font-lock-face web-mode-html-attr-engine-face 13743 . 13744) (nil tag-name "v-icon" 13742 . 13743) (nil tag-type start 13742 . 13743) (nil tag-name "v-icon" 13736 . 13742) (nil tag-type start 13736 . 13742) (nil font-lock-face web-mode-html-tag-custom-face 13736 . 13742) (nil tag-name "v-icon" 13735 . 13736) (nil tag-type start 13735 . 13736) (nil tag-beg 19 13735 . 13736) (nil font-lock-face web-mode-html-tag-bracket-face 13735 . 13736) (nil tag-name "template" 13715 . 13716) (nil tag-type start 13715 . 13716) (nil tag-end t 13715 . 13716) (nil font-lock-face web-mode-html-tag-bracket-face 13715 . 13716) (nil block-side t 13714 . 13715) (nil block-end t 13714 . 13715) (nil block-token delimiter-end 13714 . 13715) (nil tag-attr t 13714 . 13715) (nil tag-attr-end 14 13714 . 13715) (nil tag-name "template" 13714 . 13715) (nil tag-type start 13714 . 13715) (nil font-lock-face web-mode-block-delimiter-face 13714 . 13715) (nil block-side t 13712 . 13714) (nil tag-attr t 13712 . 13714) (nil tag-name "template" 13712 . 13714) (nil tag-type start 13712 . 13714) (nil block-side t 13711 . 13712) (nil tag-attr t 13711 . 13712) (nil tag-name "template" 13711 . 13712) (nil tag-type start 13711 . 13712) (nil face web-mode-variable-name-face 13711 . 13712) (nil block-side t 13710 . 13711) (nil tag-attr t 13710 . 13711) (nil tag-name "template" 13710 . 13711) (nil tag-type start 13710 . 13711) (nil face web-mode-variable-name-face 13710 . 13711) (nil block-side t 13709 . 13710) (nil tag-attr t 13709 . 13710) (nil tag-name "template" 13709 . 13710) (nil tag-type start 13709 . 13710) (nil face web-mode-variable-name-face 13709 . 13710) (nil block-side t 13708 . 13709) (nil tag-attr t 13708 . 13709) (nil tag-name "template" 13708 . 13709) (nil tag-type start 13708 . 13709) (nil face web-mode-variable-name-face 13708 . 13709) (nil block-side t 13706 . 13708) (nil tag-attr t 13706 . 13708) (nil tag-name "template" 13706 . 13708) (nil tag-type start 13706 . 13708) (nil block-side t 13705 . 13706) (nil tag-attr t 13705 . 13706) (nil tag-name "template" 13705 . 13706) (nil tag-type start 13705 . 13706) (nil face web-mode-variable-name-face 13705 . 13706) (nil block-side t 13704 . 13705) (nil tag-attr t 13704 . 13705) (nil tag-name "template" 13704 . 13705) (nil tag-type start 13704 . 13705) (nil face web-mode-variable-name-face 13704 . 13705) (nil block-side t 13703 . 13704) (nil tag-attr t 13703 . 13704) (nil tag-name "template" 13703 . 13704) (nil tag-type start 13703 . 13704) (nil face web-mode-variable-name-face 13703 . 13704) (nil block-side t 13702 . 13703) (nil tag-attr t 13702 . 13703) (nil tag-name "template" 13702 . 13703) (nil tag-type start 13702 . 13703) (nil face web-mode-variable-name-face 13702 . 13703) (nil block-side t 13700 . 13702) (nil tag-attr t 13700 . 13702) (nil tag-name "template" 13700 . 13702) (nil tag-type start 13700 . 13702) (nil block-side t 13699 . 13700) (nil block-token delimiter-beg 13699 . 13700) (nil tag-attr t 13699 . 13700) (nil tag-name "template" 13699 . 13700) (nil tag-type start 13699 . 13700) (nil font-lock-face web-mode-block-delimiter-face 13699 . 13700) (nil block-side t 13698 . 13699) (nil block-token delimiter-beg 13698 . 13699) (nil tag-attr t 13698 . 13699) (nil tag-name "template" 13698 . 13699) (nil tag-type start 13698 . 13699) (nil font-lock-face web-mode-block-delimiter-face 13698 . 13699) (nil block-side t 13697 . 13698) (nil block-token delimiter-beg 13697 . 13698) (nil tag-attr t 13697 . 13698) (nil tag-name "template" 13697 . 13698) (nil tag-type start 13697 . 13698) (nil font-lock-face web-mode-block-delimiter-face 13697 . 13698) (nil block-side t 13696 . 13697) (nil block-token delimiter-beg 13696 . 13697) (nil tag-attr t 13696 . 13697) (nil tag-name "template" 13696 . 13697) (nil tag-type start 13696 . 13697) (nil font-lock-face web-mode-block-delimiter-face 13696 . 13697) (nil block-side t 13695 . 13696) (nil block-token delimiter-beg 13695 . 13696) (nil tag-attr t 13695 . 13696) (nil tag-name "template" 13695 . 13696) (nil tag-type start 13695 . 13696) (nil font-lock-face web-mode-block-delimiter-face 13695 . 13696) (nil block-side t 13694 . 13695) (nil block-token delimiter-beg 13694 . 13695) (nil tag-attr t 13694 . 13695) (nil tag-name "template" 13694 . 13695) (nil tag-type start 13694 . 13695) (nil font-lock-face web-mode-block-delimiter-face 13694 . 13695) (nil block-side t 13693 . 13694) (nil block-token delimiter-beg 13693 . 13694) (nil tag-attr t 13693 . 13694) (nil tag-name "template" 13693 . 13694) (nil tag-type start 13693 . 13694) (nil font-lock-face web-mode-block-delimiter-face 13693 . 13694) (nil block-side t 13692 . 13693) (nil block-token delimiter-beg 13692 . 13693) (nil tag-attr t 13692 . 13693) (nil tag-name "template" 13692 . 13693) (nil tag-type start 13692 . 13693) (nil font-lock-face web-mode-block-delimiter-face 13692 . 13693) (nil block-side t 13691 . 13692) (nil block-token delimiter-beg 13691 . 13692) (nil tag-attr t 13691 . 13692) (nil tag-name "template" 13691 . 13692) (nil tag-type start 13691 . 13692) (nil font-lock-face web-mode-block-delimiter-face 13691 . 13692) (nil block-beg 0 13690 . 13691) (nil block-controls 0 13690 . 13691) (nil block-side t 13690 . 13691) (nil block-token delimiter-beg 13690 . 13691) (nil tag-attr t 13690 . 13691) (nil tag-name "template" 13690 . 13691) (nil tag-type start 13690 . 13691) (nil font-lock-face web-mode-block-delimiter-face 13690 . 13691) (nil tag-attr t 13685 . 13690) (nil tag-name "template" 13685 . 13690) (nil tag-type start 13685 . 13690) (nil font-lock-face web-mode-html-attr-engine-face 13685 . 13690) (nil tag-attr-beg 2 13684 . 13685) (nil tag-attr t 13684 . 13685) (nil tag-name "template" 13684 . 13685) (nil tag-type start 13684 . 13685) (nil font-lock-face web-mode-html-attr-engine-face 13684 . 13685) (nil tag-name "template" 13683 . 13684) (nil tag-type start 13683 . 13684) (nil tag-name "template" 13675 . 13683) (nil tag-type start 13675 . 13683) (nil font-lock-face web-mode-html-tag-face 13675 . 13683) (nil tag-name "template" 13674 . 13675) (nil tag-type start 13674 . 13675) (nil tag-beg 17 13674 . 13675) (nil font-lock-face web-mode-html-tag-bracket-face 13674 . 13675) (13658 . 14183)) nil (25819 30019 540858 954000) 0 nil])
([nil nil ((#("                <template v-slot:label=\"{ item }\">
                  <span class=\"primary--text\">{{ item.name }}</span>
                </template>
                <template v-slot:append=\"{ item }\">
                  <template
                    v-if=\"item.children != null && item.children.length > 0\"
                  >
                    has {{ item.children.length }} children
                  </template>
                </template>" 16 17 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 17 25 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 25 26 (tag-name "template" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 32 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 40 42 (block-side t tag-attr t tag-name "template" tag-type start) 42 43 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 43 44 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 45 46 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 46 48 (block-side t tag-attr t tag-name "template" tag-type start) 48 49 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 12 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 49 50 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 69 70 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 70 74 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 74 75 (tag-name "span" tag-type start) 75 76 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 76 80 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 81 95 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 95 96 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 96 97 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 97 98 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 98 99 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 99 100 (block-side t) 100 101 (block-side t face web-mode-variable-name-face) 101 102 (block-side t face web-mode-variable-name-face) 102 103 (block-side t face web-mode-variable-name-face) 103 104 (block-side t face web-mode-variable-name-face) 104 105 (block-side t) 105 106 (block-side t face web-mode-variable-name-face) 106 107 (block-side t face web-mode-variable-name-face) 107 108 (block-side t face web-mode-variable-name-face) 108 109 (block-side t face web-mode-variable-name-face) 109 110 (block-side t) 110 111 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 111 112 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 112 113 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 113 114 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 114 118 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 118 119 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 136 137 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 137 138 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 138 146 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 146 147 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 164 165 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 165 173 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 173 174 (tag-name "template" tag-type start) 174 175 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 175 180 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 180 181 (block-beg 0 block-controls nil block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 181 182 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 182 183 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 183 184 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 184 185 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 185 186 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 186 187 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 187 188 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 188 189 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 189 191 (block-side t tag-attr t tag-name "template" tag-type start) 191 192 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 192 193 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 193 194 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 194 195 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 195 197 (block-side t tag-attr t tag-name "template" tag-type start) 197 198 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 13 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 198 199 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 218 219 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 219 227 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 227 248 (tag-name "template" tag-type start) 248 249 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 249 252 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 252 253 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-equal-face) 253 303 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-value-face) 303 304 (tag-attr t tag-attr-end 4 tag-name "template" tag-type start font-lock-face web-mode-html-attr-value-face) 304 323 (tag-name "template" tag-type start) 323 324 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 349 350 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 350 351 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 351 352 (block-side t) 352 353 (block-side t face web-mode-variable-name-face) 353 354 (block-side t face web-mode-variable-name-face) 354 355 (block-side t face web-mode-variable-name-face) 355 356 (block-side t face web-mode-variable-name-face) 356 357 (block-side t) 357 358 (block-side t face web-mode-variable-name-face) 358 359 (block-side t face web-mode-variable-name-face) 359 360 (block-side t face web-mode-variable-name-face) 360 361 (block-side t face web-mode-variable-name-face) 361 362 (block-side t face web-mode-variable-name-face) 362 363 (block-side t face web-mode-variable-name-face) 363 364 (block-side t face web-mode-variable-name-face) 364 365 (block-side t face web-mode-variable-name-face) 365 366 (block-side t) 366 367 (block-side t face web-mode-variable-name-face) 367 368 (block-side t face web-mode-variable-name-face) 368 369 (block-side t face web-mode-variable-name-face) 369 370 (block-side t face web-mode-variable-name-face) 370 371 (block-side t face web-mode-variable-name-face) 371 372 (block-side t face web-mode-variable-name-face) 372 373 (block-side t) 373 374 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 374 375 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 403 404 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 404 405 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 405 413 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 413 414 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 431 432 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 432 433 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 433 441 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 441 442 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14184) (undo-tree-id218 . -51) (undo-tree-id219 . -442) (undo-tree-id220 . -442)) nil (25819 30019 540698 889000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16349 . 16350) (nil tag-name "template" 16349 . 16350) (nil tag-type end 16349 . 16350) (nil tag-end t 16349 . 16350) (nil font-lock-face web-mode-html-tag-bracket-face 16349 . 16350) (nil tag-name "template" 16341 . 16349) (nil tag-type end 16341 . 16349) (nil font-lock-face web-mode-html-tag-face 16341 . 16349) (nil tag-name "template" 16340 . 16341) (nil tag-type end 16340 . 16341) (nil font-lock-face web-mode-html-tag-bracket-face 16340 . 16341) (nil tag-name "template" 16339 . 16340) (nil tag-type end 16339 . 16340) (nil tag-beg 20 16339 . 16340) (nil font-lock-face web-mode-html-tag-bracket-face 16339 . 16340) (nil tag-name "v-row" 16321 . 16322) (nil tag-type end 16321 . 16322) (nil tag-end t 16321 . 16322) (nil font-lock-face web-mode-html-tag-bracket-face 16321 . 16322) (nil tag-name "v-row" 16316 . 16321) (nil tag-type end 16316 . 16321) (nil font-lock-face web-mode-html-tag-custom-face 16316 . 16321) (nil tag-name "v-row" 16315 . 16316) (nil tag-type end 16315 . 16316) (nil font-lock-face web-mode-html-tag-bracket-face 16315 . 16316) (nil tag-name "v-row" 16314 . 16315) (nil tag-type end 16314 . 16315) (nil tag-beg 22 16314 . 16315) (nil font-lock-face web-mode-html-tag-bracket-face 16314 . 16315) (nil tag-name "v-col" 16294 . 16295) (nil tag-type end 16294 . 16295) (nil tag-end t 16294 . 16295) (nil font-lock-face web-mode-html-tag-bracket-face 16294 . 16295) (nil tag-name "v-col" 16289 . 16294) (nil tag-type end 16289 . 16294) (nil font-lock-face web-mode-html-tag-custom-face 16289 . 16294) (nil tag-name "v-col" 16288 . 16289) (nil tag-type end 16288 . 16289) (nil font-lock-face web-mode-html-tag-bracket-face 16288 . 16289) (nil tag-name "v-col" 16287 . 16288) (nil tag-type end 16287 . 16288) (nil tag-beg 22 16287 . 16288) (nil font-lock-face web-mode-html-tag-bracket-face 16287 . 16288) (nil tag-name "v-icon" 16265 . 16266) (nil tag-type end 16265 . 16266) (nil tag-end t 16265 . 16266) (nil font-lock-face web-mode-html-tag-bracket-face 16265 . 16266) (nil tag-name "v-icon" 16259 . 16265) (nil tag-type end 16259 . 16265) (nil font-lock-face web-mode-html-tag-custom-face 16259 . 16265) (nil tag-name "v-icon" 16258 . 16259) (nil tag-type end 16258 . 16259) (nil font-lock-face web-mode-html-tag-bracket-face 16258 . 16259) (nil tag-name "v-icon" 16257 . 16258) (nil tag-type end 16257 . 16258) (nil tag-beg 22 16257 . 16258) (nil font-lock-face web-mode-html-tag-bracket-face 16257 . 16258) (nil tag-name "v-icon" 16189 . 16190) (nil tag-type start 16189 . 16190) (nil tag-end t 16189 . 16190) (nil font-lock-face web-mode-html-tag-bracket-face 16189 . 16190) (nil tag-attr t 16188 . 16189) (nil tag-attr-end 5 16188 . 16189) (nil tag-name "v-icon" 16188 . 16189) (nil tag-type start 16188 . 16189) (nil font-lock-face web-mode-html-attr-value-face 16188 . 16189) (nil tag-attr t 16184 . 16188) (nil tag-name "v-icon" 16184 . 16188) (nil tag-type start 16184 . 16188) (nil font-lock-face web-mode-html-attr-value-face 16184 . 16188) (nil tag-attr t 16183 . 16184) (nil tag-name "v-icon" 16183 . 16184) (nil tag-type start 16183 . 16184) (nil font-lock-face web-mode-html-attr-equal-face 16183 . 16184) (nil tag-attr t 16179 . 16183) (nil tag-name "v-icon" 16179 . 16183) (nil tag-type start 16179 . 16183) (nil font-lock-face web-mode-html-attr-name-face 16179 . 16183) (nil tag-attr-beg 0 16178 . 16179) (nil tag-attr t 16178 . 16179) (nil tag-name "v-icon" 16178 . 16179) (nil tag-type start 16178 . 16179) (nil font-lock-face web-mode-html-attr-name-face 16178 . 16179) (nil tag-name "v-icon" 16177 . 16178) (nil tag-type start 16177 . 16178) (nil tag-attr t 16176 . 16177) (nil tag-attr-end 4 16176 . 16177) (nil tag-name "v-icon" 16176 . 16177) (nil tag-type start 16176 . 16177) (nil font-lock-face web-mode-html-attr-value-face 16176 . 16177) (nil tag-attr t 16100 . 16176) (nil tag-name "v-icon" 16100 . 16176) (nil tag-type start 16100 . 16176) (nil font-lock-face web-mode-html-attr-value-face 16100 . 16176) (nil tag-attr t 16099 . 16100) (nil tag-name "v-icon" 16099 . 16100) (nil tag-type start 16099 . 16100) (nil font-lock-face web-mode-html-attr-equal-face 16099 . 16100) (nil tag-attr t 16096 . 16099) (nil tag-name "v-icon" 16096 . 16099) (nil tag-type start 16096 . 16099) (nil font-lock-face web-mode-html-attr-engine-face 16096 . 16099) (nil tag-attr-beg 2 16095 . 16096) (nil tag-attr t 16095 . 16096) (nil tag-name "v-icon" 16095 . 16096) (nil tag-type start 16095 . 16096) (nil font-lock-face web-mode-html-attr-engine-face 16095 . 16096) (nil tag-name "v-icon" 16094 . 16095) (nil tag-type start 16094 . 16095) (nil tag-attr t 16093 . 16094) (nil tag-attr-end 0 16093 . 16094) (nil tag-name "v-icon" 16093 . 16094) (nil tag-type start 16093 . 16094) (nil font-lock-face web-mode-html-attr-name-face 16093 . 16094) (nil tag-attr t 16090 . 16093) (nil tag-name "v-icon" 16090 . 16093) (nil tag-type start 16090 . 16093) (nil font-lock-face web-mode-html-attr-name-face 16090 . 16093) (nil tag-attr-beg 0 16089 . 16090) (nil tag-attr t 16089 . 16090) (nil tag-name "v-icon" 16089 . 16090) (nil tag-type start 16089 . 16090) (nil font-lock-face web-mode-html-attr-name-face 16089 . 16090) (nil tag-name "v-icon" 16088 . 16089) (nil tag-type start 16088 . 16089) (nil tag-name "v-icon" 16082 . 16088) (nil tag-type start 16082 . 16088) (nil font-lock-face web-mode-html-tag-custom-face 16082 . 16088) (nil tag-name "v-icon" 16081 . 16082) (nil tag-type start 16081 . 16082) (nil tag-beg 19 16081 . 16082) (nil font-lock-face web-mode-html-tag-bracket-face 16081 . 16082) (nil tag-name "p" 16057 . 16058) (nil tag-type end 16057 . 16058) (nil tag-end t 16057 . 16058) (nil font-lock-face web-mode-html-tag-bracket-face 16057 . 16058) (nil face (whitespace-line web-mode-html-tag-bracket-face) 16057 . 16058) (nil tag-name "p" 16056 . 16057) (nil tag-type end 16056 . 16057) (nil font-lock-face web-mode-html-tag-face 16056 . 16057) (nil face (whitespace-line web-mode-html-tag-face) 16056 . 16057) (nil tag-name "p" 16055 . 16056) (nil tag-type end 16055 . 16056) (nil font-lock-face web-mode-html-tag-bracket-face 16055 . 16056) (nil face (whitespace-line web-mode-html-tag-bracket-face) 16055 . 16056) (nil tag-name "p" 16054 . 16055) (nil tag-type end 16054 . 16055) (nil tag-beg 20 16054 . 16055) (nil font-lock-face web-mode-html-tag-bracket-face 16054 . 16055) (nil face (whitespace-line web-mode-html-tag-bracket-face) 16054 . 16055) (nil block-side t 16053 . 16054) (nil block-end t 16053 . 16054) (nil block-token delimiter-end 16053 . 16054) (nil font-lock-face web-mode-block-delimiter-face 16053 . 16054) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 16053 . 16054) (nil block-side t 16052 . 16053) (nil block-token delimiter-end 16052 . 16053) (nil font-lock-face web-mode-block-delimiter-face 16052 . 16053) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 16052 . 16053) (nil block-side t 16051 . 16052) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 16051 . 16052) (nil block-side t 16050 . 16051) (nil face (whitespace-line) 16050 . 16051) (nil block-side t 16049 . 16050) (nil face (whitespace-line web-mode-variable-name-face) 16049 . 16050) (nil block-side t 16048 . 16049) (nil face (whitespace-line web-mode-variable-name-face) 16048 . 16049) (nil block-side t 16047 . 16048) (nil face (whitespace-line web-mode-variable-name-face) 16047 . 16048) (nil block-side t 16046 . 16047) (nil face (whitespace-line web-mode-variable-name-face) 16046 . 16047) (nil block-side t 16045 . 16046) (nil face (whitespace-line web-mode-variable-name-face) 16045 . 16046) (nil block-side t 16044 . 16045) (nil face (whitespace-line web-mode-variable-name-face) 16044 . 16045) (nil block-side t 16043 . 16044) (nil face (whitespace-line web-mode-variable-name-face) 16043 . 16044) (nil block-side t 16042 . 16043) (nil face (whitespace-line) 16042 . 16043) (nil block-side t 16041 . 16042) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 16041 . 16042) (nil block-side t 16040 . 16041) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 16040 . 16041) (nil block-side t 16039 . 16040) (nil face (whitespace-line web-mode-variable-name-face) 16039 . 16040) (nil block-side t 16038 . 16039) (nil face (whitespace-line web-mode-variable-name-face) 16038 . 16039) (nil block-side t 16037 . 16038) (nil face (whitespace-line) 16037 . 16038) (nil block-side t 16036 . 16037) (nil face (whitespace-line web-mode-variable-name-face) 16036 . 16037) (nil block-side t 16035 . 16036) (nil face (whitespace-line web-mode-variable-name-face) 16035 . 16036) (nil block-side t 16034 . 16035) (nil face (whitespace-line web-mode-variable-name-face) 16034 . 16035) (nil block-side t 16033 . 16034) (nil face (whitespace-line web-mode-variable-name-face) 16033 . 16034) (nil block-side t 16032 . 16033) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 16032 . 16033) (nil block-side t 16031 . 16032) (nil face (whitespace-line web-mode-variable-name-face) 16031 . 16032) (nil block-side t 16030 . 16031) (nil face (whitespace-line web-mode-variable-name-face) 16030 . 16031) (nil block-side t 16029 . 16030) (nil face (whitespace-line web-mode-variable-name-face) 16029 . 16030) (nil block-side t 16028 . 16029) (nil face (whitespace-line web-mode-variable-name-face) 16028 . 16029) (nil block-side t 16027 . 16028) (nil face (whitespace-line web-mode-variable-name-face) 16027 . 16028) (nil block-side t 16026 . 16027) (nil face (whitespace-line web-mode-variable-name-face) 16026 . 16027) (nil block-side t 16025 . 16026) (nil face (whitespace-line web-mode-variable-name-face) 16025 . 16026) (nil block-side t 16024 . 16025) (nil face (whitespace-line web-mode-variable-name-face) 16024 . 16025) (nil block-side t 16023 . 16024) (nil face (whitespace-line web-mode-variable-name-face) 16023 . 16024) (nil block-side t 16022 . 16023) (nil face (whitespace-line web-mode-variable-name-face) 16022 . 16023) (nil block-side t 16021 . 16022) (nil face (whitespace-line web-mode-variable-name-face) 16021 . 16022) (nil block-side t 16020 . 16021) (nil face (whitespace-line web-mode-variable-name-face) 16020 . 16021) (nil block-side t 16019 . 16020) (nil block-token delimiter-beg 16019 . 16020) (nil font-lock-face web-mode-block-delimiter-face 16019 . 16020) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 16019 . 16020) (nil block-beg 0 16018 . 16019) (nil block-controls 0 16018 . 16019) (nil block-side t 16018 . 16019) (nil block-token delimiter-beg 16018 . 16019) (nil font-lock-face web-mode-block-delimiter-face 16018 . 16019) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 16018 . 16019) (nil tag-name "p" 16017 . 16018) (nil tag-type start 16017 . 16018) (nil tag-end t 16017 . 16018) (nil font-lock-face web-mode-html-tag-bracket-face 16017 . 16018) (nil face (whitespace-line web-mode-html-tag-bracket-face) 16017 . 16018) (nil tag-attr t 16016 . 16017) (nil tag-attr-end 4 16016 . 16017) (nil tag-name "p" 16016 . 16017) (nil tag-type start 16016 . 16017) (nil font-lock-face web-mode-html-attr-value-face 16016 . 16017) (nil face (whitespace-line web-mode-html-attr-value-face) 16016 . 16017) (nil tag-attr t 15987 . 16016) (nil tag-name "p" 15987 . 16016) (nil tag-type start 15987 . 16016) (nil font-lock-face web-mode-html-attr-value-face 15987 . 16016) (nil face (whitespace-line web-mode-html-attr-value-face) 15987 . 16016) (nil tag-attr t 15924 . 15987) (nil tag-name "p" 15924 . 15987) (nil tag-type start 15924 . 15987) (nil font-lock-face web-mode-html-attr-value-face 15924 . 15987) (nil tag-attr t 15923 . 15924) (nil tag-name "p" 15923 . 15924) (nil tag-type start 15923 . 15924) (nil font-lock-face web-mode-html-attr-equal-face 15923 . 15924) (nil tag-attr t 15920 . 15923) (nil tag-name "p" 15920 . 15923) (nil tag-type start 15920 . 15923) (nil font-lock-face web-mode-html-attr-engine-face 15920 . 15923) (nil tag-attr-beg 2 15919 . 15920) (nil tag-attr t 15919 . 15920) (nil tag-name "p" 15919 . 15920) (nil tag-type start 15919 . 15920) (nil font-lock-face web-mode-html-attr-engine-face 15919 . 15920) (nil tag-name "p" 15918 . 15919) (nil tag-type start 15918 . 15919) (nil tag-attr t 15917 . 15918) (nil tag-attr-end 5 15917 . 15918) (nil tag-name "p" 15917 . 15918) (nil tag-type start 15917 . 15918) (nil font-lock-face web-mode-html-attr-value-face 15917 . 15918) (nil tag-attr t 15868 . 15917) (nil tag-name "p" 15868 . 15917) (nil tag-type start 15868 . 15917) (nil font-lock-face web-mode-html-attr-value-face 15868 . 15917) (nil tag-attr t 15867 . 15868) (nil tag-name "p" 15867 . 15868) (nil tag-type start 15867 . 15868) (nil font-lock-face web-mode-html-attr-equal-face 15867 . 15868) (nil tag-attr t 15863 . 15867) (nil tag-name "p" 15863 . 15867) (nil tag-type start 15863 . 15867) (nil font-lock-face web-mode-html-attr-name-face 15863 . 15867) (nil tag-attr-beg 0 15862 . 15863) (nil tag-attr t 15862 . 15863) (nil tag-name "p" 15862 . 15863) (nil tag-type start 15862 . 15863) (nil font-lock-face web-mode-html-attr-name-face 15862 . 15863) (nil tag-name "p" 15861 . 15862) (nil tag-type start 15861 . 15862) (nil tag-name "p" 15860 . 15861) (nil tag-type start 15860 . 15861) (nil font-lock-face web-mode-html-tag-face 15860 . 15861) (nil tag-name "p" 15859 . 15860) (nil tag-type start 15859 . 15860) (nil tag-beg 17 15859 . 15860) (nil font-lock-face web-mode-html-tag-bracket-face 15859 . 15860) (nil tag-name "v-icon" 15835 . 15836) (nil tag-type end 15835 . 15836) (nil tag-end t 15835 . 15836) (nil font-lock-face web-mode-html-tag-bracket-face 15835 . 15836) (nil tag-name "v-icon" 15829 . 15835) (nil tag-type end 15829 . 15835) (nil font-lock-face web-mode-html-tag-custom-face 15829 . 15835) (nil tag-name "v-icon" 15828 . 15829) (nil tag-type end 15828 . 15829) (nil font-lock-face web-mode-html-tag-bracket-face 15828 . 15829) (nil tag-name "v-icon" 15827 . 15828) (nil tag-type end 15827 . 15828) (nil tag-beg 22 15827 . 15828) (nil font-lock-face web-mode-html-tag-bracket-face 15827 . 15828) (nil tag-name "v-icon" 15761 . 15762) (nil tag-type start 15761 . 15762) (nil tag-end t 15761 . 15762) (nil font-lock-face web-mode-html-tag-bracket-face 15761 . 15762) (nil tag-attr t 15760 . 15761) (nil tag-attr-end 5 15760 . 15761) (nil tag-name "v-icon" 15760 . 15761) (nil tag-type start 15760 . 15761) (nil font-lock-face web-mode-html-attr-value-face 15760 . 15761) (nil tag-attr t 15754 . 15760) (nil tag-name "v-icon" 15754 . 15760) (nil tag-type start 15754 . 15760) (nil font-lock-face web-mode-html-attr-value-face 15754 . 15760) (nil tag-attr t 15753 . 15754) (nil tag-name "v-icon" 15753 . 15754) (nil tag-type start 15753 . 15754) (nil font-lock-face web-mode-html-attr-equal-face 15753 . 15754) (nil tag-attr t 15749 . 15753) (nil tag-name "v-icon" 15749 . 15753) (nil tag-type start 15749 . 15753) (nil font-lock-face web-mode-html-attr-name-face 15749 . 15753) (nil tag-attr-beg 0 15748 . 15749) (nil tag-attr t 15748 . 15749) (nil tag-name "v-icon" 15748 . 15749) (nil tag-type start 15748 . 15749) (nil font-lock-face web-mode-html-attr-name-face 15748 . 15749) (nil tag-name "v-icon" 15747 . 15748) (nil tag-type start 15747 . 15748) (nil tag-attr t 15746 . 15747) (nil tag-attr-end 4 15746 . 15747) (nil tag-name "v-icon" 15746 . 15747) (nil tag-type start 15746 . 15747) (nil font-lock-face web-mode-html-attr-value-face 15746 . 15747) (nil tag-attr t 15672 . 15746) (nil tag-name "v-icon" 15672 . 15746) (nil tag-type start 15672 . 15746) (nil font-lock-face web-mode-html-attr-value-face 15672 . 15746) (nil tag-attr t 15671 . 15672) (nil tag-name "v-icon" 15671 . 15672) (nil tag-type start 15671 . 15672) (nil font-lock-face web-mode-html-attr-equal-face 15671 . 15672) (nil tag-attr t 15668 . 15671) (nil tag-name "v-icon" 15668 . 15671) (nil tag-type start 15668 . 15671) (nil font-lock-face web-mode-html-attr-engine-face 15668 . 15671) (nil tag-attr-beg 2 15667 . 15668) (nil tag-attr t 15667 . 15668) (nil tag-name "v-icon" 15667 . 15668) (nil tag-type start 15667 . 15668) (nil font-lock-face web-mode-html-attr-engine-face 15667 . 15668) (nil tag-name "v-icon" 15666 . 15667) (nil tag-type start 15666 . 15667) (nil tag-attr t 15665 . 15666) (nil tag-attr-end 0 15665 . 15666) (nil tag-name "v-icon" 15665 . 15666) (nil tag-type start 15665 . 15666) (nil font-lock-face web-mode-html-attr-name-face 15665 . 15666) (nil tag-attr t 15662 . 15665) (nil tag-name "v-icon" 15662 . 15665) (nil tag-type start 15662 . 15665) (nil font-lock-face web-mode-html-attr-name-face 15662 . 15665) (nil tag-attr-beg 0 15661 . 15662) (nil tag-attr t 15661 . 15662) (nil tag-name "v-icon" 15661 . 15662) (nil tag-type start 15661 . 15662) (nil font-lock-face web-mode-html-attr-name-face 15661 . 15662) (nil tag-name "v-icon" 15660 . 15661) (nil tag-type start 15660 . 15661) (nil tag-name "v-icon" 15654 . 15660) (nil tag-type start 15654 . 15660) (nil font-lock-face web-mode-html-tag-custom-face 15654 . 15660) (nil tag-name "v-icon" 15653 . 15654) (nil tag-type start 15653 . 15654) (nil tag-beg 19 15653 . 15654) (nil font-lock-face web-mode-html-tag-bracket-face 15653 . 15654) (nil tag-name "p" 15629 . 15630) (nil tag-type end 15629 . 15630) (nil tag-end t 15629 . 15630) (nil font-lock-face web-mode-html-tag-bracket-face 15629 . 15630) (nil face (whitespace-line web-mode-html-tag-bracket-face) 15629 . 15630) (nil tag-name "p" 15628 . 15629) (nil tag-type end 15628 . 15629) (nil font-lock-face web-mode-html-tag-face 15628 . 15629) (nil face (whitespace-line web-mode-html-tag-face) 15628 . 15629) (nil tag-name "p" 15627 . 15628) (nil tag-type end 15627 . 15628) (nil font-lock-face web-mode-html-tag-bracket-face 15627 . 15628) (nil face (whitespace-line web-mode-html-tag-bracket-face) 15627 . 15628) (nil tag-name "p" 15626 . 15627) (nil tag-type end 15626 . 15627) (nil tag-beg 20 15626 . 15627) (nil font-lock-face web-mode-html-tag-bracket-face 15626 . 15627) (nil face (whitespace-line web-mode-html-tag-bracket-face) 15626 . 15627) (nil block-side t 15625 . 15626) (nil block-end t 15625 . 15626) (nil block-token delimiter-end 15625 . 15626) (nil font-lock-face web-mode-block-delimiter-face 15625 . 15626) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 15625 . 15626) (nil block-side t 15624 . 15625) (nil block-token delimiter-end 15624 . 15625) (nil font-lock-face web-mode-block-delimiter-face 15624 . 15625) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 15624 . 15625) (nil block-side t 15623 . 15624) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 15623 . 15624) (nil block-side t 15622 . 15623) (nil face (whitespace-line) 15622 . 15623) (nil block-side t 15621 . 15622) (nil face (whitespace-line web-mode-variable-name-face) 15621 . 15622) (nil block-side t 15620 . 15621) (nil face (whitespace-line web-mode-variable-name-face) 15620 . 15621) (nil block-side t 15619 . 15620) (nil face (whitespace-line web-mode-variable-name-face) 15619 . 15620) (nil block-side t 15618 . 15619) (nil face (whitespace-line web-mode-variable-name-face) 15618 . 15619) (nil block-side t 15617 . 15618) (nil face (whitespace-line web-mode-variable-name-face) 15617 . 15618) (nil block-side t 15616 . 15617) (nil face (whitespace-line) 15616 . 15617) (nil block-side t 15615 . 15616) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 15615 . 15616) (nil block-side t 15614 . 15615) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 15614 . 15615) (nil block-side t 15613 . 15614) (nil face (whitespace-line web-mode-variable-name-face) 15613 . 15614) (nil block-side t 15612 . 15613) (nil face (whitespace-line web-mode-variable-name-face) 15612 . 15613) (nil block-side t 15611 . 15612) (nil face (whitespace-line) 15611 . 15612) (nil block-side t 15610 . 15611) (nil face (whitespace-line web-mode-variable-name-face) 15610 . 15611) (nil block-side t 15609 . 15610) (nil face (whitespace-line web-mode-variable-name-face) 15609 . 15610) (nil block-side t 15608 . 15609) (nil face (whitespace-line web-mode-variable-name-face) 15608 . 15609) (nil block-side t 15607 . 15608) (nil face (whitespace-line web-mode-variable-name-face) 15607 . 15608) (nil block-side t 15606 . 15607) (nil face (rainbow-delimiters-depth-3-face whitespace-line) 15606 . 15607) (nil block-side t 15605 . 15606) (nil face (whitespace-line web-mode-variable-name-face) 15605 . 15606) (nil block-side t 15604 . 15605) (nil face (whitespace-line web-mode-variable-name-face) 15604 . 15605) (nil block-side t 15603 . 15604) (nil face (whitespace-line web-mode-variable-name-face) 15603 . 15604) (nil block-side t 15602 . 15603) (nil face (whitespace-line web-mode-variable-name-face) 15602 . 15603) (nil block-side t 15601 . 15602) (nil face (whitespace-line web-mode-variable-name-face) 15601 . 15602) (nil block-side t 15600 . 15601) (nil face (whitespace-line web-mode-variable-name-face) 15600 . 15601) (nil block-side t 15599 . 15600) (nil face (whitespace-line web-mode-variable-name-face) 15599 . 15600) (nil block-side t 15598 . 15599) (nil face (whitespace-line web-mode-variable-name-face) 15598 . 15599) (nil block-side t 15597 . 15598) (nil face (whitespace-line web-mode-variable-name-face) 15597 . 15598) (nil block-side t 15596 . 15597) (nil face (whitespace-line web-mode-variable-name-face) 15596 . 15597) (nil block-side t 15595 . 15596) (nil face (whitespace-line web-mode-variable-name-face) 15595 . 15596) (nil block-side t 15594 . 15595) (nil face (whitespace-line web-mode-variable-name-face) 15594 . 15595) (nil block-side t 15593 . 15594) (nil block-token delimiter-beg 15593 . 15594) (nil font-lock-face web-mode-block-delimiter-face 15593 . 15594) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 15593 . 15594) (nil block-beg 0 15592 . 15593) (nil block-controls 0 15592 . 15593) (nil block-side t 15592 . 15593) (nil block-token delimiter-beg 15592 . 15593) (nil font-lock-face web-mode-block-delimiter-face 15592 . 15593) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 15592 . 15593) (nil tag-name "p" 15591 . 15592) (nil tag-type start 15591 . 15592) (nil tag-end t 15591 . 15592) (nil font-lock-face web-mode-html-tag-bracket-face 15591 . 15592) (nil face (whitespace-line web-mode-html-tag-bracket-face) 15591 . 15592) (nil tag-attr t 15590 . 15591) (nil tag-attr-end 4 15590 . 15591) (nil tag-name "p" 15590 . 15591) (nil tag-type start 15590 . 15591) (nil font-lock-face web-mode-html-attr-value-face 15590 . 15591) (nil face (whitespace-line web-mode-html-attr-value-face) 15590 . 15591) (nil tag-attr t 15562 . 15590) (nil tag-name "p" 15562 . 15590) (nil tag-type start 15562 . 15590) (nil font-lock-face web-mode-html-attr-value-face 15562 . 15590) (nil face (whitespace-line web-mode-html-attr-value-face) 15562 . 15590) (nil tag-attr t 15501 . 15562) (nil tag-name "p" 15501 . 15562) (nil tag-type start 15501 . 15562) (nil font-lock-face web-mode-html-attr-value-face 15501 . 15562) (nil tag-attr t 15500 . 15501) (nil tag-name "p" 15500 . 15501) (nil tag-type start 15500 . 15501) (nil font-lock-face web-mode-html-attr-equal-face 15500 . 15501) (nil tag-attr t 15497 . 15500) (nil tag-name "p" 15497 . 15500) (nil tag-type start 15497 . 15500) (nil font-lock-face web-mode-html-attr-engine-face 15497 . 15500) (nil tag-attr-beg 2 15496 . 15497) (nil tag-attr t 15496 . 15497) (nil tag-name "p" 15496 . 15497) (nil tag-type start 15496 . 15497) (nil font-lock-face web-mode-html-attr-engine-face 15496 . 15497) (nil tag-name "p" 15495 . 15496) (nil tag-type start 15495 . 15496) (nil tag-attr t 15494 . 15495) (nil tag-attr-end 5 15494 . 15495) (nil tag-name "p" 15494 . 15495) (nil tag-type start 15494 . 15495) (nil font-lock-face web-mode-html-attr-value-face 15494 . 15495) (nil tag-attr t 15443 . 15494) (nil tag-name "p" 15443 . 15494) (nil tag-type start 15443 . 15494) (nil font-lock-face web-mode-html-attr-value-face 15443 . 15494) (nil tag-attr t 15442 . 15443) (nil tag-name "p" 15442 . 15443) (nil tag-type start 15442 . 15443) (nil font-lock-face web-mode-html-attr-equal-face 15442 . 15443) (nil tag-attr t 15438 . 15442) (nil tag-name "p" 15438 . 15442) (nil tag-type start 15438 . 15442) (nil font-lock-face web-mode-html-attr-name-face 15438 . 15442) (nil tag-attr-beg 0 15437 . 15438) (nil tag-attr t 15437 . 15438) (nil tag-name "p" 15437 . 15438) (nil tag-type start 15437 . 15438) (nil font-lock-face web-mode-html-attr-name-face 15437 . 15438) (nil tag-name "p" 15436 . 15437) (nil tag-type start 15436 . 15437) (nil tag-name "p" 15435 . 15436) (nil tag-type start 15435 . 15436) (nil font-lock-face web-mode-html-tag-face 15435 . 15436) (nil tag-name "p" 15434 . 15435) (nil tag-type start 15434 . 15435) (nil tag-beg 17 15434 . 15435) (nil font-lock-face web-mode-html-tag-bracket-face 15434 . 15435) (nil block-side t 15410 . 15411) (nil block-end t 15410 . 15411) (nil block-token delimiter-end 15410 . 15411) (nil font-lock-face web-mode-block-delimiter-face 15410 . 15411) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15410 . 15411) (nil block-side t 15409 . 15410) (nil block-token delimiter-end 15409 . 15410) (nil font-lock-face web-mode-block-delimiter-face 15409 . 15410) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15409 . 15410) (nil block-side t 15408 . 15409) (nil face web-mode-variable-name-face 15408 . 15409) (nil block-side t 15407 . 15408) (nil face web-mode-variable-name-face 15407 . 15408) (nil block-side t 15406 . 15407) (nil face web-mode-variable-name-face 15406 . 15407) (nil block-side t 15405 . 15406) (nil face web-mode-variable-name-face 15405 . 15406) (nil block-side t 15404 . 15405) (nil block-side t 15403 . 15404) (nil face web-mode-variable-name-face 15403 . 15404) (nil block-side t 15402 . 15403) (nil face web-mode-variable-name-face 15402 . 15403) (nil block-side t 15401 . 15402) (nil face web-mode-variable-name-face 15401 . 15402) (nil block-side t 15400 . 15401) (nil face web-mode-variable-name-face 15400 . 15401) (nil block-side t 15399 . 15400) (nil block-token delimiter-beg 15399 . 15400) (nil font-lock-face web-mode-block-delimiter-face 15399 . 15400) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15399 . 15400) (nil block-beg 0 15398 . 15399) (nil block-controls 0 15398 . 15399) (nil block-side t 15398 . 15399) (nil block-token delimiter-beg 15398 . 15399) (nil font-lock-face web-mode-block-delimiter-face 15398 . 15399) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15398 . 15399) (nil tag-name "v-col" 15374 . 15375) (nil tag-type start 15374 . 15375) (nil tag-end t 15374 . 15375) (nil font-lock-face web-mode-html-tag-bracket-face 15374 . 15375) (nil tag-attr t 15373 . 15374) (nil tag-attr-end 5 15373 . 15374) (nil tag-name "v-col" 15373 . 15374) (nil tag-type start 15373 . 15374) (nil font-lock-face web-mode-html-attr-value-face 15373 . 15374) (nil tag-attr t 15357 . 15373) (nil tag-name "v-col" 15357 . 15373) (nil tag-type start 15357 . 15373) (nil font-lock-face web-mode-html-attr-value-face 15357 . 15373) (nil tag-attr t 15356 . 15357) (nil tag-name "v-col" 15356 . 15357) (nil tag-type start 15356 . 15357) (nil font-lock-face web-mode-html-attr-equal-face 15356 . 15357) (nil tag-attr t 15352 . 15356) (nil tag-name "v-col" 15352 . 15356) (nil tag-type start 15352 . 15356) (nil font-lock-face web-mode-html-attr-name-face 15352 . 15356) (nil tag-attr-beg 0 15351 . 15352) (nil tag-attr t 15351 . 15352) (nil tag-name "v-col" 15351 . 15352) (nil tag-type start 15351 . 15352) (nil font-lock-face web-mode-html-attr-name-face 15351 . 15352) (nil tag-name "v-col" 15350 . 15351) (nil tag-type start 15350 . 15351) (nil tag-name "v-col" 15345 . 15350) (nil tag-type start 15345 . 15350) (nil font-lock-face web-mode-html-tag-custom-face 15345 . 15350) (nil tag-name "v-col" 15344 . 15345) (nil tag-type start 15344 . 15345) (nil tag-beg 19 15344 . 15345) (nil font-lock-face web-mode-html-tag-bracket-face 15344 . 15345) (nil tag-name "v-row" 15322 . 15323) (nil tag-type start 15322 . 15323) (nil tag-end t 15322 . 15323) (nil font-lock-face web-mode-html-tag-bracket-face 15322 . 15323) (nil tag-attr t 15321 . 15322) (nil tag-attr-end 0 15321 . 15322) (nil tag-name "v-row" 15321 . 15322) (nil tag-type start 15321 . 15322) (nil font-lock-face web-mode-html-attr-engine-face 15321 . 15322) (nil tag-attr t 15317 . 15321) (nil tag-name "v-row" 15317 . 15321) (nil tag-type start 15317 . 15321) (nil font-lock-face web-mode-html-attr-engine-face 15317 . 15321) (nil tag-attr-beg 2 15316 . 15317) (nil tag-attr t 15316 . 15317) (nil tag-name "v-row" 15316 . 15317) (nil tag-type start 15316 . 15317) (nil font-lock-face web-mode-html-attr-engine-face 15316 . 15317) (nil tag-name "v-row" 15315 . 15316) (nil tag-type start 15315 . 15316) (nil tag-name "v-row" 15310 . 15315) (nil tag-type start 15310 . 15315) (nil font-lock-face web-mode-html-tag-custom-face 15310 . 15315) (nil tag-name "v-row" 15309 . 15310) (nil tag-type start 15309 . 15310) (nil tag-beg 19 15309 . 15310) (nil font-lock-face web-mode-html-tag-bracket-face 15309 . 15310) (nil tag-name "v-row" 15289 . 15290) (nil tag-type end 15289 . 15290) (nil tag-end t 15289 . 15290) (nil font-lock-face web-mode-html-tag-bracket-face 15289 . 15290) (nil tag-name "v-row" 15284 . 15289) (nil tag-type end 15284 . 15289) (nil font-lock-face web-mode-html-tag-custom-face 15284 . 15289) (nil tag-name "v-row" 15283 . 15284) (nil tag-type end 15283 . 15284) (nil font-lock-face web-mode-html-tag-bracket-face 15283 . 15284) (nil tag-name "v-row" 15282 . 15283) (nil tag-type end 15282 . 15283) (nil tag-beg 22 15282 . 15283) (nil font-lock-face web-mode-html-tag-bracket-face 15282 . 15283) (nil tag-name "v-tooltip" 15262 . 15263) (nil tag-type end 15262 . 15263) (nil tag-end t 15262 . 15263) (nil font-lock-face web-mode-html-tag-bracket-face 15262 . 15263) (nil tag-name "v-tooltip" 15253 . 15262) (nil tag-type end 15253 . 15262) (nil font-lock-face web-mode-html-tag-custom-face 15253 . 15262) (nil tag-name "v-tooltip" 15252 . 15253) (nil tag-type end 15252 . 15253) (nil font-lock-face web-mode-html-tag-bracket-face 15252 . 15253) (nil tag-name "v-tooltip" 15251 . 15252) (nil tag-type end 15251 . 15252) (nil tag-beg 22 15251 . 15252) (nil font-lock-face web-mode-html-tag-bracket-face 15251 . 15252) (nil tag-name "span" 15229 . 15230) (nil tag-type end 15229 . 15230) (nil tag-end t 15229 . 15230) (nil font-lock-face web-mode-html-tag-bracket-face 15229 . 15230) (nil tag-name "span" 15225 . 15229) (nil tag-type end 15225 . 15229) (nil font-lock-face web-mode-html-tag-face 15225 . 15229) (nil tag-name "span" 15224 . 15225) (nil tag-type end 15224 . 15225) (nil font-lock-face web-mode-html-tag-bracket-face 15224 . 15225) (nil tag-name "span" 15223 . 15224) (nil tag-type end 15223 . 15224) (nil tag-beg 20 15223 . 15224) (nil font-lock-face web-mode-html-tag-bracket-face 15223 . 15224) (nil tag-name "v-row" 15199 . 15200) (nil tag-type end 15199 . 15200) (nil tag-end t 15199 . 15200) (nil font-lock-face web-mode-html-tag-bracket-face 15199 . 15200) (nil tag-name "v-row" 15194 . 15199) (nil tag-type end 15194 . 15199) (nil font-lock-face web-mode-html-tag-custom-face 15194 . 15199) (nil tag-name "v-row" 15193 . 15194) (nil tag-type end 15193 . 15194) (nil font-lock-face web-mode-html-tag-bracket-face 15193 . 15194) (nil tag-name "v-row" 15192 . 15193) (nil tag-type end 15192 . 15193) (nil tag-beg 22 15192 . 15193) (nil font-lock-face web-mode-html-tag-bracket-face 15192 . 15193) (nil tag-name "v-col" 15166 . 15167) (nil tag-type end 15166 . 15167) (nil tag-end t 15166 . 15167) (nil font-lock-face web-mode-html-tag-bracket-face 15166 . 15167) (nil tag-name "v-col" 15161 . 15166) (nil tag-type end 15161 . 15166) (nil font-lock-face web-mode-html-tag-custom-face 15161 . 15166) (nil tag-name "v-col" 15160 . 15161) (nil tag-type end 15160 . 15161) (nil font-lock-face web-mode-html-tag-bracket-face 15160 . 15161) (nil tag-name "v-col" 15159 . 15160) (nil tag-type end 15159 . 15160) (nil tag-beg 22 15159 . 15160) (nil font-lock-face web-mode-html-tag-bracket-face 15159 . 15160) (nil block-side t 15131 . 15132) (nil block-end t 15131 . 15132) (nil block-token delimiter-end 15131 . 15132) (nil font-lock-face web-mode-block-delimiter-face 15131 . 15132) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15131 . 15132) (nil block-side t 15130 . 15131) (nil block-token delimiter-end 15130 . 15131) (nil font-lock-face web-mode-block-delimiter-face 15130 . 15131) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15130 . 15131) (nil block-side t 15129 . 15130) (nil block-side t 15128 . 15129) (nil face (rainbow-delimiters-depth-3-face) 15128 . 15129) (nil block-side t 15127 . 15128) (nil face web-mode-variable-name-face 15127 . 15128) (nil block-side t 15126 . 15127) (nil face web-mode-variable-name-face 15126 . 15127) (nil block-side t 15125 . 15126) (nil face web-mode-variable-name-face 15125 . 15126) (nil block-side t 15124 . 15125) (nil face web-mode-variable-name-face 15124 . 15125) (nil block-side t 15123 . 15124) (nil face web-mode-variable-name-face 15123 . 15124) (nil block-side t 15122 . 15123) (nil face web-mode-variable-name-face 15122 . 15123) (nil block-side t 15121 . 15122) (nil block-side t 15120 . 15121) (nil face web-mode-variable-name-face 15120 . 15121) (nil block-side t 15119 . 15120) (nil face web-mode-variable-name-face 15119 . 15120) (nil block-side t 15118 . 15119) (nil face web-mode-variable-name-face 15118 . 15119) (nil block-side t 15117 . 15118) (nil face web-mode-variable-name-face 15117 . 15118) (nil block-side t 15116 . 15117) (nil face (rainbow-delimiters-depth-3-face) 15116 . 15117) (nil block-side t 15102 . 15116) (nil face web-mode-function-call-face 15102 . 15116) (nil block-side t 15101 . 15102) (nil block-side t 15100 . 15101) (nil block-token delimiter-beg 15100 . 15101) (nil font-lock-face web-mode-block-delimiter-face 15100 . 15101) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15100 . 15101) (nil block-beg 0 15099 . 15100) (nil block-controls 0 15099 . 15100) (nil block-side t 15099 . 15100) (nil block-token delimiter-beg 15099 . 15100) (nil font-lock-face web-mode-block-delimiter-face 15099 . 15100) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15099 . 15100) (nil tag-name "v-col" 15069 . 15070) (nil tag-type start 15069 . 15070) (nil tag-end t 15069 . 15070) (nil font-lock-face web-mode-html-tag-bracket-face 15069 . 15070) (nil tag-attr t 15068 . 15069) (nil tag-attr-end 5 15068 . 15069) (nil tag-name "v-col" 15068 . 15069) (nil tag-type start 15068 . 15069) (nil font-lock-face web-mode-html-attr-value-face 15068 . 15069) (nil tag-attr t 15053 . 15068) (nil tag-name "v-col" 15053 . 15068) (nil tag-type start 15053 . 15068) (nil font-lock-face web-mode-html-attr-value-face 15053 . 15068) (nil tag-attr t 15052 . 15053) (nil tag-name "v-col" 15052 . 15053) (nil tag-type start 15052 . 15053) (nil font-lock-face web-mode-html-attr-equal-face 15052 . 15053) (nil tag-attr t 15048 . 15052) (nil tag-name "v-col" 15048 . 15052) (nil tag-type start 15048 . 15052) (nil font-lock-face web-mode-html-attr-name-face 15048 . 15052) (nil tag-attr-beg 0 15047 . 15048) (nil tag-attr t 15047 . 15048) (nil tag-name "v-col" 15047 . 15048) (nil tag-type start 15047 . 15048) (nil font-lock-face web-mode-html-attr-name-face 15047 . 15048) (nil tag-name "v-col" 15046 . 15047) (nil tag-type start 15046 . 15047) (nil tag-name "v-col" 15041 . 15046) (nil tag-type start 15041 . 15046) (nil font-lock-face web-mode-html-tag-custom-face 15041 . 15046) (nil tag-name "v-col" 15040 . 15041) (nil tag-type start 15040 . 15041) (nil tag-beg 19 15040 . 15041) (nil font-lock-face web-mode-html-tag-bracket-face 15040 . 15041) (nil tag-name "v-row" 15012 . 15013) (nil tag-type start 15012 . 15013) (nil tag-end t 15012 . 15013) (nil font-lock-face web-mode-html-tag-bracket-face 15012 . 15013) (nil tag-attr t 15011 . 15012) (nil tag-attr-end 5 15011 . 15012) (nil tag-name "v-row" 15011 . 15012) (nil tag-type start 15011 . 15012) (nil font-lock-face web-mode-html-attr-value-face 15011 . 15012) (nil tag-attr t 15001 . 15011) (nil tag-name "v-row" 15001 . 15011) (nil tag-type start 15001 . 15011) (nil font-lock-face web-mode-html-attr-value-face 15001 . 15011) (nil tag-attr t 15000 . 15001) (nil tag-name "v-row" 15000 . 15001) (nil tag-type start 15000 . 15001) (nil font-lock-face web-mode-html-attr-equal-face 15000 . 15001) (nil tag-attr t 14996 . 15000) (nil tag-name "v-row" 14996 . 15000) (nil tag-type start 14996 . 15000) (nil font-lock-face web-mode-html-attr-name-face 14996 . 15000) (nil tag-attr-beg 0 14995 . 14996) (nil tag-attr t 14995 . 14996) (nil tag-name "v-row" 14995 . 14996) (nil tag-type start 14995 . 14996) (nil font-lock-face web-mode-html-attr-name-face 14995 . 14996) (nil tag-name "v-row" 14994 . 14995) (nil tag-type start 14994 . 14995) (nil tag-name "v-row" 14989 . 14994) (nil tag-type start 14989 . 14994) (nil font-lock-face web-mode-html-tag-custom-face 14989 . 14994) (nil tag-name "v-row" 14988 . 14989) (nil tag-type start 14988 . 14989) (nil tag-beg 19 14988 . 14989) (nil font-lock-face web-mode-html-tag-bracket-face 14988 . 14989) (nil tag-name "v-row" 14962 . 14963) (nil tag-type end 14962 . 14963) (nil tag-end t 14962 . 14963) (nil font-lock-face web-mode-html-tag-bracket-face 14962 . 14963) (nil tag-name "v-row" 14957 . 14962) (nil tag-type end 14957 . 14962) (nil font-lock-face web-mode-html-tag-custom-face 14957 . 14962) (nil tag-name "v-row" 14956 . 14957) (nil tag-type end 14956 . 14957) (nil font-lock-face web-mode-html-tag-bracket-face 14956 . 14957) (nil tag-name "v-row" 14955 . 14956) (nil tag-type end 14955 . 14956) (nil tag-beg 22 14955 . 14956) (nil font-lock-face web-mode-html-tag-bracket-face 14955 . 14956) (nil tag-name "v-col" 14929 . 14930) (nil tag-type end 14929 . 14930) (nil tag-end t 14929 . 14930) (nil font-lock-face web-mode-html-tag-bracket-face 14929 . 14930) (nil tag-name "v-col" 14924 . 14929) (nil tag-type end 14924 . 14929) (nil font-lock-face web-mode-html-tag-custom-face 14924 . 14929) (nil tag-name "v-col" 14923 . 14924) (nil tag-type end 14923 . 14924) (nil font-lock-face web-mode-html-tag-bracket-face 14923 . 14924) (nil tag-name "v-col" 14922 . 14923) (nil tag-type end 14922 . 14923) (nil tag-beg 22 14922 . 14923) (nil font-lock-face web-mode-html-tag-bracket-face 14922 . 14923) (nil face (rainbow-delimiters-depth-1-face) 14894 . 14895) (nil block-side t 14893 . 14894) (nil block-end t 14893 . 14894) (nil block-token delimiter-end 14893 . 14894) (nil font-lock-face web-mode-block-delimiter-face 14893 . 14894) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14893 . 14894) (nil block-side t 14892 . 14893) (nil block-token delimiter-end 14892 . 14893) (nil font-lock-face web-mode-block-delimiter-face 14892 . 14893) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 14892 . 14893) (nil block-side t 14891 . 14892) (nil face web-mode-variable-name-face 14891 . 14892) (nil block-side t 14890 . 14891) (nil face web-mode-variable-name-face 14890 . 14891) (nil block-side t 14889 . 14890) (nil face web-mode-variable-name-face 14889 . 14890) (nil block-side t 14888 . 14889) (nil block-side t 14887 . 14888) (nil face web-mode-variable-name-face 14887 . 14888) (nil block-side t 14886 . 14887) (nil face web-mode-variable-name-face 14886 . 14887) (nil block-side t 14885 . 14886) (nil face web-mode-variable-name-face 14885 . 14886) (nil block-side t 14884 . 14885) (nil face web-mode-variable-name-face 14884 . 14885) (nil block-side t 14883 . 14884) (nil block-token delimiter-beg 14883 . 14884) (nil font-lock-face web-mode-block-delimiter-face 14883 . 14884) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 14883 . 14884) (nil block-beg 0 14882 . 14883) (nil block-controls 0 14882 . 14883) (nil block-side t 14882 . 14883) (nil block-token delimiter-beg 14882 . 14883) (nil font-lock-face web-mode-block-delimiter-face 14882 . 14883) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14882 . 14883) (nil block-side t 14878 . 14879) (nil block-end t 14878 . 14879) (nil block-token delimiter-end 14878 . 14879) (nil font-lock-face web-mode-block-delimiter-face 14878 . 14879) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14878 . 14879) (nil block-side t 14877 . 14878) (nil block-token delimiter-end 14877 . 14878) (nil font-lock-face web-mode-block-delimiter-face 14877 . 14878) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 14877 . 14878) (nil block-side t 14876 . 14877) (nil face web-mode-variable-name-face 14876 . 14877) (nil block-side t 14875 . 14876) (nil face web-mode-variable-name-face 14875 . 14876) (nil block-side t 14874 . 14875) (nil face web-mode-variable-name-face 14874 . 14875) (nil block-side t 14873 . 14874) (nil face web-mode-variable-name-face 14873 . 14874) (nil block-side t 14872 . 14873) (nil face web-mode-variable-name-face 14872 . 14873) (nil block-side t 14871 . 14872) (nil face web-mode-variable-name-face 14871 . 14872) (nil block-side t 14870 . 14871) (nil face web-mode-variable-name-face 14870 . 14871) (nil block-side t 14869 . 14870) (nil block-side t 14868 . 14869) (nil face web-mode-variable-name-face 14868 . 14869) (nil block-side t 14867 . 14868) (nil face web-mode-variable-name-face 14867 . 14868) (nil block-side t 14866 . 14867) (nil face web-mode-variable-name-face 14866 . 14867) (nil block-side t 14865 . 14866) (nil face web-mode-variable-name-face 14865 . 14866) (nil block-side t 14864 . 14865) (nil block-token delimiter-beg 14864 . 14865) (nil font-lock-face web-mode-block-delimiter-face 14864 . 14865) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 14864 . 14865) (nil block-beg 0 14863 . 14864) (nil block-controls 0 14863 . 14864) (nil block-side t 14863 . 14864) (nil block-token delimiter-beg 14863 . 14864) (nil font-lock-face web-mode-block-delimiter-face 14863 . 14864) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14863 . 14864) (nil face (rainbow-delimiters-depth-1-face) 14862 . 14863) (nil tag-name "v-col" 14832 . 14833) (nil tag-type start 14832 . 14833) (nil tag-end t 14832 . 14833) (nil font-lock-face web-mode-html-tag-bracket-face 14832 . 14833) (nil tag-attr t 14831 . 14832) (nil tag-attr-end 5 14831 . 14832) (nil tag-name "v-col" 14831 . 14832) (nil tag-type start 14831 . 14832) (nil font-lock-face web-mode-html-attr-value-face 14831 . 14832) (nil tag-attr t 14821 . 14831) (nil tag-name "v-col" 14821 . 14831) (nil tag-type start 14821 . 14831) (nil font-lock-face web-mode-html-attr-value-face 14821 . 14831) (nil tag-attr t 14820 . 14821) (nil tag-name "v-col" 14820 . 14821) (nil tag-type start 14820 . 14821) (nil font-lock-face web-mode-html-attr-equal-face 14820 . 14821) (nil tag-attr t 14816 . 14820) (nil tag-name "v-col" 14816 . 14820) (nil tag-type start 14816 . 14820) (nil font-lock-face web-mode-html-attr-name-face 14816 . 14820) (nil tag-attr-beg 0 14815 . 14816) (nil tag-attr t 14815 . 14816) (nil tag-name "v-col" 14815 . 14816) (nil tag-type start 14815 . 14816) (nil font-lock-face web-mode-html-attr-name-face 14815 . 14816) (nil tag-name "v-col" 14814 . 14815) (nil tag-type start 14814 . 14815) (nil tag-name "v-col" 14809 . 14814) (nil tag-type start 14809 . 14814) (nil font-lock-face web-mode-html-tag-custom-face 14809 . 14814) (nil tag-name "v-col" 14808 . 14809) (nil tag-type start 14808 . 14809) (nil tag-beg 19 14808 . 14809) (nil font-lock-face web-mode-html-tag-bracket-face 14808 . 14809) (nil tag-name "v-row" 14780 . 14781) (nil tag-type start 14780 . 14781) (nil tag-end t 14780 . 14781) (nil font-lock-face web-mode-html-tag-bracket-face 14780 . 14781) (nil tag-attr t 14779 . 14780) (nil tag-attr-end 5 14779 . 14780) (nil tag-name "v-row" 14779 . 14780) (nil tag-type start 14779 . 14780) (nil font-lock-face web-mode-html-attr-value-face 14779 . 14780) (nil tag-attr t 14769 . 14779) (nil tag-name "v-row" 14769 . 14779) (nil tag-type start 14769 . 14779) (nil font-lock-face web-mode-html-attr-value-face 14769 . 14779) (nil tag-attr t 14768 . 14769) (nil tag-name "v-row" 14768 . 14769) (nil tag-type start 14768 . 14769) (nil font-lock-face web-mode-html-attr-equal-face 14768 . 14769) (nil tag-attr t 14764 . 14768) (nil tag-name "v-row" 14764 . 14768) (nil tag-type start 14764 . 14768) (nil font-lock-face web-mode-html-attr-name-face 14764 . 14768) (nil tag-attr-beg 0 14763 . 14764) (nil tag-attr t 14763 . 14764) (nil tag-name "v-row" 14763 . 14764) (nil tag-type start 14763 . 14764) (nil font-lock-face web-mode-html-attr-name-face 14763 . 14764) (nil tag-name "v-row" 14762 . 14763) (nil tag-type start 14762 . 14763) (nil tag-name "v-row" 14757 . 14762) (nil tag-type start 14757 . 14762) (nil font-lock-face web-mode-html-tag-custom-face 14757 . 14762) (nil tag-name "v-row" 14756 . 14757) (nil tag-type start 14756 . 14757) (nil tag-beg 19 14756 . 14757) (nil font-lock-face web-mode-html-tag-bracket-face 14756 . 14757) (nil tag-name "span" 14730 . 14731) (nil tag-type start 14730 . 14731) (nil tag-end t 14730 . 14731) (nil font-lock-face web-mode-html-tag-bracket-face 14730 . 14731) (nil tag-name "span" 14726 . 14730) (nil tag-type start 14726 . 14730) (nil font-lock-face web-mode-html-tag-face 14726 . 14730) (nil tag-name "span" 14725 . 14726) (nil tag-type start 14725 . 14726) (nil tag-beg 16 14725 . 14726) (nil font-lock-face web-mode-html-tag-bracket-face 14725 . 14726) (nil tag-name "template" 14701 . 14702) (nil tag-type end 14701 . 14702) (nil tag-end t 14701 . 14702) (nil font-lock-face web-mode-html-tag-bracket-face 14701 . 14702) (nil tag-name "template" 14693 . 14701) (nil tag-type end 14693 . 14701) (nil font-lock-face web-mode-html-tag-face 14693 . 14701) (nil tag-name "template" 14692 . 14693) (nil tag-type end 14692 . 14693) (nil font-lock-face web-mode-html-tag-bracket-face 14692 . 14693) (nil tag-name "template" 14691 . 14692) (nil tag-type end 14691 . 14692) (nil tag-beg 20 14691 . 14692) (nil font-lock-face web-mode-html-tag-bracket-face 14691 . 14692) (nil tag-name "v-col" 14667 . 14668) (nil tag-type end 14667 . 14668) (nil tag-end t 14667 . 14668) (nil font-lock-face web-mode-html-tag-bracket-face 14667 . 14668) (nil tag-name "v-col" 14662 . 14667) (nil tag-type end 14662 . 14667) (nil font-lock-face web-mode-html-tag-custom-face 14662 . 14667) (nil tag-name "v-col" 14661 . 14662) (nil tag-type end 14661 . 14662) (nil font-lock-face web-mode-html-tag-bracket-face 14661 . 14662) (nil tag-name "v-col" 14660 . 14661) (nil tag-type end 14660 . 14661) (nil tag-beg 22 14660 . 14661) (nil font-lock-face web-mode-html-tag-bracket-face 14660 . 14661) (nil block-side t 14634 . 14635) (nil block-end t 14634 . 14635) (nil block-token delimiter-end 14634 . 14635) (nil font-lock-face web-mode-block-delimiter-face 14634 . 14635) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14634 . 14635) (nil block-side t 14633 . 14634) (nil block-token delimiter-end 14633 . 14634) (nil font-lock-face web-mode-block-delimiter-face 14633 . 14634) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14633 . 14634) (nil block-side t 14632 . 14633) (nil face web-mode-variable-name-face 14632 . 14633) (nil block-side t 14631 . 14632) (nil face web-mode-variable-name-face 14631 . 14632) (nil block-side t 14630 . 14631) (nil face web-mode-variable-name-face 14630 . 14631) (nil block-side t 14629 . 14630) (nil face web-mode-variable-name-face 14629 . 14630) (nil block-side t 14628 . 14629) (nil block-side t 14627 . 14628) (nil face web-mode-variable-name-face 14627 . 14628) (nil block-side t 14626 . 14627) (nil face web-mode-variable-name-face 14626 . 14627) (nil block-side t 14625 . 14626) (nil face web-mode-variable-name-face 14625 . 14626) (nil block-side t 14624 . 14625) (nil face web-mode-variable-name-face 14624 . 14625) (nil block-side t 14623 . 14624) (nil block-token delimiter-beg 14623 . 14624) (nil font-lock-face web-mode-block-delimiter-face 14623 . 14624) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14623 . 14624) (nil block-beg 0 14622 . 14623) (nil block-controls 0 14622 . 14623) (nil block-side t 14622 . 14623) (nil block-token delimiter-beg 14622 . 14623) (nil font-lock-face web-mode-block-delimiter-face 14622 . 14623) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14622 . 14623) (nil tag-name "v-col" 14594 . 14595) (nil tag-type start 14594 . 14595) (nil tag-end t 14594 . 14595) (nil font-lock-face web-mode-html-tag-bracket-face 14594 . 14595) (nil tag-name "v-col" 14569 . 14594) (nil tag-type start 14569 . 14594) (nil tag-attr t 14568 . 14569) (nil tag-attr-end 5 14568 . 14569) (nil tag-name "v-col" 14568 . 14569) (nil tag-type start 14568 . 14569) (nil font-lock-face web-mode-html-attr-value-face 14568 . 14569) (nil tag-attr t 14552 . 14568) (nil tag-name "v-col" 14552 . 14568) (nil tag-type start 14552 . 14568) (nil font-lock-face web-mode-html-attr-value-face 14552 . 14568) (nil tag-attr t 14551 . 14552) (nil tag-name "v-col" 14551 . 14552) (nil tag-type start 14551 . 14552) (nil font-lock-face web-mode-html-attr-equal-face 14551 . 14552) (nil tag-attr t 14547 . 14551) (nil tag-name "v-col" 14547 . 14551) (nil tag-type start 14547 . 14551) (nil font-lock-face web-mode-html-attr-name-face 14547 . 14551) (nil tag-attr-beg 0 14546 . 14547) (nil tag-attr t 14546 . 14547) (nil tag-name "v-col" 14546 . 14547) (nil tag-type start 14546 . 14547) (nil font-lock-face web-mode-html-attr-name-face 14546 . 14547) (nil tag-name "v-col" 14514 . 14546) (nil tag-type start 14514 . 14546) (nil tag-attr t 14513 . 14514) (nil tag-attr-end 4 14513 . 14514) (nil tag-name "v-col" 14513 . 14514) (nil tag-type start 14513 . 14514) (nil font-lock-face web-mode-html-attr-value-face 14513 . 14514) (nil tag-attr t 14510 . 14513) (nil tag-name "v-col" 14510 . 14513) (nil tag-type start 14510 . 14513) (nil font-lock-face web-mode-html-attr-value-face 14510 . 14513) (nil tag-attr t 14509 . 14510) (nil tag-name "v-col" 14509 . 14510) (nil tag-type start 14509 . 14510) (nil font-lock-face web-mode-html-attr-equal-face 14509 . 14510) (nil tag-attr t 14506 . 14509) (nil tag-name "v-col" 14506 . 14509) (nil tag-type start 14506 . 14509) (nil font-lock-face web-mode-html-attr-engine-face 14506 . 14509) (nil tag-attr-beg 2 14505 . 14506) (nil tag-attr t 14505 . 14506) (nil tag-name "v-col" 14505 . 14506) (nil tag-type start 14505 . 14506) (nil font-lock-face web-mode-html-attr-engine-face 14505 . 14506) (nil tag-name "v-col" 14473 . 14505) (nil tag-type start 14473 . 14505) (nil tag-attr t 14472 . 14473) (nil tag-attr-end 6 14472 . 14473) (nil tag-name "v-col" 14472 . 14473) (nil tag-type start 14472 . 14473) (nil font-lock-face web-mode-html-attr-value-face 14472 . 14473) (nil tag-attr t 14466 . 14472) (nil tag-name "v-col" 14466 . 14472) (nil tag-type start 14466 . 14472) (nil font-lock-face web-mode-html-attr-value-face 14466 . 14472) (nil tag-attr t 14465 . 14466) (nil tag-name "v-col" 14465 . 14466) (nil tag-type start 14465 . 14466) (nil font-lock-face web-mode-html-attr-equal-face 14465 . 14466) (nil tag-attr t 14460 . 14465) (nil tag-name "v-col" 14460 . 14465) (nil tag-type start 14460 . 14465) (nil font-lock-face web-mode-html-attr-engine-face 14460 . 14465) (nil tag-attr-beg 2 14459 . 14460) (nil tag-attr t 14459 . 14460) (nil tag-name "v-col" 14459 . 14460) (nil tag-type start 14459 . 14460) (nil font-lock-face web-mode-html-attr-engine-face 14459 . 14460) (nil tag-name "v-col" 14458 . 14459) (nil tag-type start 14458 . 14459) (nil tag-name "v-col" 14453 . 14458) (nil tag-type start 14453 . 14458) (nil font-lock-face web-mode-html-tag-custom-face 14453 . 14458) (nil tag-name "v-col" 14452 . 14453) (nil tag-type start 14452 . 14453) (nil tag-beg 19 14452 . 14453) (nil font-lock-face web-mode-html-tag-bracket-face 14452 . 14453) (nil tag-name "template" 14426 . 14427) (nil tag-type start 14426 . 14427) (nil tag-end t 14426 . 14427) (nil font-lock-face web-mode-html-tag-bracket-face 14426 . 14427) (nil block-side t 14425 . 14426) (nil block-end t 14425 . 14426) (nil block-token delimiter-end 14425 . 14426) (nil tag-attr t 14425 . 14426) (nil tag-attr-end 16 14425 . 14426) (nil tag-name "template" 14425 . 14426) (nil tag-type start 14425 . 14426) (nil font-lock-face web-mode-block-delimiter-face 14425 . 14426) (nil block-side t 14423 . 14425) (nil tag-attr t 14423 . 14425) (nil tag-name "template" 14423 . 14425) (nil tag-type start 14423 . 14425) (nil block-side t 14422 . 14423) (nil tag-attr t 14422 . 14423) (nil tag-name "template" 14422 . 14423) (nil tag-type start 14422 . 14423) (nil face web-mode-variable-name-face 14422 . 14423) (nil block-side t 14421 . 14422) (nil tag-attr t 14421 . 14422) (nil tag-name "template" 14421 . 14422) (nil tag-type start 14421 . 14422) (nil face web-mode-variable-name-face 14421 . 14422) (nil block-side t 14420 . 14421) (nil tag-attr t 14420 . 14421) (nil tag-name "template" 14420 . 14421) (nil tag-type start 14420 . 14421) (nil face web-mode-variable-name-face 14420 . 14421) (nil block-side t 14419 . 14420) (nil tag-attr t 14419 . 14420) (nil tag-name "template" 14419 . 14420) (nil tag-type start 14419 . 14420) (nil face web-mode-variable-name-face 14419 . 14420) (nil block-side t 14418 . 14419) (nil tag-attr t 14418 . 14419) (nil tag-name "template" 14418 . 14419) (nil tag-type start 14418 . 14419) (nil face web-mode-variable-name-face 14418 . 14419) (nil block-side t 14416 . 14418) (nil tag-attr t 14416 . 14418) (nil tag-name "template" 14416 . 14418) (nil tag-type start 14416 . 14418) (nil block-side t 14415 . 14416) (nil tag-attr t 14415 . 14416) (nil tag-name "template" 14415 . 14416) (nil tag-type start 14415 . 14416) (nil face web-mode-variable-name-face 14415 . 14416) (nil block-side t 14414 . 14415) (nil tag-attr t 14414 . 14415) (nil tag-name "template" 14414 . 14415) (nil tag-type start 14414 . 14415) (nil face web-mode-variable-name-face 14414 . 14415) (nil block-side t 14412 . 14414) (nil tag-attr t 14412 . 14414) (nil tag-name "template" 14412 . 14414) (nil tag-type start 14412 . 14414) (nil block-side t 14411 . 14412) (nil block-token delimiter-beg 14411 . 14412) (nil tag-attr t 14411 . 14412) (nil tag-name "template" 14411 . 14412) (nil tag-type start 14411 . 14412) (nil font-lock-face web-mode-block-delimiter-face 14411 . 14412) (nil block-side t 14410 . 14411) (nil block-token delimiter-beg 14410 . 14411) (nil tag-attr t 14410 . 14411) (nil tag-name "template" 14410 . 14411) (nil tag-type start 14410 . 14411) (nil font-lock-face web-mode-block-delimiter-face 14410 . 14411) (nil block-side t 14409 . 14410) (nil block-token delimiter-beg 14409 . 14410) (nil tag-attr t 14409 . 14410) (nil tag-name "template" 14409 . 14410) (nil tag-type start 14409 . 14410) (nil font-lock-face web-mode-block-delimiter-face 14409 . 14410) (nil block-side t 14408 . 14409) (nil block-token delimiter-beg 14408 . 14409) (nil tag-attr t 14408 . 14409) (nil tag-name "template" 14408 . 14409) (nil tag-type start 14408 . 14409) (nil font-lock-face web-mode-block-delimiter-face 14408 . 14409) (nil block-side t 14407 . 14408) (nil block-token delimiter-beg 14407 . 14408) (nil tag-attr t 14407 . 14408) (nil tag-name "template" 14407 . 14408) (nil tag-type start 14407 . 14408) (nil font-lock-face web-mode-block-delimiter-face 14407 . 14408) (nil block-side t 14406 . 14407) (nil block-token delimiter-beg 14406 . 14407) (nil tag-attr t 14406 . 14407) (nil tag-name "template" 14406 . 14407) (nil tag-type start 14406 . 14407) (nil font-lock-face web-mode-block-delimiter-face 14406 . 14407) (nil block-side t 14405 . 14406) (nil block-token delimiter-beg 14405 . 14406) (nil tag-attr t 14405 . 14406) (nil tag-name "template" 14405 . 14406) (nil tag-type start 14405 . 14406) (nil font-lock-face web-mode-block-delimiter-face 14405 . 14406) (nil block-side t 14404 . 14405) (nil block-token delimiter-beg 14404 . 14405) (nil tag-attr t 14404 . 14405) (nil tag-name "template" 14404 . 14405) (nil tag-type start 14404 . 14405) (nil font-lock-face web-mode-block-delimiter-face 14404 . 14405) (nil block-side t 14403 . 14404) (nil block-token delimiter-beg 14403 . 14404) (nil tag-attr t 14403 . 14404) (nil tag-name "template" 14403 . 14404) (nil tag-type start 14403 . 14404) (nil font-lock-face web-mode-block-delimiter-face 14403 . 14404) (nil block-side t 14402 . 14403) (nil block-token delimiter-beg 14402 . 14403) (nil tag-attr t 14402 . 14403) (nil tag-name "template" 14402 . 14403) (nil tag-type start 14402 . 14403) (nil font-lock-face web-mode-block-delimiter-face 14402 . 14403) (nil block-side t 14401 . 14402) (nil block-token delimiter-beg 14401 . 14402) (nil tag-attr t 14401 . 14402) (nil tag-name "template" 14401 . 14402) (nil tag-type start 14401 . 14402) (nil font-lock-face web-mode-block-delimiter-face 14401 . 14402) (nil block-beg 0 14400 . 14401) (nil block-controls 0 14400 . 14401) (nil block-side t 14400 . 14401) (nil block-token delimiter-beg 14400 . 14401) (nil tag-attr t 14400 . 14401) (nil tag-name "template" 14400 . 14401) (nil tag-type start 14400 . 14401) (nil font-lock-face web-mode-block-delimiter-face 14400 . 14401) (nil tag-attr t 14395 . 14400) (nil tag-name "template" 14395 . 14400) (nil tag-type start 14395 . 14400) (nil font-lock-face web-mode-html-attr-engine-face 14395 . 14400) (nil tag-attr-beg 2 14394 . 14395) (nil tag-attr t 14394 . 14395) (nil tag-name "template" 14394 . 14395) (nil tag-type start 14394 . 14395) (nil font-lock-face web-mode-html-attr-engine-face 14394 . 14395) (nil tag-name "template" 14393 . 14394) (nil tag-type start 14393 . 14394) (nil tag-name "template" 14385 . 14393) (nil tag-type start 14385 . 14393) (nil font-lock-face web-mode-html-tag-face 14385 . 14393) (nil tag-name "template" 14384 . 14385) (nil tag-type start 14384 . 14385) (nil tag-beg 17 14384 . 14385) (nil font-lock-face web-mode-html-tag-bracket-face 14384 . 14385) (nil tag-name "v-tooltip" 14360 . 14361) (nil tag-type start 14360 . 14361) (nil tag-end t 14360 . 14361) (nil font-lock-face web-mode-html-tag-bracket-face 14360 . 14361) (nil tag-name "v-tooltip" 14339 . 14360) (nil tag-type start 14339 . 14360) (nil tag-attr t 14338 . 14339) (nil tag-attr-end 0 14338 . 14339) (nil tag-name "v-tooltip" 14338 . 14339) (nil tag-type start 14338 . 14339) (nil font-lock-face web-mode-html-attr-name-face 14338 . 14339) (nil tag-attr t 14334 . 14338) (nil tag-name "v-tooltip" 14334 . 14338) (nil tag-type start 14334 . 14338) (nil font-lock-face web-mode-html-attr-name-face 14334 . 14338) (nil tag-attr-beg 0 14333 . 14334) (nil tag-attr t 14333 . 14334) (nil tag-name "v-tooltip" 14333 . 14334) (nil tag-type start 14333 . 14334) (nil font-lock-face web-mode-html-attr-name-face 14333 . 14334) (nil tag-name "v-tooltip" 14310 . 14333) (nil tag-type start 14310 . 14333) (nil tag-name "v-tooltip" 14301 . 14310) (nil tag-type start 14301 . 14310) (nil font-lock-face web-mode-html-tag-custom-face 14301 . 14310) (nil tag-name "v-tooltip" 14300 . 14301) (nil tag-type start 14300 . 14301) (nil tag-beg 19 14300 . 14301) (nil font-lock-face web-mode-html-tag-bracket-face 14300 . 14301) (nil tag-name "v-row" 14278 . 14279) (nil tag-type start 14278 . 14279) (nil tag-end t 14278 . 14279) (nil font-lock-face web-mode-html-tag-bracket-face 14278 . 14279) (nil tag-attr t 14277 . 14278) (nil tag-attr-end 4 14277 . 14278) (nil tag-name "v-row" 14277 . 14278) (nil tag-type start 14277 . 14278) (nil font-lock-face web-mode-html-attr-value-face 14277 . 14278) (nil tag-attr t 14265 . 14277) (nil tag-name "v-row" 14265 . 14277) (nil tag-type start 14265 . 14277) (nil font-lock-face web-mode-html-attr-value-face 14265 . 14277) (nil tag-attr t 14264 . 14265) (nil tag-name "v-row" 14264 . 14265) (nil tag-type start 14264 . 14265) (nil font-lock-face web-mode-html-attr-equal-face 14264 . 14265) (nil tag-attr t 14261 . 14264) (nil tag-name "v-row" 14261 . 14264) (nil tag-type start 14261 . 14264) (nil font-lock-face web-mode-html-attr-engine-face 14261 . 14264) (nil tag-attr-beg 2 14260 . 14261) (nil tag-attr t 14260 . 14261) (nil tag-name "v-row" 14260 . 14261) (nil tag-type start 14260 . 14261) (nil font-lock-face web-mode-html-attr-engine-face 14260 . 14261) (nil tag-name "v-row" 14259 . 14260) (nil tag-type start 14259 . 14260) (nil tag-name "v-row" 14254 . 14259) (nil tag-type start 14254 . 14259) (nil font-lock-face web-mode-html-tag-custom-face 14254 . 14259) (nil tag-name "v-row" 14253 . 14254) (nil tag-type start 14253 . 14254) (nil tag-beg 19 14253 . 14254) (nil font-lock-face web-mode-html-tag-bracket-face 14253 . 14254) (nil tag-name "template" 14233 . 14234) (nil tag-type start 14233 . 14234) (nil tag-end t 14233 . 14234) (nil font-lock-face web-mode-html-tag-bracket-face 14233 . 14234) (nil block-side t 14232 . 14233) (nil block-end t 14232 . 14233) (nil block-token delimiter-end 14232 . 14233) (nil tag-attr t 14232 . 14233) (nil tag-attr-end 12 14232 . 14233) (nil tag-name "template" 14232 . 14233) (nil tag-type start 14232 . 14233) (nil font-lock-face web-mode-block-delimiter-face 14232 . 14233) (nil block-side t 14230 . 14232) (nil tag-attr t 14230 . 14232) (nil tag-name "template" 14230 . 14232) (nil tag-type start 14230 . 14232) (nil block-side t 14229 . 14230) (nil tag-attr t 14229 . 14230) (nil tag-name "template" 14229 . 14230) (nil tag-type start 14229 . 14230) (nil face web-mode-variable-name-face 14229 . 14230) (nil block-side t 14228 . 14229) (nil tag-attr t 14228 . 14229) (nil tag-name "template" 14228 . 14229) (nil tag-type start 14228 . 14229) (nil face web-mode-variable-name-face 14228 . 14229) (nil block-side t 14227 . 14228) (nil tag-attr t 14227 . 14228) (nil tag-name "template" 14227 . 14228) (nil tag-type start 14227 . 14228) (nil face web-mode-variable-name-face 14227 . 14228) (nil block-side t 14226 . 14227) (nil tag-attr t 14226 . 14227) (nil tag-name "template" 14226 . 14227) (nil tag-type start 14226 . 14227) (nil face web-mode-variable-name-face 14226 . 14227) (nil block-side t 14224 . 14226) (nil tag-attr t 14224 . 14226) (nil tag-name "template" 14224 . 14226) (nil tag-type start 14224 . 14226) (nil block-side t 14223 . 14224) (nil block-token delimiter-beg 14223 . 14224) (nil tag-attr t 14223 . 14224) (nil tag-name "template" 14223 . 14224) (nil tag-type start 14223 . 14224) (nil font-lock-face web-mode-block-delimiter-face 14223 . 14224) (nil block-side t 14222 . 14223) (nil block-token delimiter-beg 14222 . 14223) (nil tag-attr t 14222 . 14223) (nil tag-name "template" 14222 . 14223) (nil tag-type start 14222 . 14223) (nil font-lock-face web-mode-block-delimiter-face 14222 . 14223) (nil block-side t 14221 . 14222) (nil block-token delimiter-beg 14221 . 14222) (nil tag-attr t 14221 . 14222) (nil tag-name "template" 14221 . 14222) (nil tag-type start 14221 . 14222) (nil font-lock-face web-mode-block-delimiter-face 14221 . 14222) (nil block-side t 14220 . 14221) (nil block-token delimiter-beg 14220 . 14221) (nil tag-attr t 14220 . 14221) (nil tag-name "template" 14220 . 14221) (nil tag-type start 14220 . 14221) (nil font-lock-face web-mode-block-delimiter-face 14220 . 14221) (nil block-side t 14219 . 14220) (nil block-token delimiter-beg 14219 . 14220) (nil tag-attr t 14219 . 14220) (nil tag-name "template" 14219 . 14220) (nil tag-type start 14219 . 14220) (nil font-lock-face web-mode-block-delimiter-face 14219 . 14220) (nil block-side t 14218 . 14219) (nil block-token delimiter-beg 14218 . 14219) (nil tag-attr t 14218 . 14219) (nil tag-name "template" 14218 . 14219) (nil tag-type start 14218 . 14219) (nil font-lock-face web-mode-block-delimiter-face 14218 . 14219) (nil block-side t 14217 . 14218) (nil block-token delimiter-beg 14217 . 14218) (nil tag-attr t 14217 . 14218) (nil tag-name "template" 14217 . 14218) (nil tag-type start 14217 . 14218) (nil font-lock-face web-mode-block-delimiter-face 14217 . 14218) (nil block-beg 0 14216 . 14217) (nil block-controls 0 14216 . 14217) (nil block-side t 14216 . 14217) (nil block-token delimiter-beg 14216 . 14217) (nil tag-attr t 14216 . 14217) (nil tag-name "template" 14216 . 14217) (nil tag-type start 14216 . 14217) (nil font-lock-face web-mode-block-delimiter-face 14216 . 14217) (nil tag-attr t 14211 . 14216) (nil tag-name "template" 14211 . 14216) (nil tag-type start 14211 . 14216) (nil font-lock-face web-mode-html-attr-engine-face 14211 . 14216) (nil tag-attr-beg 2 14210 . 14211) (nil tag-attr t 14210 . 14211) (nil tag-name "template" 14210 . 14211) (nil tag-type start 14210 . 14211) (nil font-lock-face web-mode-html-attr-engine-face 14210 . 14211) (nil tag-name "template" 14209 . 14210) (nil tag-type start 14209 . 14210) (nil tag-name "template" 14201 . 14209) (nil tag-type start 14201 . 14209) (nil font-lock-face web-mode-html-tag-face 14201 . 14209) (nil tag-name "template" 14200 . 14201) (nil tag-type start 14200 . 14201) (nil tag-beg 17 14200 . 14201) (nil font-lock-face web-mode-html-tag-bracket-face 14200 . 14201) (14184 . 16350)) nil (25819 30161 222392 794000) 0 nil])
([nil nil ((#("'grey'" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (undo-tree-id396 . -6) (undo-tree-id397 . -6)) nil (25819 30193 705302 339000) 0 nil] [nil nil ((#("f" 0 1 (part-side javascript)) . -30333) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("a" 0 1 (part-side javascript)) . -30334) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("l" 0 1 (part-side javascript)) . -30335) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("s" 0 1 (part-side javascript)) . -30336) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("e" 0 1 (part-side javascript face web-mode-constant-face)) . -30337) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 30338 (t 25819 30129 893487 312000)) ((30333 . 30338)) (25819 30160 851463 746000) 0 nil] [nil nil ((6818 . 6839) (t 25819 30019 557128 583000)) (("mdi-toggle-switch-off" . 6818) (undo-tree-id297 . -21) (undo-tree-id298 . -21) (undo-tree-id299 . -21) (undo-tree-id300 . -21) (undo-tree-id301 . -21) (undo-tree-id302 . -21) (undo-tree-id303 . -21) (undo-tree-id304 . -21) (undo-tree-id305 . -21) (undo-tree-id306 . -21) (undo-tree-id307 . -21) (undo-tree-id308 . -21) (undo-tree-id309 . -21)) (25819 30122 696413 93000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (#(":" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625)) nil (25819 30193 705297 270000) 0 nil])
([nil nil ((30333 . 30338)) ((#("true " 0 4 (part-side javascript face web-mode-constant-face) 4 5 (part-side javascript)) . 30333) (undo-tree-id324 . -3) (undo-tree-id325 . -5) (undo-tree-id326 . -3) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5)) (25819 30160 604041 806000) 0 nil])
([nil nil ((6839 . 6840)) ((" " . 6839) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1)) (25819 30122 8069 446000) 0 nil])
([nil nil ((6632 . 6635)) nil (25819 30193 705295 573000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -30337) (undo-tree-id310 . -1) (undo-tree-id312 . -1) 30338) ((30337 . 30338) (t 25819 30150 845553 925000)) (25819 30150 830456 440000) 0 nil])
([nil nil (("mdi-toggle-switch" . 6840) (undo-tree-id231 . -17) (undo-tree-id232 . -17)) ((6840 . 6857)) (25819 30121 607496 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6640 . 6641) (nil block-side t 6640 . 6641) (nil tag-attr t 6640 . 6641) (nil tag-name "v-btn" 6640 . 6641) (nil tag-type start 6640 . 6641) (nil block-side t 6639 . 6640) (nil tag-attr t 6639 . 6640) (nil tag-name "v-btn" 6639 . 6640) (nil tag-type start 6639 . 6640) (nil face web-mode-variable-name-face 6639 . 6640) (nil block-side t 6638 . 6639) (nil tag-attr t 6638 . 6639) (nil tag-name "v-btn" 6638 . 6639) (nil tag-type start 6638 . 6639) (nil face web-mode-variable-name-face 6638 . 6639) (nil block-side t 6637 . 6638) (nil tag-attr t 6637 . 6638) (nil tag-name "v-btn" 6637 . 6638) (nil tag-type start 6637 . 6638) (nil face web-mode-variable-name-face 6637 . 6638) (nil block-side t 6636 . 6637) (nil tag-attr t 6636 . 6637) (nil tag-name "v-btn" 6636 . 6637) (nil tag-type start 6636 . 6637) (nil face web-mode-variable-name-face 6636 . 6637) (nil block-side t 6635 . 6636) (nil tag-attr t 6635 . 6636) (nil tag-name "v-btn" 6635 . 6636) (nil tag-type start 6635 . 6636) (6635 . 6641)) nil (25819 30193 705292 886000) 0 nil])
nil
([nil nil ((" " . -6839) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 6840) ((6839 . 6840)) (25819 30121 211462 34000) 0 nil])
([nil nil ((6739 . 6756)) nil (25819 30193 705284 540000) 0 nil])
([nil nil (("mdi-toggle-switch-off" . 6739) (undo-tree-id226 . -21) (undo-tree-id227 . -21) (undo-tree-id228 . -21)) ((6739 . 6760)) (25819 30120 454134 630000) 0 nil])
([nil nil ((6756 . 6757)) nil (25819 30193 705283 316000) 0 nil])
([nil nil ((6739 . 6756)) (("mdi-toggle-switch" . 6739) (t 25819 30107 561415 821000)) (25819 30106 871461 232000) 0 nil])
([nil nil (("mdi-toggle-switch-off" . 6757) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21)) nil (25819 30193 705281 815000) 0 nil])
([nil nil ((#("'grey'" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (undo-tree-id224 . -6) (undo-tree-id225 . -6)) ((6625 . 6631)) (25819 30106 471300 55000) 0 nil])
([nil nil ((" " . -6756) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 6757) nil (25819 30193 705277 168000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (#(":" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625) (#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6625)) ((6625 . 6626) (6625 . 6626) (6625 . 6626)) (25819 30106 128088 298000) 0 nil])
([nil nil (("m" . -6814) (undo-tree-id356 . -1) (undo-tree-id357 . -1) ("d" . -6815) (undo-tree-id358 . -1) (undo-tree-id359 . -1) ("i" . -6816) (undo-tree-id360 . -1) (undo-tree-id361 . -1) ("-" . -6817) (undo-tree-id362 . -1) (undo-tree-id363 . -1) ("t" . -6818) (undo-tree-id364 . -1) (undo-tree-id365 . -1) ("o" . -6819) (undo-tree-id366 . -1) (undo-tree-id367 . -1) ("g" . -6820) (undo-tree-id368 . -1) (undo-tree-id369 . -1) ("g" . -6821) (undo-tree-id370 . -1) (undo-tree-id371 . -1) ("l" . -6822) (undo-tree-id372 . -1) (undo-tree-id373 . -1) ("e" . -6823) (undo-tree-id374 . -1) (undo-tree-id375 . -1) ("-" . -6824) (undo-tree-id376 . -1) (undo-tree-id377 . -1) ("s" . -6825) (undo-tree-id378 . -1) (undo-tree-id379 . -1) ("w" . -6826) (undo-tree-id380 . -1) (undo-tree-id381 . -1) ("i" . -6827) (undo-tree-id382 . -1) (undo-tree-id383 . -1) ("t" . -6828) (undo-tree-id384 . -1) (undo-tree-id385 . -1) ("c" . -6829) (undo-tree-id386 . -1) (undo-tree-id387 . -1) ("h" . -6830) (undo-tree-id388 . -1) (undo-tree-id389 . -1) 6831) nil (25819 30193 705266 555000) 0 nil])
([nil nil ((6632 . 6634)) ((#(": " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6632) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2)) (25819 30105 862388 915000) 0 nil])
([nil nil ((6814 . 6835)) nil (25819 30193 705207 723000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6639 . 6640) (nil block-side t 6639 . 6640) (nil tag-attr t 6639 . 6640) (nil tag-name "v-btn" 6639 . 6640) (nil tag-type start 6639 . 6640) (nil block-side t 6638 . 6639) (nil tag-attr t 6638 . 6639) (nil tag-name "v-btn" 6638 . 6639) (nil tag-type start 6638 . 6639) (nil face web-mode-variable-name-face 6638 . 6639) (nil block-side t 6637 . 6638) (nil tag-attr t 6637 . 6638) (nil tag-name "v-btn" 6637 . 6638) (nil tag-type start 6637 . 6638) (nil face web-mode-variable-name-face 6637 . 6638) (nil block-side t 6636 . 6637) (nil tag-attr t 6636 . 6637) (nil tag-name "v-btn" 6636 . 6637) (nil tag-type start 6636 . 6637) (nil face web-mode-variable-name-face 6636 . 6637) (nil block-side t 6635 . 6636) (nil tag-attr t 6635 . 6636) (nil tag-name "v-btn" 6635 . 6636) (nil tag-type start 6635 . 6636) (nil face web-mode-variable-name-face 6635 . 6636) (nil block-side t 6634 . 6635) (nil tag-attr t 6634 . 6635) (nil tag-name "v-btn" 6634 . 6635) (nil tag-type start 6634 . 6635) (6634 . 6640)) ((#("'grey'" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (rear-nonsticky nil block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6634) (nil tag-name "v-btn" 6634 . 6635) (nil tag-name "v-btn" 6635 . 6636) (nil tag-name "v-btn" 6636 . 6637) (nil tag-name "v-btn" 6637 . 6638) (nil tag-name "v-btn" 6638 . 6639) (nil tag-name "v-btn" 6639 . 6640) (nil rear-nonsticky t 6639 . 6640)) (25819 30105 531015 603000) 0 nil])
([nil nil ((#("grey" 0 4 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6716) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (t 25819 30193 721688 897000)) nil (25819 30222 681161 55000) 0 nil])
([nil nil ((6632 . 6633)) ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 6632) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (t 25819 30090 381360 454000)) (25819 30090 366874 482000) 0 nil])
([nil nil ((6716 . 6720)) nil (25819 30222 681157 269000) 0 nil])
nil
([nil nil ((#("b" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6801) (undo-tree-id398 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6802) (undo-tree-id399 . -1) (#("u" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6803) (undo-tree-id400 . -1) (#("e" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6804) (undo-tree-id401 . -1) 6805) nil (25819 30222 681154 175000) 0 nil])
([nil nil ((6801 . 6805)) nil (25819 30222 681136 59000) 0 nil])
([nil nil ((6261 . 6276) (t 25819 30222 697779 155000)) nil (25819 30261 311412 556000) 0 nil])
([nil nil ((6276 . 6288)) nil (25819 30261 311410 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6295 . 6296) (nil block-side t 6295 . 6296) (nil tag-attr t 6295 . 6296) (nil tag-name "v-text-field" 6295 . 6296) (nil tag-type start 6295 . 6296) (nil face web-mode-variable-name-face 6295 . 6296) (nil block-side t 6294 . 6295) (nil tag-attr t 6294 . 6295) (nil tag-name "v-text-field" 6294 . 6295) (nil tag-type start 6294 . 6295) (nil face web-mode-variable-name-face 6294 . 6295) (nil block-side t 6293 . 6294) (nil tag-attr t 6293 . 6294) (nil tag-name "v-text-field" 6293 . 6294) (nil tag-type start 6293 . 6294) (nil face web-mode-variable-name-face 6293 . 6294) (nil block-side t 6292 . 6293) (nil tag-attr t 6292 . 6293) (nil tag-name "v-text-field" 6292 . 6293) (nil tag-type start 6292 . 6293) (nil face web-mode-variable-name-face 6292 . 6293) (nil block-side t 6291 . 6292) (nil tag-attr t 6291 . 6292) (nil tag-name "v-text-field" 6291 . 6292) (nil tag-type start 6291 . 6292) (nil face web-mode-variable-name-face 6291 . 6292) (nil block-side t 6290 . 6291) (nil tag-attr t 6290 . 6291) (nil tag-name "v-text-field" 6290 . 6291) (nil tag-type start 6290 . 6291) (nil face web-mode-variable-name-face 6290 . 6291) (nil block-side t 6289 . 6290) (nil tag-attr t 6289 . 6290) (nil tag-name "v-text-field" 6289 . 6290) (nil tag-type start 6289 . 6290) (nil face web-mode-variable-name-face 6289 . 6290) (nil block-side t 6288 . 6289) (nil tag-attr t 6288 . 6289) (nil tag-name "v-text-field" 6288 . 6289) (nil tag-type start 6288 . 6289) (nil face web-mode-variable-name-face 6288 . 6289) (nil block-side t 6287 . 6288) (nil tag-attr t 6287 . 6288) (nil tag-name "v-text-field" 6287 . 6288) (nil tag-type start 6287 . 6288) (nil face web-mode-variable-name-face 6287 . 6288) (6287 . 6296)) nil (25819 30261 311400 999000) 0 nil])
([nil nil ((1080 . 1097) (t 25819 30261 329898 358000)) nil (25819 30287 855744 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1117 . 1118) (nil block-side t 1117 . 1118) (nil block-end t 1117 . 1118) (nil block-token delimiter-end 1117 . 1118) (nil tag-attr t 1117 . 1118) (nil tag-attr-end 9 1117 . 1118) (nil tag-name "v-treeview" 1117 . 1118) (nil tag-type start 1117 . 1118) (nil font-lock-face web-mode-block-delimiter-face 1117 . 1118) (nil rear-nonsticky t 1116 . 1117) (nil block-side t 1116 . 1117) (nil tag-attr t 1116 . 1117) (nil tag-name "v-treeview" 1116 . 1117) (nil tag-type start 1116 . 1117) (nil face web-mode-variable-name-face 1116 . 1117) (nil block-side t 1115 . 1116) (nil tag-attr t 1115 . 1116) (nil tag-name "v-treeview" 1115 . 1116) (nil tag-type start 1115 . 1116) (nil face web-mode-variable-name-face 1115 . 1116) (nil block-side t 1114 . 1115) (nil tag-attr t 1114 . 1115) (nil tag-name "v-treeview" 1114 . 1115) (nil tag-type start 1114 . 1115) (nil face web-mode-variable-name-face 1114 . 1115) (nil block-side t 1113 . 1114) (nil tag-attr t 1113 . 1114) (nil tag-name "v-treeview" 1113 . 1114) (nil tag-type start 1113 . 1114) (nil face web-mode-variable-name-face 1113 . 1114) (nil block-side t 1112 . 1113) (nil tag-attr t 1112 . 1113) (nil tag-name "v-treeview" 1112 . 1113) (nil tag-type start 1112 . 1113) (nil face web-mode-variable-name-face 1112 . 1113) (nil block-side t 1111 . 1112) (nil tag-attr t 1111 . 1112) (nil tag-name "v-treeview" 1111 . 1112) (nil tag-type start 1111 . 1112) (nil face web-mode-variable-name-face 1111 . 1112) (nil block-side t 1110 . 1111) (nil tag-attr t 1110 . 1111) (nil tag-name "v-treeview" 1110 . 1111) (nil tag-type start 1110 . 1111) (nil face web-mode-variable-name-face 1110 . 1111) (nil block-side t 1109 . 1110) (nil tag-attr t 1109 . 1110) (nil tag-name "v-treeview" 1109 . 1110) (nil tag-type start 1109 . 1110) (nil face web-mode-variable-name-face 1109 . 1110) (nil block-side t 1108 . 1109) (nil tag-attr t 1108 . 1109) (nil tag-name "v-treeview" 1108 . 1109) (nil tag-type start 1108 . 1109) (nil face web-mode-variable-name-face 1108 . 1109) (nil block-side t 1107 . 1108) (nil block-token delimiter-beg 1107 . 1108) (nil tag-attr t 1107 . 1108) (nil tag-name "v-treeview" 1107 . 1108) (nil tag-type start 1107 . 1108) (nil font-lock-face web-mode-block-delimiter-face 1107 . 1108) (nil block-side t 1106 . 1107) (nil block-token delimiter-beg 1106 . 1107) (nil tag-attr t 1106 . 1107) (nil tag-name "v-treeview" 1106 . 1107) (nil tag-type start 1106 . 1107) (nil font-lock-face web-mode-block-delimiter-face 1106 . 1107) (nil block-side t 1105 . 1106) (nil block-token delimiter-beg 1105 . 1106) (nil tag-attr t 1105 . 1106) (nil tag-name "v-treeview" 1105 . 1106) (nil tag-type start 1105 . 1106) (nil font-lock-face web-mode-block-delimiter-face 1105 . 1106) (nil block-side t 1104 . 1105) (nil block-token delimiter-beg 1104 . 1105) (nil tag-attr t 1104 . 1105) (nil tag-name "v-treeview" 1104 . 1105) (nil tag-type start 1104 . 1105) (nil font-lock-face web-mode-block-delimiter-face 1104 . 1105) (nil block-side t 1103 . 1104) (nil block-token delimiter-beg 1103 . 1104) (nil tag-attr t 1103 . 1104) (nil tag-name "v-treeview" 1103 . 1104) (nil tag-type start 1103 . 1104) (nil font-lock-face web-mode-block-delimiter-face 1103 . 1104) (nil block-side t 1102 . 1103) (nil block-token delimiter-beg 1102 . 1103) (nil tag-attr t 1102 . 1103) (nil tag-name "v-treeview" 1102 . 1103) (nil tag-type start 1102 . 1103) (nil font-lock-face web-mode-block-delimiter-face 1102 . 1103) (nil block-side t 1101 . 1102) (nil block-token delimiter-beg 1101 . 1102) (nil tag-attr t 1101 . 1102) (nil tag-name "v-treeview" 1101 . 1102) (nil tag-type start 1101 . 1102) (nil font-lock-face web-mode-block-delimiter-face 1101 . 1102) (nil block-side t 1100 . 1101) (nil block-token delimiter-beg 1100 . 1101) (nil tag-attr t 1100 . 1101) (nil tag-name "v-treeview" 1100 . 1101) (nil tag-type start 1100 . 1101) (nil font-lock-face web-mode-block-delimiter-face 1100 . 1101) (nil block-side t 1099 . 1100) (nil block-token delimiter-beg 1099 . 1100) (nil tag-attr t 1099 . 1100) (nil tag-name "v-treeview" 1099 . 1100) (nil tag-type start 1099 . 1100) (nil font-lock-face web-mode-block-delimiter-face 1099 . 1100) (nil block-side t 1098 . 1099) (nil block-token delimiter-beg 1098 . 1099) (nil tag-attr t 1098 . 1099) (nil tag-name "v-treeview" 1098 . 1099) (nil tag-type start 1098 . 1099) (nil font-lock-face web-mode-block-delimiter-face 1098 . 1099) (nil block-beg 0 1097 . 1098) (nil block-controls 0 1097 . 1098) (nil block-side t 1097 . 1098) (nil block-token delimiter-beg 1097 . 1098) (nil tag-attr-beg 2 1097 . 1098) (nil tag-attr t 1097 . 1098) (nil tag-name "v-treeview" 1097 . 1098) (nil tag-type start 1097 . 1098) (nil font-lock-face web-mode-block-delimiter-face 1097 . 1098) (1097 . 1118)) nil (25819 30287 855731 755000) 0 nil])
([nil nil ((463 . 478)) nil (25819 30287 855682 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 498 . 499) (nil block-side t 498 . 499) (nil block-end t 498 . 499) (nil block-token delimiter-end 498 . 499) (nil tag-attr t 498 . 499) (nil tag-attr-end 9 498 . 499) (nil tag-name "v-text-field" 498 . 499) (nil tag-type start 498 . 499) (nil font-lock-face web-mode-block-delimiter-face 498 . 499) (nil rear-nonsticky t 497 . 498) (nil block-side t 497 . 498) (nil tag-attr t 497 . 498) (nil tag-name "v-text-field" 497 . 498) (nil tag-type start 497 . 498) (nil face web-mode-variable-name-face 497 . 498) (nil block-side t 496 . 497) (nil tag-attr t 496 . 497) (nil tag-name "v-text-field" 496 . 497) (nil tag-type start 496 . 497) (nil face web-mode-variable-name-face 496 . 497) (nil block-side t 495 . 496) (nil tag-attr t 495 . 496) (nil tag-name "v-text-field" 495 . 496) (nil tag-type start 495 . 496) (nil face web-mode-variable-name-face 495 . 496) (nil block-side t 494 . 495) (nil tag-attr t 494 . 495) (nil tag-name "v-text-field" 494 . 495) (nil tag-type start 494 . 495) (nil face web-mode-variable-name-face 494 . 495) (nil block-side t 493 . 494) (nil tag-attr t 493 . 494) (nil tag-name "v-text-field" 493 . 494) (nil tag-type start 493 . 494) (nil face web-mode-variable-name-face 493 . 494) (nil block-side t 492 . 493) (nil tag-attr t 492 . 493) (nil tag-name "v-text-field" 492 . 493) (nil tag-type start 492 . 493) (nil face web-mode-variable-name-face 492 . 493) (nil block-side t 491 . 492) (nil tag-attr t 491 . 492) (nil tag-name "v-text-field" 491 . 492) (nil tag-type start 491 . 492) (nil face web-mode-variable-name-face 491 . 492) (nil block-side t 490 . 491) (nil tag-attr t 490 . 491) (nil tag-name "v-text-field" 490 . 491) (nil tag-type start 490 . 491) (nil face web-mode-variable-name-face 490 . 491) (nil block-side t 489 . 490) (nil tag-attr t 489 . 490) (nil tag-name "v-text-field" 489 . 490) (nil tag-type start 489 . 490) (nil face web-mode-variable-name-face 489 . 490) (nil block-side t 488 . 489) (nil block-token delimiter-beg 488 . 489) (nil tag-attr t 488 . 489) (nil tag-name "v-text-field" 488 . 489) (nil tag-type start 488 . 489) (nil font-lock-face web-mode-block-delimiter-face 488 . 489) (nil block-side t 487 . 488) (nil block-token delimiter-beg 487 . 488) (nil tag-attr t 487 . 488) (nil tag-name "v-text-field" 487 . 488) (nil tag-type start 487 . 488) (nil font-lock-face web-mode-block-delimiter-face 487 . 488) (nil block-side t 486 . 487) (nil block-token delimiter-beg 486 . 487) (nil tag-attr t 486 . 487) (nil tag-name "v-text-field" 486 . 487) (nil tag-type start 486 . 487) (nil font-lock-face web-mode-block-delimiter-face 486 . 487) (nil block-side t 485 . 486) (nil block-token delimiter-beg 485 . 486) (nil tag-attr t 485 . 486) (nil tag-name "v-text-field" 485 . 486) (nil tag-type start 485 . 486) (nil font-lock-face web-mode-block-delimiter-face 485 . 486) (nil block-side t 484 . 485) (nil block-token delimiter-beg 484 . 485) (nil tag-attr t 484 . 485) (nil tag-name "v-text-field" 484 . 485) (nil tag-type start 484 . 485) (nil font-lock-face web-mode-block-delimiter-face 484 . 485) (nil block-side t 483 . 484) (nil block-token delimiter-beg 483 . 484) (nil tag-attr t 483 . 484) (nil tag-name "v-text-field" 483 . 484) (nil tag-type start 483 . 484) (nil font-lock-face web-mode-block-delimiter-face 483 . 484) (nil block-side t 482 . 483) (nil block-token delimiter-beg 482 . 483) (nil tag-attr t 482 . 483) (nil tag-name "v-text-field" 482 . 483) (nil tag-type start 482 . 483) (nil font-lock-face web-mode-block-delimiter-face 482 . 483) (nil block-side t 481 . 482) (nil block-token delimiter-beg 481 . 482) (nil tag-attr t 481 . 482) (nil tag-name "v-text-field" 481 . 482) (nil tag-type start 481 . 482) (nil font-lock-face web-mode-block-delimiter-face 481 . 482) (nil block-side t 480 . 481) (nil block-token delimiter-beg 480 . 481) (nil tag-attr t 480 . 481) (nil tag-name "v-text-field" 480 . 481) (nil tag-type start 480 . 481) (nil font-lock-face web-mode-block-delimiter-face 480 . 481) (nil block-side t 479 . 480) (nil block-token delimiter-beg 479 . 480) (nil tag-attr t 479 . 480) (nil tag-name "v-text-field" 479 . 480) (nil tag-type start 479 . 480) (nil font-lock-face web-mode-block-delimiter-face 479 . 480) (nil block-beg 0 478 . 479) (nil block-controls 0 478 . 479) (nil block-side t 478 . 479) (nil block-token delimiter-beg 478 . 479) (nil tag-attr-beg 2 478 . 479) (nil tag-attr t 478 . 479) (nil tag-name "v-text-field" 478 . 479) (nil tag-type start 478 . 479) (nil font-lock-face web-mode-block-delimiter-face 478 . 479) (478 . 499)) nil (25819 30479 816700 878000) 0 nil])
([nil nil ((4033 . 4060)) nil (25819 30571 727269 342000) 0 nil] [nil nil ((1895 . 1921) (1832 . 1858) (#("                    " 0 20 (tag-name "v-icon" tag-type start)) . 1832) (1888 . 1889) (t 25819 30287 881979 584000)) ((#("
" 0 1 (tag-name "v-icon" tag-type start)) . 1888) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (1832 . 1852) (#("                          " 0 26 (tag-name "v-icon" tag-type start)) . 1832) (#("                          " 0 26 (tag-name "v-icon" tag-type start)) . 1895) (undo-tree-id433 . -26) (undo-tree-id434 . -26) (undo-tree-id435 . -26) (undo-tree-id436 . -26) (undo-tree-id437 . -26) (undo-tree-id438 . -26) (undo-tree-id439 . -26) (undo-tree-id440 . -26) (undo-tree-id441 . -26) (undo-tree-id442 . -26) (undo-tree-id443 . -26)) (25819 30479 61390 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4080 . 4081) (nil rear-nonsticky t 4080 . 4081) (nil block-side t 4080 . 4081) (nil block-end t 4080 . 4081) (nil block-token delimiter-end 4080 . 4081) (nil tag-attr t 4080 . 4081) (nil tag-attr-end 9 4080 . 4081) (nil tag-name "v-btn" 4080 . 4081) (nil tag-type start 4080 . 4081) (nil font-lock-face web-mode-block-delimiter-face 4080 . 4081) (nil block-side t 4079 . 4080) (nil tag-attr t 4079 . 4080) (nil tag-name "v-btn" 4079 . 4080) (nil tag-type start 4079 . 4080) (nil face web-mode-variable-name-face 4079 . 4080) (nil block-side t 4078 . 4079) (nil tag-attr t 4078 . 4079) (nil tag-name "v-btn" 4078 . 4079) (nil tag-type start 4078 . 4079) (nil face web-mode-variable-name-face 4078 . 4079) (nil block-side t 4077 . 4078) (nil tag-attr t 4077 . 4078) (nil tag-name "v-btn" 4077 . 4078) (nil tag-type start 4077 . 4078) (nil face web-mode-variable-name-face 4077 . 4078) (nil block-side t 4076 . 4077) (nil tag-attr t 4076 . 4077) (nil tag-name "v-btn" 4076 . 4077) (nil tag-type start 4076 . 4077) (nil face web-mode-variable-name-face 4076 . 4077) (nil block-side t 4075 . 4076) (nil tag-attr t 4075 . 4076) (nil tag-name "v-btn" 4075 . 4076) (nil tag-type start 4075 . 4076) (nil face web-mode-variable-name-face 4075 . 4076) (nil block-side t 4074 . 4075) (nil tag-attr t 4074 . 4075) (nil tag-name "v-btn" 4074 . 4075) (nil tag-type start 4074 . 4075) (nil face web-mode-variable-name-face 4074 . 4075) (nil block-side t 4073 . 4074) (nil tag-attr t 4073 . 4074) (nil tag-name "v-btn" 4073 . 4074) (nil tag-type start 4073 . 4074) (nil face web-mode-variable-name-face 4073 . 4074) (nil block-side t 4072 . 4073) (nil tag-attr t 4072 . 4073) (nil tag-name "v-btn" 4072 . 4073) (nil tag-type start 4072 . 4073) (nil face web-mode-variable-name-face 4072 . 4073) (nil block-side t 4071 . 4072) (nil tag-attr t 4071 . 4072) (nil tag-name "v-btn" 4071 . 4072) (nil tag-type start 4071 . 4072) (nil face web-mode-variable-name-face 4071 . 4072) (nil block-side t 4070 . 4071) (nil block-token delimiter-beg 4070 . 4071) (nil tag-attr t 4070 . 4071) (nil tag-name "v-btn" 4070 . 4071) (nil tag-type start 4070 . 4071) (nil font-lock-face web-mode-block-delimiter-face 4070 . 4071) (nil block-side t 4069 . 4070) (nil block-token delimiter-beg 4069 . 4070) (nil tag-attr t 4069 . 4070) (nil tag-name "v-btn" 4069 . 4070) (nil tag-type start 4069 . 4070) (nil font-lock-face web-mode-block-delimiter-face 4069 . 4070) (nil block-side t 4068 . 4069) (nil block-token delimiter-beg 4068 . 4069) (nil tag-attr t 4068 . 4069) (nil tag-name "v-btn" 4068 . 4069) (nil tag-type start 4068 . 4069) (nil font-lock-face web-mode-block-delimiter-face 4068 . 4069) (nil block-side t 4067 . 4068) (nil block-token delimiter-beg 4067 . 4068) (nil tag-attr t 4067 . 4068) (nil tag-name "v-btn" 4067 . 4068) (nil tag-type start 4067 . 4068) (nil font-lock-face web-mode-block-delimiter-face 4067 . 4068) (nil block-side t 4066 . 4067) (nil block-token delimiter-beg 4066 . 4067) (nil tag-attr t 4066 . 4067) (nil tag-name "v-btn" 4066 . 4067) (nil tag-type start 4066 . 4067) (nil font-lock-face web-mode-block-delimiter-face 4066 . 4067) (nil block-side t 4065 . 4066) (nil block-token delimiter-beg 4065 . 4066) (nil tag-attr t 4065 . 4066) (nil tag-name "v-btn" 4065 . 4066) (nil tag-type start 4065 . 4066) (nil font-lock-face web-mode-block-delimiter-face 4065 . 4066) (nil block-side t 4064 . 4065) (nil block-token delimiter-beg 4064 . 4065) (nil tag-attr t 4064 . 4065) (nil tag-name "v-btn" 4064 . 4065) (nil tag-type start 4064 . 4065) (nil font-lock-face web-mode-block-delimiter-face 4064 . 4065) (nil block-side t 4063 . 4064) (nil block-token delimiter-beg 4063 . 4064) (nil tag-attr t 4063 . 4064) (nil tag-name "v-btn" 4063 . 4064) (nil tag-type start 4063 . 4064) (nil font-lock-face web-mode-block-delimiter-face 4063 . 4064) (nil block-side t 4062 . 4063) (nil block-token delimiter-beg 4062 . 4063) (nil tag-attr t 4062 . 4063) (nil tag-name "v-btn" 4062 . 4063) (nil tag-type start 4062 . 4063) (nil font-lock-face web-mode-block-delimiter-face 4062 . 4063) (nil block-side t 4061 . 4062) (nil block-token delimiter-beg 4061 . 4062) (nil tag-attr t 4061 . 4062) (nil tag-name "v-btn" 4061 . 4062) (nil tag-type start 4061 . 4062) (nil font-lock-face web-mode-block-delimiter-face 4061 . 4062) (nil block-beg 0 4060 . 4061) (nil block-controls 0 4060 . 4061) (nil block-side t 4060 . 4061) (nil block-token delimiter-beg 4060 . 4061) (nil tag-attr-beg 2 4060 . 4061) (nil tag-attr t 4060 . 4061) (nil tag-name "v-btn" 4060 . 4061) (nil tag-type start 4060 . 4061) (nil font-lock-face web-mode-block-delimiter-face 4060 . 4061) (4060 . 4081)) nil (25819 30571 727262 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1941 . 1942) (nil rear-nonsticky t 1941 . 1942) (nil block-side t 1941 . 1942) (nil block-end t 1941 . 1942) (nil block-token delimiter-end 1941 . 1942) (nil tag-attr t 1941 . 1942) (nil tag-attr-end 9 1941 . 1942) (nil tag-name "v-icon" 1941 . 1942) (nil tag-type start 1941 . 1942) (nil font-lock-face web-mode-block-delimiter-face 1941 . 1942) (nil block-side t 1940 . 1941) (nil tag-attr t 1940 . 1941) (nil tag-name "v-icon" 1940 . 1941) (nil tag-type start 1940 . 1941) (nil face web-mode-variable-name-face 1940 . 1941) (nil block-side t 1939 . 1940) (nil tag-attr t 1939 . 1940) (nil tag-name "v-icon" 1939 . 1940) (nil tag-type start 1939 . 1940) (nil face web-mode-variable-name-face 1939 . 1940) (nil block-side t 1938 . 1939) (nil tag-attr t 1938 . 1939) (nil tag-name "v-icon" 1938 . 1939) (nil tag-type start 1938 . 1939) (nil face web-mode-variable-name-face 1938 . 1939) (nil block-side t 1937 . 1938) (nil tag-attr t 1937 . 1938) (nil tag-name "v-icon" 1937 . 1938) (nil tag-type start 1937 . 1938) (nil face web-mode-variable-name-face 1937 . 1938) (nil block-side t 1936 . 1937) (nil tag-attr t 1936 . 1937) (nil tag-name "v-icon" 1936 . 1937) (nil tag-type start 1936 . 1937) (nil face web-mode-variable-name-face 1936 . 1937) (nil block-side t 1935 . 1936) (nil tag-attr t 1935 . 1936) (nil tag-name "v-icon" 1935 . 1936) (nil tag-type start 1935 . 1936) (nil face web-mode-variable-name-face 1935 . 1936) (nil block-side t 1934 . 1935) (nil tag-attr t 1934 . 1935) (nil tag-name "v-icon" 1934 . 1935) (nil tag-type start 1934 . 1935) (nil face web-mode-variable-name-face 1934 . 1935) (nil block-side t 1933 . 1934) (nil tag-attr t 1933 . 1934) (nil tag-name "v-icon" 1933 . 1934) (nil tag-type start 1933 . 1934) (nil face web-mode-variable-name-face 1933 . 1934) (nil block-side t 1932 . 1933) (nil tag-attr t 1932 . 1933) (nil tag-name "v-icon" 1932 . 1933) (nil tag-type start 1932 . 1933) (nil face web-mode-variable-name-face 1932 . 1933) (nil block-side t 1931 . 1932) (nil block-token delimiter-beg 1931 . 1932) (nil tag-attr t 1931 . 1932) (nil tag-name "v-icon" 1931 . 1932) (nil tag-type start 1931 . 1932) (nil font-lock-face web-mode-block-delimiter-face 1931 . 1932) (nil block-side t 1930 . 1931) (nil block-token delimiter-beg 1930 . 1931) (nil tag-attr t 1930 . 1931) (nil tag-name "v-icon" 1930 . 1931) (nil tag-type start 1930 . 1931) (nil font-lock-face web-mode-block-delimiter-face 1930 . 1931) (nil block-side t 1929 . 1930) (nil block-token delimiter-beg 1929 . 1930) (nil tag-attr t 1929 . 1930) (nil tag-name "v-icon" 1929 . 1930) (nil tag-type start 1929 . 1930) (nil font-lock-face web-mode-block-delimiter-face 1929 . 1930) (nil block-side t 1928 . 1929) (nil block-token delimiter-beg 1928 . 1929) (nil tag-attr t 1928 . 1929) (nil tag-name "v-icon" 1928 . 1929) (nil tag-type start 1928 . 1929) (nil font-lock-face web-mode-block-delimiter-face 1928 . 1929) (nil block-side t 1927 . 1928) (nil block-token delimiter-beg 1927 . 1928) (nil tag-attr t 1927 . 1928) (nil tag-name "v-icon" 1927 . 1928) (nil tag-type start 1927 . 1928) (nil font-lock-face web-mode-block-delimiter-face 1927 . 1928) (nil block-side t 1926 . 1927) (nil block-token delimiter-beg 1926 . 1927) (nil tag-attr t 1926 . 1927) (nil tag-name "v-icon" 1926 . 1927) (nil tag-type start 1926 . 1927) (nil font-lock-face web-mode-block-delimiter-face 1926 . 1927) (nil block-side t 1925 . 1926) (nil block-token delimiter-beg 1925 . 1926) (nil tag-attr t 1925 . 1926) (nil tag-name "v-icon" 1925 . 1926) (nil tag-type start 1925 . 1926) (nil font-lock-face web-mode-block-delimiter-face 1925 . 1926) (nil block-side t 1924 . 1925) (nil block-token delimiter-beg 1924 . 1925) (nil tag-attr t 1924 . 1925) (nil tag-name "v-icon" 1924 . 1925) (nil tag-type start 1924 . 1925) (nil font-lock-face web-mode-block-delimiter-face 1924 . 1925) (nil block-side t 1923 . 1924) (nil block-token delimiter-beg 1923 . 1924) (nil tag-attr t 1923 . 1924) (nil tag-name "v-icon" 1923 . 1924) (nil tag-type start 1923 . 1924) (nil font-lock-face web-mode-block-delimiter-face 1923 . 1924) (nil block-side t 1922 . 1923) (nil block-token delimiter-beg 1922 . 1923) (nil tag-attr t 1922 . 1923) (nil tag-name "v-icon" 1922 . 1923) (nil tag-type start 1922 . 1923) (nil font-lock-face web-mode-block-delimiter-face 1922 . 1923) (nil block-beg 0 1921 . 1922) (nil block-controls 0 1921 . 1922) (nil block-side t 1921 . 1922) (nil block-token delimiter-beg 1921 . 1922) (nil tag-attr-beg 2 1921 . 1922) (nil tag-attr t 1921 . 1922) (nil tag-name "v-icon" 1921 . 1922) (nil tag-type start 1921 . 1922) (nil font-lock-face web-mode-block-delimiter-face 1921 . 1922) (1921 . 1942)) ((#(":disabled=\"tree_edit\"" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 1 2 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 2 3 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 3 4 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 4 5 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 5 6 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 6 7 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 7 8 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 9 10 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 10 11 (block-side t block-token delimiter-beg tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face) 20 21 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 9 tag-name "v-icon" tag-type start font-lock-face web-mode-block-delimiter-face)) . 1921) (undo-tree-id404 . -21) (undo-tree-id405 . -21) (undo-tree-id406 . -21) (undo-tree-id407 . -21) (undo-tree-id408 . -21) (undo-tree-id409 . -21) (undo-tree-id410 . -21) (undo-tree-id411 . -21) (undo-tree-id412 . -21) (undo-tree-id413 . -21) (undo-tree-id414 . -21) (undo-tree-id415 . -21) (undo-tree-id416 . -21) (undo-tree-id417 . -21) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (nil tag-name "v-icon" 1921 . 1922) (nil tag-name "v-icon" 1922 . 1923) (nil tag-name "v-icon" 1923 . 1924) (nil tag-name "v-icon" 1924 . 1925) (nil tag-name "v-icon" 1925 . 1926) (nil tag-name "v-icon" 1926 . 1927) (nil tag-name "v-icon" 1927 . 1928) (nil tag-name "v-icon" 1928 . 1929) (nil tag-name "v-icon" 1929 . 1930) (nil tag-name "v-icon" 1930 . 1931) (nil tag-name "v-icon" 1931 . 1932) (nil tag-name "v-icon" 1932 . 1933) (nil tag-name "v-icon" 1933 . 1934) (nil tag-name "v-icon" 1934 . 1935) (nil tag-name "v-icon" 1935 . 1936) (nil tag-name "v-icon" 1936 . 1937) (nil tag-name "v-icon" 1937 . 1938) (nil tag-name "v-icon" 1938 . 1939) (nil tag-name "v-icon" 1939 . 1940) (nil tag-name "v-icon" 1940 . 1941) (nil tag-name "v-icon" 1941 . 1942) (nil rear-nonsticky nil 1941 . 1942) (nil rear-nonsticky t 1941 . 1942) (t 25819 30467 206515 440000)) (25819 30467 185895 669000) 0 nil])
([nil nil ((3238 . 3265)) nil (25819 30571 727235 169000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3285 . 3286) (nil rear-nonsticky t 3285 . 3286) (nil block-side t 3285 . 3286) (nil block-end t 3285 . 3286) (nil block-token delimiter-end 3285 . 3286) (nil tag-attr t 3285 . 3286) (nil tag-attr-end 9 3285 . 3286) (nil tag-name "v-btn" 3285 . 3286) (nil tag-type start 3285 . 3286) (nil font-lock-face web-mode-block-delimiter-face 3285 . 3286) (nil block-side t 3284 . 3285) (nil tag-attr t 3284 . 3285) (nil tag-name "v-btn" 3284 . 3285) (nil tag-type start 3284 . 3285) (nil face web-mode-variable-name-face 3284 . 3285) (nil block-side t 3283 . 3284) (nil tag-attr t 3283 . 3284) (nil tag-name "v-btn" 3283 . 3284) (nil tag-type start 3283 . 3284) (nil face web-mode-variable-name-face 3283 . 3284) (nil block-side t 3282 . 3283) (nil tag-attr t 3282 . 3283) (nil tag-name "v-btn" 3282 . 3283) (nil tag-type start 3282 . 3283) (nil face web-mode-variable-name-face 3282 . 3283) (nil block-side t 3281 . 3282) (nil tag-attr t 3281 . 3282) (nil tag-name "v-btn" 3281 . 3282) (nil tag-type start 3281 . 3282) (nil face web-mode-variable-name-face 3281 . 3282) (nil block-side t 3280 . 3281) (nil tag-attr t 3280 . 3281) (nil tag-name "v-btn" 3280 . 3281) (nil tag-type start 3280 . 3281) (nil face web-mode-variable-name-face 3280 . 3281) (nil block-side t 3279 . 3280) (nil tag-attr t 3279 . 3280) (nil tag-name "v-btn" 3279 . 3280) (nil tag-type start 3279 . 3280) (nil face web-mode-variable-name-face 3279 . 3280) (nil block-side t 3278 . 3279) (nil tag-attr t 3278 . 3279) (nil tag-name "v-btn" 3278 . 3279) (nil tag-type start 3278 . 3279) (nil face web-mode-variable-name-face 3278 . 3279) (nil block-side t 3277 . 3278) (nil tag-attr t 3277 . 3278) (nil tag-name "v-btn" 3277 . 3278) (nil tag-type start 3277 . 3278) (nil face web-mode-variable-name-face 3277 . 3278) (nil block-side t 3276 . 3277) (nil tag-attr t 3276 . 3277) (nil tag-name "v-btn" 3276 . 3277) (nil tag-type start 3276 . 3277) (nil face web-mode-variable-name-face 3276 . 3277) (nil block-side t 3275 . 3276) (nil block-token delimiter-beg 3275 . 3276) (nil tag-attr t 3275 . 3276) (nil tag-name "v-btn" 3275 . 3276) (nil tag-type start 3275 . 3276) (nil font-lock-face web-mode-block-delimiter-face 3275 . 3276) (nil block-side t 3274 . 3275) (nil block-token delimiter-beg 3274 . 3275) (nil tag-attr t 3274 . 3275) (nil tag-name "v-btn" 3274 . 3275) (nil tag-type start 3274 . 3275) (nil font-lock-face web-mode-block-delimiter-face 3274 . 3275) (nil block-side t 3273 . 3274) (nil block-token delimiter-beg 3273 . 3274) (nil tag-attr t 3273 . 3274) (nil tag-name "v-btn" 3273 . 3274) (nil tag-type start 3273 . 3274) (nil font-lock-face web-mode-block-delimiter-face 3273 . 3274) (nil block-side t 3272 . 3273) (nil block-token delimiter-beg 3272 . 3273) (nil tag-attr t 3272 . 3273) (nil tag-name "v-btn" 3272 . 3273) (nil tag-type start 3272 . 3273) (nil font-lock-face web-mode-block-delimiter-face 3272 . 3273) (nil block-side t 3271 . 3272) (nil block-token delimiter-beg 3271 . 3272) (nil tag-attr t 3271 . 3272) (nil tag-name "v-btn" 3271 . 3272) (nil tag-type start 3271 . 3272) (nil font-lock-face web-mode-block-delimiter-face 3271 . 3272) (nil block-side t 3270 . 3271) (nil block-token delimiter-beg 3270 . 3271) (nil tag-attr t 3270 . 3271) (nil tag-name "v-btn" 3270 . 3271) (nil tag-type start 3270 . 3271) (nil font-lock-face web-mode-block-delimiter-face 3270 . 3271) (nil block-side t 3269 . 3270) (nil block-token delimiter-beg 3269 . 3270) (nil tag-attr t 3269 . 3270) (nil tag-name "v-btn" 3269 . 3270) (nil tag-type start 3269 . 3270) (nil font-lock-face web-mode-block-delimiter-face 3269 . 3270) (nil block-side t 3268 . 3269) (nil block-token delimiter-beg 3268 . 3269) (nil tag-attr t 3268 . 3269) (nil tag-name "v-btn" 3268 . 3269) (nil tag-type start 3268 . 3269) (nil font-lock-face web-mode-block-delimiter-face 3268 . 3269) (nil block-side t 3267 . 3268) (nil block-token delimiter-beg 3267 . 3268) (nil tag-attr t 3267 . 3268) (nil tag-name "v-btn" 3267 . 3268) (nil tag-type start 3267 . 3268) (nil font-lock-face web-mode-block-delimiter-face 3267 . 3268) (nil block-side t 3266 . 3267) (nil block-token delimiter-beg 3266 . 3267) (nil tag-attr t 3266 . 3267) (nil tag-name "v-btn" 3266 . 3267) (nil tag-type start 3266 . 3267) (nil font-lock-face web-mode-block-delimiter-face 3266 . 3267) (nil block-beg 0 3265 . 3266) (nil block-controls 0 3265 . 3266) (nil block-side t 3265 . 3266) (nil block-token delimiter-beg 3265 . 3266) (nil tag-attr-beg 2 3265 . 3266) (nil tag-attr t 3265 . 3266) (nil tag-name "v-btn" 3265 . 3266) (nil tag-type start 3265 . 3266) (nil font-lock-face web-mode-block-delimiter-face 3265 . 3266) (3265 . 3286)) nil (25819 30633 659856 326000) 0 nil])
([nil nil ((#("                      <p style=\"margin-bottom: 0px; margin-left: 5px; color: green\" v-if=\"!item.filter && folderChange[item.id] != undefined && folderChange[item.id]['added'] > 0\">{{folderChange[item.id]['added']}}</p>
                      <v-icon small v-if=\"folderChange[item.id] != undefined && folderChange[item.id]['added'] > 0 \" color=\"green\">
                        mdi-arrow-up-bold
                      </v-icon>
                      <p style=\"margin-bottom: 0px; margin-left: 5px; color: red\" v-if=\"!item.filter && folderChange[item.id] != undefined && folderChange[item.id]['removed'] > 0 \">{{folderChange[item.id]['removed']}}</p>
                      <v-icon small v-if=\"folderChange[item.id] != undefined && folderChange[item.id]['removed'] > 0 \" color=\"red\">
                        mdi-arrow-down-bold
                      </v-icon>" 22 23 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 24 25 (tag-name "p" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 82 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 83 84 (tag-name "p" tag-type start) 84 85 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 85 88 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 88 89 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 89 150 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 150 178 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 178 179 (tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 179 180 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 180 181 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 181 182 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 182 183 (block-side t face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t face (whitespace-line web-mode-variable-name-face)) 184 185 (block-side t face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t face (whitespace-line web-mode-variable-name-face)) 186 187 (block-side t face (whitespace-line web-mode-variable-name-face)) 187 188 (block-side t face (whitespace-line web-mode-variable-name-face)) 188 189 (block-side t face (whitespace-line web-mode-variable-name-face)) 189 190 (block-side t face (whitespace-line web-mode-variable-name-face)) 190 191 (block-side t face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t face (whitespace-line web-mode-variable-name-face)) 193 194 (block-side t face (whitespace-line web-mode-variable-name-face)) 194 195 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 195 196 (block-side t face (whitespace-line web-mode-variable-name-face)) 196 197 (block-side t face (whitespace-line web-mode-variable-name-face)) 197 198 (block-side t face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t face (whitespace-line web-mode-variable-name-face)) 199 200 (block-side t face (whitespace-line)) 200 201 (block-side t face (whitespace-line web-mode-variable-name-face)) 201 202 (block-side t face (whitespace-line web-mode-variable-name-face)) 202 203 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 203 204 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 204 205 (block-side t face (whitespace-line)) 205 206 (block-side t face (whitespace-line web-mode-variable-name-face)) 206 207 (block-side t face (whitespace-line web-mode-variable-name-face)) 207 208 (block-side t face (whitespace-line web-mode-variable-name-face)) 208 209 (block-side t face (whitespace-line web-mode-variable-name-face)) 209 210 (block-side t face (whitespace-line web-mode-variable-name-face)) 210 211 (block-side t face (whitespace-line)) 211 212 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 212 213 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 213 214 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 214 215 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 215 216 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 216 217 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 217 218 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 241 242 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 242 248 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 248 249 (tag-name "v-icon" tag-type start) 249 250 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 250 253 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 253 254 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 254 255 (tag-name "v-icon" tag-type start) 255 256 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 256 259 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 259 260 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 260 334 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 334 335 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 335 336 (tag-name "v-icon" tag-type start) 336 337 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 337 341 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 341 342 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 342 348 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 348 349 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 349 350 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 415 416 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 416 417 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 417 423 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 423 424 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 447 448 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 448 449 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 449 450 (tag-name "p" tag-type start) 450 451 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 451 455 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 455 456 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 456 505 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 505 506 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 506 507 (tag-name "p" tag-type start) 507 508 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 508 511 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 511 512 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 512 575 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 575 604 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 604 605 (tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 605 606 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 606 607 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 607 608 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 608 609 (block-side t face (whitespace-line web-mode-variable-name-face)) 609 610 (block-side t face (whitespace-line web-mode-variable-name-face)) 610 611 (block-side t face (whitespace-line web-mode-variable-name-face)) 611 612 (block-side t face (whitespace-line web-mode-variable-name-face)) 612 613 (block-side t face (whitespace-line web-mode-variable-name-face)) 613 614 (block-side t face (whitespace-line web-mode-variable-name-face)) 614 615 (block-side t face (whitespace-line web-mode-variable-name-face)) 615 616 (block-side t face (whitespace-line web-mode-variable-name-face)) 616 617 (block-side t face (whitespace-line web-mode-variable-name-face)) 617 618 (block-side t face (whitespace-line web-mode-variable-name-face)) 618 619 (block-side t face (whitespace-line web-mode-variable-name-face)) 619 620 (block-side t face (whitespace-line web-mode-variable-name-face)) 620 621 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 621 622 (block-side t face (whitespace-line web-mode-variable-name-face)) 622 623 (block-side t face (whitespace-line web-mode-variable-name-face)) 623 624 (block-side t face (whitespace-line web-mode-variable-name-face)) 624 625 (block-side t face (whitespace-line web-mode-variable-name-face)) 625 626 (block-side t face (whitespace-line)) 626 627 (block-side t face (whitespace-line web-mode-variable-name-face)) 627 628 (block-side t face (whitespace-line web-mode-variable-name-face)) 628 629 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 629 630 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 630 631 (block-side t face (whitespace-line)) 631 632 (block-side t face (whitespace-line web-mode-variable-name-face)) 632 633 (block-side t face (whitespace-line web-mode-variable-name-face)) 633 634 (block-side t face (whitespace-line web-mode-variable-name-face)) 634 635 (block-side t face (whitespace-line web-mode-variable-name-face)) 635 636 (block-side t face (whitespace-line web-mode-variable-name-face)) 636 637 (block-side t face (whitespace-line web-mode-variable-name-face)) 637 638 (block-side t face (whitespace-line web-mode-variable-name-face)) 638 639 (block-side t face (whitespace-line)) 639 640 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 640 641 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 641 642 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 642 643 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 643 644 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 644 645 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 645 646 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 669 670 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 670 676 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 676 677 (tag-name "v-icon" tag-type start) 677 678 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 678 681 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 681 682 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 682 683 (tag-name "v-icon" tag-type start) 683 684 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 684 687 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 687 688 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 688 764 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 764 765 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 765 766 (tag-name "v-icon" tag-type start) 766 767 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 767 771 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 771 772 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 772 776 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 776 777 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 777 778 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 845 846 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 846 847 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 847 853 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 853 854 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15618) (undo-tree-id453 . -219) (undo-tree-id454 . -854) (undo-tree-id455 . -854) (t 25819 30571 746819 430000)) nil (25819 30645 262933 248000) 0 nil] [nil nil ((#("                  <v-row v-else>
                    <v-col style=\" display: flex;\">
                      {{item.name}}
                      <p style=\"margin-bottom: 0px; margin-left: 5px; color: green\" v-if=\"!item.filter && folderChange[item.id] != undefined && folderChange[item.id]['added'] > 0\">{{folderChange[item.id]['added']}}</p>
                      <v-icon small v-if=\"folderChange[item.id] != undefined && folderChange[item.id]['added'] > 0 \" color=\"green\">
                        mdi-arrow-up-bold
                      </v-icon>
                      <p style=\"margin-bottom: 0px; margin-left: 5px; color: red\" v-if=\"!item.filter && folderChange[item.id] != undefined && folderChange[item.id]['removed'] > 0 \">{{folderChange[item.id]['removed']}}</p>
                      <v-icon small v-if=\"folderChange[item.id] != undefined && folderChange[item.id]['removed'] > 0 \" color=\"red\">
                        mdi-arrow-down-bold
                      </v-icon>
                    </v-col>
                  </v-row>" 18 19 (tag-name "v-row" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-row" tag-type start) 25 26 (tag-attr-beg 2 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-engine-face) 26 30 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-engine-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-engine-face) 31 32 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 54 59 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 59 60 (tag-name "v-col" tag-type start) 60 61 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 61 65 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 65 66 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 66 82 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 83 84 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 107 108 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 108 109 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 109 110 (block-side t face web-mode-variable-name-face) 110 111 (block-side t face web-mode-variable-name-face) 111 112 (block-side t face web-mode-variable-name-face) 112 113 (block-side t face web-mode-variable-name-face) 113 114 (block-side t) 114 115 (block-side t face web-mode-variable-name-face) 115 116 (block-side t face web-mode-variable-name-face) 116 117 (block-side t face web-mode-variable-name-face) 117 118 (block-side t face web-mode-variable-name-face) 118 119 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 119 120 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 143 144 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 144 145 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 145 146 (tag-name "p" tag-type start) 146 147 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 147 151 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 151 152 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 152 203 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 203 204 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 204 205 (tag-name "p" tag-type start) 205 206 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 206 209 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 209 210 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 210 271 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 271 299 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 299 300 (tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 300 301 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 301 302 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 302 303 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 303 304 (block-side t face (whitespace-line web-mode-variable-name-face)) 304 305 (block-side t face (whitespace-line web-mode-variable-name-face)) 305 306 (block-side t face (whitespace-line web-mode-variable-name-face)) 306 307 (block-side t face (whitespace-line web-mode-variable-name-face)) 307 308 (block-side t face (whitespace-line web-mode-variable-name-face)) 308 309 (block-side t face (whitespace-line web-mode-variable-name-face)) 309 310 (block-side t face (whitespace-line web-mode-variable-name-face)) 310 311 (block-side t face (whitespace-line web-mode-variable-name-face)) 311 312 (block-side t face (whitespace-line web-mode-variable-name-face)) 312 313 (block-side t face (whitespace-line web-mode-variable-name-face)) 313 314 (block-side t face (whitespace-line web-mode-variable-name-face)) 314 315 (block-side t face (whitespace-line web-mode-variable-name-face)) 315 316 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 316 317 (block-side t face (whitespace-line web-mode-variable-name-face)) 317 318 (block-side t face (whitespace-line web-mode-variable-name-face)) 318 319 (block-side t face (whitespace-line web-mode-variable-name-face)) 319 320 (block-side t face (whitespace-line web-mode-variable-name-face)) 320 321 (block-side t face (whitespace-line)) 321 322 (block-side t face (whitespace-line web-mode-variable-name-face)) 322 323 (block-side t face (whitespace-line web-mode-variable-name-face)) 323 324 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 324 325 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 325 326 (block-side t face (whitespace-line)) 326 327 (block-side t face (whitespace-line web-mode-variable-name-face)) 327 328 (block-side t face (whitespace-line web-mode-variable-name-face)) 328 329 (block-side t face (whitespace-line web-mode-variable-name-face)) 329 330 (block-side t face (whitespace-line web-mode-variable-name-face)) 330 331 (block-side t face (whitespace-line web-mode-variable-name-face)) 331 332 (block-side t face (whitespace-line)) 332 333 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 333 334 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 334 335 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 335 336 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 336 337 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 337 338 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 338 339 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 362 363 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 363 369 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 369 370 (tag-name "v-icon" tag-type start) 370 371 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 371 374 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 374 375 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 375 376 (tag-name "v-icon" tag-type start) 376 377 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 377 380 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 380 381 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 381 455 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 455 456 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 456 457 (tag-name "v-icon" tag-type start) 457 458 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 458 462 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 462 463 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 463 469 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 469 470 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 470 471 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 536 537 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 537 538 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 538 544 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 544 545 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 568 569 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 569 570 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 570 571 (tag-name "p" tag-type start) 571 572 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 572 576 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 576 577 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 577 626 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 626 627 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 627 628 (tag-name "p" tag-type start) 628 629 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 629 632 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 632 633 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 633 696 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 696 725 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 725 726 (tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 726 727 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 727 728 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 728 729 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 729 730 (block-side t face (whitespace-line web-mode-variable-name-face)) 730 731 (block-side t face (whitespace-line web-mode-variable-name-face)) 731 732 (block-side t face (whitespace-line web-mode-variable-name-face)) 732 733 (block-side t face (whitespace-line web-mode-variable-name-face)) 733 734 (block-side t face (whitespace-line web-mode-variable-name-face)) 734 735 (block-side t face (whitespace-line web-mode-variable-name-face)) 735 736 (block-side t face (whitespace-line web-mode-variable-name-face)) 736 737 (block-side t face (whitespace-line web-mode-variable-name-face)) 737 738 (block-side t face (whitespace-line web-mode-variable-name-face)) 738 739 (block-side t face (whitespace-line web-mode-variable-name-face)) 739 740 (block-side t face (whitespace-line web-mode-variable-name-face)) 740 741 (block-side t face (whitespace-line web-mode-variable-name-face)) 741 742 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 742 743 (block-side t face (whitespace-line web-mode-variable-name-face)) 743 744 (block-side t face (whitespace-line web-mode-variable-name-face)) 744 745 (block-side t face (whitespace-line web-mode-variable-name-face)) 745 746 (block-side t face (whitespace-line web-mode-variable-name-face)) 746 747 (block-side t face (whitespace-line)) 747 748 (block-side t face (whitespace-line web-mode-variable-name-face)) 748 749 (block-side t face (whitespace-line web-mode-variable-name-face)) 749 750 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 750 751 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 751 752 (block-side t face (whitespace-line)) 752 753 (block-side t face (whitespace-line web-mode-variable-name-face)) 753 754 (block-side t face (whitespace-line web-mode-variable-name-face)) 754 755 (block-side t face (whitespace-line web-mode-variable-name-face)) 755 756 (block-side t face (whitespace-line web-mode-variable-name-face)) 756 757 (block-side t face (whitespace-line web-mode-variable-name-face)) 757 758 (block-side t face (whitespace-line web-mode-variable-name-face)) 758 759 (block-side t face (whitespace-line web-mode-variable-name-face)) 759 760 (block-side t face (whitespace-line)) 760 761 (block-side t face (rainbow-delimiters-depth-3-face whitespace-line)) 761 762 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face)) 762 763 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face)) 763 764 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 764 765 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 765 766 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 766 767 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 790 791 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 791 797 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 797 798 (tag-name "v-icon" tag-type start) 798 799 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 799 802 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 802 803 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 803 804 (tag-name "v-icon" tag-type start) 804 805 (tag-attr-beg 2 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 805 808 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-engine-face) 808 809 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 809 885 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 885 886 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 886 887 (tag-name "v-icon" tag-type start) 887 888 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 888 892 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 892 893 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 893 897 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 897 898 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 898 899 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 966 967 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 967 968 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 968 974 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 974 975 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 996 997 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 997 998 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 998 1003 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 1003 1004 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1023 1024 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1024 1025 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1025 1030 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 1030 1031 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15497) (undo-tree-id447 . -33) (undo-tree-id448 . -1031) (undo-tree-id449 . -1031) (t 25819 30571 746819 430000)) ((15497 . 16528)) (25819 30633 344688 527000) 0 nil])
([nil nil (("
" . -15617) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) 15618) nil (25819 30645 262923 994000) 0 nil])
([nil nil (("
" . -15496) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) 15497) ((15496 . 15497)) (25819 30633 342838 96000) 0 nil])
([nil nil ((13847 . 13864) (t 25819 30645 287030 354000)) nil (25819 30675 903512 926000) 0 nil])
nil
([nil nil ((13864 . 13870)) nil (25819 30675 903510 864000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-draggable-treeview" tag-type start)) . -13869) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) 13870) nil (25819 30675 903505 436000) 0 nil])
([nil nil ((45838 . 45840) (#("  " 0 2 (part-side css)) . 45837) (undo-tree-id462 . -2) (45836 . 45840) (t 25819 30675 927117 614000)) nil (25819 30740 635778 247000) 0 nil])
([nil nil ((45850 . 45852) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -45850) (45840 . 45851)) nil (25819 30740 635774 951000) 0 nil])
([nil nil ((45853 . 45855) (#("    " 0 4 (part-side css face whitespace-trailing)) . 45852) (undo-tree-id460 . -2) (undo-tree-id461 . 4) (45854 . 45856) (45851 . 45855)) nil (25819 30740 635772 693000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45877 . 45878) (nil part-side css 45877 . 45878) (nil part-side css 45870 . 45877) (nil face web-mode-css-color-face 45870 . 45877) (nil part-side css 45869 . 45870) (nil part-side css 45852 . 45869) (nil face web-mode-css-property-name-face 45852 . 45869) (45852 . 45878)) nil (25819 30740 635762 113000) 0 nil])
([nil nil ((45852 . 45856) 45878) nil (25819 30740 635759 182000) 0 nil])
([nil nil ((13708 . 13709)) nil (25819 30740 635757 62000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13716 . 13717) (nil tag-attr t 13709 . 13717) (nil tag-name "v-container" 13709 . 13717) (nil tag-type start 13709 . 13717) (nil font-lock-face web-mode-html-attr-value-face 13709 . 13717) (13709 . 13717)) nil (25819 30740 635737 382000) 0 nil])
([nil nil ((#("#EEEEEE;" 0 7 (part-side css face web-mode-css-color-face) 7 8 (rear-nonsticky t part-side css)) . 45883) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (t 25819 30740 655300 870000)) nil (25819 30774 765538 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45909 . 45910) (nil part-side css 45909 . 45910) (nil part-side css 45908 . 45909) (nil face (rainbow-delimiters-depth-2-face) 45908 . 45909) (nil part-side css 45895 . 45908) (nil part-side css 45887 . 45895) (nil face web-mode-css-variable-face 45887 . 45895) (nil part-side css 45886 . 45887) (nil face (rainbow-delimiters-depth-2-face) 45886 . 45887) (nil part-side css 45883 . 45886) (nil face web-mode-css-function-face 45883 . 45886) (45883 . 45910)) nil (25819 30774 765520 678000) 0 nil])
([nil nil ((#("grey_light_3" 0 4 (part-side css face web-mode-css-variable-face) 4 12 (part-side css)) . 45891) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (t 25819 30774 787396 965000)) nil (25819 30874 116332 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45906 . 45907) (nil part-side css 45891 . 45907) (nil face web-mode-css-variable-face 45891 . 45907) (45891 . 45907)) nil (25819 30874 116314 456000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css face web-mode-css-variable-face)) . -45897) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) 45898 (t 25819 30874 143674 826000)) nil (25819 30897 461689 328000) 0 nil])
([nil nil ((45897 . 45898)) nil (25819 30897 461675 818000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . 45905)) nil (25819 30897 461673 611000) 0 nil])
([nil nil ((45905 . 45906)) nil (25819 30897 461666 567000) 0 nil])
([nil nil ((#("orange_lighten_4" 0 6 (part-side css face web-mode-css-variable-face) 6 15 (part-side css) 15 16 (rear-nonsticky t part-side css)) . 45891) (undo-tree-id472 . -16) (undo-tree-id473 . -15) (undo-tree-id474 . -6) (undo-tree-id475 . -15) (undo-tree-id476 . -16) (undo-tree-id477 . -5) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -16) (undo-tree-id493 . -16) (t 25819 30897 483739 735000)) nil (25819 31021 333577 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45899 . 45900) (nil part-side css 45895 . 45900) (nil part-side css 45891 . 45895) (nil face web-mode-css-variable-face 45891 . 45895) (45891 . 45900)) nil (25819 31021 333540 122000) 0 nil])
([nil nil ((16345 . 16349) (t 25819 31021 356082 263000)) nil (25819 31176 571835 607000) 0 nil])
([nil nil ((16349 . 16358)) nil (25819 31198 199432 449000) 0 nil] [nil nil ((nil rear-nonsticky nil 16369 . 16370) (nil tag-name "v-btn" 16369 . 16370) (nil tag-type start 16369 . 16370) (nil rear-nonsticky t 16368 . 16369) (nil tag-name "v-btn" 16368 . 16369) (nil tag-type start 16368 . 16369) (nil tag-name "v-btn" 16367 . 16368) (nil tag-type start 16367 . 16368) (nil tag-name "v-btn" 16366 . 16367) (nil tag-type start 16366 . 16367) (nil tag-name "v-btn" 16365 . 16366) (nil tag-type start 16365 . 16366) (nil tag-name "v-btn" 16364 . 16365) (nil tag-type start 16364 . 16365) (nil tag-name "v-btn" 16363 . 16364) (nil tag-type start 16363 . 16364) (nil tag-name "v-btn" 16362 . 16363) (nil tag-type start 16362 . 16363) (nil tag-name "v-btn" 16361 . 16362) (nil tag-type start 16361 . 16362) (nil tag-name "v-btn" 16360 . 16361) (nil tag-type start 16360 . 16361) (nil block-side t 16359 . 16360) (nil block-end t 16359 . 16360) (nil block-token delimiter-end 16359 . 16360) (nil tag-attr t 16359 . 16360) (nil tag-attr-end 9 16359 . 16360) (nil tag-name "v-btn" 16359 . 16360) (nil tag-type start 16359 . 16360) (nil block-side t 16358 . 16359) (nil tag-attr t 16358 . 16359) (nil tag-name "v-btn" 16358 . 16359) (nil tag-type start 16358 . 16359) (nil block-side t 16357 . 16358) (nil tag-attr t 16357 . 16358) (nil tag-name "v-btn" 16357 . 16358) (nil tag-type start 16357 . 16358) (nil block-side t 16356 . 16357) (nil tag-attr t 16356 . 16357) (nil tag-name "v-btn" 16356 . 16357) (nil tag-type start 16356 . 16357) (nil block-side t 16355 . 16356) (nil tag-attr t 16355 . 16356) (nil tag-name "v-btn" 16355 . 16356) (nil tag-type start 16355 . 16356) (nil block-side t 16354 . 16355) (nil tag-attr t 16354 . 16355) (nil tag-name "v-btn" 16354 . 16355) (nil tag-type start 16354 . 16355) (nil block-side t 16353 . 16354) (nil tag-attr t 16353 . 16354) (nil tag-name "v-btn" 16353 . 16354) (nil tag-type start 16353 . 16354) (nil block-side t 16352 . 16353) (nil tag-attr t 16352 . 16353) (nil tag-name "v-btn" 16352 . 16353) (nil tag-type start 16352 . 16353) (nil block-side t 16351 . 16352) (nil tag-attr t 16351 . 16352) (nil tag-name "v-btn" 16351 . 16352) (nil tag-type start 16351 . 16352) (nil block-side t 16350 . 16351) (nil tag-attr t 16350 . 16351) (nil tag-name "v-btn" 16350 . 16351) (nil tag-type start 16350 . 16351) (nil block-side t 16349 . 16350) (nil tag-attr t 16349 . 16350) (nil tag-name "v-btn" 16349 . 16350) (nil tag-type start 16349 . 16350) (16349 . 16370)) ((#(":disabled=\"tree_edit\"" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start) 10 11 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 9 tag-name "v-btn" tag-type start) 11 12 (tag-name "v-btn" tag-type start) 12 13 (tag-name "v-btn" tag-type start) 13 14 (tag-name "v-btn" tag-type start) 14 15 (tag-name "v-btn" tag-type start) 15 16 (tag-name "v-btn" tag-type start) 16 17 (tag-name "v-btn" tag-type start) 17 18 (tag-name "v-btn" tag-type start) 18 19 (tag-name "v-btn" tag-type start) 19 20 (rear-nonsticky t tag-name "v-btn" tag-type start) 20 21 (rear-nonsticky nil tag-name "v-btn" tag-type start)) . 16349) (undo-tree-id494 . -11) (nil tag-name "v-btn" 16349 . 16350) (nil tag-name "v-btn" 16350 . 16351) (nil tag-name "v-btn" 16351 . 16352) (nil tag-name "v-btn" 16352 . 16353) (nil tag-name "v-btn" 16353 . 16354) (nil tag-name "v-btn" 16354 . 16355) (nil tag-name "v-btn" 16355 . 16356) (nil tag-name "v-btn" 16356 . 16357) (nil tag-name "v-btn" 16357 . 16358) (nil tag-name "v-btn" 16358 . 16359) (nil tag-name "v-btn" 16359 . 16360) (nil tag-name "v-btn" 16360 . 16361) (nil tag-name "v-btn" 16361 . 16362) (nil tag-name "v-btn" 16362 . 16363) (nil tag-name "v-btn" 16363 . 16364) (nil tag-name "v-btn" 16364 . 16365) (nil tag-name "v-btn" 16365 . 16366) (nil tag-name "v-btn" 16366 . 16367) (nil tag-name "v-btn" 16367 . 16368) (nil tag-name "v-btn" 16368 . 16369) (nil rear-nonsticky nil 16368 . 16369) (nil tag-name "v-btn" 16369 . 16370) (nil rear-nonsticky t 16369 . 16370)) (25819 31176 545781 721000) 0 nil])
([nil nil ((15982 . 15995)) nil (25819 31198 199431 283000) 0 nil])
nil
([nil nil ((16864 . 16873)) nil (25819 31198 199429 451000) 0 nil])
([nil nil ((16873 . 16877)) nil (25819 31198 199421 892000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5901 . 5902) (nil tag-attr t 5894 . 5902) (nil tag-name "v-row" 5894 . 5902) (nil tag-type start 5894 . 5902) (nil font-lock-face web-mode-html-attr-value-face 5894 . 5902) (5894 . 5902) (t 25819 31198 216566 522000)) nil (25819 31297 210393 822000) 0 nil])
([nil nil ((5902 . 5903)) nil (25819 31297 210386 67000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5894) (undo-tree-id533 . -1) (#("d" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5895) (undo-tree-id534 . -1) (#("i" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5896) (undo-tree-id535 . -1) (#("t" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5897) (undo-tree-id536 . -1) (#("T" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5898) (undo-tree-id537 . -1) (#("r" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5899) (undo-tree-id538 . -1) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5900) (undo-tree-id539 . -1) (#("e" 0 1 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5901) (undo-tree-id540 . -1) (#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5902) (undo-tree-id541 . -1) 5903 (t 25819 31297 228835 777000)) nil (25819 31389 277737 822000) 0 nil])
([nil nil ((5887 . 5888)) nil (25819 31389 277725 162000) 0 nil])
([nil nil ((5909 . 5912)) nil (25819 31389 277723 905000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5910) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("r" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5911) (undo-tree-id531 . -1) (undo-tree-id532 . -1) 5912) nil (25819 31389 277721 916000) 0 nil])
([nil nil ((5910 . 5913)) nil (25819 31389 277697 602000) 0 nil])
([nil nil ((#("i" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5911) (undo-tree-id527 . -1) (#("d" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5912) (undo-tree-id528 . -1) 5913) nil (25819 31389 277692 89000) 0 nil])
([nil nil ((5911 . 5918)) nil (25819 31389 277678 984000) 0 nil])
([nil nil ((#("_" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5914) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("t" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5915) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("r" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5916) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5917) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) 5918) nil (25819 31389 277671 309000) 0 nil])
([nil nil ((5914 . 5922)) nil (25819 31389 277631 576000) 0 nil])
([nil nil ((#(":" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5919) (undo-tree-id512 . -1) (#(" " 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5920) (undo-tree-id513 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5921) (undo-tree-id514 . -1) 5922) nil (25819 31389 277626 151000) 0 nil])
([nil nil ((5895 . 5907)) nil (25819 31389 277612 346000) 0 nil])
([nil nil ((5931 . 5933)) nil (25819 31389 277609 337000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5947 . 5948) (nil block-side t 5933 . 5948) (nil tag-attr t 5933 . 5948) (nil tag-name "v-row" 5933 . 5948) (nil tag-type start 5933 . 5948) (5933 . 5948)) nil (25819 31389 277605 30000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t block-side t tag-attr t tag-name "v-row" tag-type start)) . -5947) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 5948) nil (25819 31389 277590 279000) 0 nil])
([nil nil ((#("?" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5931) (undo-tree-id543 . -1) 5932 (t 25819 31389 301085 241000)) nil (25819 31400 43325 321000) 0 nil])
([nil nil ((5931 . 5932)) nil (25819 31400 43321 407000) 0 nil])
([nil nil ((#(":" 0 1 (block-side t tag-attr t tag-name "v-row" tag-type start)) . -5905) (undo-tree-id542 . -1) 5906) nil (25819 31400 43318 764000) 0 nil])
([nil nil ((5905 . 5906)) nil (25819 31400 43303 519000) 0 nil])
([nil nil ((5907 . 5908) (t 25819 31400 61114 349000)) nil (25819 31430 319299 862000) 0 nil])
([nil nil ((5931 . 5932)) nil (25819 31430 319298 542000) 0 nil])
([nil nil ((5935 . 5936)) nil (25819 31430 319296 956000) 0 nil])
([nil nil ((5950 . 5951)) nil (25819 31430 319289 759000) 0 nil])
([nil nil ((#("edit_tree" 0 9 (block-side t tag-attr t tag-name "v-row" tag-type start)) . 5895) (undo-tree-id544 . -9) (undo-tree-id545 . -9) (t 25819 31430 337196 187000)) nil (25819 31450 752882 121000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5903 . 5904) (nil rear-nonsticky t 5903 . 5904) (nil block-side t 5903 . 5904) (nil tag-attr t 5903 . 5904) (nil tag-name "v-row" 5903 . 5904) (nil tag-type start 5903 . 5904) (nil block-side t 5902 . 5903) (nil tag-attr t 5902 . 5903) (nil tag-name "v-row" 5902 . 5903) (nil tag-type start 5902 . 5903) (nil block-side t 5901 . 5902) (nil tag-attr t 5901 . 5902) (nil tag-name "v-row" 5901 . 5902) (nil tag-type start 5901 . 5902) (nil block-side t 5900 . 5901) (nil tag-attr t 5900 . 5901) (nil tag-name "v-row" 5900 . 5901) (nil tag-type start 5900 . 5901) (nil block-side t 5899 . 5900) (nil tag-attr t 5899 . 5900) (nil tag-name "v-row" 5899 . 5900) (nil tag-type start 5899 . 5900) (nil block-side t 5898 . 5899) (nil tag-attr t 5898 . 5899) (nil tag-name "v-row" 5898 . 5899) (nil tag-type start 5898 . 5899) (nil block-side t 5897 . 5898) (nil tag-attr t 5897 . 5898) (nil tag-name "v-row" 5897 . 5898) (nil tag-type start 5897 . 5898) (nil block-side t 5896 . 5897) (nil tag-attr t 5896 . 5897) (nil tag-name "v-row" 5896 . 5897) (nil tag-type start 5896 . 5897) (nil block-side t 5895 . 5896) (nil tag-attr t 5895 . 5896) (nil tag-name "v-row" 5895 . 5896) (nil tag-type start 5895 . 5896) (5895 . 5904)) nil (25819 31450 752861 762000) 0 nil])
([nil nil ((29802 . 29811) (t 25819 31450 777251 391000)) nil (25819 31521 587216 475000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -29802) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#(" " 0 1 (part-side javascript)) . -29803) (undo-tree-id577 . -1) (#(" " 0 1 (part-side javascript)) . -29804) (undo-tree-id578 . -1) (#(" " 0 1 (part-side javascript)) . -29805) (undo-tree-id579 . -1) (#(" " 0 1 (part-side javascript)) . -29806) (undo-tree-id580 . -1) (#(" " 0 1 (part-side javascript)) . -29807) (undo-tree-id581 . -1) (#(" " 0 1 (part-side javascript)) . -29808) (undo-tree-id582 . -1) (#(" " 0 1 (part-side javascript)) . -29809) (undo-tree-id583 . -1) (#(" " 0 1 (part-side javascript)) . -29810) (undo-tree-id584 . -1) 29811) nil (25819 31521 587213 463000) 0 nil])
([nil nil ((29802 . 29803)) nil (25819 31521 587200 939000) 0 nil])
([nil nil ((29803 . 29812)) nil (25819 31521 587199 980000) 0 nil])
([nil nil ((29812 . 29814)) nil (25819 31521 587198 899000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -29812) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (#("r" 0 1 (part-side javascript)) . -29813) (undo-tree-id573 . -1) (undo-tree-id574 . -1) 29814) nil (25819 31521 587197 256000) 0 nil])
([nil nil ((29812 . 29817)) nil (25819 31521 587191 749000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -29815) (undo-tree-id569 . -1) (#("t" 0 1 (part-side javascript)) . -29816) (undo-tree-id570 . -1) 29817) nil (25819 31521 587190 365000) 0 nil])
([nil nil ((29815 . 29817)) nil (25819 31521 587185 827000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -29812) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("d" 0 1 (part-side javascript)) . -29813) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("i" 0 1 (part-side javascript)) . -29814) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("t" 0 1 (part-side javascript)) . -29815) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("_" 0 1 (part-side javascript)) . -29816) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 29817) nil (25819 31521 587183 312000) 0 nil])
([nil nil ((29812 . 29816)) nil (25819 31521 587167 227000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -29813) (undo-tree-id552 . -1) (#("i" 0 1 (part-side javascript)) . -29814) (undo-tree-id553 . -1) (#("l" 0 1 (part-side javascript)) . -29815) (undo-tree-id554 . -1) 29816) nil (25819 31521 587165 791000) 0 nil])
([nil nil ((29813 . 29829)) nil (25819 31521 587161 76000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29828) (undo-tree-id551 . -1) 29829) nil (25819 31521 587160 4000) 0 nil])
([nil nil ((29831 . 29832) (29830 . 29832) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -29830) (29828 . 29831)) nil (25819 31521 587157 557000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29831) (undo-tree-id550 . -1) 29832) nil (25819 31521 587155 557000) 0 nil])
([nil nil ((31342 . 31353)) nil (25819 31521 587153 210000) 0 nil])
([nil nil ((31353 . 31358)) nil (25819 31521 587152 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31373 . 31374) (nil part-side javascript 31358 . 31374) (31358 . 31374)) nil (25819 31521 587151 309000) 0 nil])
([nil nil ((31374 . 31383)) nil (25819 31521 587149 896000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31382) (undo-tree-id549 . -1) 31383) nil (25819 31521 587148 723000) 0 nil])
([nil nil ((31382 . 31390)) nil (25819 31521 587146 379000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31389) (undo-tree-id548 . -1) 31390) nil (25819 31571 225863 336000) 0 nil])
([nil nil ((#("filters" 0 6 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (rear-nonsticky t tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13862) (undo-tree-id590 . -7) (undo-tree-id591 . -7)) nil (25819 31582 520282 986000) 0 nil] [nil nil ((#("filters" 0 1 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-treeview" tag-type start face web-mode-variable-name-face)) . 7471) (undo-tree-id546 . -7) (undo-tree-id547 . -7)) ((7471 . 7478)) (25819 31570 797560 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13877 . 13878) (nil rear-nonsticky t 13877 . 13878) (nil tag-attr t 13877 . 13878) (nil tag-name "v-draggable-treeview" 13877 . 13878) (nil tag-type start 13877 . 13878) (nil font-lock-face web-mode-html-attr-value-face 13877 . 13878) (nil tag-attr t 13862 . 13877) (nil tag-name "v-draggable-treeview" 13862 . 13877) (nil tag-type start 13862 . 13877) (nil font-lock-face web-mode-html-attr-value-face 13862 . 13877) (13862 . 13878)) nil (25819 31582 520266 884000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7486 . 7487) (nil rear-nonsticky t 7486 . 7487) (nil block-side t 7486 . 7487) (nil tag-attr t 7486 . 7487) (nil tag-name "v-treeview" 7486 . 7487) (nil tag-type start 7486 . 7487) (nil block-side t 7471 . 7486) (nil tag-attr t 7471 . 7486) (nil tag-name "v-treeview" 7471 . 7486) (nil tag-type start 7471 . 7486) (7471 . 7487)) ((#("filter_tree_edit" 0 15 (block-side t tag-attr t tag-name "v-treeview" tag-type start) 15 16 (rear-nonsticky t block-side t tag-attr t tag-name "v-treeview" tag-type start)) . 7471) (undo-tree-id585 . -16) (undo-tree-id586 . -16) (undo-tree-id587 . -16) (undo-tree-id588 . -16) (undo-tree-id589 . -16) (nil tag-name "v-treeview" 7471 . 7486) (nil tag-name "v-treeview" 7486 . 7487) (nil rear-nonsticky nil 7486 . 7487) (nil rear-nonsticky t 7486 . 7487) (t 25819 31521 605442 454000)) (25819 31521 587122 485000) 0 nil])
([nil nil ((#("                group=\"hoge\"" 0 16 (tag-name "v-draggable-treeview" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 27 (tag-attr t tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "v-draggable-treeview" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13880) (undo-tree-id595 . -28) (undo-tree-id596 . -28) (t 25819 31582 537606 541000)) nil (25819 31719 762340 501000) 0 nil])
nil
([nil nil ((#("
" 0 1 (tag-name "v-draggable-treeview" tag-type start)) . -13879) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) 13880) nil (25819 31719 762332 557000) 0 nil])
([nil nil ((13879 . 13896) (t 25819 31719 785975 390000)) nil (25820 43350 368204 851000) 0 nil])
([nil nil ((13903 . 13915) (13896 . 13904)) nil (25820 43350 368202 833000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-draggable-treeview" tag-attr t)) . -13914) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 13915) nil (25820 43350 368196 480000) 0 nil])
([nil nil ((31315 . 31326) (t 25820 43350 391257 663000)) nil (25820 43673 907890 372000) 0 nil])
([nil nil ((31326 . 31330)) nil (25820 43673 907888 576000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31329) (undo-tree-id41 . -1) 31330) nil (25820 43673 907886 585000) 0 nil])
([nil nil ((31329 . 31344)) nil (25820 43673 907882 274000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31343) (undo-tree-id40 . -1) 31344) nil (25820 43673 907879 599000) 0 nil])
([nil nil ((31343 . 31344)) nil (25820 43673 907870 501000) 0 nil])
([nil nil ((31329 . 31331) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31329) (31329 . 31330)) nil (25820 43673 907869 138000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 31330)) nil (25820 43673 907867 352000) 0 nil])
([nil nil ((31346 . 31348) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31346) (31345 . 31347)) nil (25820 43673 907866 90000) 0 nil])
([nil nil ((31349 . 31359) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 31348) (undo-tree-id38 . -10) (undo-tree-id39 . 12) (31358 . 31360) (31347 . 31359)) nil (25820 43673 907864 25000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31404) (undo-tree-id36 . -10) (undo-tree-id37 . -43) (31392 . 31404) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31349) (31361 . 31404) 31371) nil (25820 43673 907859 214000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31392) (undo-tree-id34 . -10) (undo-tree-id35 . -43) (31391 . 31392) (#("
" 0 1 (part-side javascript)) . 31348) (31349 . 31392) 31359) nil (25820 43673 907854 112000) 0 nil])
([nil nil ((31358 . 31360)) nil (25820 43673 907850 78000) 0 nil])
([nil nil ((31405 . 31416)) nil (25820 43673 907849 114000) 0 nil])
([nil nil ((31416 . 31421)) nil (25820 43673 907848 115000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31420) (undo-tree-id33 . -1) 31421) nil (25820 43673 907846 829000) 0 nil])
([nil nil ((31421 . 31423) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31421) (31420 . 31422)) nil (25820 43673 907844 265000) 0 nil])
([nil nil ((31424 . 31434) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 31423) (undo-tree-id31 . -10) (undo-tree-id32 . 12) (31433 . 31435) (31422 . 31434)) nil (25820 43673 907842 328000) 0 nil])
([nil nil ((#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 45 (part-side javascript)) . 31393) (undo-tree-id27 . -10) (undo-tree-id28 . -45) (31361 . 31393) (#("          if (this.tree_edit) {
" 0 10 (part-side javascript) 10 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-4-face) part-side javascript) 14 18 (face web-mode-constant-face part-side javascript) 18 28 (part-side javascript) 28 29 (face (rainbow-delimiters-depth-4-face) part-side javascript) 29 30 (part-side javascript) 30 31 (face (rainbow-delimiters-depth-4-face) part-side javascript) 31 32 (part-side javascript)) . 31316) (undo-tree-id29 . -27) (undo-tree-id30 . -22) (31348 . 31393) 31358) nil (25820 43673 907837 750000) 0 nil])
([nil nil ((31393 . 31405)) nil (25820 43673 907831 291000) 0 nil])
([nil nil ((#("          this.filter_tree_edit = this.filters
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 47 (part-side javascript)) . 31495) (undo-tree-id23 . -12) (undo-tree-id24 . -47) (undo-tree-id25 . -46) (undo-tree-id26 . -46) (31483 . 31495) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31436) (31448 . 31495) 31460) nil (25820 43673 907829 377000) 0 nil])
([nil nil ((#("          this.filter_tree_edit = this.filters
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 47 (part-side javascript)) . 31483) (undo-tree-id21 . -12) (undo-tree-id22 . -47) (31482 . 31483) (#("
" 0 1 (part-side javascript)) . 31435) (31436 . 31483) 31448) nil (25820 43673 907822 347000) 0 nil])
([nil nil ((#("          this.filter_tree_edit = this.filters
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 47 (part-side javascript)) . 31482) (undo-tree-id19 . -12) (undo-tree-id20 . -47) (31465 . 31482) (#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-4-face) part-side javascript) 16 17 (part-side javascript)) . 31418) (31435 . 31482) 31447) nil (25820 43673 907816 867000) 0 nil])
([nil nil ((#("          this.filter_tree_edit = this.filters
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 47 (part-side javascript)) . 31465) (undo-tree-id17 . -12) (undo-tree-id18 . -47) (31453 . 31465) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31406) (31418 . 31465) 31430) nil (25820 43673 907811 514000) 0 nil])
([nil nil ((#("          this.filter_tree_edit = this.filters
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 47 (part-side javascript)) . 31453) (undo-tree-id15 . -12) (undo-tree-id16 . -47) (31440 . 31453) (#("            
" 0 12 (face whitespace-trailing part-side javascript) 12 13 (part-side javascript)) . 31393) (31406 . 31453) 31418) nil (25820 43673 907806 88000) 0 nil])
([nil nil ((31403 . 31405) 31405) nil (25820 43673 907800 865000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 31454) (undo-tree-id13 . -1) (undo-tree-id14 . 1)) nil (25820 43673 907798 798000) 0 nil])
([nil nil ((#("            " 0 2 (part-side javascript) 2 12 (part-side javascript)) . -31452) (undo-tree-id12 . -2) 31454) nil (25820 43673 907793 472000) 0 nil])
([nil nil ((31471 . 31483)) nil (25820 43673 907784 477000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31496) (31495 . 31496) (31494 . 31496) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31494) (31483 . 31495)) nil (25820 43673 907781 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31515 . 31516) (nil part-side javascript 31499 . 31516) (nil part-side javascript 31495 . 31499) (nil face web-mode-constant-face 31495 . 31499) (31495 . 31516)) nil (25820 43673 907772 512000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -31326) 31360 (t 25820 43673 931688 708000)) nil (25820 43975 71656 44000) 0 nil])
([nil nil ((#("          if (this.tree_edit) {
" 0 10 (part-side javascript) 10 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-5-face) part-side javascript) 14 18 (face web-mode-constant-face part-side javascript) 18 28 (part-side javascript) 28 29 (face (rainbow-delimiters-depth-5-face) part-side javascript) 29 30 (part-side javascript) 30 31 (face (rainbow-delimiters-depth-5-face) part-side javascript) 31 32 (part-side javascript)) . 31391) (31348 . 31391) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31316) (undo-tree-id151 . -42) (31359 . 31391) 31358) nil (25820 43975 71654 79000) 0 nil])
([nil nil ((#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 49 (part-side javascript)) . 31440) (undo-tree-id149 . -33) (31397 . 31440) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31348) (undo-tree-id150 . -42) (31391 . 31440) 31390) nil (25820 43975 71650 652000) 0 nil])
([nil nil ((#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-3-face) part-side javascript) 11 12 (part-side javascript)) . 31452) (31409 . 31452) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31397) (undo-tree-id148 . -42) (31440 . 31452) 31439) nil (25820 43975 71645 665000) 0 nil])
([nil nil ((#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript) 16 17 (part-side javascript)) . 31469) (31426 . 31469) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 43 (part-side javascript)) . 31409) (undo-tree-id147 . -42) (31452 . 31469) 31451) nil (25820 43975 71642 414000) 0 nil])
([nil nil ((31436 . 31438) 31468) nil (25820 43975 71639 570000) 0 nil])
([nil nil ((31347 . 31360)) nil (25820 43975 71638 385000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31391 . 31392) (nil part-side javascript 31382 . 31392) (nil part-side javascript 31378 . 31382) (nil face web-mode-constant-face 31378 . 31382) (nil part-side javascript 31364 . 31378) (nil part-side javascript 31360 . 31364) (nil face web-mode-constant-face 31360 . 31364) (31360 . 31392)) nil (25820 43975 71636 961000) 0 nil])
([nil nil ((#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 49 (part-side javascript)) . 31442) (31397 . 31442) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31348) (undo-tree-id145 . -16) (undo-tree-id146 . -12) (31393 . 31442) 31364) nil (25820 43975 71634 3000) 0 nil])
([nil nil ((#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-3-face) part-side javascript) 11 12 (part-side javascript)) . 31454) (undo-tree-id143 . -12) (31409 . 31454) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31397) (undo-tree-id144 . -16) (31442 . 31454) 31413) nil (25820 43975 71628 927000) 0 nil])
([nil nil ((#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript) 16 17 (part-side javascript)) . 31471) (31426 . 31471) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31409) (undo-tree-id142 . -16) (31454 . 31471) 31425) nil (25820 43975 71624 590000) 0 nil])
([nil nil ((#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 45 (part-side javascript)) . 31516) (undo-tree-id140 . -44) (31471 . 31516) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31426) (undo-tree-id141 . -16) (31471 . 31516) 31442) nil (25820 43975 71621 215000) 0 nil])
([nil nil ((#("            console.log(this.filter_tree_edit)
" 0 20 (part-side javascript) 20 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-5-face) part-side javascript) 24 28 (face web-mode-constant-face part-side javascript) 28 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (face (rainbow-delimiters-depth-5-face) part-side javascript) 46 47 (part-side javascript)) . 31563) (undo-tree-id137 . -23) (undo-tree-id138 . -24) (31518 . 31563) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31471) (undo-tree-id139 . -16) (31516 . 31563) 31487) nil (25820 43975 71616 656000) 0 nil])
([nil nil ((#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-3-face) part-side javascript) 11 12 (part-side javascript)) . 31575) (31530 . 31575) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 45 (part-side javascript)) . 31518) (undo-tree-id136 . -16) (31563 . 31575) 31534) nil (25820 43975 71610 982000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -31540) 31546) nil (25820 43975 71607 962000) 0 nil])
([nil nil ((#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-3-face) part-side javascript) 11 12 (part-side javascript)) . 31409) (31360 . 31409) (#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 49 (part-side javascript)) . 31348) (undo-tree-id135 . -48) (31397 . 31409) 31396) nil (25820 43975 71606 209000) 0 nil])
([nil nil ((#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript) 16 17 (part-side javascript)) . 31426) (undo-tree-id133 . -17) (31377 . 31426) (#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 49 (part-side javascript)) . 31360) (undo-tree-id134 . -48) (31409 . 31426) 31408) nil (25820 43975 71602 771000) 0 nil])
([nil nil ((#("            console.log(this.filter_tree_edit)
" 0 20 (part-side javascript) 20 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-5-face) part-side javascript) 24 28 (face web-mode-constant-face part-side javascript) 28 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (face (rainbow-delimiters-depth-5-face) part-side javascript) 46 47 (part-side javascript)) . 31518) (undo-tree-id130 . -46) (undo-tree-id131 . -47) (undo-tree-id132 . -47) (31473 . 31518) (#("            this.tree_edit = !this.tree_edit
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 45 (part-side javascript)) . 31426) (31471 . 31518) 31517) nil (25820 43975 71598 228000) 0 nil])
([nil nil ((#("            console.log(this.filter_tree_edit)
" 0 20 (part-side javascript) 20 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-5-face) part-side javascript) 24 28 (face web-mode-constant-face part-side javascript) 28 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (face (rainbow-delimiters-depth-5-face) part-side javascript) 46 47 (part-side javascript)) . 31473) (undo-tree-id128 . -46) (undo-tree-id129 . -47) (31424 . 31473) (#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 49 (part-side javascript)) . 31377) (31426 . 31473) 31472) nil (25820 43975 71592 90000) 0 nil])
([nil nil ((#("            console.log(this.filter_tree_edit)
" 0 20 (part-side javascript) 20 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-5-face) part-side javascript) 24 28 (face web-mode-constant-face part-side javascript) 28 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (face (rainbow-delimiters-depth-5-face) part-side javascript) 46 47 (part-side javascript)) . 31424) (undo-tree-id125 . -46) (undo-tree-id126 . -47) (undo-tree-id127 . -47) (31407 . 31424) (#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-4-face) part-side javascript) 16 17 (part-side javascript)) . 31360) (31377 . 31424) 31423) nil (25820 43975 71587 351000) 0 nil])
([nil nil ((#("            console.log(this.filter_tree_edit)
" 0 20 (part-side javascript) 20 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-4-face) part-side javascript) 24 28 (face web-mode-constant-face part-side javascript) 28 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (face (rainbow-delimiters-depth-4-face) part-side javascript) 46 47 (part-side javascript)) . 31407) (undo-tree-id123 . -46) (undo-tree-id124 . -47) (31395 . 31407) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31348) (31360 . 31407) 31406) nil (25820 43975 71580 14000) 0 nil])
([nil nil ((#("
            this.tree_edit = !this.tree_edit" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 17 (face web-mode-constant-face part-side javascript) 17 31 (part-side javascript) 31 35 (face web-mode-constant-face part-side javascript) 35 45 (part-side javascript)) . 31472) (undo-tree-id120 . -1) (undo-tree-id121 . -45) (undo-tree-id122 . -45)) nil (25820 43975 71567 113000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31528) (undo-tree-id118 . -42) (undo-tree-id119 . -43) (31516 . 31528) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31473) (31485 . 31528) 31527) nil (25820 43975 71558 552000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31516) (undo-tree-id113 . -43) (undo-tree-id114 . -42) (undo-tree-id115 . -43) (undo-tree-id116 . -43) (31467 . 31516) (#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 48 (part-side javascript) 48 49 (part-side javascript)) . 31424) (undo-tree-id117 . -48) (31473 . 31516) 31515) nil (25820 43975 71545 604000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31467) (undo-tree-id110 . -42) (undo-tree-id111 . -43) (undo-tree-id112 . -43) (31450 . 31467) (#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-4-face) part-side javascript) 16 17 (part-side javascript)) . 31407) (31424 . 31467) 31466) nil (25820 43975 71534 117000) 0 nil])
([nil nil ((#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31450) (undo-tree-id106 . -42) (undo-tree-id107 . -43) (undo-tree-id108 . -43) (undo-tree-id109 . -43) (31438 . 31450) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 12 (part-side javascript)) . 31395) (31407 . 31450) 31449) nil (25820 43975 71485 719000) 0 nil])
([nil nil ((#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-3-face) part-side javascript) 11 12 (part-side javascript)) . 31450) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (31407 . 31450) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31395) (undo-tree-id105 . -42) (31438 . 31450) 31437) nil (25820 43975 71479 92000) 0 nil])
([nil nil ((#("          else {
" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript) 16 17 (part-side javascript)) . 31467) (undo-tree-id101 . -17) (31424 . 31467) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31407) (undo-tree-id102 . -42) (31450 . 31467) 31449) nil (25820 43975 71471 928000) 0 nil])
([nil nil ((#("            this.filter_tree_edit = this.filters
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 36 (part-side javascript) 36 40 (face web-mode-constant-face part-side javascript) 40 48 (part-side javascript) 48 49 (part-side javascript)) . 31516) (undo-tree-id98 . -49) (undo-tree-id99 . -49) (31473 . 31516) (#("          this.tree_edit = !this.tree_edit
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 28 (part-side javascript) 28 32 (face web-mode-constant-face part-side javascript) 32 41 (part-side javascript) 41 42 (part-side javascript rear-nonsticky t) 42 43 (part-side javascript)) . 31424) (undo-tree-id100 . -42) (31467 . 31516) 31466) nil (25820 43975 71467 226000) 0 nil])
([nil nil ((31483 . 31485) 31515) nil (25820 43975 71461 511000) 0 nil])
([nil nil ((31394 . 31407)) nil (25820 43975 71460 210000) 0 nil])
([nil nil ((31407 . 31428)) nil (25820 43975 71459 38000) 0 nil])
([nil nil ((31428 . 31431)) nil (25820 43975 71458 54000) 0 nil])
([nil nil ((31431 . 31438)) nil (25820 43975 71457 134000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -31432) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("l" 0 1 (part-side javascript)) . -31433) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("g" 0 1 (part-side javascript)) . -31434) (undo-tree-id94 . -1) (#("n" 0 1 (part-side javascript)) . -31435) (undo-tree-id95 . -1) (#("t" 0 1 (part-side javascript)) . -31436) (undo-tree-id96 . -1) (#("h" 0 1 (part-side javascript)) . -31437) (undo-tree-id97 . -1) 31438) nil (25820 43975 71454 716000) 0 nil])
([nil nil ((31432 . 31443)) nil (25820 43975 71443 650000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -31441) (undo-tree-id88 . -1) (#(" " 0 1 (part-side javascript)) . -31442) (undo-tree-id89 . -1) 31443) nil (25820 43975 71442 272000) 0 nil])
([nil nil ((31441 . 31443)) nil (25820 43975 71438 505000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31442) (undo-tree-id87 . -1) 31443) nil (25820 43975 71437 270000) 0 nil])
([nil nil ((31410 . 31412) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31410) (31410 . 31411)) nil (25820 43975 71434 674000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 31411)) nil (25820 43975 71433 152000) 0 nil])
([nil nil ((31293 . 31300)) nil (25820 43975 71432 35000) 0 nil])
([nil nil ((31300 . 31315)) nil (25820 43975 71430 686000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31312) (undo-tree-id84 . -1) (#("_" 0 1 (part-side javascript)) . -31313) (undo-tree-id85 . -1) (#("t" 0 1 (part-side javascript)) . -31314) (undo-tree-id86 . -1) 31315) nil (25820 43975 71428 925000) 0 nil])
([nil nil ((31312 . 31318)) nil (25820 43975 71423 899000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31317) (undo-tree-id83 . -1) 31318) nil (25820 43975 71422 679000) 0 nil])
([nil nil ((31319 . 31321) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31319) (31319 . 31320) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31319) (31318 . 31319) (31317 . 31319) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31317) (31317 . 31318)) nil (25820 43975 71419 608000) 0 nil])
([nil nil ((31319 . 31320)) nil (25820 43975 71416 975000) 0 nil])
([nil nil ((31324 . 31330) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 31323) (31323 . 31331) (#("      " 0 6 (part-side javascript)) . 31323) (undo-tree-id80 . -6) (31323 . 31330) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 31322) (undo-tree-id81 . 8) (31322 . 31330) (#("      " 0 6 (part-side javascript)) . 31322) (undo-tree-id82 . -6) (31321 . 31329)) nil (25820 43975 71414 972000) 0 nil])
([nil nil ((31322 . 31330)) nil (25820 43975 71407 289000) 0 nil])
([nil nil ((31318 . 31330)) nil (25820 43975 71406 256000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31329) (undo-tree-id79 . -1) 31330) nil (25820 43975 71405 65000) 0 nil])
([nil nil ((31350 . 31351)) nil (25820 43975 71402 680000) 0 nil])
([nil nil ((#("this.filter_tree_edit.length > 3" 0 4 (face web-mode-constant-face part-side javascript) 4 28 (part-side javascript) 28 30 (part-side javascript) 30 32 (part-side javascript)) . 31469) (undo-tree-id77 . -32) (undo-tree-id78 . -32)) nil (25820 43975 71401 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31485 . 31486) (nil part-side javascript 31469 . 31486) (31469 . 31486)) nil (25820 43975 71396 21000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 31488) (31487 . 31488) (31486 . 31488) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31486) (31486 . 31487)) nil (25820 43975 71394 210000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-function-call-face part-side javascript)) . -31465) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("f" 0 1 (face web-mode-function-call-face part-side javascript)) . -31466) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (part-side javascript)) . -31467) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31468) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 31469) nil (25820 43975 71390 472000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31503 . 31504) (nil rear-nonsticky t 31503 . 31504) (nil part-side javascript 31503 . 31504) (nil part-side javascript 31487 . 31503) (nil part-side javascript 31483 . 31487) (nil face web-mode-constant-face 31483 . 31487) (31483 . 31504)) nil (25820 43975 71374 933000) 0 nil])
([nil nil ((#("check" 0 5 (face web-mode-function-name-face part-side javascript)) . 31300) (undo-tree-id63 . -5) (undo-tree-id64 . -5)) nil (25820 43975 71372 222000) 0 nil])
([nil nil ((31300 . 31304)) nil (25820 43975 71369 84000) 0 nil])
([nil nil ((31451 . 31464)) nil (25820 43975 71367 987000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31469) (31468 . 31469) (31467 . 31469) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31467) (31464 . 31468)) nil (25820 43975 71366 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31488 . 31489) (nil part-side javascript 31472 . 31489) (nil part-side javascript 31468 . 31472) (nil face web-mode-constant-face 31468 . 31472) (31468 . 31489)) nil (25820 43975 71364 471000) 0 nil])
([nil nil ((31489 . 31506)) nil (25820 43975 71362 371000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31505) (undo-tree-id62 . -1) 31506) nil (25820 43975 71361 171000) 0 nil])
([nil nil ((31507 . 31509) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31507) (31506 . 31508)) nil (25820 43975 71358 513000) 0 nil])
([nil nil ((31508 . 31521)) nil (25820 43975 71356 920000) 0 nil])
([nil nil ((31510 . 31522) (#("              " 0 14 (face whitespace-trailing part-side javascript)) . 31509) (undo-tree-id60 . -12) (undo-tree-id61 . 14) (31521 . 31523) (31521 . 31522)) nil (25820 43975 71355 460000) 0 nil])
([nil nil ((#("
            check_filter_tree(this.filter_tree_edit)" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 29 (face web-mode-function-call-face part-side javascript) 29 30 (face web-mode-function-call-face part-side javascript rear-nonsticky t) 30 31 (face (rainbow-delimiters-depth-5-face) part-side javascript) 31 35 (face web-mode-constant-face part-side javascript) 35 51 (part-side javascript) 51 52 (part-side javascript rear-nonsticky t) 52 53 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 31523) (undo-tree-id54 . -1) (undo-tree-id55 . -53) (undo-tree-id56 . -13) (undo-tree-id57 . -13) (undo-tree-id58 . -31) (undo-tree-id59 . -53)) nil (25820 43975 71350 888000) 0 nil])
([nil nil ((31509 . 31523)) nil (25820 43975 71343 378000) 0 nil])
([nil nil ((31523 . 31525)) nil (25820 43975 71342 244000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -31523) (undo-tree-id52 . -1) (#("x" 0 1 (part-side javascript)) . -31524) (undo-tree-id53 . -1) 31525) nil (25820 43975 71340 888000) 0 nil])
([nil nil ((31523 . 31528)) nil (25820 43975 71337 21000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -31526) (undo-tree-id50 . -1) (#("l" 0 1 (part-side javascript)) . -31527) (undo-tree-id51 . -1) 31528) nil (25820 43975 71335 511000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31536) (31535 . 31536) (31534 . 31536) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31534) (31526 . 31535)) nil (25820 43975 71331 201000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 31537) (31536 . 31537) (nil part-token string 31536 . 31537) (nil font-lock-face web-mode-javascript-string-face 31536 . 31537) (nil part-side javascript 31536 . 31537) (31535 . 31537) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -31535) (31535 . 31536)) nil (25820 43975 71328 641000) 0 nil])
([nil nil ((31536 . 31550)) nil (25820 43975 71325 802000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -31549) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 31550) nil (25820 43975 71323 134000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -31332) 31549) nil (25820 43975 71301 66000) 0 nil])
([nil nil ((31393 . 31397) (t 25820 43975 92437 861000)) nil (25820 44020 719614 621000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31433 . 31434) (nil part-side javascript 31426 . 31434) (nil part-side javascript 31422 . 31426) (nil face web-mode-constant-face 31422 . 31426) (nil part-side javascript 31418 . 31422) (nil rear-nonsticky t 31417 . 31418) (nil part-side javascript 31417 . 31418) (nil part-side javascript 31401 . 31417) (nil part-side javascript 31397 . 31401) (nil face web-mode-constant-face 31397 . 31401) (31397 . 31434)) nil (25820 44020 719612 564000) 0 nil])
([nil nil ((#("            }" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 31585) (undo-tree-id173 . -13) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -13) (undo-tree-id178 . -13)) nil (25820 44020 719607 433000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -31584) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 31585) nil (25820 44020 719434 663000) 0 nil])
([nil nil ((#("
            if (this.filter_tree_edit != this.filters) {" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 15 (face web-mode-keyword-face part-side javascript) 15 16 (part-side javascript) 16 17 (face (rainbow-delimiters-depth-5-face) part-side javascript) 17 21 (face web-mode-constant-face part-side javascript) 21 37 (part-side javascript) 37 38 (part-side javascript rear-nonsticky t) 38 42 (part-side javascript) 42 46 (face web-mode-constant-face part-side javascript) 46 54 (part-side javascript) 54 55 (face (rainbow-delimiters-depth-5-face) part-side javascript) 55 56 (part-side javascript) 56 57 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 31484) (undo-tree-id152 . -1) (undo-tree-id153 . -57) (undo-tree-id154 . -17) (undo-tree-id155 . -54) (undo-tree-id156 . -57) (undo-tree-id157 . -57) (undo-tree-id158 . -57) (undo-tree-id159 . -57) (undo-tree-id160 . -57) (undo-tree-id161 . -57) (undo-tree-id162 . -57) (undo-tree-id163 . -57) (undo-tree-id164 . -57) (undo-tree-id165 . -57)) nil (25820 44020 719423 845000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -31497) 31527) nil (25820 44020 719392 132000) 0 nil])
([nil nil ((31332 . 31340) (t 25820 44020 743948 867000)) nil (25820 44843 7772 891000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31345) (31344 . 31345) (31343 . 31345) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31343) (31340 . 31344)) nil (25820 44843 7771 311000) 0 nil])
([nil nil ((31344 . 31348)) nil (25820 44843 7769 668000) 0 nil])
([nil nil ((#("h" 0 1 (part-side javascript)) . -31345) (undo-tree-id210 . -1) (#("i" 0 1 (part-side javascript)) . -31346) (undo-tree-id211 . -1) (#("s" 0 1 (face web-mode-constant-face part-side javascript)) . -31347) (undo-tree-id212 . -1) 31348) nil (25820 44843 7768 117000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31344) (undo-tree-id209 . -1) 31345) nil (25820 44843 7763 303000) 0 nil])
([nil nil ((31344 . 31347)) nil (25820 44843 7761 200000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -31345) (undo-tree-id207 . -1) (#("i" 0 1 (part-side javascript)) . -31346) (undo-tree-id208 . -1) 31347) nil (25820 44843 7759 760000) 0 nil])
([nil nil ((31345 . 31346)) nil (25820 44843 7754 775000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -31345) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 31346) nil (25820 44843 7753 628000) 0 nil])
([nil nil ((31345 . 31366)) nil (25820 44843 7750 473000) 0 nil])
([nil nil ((31366 . 31367)) nil (25820 44843 7749 660000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31366) (undo-tree-id204 . -1) 31367) nil (25820 44843 7748 632000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -31363) (undo-tree-id203 . -1) 31364) nil (25820 44843 7746 382000) 0 nil])
([nil nil ((31363 . 31364)) nil (25820 44843 7744 345000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -31363) (undo-tree-id202 . -1) 31364) nil (25820 44843 7743 334000) 0 nil])
([nil nil ((31363 . 31366)) nil (25820 44843 7741 206000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31365) (undo-tree-id201 . -1) 31366) nil (25820 44843 7740 200000) 0 nil])
([nil nil ((31369 . 31371) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31369) (31368 . 31370)) nil (25820 44843 7737 741000) 0 nil])
([nil nil ((31372 . 31380) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 31371) (undo-tree-id199 . -8) (undo-tree-id200 . 10) (31379 . 31381) (31370 . 31380)) nil (25820 44843 7736 98000) 0 nil])
([nil nil ((31371 . 31381)) nil (25820 44843 7732 0) 0 nil])
([nil nil ((31381 . 31386)) nil (25820 44843 7730 866000) 0 nil])
([nil nil ((#("d" 0 1 (part-side javascript)) . -31381) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("e" 0 1 (part-side javascript)) . -31382) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("b" 0 1 (part-side javascript)) . -31383) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("u" 0 1 (part-side javascript)) . -31384) (undo-tree-id197 . -1) (#("g" 0 1 (part-side javascript)) . -31385) (undo-tree-id198 . -1) 31386) nil (25820 44843 7728 87000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31394) (31393 . 31394) (31392 . 31394) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31392) (31381 . 31393)) nil (25820 44843 7713 25000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 31395) (31394 . 31395) (31393 . 31395) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -31393) (31393 . 31394)) nil (25820 44843 7710 407000) 0 nil])
([nil nil ((31394 . 31396)) nil (25820 44843 7708 192000) 0 nil])
([nil nil ((31396 . 31412)) nil (25820 44843 7707 14000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -31411) (undo-tree-id187 . -1) 31412) nil (25820 44843 7705 577000) 0 nil])
([nil nil ((31423 . 31432)) nil (25820 44843 7702 639000) 0 nil])
([nil nil ((31432 . 31441)) nil (25820 44843 7701 302000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31440) (undo-tree-id186 . -1) 31441) nil (25820 44843 7699 656000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -31433) (undo-tree-id179 . -1) (#("r" 0 1 (face web-mode-keyword-face part-side javascript)) . -31434) (undo-tree-id180 . -1) (#(" " 0 1 (part-side javascript)) . -31435) (undo-tree-id181 . -1) (#("i" 0 1 (part-side javascript)) . -31436) (undo-tree-id182 . -1) (#(" " 0 1 (part-side javascript)) . -31437) (undo-tree-id183 . -1) (#("i" 0 1 (part-side javascript)) . -31438) (undo-tree-id184 . -1) (#("n" 0 1 (face web-mode-keyword-face part-side javascript)) . -31439) (undo-tree-id185 . -1) 31440) nil (25820 44843 10187 36000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -31432) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 31433) nil (25820 45023 794774 497000) 0 nil] [nil nil ((nil rear-nonsticky nil 31455 . 31456) (nil part-side javascript 31455 . 31456) (nil face (rainbow-delimiters-depth-5-face) 31455 . 31456) (nil part-side javascript 31451 . 31455) (nil part-side javascript 31444 . 31451) (nil face web-mode-function-name-face 31444 . 31451) (nil part-side javascript 31443 . 31444) (nil face (rainbow-delimiters-depth-4-face) 31443 . 31444) (nil part-side javascript 31436 . 31443) (nil face web-mode-function-name-face 31436 . 31443) (nil part-side javascript 31433 . 31436) (31433 . 31456)) ((#("ff.forEach(element => {" 0 3 (part-side javascript) 3 10 (face web-mode-function-call-face part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 18 (face web-mode-function-name-face part-side javascript) 18 22 (part-side javascript) 22 23 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky nil)) . 31433) (undo-tree-id213 . -23) (nil face web-mode-function-call-face 31436 . 31443) (nil face (rainbow-delimiters-depth-4-face) 31443 . 31444) (nil face (rainbow-delimiters-depth-5-face) 31455 . 31456) (nil rear-nonsticky t 31455 . 31456)) (25820 44843 7667 350000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31454 . 31455) (nil part-side javascript 31454 . 31455) (nil face (rainbow-delimiters-depth-5-face) 31454 . 31455) (nil part-side javascript 31450 . 31454) (nil part-side javascript 31443 . 31450) (nil face web-mode-function-name-face 31443 . 31450) (nil part-side javascript 31442 . 31443) (nil face (rainbow-delimiters-depth-4-face) 31442 . 31443) (nil part-side javascript 31435 . 31442) (nil face web-mode-function-name-face 31435 . 31442) (nil part-side javascript 31432 . 31435) (31432 . 31455)) nil (25820 45023 794770 304000) 0 nil])
nil
([nil nil ((31457 . 31467) (#("          " 0 10 (part-side javascript)) . 31456) (undo-tree-id239 . -10) (31455 . 31467)) nil (25820 45023 794766 273000) 0 nil])
([nil nil ((31466 . 31467) (#("  " 0 2 (part-side javascript)) . -31465) (31467 . 31468)) nil (25820 45023 794763 524000) 0 nil])
([nil nil ((31456 . 31466)) nil (25820 45023 794762 12000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -31432) (undo-tree-id237 . -1) (#("f" 0 1 (part-side javascript)) . -31433) (undo-tree-id238 . -1) 31434) nil (25820 45023 794760 505000) 0 nil])
([nil nil ((31432 . 31443)) nil (25820 45023 794757 158000) 0 nil])
([nil nil ((31475 . 31485)) nil (25820 45023 794756 227000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31482) (undo-tree-id234 . -1) (#("n" 0 1 (part-side javascript)) . -31483) (undo-tree-id235 . -1) (#(" " 0 1 (part-side javascript)) . -31484) (undo-tree-id236 . -1) 31485) nil (25820 45023 794754 764000) 0 nil])
([nil nil ((31482 . 31486)) nil (25820 45023 794750 101000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31485) (undo-tree-id233 . -1) 31486) nil (25820 45023 794748 929000) 0 nil])
([nil nil ((31485 . 31492)) nil (25820 45023 794746 639000) 0 nil])
([nil nil ((31492 . 31511)) nil (25820 45023 794745 736000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31508) (undo-tree-id230 . -1) (#("2" 0 1 (part-side javascript)) . -31509) (undo-tree-id231 . -1) (#(" " 0 1 (part-side javascript)) . -31510) (undo-tree-id232 . -1) 31511) nil (25820 45023 794743 795000) 0 nil])
([nil nil ((31508 . 31509)) nil (25820 45023 794738 817000) 0 nil])
([nil nil ((#("<" 0 1 (part-side javascript)) . -31507) (undo-tree-id228 . -1) (#(" " 0 1 (part-side javascript)) . -31508) (undo-tree-id229 . -1) 31509) nil (25820 45023 794737 504000) 0 nil])
([nil nil ((31507 . 31508)) nil (25820 45023 794734 73000) 0 nil])
([nil nil ((#("<" 0 1 (part-side javascript)) . -31507) (undo-tree-id227 . -1) 31508) nil (25820 45023 794732 932000) 0 nil])
([nil nil ((31507 . 31512)) nil (25820 45023 794730 701000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31511) (undo-tree-id226 . -1) 31512) nil (25820 45023 794729 546000) 0 nil])
([nil nil ((31511 . 31512)) nil (25820 45023 794727 277000) 0 nil])
([nil nil ((31478 . 31480) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31478) (31478 . 31479)) nil (25820 45023 794726 149000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 31479)) nil (25820 45023 794724 573000) 0 nil])
([nil nil ((31514 . 31516) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31514) (31513 . 31515)) nil (25820 45023 794723 458000) 0 nil])
([nil nil ((31517 . 31527) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 31516) (undo-tree-id224 . -10) (undo-tree-id225 . 12) (31526 . 31528) (31515 . 31527)) nil (25820 45023 794721 443000) 0 nil])
([nil nil ((31516 . 31528)) nil (25820 45023 794711 818000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31541) (31540 . 31541) (31539 . 31541) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31539) (31528 . 31540)) nil (25820 45023 794709 777000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 31542) (31541 . 31542) (31540 . 31542) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -31540) (31540 . 31541)) nil (25820 45023 794704 634000) 0 nil])
([nil nil ((31541 . 31542)) nil (25820 45023 794697 903000) 0 nil])
([nil nil ((#("O" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -31541) (undo-tree-id223 . -1) 31542) nil (25820 45023 794694 928000) 0 nil])
([nil nil ((31541 . 31562)) nil (25820 45023 794688 208000) 0 nil])
([nil nil ((31562 . 31566)) nil (25820 45023 794686 430000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -31565) (undo-tree-id222 . -1) 31566) nil (25820 45023 794681 660000) 0 nil])
([nil nil ((31565 . 31579)) nil (25820 45023 794677 277000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -31578) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 31579) nil (25820 45023 794672 161000) 0 nil])
([nil nil ((31808 . 31819) (t 25820 45023 821031 947000)) nil (25820 45303 28700 293000) 0 nil])
([nil nil ((31819 . 31824)) nil (25820 45303 28699 76000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -31821) (undo-tree-id244 . -1) (#("f" 0 1 (part-side javascript)) . -31822) (undo-tree-id245 . -1) (#(" " 0 1 (part-side javascript)) . -31823) (undo-tree-id246 . -1) 31824) nil (25820 45303 28696 980000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31828) (31827 . 31828) (31826 . 31828) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31826) (31821 . 31827)) nil (25820 45303 28690 154000) 0 nil])
([nil nil ((31826 . 31827)) nil (25820 45303 28687 958000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31841 . 31842) (nil part-side javascript 31832 . 31842) (nil part-side javascript 31828 . 31832) (nil face web-mode-constant-face 31828 . 31832) (31828 . 31842)) nil (25820 45303 28686 846000) 0 nil])
([nil nil ((31844 . 31846) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31844) (31843 . 31845)) nil (25820 45303 28684 821000) 0 nil])
([nil nil ((31847 . 31857) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 31846) (undo-tree-id242 . -10) (undo-tree-id243 . 12) (31856 . 31858) (31845 . 31857)) nil (25820 45303 28682 525000) 0 nil])
([nil nil ((31846 . 31858)) nil (25820 45303 28669 890000) 0 nil])
([nil nil ((31858 . 31879)) nil (25820 45303 28668 213000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31881) (31880 . 31881) (31879 . 31881) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -31879) (31879 . 31880)) nil (25820 45303 28665 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31900 . 31901) (nil rear-nonsticky t 31900 . 31901) (nil part-side javascript 31900 . 31901) (nil part-side javascript 31884 . 31900) (nil part-side javascript 31880 . 31884) (nil face web-mode-constant-face 31880 . 31884) (31880 . 31901)) nil (25820 45303 28655 526000) 0 nil])
([nil nil ((31796 . 31809) (t 25820 45303 53968 18000)) nil (25820 45337 466852 901000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31852 . 31853) (nil part-side javascript 31852 . 31853) (nil face (rainbow-delimiters-depth-5-face) 31852 . 31853) (nil rear-nonsticky t 31851 . 31852) (nil part-side javascript 31851 . 31852) (nil part-side javascript 31835 . 31851) (nil part-side javascript 31831 . 31835) (nil face web-mode-constant-face 31831 . 31835) (nil part-side javascript 31830 . 31831) (nil face (rainbow-delimiters-depth-5-face) 31830 . 31831) (nil part-side javascript 31814 . 31830) (nil face web-mode-function-call-face 31814 . 31830) (nil part-side javascript 31813 . 31814) (nil part-side javascript 31809 . 31813) (nil face web-mode-constant-face 31809 . 31813) (31809 . 31853)) nil (25820 45337 466850 701000) 0 nil])
([nil nil ((#("          else if (this.tree_edit) {
            this.save_filter_tree(this.filter_tree_edit)
          }" 0 10 (part-side javascript) 10 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 17 (face web-mode-keyword-face part-side javascript) 17 18 (part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 23 (face web-mode-constant-face part-side javascript) 23 32 (part-side javascript) 32 33 (part-side javascript rear-nonsticky t) 33 34 (face (rainbow-delimiters-depth-4-face) part-side javascript) 34 35 (part-side javascript) 35 36 (face (rainbow-delimiters-depth-4-face) part-side javascript) 36 37 (part-side javascript) 37 49 (part-side javascript) 49 53 (face web-mode-constant-face part-side javascript) 53 54 (part-side javascript) 54 70 (face web-mode-function-call-face part-side javascript) 70 71 (face (rainbow-delimiters-depth-5-face) part-side javascript) 71 75 (face web-mode-constant-face part-side javascript) 75 91 (part-side javascript) 91 92 (part-side javascript rear-nonsticky t) 92 93 (face (rainbow-delimiters-depth-5-face) part-side javascript) 93 104 (part-side javascript) 104 105 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 31866) (undo-tree-id256 . -69) (undo-tree-id257 . -37) (undo-tree-id258 . -105) (undo-tree-id259 . -59) (undo-tree-id260 . -19) (undo-tree-id261 . -71) (undo-tree-id262 . -15) (undo-tree-id263 . -93) (undo-tree-id264 . -105)) nil (25820 45337 466845 228000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -31865) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 31866) nil (25820 45337 466829 856000) 0 nil])
([nil nil ((31293 . 31300) (t 25820 45337 489593 363000)) nil (25820 46011 34027 1000) 0 nil])
([nil nil ((31300 . 31312)) nil (25820 46011 34025 887000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31311) (undo-tree-id317 . -1) 31312) nil (25820 46011 34024 865000) 0 nil])
([nil nil ((31311 . 31316)) nil (25820 46011 34022 629000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -31315) (undo-tree-id316 . -1) 31316) nil (25820 46011 34021 426000) 0 nil])
([nil nil ((31315 . 31319)) nil (25820 46011 34019 295000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31318) (undo-tree-id315 . -1) 31319) nil (25820 46011 34018 185000) 0 nil])
([nil nil ((31319 . 31324) (31318 . 31320) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31318) (31318 . 31319)) nil (25820 46011 34015 733000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31319) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("r" 0 1 (part-side javascript)) . -31320) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("e" 0 1 (part-side javascript)) . -31321) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("e" 0 1 (part-side javascript)) . -31322) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#(" " 0 1 (part-side javascript)) . -31323) (undo-tree-id314 . -1) 31324) nil (25820 46011 34012 578000) 0 nil])
([nil nil ((31319 . 31330)) nil (25820 46011 33997 852000) 0 nil])
([nil nil ((31332 . 31334) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31332) (31331 . 31333)) nil (25820 46011 33996 656000) 0 nil])
([nil nil ((31335 . 31341) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 31334) (undo-tree-id301 . 8) (31334 . 31342) (#("      " 0 6 (part-side javascript)) . 31334) (undo-tree-id302 . -6) (31333 . 31341)) nil (25820 46011 33994 591000) 0 nil])
([nil nil ((31342 . 31343)) nil (25820 46011 33990 513000) 0 nil])
([nil nil ((31334 . 31342)) nil (25820 46011 33989 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31373 . 31374) (nil rear-nonsticky t 31373 . 31374) (nil part-side javascript 31373 . 31374) (nil face (rainbow-delimiters-depth-5-face) 31373 . 31374) (nil part-side javascript 31369 . 31373) (nil part-side javascript 31362 . 31369) (nil face web-mode-function-name-face 31362 . 31369) (nil part-side javascript 31361 . 31362) (nil face (rainbow-delimiters-depth-4-face) 31361 . 31362) (nil part-side javascript 31354 . 31361) (nil face web-mode-function-name-face 31354 . 31361) (nil part-side javascript 31353 . 31354) (nil part-side javascript 31342 . 31353) (31342 . 31374)) nil (25820 46011 33987 824000) 0 nil])
([nil nil ((31374 . 31385)) nil (25820 46011 33983 941000) 0 nil])
([nil nil ((31384 . 31385) (#("  " 0 2 (part-side javascript)) . -31383) (31385 . 31386)) nil (25820 46011 33982 646000) 0 nil])
([nil nil ((31374 . 31385)) nil (25820 46011 33981 297000) 0 nil])
([nil nil ((31390 . 31391) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31390) (31389 . 31390) (31388 . 31390) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31388) (31385 . 31389)) nil (25820 46011 33979 819000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31390) (undo-tree-id300 . -1) 31391) nil (25820 46011 33977 744000) 0 nil])
([nil nil ((31389 . 31391)) nil (25820 46011 33975 581000) 0 nil])
([nil nil ((31390 . 31398)) nil (25820 46011 33974 714000) 0 nil])
([nil nil ((31399 . 31411)) nil (25820 46011 33973 804000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31410) (undo-tree-id299 . -1) 31411) nil (25820 46011 33972 551000) 0 nil])
([nil nil ((31412 . 31414) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -31412) (31411 . 31413)) nil (25820 46011 33970 118000) 0 nil])
([nil nil ((31415 . 31425) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 31414) (undo-tree-id297 . -10) (undo-tree-id298 . 12) (31424 . 31426) (31413 . 31425)) nil (25820 46011 33968 344000) 0 nil])
([nil nil ((31414 . 31426)) nil (25820 46011 33964 523000) 0 nil])
([nil nil ((31333 . 31342)) nil (25820 46011 33963 531000) 0 nil])
([nil nil ((31342 . 31353)) nil (25820 46011 33962 615000) 0 nil])
([nil nil ((#("T" 0 1 (part-side javascript)) . -31348) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("r" 0 1 (part-side javascript)) . -31349) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("u" 0 1 (part-side javascript)) . -31350) (undo-tree-id294 . -1) (#("e" 0 1 (part-side javascript)) . -31351) (undo-tree-id295 . -1) (#(" " 0 1 (part-side javascript)) . -31352) (undo-tree-id296 . -1) 31353) nil (25820 46011 33960 521000) 0 nil])
([nil nil ((31348 . 31353)) nil (25820 46011 33950 760000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31352) (undo-tree-id289 . -1) 31353) nil (25820 46011 33949 452000) 0 nil])
([nil nil ((31445 . 31451)) nil (25820 46011 33947 17000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31348) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("r" 0 1 (part-side javascript)) . -31349) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("u" 0 1 (part-side javascript)) . -31350) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("e" 0 1 (face web-mode-constant-face part-side javascript)) . -31351) (undo-tree-id288 . -1) 31352) nil (25820 46011 33944 418000) 0 nil])
([nil nil ((31348 . 31350) (#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31348) (31348 . 31349)) nil (25820 46011 33774 731000) 0 nil])
([nil nil ((31448 . 31457)) nil (25820 46011 33773 445000) 0 nil])
([nil nil ((31457 . 31465)) nil (25820 46011 33772 528000) 0 nil])
([nil nil ((31455 . 31473) (#("check_empt" 0 10 (part-side javascript)) . -31455) (undo-tree-id279 . -10) (undo-tree-id280 . -10) (undo-tree-id281 . -3) 31465) nil (25820 46011 33771 191000) 0 nil])
([nil nil ((31475 . 31476) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31475) (31474 . 31475) (31473 . 31475) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31473) (31473 . 31474)) nil (25820 46011 33765 941000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -31475) (undo-tree-id278 . -1) 31476) nil (25820 46011 33763 796000) 0 nil])
([nil nil ((31474 . 31482)) nil (25820 46011 33761 654000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31481) (undo-tree-id277 . -1) 31482) nil (25820 46011 33760 482000) 0 nil])
([nil nil ((31481 . 31491)) nil (25820 46011 33758 191000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31490) (undo-tree-id276 . -1) 31491) nil (25820 46011 33757 52000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31452) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("+" 0 1 (part-side javascript)) . -31453) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 31454) nil (25820 46011 33753 950000) 0 nil])
([nil nil ((31459 . 31461) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31459) (31452 . 31460)) nil (25820 46011 33747 802000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 31460)) nil (25820 46011 33746 314000) 0 nil])
([nil nil ((#("c" 0 1 (face web-mode-function-call-face part-side javascript)) . 31461)) nil (25820 46011 33745 301000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 31460) (undo-tree-id271 . -1)) nil (25820 46011 33744 222000) 0 nil])
([nil nil ((31460 . 31461)) nil (25820 46011 33742 91000) 0 nil])
([nil nil ((31496 . 31497)) nil (25820 46013 168170 981000) 0 nil])
([nil nil ((31430 . 31443)) nil (25820 46083 988598 740000) 0 nil] [nil nil ((31427 . 31444)) ((#(" && element.chbiu" 0 14 (part-side javascript) 14 15 (part-side javascript) 15 16 (part-side javascript) 16 17 (part-side javascript)) . 31427) (undo-tree-id372 . -14) (undo-tree-id373 . -17) (undo-tree-id374 . -14) (undo-tree-id375 . -14) (undo-tree-id376 . -14) (undo-tree-id377 . -14) (undo-tree-id378 . -14) (undo-tree-id379 . -14) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -14) (undo-tree-id388 . -14) (undo-tree-id389 . -14) (undo-tree-id390 . -14) (undo-tree-id391 . -14) (undo-tree-id392 . -14) (undo-tree-id393 . -14) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -14) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (undo-tree-id406 . -14) (undo-tree-id407 . -14) (undo-tree-id408 . -14) (undo-tree-id409 . -14) (undo-tree-id410 . -14) (undo-tree-id411 . -14) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -14) (undo-tree-id418 . -14) (undo-tree-id419 . -14) (undo-tree-id420 . -14) (undo-tree-id421 . -14) (undo-tree-id422 . -14) (undo-tree-id423 . -14) (undo-tree-id424 . -14) (undo-tree-id425 . -17) (undo-tree-id426 . -17) (undo-tree-id427 . -17) (undo-tree-id428 . -17) (undo-tree-id429 . -17) (undo-tree-id430 . -17) (undo-tree-id431 . -17) (undo-tree-id432 . -17) (undo-tree-id433 . -17) (undo-tree-id434 . -17) (undo-tree-id435 . -17)) (25820 46012 887331 205000) 0 nil])
([nil nil ((31443 . 31446)) nil (25820 46083 988597 812000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript)) . -31441) (undo-tree-id268 . -1) (#("i" 0 1 (part-side javascript)) . -31442) (undo-tree-id269 . -1) (#("u" 0 1 (part-side javascript)) . -31443) (undo-tree-id270 . -1) 31444) ((31441 . 31444)) (25820 46012 577132 936000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31448) (31447 . 31448) (31446 . 31448) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31446) (31446 . 31447)) nil (25820 46083 988596 357000) 0 nil])
([nil nil ((31441 . 31442)) ((#("h" 0 1 (part-side javascript)) . 31441) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1)) (25820 46012 293821 814000) 0 nil])
([nil nil ((31447 . 31453)) nil (25820 46083 988594 446000) 0 nil])
([nil nil ((#("h" 0 1 (part-side javascript)) . -31441) (undo-tree-id267 . -1) 31442) ((31441 . 31442)) (25820 46011 961335 209000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -31452) (undo-tree-id486 . -1) 31453) nil (25820 46083 988593 314000) 0 nil])
([nil nil ((31441 . 31444)) ((#("iul" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 3 (part-side javascript)) . 31441) (undo-tree-id332 . -1) (undo-tree-id333 . -3) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3)) (25820 46011 645406 257000) 0 nil])
([nil nil ((31452 . 31464)) nil (25820 46083 988591 80000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -31442) (undo-tree-id265 . -1) (#("l" 0 1 (part-side javascript)) . -31443) (undo-tree-id266 . -1) 31444) ((31442 . 31444)) (25820 46011 330059 89000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31463) (undo-tree-id485 . -1) 31464) nil (25820 46083 988589 885000) 0 nil])
([nil nil ((31442 . 31447)) ((#("ldren" 0 5 (part-side javascript)) . 31442) (undo-tree-id319 . -4) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5)) (25820 46011 34661 442000) 0 nil])
([nil nil ((31463 . 31466)) nil (25820 46083 988587 585000) 0 nil])
([nil nil ((31447 . 31448)) ((#("." 0 1 (part-side javascript)) . 31447) (undo-tree-id318 . -1)) (25820 46011 33706 10000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript)) . -31465) (undo-tree-id484 . -1) 31466) nil (25820 46083 988586 303000) 0 nil])
nil
([nil nil ((31465 . 31466)) nil (25820 46083 988583 987000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -31464) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#("l" 0 1 (part-side javascript)) . -31465) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 31466) nil (25820 46083 988582 258000) 0 nil])
([nil nil ((31464 . 31475)) nil (25820 46083 988576 174000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31474) (undo-tree-id479 . -1) 31475) nil (25820 46083 988574 868000) 0 nil])
([nil nil ((31476 . 31478) (#("{" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31476) (31475 . 31477)) nil (25820 46083 988572 499000) 0 nil])
([nil nil ((31479 . 31491) (#("              " 0 14 (face whitespace-trailing part-side javascript)) . 31478) (undo-tree-id477 . -12) (undo-tree-id478 . 14) (31490 . 31492) (31477 . 31491)) nil (25820 46083 988570 717000) 0 nil])
([nil nil ((#("            res = res.concat(check_empty_folder(element.children)) 
" 0 15 (part-side javascript) 15 17 (part-side javascript) 17 22 (part-side javascript) 22 28 (face web-mode-function-call-face part-side javascript) 28 29 (face (rainbow-delimiters-depth-7-face) part-side javascript) 29 30 (face web-mode-function-call-face part-side javascript) 30 47 (face web-mode-function-call-face part-side javascript) 47 48 (face (rainbow-delimiters-depth-8-face) part-side javascript) 48 64 (part-side javascript) 64 65 (face (rainbow-delimiters-depth-8-face) part-side javascript) 65 66 (face (rainbow-delimiters-depth-7-face) part-side javascript) 66 67 (face whitespace-trailing part-side javascript) 67 68 (part-side javascript)) . 31561) (undo-tree-id473 . -12) (undo-tree-id474 . -68) (undo-tree-id475 . -29) (undo-tree-id476 . -21) (31547 . 31561) (#("            }
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-7-face) part-side javascript) 13 14 (part-side javascript)) . 31479) (31493 . 31561) 31505) nil (25820 46083 988566 342000) 0 nil])
([nil nil ((#("            res = res.concat(check_empty_folder(element.children)) 
" 0 15 (part-side javascript) 15 17 (part-side javascript) 17 22 (part-side javascript) 22 28 (face web-mode-function-call-face part-side javascript) 28 29 (face (rainbow-delimiters-depth-8-face) part-side javascript) 29 30 (face web-mode-function-call-face part-side javascript) 30 47 (face web-mode-function-call-face part-side javascript) 47 48 (face (rainbow-delimiters-depth-9-face) part-side javascript) 48 64 (part-side javascript) 64 65 (face (rainbow-delimiters-depth-9-face) part-side javascript) 65 66 (face (rainbow-delimiters-depth-8-face) part-side javascript) 66 67 (face whitespace-trailing part-side javascript) 67 68 (part-side javascript)) . 31547) (undo-tree-id471 . -12) (undo-tree-id472 . -68) (31546 . 31547) (#("
" 0 1 (part-side javascript)) . 31478) (31479 . 31547) 31491) nil (25820 46083 988559 771000) 0 nil])
([nil nil ((31490 . 31492)) nil (25820 46083 988555 731000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 31548) (undo-tree-id470 . -1)) nil (25820 46083 988554 569000) 0 nil])
([nil nil ((31561 . 31574)) nil (25820 46083 988552 237000) 0 nil])
([nil nil ((31579 . 31581) (#("{" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -31579) (31574 . 31580)) nil (25820 46083 988551 60000) 0 nil])
([nil nil ((31582 . 31594) (#("              " 0 14 (face whitespace-trailing part-side javascript)) . 31581) (undo-tree-id468 . -12) (undo-tree-id469 . 14) (31593 . 31595) (31580 . 31594)) nil (25820 46083 988549 161000) 0 nil])
([nil nil ((31581 . 31595)) nil (25820 46083 988545 347000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31604) (31603 . 31604) (31602 . 31604) (#("[" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -31602) (31595 . 31603)) nil (25820 46083 988543 906000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -31595) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("e" 0 1 (part-side javascript)) . -31596) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("t" 0 1 (part-side javascript)) . -31597) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("u" 0 1 (part-side javascript)) . -31598) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("r" 0 1 (part-side javascript)) . -31599) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("n" 0 1 (face web-mode-keyword-face part-side javascript)) . -31600) (undo-tree-id464 . -1) (#(" " 0 1 (part-side javascript)) . -31601) (undo-tree-id465 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -31602) (undo-tree-id466 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -31603) (undo-tree-id467 . -1) 31604) nil (25820 46083 988539 919000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31607) (31606 . 31607) (31605 . 31607) (#("(" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -31605) (31595 . 31606)) nil (25820 46083 988520 390000) 0 nil])
([nil nil ((#("a" 0 1 (face web-mode-function-call-face part-side javascript)) . -31599) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (#("p" 0 1 (face web-mode-function-call-face part-side javascript)) . -31600) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("p" 0 1 (face web-mode-function-call-face part-side javascript)) . -31601) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("e" 0 1 (face web-mode-function-call-face part-side javascript)) . -31602) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("n" 0 1 (face web-mode-function-call-face part-side javascript)) . -31603) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("d" 0 1 (face web-mode-function-call-face part-side javascript)) . -31604) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 31605) nil (25820 46083 988517 17000) 0 nil])
([nil nil ((31599 . 31603)) nil (25820 46083 988499 77000) 0 nil])
([nil nil ((31604 . 31606)) nil (25820 46083 988497 842000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -31604) (undo-tree-id438 . -1) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -31605) (undo-tree-id439 . -1) 31606) nil (25820 46083 988496 398000) 0 nil])
([nil nil ((31604 . 31613)) nil (25820 46083 988492 708000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31612) (undo-tree-id437 . -1) 31613) nil (25820 46083 988491 367000) 0 nil])
([nil nil ((31612 . 31617)) nil (25820 46083 988488 359000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31616) (undo-tree-id436 . -1) 31617) nil (25820 46084 182329 173000) 0 nil])
([nil nil ((31654 . 31663)) nil (25820 46095 725667 268000) 0 nil] [nil nil ((31643 . 31654)) ((#("
          " 0 1 (part-side javascript) 1 11 (part-side javascript)) . 31643) (undo-tree-id491 . -11) (undo-tree-id492 . -11) (undo-tree-id493 . -1) (undo-tree-id494 . -11) (undo-tree-id495 . -11) (undo-tree-id496 . -11) (undo-tree-id497 . -11) (undo-tree-id498 . -11) (undo-tree-id499 . -11) (undo-tree-id500 . -11) (undo-tree-id501 . -11)) (25820 46083 989186 562000) 0 nil])
([nil nil ((31663 . 31674)) nil (25820 46095 725665 922000) 0 nil])
([nil nil ((31654 . 31661)) ((#("return " 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript)) . 31654) (undo-tree-id487 . -6) (undo-tree-id488 . -7) (undo-tree-id489 . -3) (undo-tree-id490 . -6)) (25820 46083 988468 141000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31673) (undo-tree-id502 . -1) 31674) nil (25820 46095 725663 653000) 0 nil])
nil
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -31546) 31673) nil (25820 46095 725648 877000) 0 nil])
([nil nil ((31811 . 31820) (t 25820 46095 753436 557000)) nil (25820 46283 673317 646000) 0 nil])
([nil nil ((31820 . 31826)) nil (25820 46283 673316 501000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -31820) (undo-tree-id504 . -1) (#("e" 0 1 (part-side javascript)) . -31821) (undo-tree-id505 . -1) (#("s" 0 1 (part-side javascript)) . -31822) (undo-tree-id506 . -1) (#(" " 0 1 (part-side javascript)) . -31823) (undo-tree-id507 . -1) (#("=" 0 1 (part-side javascript)) . -31824) (undo-tree-id508 . -1) (#(" " 0 1 (part-side javascript)) . -31825) (undo-tree-id509 . -1) 31826) nil (25820 46283 673314 466000) 0 nil])
([nil nil ((31836 . 31838) (#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31836) (31820 . 31837)) nil (25820 46283 673304 232000) 0 nil])
([nil nil ((32007 . 32018)) nil (25820 46283 673302 344000) 0 nil])
([nil nil ((32018 . 32026)) nil (25820 46283 673301 335000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -32025) (undo-tree-id503 . -1) 32026) nil (25820 46283 673299 313000) 0 nil])
([nil nil ((32025 . 32034)) nil (25820 46283 673289 255000) 0 nil])
([nil nil ((31820 . 31824)) nil (25820 46283 674003 262000) 0 nil])
([nil nil ((31342 . 31346)) nil (25820 46309 559450 287000) 0 nil] [nil nil ((31359 . 31363)) ((#("var " 0 3 (face web-mode-keyword-face part-side javascript) 3 4 (part-side javascript)) . 31359)) (25820 46283 673280 231000) 0 nil])
([nil nil ((32042 . 32056)) nil (25820 46309 559449 175000) 0 nil])
nil
([nil nil ((#("-" 0 1 (part-side javascript)) . -32055) (undo-tree-id523 . -1) 32056) nil (25820 46309 559447 925000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 32064) (32063 . 32064) (32062 . 32064) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -32062) (32055 . 32063)) nil (25820 46309 559445 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32093 . 32094) (nil part-side javascript 32093 . 32094) (nil face (rainbow-delimiters-depth-7-face) 32093 . 32094) (nil part-side javascript 32082 . 32093) (nil part-side javascript 32081 . 32082) (nil face (rainbow-delimiters-depth-7-face) 32081 . 32082) (nil part-side javascript 32063 . 32081) (nil face web-mode-function-call-face 32063 . 32081) (32063 . 32094)) nil (25820 46309 559442 483000) 0 nil])
([nil nil ((#("filter_tree" 0 11 (part-side javascript)) . 32082) (undo-tree-id521 . -11) (undo-tree-id522 . -11)) nil (25820 46309 559439 443000) 0 nil])
([nil nil ((32082 . 32090)) nil (25820 46309 559435 898000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32089) (undo-tree-id520 . -1) 32090) nil (25820 46309 559434 625000) 0 nil])
([nil nil ((32089 . 32090)) nil (25820 46309 559432 268000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -32089) (undo-tree-id519 . -1) 32090) nil (25820 46309 559431 50000) 0 nil])
([nil nil ((32089 . 32091)) nil (25820 46309 559428 590000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32090) (undo-tree-id518 . -1) 32091) nil (25820 46309 559427 61000) 0 nil])
([nil nil ((32090 . 32099)) nil (25820 46309 559423 759000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32098) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) 32099) nil (25820 46309 559418 47000) 0 nil])
([nil nil ((32111 . 32120) (t 25820 46309 587153 411000)) nil (25820 46328 763828 550000) 0 nil])
([nil nil ((32120 . 32127)) nil (25820 46328 763827 325000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -32125) (undo-tree-id526 . -1) (#("l" 0 1 (part-side javascript)) . -32126) (undo-tree-id527 . -1) 32127) nil (25820 46328 763826 54000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 32133) (32132 . 32133) (32131 . 32133) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -32131) (32125 . 32132)) nil (25820 46328 763821 862000) 0 nil])
([nil nil ((32132 . 32144)) nil (25820 46328 763820 49000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -32142) (undo-tree-id524 . -1) (#("e" 0 1 (part-side javascript)) . -32143) (undo-tree-id525 . -1) 32144) nil (25820 46328 763817 810000) 0 nil])
([nil nil ((32142 . 32145)) nil (25820 46328 763805 769000) 0 nil])
([nil nil ((32132 . 32134)) nil (25820 46328 763804 536000) 0 nil])
([nil nil ((32133 . 32147)) nil (25820 46328 763802 137000) 0 nil])
([nil nil ((32148 . 32150)) nil (25820 46328 763794 986000) 0 nil])
([nil nil ((32063 . 32068) (t 25820 46328 790948 553000)) nil (25820 46403 312035 529000) 0 nil])
([nil nil ((31513 . 31518) (t 25820 46403 338153 539000)) nil (25820 46407 20919 183000) 0 nil])
([nil nil ((32020 . 32031) (t 25820 46407 46114 4000)) nil (25820 46591 517874 595000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 32036) (32035 . 32036) (32034 . 32036) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -32034) (32031 . 32035)) nil (25820 46591 517873 111000) 0 nil])
([nil nil ((32035 . 32037)) nil (25820 46591 517871 424000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -32035) (undo-tree-id544 . -1) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -32036) (undo-tree-id545 . -1) 32037) nil (25820 46591 517870 181000) 0 nil])
([nil nil ((32035 . 32042)) nil (25820 46591 517866 705000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -32039) (undo-tree-id541 . -1) (#("n" 0 1 (part-side javascript)) . -32040) (undo-tree-id542 . -1) (#("." 0 1 (part-side javascript)) . -32041) (undo-tree-id543 . -1) 32042) nil (25820 46591 517865 97000) 0 nil])
([nil nil ((32039 . 32054)) nil (25820 46591 517860 138000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32051) (undo-tree-id538 . -1) (#(">" 0 1 (part-side javascript)) . -32052) (undo-tree-id539 . -1) (#(" " 0 1 (part-side javascript)) . -32053) (undo-tree-id540 . -1) 32054) nil (25820 46591 517858 352000) 0 nil])
([nil nil ((32051 . 32063)) nil (25820 46591 517853 230000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32062) (undo-tree-id537 . -1) 32063) nil (25820 46591 517852 129000) 0 nil])
([nil nil ((32064 . 32066) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -32064) (32063 . 32065)) nil (25820 46591 517849 572000) 0 nil])
([nil nil ((32067 . 32077) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 32066) (undo-tree-id535 . -10) (undo-tree-id536 . 12) (32076 . 32078) (32065 . 32077)) nil (25820 46591 517847 677000) 0 nil])
([nil nil ((#("          empty_folders = empty_folders.concat(this.check_empty_folder(element.children))
" 0 23 (part-side javascript) 23 25 (part-side javascript) 25 40 (part-side javascript) 40 46 (face web-mode-function-call-face part-side javascript) 46 47 (face (rainbow-delimiters-depth-6-face) part-side javascript) 47 51 (face web-mode-constant-face part-side javascript) 51 52 (part-side javascript) 52 70 (face web-mode-function-call-face part-side javascript) 70 71 (face (rainbow-delimiters-depth-7-face) part-side javascript) 71 87 (part-side javascript) 87 88 (face (rainbow-delimiters-depth-7-face) part-side javascript rear-nonsticky t) 88 89 (face (rainbow-delimiters-depth-6-face) part-side javascript) 89 90 (part-side javascript)) . 32169) (undo-tree-id531 . -10) (undo-tree-id532 . -90) (undo-tree-id533 . -71) (undo-tree-id534 . -47) (32157 . 32169) (#("          }
" 0 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-6-face) part-side javascript) 11 12 (part-side javascript)) . 32067) (32079 . 32169) 32089) nil (25820 46591 517843 136000) 0 nil])
([nil nil ((#("          empty_folders = empty_folders.concat(this.check_empty_folder(element.children))
" 0 23 (part-side javascript) 23 25 (part-side javascript) 25 40 (part-side javascript) 40 46 (face web-mode-function-call-face part-side javascript) 46 47 (face (rainbow-delimiters-depth-7-face) part-side javascript) 47 51 (face web-mode-constant-face part-side javascript) 51 52 (part-side javascript) 52 70 (face web-mode-function-call-face part-side javascript) 70 71 (face (rainbow-delimiters-depth-8-face) part-side javascript) 71 87 (part-side javascript) 87 88 (face (rainbow-delimiters-depth-8-face) part-side javascript rear-nonsticky t) 88 89 (face (rainbow-delimiters-depth-7-face) part-side javascript) 89 90 (part-side javascript)) . 32157) (undo-tree-id529 . -10) (undo-tree-id530 . -90) (32156 . 32157) (#("
" 0 1 (part-side javascript)) . 32066) (32067 . 32157) 32077) nil (25820 46591 517835 487000) 0 nil])
([nil nil ((32076 . 32078)) nil (25820 46591 517829 632000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 32158) (undo-tree-id528 . -1)) nil (25820 46591 517824 587000) 0 nil])
([nil nil ((32035 . 32037) (t 25820 46591 544147 766000)) nil (25820 46605 797924 928000) 0 nil])
([nil nil ((32036 . 32045)) nil (25820 46605 797923 502000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -32044) (undo-tree-id552 . -1) 32045) nil (25820 46605 797922 69000) 0 nil])
([nil nil ((32045 . 32060)) nil (25820 46605 797918 859000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -32057) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -32058) (undo-tree-id550 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -32059) (undo-tree-id551 . -1) 32060) nil (25820 46605 797915 579000) 0 nil])
([nil nil ((32057 . 32060)) nil (25820 46605 797894 881000) 0 nil])
([nil nil ((13623 . 13642) (t 25820 46605 823995 651000)) nil (25820 50079 413248 623000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13693 . 13694) (nil tag-name "v-item-group" 13693 . 13694) (nil tag-type start 13693 . 13694) (nil tag-end t 13693 . 13694) (nil font-lock-face web-mode-html-tag-bracket-face 13693 . 13694) (nil tag-attr t 13692 . 13693) (nil tag-attr-end 4 13692 . 13693) (nil tag-name "v-item-group" 13692 . 13693) (nil tag-type start 13692 . 13693) (nil font-lock-face web-mode-html-attr-value-face 13692 . 13693) (nil tag-attr t 13661 . 13692) (nil tag-name "v-item-group" 13661 . 13692) (nil tag-type start 13661 . 13692) (nil font-lock-face web-mode-html-attr-value-face 13661 . 13692) (nil tag-attr t 13660 . 13661) (nil tag-name "v-item-group" 13660 . 13661) (nil tag-type start 13660 . 13661) (nil font-lock-face web-mode-html-attr-equal-face 13660 . 13661) (nil tag-attr t 13657 . 13660) (nil tag-name "v-item-group" 13657 . 13660) (nil tag-type start 13657 . 13660) (nil font-lock-face web-mode-html-attr-engine-face 13657 . 13660) (nil tag-attr-beg 2 13656 . 13657) (nil tag-attr t 13656 . 13657) (nil tag-name "v-item-group" 13656 . 13657) (nil tag-type start 13656 . 13657) (nil font-lock-face web-mode-html-attr-engine-face 13656 . 13657) (nil tag-name "v-item-group" 13655 . 13656) (nil tag-type start 13655 . 13656) (nil tag-name "v-item-group" 13643 . 13655) (nil tag-type start 13643 . 13655) (nil font-lock-face web-mode-html-tag-custom-face 13643 . 13655) (nil tag-name "v-item-group" 13642 . 13643) (nil tag-type start 13642 . 13643) (nil tag-beg 19 13642 . 13643) (nil font-lock-face web-mode-html-tag-bracket-face 13642 . 13643) (13642 . 13694)) nil (25820 50079 413245 546000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673)) nil (25820 50079 413235 354000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673)) nil (25820 50079 413230 512000) 0 nil])
([nil nil ((13673 . 13679)) nil (25820 50079 413229 146000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13673) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13674) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13675) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13676) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13677) (undo-tree-id598 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13678) (undo-tree-id599 . -1) 13679) nil (25820 50079 413226 890000) 0 nil])
([nil nil ((13673 . 13681)) nil (25820 50079 413214 172000) 0 nil])
([nil nil ((13688 . 13690) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -13688) (13673 . 13689)) nil (25820 50079 413213 28000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13689)) nil (25820 50079 413211 628000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13696)) nil (25820 50079 413210 491000) 0 nil])
([nil nil ((13696 . 13697)) nil (25820 50079 413209 685000) 0 nil])
([nil nil ((31766 . 31773)) nil (25820 50079 413208 726000) 0 nil])
([nil nil ((31773 . 31790)) nil (25820 50079 413207 837000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31789) (undo-tree-id589 . -1) 31790) nil (25820 50079 413206 685000) 0 nil])
([nil nil ((31791 . 31792) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 31791) (31790 . 31791) (31789 . 31791) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31789) (31789 . 31790)) nil (25820 50079 413203 953000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31791) (undo-tree-id588 . -1) 31792) nil (25820 50079 413201 623000) 0 nil])
([nil nil ((31792 . 31794) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -31792) (31791 . 31793)) nil (25820 50079 413199 4000) 0 nil])
([nil nil ((31795 . 31801) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 31794) (undo-tree-id586 . 8) (31794 . 31802) (#("      " 0 6 (part-side javascript)) . 31794) (undo-tree-id587 . -6) (31793 . 31801)) nil (25820 50079 413197 31000) 0 nil])
([nil nil ((31802 . 31803)) nil (25820 50079 413192 229000) 0 nil])
([nil nil ((31790 . 31792)) nil (25820 50079 413191 259000) 0 nil])
([nil nil ((#("check_tree_edit" 0 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 13673) (undo-tree-id584 . -15) (undo-tree-id585 . -15)) nil (25820 50079 413189 994000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13688 . 13689) (nil tag-attr t 13673 . 13689) (nil tag-name "v-item-group" 13673 . 13689) (nil tag-type start 13673 . 13689) (nil font-lock-face web-mode-html-attr-value-face 13673 . 13689) (13673 . 13689)) nil (25820 50079 413186 659000) 0 nil])
([nil nil ((31797 . 31805)) nil (25820 50079 413184 729000) 0 nil])
([nil nil ((31805 . 31811)) nil (25820 50079 413183 848000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -31808) (undo-tree-id581 . -1) (#("d" 0 1 (part-side javascript)) . -31809) (undo-tree-id582 . -1) (#(" " 0 1 (part-side javascript)) . -31810) (undo-tree-id583 . -1) 31811) nil (25820 50079 413182 231000) 0 nil])
([nil nil ((31809 . 31814) (31808 . 31810) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31808) (31808 . 31809)) nil (25820 50079 413176 753000) 0 nil])
([nil nil ((31814 . 31815)) nil (25820 50079 413175 228000) 0 nil])
([nil nil ((31815 . 31824)) nil (25820 50079 413174 372000) 0 nil])
([nil nil ((#("z" 0 1 (part-side javascript)) . -31822) (undo-tree-id579 . -1) (#(" " 0 1 (part-side javascript)) . -31823) (undo-tree-id580 . -1) 31824) nil (25820 50079 413173 28000) 0 nil])
([nil nil ((31822 . 31824)) nil (25820 50079 413169 576000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -31822) (undo-tree-id577 . -1) (#(" " 0 1 (part-side javascript)) . -31823) (undo-tree-id578 . -1) 31824) nil (25820 50079 413168 254000) 0 nil])
([nil nil ((31822 . 31825)) nil (25820 50079 413164 552000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -31814) (undo-tree-id576 . -1) 31815) nil (25820 50079 413163 270000) 0 nil])
([nil nil ((31814 . 31817)) nil (25820 50079 413160 956000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31816) (undo-tree-id575 . -1) 31817) nil (25820 50079 413159 791000) 0 nil])
([nil nil ((31828 . 31830) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31828) (31827 . 31829)) nil (25820 50079 413157 269000) 0 nil])
([nil nil ((31831 . 31839) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 31830) (undo-tree-id573 . -8) (undo-tree-id574 . 10) (31838 . 31840) (31829 . 31839)) nil (25820 50079 413155 531000) 0 nil])
([nil nil ((31830 . 31840)) nil (25820 50079 413151 727000) 0 nil])
([nil nil ((#("> -2 && id < 0" 0 14 (part-side javascript)) . 31812) (undo-tree-id570 . -14) (undo-tree-id571 . -14) (undo-tree-id572 . -14)) nil (25820 50079 413150 496000) 0 nil])
([nil nil ((31812 . 31818)) nil (25820 50079 413145 702000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31817) (undo-tree-id569 . -1) 31818) nil (25820 50079 413144 116000) 0 nil])
([nil nil ((31831 . 31843)) nil (25820 50079 413140 387000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -31842) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 31843) nil (25820 50079 413134 279000) 0 nil])
([nil nil ((13700 . 13721) (t 25820 50079 442583 433000)) nil (25820 50318 686831 850000) 0 nil])
([nil nil (("  " . -13719) (13721 . 13736)) nil (25820 50318 686830 22000) 0 nil])
([nil nil ((13623 . 13642)) nil (25820 50318 686828 615000) 0 nil])
([nil nil ((13719 . 13740)) nil (25820 50318 686826 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14455 . 14456) (nil tag-name "v-tooltip" 14455 . 14456) (nil tag-type end 14455 . 14456) (nil tag-end t 14455 . 14456) (nil font-lock-face web-mode-html-tag-bracket-face 14455 . 14456) (nil tag-name "v-tooltip" 14446 . 14455) (nil tag-type end 14446 . 14455) (nil font-lock-face web-mode-html-tag-custom-face 14446 . 14455) (nil tag-name "v-tooltip" 14445 . 14446) (nil tag-type end 14445 . 14446) (nil font-lock-face web-mode-html-tag-bracket-face 14445 . 14446) (nil tag-name "v-tooltip" 14444 . 14445) (nil tag-type end 14444 . 14445) (nil tag-beg 22 14444 . 14445) (nil font-lock-face web-mode-html-tag-bracket-face 14444 . 14445) (nil tag-name "span" 14422 . 14423) (nil tag-type end 14422 . 14423) (nil tag-end t 14422 . 14423) (nil font-lock-face web-mode-html-tag-bracket-face 14422 . 14423) (nil tag-name "span" 14418 . 14422) (nil tag-type end 14418 . 14422) (nil font-lock-face web-mode-html-tag-face 14418 . 14422) (nil tag-name "span" 14417 . 14418) (nil tag-type end 14417 . 14418) (nil font-lock-face web-mode-html-tag-bracket-face 14417 . 14418) (nil tag-name "span" 14416 . 14417) (nil tag-type end 14416 . 14417) (nil tag-beg 20 14416 . 14417) (nil font-lock-face web-mode-html-tag-bracket-face 14416 . 14417) (nil block-side t 14415 . 14416) (nil block-end t 14415 . 14416) (nil block-token delimiter-end 14415 . 14416) (nil font-lock-face web-mode-block-delimiter-face 14415 . 14416) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14415 . 14416) (nil block-side t 14414 . 14415) (nil block-token delimiter-end 14414 . 14415) (nil font-lock-face web-mode-block-delimiter-face 14414 . 14415) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14414 . 14415) (nil block-side t 14413 . 14414) (nil block-side t 14412 . 14413) (nil face (rainbow-delimiters-depth-3-face) 14412 . 14413) (nil block-side t 14411 . 14412) (nil block-side t 14410 . 14411) (nil face web-mode-variable-name-face 14410 . 14411) (nil block-side t 14409 . 14410) (nil face web-mode-variable-name-face 14409 . 14410) (nil block-side t 14408 . 14409) (nil face web-mode-variable-name-face 14408 . 14409) (nil block-side t 14407 . 14408) (nil face web-mode-variable-name-face 14407 . 14408) (nil block-side t 14406 . 14407) (nil face web-mode-variable-name-face 14406 . 14407) (nil block-side t 14405 . 14406) (nil face web-mode-variable-name-face 14405 . 14406) (nil block-side t 14404 . 14405) (nil face web-mode-variable-name-face 14404 . 14405) (nil block-side t 14403 . 14404) (nil face web-mode-variable-name-face 14403 . 14404) (nil block-side t 14402 . 14403) (nil face web-mode-variable-name-face 14402 . 14403) (nil block-side t 14401 . 14402) (nil face web-mode-variable-name-face 14401 . 14402) (nil block-side t 14400 . 14401) (nil face web-mode-variable-name-face 14400 . 14401) (nil block-side t 14399 . 14400) (nil face web-mode-variable-name-face 14399 . 14400) (nil block-side t 14398 . 14399) (nil face web-mode-variable-name-face 14398 . 14399) (nil block-side t 14397 . 14398) (nil block-side t 14396 . 14397) (nil face web-mode-variable-name-face 14396 . 14397) (nil block-side t 14395 . 14396) (nil face web-mode-variable-name-face 14395 . 14396) (nil block-side t 14394 . 14395) (nil face web-mode-variable-name-face 14394 . 14395) (nil block-side t 14393 . 14394) (nil face web-mode-variable-name-face 14393 . 14394) (nil block-side t 14392 . 14393) (nil face web-mode-variable-name-face 14392 . 14393) (nil block-side t 14391 . 14392) (nil face web-mode-variable-name-face 14391 . 14392) (nil block-side t 14390 . 14391) (nil face web-mode-variable-name-face 14390 . 14391) (nil block-side t 14389 . 14390) (nil face web-mode-variable-name-face 14389 . 14390) (nil block-side t 14388 . 14389) (nil face web-mode-variable-name-face 14388 . 14389) (nil block-side t 14387 . 14388) (nil face web-mode-variable-name-face 14387 . 14388) (nil block-side t 14386 . 14387) (nil face web-mode-variable-name-face 14386 . 14387) (nil block-side t 14385 . 14386) (nil face web-mode-variable-name-face 14385 . 14386) (nil block-side t 14384 . 14385) (nil face web-mode-variable-name-face 14384 . 14385) (nil block-side t 14383 . 14384) (nil face web-mode-variable-name-face 14383 . 14384) (nil block-side t 14382 . 14383) (nil face web-mode-variable-name-face 14382 . 14383) (nil block-side t 14381 . 14382) (nil block-side t 14380 . 14381) (nil face (rainbow-delimiters-depth-3-face) 14380 . 14381) (nil block-side t 14379 . 14380) (nil face web-mode-variable-name-face 14379 . 14380) (nil block-side t 14377 . 14379) (nil block-side t 14376 . 14377) (nil block-token delimiter-beg 14376 . 14377) (nil font-lock-face web-mode-block-delimiter-face 14376 . 14377) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14376 . 14377) (nil block-beg 0 14375 . 14376) (nil block-controls 0 14375 . 14376) (nil block-side t 14375 . 14376) (nil block-token delimiter-beg 14375 . 14376) (nil font-lock-face web-mode-block-delimiter-face 14375 . 14376) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14375 . 14376) (nil tag-name "span" 14374 . 14375) (nil tag-type start 14374 . 14375) (nil tag-end t 14374 . 14375) (nil font-lock-face web-mode-html-tag-bracket-face 14374 . 14375) (nil tag-name "span" 14370 . 14374) (nil tag-type start 14370 . 14374) (nil font-lock-face web-mode-html-tag-face 14370 . 14374) (nil tag-name "span" 14369 . 14370) (nil tag-type start 14369 . 14370) (nil tag-beg 16 14369 . 14370) (nil font-lock-face web-mode-html-tag-bracket-face 14369 . 14370) (nil tag-name "template" 14345 . 14346) (nil tag-type end 14345 . 14346) (nil tag-end t 14345 . 14346) (nil font-lock-face web-mode-html-tag-bracket-face 14345 . 14346) (nil tag-name "template" 14337 . 14345) (nil tag-type end 14337 . 14345) (nil font-lock-face web-mode-html-tag-face 14337 . 14345) (nil tag-name "template" 14336 . 14337) (nil tag-type end 14336 . 14337) (nil font-lock-face web-mode-html-tag-bracket-face 14336 . 14337) (nil tag-name "template" 14335 . 14336) (nil tag-type end 14335 . 14336) (nil tag-beg 20 14335 . 14336) (nil font-lock-face web-mode-html-tag-bracket-face 14335 . 14336) (nil tag-name "v-btn" 14311 . 14312) (nil tag-type end 14311 . 14312) (nil tag-end t 14311 . 14312) (nil font-lock-face web-mode-html-tag-bracket-face 14311 . 14312) (nil tag-name "v-btn" 14306 . 14311) (nil tag-type end 14306 . 14311) (nil font-lock-face web-mode-html-tag-custom-face 14306 . 14311) (nil tag-name "v-btn" 14305 . 14306) (nil tag-type end 14305 . 14306) (nil font-lock-face web-mode-html-tag-bracket-face 14305 . 14306) (nil tag-name "v-btn" 14304 . 14305) (nil tag-type end 14304 . 14305) (nil tag-beg 22 14304 . 14305) (nil font-lock-face web-mode-html-tag-bracket-face 14304 . 14305) (nil tag-name "v-icon" 14278 . 14279) (nil tag-type end 14278 . 14279) (nil tag-end t 14278 . 14279) (nil font-lock-face web-mode-html-tag-bracket-face 14278 . 14279) (nil tag-name "v-icon" 14272 . 14278) (nil tag-type end 14272 . 14278) (nil font-lock-face web-mode-html-tag-custom-face 14272 . 14278) (nil tag-name "v-icon" 14271 . 14272) (nil tag-type end 14271 . 14272) (nil font-lock-face web-mode-html-tag-bracket-face 14271 . 14272) (nil tag-name "v-icon" 14270 . 14271) (nil tag-type end 14270 . 14271) (nil tag-beg 22 14270 . 14271) (nil font-lock-face web-mode-html-tag-bracket-face 14270 . 14271) (nil tag-name "v-icon" 14259 . 14260) (nil tag-type start 14259 . 14260) (nil tag-end t 14259 . 14260) (nil font-lock-face web-mode-html-tag-bracket-face 14259 . 14260) (nil tag-name "v-icon" 14253 . 14259) (nil tag-type start 14253 . 14259) (nil font-lock-face web-mode-html-tag-custom-face 14253 . 14259) (nil tag-name "v-icon" 14252 . 14253) (nil tag-type start 14252 . 14253) (nil tag-beg 18 14252 . 14253) (nil font-lock-face web-mode-html-tag-bracket-face 14252 . 14253) (nil tag-name "v-btn" 14224 . 14225) (nil tag-type start 14224 . 14225) (nil tag-end t 14224 . 14225) (nil font-lock-face web-mode-html-tag-bracket-face 14224 . 14225) (nil tag-name "v-btn" 14199 . 14224) (nil tag-type start 14199 . 14224) (nil block-side t 14198 . 14199) (nil block-end t 14198 . 14199) (nil block-token delimiter-end 14198 . 14199) (nil tag-attr t 14198 . 14199) (nil tag-attr-end 6 14198 . 14199) (nil tag-name "v-btn" 14198 . 14199) (nil tag-type start 14198 . 14199) (nil font-lock-face web-mode-block-delimiter-face 14198 . 14199) (nil block-side t 14197 . 14198) (nil tag-attr t 14197 . 14198) (nil tag-name "v-btn" 14197 . 14198) (nil tag-type start 14197 . 14198) (nil block-side t 14196 . 14197) (nil tag-attr t 14196 . 14197) (nil tag-name "v-btn" 14196 . 14197) (nil tag-type start 14196 . 14197) (nil face web-mode-variable-name-face 14196 . 14197) (nil block-side t 14195 . 14196) (nil tag-attr t 14195 . 14196) (nil tag-name "v-btn" 14195 . 14196) (nil tag-type start 14195 . 14196) (nil face web-mode-variable-name-face 14195 . 14196) (nil block-side t 14194 . 14195) (nil tag-attr t 14194 . 14195) (nil tag-name "v-btn" 14194 . 14195) (nil tag-type start 14194 . 14195) (nil face web-mode-variable-name-face 14194 . 14195) (nil block-side t 14193 . 14194) (nil tag-attr t 14193 . 14194) (nil tag-name "v-btn" 14193 . 14194) (nil tag-type start 14193 . 14194) (nil face web-mode-variable-name-face 14193 . 14194) (nil block-side t 14192 . 14193) (nil tag-attr t 14192 . 14193) (nil tag-name "v-btn" 14192 . 14193) (nil tag-type start 14192 . 14193) (nil block-side t 14168 . 14192) (nil tag-attr t 14168 . 14192) (nil tag-name "v-btn" 14168 . 14192) (nil tag-type start 14168 . 14192) (nil face web-mode-function-call-face 14168 . 14192) (nil block-side t 14167 . 14168) (nil block-token delimiter-beg 14167 . 14168) (nil tag-attr t 14167 . 14168) (nil tag-name "v-btn" 14167 . 14168) (nil tag-type start 14167 . 14168) (nil font-lock-face web-mode-block-delimiter-face 14167 . 14168) (nil block-side t 14166 . 14167) (nil block-token delimiter-beg 14166 . 14167) (nil tag-attr t 14166 . 14167) (nil tag-name "v-btn" 14166 . 14167) (nil tag-type start 14166 . 14167) (nil font-lock-face web-mode-block-delimiter-face 14166 . 14167) (nil block-side t 14165 . 14166) (nil block-token delimiter-beg 14165 . 14166) (nil tag-attr t 14165 . 14166) (nil tag-name "v-btn" 14165 . 14166) (nil tag-type start 14165 . 14166) (nil font-lock-face web-mode-block-delimiter-face 14165 . 14166) (nil block-side t 14164 . 14165) (nil block-token delimiter-beg 14164 . 14165) (nil tag-attr t 14164 . 14165) (nil tag-name "v-btn" 14164 . 14165) (nil tag-type start 14164 . 14165) (nil font-lock-face web-mode-block-delimiter-face 14164 . 14165) (nil block-side t 14163 . 14164) (nil block-token delimiter-beg 14163 . 14164) (nil tag-attr t 14163 . 14164) (nil tag-name "v-btn" 14163 . 14164) (nil tag-type start 14163 . 14164) (nil font-lock-face web-mode-block-delimiter-face 14163 . 14164) (nil block-side t 14162 . 14163) (nil block-token delimiter-beg 14162 . 14163) (nil tag-attr t 14162 . 14163) (nil tag-name "v-btn" 14162 . 14163) (nil tag-type start 14162 . 14163) (nil font-lock-face web-mode-block-delimiter-face 14162 . 14163) (nil block-side t 14161 . 14162) (nil block-token delimiter-beg 14161 . 14162) (nil tag-attr t 14161 . 14162) (nil tag-name "v-btn" 14161 . 14162) (nil tag-type start 14161 . 14162) (nil font-lock-face web-mode-block-delimiter-face 14161 . 14162) (nil block-beg 0 14160 . 14161) (nil block-controls 0 14160 . 14161) (nil block-side t 14160 . 14161) (nil block-token delimiter-beg 14160 . 14161) (nil tag-attr-beg 2 14160 . 14161) (nil tag-attr t 14160 . 14161) (nil tag-name "v-btn" 14160 . 14161) (nil tag-type start 14160 . 14161) (nil font-lock-face web-mode-block-delimiter-face 14160 . 14161) (nil tag-name "v-btn" 14133 . 14160) (nil tag-type start 14133 . 14160) (nil tag-attr t 14132 . 14133) (nil tag-attr-end 11 14132 . 14133) (nil tag-name "v-btn" 14132 . 14133) (nil tag-type start 14132 . 14133) (nil font-lock-face web-mode-html-attr-value-face 14132 . 14133) (nil tag-attr t 14131 . 14132) (nil tag-name "v-btn" 14131 . 14132) (nil tag-type start 14131 . 14132) (nil font-lock-face web-mode-html-attr-value-face 14131 . 14132) (nil tag-attr t 14130 . 14131) (nil tag-name "v-btn" 14130 . 14131) (nil tag-type start 14130 . 14131) (nil font-lock-face web-mode-html-attr-equal-face 14130 . 14131) (nil tag-attr t 14120 . 14130) (nil tag-name "v-btn" 14120 . 14130) (nil tag-type start 14120 . 14130) (nil font-lock-face web-mode-html-attr-engine-face 14120 . 14130) (nil tag-attr-beg 2 14119 . 14120) (nil tag-attr t 14119 . 14120) (nil tag-name "v-btn" 14119 . 14120) (nil tag-type start 14119 . 14120) (nil font-lock-face web-mode-html-attr-engine-face 14119 . 14120) (nil tag-name "v-btn" 14092 . 14119) (nil tag-type start 14092 . 14119) (nil tag-attr t 14091 . 14092) (nil tag-attr-end 5 14091 . 14092) (nil tag-name "v-btn" 14091 . 14092) (nil tag-type start 14091 . 14092) (nil font-lock-face web-mode-html-attr-value-face 14091 . 14092) (nil tag-attr t 14073 . 14091) (nil tag-name "v-btn" 14073 . 14091) (nil tag-type start 14073 . 14091) (nil font-lock-face web-mode-html-attr-value-face 14073 . 14091) (nil tag-attr t 14072 . 14073) (nil tag-name "v-btn" 14072 . 14073) (nil tag-type start 14072 . 14073) (nil font-lock-face web-mode-html-attr-equal-face 14072 . 14073) (nil tag-attr t 14068 . 14072) (nil tag-name "v-btn" 14068 . 14072) (nil tag-type start 14068 . 14072) (nil font-lock-face web-mode-html-attr-name-face 14068 . 14072) (nil tag-attr-beg 0 14067 . 14068) (nil tag-attr t 14067 . 14068) (nil tag-name "v-btn" 14067 . 14068) (nil tag-type start 14067 . 14068) (nil font-lock-face web-mode-html-attr-name-face 14067 . 14068) (nil tag-name "v-btn" 14040 . 14067) (nil tag-type start 14040 . 14067) (nil tag-attr t 14039 . 14040) (nil tag-attr-end 5 14039 . 14040) (nil tag-name "v-btn" 14039 . 14040) (nil tag-type start 14039 . 14040) (nil font-lock-face web-mode-html-attr-value-face 14039 . 14040) (nil tag-attr t 14028 . 14039) (nil tag-name "v-btn" 14028 . 14039) (nil tag-type start 14028 . 14039) (nil font-lock-face web-mode-html-attr-value-face 14028 . 14039) (nil tag-attr t 14027 . 14028) (nil tag-name "v-btn" 14027 . 14028) (nil tag-type start 14027 . 14028) (nil font-lock-face web-mode-html-attr-equal-face 14027 . 14028) (nil tag-attr t 14023 . 14027) (nil tag-name "v-btn" 14023 . 14027) (nil tag-type start 14023 . 14027) (nil font-lock-face web-mode-html-attr-name-face 14023 . 14027) (nil tag-attr-beg 0 14022 . 14023) (nil tag-attr t 14022 . 14023) (nil tag-name "v-btn" 14022 . 14023) (nil tag-type start 14022 . 14023) (nil font-lock-face web-mode-html-attr-name-face 14022 . 14023) (nil tag-name "v-btn" 13995 . 14022) (nil tag-type start 13995 . 14022) (nil tag-attr t 13994 . 13995) (nil tag-attr-end 0 13994 . 13995) (nil tag-name "v-btn" 13994 . 13995) (nil tag-type start 13994 . 13995) (nil font-lock-face web-mode-html-attr-name-face 13994 . 13995) (nil tag-attr t 13991 . 13994) (nil tag-name "v-btn" 13991 . 13994) (nil tag-type start 13991 . 13994) (nil font-lock-face web-mode-html-attr-name-face 13991 . 13994) (nil tag-attr-beg 0 13990 . 13991) (nil tag-attr t 13990 . 13991) (nil tag-name "v-btn" 13990 . 13991) (nil tag-type start 13990 . 13991) (nil font-lock-face web-mode-html-attr-name-face 13990 . 13991) (nil tag-name "v-btn" 13963 . 13990) (nil tag-type start 13963 . 13990) (nil tag-attr t 13962 . 13963) (nil tag-attr-end 0 13962 . 13963) (nil tag-name "v-btn" 13962 . 13963) (nil tag-type start 13962 . 13963) (nil font-lock-face web-mode-html-attr-name-face 13962 . 13963) (nil tag-attr t 13960 . 13962) (nil tag-name "v-btn" 13960 . 13962) (nil tag-type start 13960 . 13962) (nil font-lock-face web-mode-html-attr-name-face 13960 . 13962) (nil tag-attr-beg 0 13959 . 13960) (nil tag-attr t 13959 . 13960) (nil tag-name "v-btn" 13959 . 13960) (nil tag-type start 13959 . 13960) (nil font-lock-face web-mode-html-attr-name-face 13959 . 13960) (nil tag-name "v-btn" 13932 . 13959) (nil tag-type start 13932 . 13959) (nil tag-attr t 13931 . 13932) (nil tag-attr-end 4 13931 . 13932) (nil tag-name "v-btn" 13931 . 13932) (nil tag-type start 13931 . 13932) (nil font-lock-face web-mode-html-attr-value-face 13931 . 13932) (nil tag-attr t 13928 . 13931) (nil tag-name "v-btn" 13928 . 13931) (nil tag-type start 13928 . 13931) (nil font-lock-face web-mode-html-attr-value-face 13928 . 13931) (nil tag-attr t 13927 . 13928) (nil tag-name "v-btn" 13927 . 13928) (nil tag-type start 13927 . 13928) (nil font-lock-face web-mode-html-attr-equal-face 13927 . 13928) (nil tag-attr t 13924 . 13927) (nil tag-name "v-btn" 13924 . 13927) (nil tag-type start 13924 . 13927) (nil font-lock-face web-mode-html-attr-engine-face 13924 . 13927) (nil tag-attr-beg 2 13923 . 13924) (nil tag-attr t 13923 . 13924) (nil tag-name "v-btn" 13923 . 13924) (nil tag-type start 13923 . 13924) (nil font-lock-face web-mode-html-attr-engine-face 13923 . 13924) (nil tag-name "v-btn" 13896 . 13923) (nil tag-type start 13896 . 13923) (nil tag-attr t 13895 . 13896) (nil tag-attr-end 6 13895 . 13896) (nil tag-name "v-btn" 13895 . 13896) (nil tag-type start 13895 . 13896) (nil font-lock-face web-mode-html-attr-value-face 13895 . 13896) (nil tag-attr t 13889 . 13895) (nil tag-name "v-btn" 13889 . 13895) (nil tag-type start 13889 . 13895) (nil font-lock-face web-mode-html-attr-value-face 13889 . 13895) (nil tag-attr t 13888 . 13889) (nil tag-name "v-btn" 13888 . 13889) (nil tag-type start 13888 . 13889) (nil font-lock-face web-mode-html-attr-equal-face 13888 . 13889) (nil tag-attr t 13883 . 13888) (nil tag-name "v-btn" 13883 . 13888) (nil tag-type start 13883 . 13888) (nil font-lock-face web-mode-html-attr-engine-face 13883 . 13888) (nil tag-attr-beg 2 13882 . 13883) (nil tag-attr t 13882 . 13883) (nil tag-name "v-btn" 13882 . 13883) (nil tag-type start 13882 . 13883) (nil font-lock-face web-mode-html-attr-engine-face 13882 . 13883) (nil tag-name "v-btn" 13855 . 13882) (nil tag-type start 13855 . 13882) (nil tag-name "v-btn" 13850 . 13855) (nil tag-type start 13850 . 13855) (nil font-lock-face web-mode-html-tag-custom-face 13850 . 13855) (nil tag-name "v-btn" 13849 . 13850) (nil tag-type start 13849 . 13850) (nil tag-beg 19 13849 . 13850) (nil font-lock-face web-mode-html-tag-bracket-face 13849 . 13850) (nil tag-name "template" 13823 . 13824) (nil tag-type start 13823 . 13824) (nil tag-end t 13823 . 13824) (nil font-lock-face web-mode-html-tag-bracket-face 13823 . 13824) (nil block-side t 13822 . 13823) (nil block-end t 13822 . 13823) (nil block-token delimiter-end 13822 . 13823) (nil tag-attr t 13822 . 13823) (nil tag-attr-end 16 13822 . 13823) (nil tag-name "template" 13822 . 13823) (nil tag-type start 13822 . 13823) (nil font-lock-face web-mode-block-delimiter-face 13822 . 13823) (nil block-side t 13820 . 13822) (nil tag-attr t 13820 . 13822) (nil tag-name "template" 13820 . 13822) (nil tag-type start 13820 . 13822) (nil block-side t 13819 . 13820) (nil tag-attr t 13819 . 13820) (nil tag-name "template" 13819 . 13820) (nil tag-type start 13819 . 13820) (nil face web-mode-variable-name-face 13819 . 13820) (nil block-side t 13818 . 13819) (nil tag-attr t 13818 . 13819) (nil tag-name "template" 13818 . 13819) (nil tag-type start 13818 . 13819) (nil face web-mode-variable-name-face 13818 . 13819) (nil block-side t 13817 . 13818) (nil tag-attr t 13817 . 13818) (nil tag-name "template" 13817 . 13818) (nil tag-type start 13817 . 13818) (nil face web-mode-variable-name-face 13817 . 13818) (nil block-side t 13816 . 13817) (nil tag-attr t 13816 . 13817) (nil tag-name "template" 13816 . 13817) (nil tag-type start 13816 . 13817) (nil face web-mode-variable-name-face 13816 . 13817) (nil block-side t 13815 . 13816) (nil tag-attr t 13815 . 13816) (nil tag-name "template" 13815 . 13816) (nil tag-type start 13815 . 13816) (nil face web-mode-variable-name-face 13815 . 13816) (nil block-side t 13813 . 13815) (nil tag-attr t 13813 . 13815) (nil tag-name "template" 13813 . 13815) (nil tag-type start 13813 . 13815) (nil block-side t 13812 . 13813) (nil tag-attr t 13812 . 13813) (nil tag-name "template" 13812 . 13813) (nil tag-type start 13812 . 13813) (nil face web-mode-variable-name-face 13812 . 13813) (nil block-side t 13811 . 13812) (nil tag-attr t 13811 . 13812) (nil tag-name "template" 13811 . 13812) (nil tag-type start 13811 . 13812) (nil face web-mode-variable-name-face 13811 . 13812) (nil block-side t 13809 . 13811) (nil tag-attr t 13809 . 13811) (nil tag-name "template" 13809 . 13811) (nil tag-type start 13809 . 13811) (nil block-side t 13808 . 13809) (nil block-token delimiter-beg 13808 . 13809) (nil tag-attr t 13808 . 13809) (nil tag-name "template" 13808 . 13809) (nil tag-type start 13808 . 13809) (nil font-lock-face web-mode-block-delimiter-face 13808 . 13809) (nil block-side t 13807 . 13808) (nil block-token delimiter-beg 13807 . 13808) (nil tag-attr t 13807 . 13808) (nil tag-name "template" 13807 . 13808) (nil tag-type start 13807 . 13808) (nil font-lock-face web-mode-block-delimiter-face 13807 . 13808) (nil block-side t 13806 . 13807) (nil block-token delimiter-beg 13806 . 13807) (nil tag-attr t 13806 . 13807) (nil tag-name "template" 13806 . 13807) (nil tag-type start 13806 . 13807) (nil font-lock-face web-mode-block-delimiter-face 13806 . 13807) (nil block-side t 13805 . 13806) (nil block-token delimiter-beg 13805 . 13806) (nil tag-attr t 13805 . 13806) (nil tag-name "template" 13805 . 13806) (nil tag-type start 13805 . 13806) (nil font-lock-face web-mode-block-delimiter-face 13805 . 13806) (nil block-side t 13804 . 13805) (nil block-token delimiter-beg 13804 . 13805) (nil tag-attr t 13804 . 13805) (nil tag-name "template" 13804 . 13805) (nil tag-type start 13804 . 13805) (nil font-lock-face web-mode-block-delimiter-face 13804 . 13805) (nil block-side t 13803 . 13804) (nil block-token delimiter-beg 13803 . 13804) (nil tag-attr t 13803 . 13804) (nil tag-name "template" 13803 . 13804) (nil tag-type start 13803 . 13804) (nil font-lock-face web-mode-block-delimiter-face 13803 . 13804) (nil block-side t 13802 . 13803) (nil block-token delimiter-beg 13802 . 13803) (nil tag-attr t 13802 . 13803) (nil tag-name "template" 13802 . 13803) (nil tag-type start 13802 . 13803) (nil font-lock-face web-mode-block-delimiter-face 13802 . 13803) (nil block-side t 13801 . 13802) (nil block-token delimiter-beg 13801 . 13802) (nil tag-attr t 13801 . 13802) (nil tag-name "template" 13801 . 13802) (nil tag-type start 13801 . 13802) (nil font-lock-face web-mode-block-delimiter-face 13801 . 13802) (nil block-side t 13800 . 13801) (nil block-token delimiter-beg 13800 . 13801) (nil tag-attr t 13800 . 13801) (nil tag-name "template" 13800 . 13801) (nil tag-type start 13800 . 13801) (nil font-lock-face web-mode-block-delimiter-face 13800 . 13801) (nil block-side t 13799 . 13800) (nil block-token delimiter-beg 13799 . 13800) (nil tag-attr t 13799 . 13800) (nil tag-name "template" 13799 . 13800) (nil tag-type start 13799 . 13800) (nil font-lock-face web-mode-block-delimiter-face 13799 . 13800) (nil block-side t 13798 . 13799) (nil block-token delimiter-beg 13798 . 13799) (nil tag-attr t 13798 . 13799) (nil tag-name "template" 13798 . 13799) (nil tag-type start 13798 . 13799) (nil font-lock-face web-mode-block-delimiter-face 13798 . 13799) (nil block-beg 0 13797 . 13798) (nil block-controls 0 13797 . 13798) (nil block-side t 13797 . 13798) (nil block-token delimiter-beg 13797 . 13798) (nil tag-attr t 13797 . 13798) (nil tag-name "template" 13797 . 13798) (nil tag-type start 13797 . 13798) (nil font-lock-face web-mode-block-delimiter-face 13797 . 13798) (nil tag-attr t 13792 . 13797) (nil tag-name "template" 13792 . 13797) (nil tag-type start 13792 . 13797) (nil font-lock-face web-mode-html-attr-engine-face 13792 . 13797) (nil tag-attr-beg 2 13791 . 13792) (nil tag-attr t 13791 . 13792) (nil tag-name "template" 13791 . 13792) (nil tag-type start 13791 . 13792) (nil font-lock-face web-mode-html-attr-engine-face 13791 . 13792) (nil tag-name "template" 13790 . 13791) (nil tag-type start 13790 . 13791) (nil tag-name "template" 13782 . 13790) (nil tag-type start 13782 . 13790) (nil font-lock-face web-mode-html-tag-face 13782 . 13790) (nil tag-name "template" 13781 . 13782) (nil tag-type start 13781 . 13782) (nil tag-beg 17 13781 . 13782) (nil font-lock-face web-mode-html-tag-bracket-face 13781 . 13782) (nil tag-name "v-tooltip" 13757 . 13758) (nil tag-type start 13757 . 13758) (nil tag-end t 13757 . 13758) (nil font-lock-face web-mode-html-tag-bracket-face 13757 . 13758) (nil tag-attr t 13756 . 13757) (nil tag-attr-end 0 13756 . 13757) (nil tag-name "v-tooltip" 13756 . 13757) (nil tag-type start 13756 . 13757) (nil font-lock-face web-mode-html-attr-name-face 13756 . 13757) (nil tag-attr t 13752 . 13756) (nil tag-name "v-tooltip" 13752 . 13756) (nil tag-type start 13752 . 13756) (nil font-lock-face web-mode-html-attr-name-face 13752 . 13756) (nil tag-attr-beg 0 13751 . 13752) (nil tag-attr t 13751 . 13752) (nil tag-name "v-tooltip" 13751 . 13752) (nil tag-type start 13751 . 13752) (nil font-lock-face web-mode-html-attr-name-face 13751 . 13752) (nil tag-name "v-tooltip" 13750 . 13751) (nil tag-type start 13750 . 13751) (nil tag-name "v-tooltip" 13741 . 13750) (nil tag-type start 13741 . 13750) (nil font-lock-face web-mode-html-tag-custom-face 13741 . 13750) (nil tag-name "v-tooltip" 13740 . 13741) (nil tag-type start 13740 . 13741) (nil tag-beg 19 13740 . 13741) (nil font-lock-face web-mode-html-tag-bracket-face 13740 . 13741) (13740 . 14456)) nil (25820 50318 686766 501000) 0 nil])
([nil nil (("m" . -14260) (undo-tree-id632 . -1) (undo-tree-id633 . -1) ("d" . -14261) (undo-tree-id634 . -1) (undo-tree-id635 . -1) ("i" . -14262) (undo-tree-id636 . -1) (undo-tree-id637 . -1) ("-" . -14263) (undo-tree-id638 . -1) (undo-tree-id639 . -1) ("d" . -14264) (undo-tree-id640 . -1) (undo-tree-id641 . -1) ("e" . -14265) (undo-tree-id642 . -1) (undo-tree-id643 . -1) ("l" . -14266) (undo-tree-id644 . -1) (undo-tree-id645 . -1) ("e" . -14267) (undo-tree-id646 . -1) (undo-tree-id647 . -1) ("t" . -14268) (undo-tree-id648 . -1) (undo-tree-id649 . -1) ("e" . -14269) (undo-tree-id650 . -1) (undo-tree-id651 . -1) 14270) nil (25820 50318 686603 127000) 0 nil])
([nil nil ((14260 . 14273)) nil (25820 50318 686576 994000) 0 nil])
([nil nil ((33251 . 33260)) nil (25820 50318 686576 67000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -33258) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("r" 0 1 (part-side javascript)) . -33259) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 33260) nil (25820 50318 686574 244000) 0 nil])
([nil nil ((33258 . 33261)) nil (25820 50318 686566 487000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -33258) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("d" 0 1 (part-side javascript)) . -33259) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#(" " 0 1 (part-side javascript)) . -33260) (undo-tree-id627 . -1) 33261) nil (25820 50318 686564 733000) 0 nil])
([nil nil ((33258 . 33266)) nil (25820 50318 686556 62000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33265) (undo-tree-id621 . -1) 33266) nil (25820 50318 686554 790000) 0 nil])
([nil nil ((#("open_delte_filter_dialog(item)" 0 24 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t) 24 25 (tag-type start tag-name "v-btn" tag-attr t block-side t) 25 26 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 29 30 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 14168) (undo-tree-id619 . -30) (undo-tree-id620 . -30)) nil (25820 50318 686551 804000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14194 . 14195) (nil block-side t 14194 . 14195) (nil tag-attr t 14194 . 14195) (nil tag-name "v-btn" 14194 . 14195) (nil tag-type start 14194 . 14195) (nil block-side t 14193 . 14194) (nil tag-attr t 14193 . 14194) (nil tag-name "v-btn" 14193 . 14194) (nil tag-type start 14193 . 14194) (nil face web-mode-variable-name-face 14193 . 14194) (nil block-side t 14192 . 14193) (nil tag-attr t 14192 . 14193) (nil tag-name "v-btn" 14192 . 14193) (nil tag-type start 14192 . 14193) (nil face web-mode-variable-name-face 14192 . 14193) (nil block-side t 14191 . 14192) (nil tag-attr t 14191 . 14192) (nil tag-name "v-btn" 14191 . 14192) (nil tag-type start 14191 . 14192) (nil face web-mode-variable-name-face 14191 . 14192) (nil block-side t 14190 . 14191) (nil tag-attr t 14190 . 14191) (nil tag-name "v-btn" 14190 . 14191) (nil tag-type start 14190 . 14191) (nil face web-mode-variable-name-face 14190 . 14191) (nil block-side t 14189 . 14190) (nil tag-attr t 14189 . 14190) (nil tag-name "v-btn" 14189 . 14190) (nil tag-type start 14189 . 14190) (nil face web-mode-variable-name-face 14189 . 14190) (nil block-side t 14188 . 14189) (nil tag-attr t 14188 . 14189) (nil tag-name "v-btn" 14188 . 14189) (nil tag-type start 14188 . 14189) (nil face web-mode-variable-name-face 14188 . 14189) (nil block-side t 14187 . 14188) (nil tag-attr t 14187 . 14188) (nil tag-name "v-btn" 14187 . 14188) (nil tag-type start 14187 . 14188) (nil face web-mode-variable-name-face 14187 . 14188) (nil block-side t 14186 . 14187) (nil tag-attr t 14186 . 14187) (nil tag-name "v-btn" 14186 . 14187) (nil tag-type start 14186 . 14187) (nil face web-mode-variable-name-face 14186 . 14187) (nil block-side t 14185 . 14186) (nil tag-attr t 14185 . 14186) (nil tag-name "v-btn" 14185 . 14186) (nil tag-type start 14185 . 14186) (nil face web-mode-variable-name-face 14185 . 14186) (nil block-side t 14184 . 14185) (nil tag-attr t 14184 . 14185) (nil tag-name "v-btn" 14184 . 14185) (nil tag-type start 14184 . 14185) (nil face web-mode-variable-name-face 14184 . 14185) (nil block-side t 14183 . 14184) (nil tag-attr t 14183 . 14184) (nil tag-name "v-btn" 14183 . 14184) (nil tag-type start 14183 . 14184) (nil face web-mode-variable-name-face 14183 . 14184) (nil block-side t 14182 . 14183) (nil tag-attr t 14182 . 14183) (nil tag-name "v-btn" 14182 . 14183) (nil tag-type start 14182 . 14183) (nil face web-mode-variable-name-face 14182 . 14183) (nil block-side t 14181 . 14182) (nil tag-attr t 14181 . 14182) (nil tag-name "v-btn" 14181 . 14182) (nil tag-type start 14181 . 14182) (nil face web-mode-variable-name-face 14181 . 14182) (nil block-side t 14180 . 14181) (nil tag-attr t 14180 . 14181) (nil tag-name "v-btn" 14180 . 14181) (nil tag-type start 14180 . 14181) (nil face web-mode-variable-name-face 14180 . 14181) (nil block-side t 14179 . 14180) (nil tag-attr t 14179 . 14180) (nil tag-name "v-btn" 14179 . 14180) (nil tag-type start 14179 . 14180) (nil block-side t 14168 . 14179) (nil tag-attr t 14168 . 14179) (nil tag-name "v-btn" 14168 . 14179) (nil tag-type start 14168 . 14179) (nil face web-mode-function-call-face 14168 . 14179) (14168 . 14195)) nil (25820 50318 686543 867000) 0 nil])
([nil nil ((#("f" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14180) (undo-tree-id605 . -1) (#("i" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14181) (undo-tree-id606 . -1) (#("l" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14182) (undo-tree-id607 . -1) (#("t" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14183) (undo-tree-id608 . -1) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14184) (undo-tree-id609 . -1) (#("r" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14185) (undo-tree-id610 . -1) (#("_" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14186) (undo-tree-id611 . -1) (#("t" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14187) (undo-tree-id612 . -1) (#("r" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14188) (undo-tree-id613 . -1) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14189) (undo-tree-id614 . -1) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14190) (undo-tree-id615 . -1) (#("_" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14191) (undo-tree-id616 . -1) (#("i" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14192) (undo-tree-id617 . -1) (#("d" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14193) (undo-tree-id618 . -1) 14194) nil (25820 50318 686521 992000) 0 nil])
([nil nil ((14180 . 14188)) nil (25820 50318 686502 332000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -14187) (undo-tree-id604 . -1) 14188) nil (25820 50318 686501 139000) 0 nil])
([nil nil ((33554 . 33556) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -33554) (33554 . 33555)) nil (25820 50318 686498 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33568 . 33569) (nil part-side javascript 33555 . 33569) (33555 . 33569)) nil (25820 50318 686496 863000) 0 nil])
([nil nil ((33328 . 33330) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -33328) (33328 . 33329)) nil (25820 50318 686495 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33342 . 33343) (nil part-side javascript 33329 . 33343) (33329 . 33343)) nil (25820 50318 686493 543000) 0 nil])
([nil nil ((33258 . 33269)) nil (25820 50318 686492 287000) 0 nil])
([nil nil ((33269 . 33274)) nil (25820 50318 686491 372000) 0 nil])
([nil nil ((33269 . 33273)) nil (25820 50318 686490 430000) 0 nil])
([nil nil ((33277 . 33278)) nil (25820 50318 686489 453000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33286 . 33287) (nil part-side javascript 33286 . 33287) (nil face (rainbow-delimiters-depth-4-face) 33286 . 33287) (nil part-side javascript 33283 . 33286) (nil face web-mode-function-name-face 33283 . 33286) (nil part-side javascript 33278 . 33283) (33278 . 33287)) nil (25820 50318 686488 180000) 0 nil])
([nil nil ((33287 . 33288)) nil (25820 50318 686486 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33300 . 33301) (nil part-side javascript 33287 . 33301) (33287 . 33301)) nil (25820 50318 686484 831000) 0 nil])
([nil nil ((#("filter_tree_id" 0 13 (part-side javascript) 13 14 (part-side javascript rear-nonsticky t)) . 33374) (undo-tree-id602 . -14) (undo-tree-id603 . -14)) nil (25820 50318 686483 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33375 . 33376) (nil part-side javascript 33374 . 33376) (33374 . 33376)) nil (25820 50318 686479 497000) 0 nil])
([nil nil ((#("filter_tree_id" 0 13 (part-side javascript) 13 14 (part-side javascript rear-nonsticky t)) . 33604) (undo-tree-id600 . -14) (undo-tree-id601 . -14)) nil (25820 50318 686477 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33605 . 33606) (nil part-side javascript 33604 . 33606) (33604 . 33606)) nil (25820 50318 686466 886000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -33284) (#("                  " 0 18 (face whitespace-trailing)) . -13624) 33606) nil (25820 50318 686458 115000) 0 nil])
([nil nil ((7148 . 7153) (7126 . 7129) (7048 . 7049) (6962 . 6963) (6937 . 6938) (6918 . 6921) (6867 . 6868) (6829 . 6830) (6794 . 6795) (6773 . 6774) (6752 . 6753) (6728 . 6729) (6704 . 6707) (6621 . 7142) (#("<v-col class=\"pa-0 mt-3 pr-4\" sm=\"2\" md=\"2\" cols=\"2\" align=\"end\">
            <v-btn
              outlined
              small
              dense
              class=\"databuttons\"
              @click=\"edit_switch()\"
              :color=\"tree_edit ? 'black' : 'grey'\"
            >
              Edit Tree
              <v-icon right color=\"blue\" v-if=\"tree_edit\">mdi-toggle-switch</v-icon>
              <v-icon right color=\"grey\" v-else>mdi-toggle-switch-off</v-icon>
            </v-btn>
          </v-col>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 1 6 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 6 7 (tag-type start tag-name "v-col") 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 8 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 13 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 29 30 (tag-type start tag-name "v-col") 30 31 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 31 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 33 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 2 tag-attr t) 36 37 (tag-type start tag-name "v-col") 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 38 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 40 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 42 43 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 2 tag-attr t) 43 44 (tag-type start tag-name "v-col") 44 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 45 48 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 48 49 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 49 51 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 4 tag-attr t) 52 53 (tag-type start tag-name "v-col") 53 54 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 54 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 59 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 63 64 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 79 84 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 84 99 (tag-type start tag-name "v-btn") 99 100 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 100 106 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 106 107 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 107 122 (tag-type start tag-name "v-btn") 122 123 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 123 126 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 126 127 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 127 142 (tag-type start tag-name "v-btn") 142 143 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 143 146 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 146 147 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 147 162 (tag-type start tag-name "v-btn") 162 163 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 163 167 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 167 168 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 168 180 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 180 181 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t) 181 196 (tag-type start tag-name "v-btn") 196 197 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 197 198 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 198 199 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 199 200 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 200 201 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 201 202 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 202 203 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 203 204 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 204 215 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t) 215 217 (tag-type start tag-name "v-btn" tag-attr t block-side t) 217 218 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 6 tag-attr t block-token delimiter-end block-end t block-side t) 218 233 (tag-type start tag-name "v-btn") 233 234 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 234 235 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 235 236 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 236 237 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 237 238 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 238 239 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 239 240 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 240 241 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 241 242 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 242 243 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 243 244 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 244 245 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 245 246 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 246 247 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 247 248 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 248 249 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 249 250 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 250 254 (tag-type start tag-name "v-btn" tag-attr t block-side t) 254 255 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 255 256 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 256 257 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 257 258 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 258 259 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 259 264 (tag-type start tag-name "v-btn" tag-attr t block-side t) 264 265 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 265 266 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 266 267 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 267 268 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 268 269 (tag-type start tag-name "v-btn" tag-attr t block-side t) 269 270 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 6 tag-attr t block-token delimiter-end block-end t block-side t) 270 283 (tag-type start tag-name "v-btn") 283 284 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 323 324 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 324 330 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 330 331 (tag-type start tag-name "v-icon") 331 332 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 332 335 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 335 336 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 336 337 (tag-type start tag-name "v-icon") 337 338 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 338 342 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 342 343 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-icon" tag-attr t) 343 348 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t) 348 349 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr-end 5 tag-attr t) 349 350 (tag-type start tag-name "v-icon") 350 351 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2) 351 354 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t) 354 355 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-icon" tag-attr t) 355 365 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t) 365 366 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr-end 4 tag-attr t) 366 367 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 384 385 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 386 392 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 392 393 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 408 409 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 409 415 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 415 416 (tag-type start tag-name "v-icon") 416 417 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 417 420 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 420 421 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 421 422 (tag-type start tag-name "v-icon") 422 423 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 423 427 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 427 428 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-icon" tag-attr t) 428 433 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t) 433 434 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr-end 5 tag-attr t) 434 435 (tag-type start tag-name "v-icon") 435 436 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2) 436 440 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t) 440 441 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 441 442 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 463 464 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 464 465 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 465 471 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 471 472 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 485 486 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 486 487 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 487 492 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 504 505 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 505 506 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 506 511 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 511 512 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 6621) (undo-tree-id659 . -66) (undo-tree-id660 . -512) (undo-tree-id661 . -493) (undo-tree-id662 . -512) (t 25820 50318 715996 845000)) nil (25820 50363 493794 384000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6000) (undo-tree-id657 . -1) (undo-tree-id658 . -1) 6001) nil (25820 50363 493784 681000) 0 nil])
([nil nil ((6000 . 6001)) nil (25820 50363 493780 915000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6212) (undo-tree-id656 . -1) 6213) nil (25820 50363 493779 489000) 0 nil])
([nil nil ((6212 . 6213)) nil (25820 50363 493776 695000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6221) (undo-tree-id655 . -1) 6222) nil (25820 50363 493775 11000) 0 nil])
([nil nil ((6221 . 6222)) nil (25820 50363 493772 358000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6009) (undo-tree-id654 . -1) 6010) nil (25820 50363 493770 824000) 0 nil])
([nil nil ((6009 . 6010)) nil (25820 50363 493767 681000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -6205) (undo-tree-id653 . -1) 6206) nil (25820 50363 493766 121000) 0 nil])
([nil nil ((6205 . 6206)) nil (25820 50363 493762 698000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -5993) (undo-tree-id652 . -1) 5994) nil (25820 50363 493760 71000) 0 nil])
([nil nil ((5993 . 5994)) nil (25820 50363 493746 708000) 0 nil])
([nil nil ((#("
                          color=\"red_dark_3\"" 0 27 (tag-type start tag-name "v-btn") 27 28 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 28 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 33 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t)) . 14009) (undo-tree-id663 . -1) (undo-tree-id664 . -45) (undo-tree-id665 . -45) (t 25820 50363 523513 287000)) nil (25820 50397 169012 602000) 0 nil])
([nil nil ((33271 . 33282) (t 25820 50397 199150 3000)) nil (25820 50448 211549 223000) 0 nil])
([nil nil ((33282 . 33289)) nil (25820 50448 211547 554000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -33287) (undo-tree-id666 . -1) (#("." 0 1 (part-side javascript)) . -33288) (undo-tree-id667 . -1) 33289) nil (25820 50448 211545 875000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 33295) (33294 . 33295) (33293 . 33295) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33293) (33287 . 33294)) nil (25820 50448 211533 895000) 0 nil])
([nil nil ((33294 . 33296)) nil (25820 50448 211531 552000) 0 nil])
([nil nil ((33297 . 33308)) nil (25820 50448 211530 60000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 33321) (33320 . 33321) (33319 . 33321) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33319) (33308 . 33320)) nil (25820 50448 211527 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33335 . 33336) (nil part-side javascript 33335 . 33336) (nil face (rainbow-delimiters-depth-5-face) 33335 . 33336) (nil rear-nonsticky t 33334 . 33335) (nil part-side javascript 33334 . 33335) (nil part-side javascript 33333 . 33334) (nil part-side javascript 33332 . 33333) (nil face (rainbow-delimiters-depth-5-face) 33332 . 33333) (nil rear-nonsticky t 33331 . 33332) (nil part-side javascript 33331 . 33332) (nil part-side javascript 33324 . 33331) (nil part-side javascript 33320 . 33324) (nil face web-mode-constant-face 33320 . 33324) (33320 . 33336)) nil (25820 50448 211519 116000) 0 nil])
([nil nil ((33337 . 33348) (t 25820 50448 242599 568000)) nil (25820 50505 907966 695000) 0 nil])
([nil nil ((33348 . 33362)) nil (25820 50505 907965 409000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33361) (undo-tree-id702 . -1) 33362) nil (25820 50505 907963 879000) 0 nil])
([nil nil ((33361 . 33363)) nil (25820 50505 907961 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33378 . 33379) (nil part-side javascript 33378 . 33379) (nil face (rainbow-delimiters-depth-4-face) 33378 . 33379) (nil rear-nonsticky t 33377 . 33378) (nil part-side javascript 33377 . 33378) (nil part-side javascript 33376 . 33377) (nil part-side javascript 33375 . 33376) (nil face (rainbow-delimiters-depth-4-face) 33375 . 33376) (nil rear-nonsticky t 33374 . 33375) (nil part-side javascript 33374 . 33375) (nil part-side javascript 33367 . 33374) (nil part-side javascript 33363 . 33367) (nil face web-mode-constant-face 33363 . 33367) (33363 . 33379)) nil (25820 50505 907959 448000) 0 nil])
([nil nil ((33363 . 33365) (#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33363) (33363 . 33364)) nil (25820 50505 907955 47000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 33364)) nil (25820 50505 907953 420000) 0 nil])
([nil nil ((33380 . 33381)) nil (25820 50505 907951 989000) 0 nil])
([nil nil ((#("this.filters[id]" 0 4 (face web-mode-constant-face part-side javascript) 4 11 (part-side javascript) 11 12 (part-side javascript rear-nonsticky t) 12 13 (face (rainbow-delimiters-depth-5-face) part-side javascript) 13 14 (part-side javascript) 14 15 (part-side javascript rear-nonsticky t) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 33439) (undo-tree-id696 . -16) (undo-tree-id697 . -13) (undo-tree-id698 . -13) (undo-tree-id699 . -16) (undo-tree-id700 . -16) (undo-tree-id701 . -16)) nil (25820 50505 907950 310000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33446 . 33447) (nil part-side javascript 33439 . 33447) (33439 . 33447)) nil (25820 50505 907941 875000) 0 nil])
([nil nil ((#("this.filters[id]" 0 4 (face web-mode-constant-face part-side javascript) 4 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-5-face) part-side javascript) 13 14 (part-side javascript) 14 15 (part-side javascript rear-nonsticky t) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 33661) (undo-tree-id668 . -16) (undo-tree-id669 . -13) (undo-tree-id670 . -13) (undo-tree-id671 . -7) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -16) (undo-tree-id695 . -16)) nil (25820 50505 907937 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33668 . 33669) (nil part-side javascript 33661 . 33669) (33661 . 33669)) nil (25820 50505 907888 421000) 0 nil])
([nil nil ((33380 . 33390) (t 25820 50505 937977 692000)) nil (25820 50546 613371 459000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33389) (undo-tree-id703 . -1) 33390) nil (25820 50546 613365 489000) 0 nil])
([nil nil ((33390 . 33401) (t 25820 50546 641539 126000)) nil (25820 50569 337528 506000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 33414) (33413 . 33414) (33412 . 33414) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33412) (33401 . 33413)) nil (25820 50569 337526 422000) 0 nil])
([nil nil ((33413 . 33420)) nil (25820 50569 337523 775000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript)) . -33418) (undo-tree-id709 . -1) (#("r" 0 1 (part-side javascript)) . -33419) (undo-tree-id710 . -1) 33420) nil (25820 50569 337521 813000) 0 nil])
([nil nil ((33418 . 33422)) nil (25820 50569 337516 786000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33421) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 33422) nil (25820 50569 337511 240000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33389) (undo-tree-id715 . -1) 33390 (t 25820 50569 369294 289000)) nil (25820 50584 149778 977000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33363) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("t" 0 1 (face web-mode-constant-face part-side javascript)) . -33364) (undo-tree-id713 . -1) (undo-tree-id714 . -1) 33365) nil (25820 50584 149774 180000) 0 nil])
([nil nil ((33363 . 33364)) nil (25820 50584 149755 436000) 0 nil])
([nil nil ((30648 . 30657) (t 25820 50584 185134 709000)) nil (25820 50668 302721 997000) 0 nil])
([nil nil ((30657 . 30666)) nil (25820 50668 302720 653000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -30665) (undo-tree-id736 . -1) 30666) nil (25820 50668 302719 382000) 0 nil])
([nil nil ((30665 . 30672)) nil (25820 50668 302716 761000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -30671) (undo-tree-id735 . -1) 30672) nil (25820 50668 302715 48000) 0 nil])
([nil nil ((30671 . 30674)) nil (25820 50668 302712 359000) 0 nil])
([nil nil ((#("N" 0 1 (part-side javascript)) . -30673) (undo-tree-id734 . -1) 30674) nil (25820 50668 302710 967000) 0 nil])
([nil nil ((30673 . 30678)) nil (25820 50668 302707 550000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -30673) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("o" 0 1 (part-side javascript)) . -30674) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("n" 0 1 (part-side javascript)) . -30675) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#("e" 0 1 (part-side javascript)) . -30676) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#(" " 0 1 (part-side javascript)) . -30677) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 30678) nil (25820 50668 302704 518000) 0 nil])
([nil nil ((30673 . 30678)) nil (25820 50668 302687 572000) 0 nil])
([nil nil ((#("N" 0 1 (part-side javascript)) . -30673) (undo-tree-id719 . -1) (#("o" 0 1 (part-side javascript)) . -30674) (undo-tree-id720 . -1) (#("n" 0 1 (part-side javascript)) . -30675) (undo-tree-id721 . -1) (#("e" 0 1 (part-side javascript)) . -30676) (undo-tree-id722 . -1) (#(" " 0 1 (part-side javascript)) . -30677) (undo-tree-id723 . -1) 30678) nil (25820 50668 302684 930000) 0 nil])
([nil nil ((30673 . 30677)) nil (25820 50668 302675 589000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -30675) (undo-tree-id717 . -1) (#("l" 0 1 (part-side javascript)) . -30676) (undo-tree-id718 . -1) 30677) nil (25820 50668 302673 162000) 0 nil])
([nil nil ((30675 . 30678)) nil (25820 50668 302522 189000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -30677) (undo-tree-id716 . -1) 30678) nil (25820 50668 302519 716000) 0 nil])
([nil nil ((30677 . 30678)) nil (25820 50668 302502 436000) 0 nil])
([nil nil ((33693 . 33706)) nil (25820 50668 302501 169000) 0 nil])
([nil nil ((33706 . 33711)) nil (25820 50668 302500 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33724 . 33725) (nil part-side javascript 33711 . 33725) (33711 . 33725)) nil (25820 50668 302498 788000) 0 nil])
([nil nil ((33725 . 33728)) nil (25820 50668 302497 157000) 0 nil])
([nil nil ((33418 . 33429)) nil (25820 50668 302495 990000) 0 nil])
([nil nil ((33429 . 33440)) nil (25820 50668 302494 476000) 0 nil])
([nil nil ((33440 . 33442)) nil (25820 50668 305315 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33466 . 33467) (nil part-side javascript 33458 . 33467) (nil rear-nonsticky t 33457 . 33458) (nil part-side javascript 33457 . 33458) (nil face (rainbow-delimiters-depth-4-face) 33457 . 33458) (nil part-side javascript 33455 . 33457) (nil part-side javascript 33454 . 33455) (nil face (rainbow-delimiters-depth-4-face) 33454 . 33455) (nil part-side javascript 33446 . 33454) (nil part-side javascript 33443 . 33446) (nil face web-mode-constant-face 33443 . 33446) (nil part-side javascript 33442 . 33443) (nil face web-mode-constant-face 33442 . 33443) (33442 . 33467)) nil (25820 50873 147301 348000) 0 nil] [nil nil ((nil rear-nonsticky nil 33455 . 33456) (nil part-side javascript 33442 . 33456) (33442 . 33456)) ((#("tree_edit_name" 0 13 (part-side javascript) 13 14 (part-side javascript rear-nonsticky nil)) . 33442) (undo-tree-id737 . -14) (nil rear-nonsticky t 33455 . 33456)) (25820 50668 302482 67000) 0 nil])
([nil nil ((#("children" 0 7 (part-side javascript) 7 8 (part-side javascript rear-nonsticky t)) . 33459) (undo-tree-id752 . -8) (undo-tree-id753 . -8)) nil (25820 50873 147290 764000) 0 nil])
nil
([nil nil ((33459 . 33464)) nil (25820 50873 147283 877000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33463) (undo-tree-id751 . -1) 33464) nil (25820 50873 147280 463000) 0 nil])
([nil nil ((33773 . 33778)) nil (25820 50873 147275 537000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33777) (undo-tree-id750 . -1) 33778) nil (25820 50873 147272 341000) 0 nil])
([nil nil ((14629 . 14644)) nil (25820 50873 147264 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15058 . 15059) (nil tag-name "v-toolbar" 15058 . 15059) (nil tag-type end 15058 . 15059) (nil tag-end t 15058 . 15059) (nil font-lock-face web-mode-html-tag-bracket-face 15058 . 15059) (nil tag-name "v-toolbar" 15049 . 15058) (nil tag-type end 15049 . 15058) (nil font-lock-face web-mode-html-tag-custom-face 15049 . 15058) (nil tag-name "v-toolbar" 15048 . 15049) (nil tag-type end 15048 . 15049) (nil font-lock-face web-mode-html-tag-bracket-face 15048 . 15049) (nil tag-name "v-toolbar" 15047 . 15048) (nil tag-type end 15047 . 15048) (nil tag-beg 22 15047 . 15048) (nil font-lock-face web-mode-html-tag-bracket-face 15047 . 15048) (nil tag-name "v-btn" 15039 . 15040) (nil tag-type end 15039 . 15040) (nil tag-end t 15039 . 15040) (nil font-lock-face web-mode-html-tag-bracket-face 15039 . 15040) (nil tag-name "v-btn" 15034 . 15039) (nil tag-type end 15034 . 15039) (nil font-lock-face web-mode-html-tag-custom-face 15034 . 15039) (nil tag-name "v-btn" 15033 . 15034) (nil tag-type end 15033 . 15034) (nil font-lock-face web-mode-html-tag-bracket-face 15033 . 15034) (nil tag-name "v-btn" 15032 . 15033) (nil tag-type end 15032 . 15033) (nil tag-beg 22 15032 . 15033) (nil font-lock-face web-mode-html-tag-bracket-face 15032 . 15033) (nil tag-name "v-icon" 15022 . 15023) (nil tag-type end 15022 . 15023) (nil tag-end t 15022 . 15023) (nil font-lock-face web-mode-html-tag-bracket-face 15022 . 15023) (nil tag-name "v-icon" 15016 . 15022) (nil tag-type end 15016 . 15022) (nil font-lock-face web-mode-html-tag-custom-face 15016 . 15022) (nil tag-name "v-icon" 15015 . 15016) (nil tag-type end 15015 . 15016) (nil font-lock-face web-mode-html-tag-bracket-face 15015 . 15016) (nil tag-name "v-icon" 15014 . 15015) (nil tag-type end 15014 . 15015) (nil tag-beg 22 15014 . 15015) (nil font-lock-face web-mode-html-tag-bracket-face 15014 . 15015) (nil tag-name "v-icon" 14996 . 14997) (nil tag-type start 14996 . 14997) (nil tag-end t 14996 . 14997) (nil font-lock-face web-mode-html-tag-bracket-face 14996 . 14997) (nil tag-name "v-icon" 14990 . 14996) (nil tag-type start 14990 . 14996) (nil font-lock-face web-mode-html-tag-custom-face 14990 . 14996) (nil tag-name "v-icon" 14989 . 14990) (nil tag-type start 14989 . 14990) (nil tag-beg 18 14989 . 14990) (nil font-lock-face web-mode-html-tag-bracket-face 14989 . 14990) (nil tag-name "v-btn" 14977 . 14978) (nil tag-type start 14977 . 14978) (nil tag-end t 14977 . 14978) (nil font-lock-face web-mode-html-tag-bracket-face 14977 . 14978) (nil tag-attr t 14976 . 14977) (nil tag-attr-end 0 14976 . 14977) (nil tag-name "v-btn" 14976 . 14977) (nil tag-type start 14976 . 14977) (nil font-lock-face web-mode-html-attr-name-face 14976 . 14977) (nil tag-attr t 14974 . 14976) (nil tag-name "v-btn" 14974 . 14976) (nil tag-type start 14974 . 14976) (nil font-lock-face web-mode-html-attr-name-face 14974 . 14976) (nil tag-attr-beg 0 14973 . 14974) (nil tag-attr t 14973 . 14974) (nil tag-name "v-btn" 14973 . 14974) (nil tag-type start 14973 . 14974) (nil font-lock-face web-mode-html-attr-name-face 14973 . 14974) (nil tag-name "v-btn" 14972 . 14973) (nil tag-type start 14972 . 14973) (nil tag-name "v-btn" 14967 . 14972) (nil tag-type start 14967 . 14972) (nil font-lock-face web-mode-html-tag-custom-face 14967 . 14972) (nil tag-name "v-btn" 14966 . 14967) (nil tag-type start 14966 . 14967) (nil tag-beg 19 14966 . 14967) (nil font-lock-face web-mode-html-tag-bracket-face 14966 . 14967) (nil face whitespace-trailing 14955 . 14957) (nil tag-name "v-btn" 14953 . 14954) (nil tag-type end 14953 . 14954) (nil tag-end t 14953 . 14954) (nil font-lock-face web-mode-html-tag-bracket-face 14953 . 14954) (nil tag-name "v-btn" 14948 . 14953) (nil tag-type end 14948 . 14953) (nil font-lock-face web-mode-html-tag-custom-face 14948 . 14953) (nil tag-name "v-btn" 14947 . 14948) (nil tag-type end 14947 . 14948) (nil font-lock-face web-mode-html-tag-bracket-face 14947 . 14948) (nil tag-name "v-btn" 14946 . 14947) (nil tag-type end 14946 . 14947) (nil tag-beg 22 14946 . 14947) (nil font-lock-face web-mode-html-tag-bracket-face 14946 . 14947) (nil tag-name "v-icon" 14936 . 14937) (nil tag-type end 14936 . 14937) (nil tag-end t 14936 . 14937) (nil font-lock-face web-mode-html-tag-bracket-face 14936 . 14937) (nil tag-name "v-icon" 14930 . 14936) (nil tag-type end 14930 . 14936) (nil font-lock-face web-mode-html-tag-custom-face 14930 . 14936) (nil tag-name "v-icon" 14929 . 14930) (nil tag-type end 14929 . 14930) (nil font-lock-face web-mode-html-tag-bracket-face 14929 . 14930) (nil tag-name "v-icon" 14928 . 14929) (nil tag-type end 14928 . 14929) (nil tag-beg 22 14928 . 14929) (nil font-lock-face web-mode-html-tag-bracket-face 14928 . 14929) (nil tag-name "v-icon" 14918 . 14919) (nil tag-type start 14918 . 14919) (nil tag-end t 14918 . 14919) (nil font-lock-face web-mode-html-tag-bracket-face 14918 . 14919) (nil tag-name "v-icon" 14912 . 14918) (nil tag-type start 14912 . 14918) (nil font-lock-face web-mode-html-tag-custom-face 14912 . 14918) (nil tag-name "v-icon" 14911 . 14912) (nil tag-type start 14911 . 14912) (nil tag-beg 18 14911 . 14912) (nil font-lock-face web-mode-html-tag-bracket-face 14911 . 14912) (nil tag-name "v-btn" 14899 . 14900) (nil tag-type start 14899 . 14900) (nil tag-end t 14899 . 14900) (nil font-lock-face web-mode-html-tag-bracket-face 14899 . 14900) (nil tag-attr t 14898 . 14899) (nil tag-attr-end 0 14898 . 14899) (nil tag-name "v-btn" 14898 . 14899) (nil tag-type start 14898 . 14899) (nil font-lock-face web-mode-html-attr-name-face 14898 . 14899) (nil tag-attr t 14896 . 14898) (nil tag-name "v-btn" 14896 . 14898) (nil tag-type start 14896 . 14898) (nil font-lock-face web-mode-html-attr-name-face 14896 . 14898) (nil tag-attr-beg 0 14895 . 14896) (nil tag-attr t 14895 . 14896) (nil tag-name "v-btn" 14895 . 14896) (nil tag-type start 14895 . 14896) (nil font-lock-face web-mode-html-attr-name-face 14895 . 14896) (nil tag-name "v-btn" 14894 . 14895) (nil tag-type start 14894 . 14895) (nil tag-name "v-btn" 14889 . 14894) (nil tag-type start 14889 . 14894) (nil font-lock-face web-mode-html-tag-custom-face 14889 . 14894) (nil tag-name "v-btn" 14888 . 14889) (nil tag-type start 14888 . 14889) (nil tag-beg 19 14888 . 14889) (nil font-lock-face web-mode-html-tag-bracket-face 14888 . 14889) (nil face whitespace-trailing 14877 . 14879) (nil tag-name "v-btn" 14875 . 14876) (nil tag-type end 14875 . 14876) (nil tag-end t 14875 . 14876) (nil font-lock-face web-mode-html-tag-bracket-face 14875 . 14876) (nil tag-name "v-btn" 14870 . 14875) (nil tag-type end 14870 . 14875) (nil font-lock-face web-mode-html-tag-custom-face 14870 . 14875) (nil tag-name "v-btn" 14869 . 14870) (nil tag-type end 14869 . 14870) (nil font-lock-face web-mode-html-tag-bracket-face 14869 . 14870) (nil tag-name "v-btn" 14868 . 14869) (nil tag-type end 14868 . 14869) (nil tag-beg 22 14868 . 14869) (nil font-lock-face web-mode-html-tag-bracket-face 14868 . 14869) (nil tag-name "v-icon" 14858 . 14859) (nil tag-type end 14858 . 14859) (nil tag-end t 14858 . 14859) (nil font-lock-face web-mode-html-tag-bracket-face 14858 . 14859) (nil tag-name "v-icon" 14852 . 14858) (nil tag-type end 14852 . 14858) (nil font-lock-face web-mode-html-tag-custom-face 14852 . 14858) (nil tag-name "v-icon" 14851 . 14852) (nil tag-type end 14851 . 14852) (nil font-lock-face web-mode-html-tag-bracket-face 14851 . 14852) (nil tag-name "v-icon" 14850 . 14851) (nil tag-type end 14850 . 14851) (nil tag-beg 22 14850 . 14851) (nil font-lock-face web-mode-html-tag-bracket-face 14850 . 14851) (nil tag-name "v-icon" 14838 . 14839) (nil tag-type start 14838 . 14839) (nil tag-end t 14838 . 14839) (nil font-lock-face web-mode-html-tag-bracket-face 14838 . 14839) (nil tag-name "v-icon" 14832 . 14838) (nil tag-type start 14832 . 14838) (nil font-lock-face web-mode-html-tag-custom-face 14832 . 14838) (nil tag-name "v-icon" 14831 . 14832) (nil tag-type start 14831 . 14832) (nil tag-beg 18 14831 . 14832) (nil font-lock-face web-mode-html-tag-bracket-face 14831 . 14832) (nil tag-name "v-btn" 14819 . 14820) (nil tag-type start 14819 . 14820) (nil tag-end t 14819 . 14820) (nil font-lock-face web-mode-html-tag-bracket-face 14819 . 14820) (nil tag-attr t 14818 . 14819) (nil tag-attr-end 0 14818 . 14819) (nil tag-name "v-btn" 14818 . 14819) (nil tag-type start 14818 . 14819) (nil font-lock-face web-mode-html-attr-name-face 14818 . 14819) (nil tag-attr t 14816 . 14818) (nil tag-name "v-btn" 14816 . 14818) (nil tag-type start 14816 . 14818) (nil font-lock-face web-mode-html-attr-name-face 14816 . 14818) (nil tag-attr-beg 0 14815 . 14816) (nil tag-attr t 14815 . 14816) (nil tag-name "v-btn" 14815 . 14816) (nil tag-type start 14815 . 14816) (nil font-lock-face web-mode-html-attr-name-face 14815 . 14816) (nil tag-name "v-btn" 14814 . 14815) (nil tag-type start 14814 . 14815) (nil tag-name "v-btn" 14809 . 14814) (nil tag-type start 14809 . 14814) (nil font-lock-face web-mode-html-tag-custom-face 14809 . 14814) (nil tag-name "v-btn" 14808 . 14809) (nil tag-type start 14808 . 14809) (nil tag-beg 19 14808 . 14809) (nil font-lock-face web-mode-html-tag-bracket-face 14808 . 14809) (nil face whitespace-trailing 14797 . 14799) (nil tag-name "v-spacer" 14795 . 14796) (nil tag-type end 14795 . 14796) (nil tag-end t 14795 . 14796) (nil font-lock-face web-mode-html-tag-bracket-face 14795 . 14796) (nil tag-name "v-spacer" 14787 . 14795) (nil tag-type end 14787 . 14795) (nil font-lock-face web-mode-html-tag-custom-face 14787 . 14795) (nil tag-name "v-spacer" 14786 . 14787) (nil tag-type end 14786 . 14787) (nil font-lock-face web-mode-html-tag-bracket-face 14786 . 14787) (nil tag-name "v-spacer" 14785 . 14786) (nil tag-type end 14785 . 14786) (nil tag-beg 22 14785 . 14786) (nil font-lock-face web-mode-html-tag-bracket-face 14785 . 14786) (nil tag-name "v-spacer" 14784 . 14785) (nil tag-type start 14784 . 14785) (nil tag-end t 14784 . 14785) (nil font-lock-face web-mode-html-tag-bracket-face 14784 . 14785) (nil tag-name "v-spacer" 14776 . 14784) (nil tag-type start 14776 . 14784) (nil font-lock-face web-mode-html-tag-custom-face 14776 . 14784) (nil tag-name "v-spacer" 14775 . 14776) (nil tag-type start 14775 . 14776) (nil tag-beg 18 14775 . 14776) (nil font-lock-face web-mode-html-tag-bracket-face 14775 . 14776) (nil face whitespace-trailing 14764 . 14766) (nil tag-name "v-toolbar-title" 14762 . 14763) (nil tag-type end 14762 . 14763) (nil tag-end t 14762 . 14763) (nil font-lock-face web-mode-html-tag-bracket-face 14762 . 14763) (nil tag-name "v-toolbar-title" 14747 . 14762) (nil tag-type end 14747 . 14762) (nil font-lock-face web-mode-html-tag-custom-face 14747 . 14762) (nil tag-name "v-toolbar-title" 14746 . 14747) (nil tag-type end 14746 . 14747) (nil font-lock-face web-mode-html-tag-bracket-face 14746 . 14747) (nil tag-name "v-toolbar-title" 14745 . 14746) (nil tag-type end 14745 . 14746) (nil tag-beg 22 14745 . 14746) (nil font-lock-face web-mode-html-tag-bracket-face 14745 . 14746) (nil tag-name "v-toolbar-title" 14739 . 14740) (nil tag-type start 14739 . 14740) (nil tag-end t 14739 . 14740) (nil font-lock-face web-mode-html-tag-bracket-face 14739 . 14740) (nil tag-name "v-toolbar-title" 14724 . 14739) (nil tag-type start 14724 . 14739) (nil font-lock-face web-mode-html-tag-custom-face 14724 . 14739) (nil tag-name "v-toolbar-title" 14723 . 14724) (nil tag-type start 14723 . 14724) (nil tag-beg 18 14723 . 14724) (nil font-lock-face web-mode-html-tag-bracket-face 14723 . 14724) (nil face whitespace-trailing 14712 . 14714) (nil tag-name "v-app-bar-nav-icon" 14710 . 14711) (nil tag-type end 14710 . 14711) (nil tag-end t 14710 . 14711) (nil font-lock-face web-mode-html-tag-bracket-face 14710 . 14711) (nil tag-name "v-app-bar-nav-icon" 14692 . 14710) (nil tag-type end 14692 . 14710) (nil font-lock-face web-mode-html-tag-custom-face 14692 . 14710) (nil tag-name "v-app-bar-nav-icon" 14691 . 14692) (nil tag-type end 14691 . 14692) (nil font-lock-face web-mode-html-tag-bracket-face 14691 . 14692) (nil tag-name "v-app-bar-nav-icon" 14690 . 14691) (nil tag-type end 14690 . 14691) (nil tag-beg 22 14690 . 14691) (nil font-lock-face web-mode-html-tag-bracket-face 14690 . 14691) (nil tag-name "v-app-bar-nav-icon" 14689 . 14690) (nil tag-type start 14689 . 14690) (nil tag-end t 14689 . 14690) (nil font-lock-face web-mode-html-tag-bracket-face 14689 . 14690) (nil tag-name "v-app-bar-nav-icon" 14671 . 14689) (nil tag-type start 14671 . 14689) (nil font-lock-face web-mode-html-tag-custom-face 14671 . 14689) (nil tag-name "v-app-bar-nav-icon" 14670 . 14671) (nil tag-type start 14670 . 14671) (nil tag-beg 18 14670 . 14671) (nil font-lock-face web-mode-html-tag-bracket-face 14670 . 14671) (nil tag-name "v-toolbar" 14660 . 14661) (nil tag-type start 14660 . 14661) (nil tag-end t 14660 . 14661) (nil font-lock-face web-mode-html-tag-bracket-face 14660 . 14661) (nil tag-attr t 14659 . 14660) (nil tag-attr-end 0 14659 . 14660) (nil tag-name "v-toolbar" 14659 . 14660) (nil tag-type start 14659 . 14660) (nil font-lock-face web-mode-html-attr-name-face 14659 . 14660) (nil tag-attr t 14656 . 14659) (nil tag-name "v-toolbar" 14656 . 14659) (nil tag-type start 14656 . 14659) (nil font-lock-face web-mode-html-attr-name-face 14656 . 14659) (nil tag-attr-beg 0 14655 . 14656) (nil tag-attr t 14655 . 14656) (nil tag-name "v-toolbar" 14655 . 14656) (nil tag-type start 14655 . 14656) (nil font-lock-face web-mode-html-attr-name-face 14655 . 14656) (nil tag-name "v-toolbar" 14654 . 14655) (nil tag-type start 14654 . 14655) (nil tag-name "v-toolbar" 14645 . 14654) (nil tag-type start 14645 . 14654) (nil font-lock-face web-mode-html-tag-custom-face 14645 . 14654) (nil tag-name "v-toolbar" 14644 . 14645) (nil tag-type start 14644 . 14645) (nil tag-beg 19 14644 . 14645) (nil font-lock-face web-mode-html-tag-bracket-face 14644 . 14645) (14644 . 15059)) nil (25820 50873 147230 650000) 0 nil])
([nil nil ((15207 . 15221) ("      " . 15207) (15182 . 15198) ("        " . 15182) (15129 . 15147) ("          " . 15129) (15100 . 15116) ("        " . 15100) (15083 . 15099) (#("  " 0 2 (face whitespace-trailing)) . 15083) (15058 . 15074) ("        " . 15058) (15013 . 15031) ("          " . 15013) (14984 . 15000) ("        " . 14984) (14967 . 14983) (#("  " 0 2 (face whitespace-trailing)) . 14967) (14942 . 14958) ("        " . 14942) (14895 . 14913) ("          " . 14895) (14866 . 14882) ("        " . 14866) (14849 . 14865) (#("  " 0 2 (face whitespace-trailing)) . 14849) (14811 . 14827) ("        " . 14811) (14794 . 14810) (#("  " 0 2 (face whitespace-trailing)) . 14794) (14737 . 14753) ("        " . 14737) (14720 . 14736) (#("  " 0 2 (face whitespace-trailing)) . 14720) (14662 . 14678) ("        " . 14662) 14630) nil (25820 50873 147058 316000) 0 nil])
([nil nil ((#("
                <v-app-bar-nav-icon></v-app-bar-nav-icon>" 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-app-bar-nav-icon") 18 36 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-app-bar-nav-icon") 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-app-bar-nav-icon") 37 38 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-app-bar-nav-icon") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-app-bar-nav-icon") 39 57 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-app-bar-nav-icon") 57 58 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-app-bar-nav-icon")) . 14661) (undo-tree-id747 . -1) (undo-tree-id748 . -58) (undo-tree-id749 . -58)) nil (25820 50873 147040 4000) 0 nil])
([nil nil (("
" . 14661) (undo-tree-id746 . -1)) nil (25820 50873 147026 402000) 0 nil])
([nil nil ((14718 . 14719) (14712 . 14713) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -14712) (14712 . 14713) (14717 . 14718) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . 14712) (14711 . 14712) (14711 . 14712)) nil (25820 50873 146921 248000) 0 nil])
([nil nil ((#("e" 0 1 (face web-mode-variable-name-face block-side t)) . 14713) (undo-tree-id745 . -1) (#("l" 0 1 (face web-mode-variable-name-face block-side t)) . 14713) (#("t" 0 1 (face web-mode-variable-name-face block-side t)) . 14713) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 14713) (#("T" 0 1 (face web-mode-variable-name-face block-side t)) . 14713)) nil (25820 50873 146915 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14726 . 14727) (nil rear-nonsticky t 14726 . 14727) (nil block-side t 14726 . 14727) (nil face web-mode-variable-name-face 14726 . 14727) (nil block-side t 14725 . 14726) (nil face web-mode-variable-name-face 14725 . 14726) (nil block-side t 14724 . 14725) (nil face web-mode-variable-name-face 14724 . 14725) (nil block-side t 14723 . 14724) (nil face web-mode-variable-name-face 14723 . 14724) (nil block-side t 14722 . 14723) (nil face web-mode-variable-name-face 14722 . 14723) (nil block-side t 14721 . 14722) (nil face web-mode-variable-name-face 14721 . 14722) (nil block-side t 14720 . 14721) (nil face web-mode-variable-name-face 14720 . 14721) (nil block-side t 14719 . 14720) (nil face web-mode-variable-name-face 14719 . 14720) (nil block-side t 14718 . 14719) (nil face web-mode-variable-name-face 14718 . 14719) (nil block-side t 14717 . 14718) (nil face web-mode-variable-name-face 14717 . 14718) (nil block-side t 14716 . 14717) (nil face web-mode-variable-name-face 14716 . 14717) (nil block-side t 14715 . 14716) (nil face web-mode-variable-name-face 14715 . 14716) (nil block-side t 14714 . 14715) (nil face web-mode-variable-name-face 14714 . 14715) (nil block-side t 14713 . 14714) (nil face web-mode-variable-name-face 14713 . 14714) (14713 . 14727)) nil (25820 50873 146905 535000) 0 nil])
([nil nil (("mdi-magnify" . 14875) (undo-tree-id743 . -11) (undo-tree-id744 . -11)) nil (25820 50873 146888 688000) 0 nil])
([nil nil ((14875 . 14883)) nil (25820 50873 146881 56000) 0 nil])
([nil nil (("i" . -14879) (undo-tree-id739 . -1) ("c" . -14880) (undo-tree-id740 . -1) ("o" . -14881) (undo-tree-id741 . -1) ("n" . -14882) (undo-tree-id742 . -1) 14883) nil (25820 50873 146875 753000) 0 nil])
([nil nil ((14879 . 14884)) nil (25820 50873 146859 838000) 0 nil])
([nil nil ((" " . -14883) (undo-tree-id738 . -1) 14884) nil (25820 50873 146855 757000) 0 nil])
([nil nil ((#("                " 0 16 (face whitespace-trailing)) . -14970) (#("                " 0 16 (face whitespace-trailing)) . -14870) (#("                " 0 16 (face whitespace-trailing)) . -14771) (#("                " 0 16 (face whitespace-trailing)) . -14732) (#("                " 0 16 (face whitespace-trailing)) . -14661) 14883) nil (25820 50873 146822 934000) 0 nil])
([nil nil ((14702 . 14705) (14694 . 14703) (t 25820 50873 177819 876000)) nil (25820 50899 834844 785000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14702) (undo-tree-id773 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14703) (undo-tree-id774 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14704) (undo-tree-id775 . -1) 14705) nil (25820 50899 834840 544000) 0 nil])
([nil nil ((14702 . 14704)) nil (25820 50899 834828 169000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14703) (undo-tree-id772 . -1) 14704) nil (25820 50899 834825 952000) 0 nil])
([nil nil ((14703 . 14706)) nil (25820 50899 834821 975000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14705) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 14706) nil (25820 50899 834815 675000) 0 nil])
([nil nil ((14705 . 14706)) nil (25820 50899 834739 815000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14702) (undo-tree-id777 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14703) (undo-tree-id778 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14704) (undo-tree-id779 . -1) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14705) (undo-tree-id780 . -1) 14706 (t 25820 50899 869479 976000)) nil (25820 50910 887406 473000) 0 nil])
([nil nil ((14702 . 14706)) nil (25820 50910 887398 681000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t)) . -14705) (undo-tree-id776 . -1) 14706) nil (25820 50910 887396 120000) 0 nil])
([nil nil ((14705 . 14706)) nil (25820 50910 887379 133000) 0 nil])
([nil nil ((#("class=\"pb-5\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar-title" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar-title" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar-title" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar-title" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar-title" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-toolbar-title" tag-attr t) 6 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar-title" tag-attr-end 5 tag-attr t)) . 14695) (undo-tree-id785 . -12) (undo-tree-id786 . -3) (undo-tree-id787 . -4) (undo-tree-id788 . -12) (t 25820 50910 917339 982000)) nil (25820 50949 611989 360000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-toolbar-title")) . -14694) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) 14695) nil (25820 50949 611982 274000) 0 nil])
([nil nil ((14654 . 14655)) nil (25820 50949 611967 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14666 . 14667) (nil tag-attr t 14666 . 14667) (nil tag-attr-end 5 14666 . 14667) (nil tag-name "v-toolbar" 14666 . 14667) (nil tag-type start 14666 . 14667) (nil font-lock-face web-mode-html-attr-value-face 14666 . 14667) (nil tag-attr t 14661 . 14666) (nil tag-name "v-toolbar" 14661 . 14666) (nil tag-type start 14661 . 14666) (nil font-lock-face web-mode-html-attr-value-face 14661 . 14666) (nil tag-attr t 14660 . 14661) (nil tag-name "v-toolbar" 14660 . 14661) (nil tag-type start 14660 . 14661) (nil font-lock-face web-mode-html-attr-equal-face 14660 . 14661) (nil tag-attr t 14659 . 14660) (nil tag-name "v-toolbar" 14659 . 14660) (nil tag-type start 14659 . 14660) (nil font-lock-face web-mode-html-attr-name-face 14659 . 14660) (nil tag-attr t 14658 . 14659) (nil tag-name "v-toolbar" 14658 . 14659) (nil tag-type start 14658 . 14659) (nil font-lock-face web-mode-html-attr-name-face 14658 . 14659) (nil tag-attr t 14657 . 14658) (nil tag-name "v-toolbar" 14657 . 14658) (nil tag-type start 14657 . 14658) (nil font-lock-face web-mode-html-attr-name-face 14657 . 14658) (nil tag-attr t 14656 . 14657) (nil tag-name "v-toolbar" 14656 . 14657) (nil tag-type start 14656 . 14657) (nil font-lock-face web-mode-html-attr-name-face 14656 . 14657) (nil tag-attr-beg 0 14655 . 14656) (nil tag-attr t 14655 . 14656) (nil tag-name "v-toolbar" 14655 . 14656) (nil tag-type start 14655 . 14656) (nil font-lock-face web-mode-html-attr-name-face 14655 . 14656) (14655 . 14667)) nil (25820 50949 611958 960000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar" tag-attr t)) . -14662) (undo-tree-id789 . -1) 14663 (t 25820 50949 636852 402000)) nil (25820 50962 222203 39000) 0 nil])
([nil nil ((14662 . 14663)) nil (25820 50962 222184 958000) 0 nil])
([nil nil ((14674 . 14691) (t 25820 50962 252694 521000)) nil (25820 51069 413085 415000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14771 . 14772) (nil tag-name "v-btn" 14771 . 14772) (nil tag-type end 14771 . 14772) (nil tag-end t 14771 . 14772) (nil font-lock-face web-mode-html-tag-bracket-face 14771 . 14772) (nil tag-name "v-btn" 14766 . 14771) (nil tag-type end 14766 . 14771) (nil font-lock-face web-mode-html-tag-custom-face 14766 . 14771) (nil tag-name "v-btn" 14765 . 14766) (nil tag-type end 14765 . 14766) (nil font-lock-face web-mode-html-tag-bracket-face 14765 . 14766) (nil tag-name "v-btn" 14764 . 14765) (nil tag-type end 14764 . 14765) (nil tag-beg 22 14764 . 14765) (nil font-lock-face web-mode-html-tag-bracket-face 14764 . 14765) (nil tag-name "v-icon" 14746 . 14747) (nil tag-type end 14746 . 14747) (nil tag-end t 14746 . 14747) (nil font-lock-face web-mode-html-tag-bracket-face 14746 . 14747) (nil tag-name "v-icon" 14740 . 14746) (nil tag-type end 14740 . 14746) (nil font-lock-face web-mode-html-tag-custom-face 14740 . 14746) (nil tag-name "v-icon" 14739 . 14740) (nil tag-type end 14739 . 14740) (nil font-lock-face web-mode-html-tag-bracket-face 14739 . 14740) (nil tag-name "v-icon" 14738 . 14739) (nil tag-type end 14738 . 14739) (nil tag-beg 22 14738 . 14739) (nil font-lock-face web-mode-html-tag-bracket-face 14738 . 14739) (nil tag-name "v-icon" 14729 . 14730) (nil tag-type start 14729 . 14730) (nil tag-end t 14729 . 14730) (nil font-lock-face web-mode-html-tag-bracket-face 14729 . 14730) (nil tag-name "v-icon" 14723 . 14729) (nil tag-type start 14723 . 14729) (nil font-lock-face web-mode-html-tag-custom-face 14723 . 14729) (nil tag-name "v-icon" 14722 . 14723) (nil tag-type start 14722 . 14723) (nil tag-beg 18 14722 . 14723) (nil font-lock-face web-mode-html-tag-bracket-face 14722 . 14723) (nil tag-name "v-btn" 14702 . 14703) (nil tag-type start 14702 . 14703) (nil tag-end t 14702 . 14703) (nil font-lock-face web-mode-html-tag-bracket-face 14702 . 14703) (nil tag-attr t 14701 . 14702) (nil tag-attr-end 0 14701 . 14702) (nil tag-name "v-btn" 14701 . 14702) (nil tag-type start 14701 . 14702) (nil font-lock-face web-mode-html-attr-name-face 14701 . 14702) (nil tag-attr t 14699 . 14701) (nil tag-name "v-btn" 14699 . 14701) (nil tag-type start 14699 . 14701) (nil font-lock-face web-mode-html-attr-name-face 14699 . 14701) (nil tag-attr-beg 0 14698 . 14699) (nil tag-attr t 14698 . 14699) (nil tag-name "v-btn" 14698 . 14699) (nil tag-type start 14698 . 14699) (nil font-lock-face web-mode-html-attr-name-face 14698 . 14699) (nil tag-name "v-btn" 14697 . 14698) (nil tag-type start 14697 . 14698) (nil tag-name "v-btn" 14692 . 14697) (nil tag-type start 14692 . 14697) (nil font-lock-face web-mode-html-tag-custom-face 14692 . 14697) (nil tag-name "v-btn" 14691 . 14692) (nil tag-type start 14691 . 14692) (nil tag-beg 19 14691 . 14692) (nil font-lock-face web-mode-html-tag-bracket-face 14691 . 14692) (14691 . 14772)) nil (25820 51069 413080 638000) 0 nil])
([nil nil ((14702 . 14708)) nil (25820 51069 413064 71000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-btn")) . -14707) (undo-tree-id810 . -1) 14708) nil (25820 51069 413062 945000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-bticon")) . -14695) (undo-tree-id807 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btnicon")) . -14696) (undo-tree-id808 . -1) (#(" " 0 1 (tag-type start tag-name "v-btn")) . -14697) (undo-tree-id809 . -1) 14698) nil (25820 51069 413059 964000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-bicon")) . -14694) (undo-tree-id806 . -1) 14695) nil (25820 51069 413054 851000) 0 nil])
([nil nil ((#("                <v-icon left>" 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 17 19 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 19 20 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 20 22 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 22 23 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 23 24 (tag-type start tag-name "v-icon") 24 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 25 26 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 26 27 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon")) . 14675) (undo-tree-id802 . -29) (undo-tree-id803 . -27) (undo-tree-id804 . -16) (undo-tree-id805 . -29)) nil (25820 51069 413052 69000) 0 nil])
([nil nil (("
" . -14674) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) 14675) nil (25820 51069 413046 294000) 0 nil])
([nil nil ((#("
                </v-btn>" 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 19 24 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn" rear-nonsticky t)) . 14718) (undo-tree-id793 . -25) (undo-tree-id794 . -1) (undo-tree-id795 . -25) (undo-tree-id796 . -25)) nil (25820 51069 413039 106000) 0 nil])
([nil nil (("  " . -14691) 14718) nil (25820 51069 413033 168000) 0 nil])
([nil nil ((14698 . 14704)) nil (25820 51069 413031 883000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-icon")) . -14703) (undo-tree-id792 . -1) 14704) nil (25820 51069 413030 204000) 0 nil])
([nil nil (("mdi-save" . 14704) (undo-tree-id790 . -8) (undo-tree-id791 . -8)) nil (25820 51069 413025 914000) 0 nil])
([nil nil ((14704 . 14716)) nil (25820 51069 413011 270000) 0 nil])
([nil nil (("dots-vertical" . 15094) (undo-tree-id819 . -13) (undo-tree-id820 . -13) (t 25820 51069 439370 772000)) nil (25820 51153 406918 3000) 0 nil])
([nil nil ((15094 . 15099)) nil (25820 51153 406906 300000) 0 nil])
([nil nil ((#("

                <v-btn icon>
                  <v-icon>mdi-heart</v-icon>
                </v-btn>" 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 19 24 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 24 25 (tag-type start tag-name "v-btn") 25 26 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 26 28 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-icon") 50 56 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 66 67 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 67 68 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 68 74 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 93 94 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 94 99 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn")) . 14933) (undo-tree-id816 . -100) (undo-tree-id817 . -1) (undo-tree-id818 . -100)) nil (25820 51153 406903 969000) 0 nil])
([nil nil (("mdi-close" . 14990) (undo-tree-id813 . -9) (undo-tree-id814 . -4) (undo-tree-id815 . -9)) nil (25820 51153 406897 75000) 0 nil])
([nil nil ((14990 . 15014)) nil (25820 51153 406891 28000) 0 nil])
([nil nil (("mdi-save" . 14891) (undo-tree-id811 . -8) (undo-tree-id812 . -8)) nil (25820 51153 406888 1000) 0 nil])
([nil nil ((14891 . 14912)) nil (25820 51153 406868 955000) 0 nil])
([nil nil ((14975 . 14985) (t 25820 51153 438352 774000)) nil (25820 51347 900212 522000) 0 nil])
([nil nil ((#("name" 0 4 (face web-mode-variable-name-face part-side javascript)) . 31136) (undo-tree-id840 . -4) (undo-tree-id841 . -4)) nil (25820 51347 900211 12000) 0 nil])
([nil nil ((31136 . 31141)) nil (25820 51347 900207 966000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -31143) (undo-tree-id836 . -1) (#("u" 0 1 (part-side javascript)) . -31144) (undo-tree-id837 . -1) (#("l" 0 1 (part-side javascript)) . -31145) (undo-tree-id838 . -1) (#("l" 0 1 (face web-mode-constant-face part-side javascript)) . -31146) (undo-tree-id839 . -1) 31147) nil (25820 51347 900206 362000) 0 nil])
([nil nil ((31143 . 31145) (#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -31143) (31143 . 31144)) nil (25820 51347 900198 159000) 0 nil])
([nil nil ((34206 . 34219)) nil (25820 51347 900196 895000) 0 nil])
([nil nil ((34219 . 34224)) nil (25820 51347 900195 994000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34238 . 34239) (nil part-side javascript 34224 . 34239) (34224 . 34239)) nil (25820 51347 900194 962000) 0 nil])
([nil nil ((34239 . 34240)) nil (25820 51347 900193 564000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -34239) (undo-tree-id835 . -1) 34240) nil (25820 51347 900192 379000) 0 nil])
([nil nil ((34240 . 34241) (34239 . 34241) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -34239) (34239 . 34240)) nil (25820 51347 900189 726000) 0 nil])
([nil nil ((34242 . 34248)) nil (25820 51347 900188 137000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -34247) (undo-tree-id834 . -1) 34248) nil (25820 51347 900186 921000) 0 nil])
([nil nil ((34247 . 34260)) nil (25820 51347 900184 538000) 0 nil])
([nil nil ((34260 . 34261)) nil (25820 51347 900183 588000) 0 nil])
([nil nil ((34261 . 34275)) nil (25820 51347 900182 630000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -34274) (undo-tree-id833 . -1) 34275) nil (25820 51347 900181 294000) 0 nil])
([nil nil ((34274 . 34278)) nil (25820 51347 900178 776000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -34275) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("a" 0 1 (part-side javascript)) . -34276) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("m" 0 1 (part-side javascript)) . -34277) (undo-tree-id831 . -1) (undo-tree-id832 . -1) 34278) nil (25820 51347 900176 594000) 0 nil])
([nil nil ((34281 . 34282) (34280 . 34282) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -34280) (34275 . 34281)) nil (25820 51347 900158 593000) 0 nil])
([nil nil ((34283 . 34289)) nil (25820 51347 900154 814000) 0 nil])
([nil nil ((34289 . 34291)) nil (25820 51347 900153 250000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -34290) (undo-tree-id826 . -1) 34291) nil (25820 51347 900148 974000) 0 nil])
([nil nil ((#("
            this.tree_edit_name = name" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 17 (face web-mode-constant-face part-side javascript) 17 18 (part-side javascript) 18 31 (part-side javascript) 31 32 (part-side javascript rear-nonsticky t) 32 34 (part-side javascript) 34 39 (part-side javascript)) . 34290) (undo-tree-id823 . -39) (undo-tree-id824 . -1) (undo-tree-id825 . -39)) nil (25820 51347 900144 411000) 0 nil])
([nil nil ((#("id" 0 2 (part-side javascript)) . 34245) (undo-tree-id821 . -2) (undo-tree-id822 . -2)) nil (25820 51347 900134 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34258 . 34259) (nil part-side javascript 34245 . 34259) (34245 . 34259)) nil (25820 51347 900115 917000) 0 nil])
([nil nil ((#("tree_edit_name" 0 1 (face web-mode-variable-name-face block-side t) 1 2 (face web-mode-variable-name-face block-side t) 2 3 (face web-mode-variable-name-face block-side t) 3 4 (face web-mode-variable-name-face block-side t) 4 5 (face web-mode-variable-name-face block-side t) 5 6 (face web-mode-variable-name-face block-side t) 6 7 (face web-mode-variable-name-face block-side t) 7 8 (face web-mode-variable-name-face block-side t) 8 9 (face web-mode-variable-name-face block-side t) 9 10 (face web-mode-variable-name-face block-side t) 10 11 (face web-mode-variable-name-face block-side t) 11 12 (face web-mode-variable-name-face block-side t) 12 13 (face web-mode-variable-name-face block-side t) 13 14 (face web-mode-variable-name-face block-side t rear-nonsticky t)) . 14761) (undo-tree-id842 . -14) (undo-tree-id843 . -14) (t 25820 51347 928046 697000)) nil (25820 51401 976791 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14778 . 14779) (nil block-side t 14778 . 14779) (nil face (rainbow-delimiters-depth-3-face) 14778 . 14779) (nil block-side t 14777 . 14778) (nil block-side t 14776 . 14777) (nil face (rainbow-delimiters-depth-3-face) 14776 . 14777) (nil block-side t 14775 . 14776) (nil face web-mode-variable-name-face 14775 . 14776) (nil block-side t 14774 . 14775) (nil face web-mode-variable-name-face 14774 . 14775) (nil block-side t 14773 . 14774) (nil face web-mode-variable-name-face 14773 . 14774) (nil block-side t 14772 . 14773) (nil face web-mode-variable-name-face 14772 . 14773) (nil block-side t 14771 . 14772) (nil face web-mode-variable-name-face 14771 . 14772) (nil block-side t 14770 . 14771) (nil face web-mode-variable-name-face 14770 . 14771) (nil block-side t 14769 . 14770) (nil face web-mode-variable-name-face 14769 . 14770) (nil block-side t 14768 . 14769) (nil face web-mode-variable-name-face 14768 . 14769) (nil block-side t 14767 . 14768) (nil face web-mode-variable-name-face 14767 . 14768) (nil block-side t 14766 . 14767) (nil face web-mode-variable-name-face 14766 . 14767) (nil block-side t 14765 . 14766) (nil face web-mode-variable-name-face 14765 . 14766) (nil block-side t 14764 . 14765) (nil face web-mode-variable-name-face 14764 . 14765) (nil block-side t 14763 . 14764) (nil face web-mode-variable-name-face 14763 . 14764) (nil block-side t 14762 . 14763) (nil face web-mode-variable-name-face 14762 . 14763) (nil block-side t 14761 . 14762) (nil face web-mode-variable-name-face 14761 . 14762) (14761 . 14779)) nil (25820 51401 976775 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15014 . 15015) (nil block-side t 15014 . 15015) (nil tag-attr t 15014 . 15015) (nil tag-name "v-btn" 15014 . 15015) (nil tag-type start 15014 . 15015) (nil block-side t 15013 . 15014) (nil tag-attr t 15013 . 15014) (nil tag-name "v-btn" 15013 . 15014) (nil tag-type start 15013 . 15014) (nil face web-mode-variable-name-face 15013 . 15014) (nil block-side t 15012 . 15013) (nil tag-attr t 15012 . 15013) (nil tag-name "v-btn" 15012 . 15013) (nil tag-type start 15012 . 15013) (nil face web-mode-variable-name-face 15012 . 15013) (nil block-side t 15011 . 15012) (nil tag-attr t 15011 . 15012) (nil tag-name "v-btn" 15011 . 15012) (nil tag-type start 15011 . 15012) (nil face web-mode-variable-name-face 15011 . 15012) (nil block-side t 15010 . 15011) (nil tag-attr t 15010 . 15011) (nil tag-name "v-btn" 15010 . 15011) (nil tag-type start 15010 . 15011) (nil face web-mode-variable-name-face 15010 . 15011) (nil block-side t 15009 . 15010) (nil tag-attr t 15009 . 15010) (nil tag-name "v-btn" 15009 . 15010) (nil tag-type start 15009 . 15010) (nil face web-mode-variable-name-face 15009 . 15010) (nil block-side t 15008 . 15009) (nil tag-attr t 15008 . 15009) (nil tag-name "v-btn" 15008 . 15009) (nil tag-type start 15008 . 15009) (nil face web-mode-variable-name-face 15008 . 15009) (nil block-side t 15007 . 15008) (nil tag-attr t 15007 . 15008) (nil tag-name "v-btn" 15007 . 15008) (nil tag-type start 15007 . 15008) (nil face web-mode-variable-name-face 15007 . 15008) (nil block-side t 15006 . 15007) (nil tag-attr t 15006 . 15007) (nil tag-name "v-btn" 15006 . 15007) (nil tag-type start 15006 . 15007) (nil face web-mode-variable-name-face 15006 . 15007) (nil block-side t 15005 . 15006) (nil tag-attr t 15005 . 15006) (nil tag-name "v-btn" 15005 . 15006) (nil tag-type start 15005 . 15006) (nil face web-mode-variable-name-face 15005 . 15006) (nil block-side t 15004 . 15005) (nil tag-attr t 15004 . 15005) (nil tag-name "v-btn" 15004 . 15005) (nil tag-type start 15004 . 15005) (nil face web-mode-variable-name-face 15004 . 15005) (nil block-side t 15003 . 15004) (nil tag-attr t 15003 . 15004) (nil tag-name "v-btn" 15003 . 15004) (nil tag-type start 15003 . 15004) (nil face web-mode-variable-name-face 15003 . 15004) (nil block-side t 15002 . 15003) (nil tag-attr t 15002 . 15003) (nil tag-name "v-btn" 15002 . 15003) (nil tag-type start 15002 . 15003) (nil face web-mode-variable-name-face 15002 . 15003) (nil block-side t 15001 . 15002) (nil tag-attr t 15001 . 15002) (nil tag-name "v-btn" 15001 . 15002) (nil tag-type start 15001 . 15002) (nil face web-mode-variable-name-face 15001 . 15002) (nil block-side t 15000 . 15001) (nil tag-attr t 15000 . 15001) (nil tag-name "v-btn" 15000 . 15001) (nil tag-type start 15000 . 15001) (nil face web-mode-variable-name-face 15000 . 15001) (nil block-side t 14999 . 15000) (nil tag-attr t 14999 . 15000) (nil tag-name "v-btn" 14999 . 15000) (nil tag-type start 14999 . 15000) (nil block-side t 14988 . 14999) (nil tag-attr t 14988 . 14999) (nil tag-name "v-btn" 14988 . 14999) (nil tag-type start 14988 . 14999) (nil face web-mode-function-call-face 14988 . 14999) (14988 . 15015) (t 25820 51402 7415 641000)) nil (25820 51438 468790 816000) 0 nil])
([nil nil ((#("filter_tree_id" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 9 10 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 10 11 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 11 12 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 12 13 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15000) (undo-tree-id845 . -14) (undo-tree-id846 . -14)) nil (25820 51438 468770 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15017 . 15018) (nil rear-nonsticky t 15017 . 15018) (nil block-side t 15017 . 15018) (nil tag-attr t 15017 . 15018) (nil tag-name "v-btn" 15017 . 15018) (nil tag-type start 15017 . 15018) (nil block-side t 15016 . 15017) (nil tag-attr t 15016 . 15017) (nil tag-name "v-btn" 15016 . 15017) (nil tag-type start 15016 . 15017) (nil block-side t 15015 . 15016) (nil tag-attr t 15015 . 15016) (nil tag-name "v-btn" 15015 . 15016) (nil tag-type start 15015 . 15016) (nil block-side t 15014 . 15015) (nil tag-attr t 15014 . 15015) (nil tag-name "v-btn" 15014 . 15015) (nil tag-type start 15014 . 15015) (nil face web-mode-variable-name-face 15014 . 15015) (nil block-side t 15013 . 15014) (nil tag-attr t 15013 . 15014) (nil tag-name "v-btn" 15013 . 15014) (nil tag-type start 15013 . 15014) (nil face web-mode-variable-name-face 15013 . 15014) (nil block-side t 15012 . 15013) (nil tag-attr t 15012 . 15013) (nil tag-name "v-btn" 15012 . 15013) (nil tag-type start 15012 . 15013) (nil face web-mode-variable-name-face 15012 . 15013) (nil block-side t 15011 . 15012) (nil tag-attr t 15011 . 15012) (nil tag-name "v-btn" 15011 . 15012) (nil tag-type start 15011 . 15012) (nil face web-mode-variable-name-face 15011 . 15012) (nil block-side t 15010 . 15011) (nil tag-attr t 15010 . 15011) (nil tag-name "v-btn" 15010 . 15011) (nil tag-type start 15010 . 15011) (nil face web-mode-variable-name-face 15010 . 15011) (nil block-side t 15009 . 15010) (nil tag-attr t 15009 . 15010) (nil tag-name "v-btn" 15009 . 15010) (nil tag-type start 15009 . 15010) (nil face web-mode-variable-name-face 15009 . 15010) (nil block-side t 15008 . 15009) (nil tag-attr t 15008 . 15009) (nil tag-name "v-btn" 15008 . 15009) (nil tag-type start 15008 . 15009) (nil face web-mode-variable-name-face 15008 . 15009) (nil block-side t 15007 . 15008) (nil tag-attr t 15007 . 15008) (nil tag-name "v-btn" 15007 . 15008) (nil tag-type start 15007 . 15008) (nil face web-mode-variable-name-face 15007 . 15008) (nil block-side t 15006 . 15007) (nil tag-attr t 15006 . 15007) (nil tag-name "v-btn" 15006 . 15007) (nil tag-type start 15006 . 15007) (nil face web-mode-variable-name-face 15006 . 15007) (nil block-side t 15005 . 15006) (nil tag-attr t 15005 . 15006) (nil tag-name "v-btn" 15005 . 15006) (nil tag-type start 15005 . 15006) (nil face web-mode-variable-name-face 15005 . 15006) (nil block-side t 15004 . 15005) (nil tag-attr t 15004 . 15005) (nil tag-name "v-btn" 15004 . 15005) (nil tag-type start 15004 . 15005) (nil face web-mode-variable-name-face 15004 . 15005) (nil block-side t 15003 . 15004) (nil tag-attr t 15003 . 15004) (nil tag-name "v-btn" 15003 . 15004) (nil tag-type start 15003 . 15004) (nil face web-mode-variable-name-face 15003 . 15004) (nil block-side t 15002 . 15003) (nil tag-attr t 15002 . 15003) (nil tag-name "v-btn" 15002 . 15003) (nil tag-type start 15002 . 15003) (nil face web-mode-variable-name-face 15002 . 15003) (nil block-side t 15001 . 15002) (nil tag-attr t 15001 . 15002) (nil tag-name "v-btn" 15001 . 15002) (nil tag-type start 15001 . 15002) (nil face web-mode-variable-name-face 15001 . 15002) (nil block-side t 15000 . 15001) (nil tag-attr t 15000 . 15001) (nil tag-name "v-btn" 15000 . 15001) (nil tag-type start 15000 . 15001) (nil face web-mode-variable-name-face 15000 . 15001) (15000 . 15018)) nil (25820 51438 468761 357000) 0 nil])
([nil nil ((#("1" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -15016) (undo-tree-id844 . -1) 15017) nil (25820 51438 468739 511000) 0 nil])
([nil nil ((15016 . 15017)) nil (25820 51438 468647 68000) 0 nil])
([nil nil ((#("          if (element.id > 0 || element.id < -2) {
            console.log(\"filter or folder in root, not allowed\")
          }" 0 10 (part-side javascript) 10 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-6-face) part-side javascript) 14 24 (part-side javascript) 24 26 (part-side javascript) 26 28 (part-side javascript) 28 31 (part-side javascript) 31 42 (part-side javascript) 42 44 (part-side javascript) 44 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-6-face) part-side javascript) 48 49 (part-side javascript) 49 50 (face (rainbow-delimiters-depth-6-face) part-side javascript) 50 51 (part-side javascript) 51 71 (part-side javascript) 71 74 (face web-mode-function-call-face part-side javascript) 74 75 (face (rainbow-delimiters-depth-7-face) part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 93 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 93 95 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 95 113 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 113 114 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 114 115 (face (rainbow-delimiters-depth-7-face) part-side javascript) 115 116 (part-side javascript) 116 126 (part-side javascript) 126 127 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 33349) (undo-tree-id869 . -127) (undo-tree-id870 . -51) (undo-tree-id871 . -127) (t 25820 51438 498991 884000)) nil (25820 51549 22547 558000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -33348) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) 33349) nil (25820 51549 22542 685000) 0 nil])
([nil nil ((#("[]" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 33305) (undo-tree-id864 . -2) (undo-tree-id865 . -2)) nil (25820 51549 22537 636000) 0 nil])
([nil nil ((33305 . 33310)) nil (25820 51549 22534 193000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -33305) (undo-tree-id859 . -1) (#("h" 0 1 (part-side javascript)) . -33306) (undo-tree-id860 . -1) (#("i" 0 1 (part-side javascript)) . -33307) (undo-tree-id861 . -1) (#("s" 0 1 (face web-mode-constant-face part-side javascript)) . -33308) (undo-tree-id862 . -1) (#("." 0 1 (part-side javascript)) . -33309) (undo-tree-id863 . -1) 33310) nil (25820 51549 22531 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33345 . 33346) (nil rear-nonsticky t 33345 . 33346) (nil part-side javascript 33345 . 33346) (nil face (rainbow-delimiters-depth-4-face) 33345 . 33346) (nil part-side javascript 33329 . 33345) (nil part-side javascript 33328 . 33329) (nil face (rainbow-delimiters-depth-4-face) 33328 . 33329) (nil part-side javascript 33310 . 33328) (nil face web-mode-function-call-face 33310 . 33328) (nil part-side javascript 33309 . 33310) (nil part-side javascript 33305 . 33309) (nil face web-mode-constant-face 33305 . 33309) (33305 . 33346)) nil (25820 51549 22523 625000) 0 nil])
([nil nil ((#("        filter_tree.forEach(element => {
          if ('children' in element && element.children.length > 0) {
            empty_folders = empty_folders.concat(this.check_empty_folder(element.children))
          }
        })" 0 19 (part-side javascript) 19 20 (part-side javascript) 20 27 (face web-mode-function-name-face part-side javascript) 27 28 (face (rainbow-delimiters-depth-4-face) part-side javascript) 28 35 (face web-mode-function-name-face part-side javascript) 35 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 40 41 (part-side javascript) 41 51 (part-side javascript) 51 53 (face web-mode-keyword-face part-side javascript) 53 54 (part-side javascript) 54 55 (face (rainbow-delimiters-depth-6-face) part-side javascript) 55 56 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 56 64 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 65 66 (part-side javascript) 66 68 (face web-mode-keyword-face part-side javascript) 68 80 (part-side javascript) 80 107 (part-side javascript) 107 108 (face (rainbow-delimiters-depth-6-face) part-side javascript) 108 109 (part-side javascript) 109 110 (face (rainbow-delimiters-depth-6-face) part-side javascript) 110 111 (part-side javascript) 111 136 (part-side javascript) 136 138 (part-side javascript) 138 153 (part-side javascript) 153 159 (face web-mode-function-call-face part-side javascript) 159 160 (face (rainbow-delimiters-depth-7-face) part-side javascript) 160 164 (face web-mode-constant-face part-side javascript) 164 165 (part-side javascript) 165 183 (face web-mode-function-call-face part-side javascript) 183 184 (face (rainbow-delimiters-depth-8-face) part-side javascript) 184 200 (part-side javascript) 200 201 (face (rainbow-delimiters-depth-8-face) part-side javascript rear-nonsticky t) 201 202 (face (rainbow-delimiters-depth-7-face) part-side javascript) 202 203 (part-side javascript) 203 213 (part-side javascript) 213 214 (face (rainbow-delimiters-depth-6-face) part-side javascript) 214 215 (part-side javascript) 215 223 (part-side javascript) 223 224 (face (rainbow-delimiters-depth-5-face) part-side javascript) 224 225 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 33347) (undo-tree-id853 . -225) (undo-tree-id854 . -41) (undo-tree-id855 . -40) (undo-tree-id856 . -225) (undo-tree-id857 . -201) (undo-tree-id858 . -225)) nil (25820 51549 22518 526000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -33346) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) 33347) nil (25820 51549 22506 102000) 0 nil])
([nil nil ((#("element.children" 0 16 (part-side javascript)) . 33329) (undo-tree-id872 . -16) (undo-tree-id873 . -14) (undo-tree-id874 . -14) (undo-tree-id875 . -14) (undo-tree-id876 . -14) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -16) (undo-tree-id890 . -16) (t 25820 51549 57716 944000)) nil (25820 51580 432943 464000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33339 . 33340) (nil part-side javascript 33329 . 33340) (33329 . 33340)) nil (25820 51580 432897 621000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5860 . 5861) (nil tag-attr t 5860 . 5861) (nil tag-attr-end 4 5860 . 5861) (nil tag-name "v-col" 5860 . 5861) (nil tag-type start 5860 . 5861) (nil font-lock-face web-mode-html-attr-value-face 5860 . 5861) (nil tag-attr t 5849 . 5860) (nil tag-name "v-col" 5849 . 5860) (nil tag-type start 5849 . 5860) (nil font-lock-face web-mode-html-attr-value-face 5849 . 5860) (nil tag-attr t 5848 . 5849) (nil tag-name "v-col" 5848 . 5849) (nil tag-type start 5848 . 5849) (nil font-lock-face web-mode-html-attr-equal-face 5848 . 5849) (nil tag-attr t 5845 . 5848) (nil tag-name "v-col" 5845 . 5848) (nil tag-type start 5845 . 5848) (nil font-lock-face web-mode-html-attr-engine-face 5845 . 5848) (nil tag-attr-beg 2 5844 . 5845) (nil tag-attr t 5844 . 5845) (nil tag-name "v-col" 5844 . 5845) (nil tag-type start 5844 . 5845) (nil font-lock-face web-mode-html-attr-engine-face 5844 . 5845) (5844 . 5861) (t 25820 51580 473356 858000)) nil (25820 51756 292901 422000) 0 nil])
([nil nil ((5861 . 5862)) nil (25820 51756 292895 252000) 0 nil])
([nil nil ((#("v-if=\"!tree_edit\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-container" tag-attr t tag-attr-beg 2) 1 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-container" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-container" tag-attr t) 5 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr-end 4 tag-attr t)) . 7328) (undo-tree-id917 . -17) (undo-tree-id918 . -17) (undo-tree-id919 . -17)) nil (25820 51756 292893 792000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-container")) . -7327) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) 7328) nil (25820 51756 292889 18000) 0 nil])
([nil nil ((#("v-else class=\"pa-3 editTree\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-container" tag-attr t tag-attr-beg 2) 1 5 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-container" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-container" tag-attr-end 0 tag-attr t) 6 7 (tag-type start tag-name "v-container") 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t tag-attr-beg 0) 8 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-container" tag-attr t) 13 27 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr-end 5 tag-attr t)) . 14562) (undo-tree-id911 . -28) (undo-tree-id912 . -28) (undo-tree-id913 . -28)) nil (25820 51756 292883 933000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-container")) . -14561) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) 14562) nil (25820 51756 292879 61000) 0 nil])
([nil nil ((14537 . 14549) ("            " . 14536) (undo-tree-id907 . -12) (14535 . 14549)) nil (25820 51756 292874 8000) 0 nil])
([nil nil ((14549 . 14552)) nil (25820 51756 292871 522000) 0 nil])
([nil nil (("z" . -14549) (undo-tree-id904 . -1) ("v" . -14550) (undo-tree-id905 . -1) ("-" . -14551) (undo-tree-id906 . -1) 14552) nil (25820 51756 292869 546000) 0 nil])
([nil nil ((14549 . 14554)) nil (25820 51756 292864 72000) 0 nil])
([nil nil (("z" . -14549) (undo-tree-id899 . -1) ("v" . -14550) (undo-tree-id900 . -1) ("-" . -14551) (undo-tree-id901 . -1) ("c" . -14552) (undo-tree-id902 . -1) ("o" . -14553) (undo-tree-id903 . -1) 14554) nil (25820 51756 292861 743000) 0 nil])
([nil nil (("  " . -14547) (14549 . 14557)) nil (25820 51756 292852 830000) 0 nil])
([nil nil ((14555 . 14566)) nil (25820 51756 292851 392000) 0 nil])
([nil nil ((14566 . 14581)) nil (25820 51756 292850 239000) 0 nil])
([nil nil ((14574 . 14586) (14575 . 14585) (#("            " 0 12 (face whitespace-trailing)) . 14574) (14574 . 14586) (14574 . 14575) ("          " . 14574) (14573 . 14584)) nil (25820 51756 292848 357000) 0 nil])
([nil nil ((14572 . 14573)) nil (25820 51756 292845 824000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14600 . 14601) (nil tag-attr t 14600 . 14601) (nil tag-attr-end 5 14600 . 14601) (nil tag-name "v-col" 14600 . 14601) (nil tag-type start 14600 . 14601) (nil font-lock-face web-mode-html-attr-value-face 14600 . 14601) (nil tag-attr t 14586 . 14600) (nil tag-name "v-col" 14586 . 14600) (nil tag-type start 14586 . 14600) (nil font-lock-face web-mode-html-attr-value-face 14586 . 14600) (nil tag-attr t 14585 . 14586) (nil tag-name "v-col" 14585 . 14586) (nil tag-type start 14585 . 14586) (nil font-lock-face web-mode-html-attr-equal-face 14585 . 14586) (nil tag-attr t 14581 . 14585) (nil tag-name "v-col" 14581 . 14585) (nil tag-type start 14581 . 14585) (nil font-lock-face web-mode-html-attr-name-face 14581 . 14585) (nil tag-attr-beg 0 14580 . 14581) (nil tag-attr t 14580 . 14581) (nil tag-name "v-col" 14580 . 14581) (nil tag-type start 14580 . 14581) (nil font-lock-face web-mode-html-attr-name-face 14580 . 14581) (nil tag-name "v-col" 14579 . 14580) (nil tag-type start 14579 . 14580) (nil tag-attr t 14578 . 14579) (nil tag-attr-end 0 14578 . 14579) (nil tag-name "v-col" 14578 . 14579) (nil tag-type start 14578 . 14579) (nil font-lock-face web-mode-html-attr-engine-face 14578 . 14579) (nil tag-attr t 14574 . 14578) (nil tag-name "v-col" 14574 . 14578) (nil tag-type start 14574 . 14578) (nil font-lock-face web-mode-html-attr-engine-face 14574 . 14578) (nil tag-attr-beg 2 14573 . 14574) (nil tag-attr t 14573 . 14574) (nil tag-name "v-col" 14573 . 14574) (nil tag-type start 14573 . 14574) (nil font-lock-face web-mode-html-attr-engine-face 14573 . 14574) (14573 . 14601)) nil (25820 51756 292842 685000) 0 nil])
([nil nil ((14601 . 14602)) nil (25820 51756 292832 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14627 . 14628) (nil tag-attr t 14627 . 14628) (nil tag-attr-end 5 14627 . 14628) (nil tag-name "v-col" 14627 . 14628) (nil tag-type start 14627 . 14628) (nil font-lock-face web-mode-html-attr-value-face 14627 . 14628) (nil tag-attr t 14617 . 14627) (nil tag-name "v-col" 14617 . 14627) (nil tag-type start 14617 . 14627) (nil font-lock-face web-mode-html-attr-value-face 14617 . 14627) (nil tag-attr t 14616 . 14617) (nil tag-name "v-col" 14616 . 14617) (nil tag-type start 14616 . 14617) (nil font-lock-face web-mode-html-attr-equal-face 14616 . 14617) (nil tag-attr t 14612 . 14616) (nil tag-name "v-col" 14612 . 14616) (nil tag-type start 14612 . 14616) (nil font-lock-face web-mode-html-attr-name-face 14612 . 14616) (nil tag-attr-beg 0 14611 . 14612) (nil tag-attr t 14611 . 14612) (nil tag-name "v-col" 14611 . 14612) (nil tag-type start 14611 . 14612) (nil font-lock-face web-mode-html-attr-name-face 14611 . 14612) (nil tag-name "v-col" 14610 . 14611) (nil tag-type start 14610 . 14611) (nil tag-attr t 14609 . 14610) (nil tag-attr-end 4 14609 . 14610) (nil tag-name "v-col" 14609 . 14610) (nil tag-type start 14609 . 14610) (nil font-lock-face web-mode-html-attr-value-face 14609 . 14610) (nil tag-attr t 14607 . 14609) (nil tag-name "v-col" 14607 . 14609) (nil tag-type start 14607 . 14609) (nil font-lock-face web-mode-html-attr-value-face 14607 . 14609) (nil tag-attr t 14606 . 14607) (nil tag-name "v-col" 14606 . 14607) (nil tag-type start 14606 . 14607) (nil font-lock-face web-mode-html-attr-equal-face 14606 . 14607) (nil tag-attr t 14603 . 14606) (nil tag-name "v-col" 14603 . 14606) (nil tag-type start 14603 . 14606) (nil font-lock-face web-mode-html-attr-name-face 14603 . 14606) (nil tag-attr-beg 0 14602 . 14603) (nil tag-attr t 14602 . 14603) (nil tag-name "v-col" 14602 . 14603) (nil tag-type start 14602 . 14603) (nil font-lock-face web-mode-html-attr-name-face 14602 . 14603) (14602 . 14628)) nil (25820 51756 292828 977000) 0 nil])
([nil nil ((#("tree_edit ? 'pl-3 pr-3 ma-0 editTree' : " 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 9 13 (tag-type start tag-name "v-row" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 15 18 (tag-type start tag-name "v-row" tag-attr t block-side t) 18 19 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 19 20 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 20 23 (tag-type start tag-name "v-row" tag-attr t block-side t) 23 24 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 24 25 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 25 28 (tag-type start tag-name "v-row" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 35 36 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 36 40 (tag-type start tag-name "v-row" tag-attr t block-side t)) . 5913) (undo-tree-id897 . -40) (undo-tree-id898 . -40)) nil (25820 51756 292815 840000) 0 nil])
([nil nil ((#(":" 0 1 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0)) . -5905) (undo-tree-id896 . -1) 5906) nil (25820 51756 292811 317000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -5927) (undo-tree-id895 . -1) 5928) nil (25820 51756 292808 119000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -5912) (undo-tree-id894 . -1) 5913) nil (25820 51756 294903 486000) 0 nil])
([nil nil ((#("          </v-col>" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 12 17 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 14600) (undo-tree-id953 . -18) (undo-tree-id954 . -18)) nil (25820 51776 819346 979000) 0 nil] [nil nil ((#("
              :disabled=\"tree_edit\"" 0 15 (tag-type start tag-name "v-text-field") 15 16 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 17 18 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 18 19 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 20 21 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 23 24 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 35 36 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr-end 8 tag-attr t block-token delimiter-end block-end t block-side t)) . 6449) (undo-tree-id891 . -36) (undo-tree-id892 . -1) (undo-tree-id893 . -36)) ((6449 . 6485)) (25820 51756 292796 605000) 0 nil])
([nil nil ((" " . -14597) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (" " . -14598) (undo-tree-id948 . -1) (undo-tree-id949 . -1) ("
" . -14599) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) 14600) nil (25820 51776 819342 884000) 0 nil])
nil
([nil nil (("
" . 14597) (undo-tree-id943 . -1) ("
" . 14597) (undo-tree-id944 . -1) (undo-tree-id945 . 1)) nil (25820 51776 819333 118000) 0 nil])
([nil nil (("          " . -14599) 14597) nil (25820 51776 819325 896000) 0 nil])
([nil nil (("
" . 14492) (undo-tree-id942 . -1)) nil (25820 51776 819323 926000) 0 nil])
([nil nil ((14511 . 14522)) nil (25820 51776 819320 668000) 0 nil])
([nil nil (("          " . -14512) (undo-tree-id920 . -10) (undo-tree-id921 . -10) (undo-tree-id922 . -10) (undo-tree-id923 . -10) (undo-tree-id924 . -10) (undo-tree-id925 . -10) (undo-tree-id926 . -10) (undo-tree-id927 . -10) (undo-tree-id928 . -10) (undo-tree-id929 . -10) (undo-tree-id930 . -10) (undo-tree-id931 . -10) (undo-tree-id932 . -10) (undo-tree-id933 . -10) (undo-tree-id934 . -10) (undo-tree-id935 . -10) (undo-tree-id936 . -10) (undo-tree-id937 . -10) (undo-tree-id938 . -10) (undo-tree-id939 . -10) (undo-tree-id940 . -10) (undo-tree-id941 . -10) 14522) nil (25820 51776 819314 205000) 0 nil])
([nil nil ((14619 . 14623) (14612 . 14621) (t 25820 51776 851123 561000)) nil (25820 51811 217105 677000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t)) . -14622) (undo-tree-id978 . -1) 14623) nil (25820 51811 217103 958000) 0 nil])
([nil nil ((14622 . 14624)) nil (25820 51811 217101 572000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t)) . -14623) (undo-tree-id977 . -1) 14624) nil (25820 51811 217100 119000) 0 nil])
([nil nil ((#("class=\"pa-3 editTree\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 6 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t rear-nonsticky t)) . 14537) (undo-tree-id975 . -21) (undo-tree-id976 . -21)) nil (25820 51811 217096 532000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -14536) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) 14537) nil (25820 51811 217087 333000) 0 nil])
([nil nil ((14511 . 14522) (t 25820 51811 246735 30000)) nil (25820 52048 564462 117000) 0 nil])
([nil nil (("  " . -14520) (14522 . 14530)) nil (25820 52048 564460 829000) 0 nil])
([nil nil ((14528 . 14537)) nil (25820 52048 564459 698000) 0 nil])
([nil nil (("  " . -14535) (14537 . 14545)) nil (25820 52048 564458 616000) 0 nil])
([nil nil (("
" . 14544) (undo-tree-id986 . -1)) nil (25820 52048 564457 337000) 0 nil])
([nil nil (("    " . -14550) 14544) nil (25820 52048 564454 561000) 0 nil])
([nil nil ((14591 . 14600)) nil (25820 52048 564453 427000) 0 nil])
([nil nil ((14600 . 14605)) nil (25820 52048 564452 551000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v-c")) . -14603) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (#("o" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v-co")) . -14604) (undo-tree-id984 . -1) (undo-tree-id985 . -1) 14605) nil (25820 52048 564450 972000) 0 nil])
([nil nil ((14603 . 14615)) nil (25820 52048 564443 703000) 0 nil])
([nil nil ((#("</v-row>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2 7 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row")) . 14607) (undo-tree-id979 . -8) (undo-tree-id980 . -8)) nil (25820 52048 564442 438000) 0 nil])
([nil nil ((14607 . 14618)) nil (25820 52048 564433 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14642 . 14643) (nil tag-name "v-col" 14642 . 14643) (nil tag-type start 14642 . 14643) (nil tag-end t 14642 . 14643) (nil font-lock-face web-mode-html-tag-bracket-face 14642 . 14643) (nil tag-attr t 14641 . 14642) (nil tag-attr-end 5 14641 . 14642) (nil tag-name "v-col" 14641 . 14642) (nil tag-type start 14641 . 14642) (nil font-lock-face web-mode-html-attr-value-face 14641 . 14642) (nil tag-attr t 14631 . 14641) (nil tag-name "v-col" 14631 . 14641) (nil tag-type start 14631 . 14641) (nil font-lock-face web-mode-html-attr-value-face 14631 . 14641) (nil tag-attr t 14630 . 14631) (nil tag-name "v-col" 14630 . 14631) (nil tag-type start 14630 . 14631) (nil font-lock-face web-mode-html-attr-equal-face 14630 . 14631) (nil tag-attr t 14626 . 14630) (nil tag-name "v-col" 14626 . 14630) (nil tag-type start 14626 . 14630) (nil font-lock-face web-mode-html-attr-name-face 14626 . 14630) (nil tag-attr-beg 0 14625 . 14626) (nil tag-attr t 14625 . 14626) (nil tag-name "v-col" 14625 . 14626) (nil tag-type start 14625 . 14626) (nil font-lock-face web-mode-html-attr-name-face 14625 . 14626) (nil tag-name "v-col" 14624 . 14625) (nil tag-type start 14624 . 14625) (nil tag-name "v-col" 14619 . 14624) (nil tag-type start 14619 . 14624) (nil font-lock-face web-mode-html-tag-custom-face 14619 . 14624) (nil tag-name "v-col" 14618 . 14619) (nil tag-type start 14618 . 14619) (nil tag-beg 19 14618 . 14619) (nil font-lock-face web-mode-html-tag-bracket-face 14618 . 14619) (14618 . 14643)) nil (25820 52048 564429 798000) 0 nil])
([nil nil ((5244 . 5245) (2924 . 2927) (2856 . 2859) (2818 . 2821) (1838 . 1864) (#("                    " 0 20 (tag-type start tag-name "v-icon")) . 1838) (1767 . 1793) (#("                    " 0 20 (tag-type start tag-name "v-icon")) . 1767) 190) nil (25820 52048 564413 812000) 0 nil])
([nil nil ((14628 . 14629) (t 25820 52048 596069 715000)) nil (25820 52089 56079 493000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14645 . 14646) (nil rear-nonsticky t 14645 . 14646) (nil tag-attr t 14645 . 14646) (nil tag-attr-end 5 14645 . 14646) (nil tag-name "v-row" 14645 . 14646) (nil tag-type start 14645 . 14646) (nil font-lock-face web-mode-html-attr-value-face 14645 . 14646) (nil tag-attr t 14635 . 14645) (nil tag-name "v-row" 14635 . 14645) (nil tag-type start 14635 . 14645) (nil font-lock-face web-mode-html-attr-value-face 14635 . 14645) (nil tag-attr t 14634 . 14635) (nil tag-name "v-row" 14634 . 14635) (nil tag-type start 14634 . 14635) (nil font-lock-face web-mode-html-attr-equal-face 14634 . 14635) (nil tag-attr t 14630 . 14634) (nil tag-name "v-row" 14630 . 14634) (nil tag-type start 14630 . 14634) (nil font-lock-face web-mode-html-attr-name-face 14630 . 14634) (nil tag-attr-beg 0 14629 . 14630) (nil tag-attr t 14629 . 14630) (nil tag-name "v-row" 14629 . 14630) (nil tag-type start 14629 . 14630) (nil font-lock-face web-mode-html-attr-name-face 14629 . 14630) (14629 . 14646)) nil (25820 52089 56067 75000) 0 nil])
([nil nil ((14611 . 14612) (t 25820 52089 91617 224000)) nil (25820 52125 425746 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14619 . 14620) (nil tag-attr t 14612 . 14620) (nil tag-name "v-col" 14612 . 14620) (nil tag-type start 14612 . 14620) (nil font-lock-face web-mode-html-attr-value-face 14612 . 14620) (14612 . 14620)) nil (25820 52125 425738 788000) 0 nil])
([nil nil ((#("        if (filter_tree.length != 3) {
          console.log(\"NOT THREE FOLDERS\")
        }" 0 8 (part-side javascript) 8 10 (face web-mode-keyword-face part-side javascript) 10 11 (part-side javascript) 11 12 (face (rainbow-delimiters-depth-4-face) part-side javascript) 12 35 (part-side javascript) 35 36 (face (rainbow-delimiters-depth-4-face) part-side javascript) 36 37 (part-side javascript) 37 38 (face (rainbow-delimiters-depth-4-face) part-side javascript) 38 39 (part-side javascript) 39 57 (part-side javascript) 57 60 (face web-mode-function-call-face part-side javascript) 60 61 (face (rainbow-delimiters-depth-5-face) part-side javascript) 61 62 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 62 79 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 79 80 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 80 81 (face (rainbow-delimiters-depth-5-face) part-side javascript) 81 82 (part-side javascript) 82 90 (part-side javascript) 90 91 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 33325) (undo-tree-id1023 . -91) (undo-tree-id1024 . -39) (undo-tree-id1025 . -91) (t 25820 52125 459211 313000)) nil (25820 52358 606242 610000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -33324) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) 33325) nil (25820 52358 606237 460000) 0 nil])
([nil nil ((33952 . 33963)) nil (25820 52358 606232 990000) 0 nil])
([nil nil ((33963 . 33965) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33963) (33963 . 33964)) nil (25820 52358 606231 784000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33963) (undo-tree-id1019 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 33964)) nil (25820 52358 606230 189000) 0 nil])
([nil nil ((33963 . 33965)) nil (25820 52358 606227 912000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -33963) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (#("i" 0 1 (part-side javascript)) . -33964) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) 33965) nil (25820 52358 606226 353000) 0 nil])
([nil nil ((33967 . 33982) (33966 . 33968) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33966) (33963 . 33967)) nil (25820 52358 606220 517000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -33978) (undo-tree-id1011 . -1) (#("d" 0 1 (part-side javascript)) . -33979) (undo-tree-id1012 . -1) (#("t" 0 1 (part-side javascript)) . -33980) (undo-tree-id1013 . -1) (#(" " 0 1 (part-side javascript)) . -33981) (undo-tree-id1014 . -1) 33982) nil (25820 52358 606218 30000) 0 nil])
([nil nil ((33978 . 33982)) nil (25820 52358 606211 850000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33981) (undo-tree-id1010 . -1) 33982) nil (25820 52358 606210 622000) 0 nil])
([nil nil ((33983 . 33985) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33983) (33982 . 33984)) nil (25820 52358 606208 205000) 0 nil])
([nil nil ((33986 . 33996) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 33985) (undo-tree-id1008 . -10) (undo-tree-id1009 . 12) (33995 . 33997) (33984 . 33996)) nil (25820 52358 606206 518000) 0 nil])
([nil nil ((33985 . 33997)) nil (25820 52358 606202 593000) 0 nil])
([nil nil ((33997 . 33999)) nil (25820 52358 606201 524000) 0 nil])
([nil nil ((33999 . 34009)) nil (25820 52358 606200 415000) 0 nil])
([nil nil ((34002 . 34017) (#("tree_ed" 0 7 (part-side javascript)) . -34002) (undo-tree-id989 . -3) (undo-tree-id990 . -7) (undo-tree-id991 . -7) (undo-tree-id992 . -7) (undo-tree-id993 . -7) (undo-tree-id994 . -7) (undo-tree-id995 . -7) (undo-tree-id996 . -7) (undo-tree-id997 . -7) (undo-tree-id998 . -7) (undo-tree-id999 . -7) (undo-tree-id1000 . -7) (undo-tree-id1001 . -7) (undo-tree-id1002 . -7) (undo-tree-id1003 . -7) (undo-tree-id1004 . -7) (undo-tree-id1005 . -7) (undo-tree-id1006 . -7) (undo-tree-id1007 . -7) 34009) nil (25820 52358 606197 872000) 0 nil])
([nil nil ((34020 . 34022) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -34020) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (34017 . 34021)) nil (25820 52358 606882 782000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 34021)) nil (25820 52384 347190 991000) 0 nil] [nil nil ((34021 . 34034)) ((#("
            " 0 1 (part-side javascript) 1 13 (part-side javascript)) . 34021) (undo-tree-id1026 . -13) (undo-tree-id1027 . -1)) (25820 52358 606152 973000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 34020)) nil (25820 52384 347189 871000) 0 nil])
nil
([nil nil ((34020 . 34022) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -34020) (34020 . 34021)) nil (25820 52384 347188 538000) 0 nil])
([nil nil ((34022 . 34035)) nil (25820 52384 347187 185000) 0 nil])
([nil nil ((34035 . 34042)) nil (25820 52384 347186 97000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -34040) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("r" 0 1 (part-side javascript)) . -34041) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 34042) nil (25820 52384 347184 436000) 0 nil])
([nil nil ((#("this." 0 4 (face web-mode-constant-face part-side javascript) 4 5 (part-side javascript)) . 34035) (undo-tree-id1037 . -5) (undo-tree-id1038 . -5) (undo-tree-id1039 . -5)) nil (25820 52384 347177 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34066 . 34067) (nil rear-nonsticky t 34066 . 34067) (nil part-side javascript 34066 . 34067) (nil part-side javascript 34057 . 34066) (nil part-side javascript 34053 . 34057) (nil face web-mode-constant-face 34053 . 34057) (nil part-side javascript 34039 . 34053) (nil part-side javascript 34035 . 34039) (nil face web-mode-constant-face 34035 . 34039) (34035 . 34067)) nil (25820 52384 347172 203000) 0 nil])
([nil nil ((34022 . 34035)) nil (25820 52384 347169 66000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34066 . 34067) (nil rear-nonsticky t 34066 . 34067) (nil part-side javascript 34066 . 34067) (nil part-side javascript 34059 . 34066) (nil part-side javascript 34039 . 34059) (nil part-side javascript 34035 . 34039) (nil face web-mode-constant-face 34035 . 34039) (34035 . 34067)) nil (25820 52384 347167 387000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -34059) (undo-tree-id1029 . -1) (#("u" 0 1 (part-side javascript)) . -34060) (undo-tree-id1030 . -1) (#("b" 0 1 (part-side javascript)) . -34061) (undo-tree-id1031 . -1) (#("_" 0 1 (part-side javascript)) . -34062) (undo-tree-id1032 . -1) (#("t" 0 1 (part-side javascript)) . -34063) (undo-tree-id1033 . -1) (#("r" 0 1 (part-side javascript)) . -34064) (undo-tree-id1034 . -1) (#("e" 0 1 (part-side javascript)) . -34065) (undo-tree-id1035 . -1) (#("e" 0 1 (part-side javascript rear-nonsticky t)) . -34066) (undo-tree-id1036 . -1) 34067) nil (25820 52384 347159 938000) 0 nil])
([nil nil ((34059 . 34064)) nil (25820 52384 347144 433000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -34063) (undo-tree-id1028 . -1) 34064) nil (25820 52384 347138 96000) 0 nil])
([nil nil ((#(":color=\"differenceHolder[item.id] != null ? differenceHolder[item.id] : ''\" " 0 1 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 2 3 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 3 4 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 4 5 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 5 6 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 6 7 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 7 8 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr t block-token delimiter-beg block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 9 10 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 10 11 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 11 12 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 12 13 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 15 16 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 16 17 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 17 18 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 18 19 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 19 20 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 20 21 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 21 22 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 22 23 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 23 24 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 24 25 (tag-type start tag-name "v-icon" tag-attr t block-side t) 25 26 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 29 30 (tag-type start tag-name "v-icon" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 32 37 (tag-type start tag-name "v-icon" tag-attr t block-side t) 37 38 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 38 39 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 39 40 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 40 41 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 41 44 (tag-type start tag-name "v-icon" tag-attr t block-side t) 44 45 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 45 46 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 46 47 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 47 48 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 48 49 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 49 50 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 50 51 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 51 52 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 52 53 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 53 54 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 54 55 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 55 56 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 56 57 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 57 58 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 58 59 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 59 60 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 60 61 (tag-type start tag-name "v-icon" tag-attr t block-side t) 61 62 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 62 63 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 63 64 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 64 65 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 65 66 (tag-type start tag-name "v-icon" tag-attr t block-side t) 66 67 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 67 68 (face web-mode-variable-name-face tag-type start tag-name "v-icon" tag-attr t block-side t) 68 74 (tag-type start tag-name "v-icon" tag-attr t block-side t) 74 75 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-icon" tag-attr-end 6 tag-attr t block-token delimiter-end block-end t block-side t) 75 76 (tag-type start tag-name "v-icon")) . 15782) (undo-tree-id1044 . -76) (undo-tree-id1045 . -76) (t 25820 52384 380331 453000)) nil (25820 52460 74209 347000) 0 nil])
([nil nil ((14981 . 14997) ("                " . 14980) (undo-tree-id1062 . -16) (14980 . 14997) (#("                " 0 16 (face whitespace-trailing)) . 14979) (14979 . 14995) (14979 . 14980) (t 25820 52460 107491 763000)) nil (25820 52619 668998 790000) 0 nil])
([nil nil ((14981 . 14997) (#("                " 0 16 (face whitespace-trailing)) . 14980) (14980 . 14996) (14980 . 14981)) nil (25820 52619 668994 874000) 0 nil])
([nil nil ((14997 . 15012)) nil (25820 52619 668993 140000) 0 nil])
([nil nil ((15012 . 15029)) nil (25820 52619 668992 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15122 . 15123) (nil tag-name "v-btn" 15122 . 15123) (nil tag-type end 15122 . 15123) (nil tag-end t 15122 . 15123) (nil font-lock-face web-mode-html-tag-bracket-face 15122 . 15123) (nil tag-name "v-btn" 15117 . 15122) (nil tag-type end 15117 . 15122) (nil font-lock-face web-mode-html-tag-custom-face 15117 . 15122) (nil tag-name "v-btn" 15116 . 15117) (nil tag-type end 15116 . 15117) (nil font-lock-face web-mode-html-tag-bracket-face 15116 . 15117) (nil tag-name "v-btn" 15115 . 15116) (nil tag-type end 15115 . 15116) (nil tag-beg 22 15115 . 15116) (nil font-lock-face web-mode-html-tag-bracket-face 15115 . 15116) (nil tag-name "v-icon" 15097 . 15098) (nil tag-type end 15097 . 15098) (nil tag-end t 15097 . 15098) (nil font-lock-face web-mode-html-tag-bracket-face 15097 . 15098) (nil tag-name "v-icon" 15091 . 15097) (nil tag-type end 15091 . 15097) (nil font-lock-face web-mode-html-tag-custom-face 15091 . 15097) (nil tag-name "v-icon" 15090 . 15091) (nil tag-type end 15090 . 15091) (nil font-lock-face web-mode-html-tag-bracket-face 15090 . 15091) (nil tag-name "v-icon" 15089 . 15090) (nil tag-type end 15089 . 15090) (nil tag-beg 22 15089 . 15090) (nil font-lock-face web-mode-html-tag-bracket-face 15089 . 15090) (nil tag-name "v-icon" 15067 . 15068) (nil tag-type start 15067 . 15068) (nil tag-end t 15067 . 15068) (nil font-lock-face web-mode-html-tag-bracket-face 15067 . 15068) (nil tag-name "v-icon" 15061 . 15067) (nil tag-type start 15061 . 15067) (nil font-lock-face web-mode-html-tag-custom-face 15061 . 15067) (nil tag-name "v-icon" 15060 . 15061) (nil tag-type start 15060 . 15061) (nil tag-beg 18 15060 . 15061) (nil font-lock-face web-mode-html-tag-bracket-face 15060 . 15061) (nil tag-name "v-btn" 15040 . 15041) (nil tag-type start 15040 . 15041) (nil tag-end t 15040 . 15041) (nil font-lock-face web-mode-html-tag-bracket-face 15040 . 15041) (nil tag-attr t 15039 . 15040) (nil tag-attr-end 0 15039 . 15040) (nil tag-name "v-btn" 15039 . 15040) (nil tag-type start 15039 . 15040) (nil font-lock-face web-mode-html-attr-name-face 15039 . 15040) (nil tag-attr t 15037 . 15039) (nil tag-name "v-btn" 15037 . 15039) (nil tag-type start 15037 . 15039) (nil font-lock-face web-mode-html-attr-name-face 15037 . 15039) (nil tag-attr-beg 0 15036 . 15037) (nil tag-attr t 15036 . 15037) (nil tag-name "v-btn" 15036 . 15037) (nil tag-type start 15036 . 15037) (nil font-lock-face web-mode-html-attr-name-face 15036 . 15037) (nil tag-name "v-btn" 15035 . 15036) (nil tag-type start 15035 . 15036) (nil tag-name "v-btn" 15030 . 15035) (nil tag-type start 15030 . 15035) (nil font-lock-face web-mode-html-tag-custom-face 15030 . 15035) (nil tag-name "v-btn" 15029 . 15030) (nil tag-type start 15029 . 15030) (nil tag-beg 19 15029 . 15030) (nil font-lock-face web-mode-html-tag-bracket-face 15029 . 15030) (15029 . 15123)) nil (25820 52619 668987 121000) 0 nil])
([nil nil (("mdi-content-save-edit" . 15068) (undo-tree-id1060 . -21) (undo-tree-id1061 . -21)) nil (25820 52619 668969 8000) 0 nil])
([nil nil ((15068 . 15083)) nil (25820 52619 668964 277000) 0 nil])
([nil nil (("

                mdi-folder-plus" . 14979) (undo-tree-id1055 . -33) (undo-tree-id1056 . -1) (undo-tree-id1057 . -18) (undo-tree-id1058 . -33) (undo-tree-id1059 . -33)) nil (25820 52619 668959 425000) 0 nil])
([nil nil (("
" . -14978) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) 14979) nil (25820 52619 668941 645000) 0 nil])
([nil nil (("
" . -14939) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) 14940) nil (25820 52619 668925 377000) 0 nil])
([nil nil (("
" . 15082) (undo-tree-id1047 . -1)) nil (25820 52619 668917 768000) 0 nil])
([nil nil (("
" . 15209) (undo-tree-id1046 . -1)) nil (25820 52619 668912 228000) 0 nil])
([nil nil ((#("                " 0 16 (face whitespace-trailing)) . -15082) 15209) nil (25820 52619 668888 61000) 0 nil])
([nil nil ((#("
            this.save_filter_tree(this.filter_tree_edit)" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 17 (face web-mode-constant-face part-side javascript) 17 18 (part-side javascript) 18 34 (face web-mode-function-call-face part-side javascript) 34 35 (face (rainbow-delimiters-depth-5-face) part-side javascript) 35 39 (face web-mode-constant-face part-side javascript) 39 56 (part-side javascript) 56 57 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t)) . 33909) (undo-tree-id1070 . -57) (undo-tree-id1071 . -1) (undo-tree-id1072 . -57) (undo-tree-id1073 . -57) (t 25820 52619 705724 892000)) nil (25820 53033 548668 7000) 0 nil])
([nil nil ((#("filter_tree" 0 11 (part-side javascript)) . 33336) (undo-tree-id1068 . -11) (undo-tree-id1069 . -11)) nil (25820 53033 548661 464000) 0 nil])
([nil nil ((#("filter_tree" 0 10 (part-side javascript) 10 11 (part-side javascript rear-nonsticky t)) . 33392) (undo-tree-id1066 . -11) (undo-tree-id1067 . -11)) nil (25820 53033 548657 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33412 . 33413) (nil part-side javascript 33396 . 33413) (nil part-side javascript 33392 . 33396) (nil face web-mode-constant-face 33392 . 33396) (33392 . 33413)) nil (25820 53033 548654 315000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 33467) (undo-tree-id1065 . -1)) nil (25820 53033 548651 759000) 0 nil])
([nil nil ((15110 . 15111)) nil (25820 53033 548648 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15150 . 15151) (nil block-side t 15150 . 15151) (nil block-end t 15150 . 15151) (nil block-token delimiter-end 15150 . 15151) (nil tag-attr t 15150 . 15151) (nil tag-attr-end 5 15150 . 15151) (nil tag-name "v-btn" 15150 . 15151) (nil tag-type start 15150 . 15151) (nil font-lock-face web-mode-block-delimiter-face 15150 . 15151) (nil rear-nonsticky t 15149 . 15150) (nil block-side t 15149 . 15150) (nil tag-attr t 15149 . 15150) (nil tag-name "v-btn" 15149 . 15150) (nil tag-type start 15149 . 15150) (nil rear-nonsticky t 15148 . 15149) (nil block-side t 15148 . 15149) (nil tag-attr t 15148 . 15149) (nil tag-name "v-btn" 15148 . 15149) (nil tag-type start 15148 . 15149) (nil block-side t 15146 . 15148) (nil tag-attr t 15146 . 15148) (nil tag-name "v-btn" 15146 . 15148) (nil tag-type start 15146 . 15148) (nil block-side t 15145 . 15146) (nil tag-attr t 15145 . 15146) (nil tag-name "v-btn" 15145 . 15146) (nil tag-type start 15145 . 15146) (nil face web-mode-variable-name-face 15145 . 15146) (nil block-side t 15144 . 15145) (nil tag-attr t 15144 . 15145) (nil tag-name "v-btn" 15144 . 15145) (nil tag-type start 15144 . 15145) (nil face web-mode-variable-name-face 15144 . 15145) (nil block-side t 15143 . 15144) (nil tag-attr t 15143 . 15144) (nil tag-name "v-btn" 15143 . 15144) (nil tag-type start 15143 . 15144) (nil face web-mode-variable-name-face 15143 . 15144) (nil block-side t 15142 . 15143) (nil tag-attr t 15142 . 15143) (nil tag-name "v-btn" 15142 . 15143) (nil tag-type start 15142 . 15143) (nil face web-mode-variable-name-face 15142 . 15143) (nil block-side t 15141 . 15142) (nil tag-attr t 15141 . 15142) (nil tag-name "v-btn" 15141 . 15142) (nil tag-type start 15141 . 15142) (nil face web-mode-variable-name-face 15141 . 15142) (nil block-side t 15140 . 15141) (nil tag-attr t 15140 . 15141) (nil tag-name "v-btn" 15140 . 15141) (nil tag-type start 15140 . 15141) (nil face web-mode-variable-name-face 15140 . 15141) (nil block-side t 15139 . 15140) (nil tag-attr t 15139 . 15140) (nil tag-name "v-btn" 15139 . 15140) (nil tag-type start 15139 . 15140) (nil face web-mode-variable-name-face 15139 . 15140) (nil block-side t 15138 . 15139) (nil tag-attr t 15138 . 15139) (nil tag-name "v-btn" 15138 . 15139) (nil tag-type start 15138 . 15139) (nil face web-mode-variable-name-face 15138 . 15139) (nil block-side t 15137 . 15138) (nil tag-attr t 15137 . 15138) (nil tag-name "v-btn" 15137 . 15138) (nil tag-type start 15137 . 15138) (nil face web-mode-variable-name-face 15137 . 15138) (nil block-side t 15136 . 15137) (nil tag-attr t 15136 . 15137) (nil tag-name "v-btn" 15136 . 15137) (nil tag-type start 15136 . 15137) (nil face web-mode-variable-name-face 15136 . 15137) (nil block-side t 15135 . 15136) (nil tag-attr t 15135 . 15136) (nil tag-name "v-btn" 15135 . 15136) (nil tag-type start 15135 . 15136) (nil face web-mode-variable-name-face 15135 . 15136) (nil block-side t 15134 . 15135) (nil tag-attr t 15134 . 15135) (nil tag-name "v-btn" 15134 . 15135) (nil tag-type start 15134 . 15135) (nil face web-mode-variable-name-face 15134 . 15135) (nil block-side t 15133 . 15134) (nil tag-attr t 15133 . 15134) (nil tag-name "v-btn" 15133 . 15134) (nil tag-type start 15133 . 15134) (nil face web-mode-variable-name-face 15133 . 15134) (nil block-side t 15132 . 15133) (nil tag-attr t 15132 . 15133) (nil tag-name "v-btn" 15132 . 15133) (nil tag-type start 15132 . 15133) (nil face web-mode-variable-name-face 15132 . 15133) (nil block-side t 15131 . 15132) (nil tag-attr t 15131 . 15132) (nil tag-name "v-btn" 15131 . 15132) (nil tag-type start 15131 . 15132) (nil face web-mode-variable-name-face 15131 . 15132) (nil block-side t 15130 . 15131) (nil tag-attr t 15130 . 15131) (nil tag-name "v-btn" 15130 . 15131) (nil tag-type start 15130 . 15131) (nil block-side t 15119 . 15130) (nil tag-attr t 15119 . 15130) (nil tag-name "v-btn" 15119 . 15130) (nil tag-type start 15119 . 15130) (nil face web-mode-function-call-face 15119 . 15130) (nil block-side t 15118 . 15119) (nil block-token delimiter-beg 15118 . 15119) (nil tag-attr t 15118 . 15119) (nil tag-name "v-btn" 15118 . 15119) (nil tag-type start 15118 . 15119) (nil font-lock-face web-mode-block-delimiter-face 15118 . 15119) (nil block-side t 15117 . 15118) (nil block-token delimiter-beg 15117 . 15118) (nil tag-attr t 15117 . 15118) (nil tag-name "v-btn" 15117 . 15118) (nil tag-type start 15117 . 15118) (nil font-lock-face web-mode-block-delimiter-face 15117 . 15118) (nil block-side t 15116 . 15117) (nil block-token delimiter-beg 15116 . 15117) (nil tag-attr t 15116 . 15117) (nil tag-name "v-btn" 15116 . 15117) (nil tag-type start 15116 . 15117) (nil font-lock-face web-mode-block-delimiter-face 15116 . 15117) (nil block-side t 15115 . 15116) (nil block-token delimiter-beg 15115 . 15116) (nil tag-attr t 15115 . 15116) (nil tag-name "v-btn" 15115 . 15116) (nil tag-type start 15115 . 15116) (nil font-lock-face web-mode-block-delimiter-face 15115 . 15116) (nil block-side t 15114 . 15115) (nil block-token delimiter-beg 15114 . 15115) (nil tag-attr t 15114 . 15115) (nil tag-name "v-btn" 15114 . 15115) (nil tag-type start 15114 . 15115) (nil font-lock-face web-mode-block-delimiter-face 15114 . 15115) (nil block-side t 15113 . 15114) (nil block-token delimiter-beg 15113 . 15114) (nil tag-attr t 15113 . 15114) (nil tag-name "v-btn" 15113 . 15114) (nil tag-type start 15113 . 15114) (nil font-lock-face web-mode-block-delimiter-face 15113 . 15114) (nil block-side t 15112 . 15113) (nil block-token delimiter-beg 15112 . 15113) (nil tag-attr-beg 0 15112 . 15113) (nil tag-attr t 15112 . 15113) (nil tag-name "v-btn" 15112 . 15113) (nil tag-type start 15112 . 15113) (nil font-lock-face web-mode-block-delimiter-face 15112 . 15113) (nil block-beg 0 15111 . 15112) (nil block-controls 0 15111 . 15112) (nil block-side t 15111 . 15112) (nil block-token delimiter-beg 15111 . 15112) (nil tag-name "v-btn" 15111 . 15112) (nil tag-type start 15111 . 15112) (nil font-lock-face web-mode-block-delimiter-face 15111 . 15112) (15111 . 15151)) nil (25820 53033 548640 78000) 0 nil])
([nil nil ((#("edit_switch" 0 11 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15119) (undo-tree-id1063 . -11) (undo-tree-id1064 . -11)) nil (25820 53033 548605 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15134 . 15135) (nil block-side t 15123 . 15135) (nil tag-attr t 15123 . 15135) (nil tag-name "v-btn" 15123 . 15135) (nil tag-type start 15123 . 15135) (nil face web-mode-function-call-face 15123 . 15135) (nil block-side t 15119 . 15123) (nil tag-attr t 15119 . 15123) (nil tag-name "v-btn" 15119 . 15123) (nil tag-type start 15119 . 15123) (nil face web-mode-function-call-face 15119 . 15123) (15119 . 15135)) nil (25820 53033 548595 421000) 0 nil])
([nil nil ((#("0" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("[" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("v" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("i" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("r" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("d" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("_" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("t" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("i" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("d" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("_" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("r" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136) (#("t" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136)) nil (25820 53033 548588 303000) 0 nil])
([nil nil ((#("]" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15136)) nil (25820 53033 548577 204000) 0 nil])
([nil nil ((33504 . 33511) (t 25820 53033 580718 208000)) nil (25820 53081 133314 731000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 33532) (33531 . 33532) (33530 . 33532) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -33530) (33511 . 33531)) nil (25820 53081 133312 938000) 0 nil])
([nil nil ((33533 . 33535) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -33533) (33532 . 33534)) nil (25820 53081 133310 785000) 0 nil])
([nil nil ((33536 . 33542) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 33535) (undo-tree-id1087 . 8) (33535 . 33543) (#("      " 0 6 (part-side javascript)) . 33535) (undo-tree-id1088 . -6) (33534 . 33542)) nil (25820 53081 133308 762000) 0 nil])
([nil nil ((33543 . 33544)) nil (25820 53081 133304 148000) 0 nil])
([nil nil ((15005 . 15006)) nil (25820 53081 133303 87000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15024 . 15025) (nil tag-attr t 15024 . 15025) (nil tag-attr-end 0 15024 . 15025) (nil tag-name "v-btn" 15024 . 15025) (nil tag-type start 15024 . 15025) (nil font-lock-face web-mode-html-attr-name-face 15024 . 15025) (nil tag-attr t 15007 . 15024) (nil tag-name "v-btn" 15007 . 15024) (nil tag-type start 15007 . 15024) (nil font-lock-face web-mode-html-attr-name-face 15007 . 15024) (nil tag-attr-beg 0 15006 . 15007) (nil tag-attr t 15006 . 15007) (nil tag-name "v-btn" 15006 . 15007) (nil tag-type start 15006 . 15007) (nil font-lock-face web-mode-html-attr-name-face 15006 . 15007) (15006 . 15025)) nil (25820 53081 133301 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15013 . 15014) (nil tag-name "v-btn" 15013 . 15014) (nil tag-type start 15013 . 15014) (nil tag-attr t 15012 . 15013) (nil tag-attr-end 5 15012 . 15013) (nil tag-name "v-btn" 15012 . 15013) (nil tag-type start 15012 . 15013) (nil font-lock-face web-mode-html-attr-equal-face 15012 . 15013) (nil tag-attr t 15011 . 15012) (nil tag-name "v-btn" 15011 . 15012) (nil tag-type start 15011 . 15012) (nil font-lock-face web-mode-html-attr-name-face 15011 . 15012) (nil tag-attr t 15010 . 15011) (nil tag-name "v-btn" 15010 . 15011) (nil tag-type start 15010 . 15011) (nil font-lock-face web-mode-html-attr-name-face 15010 . 15011) (nil tag-attr t 15009 . 15010) (nil tag-name "v-btn" 15009 . 15010) (nil tag-type start 15009 . 15010) (nil font-lock-face web-mode-html-attr-name-face 15009 . 15010) (nil tag-attr t 15008 . 15009) (nil tag-name "v-btn" 15008 . 15009) (nil tag-type start 15008 . 15009) (nil font-lock-face web-mode-html-attr-name-face 15008 . 15009) (nil tag-attr-beg 0 15007 . 15008) (nil tag-attr t 15007 . 15008) (nil tag-name "v-btn" 15007 . 15008) (nil tag-type start 15007 . 15008) (nil font-lock-face web-mode-html-attr-name-face 15007 . 15008) (nil tag-name "v-btn" 15006 . 15007) (nil tag-type start 15006 . 15007) (15006 . 15014)) nil (25820 53081 133295 643000) 0 nil])
([nil nil ((15033 . 15034)) nil (25820 53081 133288 484000) 0 nil])
([nil nil ((15033 . 15035) (#("(" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -15033) (15033 . 15034)) nil (25820 53081 133287 161000) 0 nil])
([nil nil ((33566 . 33574)) nil (25820 53081 133285 711000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 33587) (33586 . 33587) (33585 . 33587) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -33585) (33574 . 33586)) nil (25820 53081 133284 238000) 0 nil])
([nil nil ((33587 . 33590) (33586 . 33588) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -33586) (33586 . 33587)) nil (25820 53081 133282 29000) 0 nil])
([nil nil ((#("R" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33588) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (#("E" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33589) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) 33590) nil (25820 53081 133279 425000) 0 nil])
([nil nil ((33588 . 33609)) nil (25820 53081 133272 715000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33608) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 33609) nil (25820 53081 133267 23000) 0 nil])
([nil nil ((14795 . 14800) (t 25820 53081 172112 13000)) nil (25820 53173 921733 568000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . 14813) (#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0)) . 14813) (#("n" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0)) . 14813) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0)) . 14813) (#("d" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0)) . 14813)) nil (25820 53173 921730 781000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-toolbar")) . -14812) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) 14813) nil (25820 53173 921723 445000) 0 nil])
([nil nil ((14812 . 14819) (t 25820 53173 958947 243000)) nil (25820 53231 36275 818000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-toolbar")) . -14818) (undo-tree-id1120 . -1) 14819) nil (25820 53231 36272 346000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-toolbar")) . -14794) (undo-tree-id1115 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -14795) (undo-tree-id1116 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t)) . -14796) (undo-tree-id1117 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t)) . -14797) (undo-tree-id1118 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t)) . -14798) (undo-tree-id1119 . -1) 14799) nil (25820 53231 36262 605000) 0 nil])
([nil nil ((14794 . 14795)) nil (25820 53231 36238 471000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14802 . 14803) (nil tag-attr t 14802 . 14803) (nil tag-attr-end 0 14802 . 14803) (nil tag-name "v-toolbar" 14802 . 14803) (nil tag-type start 14802 . 14803) (nil font-lock-face web-mode-html-attr-name-face 14802 . 14803) (nil tag-attr t 14796 . 14802) (nil tag-name "v-toolbar" 14796 . 14802) (nil tag-type start 14796 . 14802) (nil font-lock-face web-mode-html-attr-name-face 14796 . 14802) (nil tag-attr-beg 0 14795 . 14796) (nil tag-attr t 14795 . 14796) (nil tag-name "v-toolbar" 14795 . 14796) (nil tag-type start 14795 . 14796) (nil font-lock-face web-mode-html-attr-name-face 14795 . 14796) (14795 . 14803)) nil (25820 53231 36230 321000) 0 nil])
([nil nil ((14803 . 14808) (t 25820 53231 74240 181000)) nil (25820 53277 246259 880000) 0 nil])
([nil nil ((34087 . 34092) (t 25820 53277 277673 71000)) nil (25820 53372 335405 357000) 0 nil])
([nil nil ((33487 . 33496) (t 25820 53372 368517 923000)) nil (25820 53520 780664 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33536 . 33537) (nil part-side javascript 33536 . 33537) (nil face (rainbow-delimiters-depth-4-face) 33536 . 33537) (nil part-side javascript 33535 . 33536) (nil face (rainbow-delimiters-depth-5-face) 33535 . 33536) (nil part-side javascript 33523 . 33535) (nil part-side javascript 33522 . 33523) (nil face (rainbow-delimiters-depth-5-face) 33522 . 33523) (nil part-side javascript 33520 . 33522) (nil part-side javascript 33519 . 33520) (nil part-token string 33519 . 33520) (nil syntax-table (15) 33519 . 33520) (nil font-lock-face web-mode-javascript-string-face 33519 . 33520) (nil part-side javascript 33508 . 33519) (nil part-token string 33508 . 33519) (nil font-lock-face web-mode-javascript-string-face 33508 . 33519) (nil part-side javascript 33507 . 33508) (nil part-token string 33507 . 33508) (nil syntax-table (15) 33507 . 33508) (nil font-lock-face web-mode-javascript-string-face 33507 . 33508) (nil part-side javascript 33506 . 33507) (nil face (rainbow-delimiters-depth-4-face) 33506 . 33507) (nil part-side javascript 33500 . 33506) (nil part-side javascript 33496 . 33500) (nil face web-mode-constant-face 33496 . 33500) (33496 . 33537)) nil (25820 53520 780662 8000) 0 nil])
([nil nil ((#("        console.log('empty folders:', empty_folders)
" 0 16 (part-side javascript) 16 19 (face web-mode-function-call-face part-side javascript) 19 20 (face (rainbow-delimiters-depth-4-face) part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 27 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 27 34 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 34 35 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 35 36 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 36 38 (part-side javascript) 38 51 (part-side javascript) 51 52 (face (rainbow-delimiters-depth-4-face) part-side javascript) 52 53 (part-side javascript)) . 33591) (undo-tree-id1138 . -41) (undo-tree-id1139 . -53) (undo-tree-id1140 . -49) (33541 . 33591) (#("        this.$emit('rename_chip', [filter, name])
" 0 8 (part-side javascript) 8 12 (face web-mode-constant-face part-side javascript) 12 18 (part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 34 (part-side javascript) 34 35 (face (rainbow-delimiters-depth-5-face) part-side javascript) 35 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-5-face) part-side javascript) 48 49 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t) 49 50 (part-side javascript)) . 33488) (undo-tree-id1141 . -8) (33538 . 33591) 33587) nil (25820 53520 780655 442000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33562) (undo-tree-id1128 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33563) (undo-tree-id1129 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33564) (undo-tree-id1130 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33565) (undo-tree-id1131 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33566) (undo-tree-id1132 . -1) (#("_" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33567) (undo-tree-id1133 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33568) (undo-tree-id1134 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33569) (undo-tree-id1135 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33570) (undo-tree-id1136 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33571) (undo-tree-id1137 . -1) 33572) nil (25820 53520 780647 313000) 0 nil])
([nil nil ((33562 . 33575)) nil (25820 53520 780632 968000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -33574) (undo-tree-id1127 . -1) 33575) nil (25820 53520 780631 535000) 0 nil])
([nil nil ((#("filter" 0 6 (part-side javascript)) . 33578) (undo-tree-id1125 . -6) (undo-tree-id1126 . -6)) nil (25820 53520 780628 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33597 . 33598) (nil rear-nonsticky t 33597 . 33598) (nil part-side javascript 33597 . 33598) (nil part-side javascript 33583 . 33597) (nil part-side javascript 33582 . 33583) (nil part-side javascript 33578 . 33582) (nil face web-mode-constant-face 33578 . 33582) (33578 . 33598)) nil (25820 53520 780624 794000) 0 nil])
([nil nil ((#("ame" 0 3 (part-side javascript)) . 33601) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3)) nil (25820 53520 780621 855000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -33600) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) 33601) nil (25820 53520 780616 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33620 . 33621) (nil part-side javascript 33604 . 33621) (nil part-side javascript 33600 . 33604) (nil face web-mode-constant-face 33600 . 33604) (33600 . 33621)) nil (25820 53520 780601 210000) 0 nil])
([nil nil ((34147 . 34160) (t 25820 53520 814741 542000)) nil (25820 53899 613471 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34270 . 34271) (nil rear-nonsticky t 34270 . 34271) (nil part-side javascript 34270 . 34271) (nil part-side javascript 34261 . 34270) (nil part-side javascript 34257 . 34261) (nil face web-mode-constant-face 34257 . 34261) (nil part-side javascript 34243 . 34257) (nil part-side javascript 34239 . 34243) (nil face web-mode-constant-face 34239 . 34243) (nil part-side javascript 34227 . 34239) (nil part-side javascript 34226 . 34227) (nil part-side javascript 34222 . 34226) (nil face web-mode-constant-face 34222 . 34226) (nil part-side javascript 34221 . 34222) (nil part-side javascript 34202 . 34221) (nil part-side javascript 34198 . 34202) (nil face web-mode-constant-face 34198 . 34202) (nil part-side javascript 34186 . 34198) (nil part-side javascript 34185 . 34186) (nil part-side javascript 34184 . 34185) (nil face (rainbow-delimiters-depth-5-face) 34184 . 34185) (nil part-side javascript 34183 . 34184) (nil face (rainbow-delimiters-depth-5-face) 34183 . 34184) (nil part-side javascript 34182 . 34183) (nil part-side javascript 34180 . 34182) (nil part-side javascript 34165 . 34180) (nil part-side javascript 34164 . 34165) (nil part-side javascript 34160 . 34164) (nil face web-mode-constant-face 34160 . 34164) (34160 . 34271)) nil (25820 53899 613463 386000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33761) (#(" " 0 1 (part-side javascript)) . 33761) (t 25820 53899 646309 61000)) nil (25827 6953 566583 728000) 0 nil])
([nil nil ((33761 . 33763)) nil (25827 6953 566582 257000) 0 nil])
([nil nil ((33707 . 33716)) nil (25827 6953 566581 332000) 0 nil])
([nil nil ((33716 . 33728)) nil (25827 6953 566580 378000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33727) (undo-tree-id17 . -1) 33728) nil (25827 6953 566579 175000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33781) (#(" " 0 1 (part-side javascript)) . 33781)) nil (25827 6953 566576 513000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33823) (#(" " 0 1 (part-side javascript)) . 33823)) nil (25827 6953 566574 989000) 0 nil])
([nil nil ((33823 . 33825)) nil (25827 6953 566573 423000) 0 nil])
([nil nil ((33771 . 33777) (#(" " 0 1 (part-side javascript)) . 33770) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (33771 . 33772)) nil (25827 6953 566571 731000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33829)) nil (25827 6953 566561 524000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#("
" 0 1 (part-side javascript)) . 33770) (undo-tree-id14 . -1)) nil (25827 6953 566558 669000) 0 nil])
([nil nil ((33781 . 33783) 33806) nil (25827 6953 566546 291000) 0 nil])
([nil nil ((33769 . 33770)) nil (25827 6955 603244 302000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33769)) nil (25827 6972 512820 734000) 0 nil] [nil nil ((#("t" 0 1 (part-side javascript)) . -33762) (undo-tree-id7 . -1) (#("r" 0 1 (part-side javascript)) . -33763) (undo-tree-id8 . -1) (#("e" 0 1 (part-side javascript)) . -33764) (undo-tree-id9 . -1) (#("e" 0 1 (part-side javascript)) . -33765) (undo-tree-id10 . -1) (#("_" 0 1 (part-side javascript)) . -33766) (undo-tree-id11 . -1) (#("i" 0 1 (part-side javascript)) . -33767) (undo-tree-id12 . -1) (#("d" 0 1 (part-side javascript)) . -33768) (undo-tree-id13 . -1) 33769) ((33762 . 33769)) (25827 6953 879236 25000) 0 nil])
([nil nil ((33772 . 33777) (33770 . 33771)) nil (25827 6972 512819 653000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -33755) (undo-tree-id0 . -1) (#("i" 0 1 (part-side javascript)) . -33756) (undo-tree-id1 . -1) (#("l" 0 1 (part-side javascript)) . -33757) (undo-tree-id2 . -1) (#("t" 0 1 (part-side javascript)) . -33758) (undo-tree-id3 . -1) (#("e" 0 1 (part-side javascript)) . -33759) (undo-tree-id4 . -1) (#("r" 0 1 (part-side javascript)) . -33760) (undo-tree-id5 . -1) (#("_" 0 1 (part-side javascript)) . -33761) (undo-tree-id6 . -1) 33762) ((33755 . 33762)) (25827 6953 567518 400000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33787) 33785) nil (25827 6972 512818 330000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33755)) ((33755 . 33756)) (25827 6953 566476 194000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33853)) nil (25827 6972 512816 997000) 0 nil])
nil
([nil nil ((#("  " 0 2 (part-side javascript)) . -33891)) nil (25827 6972 512815 822000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33940)) nil (25827 6972 512814 837000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33983)) nil (25827 6972 512813 559000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34013)) nil (25827 6972 512812 304000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34082) 34080) nil (25827 6972 512811 118000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34127)) nil (25827 6972 512809 661000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34166)) nil (25827 6972 512808 398000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34202)) nil (25827 6972 512807 324000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34241)) nil (25827 6972 512806 195000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34282) (undo-tree-id21 . -2) 34284) nil (25827 6972 512804 467000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34292)) nil (25827 6972 512801 820000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34329) 34327) nil (25827 6972 512800 621000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34365)) nil (25827 6972 512799 163000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34404)) nil (25827 6972 512798 107000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34445) (undo-tree-id20 . -2) 34447) nil (25827 6972 512796 767000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34455)) nil (25827 6972 512794 119000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34472) 34470) nil (25827 6972 512792 912000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34523)) nil (25827 6972 512791 577000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34564)) nil (25827 6972 512790 152000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34607)) nil (25827 6972 512788 973000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -34648) (undo-tree-id19 . -2) 34650) nil (25827 6972 512787 404000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#("
" 0 1 (part-side javascript)) . 33770) (undo-tree-id18 . -1)) nil (25827 6972 512783 548000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770) (#(" " 0 1 (part-side javascript)) . 33770)) nil (25827 6972 512774 75000) 0 nil])
([nil nil ((33770 . 33771)) nil (25827 6972 512765 94000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -33683) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 33684 (t 25827 6972 549171 651000)) nil (25827 6996 672012 550000) 0 nil])
([nil nil ((33683 . 33684)) nil (25827 6996 672008 354000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 33705)) nil (25827 6996 672007 176000) 0 nil])
([nil nil ((33705 . 33706)) nil (25827 6996 672006 18000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -34147) (undo-tree-id41 . -1) 34148) nil (25827 6996 672004 304000) 0 nil])
([nil nil ((34147 . 34148)) nil (25827 6996 672001 495000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -34133) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 34134) nil (25827 6996 671997 662000) 0 nil])
([nil nil ((34133 . 34134)) nil (25827 6996 671923 856000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -33781) (undo-tree-id47 . -1) (#("a" 0 1 (part-side javascript)) . -33782) (undo-tree-id48 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -33783) (undo-tree-id49 . -1) 33784 (t 25827 6996 705210 835000)) nil (25827 7014 346291 82000) 0 nil])
([nil nil ((33781 . 33786)) nil (25827 7014 346284 571000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -33887) (undo-tree-id44 . -1) (#("a" 0 1 (part-side javascript)) . -33888) (undo-tree-id45 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -33889) (undo-tree-id46 . -1) 33890) nil (25827 7014 346281 122000) 0 nil])
([nil nil ((33887 . 33892)) nil (25827 7014 346239 80000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -33421) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("a" 0 1 (part-side javascript)) . -33422) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -33423) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 33424 (t 25827 7014 381239 510000)) nil (25827 7025 261034 739000) 0 nil])
([nil nil ((33421 . 33426)) nil (25827 7025 260955 464000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -32943) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("a" 0 1 (part-side javascript)) . -32944) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -32945) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) 32946 (t 25827 7025 297257 221000)) nil (25827 7044 827515 491000) 0 nil])
([nil nil ((32943 . 32948)) nil (25827 7044 827261 445000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -32943) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("o" 0 1 (part-side javascript)) . -32944) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("n" 0 1 (part-side javascript)) . -32945) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("s" 0 1 (part-side javascript)) . -32946) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -32947) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 32948 (t 25827 7044 861288 965000)) nil (25827 7052 542704 811000) 0 nil])
([nil nil ((32943 . 32946)) nil (25827 7052 542128 46000) 0 nil])
([nil nil ((#("deleteTooltip" 0 1 (face web-mode-variable-name-face block-side t) 1 2 (face web-mode-variable-name-face block-side t) 2 3 (face web-mode-variable-name-face block-side t) 3 4 (face web-mode-variable-name-face block-side t) 4 5 (face web-mode-variable-name-face block-side t) 5 6 (face web-mode-variable-name-face block-side t) 6 7 (face web-mode-variable-name-face block-side t) 7 8 (face web-mode-variable-name-face block-side t) 8 9 (face web-mode-variable-name-face block-side t) 9 10 (face web-mode-variable-name-face block-side t) 10 11 (face web-mode-variable-name-face block-side t) 11 12 (face web-mode-variable-name-face block-side t) 12 13 (face web-mode-variable-name-face block-side t)) . 14339) (undo-tree-id0 . -13) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (t 25827 13805 918021 184000)) nil (25827 16231 637927 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14352 . 14353) (nil block-side t 14339 . 14353) (14339 . 14353)) nil (25827 16231 637879 997000) 0 nil])
([nil nil ((28975 . 28979) ("    " . 28974) (undo-tree-id60 . -4) (28973 . 28979) (t 25827 16231 673236 172000)) nil (25827 16852 355662 228000) 0 nil])
([nil nil ((28974 . 28978)) nil (25827 16852 355657 681000) 0 nil])
([nil nil ((28983 . 28985) (#("|" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 28983) (28978 . 28988)) nil (25827 16852 355655 0) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28983) (undo-tree-id58 . -1) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28984) (undo-tree-id59 . -1) 28985) nil (25827 16852 355649 727000) 0 nil])
([nil nil ((28983 . 28990)) nil (25827 16852 355644 565000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28983) (undo-tree-id51 . -1) (#("r" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28984) (undo-tree-id52 . -1) (#("e" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28985) (undo-tree-id53 . -1) (#("a" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28986) (undo-tree-id54 . -1) (#("t" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28987) (undo-tree-id55 . -1) (#("e" 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28988) (undo-tree-id56 . -1) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -28989) (undo-tree-id57 . -1) 28990) nil (25827 16852 355641 304000) 0 nil])
([nil nil ((28983 . 29004)) nil (25827 16852 355629 270000) 0 nil])
([nil nil ((29004 . 29007)) nil (25827 16852 355628 357000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29006) (undo-tree-id50 . -1) 29007) nil (25827 16852 355627 21000) 0 nil])
([nil nil ((29010 . 29015)) nil (25827 16852 355623 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30212 . 30213) (nil tag-name "v-dialog" 30212 . 30213) (nil tag-type end 30212 . 30213) (nil tag-end t 30212 . 30213) (nil font-lock-face web-mode-html-tag-bracket-face 30212 . 30213) (nil tag-name "v-dialog" 30204 . 30212) (nil tag-type end 30204 . 30212) (nil font-lock-face web-mode-html-tag-custom-face 30204 . 30212) (nil tag-name "v-dialog" 30203 . 30204) (nil tag-type end 30203 . 30204) (nil font-lock-face web-mode-html-tag-bracket-face 30203 . 30204) (nil tag-name "v-dialog" 30202 . 30203) (nil tag-type end 30202 . 30203) (nil tag-beg 22 30202 . 30203) (nil font-lock-face web-mode-html-tag-bracket-face 30202 . 30203) (nil tag-name "v-card" 30196 . 30197) (nil tag-type end 30196 . 30197) (nil tag-end t 30196 . 30197) (nil font-lock-face web-mode-html-tag-bracket-face 30196 . 30197) (nil tag-name "v-card" 30190 . 30196) (nil tag-type end 30190 . 30196) (nil font-lock-face web-mode-html-tag-custom-face 30190 . 30196) (nil tag-name "v-card" 30189 . 30190) (nil tag-type end 30189 . 30190) (nil font-lock-face web-mode-html-tag-bracket-face 30189 . 30190) (nil tag-name "v-card" 30188 . 30189) (nil tag-type end 30188 . 30189) (nil tag-beg 22 30188 . 30189) (nil font-lock-face web-mode-html-tag-bracket-face 30188 . 30189) (nil tag-name "v-card-actions" 30180 . 30181) (nil tag-type end 30180 . 30181) (nil tag-end t 30180 . 30181) (nil font-lock-face web-mode-html-tag-bracket-face 30180 . 30181) (nil tag-name "v-card-actions" 30166 . 30180) (nil tag-type end 30166 . 30180) (nil font-lock-face web-mode-html-tag-custom-face 30166 . 30180) (nil tag-name "v-card-actions" 30165 . 30166) (nil tag-type end 30165 . 30166) (nil font-lock-face web-mode-html-tag-bracket-face 30165 . 30166) (nil tag-name "v-card-actions" 30164 . 30165) (nil tag-type end 30164 . 30165) (nil tag-beg 22 30164 . 30165) (nil font-lock-face web-mode-html-tag-bracket-face 30164 . 30165) (nil tag-name "v-btn" 30154 . 30155) (nil tag-type end 30154 . 30155) (nil tag-end t 30154 . 30155) (nil font-lock-face web-mode-html-tag-bracket-face 30154 . 30155) (nil tag-name "v-btn" 30149 . 30154) (nil tag-type end 30149 . 30154) (nil font-lock-face web-mode-html-tag-custom-face 30149 . 30154) (nil tag-name "v-btn" 30148 . 30149) (nil tag-type end 30148 . 30149) (nil font-lock-face web-mode-html-tag-bracket-face 30148 . 30149) (nil tag-name "v-btn" 30147 . 30148) (nil tag-type end 30147 . 30148) (nil tag-beg 22 30147 . 30148) (nil font-lock-face web-mode-html-tag-bracket-face 30147 . 30148) (nil block-side t 30146 . 30147) (nil block-end t 30146 . 30147) (nil block-token delimiter-end 30146 . 30147) (nil face (rainbow-delimiters-depth-1-face) 30146 . 30147) (nil block-side t 30145 . 30146) (nil block-token delimiter-end 30145 . 30146) (nil face (rainbow-delimiters-depth-2-face) 30145 . 30146) (nil block-side t 30144 . 30145) (nil face (rainbow-delimiters-depth-3-face) 30144 . 30145) (nil block-side t 30142 . 30144) (nil block-side t 30141 . 30142) (nil block-side t 30140 . 30141) (nil block-side t 30139 . 30140) (nil block-side t 30138 . 30139) (nil block-side t 30137 . 30138) (nil block-side t 30136 . 30137) (nil block-side t 30135 . 30136) (nil block-side t 30134 . 30135) (nil block-side t 30133 . 30134) (nil block-side t 30132 . 30133) (nil block-side t 30131 . 30132) (nil block-side t 30130 . 30131) (nil block-side t 30129 . 30130) (nil block-side t 30128 . 30129) (nil block-side t 30127 . 30128) (nil face (rainbow-delimiters-depth-3-face) 30127 . 30128) (nil block-side t 30126 . 30127) (nil block-side t 30124 . 30126) (nil block-side t 30123 . 30124) (nil block-token delimiter-beg 30123 . 30124) (nil face (rainbow-delimiters-depth-2-face) 30123 . 30124) (nil block-beg 0 30122 . 30123) (nil block-controls 0 30122 . 30123) (nil block-side t 30122 . 30123) (nil block-token delimiter-beg 30122 . 30123) (nil face (rainbow-delimiters-depth-1-face) 30122 . 30123) (nil tag-name "v-btn" 30121 . 30122) (nil tag-type start 30121 . 30122) (nil tag-end t 30121 . 30122) (nil font-lock-face web-mode-html-tag-bracket-face 30121 . 30122) (nil block-side t 30120 . 30121) (nil block-end t 30120 . 30121) (nil block-token delimiter-end 30120 . 30121) (nil tag-attr t 30120 . 30121) (nil tag-attr-end 6 30120 . 30121) (nil tag-name "v-btn" 30120 . 30121) (nil tag-type start 30120 . 30121) (nil block-side t 30119 . 30120) (nil tag-attr t 30119 . 30120) (nil tag-name "v-btn" 30119 . 30120) (nil tag-type start 30119 . 30120) (nil block-side t 30118 . 30119) (nil tag-attr t 30118 . 30119) (nil tag-name "v-btn" 30118 . 30119) (nil tag-type start 30118 . 30119) (nil block-side t 30117 . 30118) (nil tag-attr t 30117 . 30118) (nil tag-name "v-btn" 30117 . 30118) (nil tag-type start 30117 . 30118) (nil block-side t 30116 . 30117) (nil tag-attr t 30116 . 30117) (nil tag-name "v-btn" 30116 . 30117) (nil tag-type start 30116 . 30117) (nil block-side t 30115 . 30116) (nil tag-attr t 30115 . 30116) (nil tag-name "v-btn" 30115 . 30116) (nil tag-type start 30115 . 30116) (nil block-side t 30114 . 30115) (nil tag-attr t 30114 . 30115) (nil tag-name "v-btn" 30114 . 30115) (nil tag-type start 30114 . 30115) (nil block-side t 30113 . 30114) (nil tag-attr t 30113 . 30114) (nil tag-name "v-btn" 30113 . 30114) (nil tag-type start 30113 . 30114) (nil block-side t 30112 . 30113) (nil tag-attr t 30112 . 30113) (nil tag-name "v-btn" 30112 . 30113) (nil tag-type start 30112 . 30113) (nil block-side t 30111 . 30112) (nil tag-attr t 30111 . 30112) (nil tag-name "v-btn" 30111 . 30112) (nil tag-type start 30111 . 30112) (nil block-side t 30110 . 30111) (nil tag-attr t 30110 . 30111) (nil tag-name "v-btn" 30110 . 30111) (nil tag-type start 30110 . 30111) (nil block-side t 30109 . 30110) (nil tag-attr t 30109 . 30110) (nil tag-name "v-btn" 30109 . 30110) (nil tag-type start 30109 . 30110) (nil block-side t 30108 . 30109) (nil tag-attr t 30108 . 30109) (nil tag-name "v-btn" 30108 . 30109) (nil tag-type start 30108 . 30109) (nil block-side t 30107 . 30108) (nil tag-attr t 30107 . 30108) (nil tag-name "v-btn" 30107 . 30108) (nil tag-type start 30107 . 30108) (nil block-side t 30106 . 30107) (nil tag-attr t 30106 . 30107) (nil tag-name "v-btn" 30106 . 30107) (nil tag-type start 30106 . 30107) (nil block-side t 30105 . 30106) (nil tag-attr t 30105 . 30106) (nil tag-name "v-btn" 30105 . 30106) (nil tag-type start 30105 . 30106) (nil block-side t 30104 . 30105) (nil tag-attr t 30104 . 30105) (nil tag-name "v-btn" 30104 . 30105) (nil tag-type start 30104 . 30105) (nil block-side t 30103 . 30104) (nil tag-attr t 30103 . 30104) (nil tag-name "v-btn" 30103 . 30104) (nil tag-type start 30103 . 30104) (nil block-side t 30102 . 30103) (nil tag-attr t 30102 . 30103) (nil tag-name "v-btn" 30102 . 30103) (nil tag-type start 30102 . 30103) (nil block-side t 30101 . 30102) (nil tag-attr t 30101 . 30102) (nil tag-name "v-btn" 30101 . 30102) (nil tag-type start 30101 . 30102) (nil block-side t 30100 . 30101) (nil tag-attr t 30100 . 30101) (nil tag-name "v-btn" 30100 . 30101) (nil tag-type start 30100 . 30101) (nil block-side t 30099 . 30100) (nil tag-attr t 30099 . 30100) (nil tag-name "v-btn" 30099 . 30100) (nil tag-type start 30099 . 30100) (nil block-side t 30098 . 30099) (nil tag-attr t 30098 . 30099) (nil tag-name "v-btn" 30098 . 30099) (nil tag-type start 30098 . 30099) (nil block-side t 30097 . 30098) (nil tag-attr t 30097 . 30098) (nil tag-name "v-btn" 30097 . 30098) (nil tag-type start 30097 . 30098) (nil block-side t 30096 . 30097) (nil tag-attr t 30096 . 30097) (nil tag-name "v-btn" 30096 . 30097) (nil tag-type start 30096 . 30097) (nil block-side t 30095 . 30096) (nil tag-attr t 30095 . 30096) (nil tag-name "v-btn" 30095 . 30096) (nil tag-type start 30095 . 30096) (nil block-side t 30094 . 30095) (nil tag-attr t 30094 . 30095) (nil tag-name "v-btn" 30094 . 30095) (nil tag-type start 30094 . 30095) (nil block-side t 30093 . 30094) (nil tag-attr t 30093 . 30094) (nil tag-name "v-btn" 30093 . 30094) (nil tag-type start 30093 . 30094) (nil block-side t 30092 . 30093) (nil tag-attr t 30092 . 30093) (nil tag-name "v-btn" 30092 . 30093) (nil tag-type start 30092 . 30093) (nil block-side t 30091 . 30092) (nil tag-attr t 30091 . 30092) (nil tag-name "v-btn" 30091 . 30092) (nil tag-type start 30091 . 30092) (nil block-side t 30090 . 30091) (nil tag-attr t 30090 . 30091) (nil tag-name "v-btn" 30090 . 30091) (nil tag-type start 30090 . 30091) (nil block-side t 30089 . 30090) (nil tag-attr t 30089 . 30090) (nil tag-name "v-btn" 30089 . 30090) (nil tag-type start 30089 . 30090) (nil block-side t 30088 . 30089) (nil tag-attr t 30088 . 30089) (nil tag-name "v-btn" 30088 . 30089) (nil tag-type start 30088 . 30089) (nil block-side t 30087 . 30088) (nil tag-attr t 30087 . 30088) (nil tag-name "v-btn" 30087 . 30088) (nil tag-type start 30087 . 30088) (nil block-side t 30086 . 30087) (nil tag-attr t 30086 . 30087) (nil tag-name "v-btn" 30086 . 30087) (nil tag-type start 30086 . 30087) (nil block-side t 30085 . 30086) (nil tag-attr t 30085 . 30086) (nil tag-name "v-btn" 30085 . 30086) (nil tag-type start 30085 . 30086) (nil block-side t 30084 . 30085) (nil tag-attr t 30084 . 30085) (nil tag-name "v-btn" 30084 . 30085) (nil tag-type start 30084 . 30085) (nil block-side t 30083 . 30084) (nil tag-attr t 30083 . 30084) (nil tag-name "v-btn" 30083 . 30084) (nil tag-type start 30083 . 30084) (nil block-side t 30082 . 30083) (nil tag-attr t 30082 . 30083) (nil tag-name "v-btn" 30082 . 30083) (nil tag-type start 30082 . 30083) (nil block-side t 30081 . 30082) (nil tag-attr t 30081 . 30082) (nil tag-name "v-btn" 30081 . 30082) (nil tag-type start 30081 . 30082) (nil block-side t 30080 . 30081) (nil tag-attr t 30080 . 30081) (nil tag-name "v-btn" 30080 . 30081) (nil tag-type start 30080 . 30081) (nil block-side t 30079 . 30080) (nil tag-attr t 30079 . 30080) (nil tag-name "v-btn" 30079 . 30080) (nil tag-type start 30079 . 30080) (nil block-side t 30078 . 30079) (nil tag-attr t 30078 . 30079) (nil tag-name "v-btn" 30078 . 30079) (nil tag-type start 30078 . 30079) (nil block-side t 30077 . 30078) (nil tag-attr t 30077 . 30078) (nil tag-name "v-btn" 30077 . 30078) (nil tag-type start 30077 . 30078) (nil block-side t 30076 . 30077) (nil tag-attr t 30076 . 30077) (nil tag-name "v-btn" 30076 . 30077) (nil tag-type start 30076 . 30077) (nil block-side t 30075 . 30076) (nil tag-attr t 30075 . 30076) (nil tag-name "v-btn" 30075 . 30076) (nil tag-type start 30075 . 30076) (nil block-side t 30074 . 30075) (nil tag-attr t 30074 . 30075) (nil tag-name "v-btn" 30074 . 30075) (nil tag-type start 30074 . 30075) (nil block-side t 30073 . 30074) (nil tag-attr t 30073 . 30074) (nil tag-name "v-btn" 30073 . 30074) (nil tag-type start 30073 . 30074) (nil block-side t 30072 . 30073) (nil tag-attr t 30072 . 30073) (nil tag-name "v-btn" 30072 . 30073) (nil tag-type start 30072 . 30073) (nil block-side t 30071 . 30072) (nil tag-attr t 30071 . 30072) (nil tag-name "v-btn" 30071 . 30072) (nil tag-type start 30071 . 30072) (nil block-side t 30070 . 30071) (nil tag-attr t 30070 . 30071) (nil tag-name "v-btn" 30070 . 30071) (nil tag-type start 30070 . 30071) (nil block-side t 30069 . 30070) (nil tag-attr t 30069 . 30070) (nil tag-name "v-btn" 30069 . 30070) (nil tag-type start 30069 . 30070) (nil block-side t 30068 . 30069) (nil tag-attr t 30068 . 30069) (nil tag-name "v-btn" 30068 . 30069) (nil tag-type start 30068 . 30069) (nil block-side t 30067 . 30068) (nil tag-attr t 30067 . 30068) (nil tag-name "v-btn" 30067 . 30068) (nil tag-type start 30067 . 30068) (nil block-side t 30066 . 30067) (nil tag-attr t 30066 . 30067) (nil tag-name "v-btn" 30066 . 30067) (nil tag-type start 30066 . 30067) (nil block-side t 30065 . 30066) (nil tag-attr t 30065 . 30066) (nil tag-name "v-btn" 30065 . 30066) (nil tag-type start 30065 . 30066) (nil block-side t 30064 . 30065) (nil tag-attr t 30064 . 30065) (nil tag-name "v-btn" 30064 . 30065) (nil tag-type start 30064 . 30065) (nil block-side t 30063 . 30064) (nil tag-attr t 30063 . 30064) (nil tag-name "v-btn" 30063 . 30064) (nil tag-type start 30063 . 30064) (nil block-side t 30062 . 30063) (nil tag-attr t 30062 . 30063) (nil tag-name "v-btn" 30062 . 30063) (nil tag-type start 30062 . 30063) (nil block-side t 30061 . 30062) (nil tag-attr t 30061 . 30062) (nil tag-name "v-btn" 30061 . 30062) (nil tag-type start 30061 . 30062) (nil block-side t 30060 . 30061) (nil block-token delimiter-beg 30060 . 30061) (nil tag-attr t 30060 . 30061) (nil tag-name "v-btn" 30060 . 30061) (nil tag-type start 30060 . 30061) (nil block-side t 30059 . 30060) (nil block-token delimiter-beg 30059 . 30060) (nil tag-attr t 30059 . 30060) (nil tag-name "v-btn" 30059 . 30060) (nil tag-type start 30059 . 30060) (nil block-side t 30058 . 30059) (nil block-token delimiter-beg 30058 . 30059) (nil tag-attr t 30058 . 30059) (nil tag-name "v-btn" 30058 . 30059) (nil tag-type start 30058 . 30059) (nil block-side t 30057 . 30058) (nil block-token delimiter-beg 30057 . 30058) (nil tag-attr t 30057 . 30058) (nil tag-name "v-btn" 30057 . 30058) (nil tag-type start 30057 . 30058) (nil block-side t 30056 . 30057) (nil block-token delimiter-beg 30056 . 30057) (nil tag-attr t 30056 . 30057) (nil tag-name "v-btn" 30056 . 30057) (nil tag-type start 30056 . 30057) (nil block-side t 30055 . 30056) (nil block-token delimiter-beg 30055 . 30056) (nil tag-attr t 30055 . 30056) (nil tag-name "v-btn" 30055 . 30056) (nil tag-type start 30055 . 30056) (nil block-side t 30054 . 30055) (nil block-token delimiter-beg 30054 . 30055) (nil tag-attr t 30054 . 30055) (nil tag-name "v-btn" 30054 . 30055) (nil tag-type start 30054 . 30055) (nil block-beg 0 30053 . 30054) (nil block-controls 0 30053 . 30054) (nil block-side t 30053 . 30054) (nil block-token delimiter-beg 30053 . 30054) (nil tag-attr-beg 2 30053 . 30054) (nil tag-attr t 30053 . 30054) (nil tag-name "v-btn" 30053 . 30054) (nil tag-type start 30053 . 30054) (nil tag-name "v-btn" 30052 . 30053) (nil tag-type start 30052 . 30053) (nil tag-attr t 30051 . 30052) (nil tag-attr-end 5 30051 . 30052) (nil tag-name "v-btn" 30051 . 30052) (nil tag-type start 30051 . 30052) (nil font-lock-face web-mode-html-attr-value-face 30051 . 30052) (nil tag-attr t 30045 . 30051) (nil tag-name "v-btn" 30045 . 30051) (nil tag-type start 30045 . 30051) (nil font-lock-face web-mode-html-attr-value-face 30045 . 30051) (nil tag-attr t 30044 . 30045) (nil tag-name "v-btn" 30044 . 30045) (nil tag-type start 30044 . 30045) (nil font-lock-face web-mode-html-attr-equal-face 30044 . 30045) (nil tag-attr t 30040 . 30044) (nil tag-name "v-btn" 30040 . 30044) (nil tag-type start 30040 . 30044) (nil font-lock-face web-mode-html-attr-name-face 30040 . 30044) (nil tag-attr-beg 0 30039 . 30040) (nil tag-attr t 30039 . 30040) (nil tag-name "v-btn" 30039 . 30040) (nil tag-type start 30039 . 30040) (nil font-lock-face web-mode-html-attr-name-face 30039 . 30040) (nil tag-name "v-btn" 30038 . 30039) (nil tag-type start 30038 . 30039) (nil tag-name "v-btn" 30033 . 30038) (nil tag-type start 30033 . 30038) (nil font-lock-face web-mode-html-tag-custom-face 30033 . 30038) (nil tag-name "v-btn" 30032 . 30033) (nil tag-type start 30032 . 30033) (nil tag-beg 19 30032 . 30033) (nil font-lock-face web-mode-html-tag-bracket-face 30032 . 30033) (nil tag-name "v-btn" 30020 . 30021) (nil tag-type end 30020 . 30021) (nil tag-end t 30020 . 30021) (nil font-lock-face web-mode-html-tag-bracket-face 30020 . 30021) (nil tag-name "v-btn" 30015 . 30020) (nil tag-type end 30015 . 30020) (nil font-lock-face web-mode-html-tag-custom-face 30015 . 30020) (nil tag-name "v-btn" 30014 . 30015) (nil tag-type end 30014 . 30015) (nil font-lock-face web-mode-html-tag-bracket-face 30014 . 30015) (nil tag-name "v-btn" 30013 . 30014) (nil tag-type end 30013 . 30014) (nil tag-beg 22 30013 . 30014) (nil font-lock-face web-mode-html-tag-bracket-face 30013 . 30014) (nil block-side t 30012 . 30013) (nil block-end t 30012 . 30013) (nil block-token delimiter-end 30012 . 30013) (nil face (rainbow-delimiters-depth-1-face) 30012 . 30013) (nil block-side t 30011 . 30012) (nil block-token delimiter-end 30011 . 30012) (nil face (rainbow-delimiters-depth-2-face) 30011 . 30012) (nil block-side t 30010 . 30011) (nil face (rainbow-delimiters-depth-3-face) 30010 . 30011) (nil block-side t 30008 . 30010) (nil block-side t 30007 . 30008) (nil block-side t 30006 . 30007) (nil block-side t 30005 . 30006) (nil block-side t 30004 . 30005) (nil block-side t 30003 . 30004) (nil block-side t 30002 . 30003) (nil block-side t 30001 . 30002) (nil block-side t 30000 . 30001) (nil block-side t 29999 . 30000) (nil block-side t 29998 . 29999) (nil block-side t 29997 . 29998) (nil block-side t 29996 . 29997) (nil block-side t 29995 . 29996) (nil block-side t 29994 . 29995) (nil block-side t 29993 . 29994) (nil block-side t 29992 . 29993) (nil block-side t 29991 . 29992) (nil face (rainbow-delimiters-depth-3-face) 29991 . 29992) (nil block-side t 29990 . 29991) (nil block-side t 29988 . 29990) (nil block-side t 29987 . 29988) (nil block-token delimiter-beg 29987 . 29988) (nil face (rainbow-delimiters-depth-2-face) 29987 . 29988) (nil block-beg 0 29986 . 29987) (nil block-controls 0 29986 . 29987) (nil block-side t 29986 . 29987) (nil block-token delimiter-beg 29986 . 29987) (nil face (rainbow-delimiters-depth-1-face) 29986 . 29987) (nil tag-name "v-btn" 29985 . 29986) (nil tag-type start 29985 . 29986) (nil tag-end t 29985 . 29986) (nil font-lock-face web-mode-html-tag-bracket-face 29985 . 29986) (nil block-side t 29984 . 29985) (nil block-end t 29984 . 29985) (nil block-token delimiter-end 29984 . 29985) (nil tag-attr t 29984 . 29985) (nil tag-attr-end 6 29984 . 29985) (nil tag-name "v-btn" 29984 . 29985) (nil tag-type start 29984 . 29985) (nil block-side t 29982 . 29984) (nil tag-attr t 29982 . 29984) (nil tag-name "v-btn" 29982 . 29984) (nil tag-type start 29982 . 29984) (nil block-side t 29961 . 29982) (nil tag-attr t 29961 . 29982) (nil tag-name "v-btn" 29961 . 29982) (nil tag-type start 29961 . 29982) (nil block-side t 29960 . 29961) (nil tag-attr t 29960 . 29961) (nil tag-name "v-btn" 29960 . 29961) (nil tag-type start 29960 . 29961) (nil block-side t 29959 . 29960) (nil tag-attr t 29959 . 29960) (nil tag-name "v-btn" 29959 . 29960) (nil tag-type start 29959 . 29960) (nil block-side t 29958 . 29959) (nil tag-attr t 29958 . 29959) (nil tag-name "v-btn" 29958 . 29959) (nil tag-type start 29958 . 29959) (nil block-side t 29957 . 29958) (nil tag-attr t 29957 . 29958) (nil tag-name "v-btn" 29957 . 29958) (nil tag-type start 29957 . 29958) (nil block-side t 29956 . 29957) (nil tag-attr t 29956 . 29957) (nil tag-name "v-btn" 29956 . 29957) (nil tag-type start 29956 . 29957) (nil block-side t 29955 . 29956) (nil tag-attr t 29955 . 29956) (nil tag-name "v-btn" 29955 . 29956) (nil tag-type start 29955 . 29956) (nil block-side t 29954 . 29955) (nil tag-attr t 29954 . 29955) (nil tag-name "v-btn" 29954 . 29955) (nil tag-type start 29954 . 29955) (nil block-side t 29953 . 29954) (nil tag-attr t 29953 . 29954) (nil tag-name "v-btn" 29953 . 29954) (nil tag-type start 29953 . 29954) (nil block-side t 29952 . 29953) (nil tag-attr t 29952 . 29953) (nil tag-name "v-btn" 29952 . 29953) (nil tag-type start 29952 . 29953) (nil block-side t 29951 . 29952) (nil tag-attr t 29951 . 29952) (nil tag-name "v-btn" 29951 . 29952) (nil tag-type start 29951 . 29952) (nil block-side t 29950 . 29951) (nil tag-attr t 29950 . 29951) (nil tag-name "v-btn" 29950 . 29951) (nil tag-type start 29950 . 29951) (nil block-side t 29949 . 29950) (nil tag-attr t 29949 . 29950) (nil tag-name "v-btn" 29949 . 29950) (nil tag-type start 29949 . 29950) (nil block-side t 29948 . 29949) (nil tag-attr t 29948 . 29949) (nil tag-name "v-btn" 29948 . 29949) (nil tag-type start 29948 . 29949) (nil block-side t 29947 . 29948) (nil tag-attr t 29947 . 29948) (nil tag-name "v-btn" 29947 . 29948) (nil tag-type start 29947 . 29948) (nil block-side t 29946 . 29947) (nil tag-attr t 29946 . 29947) (nil tag-name "v-btn" 29946 . 29947) (nil tag-type start 29946 . 29947) (nil block-side t 29945 . 29946) (nil tag-attr t 29945 . 29946) (nil tag-name "v-btn" 29945 . 29946) (nil tag-type start 29945 . 29946) (nil block-side t 29944 . 29945) (nil tag-attr t 29944 . 29945) (nil tag-name "v-btn" 29944 . 29945) (nil tag-type start 29944 . 29945) (nil block-side t 29943 . 29944) (nil tag-attr t 29943 . 29944) (nil tag-name "v-btn" 29943 . 29944) (nil tag-type start 29943 . 29944) (nil block-side t 29942 . 29943) (nil tag-attr t 29942 . 29943) (nil tag-name "v-btn" 29942 . 29943) (nil tag-type start 29942 . 29943) (nil block-side t 29941 . 29942) (nil tag-attr t 29941 . 29942) (nil tag-name "v-btn" 29941 . 29942) (nil tag-type start 29941 . 29942) (nil block-side t 29940 . 29941) (nil tag-attr t 29940 . 29941) (nil tag-name "v-btn" 29940 . 29941) (nil tag-type start 29940 . 29941) (nil block-side t 29939 . 29940) (nil tag-attr t 29939 . 29940) (nil tag-name "v-btn" 29939 . 29940) (nil tag-type start 29939 . 29940) (nil block-side t 29938 . 29939) (nil block-token delimiter-beg 29938 . 29939) (nil tag-attr t 29938 . 29939) (nil tag-name "v-btn" 29938 . 29939) (nil tag-type start 29938 . 29939) (nil block-side t 29937 . 29938) (nil block-token delimiter-beg 29937 . 29938) (nil tag-attr t 29937 . 29938) (nil tag-name "v-btn" 29937 . 29938) (nil tag-type start 29937 . 29938) (nil block-side t 29936 . 29937) (nil block-token delimiter-beg 29936 . 29937) (nil tag-attr t 29936 . 29937) (nil tag-name "v-btn" 29936 . 29937) (nil tag-type start 29936 . 29937) (nil block-side t 29935 . 29936) (nil block-token delimiter-beg 29935 . 29936) (nil tag-attr t 29935 . 29936) (nil tag-name "v-btn" 29935 . 29936) (nil tag-type start 29935 . 29936) (nil block-side t 29934 . 29935) (nil block-token delimiter-beg 29934 . 29935) (nil tag-attr t 29934 . 29935) (nil tag-name "v-btn" 29934 . 29935) (nil tag-type start 29934 . 29935) (nil block-side t 29933 . 29934) (nil block-token delimiter-beg 29933 . 29934) (nil tag-attr t 29933 . 29934) (nil tag-name "v-btn" 29933 . 29934) (nil tag-type start 29933 . 29934) (nil block-side t 29932 . 29933) (nil block-token delimiter-beg 29932 . 29933) (nil tag-attr t 29932 . 29933) (nil tag-name "v-btn" 29932 . 29933) (nil tag-type start 29932 . 29933) (nil block-beg 0 29931 . 29932) (nil block-controls 0 29931 . 29932) (nil block-side t 29931 . 29932) (nil block-token delimiter-beg 29931 . 29932) (nil tag-attr-beg 2 29931 . 29932) (nil tag-attr t 29931 . 29932) (nil tag-name "v-btn" 29931 . 29932) (nil tag-type start 29931 . 29932) (nil tag-name "v-btn" 29930 . 29931) (nil tag-type start 29930 . 29931) (nil tag-attr t 29929 . 29930) (nil tag-attr-end 5 29929 . 29930) (nil tag-name "v-btn" 29929 . 29930) (nil tag-type start 29929 . 29930) (nil font-lock-face web-mode-html-attr-value-face 29929 . 29930) (nil tag-attr t 29921 . 29929) (nil tag-name "v-btn" 29921 . 29929) (nil tag-type start 29921 . 29929) (nil font-lock-face web-mode-html-attr-value-face 29921 . 29929) (nil tag-attr t 29920 . 29921) (nil tag-name "v-btn" 29920 . 29921) (nil tag-type start 29920 . 29921) (nil font-lock-face web-mode-html-attr-equal-face 29920 . 29921) (nil tag-attr t 29916 . 29920) (nil tag-name "v-btn" 29916 . 29920) (nil tag-type start 29916 . 29920) (nil font-lock-face web-mode-html-attr-name-face 29916 . 29920) (nil tag-attr-beg 0 29915 . 29916) (nil tag-attr t 29915 . 29916) (nil tag-name "v-btn" 29915 . 29916) (nil tag-type start 29915 . 29916) (nil font-lock-face web-mode-html-attr-name-face 29915 . 29916) (nil tag-name "v-btn" 29914 . 29915) (nil tag-type start 29914 . 29915) (nil tag-name "v-btn" 29909 . 29914) (nil tag-type start 29909 . 29914) (nil font-lock-face web-mode-html-tag-custom-face 29909 . 29914) (nil tag-name "v-btn" 29908 . 29909) (nil tag-type start 29908 . 29909) (nil tag-beg 19 29908 . 29909) (nil font-lock-face web-mode-html-tag-bracket-face 29908 . 29909) (nil tag-name "v-spacer" 29896 . 29897) (nil tag-type end 29896 . 29897) (nil tag-end t 29896 . 29897) (nil font-lock-face web-mode-html-tag-bracket-face 29896 . 29897) (nil tag-name "v-spacer" 29888 . 29896) (nil tag-type end 29888 . 29896) (nil font-lock-face web-mode-html-tag-custom-face 29888 . 29896) (nil tag-name "v-spacer" 29887 . 29888) (nil tag-type end 29887 . 29888) (nil font-lock-face web-mode-html-tag-bracket-face 29887 . 29888) (nil tag-name "v-spacer" 29886 . 29887) (nil tag-type end 29886 . 29887) (nil tag-beg 22 29886 . 29887) (nil font-lock-face web-mode-html-tag-bracket-face 29886 . 29887) (nil tag-name "v-spacer" 29885 . 29886) (nil tag-type start 29885 . 29886) (nil tag-end t 29885 . 29886) (nil font-lock-face web-mode-html-tag-bracket-face 29885 . 29886) (nil tag-name "v-spacer" 29877 . 29885) (nil tag-type start 29877 . 29885) (nil font-lock-face web-mode-html-tag-custom-face 29877 . 29885) (nil tag-name "v-spacer" 29876 . 29877) (nil tag-type start 29876 . 29877) (nil tag-beg 18 29876 . 29877) (nil font-lock-face web-mode-html-tag-bracket-face 29876 . 29877) (nil tag-name "v-card-actions" 29864 . 29865) (nil tag-type start 29864 . 29865) (nil tag-end t 29864 . 29865) (nil font-lock-face web-mode-html-tag-bracket-face 29864 . 29865) (nil tag-name "v-card-actions" 29850 . 29864) (nil tag-type start 29850 . 29864) (nil font-lock-face web-mode-html-tag-custom-face 29850 . 29864) (nil tag-name "v-card-actions" 29849 . 29850) (nil tag-type start 29849 . 29850) (nil tag-beg 18 29849 . 29850) (nil font-lock-face web-mode-html-tag-bracket-face 29849 . 29850) (nil tag-name "v-card-text" 29839 . 29840) (nil tag-type end 29839 . 29840) (nil tag-end t 29839 . 29840) (nil font-lock-face web-mode-html-tag-bracket-face 29839 . 29840) (nil tag-name "v-card-text" 29828 . 29839) (nil tag-type end 29828 . 29839) (nil font-lock-face web-mode-html-tag-custom-face 29828 . 29839) (nil tag-name "v-card-text" 29827 . 29828) (nil tag-type end 29827 . 29828) (nil font-lock-face web-mode-html-tag-bracket-face 29827 . 29828) (nil tag-name "v-card-text" 29826 . 29827) (nil tag-type end 29826 . 29827) (nil tag-beg 22 29826 . 29827) (nil font-lock-face web-mode-html-tag-bracket-face 29826 . 29827) (nil tag-name "p" 29816 . 29817) (nil tag-type end 29816 . 29817) (nil tag-end t 29816 . 29817) (nil font-lock-face web-mode-html-tag-bracket-face 29816 . 29817) (nil tag-name "p" 29815 . 29816) (nil tag-type end 29815 . 29816) (nil font-lock-face web-mode-html-tag-face 29815 . 29816) (nil tag-name "p" 29814 . 29815) (nil tag-type end 29814 . 29815) (nil font-lock-face web-mode-html-tag-bracket-face 29814 . 29815) (nil tag-name "p" 29813 . 29814) (nil tag-type end 29813 . 29814) (nil tag-beg 20 29813 . 29814) (nil font-lock-face web-mode-html-tag-bracket-face 29813 . 29814) (nil block-side t 29812 . 29813) (nil block-end t 29812 . 29813) (nil block-token delimiter-end 29812 . 29813) (nil face (rainbow-delimiters-depth-1-face) 29812 . 29813) (nil block-side t 29811 . 29812) (nil block-token delimiter-end 29811 . 29812) (nil face (rainbow-delimiters-depth-2-face) 29811 . 29812) (nil block-side t 29810 . 29811) (nil face (rainbow-delimiters-depth-3-face) 29810 . 29811) (nil block-side t 29809 . 29810) (nil block-side t 29808 . 29809) (nil block-side t 29807 . 29808) (nil block-side t 29806 . 29807) (nil block-side t 29805 . 29806) (nil block-side t 29804 . 29805) (nil block-side t 29803 . 29804) (nil block-side t 29802 . 29803) (nil block-side t 29801 . 29802) (nil block-side t 29800 . 29801) (nil block-side t 29799 . 29800) (nil block-side t 29798 . 29799) (nil block-side t 29797 . 29798) (nil block-side t 29796 . 29797) (nil block-side t 29795 . 29796) (nil block-side t 29794 . 29795) (nil block-side t 29793 . 29794) (nil block-side t 29792 . 29793) (nil block-side t 29791 . 29792) (nil block-side t 29790 . 29791) (nil block-side t 29789 . 29790) (nil block-side t 29788 . 29789) (nil block-side t 29787 . 29788) (nil block-side t 29786 . 29787) (nil face (rainbow-delimiters-depth-3-face) 29786 . 29787) (nil block-side t 29785 . 29786) (nil block-side t 29784 . 29785) (nil block-side t 29783 . 29784) (nil block-token delimiter-beg 29783 . 29784) (nil face (rainbow-delimiters-depth-2-face) 29783 . 29784) (nil block-beg 0 29782 . 29783) (nil block-controls 0 29782 . 29783) (nil block-side t 29782 . 29783) (nil block-token delimiter-beg 29782 . 29783) (nil face (rainbow-delimiters-depth-1-face) 29782 . 29783) (nil tag-name "p" 29781 . 29782) (nil tag-type start 29781 . 29782) (nil tag-end t 29781 . 29782) (nil font-lock-face web-mode-html-tag-bracket-face 29781 . 29782) (nil tag-attr t 29780 . 29781) (nil tag-attr-end 4 29780 . 29781) (nil tag-name "p" 29780 . 29781) (nil tag-type start 29780 . 29781) (nil font-lock-face web-mode-html-attr-value-face 29780 . 29781) (nil tag-attr t 29756 . 29780) (nil tag-name "p" 29756 . 29780) (nil tag-type start 29756 . 29780) (nil font-lock-face web-mode-html-attr-value-face 29756 . 29780) (nil tag-attr t 29755 . 29756) (nil tag-name "p" 29755 . 29756) (nil tag-type start 29755 . 29756) (nil font-lock-face web-mode-html-attr-equal-face 29755 . 29756) (nil tag-attr t 29752 . 29755) (nil tag-name "p" 29752 . 29755) (nil tag-type start 29752 . 29755) (nil font-lock-face web-mode-html-attr-engine-face 29752 . 29755) (nil tag-attr-beg 2 29751 . 29752) (nil tag-attr t 29751 . 29752) (nil tag-name "p" 29751 . 29752) (nil tag-type start 29751 . 29752) (nil font-lock-face web-mode-html-attr-engine-face 29751 . 29752) (nil tag-name "p" 29750 . 29751) (nil tag-type start 29750 . 29751) (nil tag-attr t 29749 . 29750) (nil tag-attr-end 5 29749 . 29750) (nil tag-name "p" 29749 . 29750) (nil tag-type start 29749 . 29750) (nil font-lock-face web-mode-html-attr-value-face 29749 . 29750) (nil tag-attr t 29739 . 29749) (nil tag-name "p" 29739 . 29749) (nil tag-type start 29739 . 29749) (nil font-lock-face web-mode-html-attr-value-face 29739 . 29749) (nil tag-attr t 29738 . 29739) (nil tag-name "p" 29738 . 29739) (nil tag-type start 29738 . 29739) (nil font-lock-face web-mode-html-attr-equal-face 29738 . 29739) (nil tag-attr t 29734 . 29738) (nil tag-name "p" 29734 . 29738) (nil tag-type start 29734 . 29738) (nil font-lock-face web-mode-html-attr-name-face 29734 . 29738) (nil tag-attr-beg 0 29733 . 29734) (nil tag-attr t 29733 . 29734) (nil tag-name "p" 29733 . 29734) (nil tag-type start 29733 . 29734) (nil font-lock-face web-mode-html-attr-name-face 29733 . 29734) (nil tag-name "p" 29732 . 29733) (nil tag-type start 29732 . 29733) (nil tag-name "p" 29731 . 29732) (nil tag-type start 29731 . 29732) (nil font-lock-face web-mode-html-tag-face 29731 . 29732) (nil tag-name "p" 29730 . 29731) (nil tag-type start 29730 . 29731) (nil tag-beg 17 29730 . 29731) (nil font-lock-face web-mode-html-tag-bracket-face 29730 . 29731) (nil block-side t 29718 . 29719) (nil block-end t 29718 . 29719) (nil block-token delimiter-end 29718 . 29719) (nil face (rainbow-delimiters-depth-1-face) 29718 . 29719) (nil block-side t 29717 . 29718) (nil block-token delimiter-end 29717 . 29718) (nil face (rainbow-delimiters-depth-2-face) 29717 . 29718) (nil block-side t 29716 . 29717) (nil block-side t 29715 . 29716) (nil face (rainbow-delimiters-depth-3-face) 29715 . 29716) (nil block-side t 29714 . 29715) (nil block-side t 29713 . 29714) (nil block-side t 29712 . 29713) (nil block-side t 29711 . 29712) (nil block-side t 29710 . 29711) (nil block-side t 29709 . 29710) (nil block-side t 29708 . 29709) (nil block-side t 29707 . 29708) (nil block-side t 29706 . 29707) (nil block-side t 29705 . 29706) (nil block-side t 29704 . 29705) (nil block-side t 29703 . 29704) (nil block-side t 29702 . 29703) (nil block-side t 29701 . 29702) (nil block-side t 29700 . 29701) (nil block-side t 29699 . 29700) (nil block-side t 29698 . 29699) (nil block-side t 29697 . 29698) (nil block-side t 29696 . 29697) (nil block-side t 29695 . 29696) (nil block-side t 29694 . 29695) (nil block-side t 29693 . 29694) (nil block-side t 29692 . 29693) (nil block-side t 29691 . 29692) (nil block-side t 29690 . 29691) (nil block-side t 29689 . 29690) (nil block-side t 29688 . 29689) (nil block-side t 29687 . 29688) (nil block-side t 29686 . 29687) (nil block-side t 29685 . 29686) (nil block-side t 29684 . 29685) (nil block-side t 29683 . 29684) (nil block-side t 29682 . 29683) (nil block-side t 29681 . 29682) (nil block-side t 29680 . 29681) (nil block-side t 29679 . 29680) (nil block-side t 29678 . 29679) (nil block-side t 29677 . 29678) (nil block-side t 29676 . 29677) (nil block-side t 29675 . 29676) (nil block-side t 29674 . 29675) (nil block-side t 29673 . 29674) (nil block-side t 29672 . 29673) (nil face (rainbow-delimiters-depth-3-face) 29672 . 29673) (nil block-side t 29671 . 29672) (nil block-side t 29669 . 29671) (nil block-side t 29668 . 29669) (nil block-token delimiter-beg 29668 . 29669) (nil face (rainbow-delimiters-depth-2-face) 29668 . 29669) (nil block-beg 0 29667 . 29668) (nil block-controls 0 29667 . 29668) (nil block-side t 29667 . 29668) (nil block-token delimiter-beg 29667 . 29668) (nil face (rainbow-delimiters-depth-1-face) 29667 . 29668) (nil tag-name "v-card-text" 29655 . 29656) (nil tag-type start 29655 . 29656) (nil tag-end t 29655 . 29656) (nil font-lock-face web-mode-html-tag-bracket-face 29655 . 29656) (nil tag-name "v-card-text" 29644 . 29655) (nil tag-type start 29644 . 29655) (nil font-lock-face web-mode-html-tag-custom-face 29644 . 29655) (nil tag-name "v-card-text" 29643 . 29644) (nil tag-type start 29643 . 29644) (nil tag-beg 18 29643 . 29644) (nil font-lock-face web-mode-html-tag-bracket-face 29643 . 29644) (nil tag-name "v-card-text" 29633 . 29634) (nil tag-type end 29633 . 29634) (nil tag-end t 29633 . 29634) (nil font-lock-face web-mode-html-tag-bracket-face 29633 . 29634) (nil tag-name "v-card-text" 29622 . 29633) (nil tag-type end 29622 . 29633) (nil font-lock-face web-mode-html-tag-custom-face 29622 . 29633) (nil tag-name "v-card-text" 29621 . 29622) (nil tag-type end 29621 . 29622) (nil font-lock-face web-mode-html-tag-bracket-face 29621 . 29622) (nil tag-name "v-card-text" 29620 . 29621) (nil tag-type end 29620 . 29621) (nil tag-beg 22 29620 . 29621) (nil font-lock-face web-mode-html-tag-bracket-face 29620 . 29621) (nil block-side t 29610 . 29611) (nil block-end t 29610 . 29611) (nil block-token delimiter-end 29610 . 29611) (nil face (rainbow-delimiters-depth-1-face) 29610 . 29611) (nil block-side t 29609 . 29610) (nil block-token delimiter-end 29609 . 29610) (nil face (rainbow-delimiters-depth-2-face) 29609 . 29610) (nil block-side t 29608 . 29609) (nil block-side t 29607 . 29608) (nil block-side t 29606 . 29607) (nil block-side t 29605 . 29606) (nil block-side t 29604 . 29605) (nil block-side t 29603 . 29604) (nil block-side t 29602 . 29603) (nil block-side t 29601 . 29602) (nil block-side t 29600 . 29601) (nil block-side t 29599 . 29600) (nil block-side t 29598 . 29599) (nil block-side t 29597 . 29598) (nil block-side t 29596 . 29597) (nil block-side t 29595 . 29596) (nil block-side t 29594 . 29595) (nil block-side t 29593 . 29594) (nil block-side t 29592 . 29593) (nil block-side t 29591 . 29592) (nil block-side t 29590 . 29591) (nil block-side t 29589 . 29590) (nil block-side t 29588 . 29589) (nil block-side t 29587 . 29588) (nil block-side t 29586 . 29587) (nil block-side t 29585 . 29586) (nil block-side t 29584 . 29585) (nil block-side t 29583 . 29584) (nil block-side t 29580 . 29583) (nil block-side t 29579 . 29580) (nil face (rainbow-delimiters-depth-3-face) 29579 . 29580) (nil block-side t 29578 . 29579) (nil block-side t 29577 . 29578) (nil block-side t 29576 . 29577) (nil block-side t 29575 . 29576) (nil block-side t 29574 . 29575) (nil block-side t 29573 . 29574) (nil block-side t 29572 . 29573) (nil block-side t 29571 . 29572) (nil block-side t 29570 . 29571) (nil block-side t 29569 . 29570) (nil block-side t 29568 . 29569) (nil block-side t 29567 . 29568) (nil block-side t 29566 . 29567) (nil block-side t 29565 . 29566) (nil block-side t 29564 . 29565) (nil block-side t 29563 . 29564) (nil block-side t 29562 . 29563) (nil block-side t 29561 . 29562) (nil block-side t 29560 . 29561) (nil block-side t 29559 . 29560) (nil block-side t 29558 . 29559) (nil block-side t 29557 . 29558) (nil block-side t 29556 . 29557) (nil block-side t 29555 . 29556) (nil block-side t 29554 . 29555) (nil block-side t 29553 . 29554) (nil block-side t 29552 . 29553) (nil block-side t 29551 . 29552) (nil block-side t 29550 . 29551) (nil block-side t 29549 . 29550) (nil block-side t 29548 . 29549) (nil block-side t 29547 . 29548) (nil block-side t 29546 . 29547) (nil block-side t 29545 . 29546) (nil block-side t 29544 . 29545) (nil block-side t 29543 . 29544) (nil block-side t 29542 . 29543) (nil block-side t 29541 . 29542) (nil block-side t 29540 . 29541) (nil block-side t 29539 . 29540) (nil block-side t 29538 . 29539) (nil block-side t 29537 . 29538) (nil block-side t 29536 . 29537) (nil block-side t 29535 . 29536) (nil face (rainbow-delimiters-depth-3-face) 29535 . 29536) (nil block-side t 29534 . 29535) (nil block-side t 29532 . 29534) (nil block-side t 29531 . 29532) (nil block-token delimiter-beg 29531 . 29532) (nil face (rainbow-delimiters-depth-2-face) 29531 . 29532) (nil block-beg 0 29530 . 29531) (nil block-controls 0 29530 . 29531) (nil block-side t 29530 . 29531) (nil block-token delimiter-beg 29530 . 29531) (nil face (rainbow-delimiters-depth-1-face) 29530 . 29531) (nil tag-name "v-card-text" 29518 . 29519) (nil tag-type start 29518 . 29519) (nil tag-end t 29518 . 29519) (nil font-lock-face web-mode-html-tag-bracket-face 29518 . 29519) (nil tag-attr t 29517 . 29518) (nil tag-attr-end 4 29517 . 29518) (nil tag-name "v-card-text" 29517 . 29518) (nil tag-type start 29517 . 29518) (nil font-lock-face web-mode-html-attr-value-face 29517 . 29518) (nil tag-attr t 29491 . 29517) (nil tag-name "v-card-text" 29491 . 29517) (nil tag-type start 29491 . 29517) (nil font-lock-face web-mode-html-attr-value-face 29491 . 29517) (nil tag-attr t 29490 . 29491) (nil tag-name "v-card-text" 29490 . 29491) (nil tag-type start 29490 . 29491) (nil font-lock-face web-mode-html-attr-equal-face 29490 . 29491) (nil tag-attr t 29487 . 29490) (nil tag-name "v-card-text" 29487 . 29490) (nil tag-type start 29487 . 29490) (nil font-lock-face web-mode-html-attr-engine-face 29487 . 29490) (nil tag-attr-beg 2 29486 . 29487) (nil tag-attr t 29486 . 29487) (nil tag-name "v-card-text" 29486 . 29487) (nil tag-type start 29486 . 29487) (nil font-lock-face web-mode-html-attr-engine-face 29486 . 29487) (nil tag-name "v-card-text" 29485 . 29486) (nil tag-type start 29485 . 29486) (nil tag-name "v-card-text" 29474 . 29485) (nil tag-type start 29474 . 29485) (nil font-lock-face web-mode-html-tag-custom-face 29474 . 29485) (nil tag-name "v-card-text" 29473 . 29474) (nil tag-type start 29473 . 29474) (nil tag-beg 19 29473 . 29474) (nil font-lock-face web-mode-html-tag-bracket-face 29473 . 29474) (nil tag-name "v-card-title" 29463 . 29464) (nil tag-type end 29463 . 29464) (nil tag-end t 29463 . 29464) (nil font-lock-face web-mode-html-tag-bracket-face 29463 . 29464) (nil tag-name "v-card-title" 29451 . 29463) (nil tag-type end 29451 . 29463) (nil font-lock-face web-mode-html-tag-custom-face 29451 . 29463) (nil tag-name "v-card-title" 29450 . 29451) (nil tag-type end 29450 . 29451) (nil font-lock-face web-mode-html-tag-bracket-face 29450 . 29451) (nil tag-name "v-card-title" 29449 . 29450) (nil tag-type end 29449 . 29450) (nil tag-beg 22 29449 . 29450) (nil font-lock-face web-mode-html-tag-bracket-face 29449 . 29450) (nil tag-name "v-btn" 29439 . 29440) (nil tag-type end 29439 . 29440) (nil tag-end t 29439 . 29440) (nil font-lock-face web-mode-html-tag-bracket-face 29439 . 29440) (nil tag-name "v-btn" 29434 . 29439) (nil tag-type end 29434 . 29439) (nil font-lock-face web-mode-html-tag-custom-face 29434 . 29439) (nil tag-name "v-btn" 29433 . 29434) (nil tag-type end 29433 . 29434) (nil font-lock-face web-mode-html-tag-bracket-face 29433 . 29434) (nil tag-name "v-btn" 29432 . 29433) (nil tag-type end 29432 . 29433) (nil tag-beg 22 29432 . 29433) (nil font-lock-face web-mode-html-tag-bracket-face 29432 . 29433) (nil tag-name "v-icon" 29420 . 29421) (nil tag-type end 29420 . 29421) (nil tag-end t 29420 . 29421) (nil font-lock-face web-mode-html-tag-bracket-face 29420 . 29421) (nil tag-name "v-icon" 29414 . 29420) (nil tag-type end 29414 . 29420) (nil font-lock-face web-mode-html-tag-custom-face 29414 . 29420) (nil tag-name "v-icon" 29413 . 29414) (nil tag-type end 29413 . 29414) (nil font-lock-face web-mode-html-tag-bracket-face 29413 . 29414) (nil tag-name "v-icon" 29412 . 29413) (nil tag-type end 29412 . 29413) (nil tag-beg 22 29412 . 29413) (nil font-lock-face web-mode-html-tag-bracket-face 29412 . 29413) (nil tag-name "v-icon" 29402 . 29403) (nil tag-type start 29402 . 29403) (nil tag-end t 29402 . 29403) (nil font-lock-face web-mode-html-tag-bracket-face 29402 . 29403) (nil tag-name "v-icon" 29396 . 29402) (nil tag-type start 29396 . 29402) (nil font-lock-face web-mode-html-tag-custom-face 29396 . 29402) (nil tag-name "v-icon" 29395 . 29396) (nil tag-type start 29395 . 29396) (nil tag-beg 18 29395 . 29396) (nil font-lock-face web-mode-html-tag-bracket-face 29395 . 29396) (nil tag-name "v-btn" 29381 . 29382) (nil tag-type start 29381 . 29382) (nil tag-end t 29381 . 29382) (nil font-lock-face web-mode-html-tag-bracket-face 29381 . 29382) (nil block-side t 29380 . 29381) (nil block-end t 29380 . 29381) (nil block-token delimiter-end 29380 . 29381) (nil tag-attr t 29380 . 29381) (nil tag-attr-end 5 29380 . 29381) (nil tag-name "v-btn" 29380 . 29381) (nil tag-type start 29380 . 29381) (nil block-side t 29379 . 29380) (nil tag-attr t 29379 . 29380) (nil tag-name "v-btn" 29379 . 29380) (nil tag-type start 29379 . 29380) (nil block-side t 29378 . 29379) (nil tag-attr t 29378 . 29379) (nil tag-name "v-btn" 29378 . 29379) (nil tag-type start 29378 . 29379) (nil block-side t 29377 . 29378) (nil tag-attr t 29377 . 29378) (nil tag-name "v-btn" 29377 . 29378) (nil tag-type start 29377 . 29378) (nil block-side t 29376 . 29377) (nil tag-attr t 29376 . 29377) (nil tag-name "v-btn" 29376 . 29377) (nil tag-type start 29376 . 29377) (nil block-side t 29375 . 29376) (nil tag-attr t 29375 . 29376) (nil tag-name "v-btn" 29375 . 29376) (nil tag-type start 29375 . 29376) (nil block-side t 29374 . 29375) (nil tag-attr t 29374 . 29375) (nil tag-name "v-btn" 29374 . 29375) (nil tag-type start 29374 . 29375) (nil block-side t 29373 . 29374) (nil tag-attr t 29373 . 29374) (nil tag-name "v-btn" 29373 . 29374) (nil tag-type start 29373 . 29374) (nil block-side t 29372 . 29373) (nil tag-attr t 29372 . 29373) (nil tag-name "v-btn" 29372 . 29373) (nil tag-type start 29372 . 29373) (nil block-side t 29371 . 29372) (nil tag-attr t 29371 . 29372) (nil tag-name "v-btn" 29371 . 29372) (nil tag-type start 29371 . 29372) (nil block-side t 29370 . 29371) (nil tag-attr t 29370 . 29371) (nil tag-name "v-btn" 29370 . 29371) (nil tag-type start 29370 . 29371) (nil block-side t 29369 . 29370) (nil tag-attr t 29369 . 29370) (nil tag-name "v-btn" 29369 . 29370) (nil tag-type start 29369 . 29370) (nil block-side t 29368 . 29369) (nil tag-attr t 29368 . 29369) (nil tag-name "v-btn" 29368 . 29369) (nil tag-type start 29368 . 29369) (nil block-side t 29367 . 29368) (nil tag-attr t 29367 . 29368) (nil tag-name "v-btn" 29367 . 29368) (nil tag-type start 29367 . 29368) (nil block-side t 29366 . 29367) (nil tag-attr t 29366 . 29367) (nil tag-name "v-btn" 29366 . 29367) (nil tag-type start 29366 . 29367) (nil block-side t 29365 . 29366) (nil tag-attr t 29365 . 29366) (nil tag-name "v-btn" 29365 . 29366) (nil tag-type start 29365 . 29366) (nil block-side t 29364 . 29365) (nil tag-attr t 29364 . 29365) (nil tag-name "v-btn" 29364 . 29365) (nil tag-type start 29364 . 29365) (nil block-side t 29363 . 29364) (nil tag-attr t 29363 . 29364) (nil tag-name "v-btn" 29363 . 29364) (nil tag-type start 29363 . 29364) (nil block-side t 29362 . 29363) (nil tag-attr t 29362 . 29363) (nil tag-name "v-btn" 29362 . 29363) (nil tag-type start 29362 . 29363) (nil block-side t 29361 . 29362) (nil tag-attr t 29361 . 29362) (nil tag-name "v-btn" 29361 . 29362) (nil tag-type start 29361 . 29362) (nil block-side t 29360 . 29361) (nil tag-attr t 29360 . 29361) (nil tag-name "v-btn" 29360 . 29361) (nil tag-type start 29360 . 29361) (nil block-side t 29359 . 29360) (nil tag-attr t 29359 . 29360) (nil tag-name "v-btn" 29359 . 29360) (nil tag-type start 29359 . 29360) (nil block-side t 29358 . 29359) (nil tag-attr t 29358 . 29359) (nil tag-name "v-btn" 29358 . 29359) (nil tag-type start 29358 . 29359) (nil block-side t 29357 . 29358) (nil tag-attr t 29357 . 29358) (nil tag-name "v-btn" 29357 . 29358) (nil tag-type start 29357 . 29358) (nil block-side t 29356 . 29357) (nil tag-attr t 29356 . 29357) (nil tag-name "v-btn" 29356 . 29357) (nil tag-type start 29356 . 29357) (nil block-side t 29355 . 29356) (nil tag-attr t 29355 . 29356) (nil tag-name "v-btn" 29355 . 29356) (nil tag-type start 29355 . 29356) (nil block-side t 29354 . 29355) (nil tag-attr t 29354 . 29355) (nil tag-name "v-btn" 29354 . 29355) (nil tag-type start 29354 . 29355) (nil block-side t 29353 . 29354) (nil tag-attr t 29353 . 29354) (nil tag-name "v-btn" 29353 . 29354) (nil tag-type start 29353 . 29354) (nil block-side t 29352 . 29353) (nil tag-attr t 29352 . 29353) (nil tag-name "v-btn" 29352 . 29353) (nil tag-type start 29352 . 29353) (nil block-side t 29351 . 29352) (nil tag-attr t 29351 . 29352) (nil tag-name "v-btn" 29351 . 29352) (nil tag-type start 29351 . 29352) (nil block-side t 29350 . 29351) (nil tag-attr t 29350 . 29351) (nil tag-name "v-btn" 29350 . 29351) (nil tag-type start 29350 . 29351) (nil block-side t 29349 . 29350) (nil tag-attr t 29349 . 29350) (nil tag-name "v-btn" 29349 . 29350) (nil tag-type start 29349 . 29350) (nil block-side t 29348 . 29349) (nil tag-attr t 29348 . 29349) (nil tag-name "v-btn" 29348 . 29349) (nil tag-type start 29348 . 29349) (nil block-side t 29347 . 29348) (nil tag-attr t 29347 . 29348) (nil tag-name "v-btn" 29347 . 29348) (nil tag-type start 29347 . 29348) (nil block-side t 29346 . 29347) (nil tag-attr t 29346 . 29347) (nil tag-name "v-btn" 29346 . 29347) (nil tag-type start 29346 . 29347) (nil block-side t 29345 . 29346) (nil tag-attr t 29345 . 29346) (nil tag-name "v-btn" 29345 . 29346) (nil tag-type start 29345 . 29346) (nil block-side t 29344 . 29345) (nil tag-attr t 29344 . 29345) (nil tag-name "v-btn" 29344 . 29345) (nil tag-type start 29344 . 29345) (nil block-side t 29343 . 29344) (nil tag-attr t 29343 . 29344) (nil tag-name "v-btn" 29343 . 29344) (nil tag-type start 29343 . 29344) (nil block-side t 29342 . 29343) (nil tag-attr t 29342 . 29343) (nil tag-name "v-btn" 29342 . 29343) (nil tag-type start 29342 . 29343) (nil block-side t 29341 . 29342) (nil tag-attr t 29341 . 29342) (nil tag-name "v-btn" 29341 . 29342) (nil tag-type start 29341 . 29342) (nil block-side t 29340 . 29341) (nil tag-attr t 29340 . 29341) (nil tag-name "v-btn" 29340 . 29341) (nil tag-type start 29340 . 29341) (nil block-side t 29339 . 29340) (nil tag-attr t 29339 . 29340) (nil tag-name "v-btn" 29339 . 29340) (nil tag-type start 29339 . 29340) (nil block-side t 29338 . 29339) (nil tag-attr t 29338 . 29339) (nil tag-name "v-btn" 29338 . 29339) (nil tag-type start 29338 . 29339) (nil block-side t 29337 . 29338) (nil tag-attr t 29337 . 29338) (nil tag-name "v-btn" 29337 . 29338) (nil tag-type start 29337 . 29338) (nil block-side t 29336 . 29337) (nil tag-attr t 29336 . 29337) (nil tag-name "v-btn" 29336 . 29337) (nil tag-type start 29336 . 29337) (nil block-side t 29335 . 29336) (nil tag-attr t 29335 . 29336) (nil tag-name "v-btn" 29335 . 29336) (nil tag-type start 29335 . 29336) (nil block-side t 29334 . 29335) (nil tag-attr t 29334 . 29335) (nil tag-name "v-btn" 29334 . 29335) (nil tag-type start 29334 . 29335) (nil block-side t 29333 . 29334) (nil tag-attr t 29333 . 29334) (nil tag-name "v-btn" 29333 . 29334) (nil tag-type start 29333 . 29334) (nil block-side t 29332 . 29333) (nil tag-attr t 29332 . 29333) (nil tag-name "v-btn" 29332 . 29333) (nil tag-type start 29332 . 29333) (nil block-side t 29331 . 29332) (nil tag-attr t 29331 . 29332) (nil tag-name "v-btn" 29331 . 29332) (nil tag-type start 29331 . 29332) (nil block-side t 29330 . 29331) (nil tag-attr t 29330 . 29331) (nil tag-name "v-btn" 29330 . 29331) (nil tag-type start 29330 . 29331) (nil block-side t 29329 . 29330) (nil tag-attr t 29329 . 29330) (nil tag-name "v-btn" 29329 . 29330) (nil tag-type start 29329 . 29330) (nil block-side t 29328 . 29329) (nil tag-attr t 29328 . 29329) (nil tag-name "v-btn" 29328 . 29329) (nil tag-type start 29328 . 29329) (nil block-side t 29327 . 29328) (nil tag-attr t 29327 . 29328) (nil tag-name "v-btn" 29327 . 29328) (nil tag-type start 29327 . 29328) (nil block-side t 29326 . 29327) (nil tag-attr t 29326 . 29327) (nil tag-name "v-btn" 29326 . 29327) (nil tag-type start 29326 . 29327) (nil block-side t 29325 . 29326) (nil tag-attr t 29325 . 29326) (nil tag-name "v-btn" 29325 . 29326) (nil tag-type start 29325 . 29326) (nil block-side t 29324 . 29325) (nil tag-attr t 29324 . 29325) (nil tag-name "v-btn" 29324 . 29325) (nil tag-type start 29324 . 29325) (nil block-side t 29323 . 29324) (nil tag-attr t 29323 . 29324) (nil tag-name "v-btn" 29323 . 29324) (nil tag-type start 29323 . 29324) (nil block-side t 29322 . 29323) (nil tag-attr t 29322 . 29323) (nil tag-name "v-btn" 29322 . 29323) (nil tag-type start 29322 . 29323) (nil block-side t 29321 . 29322) (nil tag-attr t 29321 . 29322) (nil tag-name "v-btn" 29321 . 29322) (nil tag-type start 29321 . 29322) (nil block-side t 29320 . 29321) (nil block-token delimiter-beg 29320 . 29321) (nil tag-attr t 29320 . 29321) (nil tag-name "v-btn" 29320 . 29321) (nil tag-type start 29320 . 29321) (nil block-side t 29319 . 29320) (nil block-token delimiter-beg 29319 . 29320) (nil tag-attr t 29319 . 29320) (nil tag-name "v-btn" 29319 . 29320) (nil tag-type start 29319 . 29320) (nil block-side t 29318 . 29319) (nil block-token delimiter-beg 29318 . 29319) (nil tag-attr t 29318 . 29319) (nil tag-name "v-btn" 29318 . 29319) (nil tag-type start 29318 . 29319) (nil block-side t 29317 . 29318) (nil block-token delimiter-beg 29317 . 29318) (nil tag-attr t 29317 . 29318) (nil tag-name "v-btn" 29317 . 29318) (nil tag-type start 29317 . 29318) (nil block-side t 29316 . 29317) (nil block-token delimiter-beg 29316 . 29317) (nil tag-attr t 29316 . 29317) (nil tag-name "v-btn" 29316 . 29317) (nil tag-type start 29316 . 29317) (nil block-side t 29315 . 29316) (nil block-token delimiter-beg 29315 . 29316) (nil tag-attr t 29315 . 29316) (nil tag-name "v-btn" 29315 . 29316) (nil tag-type start 29315 . 29316) (nil block-side t 29314 . 29315) (nil block-token delimiter-beg 29314 . 29315) (nil tag-attr-beg 0 29314 . 29315) (nil tag-attr t 29314 . 29315) (nil tag-name "v-btn" 29314 . 29315) (nil tag-type start 29314 . 29315) (nil block-beg 0 29313 . 29314) (nil block-controls 0 29313 . 29314) (nil block-side t 29313 . 29314) (nil block-token delimiter-beg 29313 . 29314) (nil tag-name "v-btn" 29313 . 29314) (nil tag-type start 29313 . 29314) (nil tag-name "v-btn" 29300 . 29313) (nil tag-type start 29300 . 29313) (nil tag-attr t 29299 . 29300) (nil tag-attr-end 0 29299 . 29300) (nil tag-name "v-btn" 29299 . 29300) (nil tag-type start 29299 . 29300) (nil font-lock-face web-mode-html-attr-name-face 29299 . 29300) (nil tag-attr t 29297 . 29299) (nil tag-name "v-btn" 29297 . 29299) (nil tag-type start 29297 . 29299) (nil font-lock-face web-mode-html-attr-name-face 29297 . 29299) (nil tag-attr-beg 0 29296 . 29297) (nil tag-attr t 29296 . 29297) (nil tag-name "v-btn" 29296 . 29297) (nil tag-type start 29296 . 29297) (nil font-lock-face web-mode-html-attr-name-face 29296 . 29297) (nil tag-name "v-btn" 29283 . 29296) (nil tag-type start 29283 . 29296) (nil tag-name "v-btn" 29278 . 29283) (nil tag-type start 29278 . 29283) (nil font-lock-face web-mode-html-tag-custom-face 29278 . 29283) (nil tag-name "v-btn" 29277 . 29278) (nil tag-type start 29277 . 29278) (nil tag-beg 19 29277 . 29278) (nil font-lock-face web-mode-html-tag-bracket-face 29277 . 29278) (nil tag-name "v-spacer" 29265 . 29266) (nil tag-type end 29265 . 29266) (nil tag-end t 29265 . 29266) (nil font-lock-face web-mode-html-tag-bracket-face 29265 . 29266) (nil tag-name "v-spacer" 29257 . 29265) (nil tag-type end 29257 . 29265) (nil font-lock-face web-mode-html-tag-custom-face 29257 . 29265) (nil tag-name "v-spacer" 29256 . 29257) (nil tag-type end 29256 . 29257) (nil font-lock-face web-mode-html-tag-bracket-face 29256 . 29257) (nil tag-name "v-spacer" 29255 . 29256) (nil tag-type end 29255 . 29256) (nil tag-beg 22 29255 . 29256) (nil font-lock-face web-mode-html-tag-bracket-face 29255 . 29256) (nil tag-name "v-spacer" 29254 . 29255) (nil tag-type start 29254 . 29255) (nil tag-end t 29254 . 29255) (nil font-lock-face web-mode-html-tag-bracket-face 29254 . 29255) (nil tag-name "v-spacer" 29246 . 29254) (nil tag-type start 29246 . 29254) (nil font-lock-face web-mode-html-tag-custom-face 29246 . 29254) (nil tag-name "v-spacer" 29245 . 29246) (nil tag-type start 29245 . 29246) (nil tag-beg 18 29245 . 29246) (nil font-lock-face web-mode-html-tag-bracket-face 29245 . 29246) (nil tag-name "span" 29233 . 29234) (nil tag-type end 29233 . 29234) (nil tag-end t 29233 . 29234) (nil font-lock-face web-mode-html-tag-bracket-face 29233 . 29234) (nil tag-name "span" 29229 . 29233) (nil tag-type end 29229 . 29233) (nil font-lock-face web-mode-html-tag-face 29229 . 29233) (nil tag-name "span" 29228 . 29229) (nil tag-type end 29228 . 29229) (nil font-lock-face web-mode-html-tag-bracket-face 29228 . 29229) (nil tag-name "span" 29227 . 29228) (nil tag-type end 29227 . 29228) (nil tag-beg 20 29227 . 29228) (nil font-lock-face web-mode-html-tag-bracket-face 29227 . 29228) (nil block-side t 29226 . 29227) (nil block-end t 29226 . 29227) (nil block-token delimiter-end 29226 . 29227) (nil face (rainbow-delimiters-depth-1-face) 29226 . 29227) (nil block-side t 29225 . 29226) (nil block-token delimiter-end 29225 . 29226) (nil face (rainbow-delimiters-depth-2-face) 29225 . 29226) (nil block-side t 29224 . 29225) (nil block-side t 29223 . 29224) (nil face (rainbow-delimiters-depth-3-face) 29223 . 29224) (nil block-side t 29222 . 29223) (nil block-side t 29221 . 29222) (nil block-side t 29220 . 29221) (nil block-side t 29219 . 29220) (nil block-side t 29218 . 29219) (nil block-side t 29217 . 29218) (nil block-side t 29216 . 29217) (nil block-side t 29215 . 29216) (nil block-side t 29214 . 29215) (nil block-side t 29213 . 29214) (nil block-side t 29212 . 29213) (nil block-side t 29211 . 29212) (nil block-side t 29210 . 29211) (nil block-side t 29209 . 29210) (nil block-side t 29208 . 29209) (nil block-side t 29207 . 29208) (nil block-side t 29206 . 29207) (nil block-side t 29205 . 29206) (nil face (rainbow-delimiters-depth-3-face) 29205 . 29206) (nil block-side t 29204 . 29205) (nil block-side t 29202 . 29204) (nil block-side t 29201 . 29202) (nil block-token delimiter-beg 29201 . 29202) (nil face (rainbow-delimiters-depth-2-face) 29201 . 29202) (nil block-beg 0 29200 . 29201) (nil block-controls 0 29200 . 29201) (nil block-side t 29200 . 29201) (nil block-token delimiter-beg 29200 . 29201) (nil face (rainbow-delimiters-depth-1-face) 29200 . 29201) (nil tag-name "span" 29199 . 29200) (nil tag-type start 29199 . 29200) (nil tag-end t 29199 . 29200) (nil font-lock-face web-mode-html-tag-bracket-face 29199 . 29200) (nil tag-attr t 29198 . 29199) (nil tag-attr-end 5 29198 . 29199) (nil tag-name "span" 29198 . 29199) (nil tag-type start 29198 . 29199) (nil font-lock-face web-mode-html-attr-value-face 29198 . 29199) (nil tag-attr t 29189 . 29198) (nil tag-name "span" 29189 . 29198) (nil tag-type start 29189 . 29198) (nil font-lock-face web-mode-html-attr-value-face 29189 . 29198) (nil tag-attr t 29188 . 29189) (nil tag-name "span" 29188 . 29189) (nil tag-type start 29188 . 29189) (nil font-lock-face web-mode-html-attr-equal-face 29188 . 29189) (nil tag-attr t 29184 . 29188) (nil tag-name "span" 29184 . 29188) (nil tag-type start 29184 . 29188) (nil font-lock-face web-mode-html-attr-name-face 29184 . 29188) (nil tag-attr-beg 0 29183 . 29184) (nil tag-attr t 29183 . 29184) (nil tag-name "span" 29183 . 29184) (nil tag-type start 29183 . 29184) (nil font-lock-face web-mode-html-attr-name-face 29183 . 29184) (nil tag-name "span" 29182 . 29183) (nil tag-type start 29182 . 29183) (nil tag-name "span" 29178 . 29182) (nil tag-type start 29178 . 29182) (nil font-lock-face web-mode-html-tag-face 29178 . 29182) (nil tag-name "span" 29177 . 29178) (nil tag-type start 29177 . 29178) (nil tag-beg 17 29177 . 29178) (nil font-lock-face web-mode-html-tag-bracket-face 29177 . 29178) (nil tag-name "v-card-title" 29165 . 29166) (nil tag-type start 29165 . 29166) (nil tag-end t 29165 . 29166) (nil font-lock-face web-mode-html-tag-bracket-face 29165 . 29166) (nil tag-name "v-card-title" 29153 . 29165) (nil tag-type start 29153 . 29165) (nil font-lock-face web-mode-html-tag-custom-face 29153 . 29165) (nil tag-name "v-card-title" 29152 . 29153) (nil tag-type start 29152 . 29153) (nil tag-beg 18 29152 . 29153) (nil font-lock-face web-mode-html-tag-bracket-face 29152 . 29153) (nil tag-name "v-card" 29142 . 29143) (nil tag-type start 29142 . 29143) (nil tag-end t 29142 . 29143) (nil font-lock-face web-mode-html-tag-bracket-face 29142 . 29143) (nil tag-name "v-card" 29136 . 29142) (nil tag-type start 29136 . 29142) (nil font-lock-face web-mode-html-tag-custom-face 29136 . 29142) (nil tag-name "v-card" 29135 . 29136) (nil tag-type start 29135 . 29136) (nil tag-beg 18 29135 . 29136) (nil font-lock-face web-mode-html-tag-bracket-face 29135 . 29136) (nil tag-name "v-dialog" 29127 . 29128) (nil tag-type start 29127 . 29128) (nil tag-end t 29127 . 29128) (nil font-lock-face web-mode-html-tag-bracket-face 29127 . 29128) (nil tag-attr t 29126 . 29127) (nil tag-attr-end 9 29126 . 29127) (nil tag-name "v-dialog" 29126 . 29127) (nil tag-type start 29126 . 29127) (nil font-lock-face web-mode-html-attr-value-face 29126 . 29127) (nil tag-attr t 29120 . 29126) (nil tag-name "v-dialog" 29120 . 29126) (nil tag-type start 29120 . 29126) (nil font-lock-face web-mode-html-attr-value-face 29120 . 29126) (nil tag-attr t 29119 . 29120) (nil tag-name "v-dialog" 29119 . 29120) (nil tag-type start 29119 . 29120) (nil font-lock-face web-mode-html-attr-equal-face 29119 . 29120) (nil tag-attr t 29111 . 29119) (nil tag-name "v-dialog" 29111 . 29119) (nil tag-type start 29111 . 29119) (nil font-lock-face web-mode-html-attr-name-face 29111 . 29119) (nil tag-attr-beg 0 29110 . 29111) (nil tag-attr t 29110 . 29111) (nil tag-name "v-dialog" 29110 . 29111) (nil tag-type start 29110 . 29111) (nil font-lock-face web-mode-html-attr-name-face 29110 . 29111) (nil tag-name "v-dialog" 29109 . 29110) (nil tag-type start 29109 . 29110) (nil tag-attr t 29108 . 29109) (nil tag-attr-end 7 29108 . 29109) (nil tag-name "v-dialog" 29108 . 29109) (nil tag-type start 29108 . 29109) (nil font-lock-face web-mode-html-attr-value-face 29108 . 29109) (nil tag-attr t 29083 . 29108) (nil tag-name "v-dialog" 29083 . 29108) (nil tag-type start 29083 . 29108) (nil font-lock-face web-mode-html-attr-value-face 29083 . 29108) (nil tag-attr t 29082 . 29083) (nil tag-name "v-dialog" 29082 . 29083) (nil tag-type start 29082 . 29083) (nil font-lock-face web-mode-html-attr-equal-face 29082 . 29083) (nil tag-attr t 29076 . 29082) (nil tag-name "v-dialog" 29076 . 29082) (nil tag-type start 29076 . 29082) (nil font-lock-face web-mode-html-attr-engine-face 29076 . 29082) (nil tag-attr-beg 2 29075 . 29076) (nil tag-attr t 29075 . 29076) (nil tag-name "v-dialog" 29075 . 29076) (nil tag-type start 29075 . 29076) (nil font-lock-face web-mode-html-attr-engine-face 29075 . 29076) (nil tag-name "v-dialog" 29074 . 29075) (nil tag-type start 29074 . 29075) (nil block-side t 29073 . 29074) (nil block-end t 29073 . 29074) (nil block-token delimiter-end 29073 . 29074) (nil tag-attr t 29073 . 29074) (nil tag-attr-end 14 29073 . 29074) (nil tag-name "v-dialog" 29073 . 29074) (nil tag-type start 29073 . 29074) (nil block-side t 29072 . 29073) (nil tag-attr t 29072 . 29073) (nil tag-name "v-dialog" 29072 . 29073) (nil tag-type start 29072 . 29073) (nil block-side t 29071 . 29072) (nil tag-attr t 29071 . 29072) (nil tag-name "v-dialog" 29071 . 29072) (nil tag-type start 29071 . 29072) (nil block-side t 29070 . 29071) (nil tag-attr t 29070 . 29071) (nil tag-name "v-dialog" 29070 . 29071) (nil tag-type start 29070 . 29071) (nil block-side t 29069 . 29070) (nil tag-attr t 29069 . 29070) (nil tag-name "v-dialog" 29069 . 29070) (nil tag-type start 29069 . 29070) (nil block-side t 29068 . 29069) (nil tag-attr t 29068 . 29069) (nil tag-name "v-dialog" 29068 . 29069) (nil tag-type start 29068 . 29069) (nil block-side t 29067 . 29068) (nil tag-attr t 29067 . 29068) (nil tag-name "v-dialog" 29067 . 29068) (nil tag-type start 29067 . 29068) (nil block-side t 29066 . 29067) (nil tag-attr t 29066 . 29067) (nil tag-name "v-dialog" 29066 . 29067) (nil tag-type start 29066 . 29067) (nil block-side t 29065 . 29066) (nil tag-attr t 29065 . 29066) (nil tag-name "v-dialog" 29065 . 29066) (nil tag-type start 29065 . 29066) (nil block-side t 29064 . 29065) (nil tag-attr t 29064 . 29065) (nil tag-name "v-dialog" 29064 . 29065) (nil tag-type start 29064 . 29065) (nil block-side t 29063 . 29064) (nil tag-attr t 29063 . 29064) (nil tag-name "v-dialog" 29063 . 29064) (nil tag-type start 29063 . 29064) (nil block-side t 29062 . 29063) (nil tag-attr t 29062 . 29063) (nil tag-name "v-dialog" 29062 . 29063) (nil tag-type start 29062 . 29063) (nil block-side t 29061 . 29062) (nil tag-attr t 29061 . 29062) (nil tag-name "v-dialog" 29061 . 29062) (nil tag-type start 29061 . 29062) (nil block-side t 29060 . 29061) (nil tag-attr t 29060 . 29061) (nil tag-name "v-dialog" 29060 . 29061) (nil tag-type start 29060 . 29061) (nil block-side t 29059 . 29060) (nil tag-attr t 29059 . 29060) (nil tag-name "v-dialog" 29059 . 29060) (nil tag-type start 29059 . 29060) (nil block-side t 29058 . 29059) (nil tag-attr t 29058 . 29059) (nil tag-name "v-dialog" 29058 . 29059) (nil tag-type start 29058 . 29059) (nil block-side t 29057 . 29058) (nil tag-attr t 29057 . 29058) (nil tag-name "v-dialog" 29057 . 29058) (nil tag-type start 29057 . 29058) (nil block-side t 29056 . 29057) (nil tag-attr t 29056 . 29057) (nil tag-name "v-dialog" 29056 . 29057) (nil tag-type start 29056 . 29057) (nil block-side t 29055 . 29056) (nil tag-attr t 29055 . 29056) (nil tag-name "v-dialog" 29055 . 29056) (nil tag-type start 29055 . 29056) (nil block-side t 29054 . 29055) (nil tag-attr t 29054 . 29055) (nil tag-name "v-dialog" 29054 . 29055) (nil tag-type start 29054 . 29055) (nil block-side t 29053 . 29054) (nil tag-attr t 29053 . 29054) (nil tag-name "v-dialog" 29053 . 29054) (nil tag-type start 29053 . 29054) (nil block-side t 29052 . 29053) (nil tag-attr t 29052 . 29053) (nil tag-name "v-dialog" 29052 . 29053) (nil tag-type start 29052 . 29053) (nil block-side t 29051 . 29052) (nil tag-attr t 29051 . 29052) (nil tag-name "v-dialog" 29051 . 29052) (nil tag-type start 29051 . 29052) (nil block-side t 29050 . 29051) (nil tag-attr t 29050 . 29051) (nil tag-name "v-dialog" 29050 . 29051) (nil tag-type start 29050 . 29051) (nil block-side t 29049 . 29050) (nil tag-attr t 29049 . 29050) (nil tag-name "v-dialog" 29049 . 29050) (nil tag-type start 29049 . 29050) (nil block-side t 29048 . 29049) (nil tag-attr t 29048 . 29049) (nil tag-name "v-dialog" 29048 . 29049) (nil tag-type start 29048 . 29049) (nil block-side t 29047 . 29048) (nil tag-attr t 29047 . 29048) (nil tag-name "v-dialog" 29047 . 29048) (nil tag-type start 29047 . 29048) (nil block-side t 29046 . 29047) (nil tag-attr t 29046 . 29047) (nil tag-name "v-dialog" 29046 . 29047) (nil tag-type start 29046 . 29047) (nil block-side t 29045 . 29046) (nil tag-attr t 29045 . 29046) (nil tag-name "v-dialog" 29045 . 29046) (nil tag-type start 29045 . 29046) (nil block-side t 29044 . 29045) (nil block-token delimiter-beg 29044 . 29045) (nil tag-attr t 29044 . 29045) (nil tag-name "v-dialog" 29044 . 29045) (nil tag-type start 29044 . 29045) (nil block-side t 29043 . 29044) (nil block-token delimiter-beg 29043 . 29044) (nil tag-attr t 29043 . 29044) (nil tag-name "v-dialog" 29043 . 29044) (nil tag-type start 29043 . 29044) (nil block-side t 29042 . 29043) (nil block-token delimiter-beg 29042 . 29043) (nil tag-attr t 29042 . 29043) (nil tag-name "v-dialog" 29042 . 29043) (nil tag-type start 29042 . 29043) (nil block-side t 29041 . 29042) (nil block-token delimiter-beg 29041 . 29042) (nil tag-attr t 29041 . 29042) (nil tag-name "v-dialog" 29041 . 29042) (nil tag-type start 29041 . 29042) (nil block-side t 29040 . 29041) (nil block-token delimiter-beg 29040 . 29041) (nil tag-attr t 29040 . 29041) (nil tag-name "v-dialog" 29040 . 29041) (nil tag-type start 29040 . 29041) (nil block-side t 29039 . 29040) (nil block-token delimiter-beg 29039 . 29040) (nil tag-attr t 29039 . 29040) (nil tag-name "v-dialog" 29039 . 29040) (nil tag-type start 29039 . 29040) (nil block-side t 29038 . 29039) (nil block-token delimiter-beg 29038 . 29039) (nil tag-attr t 29038 . 29039) (nil tag-name "v-dialog" 29038 . 29039) (nil tag-type start 29038 . 29039) (nil block-side t 29037 . 29038) (nil block-token delimiter-beg 29037 . 29038) (nil tag-attr t 29037 . 29038) (nil tag-name "v-dialog" 29037 . 29038) (nil tag-type start 29037 . 29038) (nil block-side t 29036 . 29037) (nil block-token delimiter-beg 29036 . 29037) (nil tag-attr t 29036 . 29037) (nil tag-name "v-dialog" 29036 . 29037) (nil tag-type start 29036 . 29037) (nil block-beg 0 29035 . 29036) (nil block-controls 0 29035 . 29036) (nil block-side t 29035 . 29036) (nil block-token delimiter-beg 29035 . 29036) (nil tag-attr t 29035 . 29036) (nil tag-name "v-dialog" 29035 . 29036) (nil tag-type start 29035 . 29036) (nil tag-attr t 29030 . 29035) (nil tag-name "v-dialog" 29030 . 29035) (nil tag-type start 29030 . 29035) (nil font-lock-face web-mode-html-attr-engine-face 29030 . 29035) (nil tag-attr-beg 2 29029 . 29030) (nil tag-attr t 29029 . 29030) (nil tag-name "v-dialog" 29029 . 29030) (nil tag-type start 29029 . 29030) (nil font-lock-face web-mode-html-attr-engine-face 29029 . 29030) (nil tag-name "v-dialog" 29028 . 29029) (nil tag-type start 29028 . 29029) (nil tag-name "v-dialog" 29020 . 29028) (nil tag-type start 29020 . 29028) (nil font-lock-face web-mode-html-tag-custom-face 29020 . 29028) (nil tag-name "v-dialog" 29019 . 29020) (nil tag-type start 29019 . 29020) (nil tag-beg 19 29019 . 29020) (nil font-lock-face web-mode-html-tag-bracket-face 29019 . 29020) (29015 . 30213)) nil (25827 16852 355519 164000) 0 nil])
([nil nil (("    " . -29015) 29033) nil (25827 16852 355117 534000) 0 nil])
([nil nil ((32691 . 32692)) nil (25827 16852 355116 305000) 0 nil])
([nil nil ((32692 . 32701)) nil (25827 16852 355115 212000) 0 nil])
([nil nil ((32701 . 32705)) nil (25827 16852 355114 314000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript)) . -32702) (undo-tree-id47 . -1) (#("e" 0 1 (part-side javascript)) . -32703) (undo-tree-id48 . -1) (#("w" 0 1 (part-side javascript)) . -32704) (undo-tree-id49 . -1) 32705) nil (25827 16852 355112 643000) 0 nil])
([nil nil ((32702 . 32712)) nil (25827 16852 355107 941000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32711) (undo-tree-id46 . -1) 32712) nil (25827 16852 355106 675000) 0 nil])
([nil nil ((32711 . 32719)) nil (25827 16852 355104 61000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32718) (undo-tree-id45 . -1) 32719) nil (25827 16852 355102 881000) 0 nil])
([nil nil ((32711 . 32719)) nil (25827 16852 355100 659000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32718) (undo-tree-id44 . -1) 32719) nil (25827 16852 355099 498000) 0 nil])
([nil nil ((#("overwriteSelectionDialog" 0 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr t)) . 29080) (undo-tree-id42 . -24) (undo-tree-id43 . -24)) nil (25827 16852 355097 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29096 . 29097) (nil tag-attr t 29080 . 29097) (nil tag-name "v-dialog" 29080 . 29097) (nil tag-type start 29080 . 29097) (nil font-lock-face web-mode-html-attr-value-face 29080 . 29097) (29080 . 29097)) nil (25827 16852 355093 984000) 0 nil])
([nil nil ((#("filterSelOverwriteError" 0 23 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . 29041) (undo-tree-id40 . -23) (undo-tree-id41 . -23)) nil (25827 16852 355091 675000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29057 . 29058) (nil block-side t 29041 . 29058) (nil tag-attr t 29041 . 29058) (nil tag-name "v-dialog" 29041 . 29058) (nil tag-type start 29041 . 29058) (29041 . 29058)) nil (25827 16852 355087 895000) 0 nil])
([nil nil ((#("l" 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . 29059) (#("l" 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . 29059) (#("u" 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . 29059) (#("n" 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . 29059)) nil (25827 16852 355085 168000) 0 nil])
([nil nil ((29059 . 29065)) nil (25827 16852 355083 452000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . -29064) (undo-tree-id39 . -1) 29065) nil (25827 16852 355082 214000) 0 nil])
([nil nil ((#("          <v-spacer></v-spacer>
          <v-btn
            icon
            @click=\"overwriteSelectionDialog=false;filterSelOverwriteError=null\">
            <v-icon>mdi-close</v-icon>
          </v-btn>" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-spacer") 11 19 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-spacer") 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-spacer") 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-spacer") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-spacer") 22 30 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-spacer") 30 31 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-spacer") 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 43 48 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 48 61 (tag-type start tag-name "v-btn") 61 62 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 62 64 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 64 65 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 65 78 (tag-type start tag-name "v-btn") 78 79 (tag-type start tag-name "v-btn" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 79 80 (tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 80 84 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 84 85 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 85 86 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 86 145 (tag-type start tag-name "v-btn" tag-attr t block-side t) 145 146 (tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 160 161 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-icon") 161 167 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 167 168 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 178 179 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 179 185 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 185 186 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 197 198 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 198 199 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 199 204 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 204 205 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn")) . 29219) (undo-tree-id36 . -205) (undo-tree-id37 . -32) (undo-tree-id38 . -205)) nil (25827 16852 355079 716000) 0 nil])
([nil nil (("
" . -29218) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 29219) nil (25827 16852 355075 248000) 0 nil])
([nil nil ((#("        <v-card-text>
          {{ $t('AnalysisNetwork.overwriteFilterSelection') }}
          <p class=\"red--text\" v-if=\"filterSelOverwriteError\">{{$t(filterSelOverwriteError)}}</p>
        </v-card-text>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-card-text") 9 20 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-card-text") 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-card-text") 32 33 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 33 34 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 34 37 (block-side t) 37 38 (face (rainbow-delimiters-depth-3-face) block-side t) 38 80 (block-side t) 80 81 (face (rainbow-delimiters-depth-3-face) block-side t) 81 82 (block-side t) 82 83 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 83 84 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 96 97 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 97 98 (tag-type start tag-name "p") 98 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 99 103 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 103 104 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 104 114 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 114 115 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 115 116 (tag-type start tag-name "p") 116 117 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "p" tag-attr t tag-attr-beg 2) 117 120 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "p" tag-attr t) 120 121 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 121 145 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 145 146 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 4 tag-attr t) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 147 148 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 148 149 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 149 151 (block-side t) 151 152 (face (rainbow-delimiters-depth-3-face) block-side t) 152 175 (block-side t) 175 176 (face (rainbow-delimiters-depth-3-face) block-side t) 176 177 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 177 178 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 178 179 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 179 180 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 180 181 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 191 192 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 192 193 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 193 204 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 204 205 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29413) (undo-tree-id30 . -205) (undo-tree-id31 . -22) (undo-tree-id32 . -205)) nil (25827 16852 355070 611000) 0 nil])
([nil nil (("
" . -29412) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 29413) nil (25827 16852 355066 264000) 0 nil])
([nil nil ((#("<v-card-text v-if=\"affectedTriggersSelection\">
          {{ $t('AnalysisNetwork.affectedTriggersSelection') + affectedTriggersSelection }}
        </v-card-text>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-card-text") 1 12 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-card-text") 12 13 (tag-type start tag-name "v-card-text") 13 14 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-card-text" tag-attr t tag-attr-beg 2) 14 17 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-card-text" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-card-text" tag-attr t) 18 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-card-text" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-card-text" tag-attr-end 4 tag-attr t) 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-card-text") 57 58 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 58 59 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 59 62 (block-side t) 62 63 (face (rainbow-delimiters-depth-3-face) block-side t) 63 106 (block-side t) 106 107 (face (rainbow-delimiters-depth-3-face) block-side t) 107 136 (block-side t) 136 137 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 137 138 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 148 149 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 149 160 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 160 161 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29251) (undo-tree-id23 . -161) (undo-tree-id24 . -47) (undo-tree-id25 . -161) (undo-tree-id26 . -161)) nil (25827 16852 355061 722000) 0 nil])
([nil nil ((29251 . 29257)) nil (25827 16852 355056 613000) 0 nil])
([nil nil ((29252 . 29264) (#("v-tex" 0 5 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v-tex")) . -29252) (undo-tree-id20 . -3) (undo-tree-id21 . -5) (undo-tree-id22 . -5) 29257) nil (25827 16852 355055 167000) 0 nil])
([nil nil ((29264 . 29280)) nil (25827 16852 355050 350000) 0 nil])
([nil nil ((29266 . 29276) (29267 . 29275) (#("          " 0 10 (face whitespace-trailing)) . 29266) (29266 . 29276) (29266 . 29267) ("        " . 29266) (29265 . 29274)) nil (25827 16852 355048 960000) 0 nil])
([nil nil ((29266 . 29274) (#("          " 0 10 (face whitespace-trailing tag-type start tag-name "v-text-field")) . 29265) (undo-tree-id18 . -8) (undo-tree-id19 . 10) (29273 . 29275) (29264 . 29274)) nil (25827 16852 355046 349000) 0 nil])
([nil nil ((29265 . 29275)) nil (25827 16852 355042 471000) 0 nil])
([nil nil ((29275 . 29285)) nil (25827 16852 355041 474000) 0 nil])
([nil nil ((#("overwriteSelectionDialog" 0 24 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 29551) (undo-tree-id16 . -24) (undo-tree-id17 . -24)) nil (25827 16852 355040 80000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29567 . 29568) (nil block-side t 29551 . 29568) (nil tag-attr t 29551 . 29568) (nil tag-name "v-btn" 29551 . 29568) (nil tag-type start 29551 . 29568) (29551 . 29568)) nil (25827 16852 355036 626000) 0 nil])
([nil nil ((32212 . 32213)) nil (25827 16852 355034 387000) 0 nil])
([nil nil ((32213 . 32222)) nil (25827 16852 355033 261000) 0 nil])
([nil nil ((32222 . 32238)) nil (25827 16852 355032 44000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32237) (undo-tree-id15 . -1) 32238) nil (25827 16852 355030 838000) 0 nil])
([nil nil ((32237 . 32244)) nil (25827 16852 355028 530000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32243) (undo-tree-id14 . -1) 32244) nil (25827 16852 355027 255000) 0 nil])
([nil nil ((#("filterSelOverwriteError" 0 23 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 29575) (undo-tree-id12 . -23) (undo-tree-id13 . -23)) nil (25827 16852 355024 426000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29589 . 29590) (nil block-side t 29575 . 29590) (nil tag-attr t 29575 . 29590) (nil tag-name "v-btn" 29575 . 29590) (nil tag-type start 29575 . 29590) (29575 . 29590)) nil (25827 16852 355021 207000) 0 nil])
([nil nil ((#("overwriteConfirm=true;" 0 22 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 29429) (undo-tree-id10 . -22) (undo-tree-id11 . -22)) nil (25827 16852 355018 492000) 0 nil])
([nil nil ((29064 . 29065)) nil (25827 16852 355015 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29079 . 29080) (nil block-side t 29065 . 29080) (nil tag-attr t 29065 . 29080) (nil tag-name "v-dialog" 29065 . 29080) (nil tag-type start 29065 . 29080) (29065 . 29080)) nil (25827 16852 355014 189000) 0 nil])
([nil nil ((29080 . 29081)) nil (25827 16852 355011 901000) 0 nil])
([nil nil ((#("?" 0 1 (tag-type start tag-name "v-dialog" tag-attr t block-side t)) . -29080) (undo-tree-id9 . -1) 29081) nil (25827 16852 355010 595000) 0 nil])
([nil nil ((29080 . 29085)) nil (25827 16852 355008 301000) 0 nil])
([nil nil ((#("save_filter_selection" 0 21 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 29450) (undo-tree-id6 . -21) (undo-tree-id7 . -21) (undo-tree-id8 . -21)) nil (25827 16852 355006 995000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29468 . 29469) (nil block-side t 29450 . 29469) (nil tag-attr t 29450 . 29469) (nil tag-name "v-btn" 29450 . 29469) (nil tag-type start 29450 . 29469) (29450 . 29469)) nil (25827 16852 355001 790000) 0 nil])
([nil nil ((#("create_empty_folder" 0 19 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15029) (undo-tree-id4 . -19) (undo-tree-id5 . -19)) nil (25827 16852 354999 185000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15051 . 15052) (nil block-side t 15046 . 15052) (nil tag-attr t 15046 . 15052) (nil tag-name "v-btn" 15046 . 15052) (nil tag-type start 15046 . 15052) (nil rear-nonsticky t 15045 . 15046) (nil block-side t 15045 . 15046) (nil tag-attr t 15045 . 15046) (nil tag-name "v-btn" 15045 . 15046) (nil tag-type start 15045 . 15046) (nil block-side t 15029 . 15045) (nil tag-attr t 15029 . 15045) (nil tag-name "v-btn" 15029 . 15045) (nil tag-type start 15029 . 15045) (15029 . 15052)) nil (25827 16852 354987 600000) 0 nil])
([nil nil ((#(")" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15052) (#("(" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . 15052)) nil (25827 16852 354982 82000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing)) . -29678) (#("          " 0 10 (face whitespace-trailing)) . -29319) 15052) nil (25827 16898 762007 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29321 . 29322) (nil tag-attr t 29307 . 29322) (nil tag-name "v-text-field" 29307 . 29322) (nil tag-type start 29307 . 29322) (nil font-lock-face web-mode-html-attr-value-face 29307 . 29322) (29307 . 29322)) nil (25827 16924 446701 186000) 0 nil] [nil nil ((29675 . 29684) (#("    " 0 4 (font-lock-face web-mode-comment-face tag-type comment)) . 29675) (29656 . 29665) (#("      " 0 6 (font-lock-face web-mode-comment-face tag-type comment)) . 29656) (29637 . 29638) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29520) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29421) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29390) (29363 . 29364) (29338 . 29339) (29326 . 29327) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29307) (29283 . 29284) (29258 . 29259) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -29192) (29167 . 29168) (29141 . 29150) (#("      " 0 6 (font-lock-face web-mode-comment-face tag-type comment)) . 29141) (29017 . 29686) (#("<v-dialog @click:outside=\"new_folder_dialog=false;new_folder_name=null\" v-model=\"new_folder_dialog\" max-width=\"600px\">
      <v-card>
        <v-card-title>
          <span class=\"headline\">{{ $t(\"General.confirm\") }}</span>
        </v-card-title>
        <v-text-field
          v-model=\"\"
        >

        </v-text-field>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color=\"primary\" @click=\"create_empty_folder()\">{{ $t('General.confirm' )}}</v-btn>
          <v-btn color=\"white\" @click=\"new_folder_dialog=false;new_folder_name=null\">{{ $t('General.close' )}}</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-dialog") 1 9 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-dialog") 9 10 (tag-type start tag-name "v-dialog") 10 11 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-dialog" tag-attr t tag-attr-beg 2) 11 16 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-dialog" tag-attr t) 16 17 (tag-type start tag-name "v-dialog" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 17 24 (tag-type start tag-name "v-dialog" tag-attr t block-token delimiter-beg block-side t) 24 25 (tag-type start tag-name "v-dialog" tag-attr t block-token delimiter-beg block-side t) 25 26 (tag-type start tag-name "v-dialog" tag-attr t block-token delimiter-beg block-side t) 26 42 (tag-type start tag-name "v-dialog" tag-attr t block-side t) 42 43 (tag-type start tag-name "v-dialog" tag-attr t block-side t rear-nonsticky t) 43 50 (tag-type start tag-name "v-dialog" tag-attr t block-side t) 50 64 (tag-type start tag-name "v-dialog" tag-attr t block-side t) 64 65 (tag-type start tag-name "v-dialog" tag-attr t block-side t rear-nonsticky t) 65 70 (tag-type start tag-name "v-dialog" tag-attr t block-side t) 70 71 (tag-type start tag-name "v-dialog" tag-attr-end 14 tag-attr t block-token delimiter-end block-end t block-side t) 71 72 (tag-type start tag-name "v-dialog") 72 73 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-dialog" tag-attr t tag-attr-beg 2) 73 79 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-dialog" tag-attr t) 79 80 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-dialog" tag-attr t) 80 81 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr t) 81 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr t rear-nonsticky t) 98 99 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr-end 7 tag-attr t) 99 100 (tag-type start tag-name "v-dialog") 100 101 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-dialog" tag-attr t tag-attr-beg 0) 101 109 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-dialog" tag-attr t) 109 110 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-dialog" tag-attr t) 110 116 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-dialog" tag-attr-end 9 tag-attr t) 117 118 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-dialog") 125 126 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-card") 126 132 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-card") 132 133 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-card") 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-card-title") 143 155 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-card-title") 155 156 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-card-title") 167 168 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 168 172 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 172 173 (tag-type start tag-name "span") 173 174 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 174 178 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 178 179 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 179 188 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 188 189 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 190 191 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls nil block-beg 0) 191 192 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 192 195 (block-side t) 195 196 (face (rainbow-delimiters-depth-3-face) block-side t) 196 213 (block-side t) 213 214 (face (rainbow-delimiters-depth-3-face) block-side t) 214 215 (block-side t) 215 216 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 216 217 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 217 218 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 218 219 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 219 223 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 223 224 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 233 234 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-title") 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-title") 235 247 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-title") 247 248 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-title") 257 258 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-text-field") 258 270 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-text-field") 270 271 (tag-type start tag-name "v-text-field") 271 281 (tag-type start tag-name "v-text-field") 281 282 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t tag-attr-beg 2) 282 283 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 283 284 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 284 285 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 285 286 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 286 287 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 287 288 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr t) 288 289 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-text-field" tag-attr t) 289 290 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t) 290 291 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr-end 7 tag-attr t) 291 300 (tag-type start tag-name "v-text-field") 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-text-field") 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-text-field") 312 313 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-text-field") 313 325 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-text-field") 325 326 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-text-field") 335 336 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-card-actions") 336 350 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-card-actions") 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-card-actions") 362 363 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-spacer") 363 371 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-spacer") 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-spacer") 372 373 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-spacer") 373 374 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-spacer") 374 382 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-spacer") 382 383 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-spacer") 394 395 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 395 400 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 400 401 (tag-type start tag-name "v-btn") 401 402 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 402 406 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 406 407 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 407 415 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 415 416 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t) 416 417 (tag-type start tag-name "v-btn") 417 418 (tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 418 423 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 423 424 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 424 425 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 425 443 (tag-type start tag-name "v-btn" tag-attr t block-side t) 443 444 (tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t) 444 446 (tag-type start tag-name "v-btn" tag-attr t block-side t) 446 447 (tag-type start tag-name "v-btn" tag-attr-end 6 tag-attr t block-token delimiter-end block-end t block-side t) 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 448 449 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 449 450 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 450 453 (block-side t) 453 454 (face (rainbow-delimiters-depth-3-face) block-side t) 454 472 (block-side t) 472 473 (face (rainbow-delimiters-depth-3-face) block-side t) 473 474 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 474 475 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 475 476 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 476 477 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 477 482 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 482 483 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 494 495 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 495 500 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 500 501 (tag-type start tag-name "v-btn") 501 502 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 502 506 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 506 507 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-btn" tag-attr t) 507 513 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr t) 513 514 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t) 514 515 (tag-type start tag-name "v-btn") 515 516 (tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 516 521 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 521 522 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 522 523 (tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 523 539 (tag-type start tag-name "v-btn" tag-attr t block-side t) 539 540 (tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t) 540 547 (tag-type start tag-name "v-btn" tag-attr t block-side t) 547 561 (tag-type start tag-name "v-btn" tag-attr t block-side t) 561 562 (tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t) 562 567 (tag-type start tag-name "v-btn" tag-attr t block-side t) 567 568 (tag-type start tag-name "v-btn" tag-attr-end 6 tag-attr t block-token delimiter-end block-end t block-side t) 568 569 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 569 570 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 570 571 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 571 574 (block-side t) 574 575 (face (rainbow-delimiters-depth-3-face) block-side t) 575 591 (block-side t) 591 592 (face (rainbow-delimiters-depth-3-face) block-side t) 592 593 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 593 594 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t) 594 595 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 595 596 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 596 601 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 601 602 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 611 612 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-actions") 612 613 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-actions") 613 627 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-actions") 627 628 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-actions") 635 636 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card") 636 637 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card") 637 643 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card") 643 644 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card") 649 650 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-dialog") 650 651 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-dialog") 651 659 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-dialog") 659 660 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-dialog" rear-nonsticky t)) . 29017) (undo-tree-id61 . -660) (undo-tree-id62 . -69) (undo-tree-id63 . -119) (undo-tree-id65 . -523) (undo-tree-id66 . -523) (undo-tree-id67 . -547) (undo-tree-id68 . -547) (undo-tree-id69 . -425) (undo-tree-id70 . -425) (undo-tree-id71 . -50) (undo-tree-id72 . -425) (undo-tree-id73 . -425) (undo-tree-id74 . -49) (undo-tree-id75 . -660) (t 25827 16852 395496 48000)) ((29017 . 29677) (#("<!-- <v-dialog @click:outside=\"new_folder_dialog=false;new_folder_name=null\" v-model=\"new_folder_dialog\" max-width=\"600px\">
      <v-card>
        <v-card-title>
          <span class=\"headline\">{{ $t(\"General.confirm\") }}</span>
        </v-card-title>
        <v-text-field
          v-model=\"\"
        >

        </v-text-field>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color=\"primary\" @click=\"create_empty_folder()\">{{ $t('General.confirm' )}}</v-btn>
          <v-btn color=\"white\" @click=\"new_folder_dialog=false;new_folder_name=null\">{{ $t('General.close' )}}</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 21 (font-lock-face web-mode-comment-face tag-type comment) 21 22 (tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 22 31 (tag-type comment block-token delimiter-beg block-side t) 31 75 (tag-type comment block-side t) 75 76 (tag-type comment block-token delimiter-end block-end t block-side t) 76 124 (font-lock-face web-mode-comment-face tag-type comment) 124 130 (font-lock-face web-mode-comment-face tag-type comment) 130 171 (font-lock-face web-mode-comment-face tag-type comment) 171 172 (font-lock-face web-mode-comment-face tag-type comment) 172 195 (font-lock-face web-mode-comment-face tag-type comment) 195 196 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 196 197 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-beg block-side t) 197 200 (tag-type comment block-side t) 200 201 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 201 218 (tag-type comment block-side t) 218 219 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 219 220 (tag-type comment block-side t) 220 221 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-end block-side t) 221 222 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-end block-end t block-side t) 222 285 (font-lock-face web-mode-comment-face tag-type comment) 285 286 (font-lock-face web-mode-comment-face tag-type comment) 286 366 (font-lock-face web-mode-comment-face tag-type comment) 366 367 (font-lock-face web-mode-comment-face tag-type comment) 367 398 (font-lock-face web-mode-comment-face tag-type comment) 398 399 (font-lock-face web-mode-comment-face tag-type comment) 399 422 (font-lock-face web-mode-comment-face tag-type comment) 422 423 (tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 423 430 (tag-type comment block-token delimiter-beg block-side t) 430 451 (tag-type comment block-side t) 451 452 (tag-type comment block-token delimiter-end block-end t block-side t) 452 453 (font-lock-face web-mode-comment-face tag-type comment) 453 454 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 454 455 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-beg block-side t) 455 458 (tag-type comment block-side t) 458 459 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 459 477 (tag-type comment block-side t) 477 478 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 478 479 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-end block-side t) 479 480 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-end block-end t block-side t) 480 498 (font-lock-face web-mode-comment-face tag-type comment) 498 499 (font-lock-face web-mode-comment-face tag-type comment) 499 520 (font-lock-face web-mode-comment-face tag-type comment) 520 521 (tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 521 528 (tag-type comment block-token delimiter-beg block-side t) 528 572 (tag-type comment block-side t) 572 573 (tag-type comment block-token delimiter-end block-end t block-side t) 573 574 (font-lock-face web-mode-comment-face tag-type comment) 574 575 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 575 576 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-beg block-side t) 576 579 (tag-type comment block-side t) 579 580 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 580 596 (tag-type comment block-side t) 596 597 (face (rainbow-delimiters-depth-3-face) tag-type comment block-side t) 597 598 (face (rainbow-delimiters-depth-2-face) tag-type comment block-token delimiter-end block-side t) 598 599 (face (rainbow-delimiters-depth-1-face) tag-type comment block-token delimiter-end block-end t block-side t) 599 634 (font-lock-face web-mode-comment-face tag-type comment) 634 640 (font-lock-face web-mode-comment-face tag-type comment) 640 650 (font-lock-face web-mode-comment-face tag-type comment) 650 654 (font-lock-face web-mode-comment-face tag-type comment) 654 668 (font-lock-face web-mode-comment-face tag-type comment) 668 669 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 29017) (undo-tree-id77 . -389) (undo-tree-id78 . -489) (undo-tree-id79 . -449) (undo-tree-id80 . -449) (undo-tree-id81 . -449) (undo-tree-id82 . -449) (undo-tree-id83 . -449) (undo-tree-id84 . -449) (undo-tree-id85 . -449) (undo-tree-id86 . -449) (undo-tree-id87 . -449) (undo-tree-id88 . -449) (undo-tree-id89 . -449) (undo-tree-id90 . -449) (undo-tree-id91 . -449) (undo-tree-id92 . -449) (29141 . 29147) (#("         " 0 9 (font-lock-face web-mode-comment-face tag-type comment)) . 29141) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29167) (29192 . 29193) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29258) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29283) (29307 . 29308) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29326) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29338) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29363) (29390 . 29391) (29421 . 29422) (29520 . 29521) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 29637) (29656 . 29662) (#("         " 0 9 (font-lock-face web-mode-comment-face tag-type comment)) . 29656) (29675 . 29679) (#("         " 0 9 (font-lock-face web-mode-comment-face tag-type comment)) . 29675) (t 25827 16889 147617 41000)) (25827 16889 107550 335000) 0 nil])
([nil nil ((#("false" 0 4 (tag-type start tag-name "v-btn" tag-attr t block-side t) 4 5 (tag-type start tag-name "v-btn" tag-attr t block-side t rear-nonsticky t)) . 15047) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (t 25827 16924 491732 506000)) nil (25827 16974 885568 38000) 0 nil])
nil
([nil nil ((15047 . 15051)) nil (25827 16974 885550 970000) 0 nil])
([nil nil ((29264 . 29273) (t 25827 16974 923895 836000)) nil (25827 17013 953514 315000) 0 nil])
([nil nil ((29273 . 29275)) nil (25827 17013 953512 953000) 0 nil])
([nil nil (("-" . -29274) (undo-tree-id108 . -1) 29275) nil (25827 17013 953511 523000) 0 nil])
([nil nil ((29274 . 29282)) nil (25827 17013 953508 565000) 0 nil])
([nil nil ((29274 . 29285) (#("v-card-t" 0 8 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v-card-t")) . -29274) (undo-tree-id105 . -3) (undo-tree-id106 . -8) (undo-tree-id107 . -8) 29282) nil (25827 17013 953506 738000) 0 nil])
([nil nil ((29285 . 29300)) nil (25827 17013 953501 181000) 0 nil])
([nil nil ((29287 . 29297) (29288 . 29296) (#("          " 0 10 (face whitespace-trailing)) . 29287) (29287 . 29297) (29287 . 29288) ("        " . 29287) (29286 . 29295)) nil (25827 17013 953499 372000) 0 nil])
([nil nil ((#("        <v-text-field
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-text-field") 9 21 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-text-field") 21 22 (tag-type start tag-name "v-text-field")) . 29343) (29320 . 29343) (#("        </v-card-text>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 10 21 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29298) (undo-tree-id104 . -10) (29321 . 29343) 29308) nil (25827 17013 953496 284000) 0 nil])
([nil nil ((#("          v-model=\"new_folder_name\"
" 33 34 (rear-nonsticky t)) . 29379) (undo-tree-id102 . -19) (29356 . 29379) (#("        </v-card-text>
" 0 7 (tag-type start tag-name "v-text-field") 7 8 (tag-end t tag-type start tag-name "v-text-field") 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 10 21 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29320) (undo-tree-id103 . -10) (29343 . 29379) 29330) nil (25827 17013 953492 70000) 0 nil])
([nil nil (("        >
" . 29389) (29366 . 29389) (#("        </v-card-text>
" 0 7 (tag-type start tag-name "v-text-field") 7 8 (tag-end t tag-type start tag-name "v-text-field") 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 10 21 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29356) (undo-tree-id101 . -10) (29379 . 29389) 29366) nil (25827 17013 953487 51000) 0 nil])
([nil nil (("
" . 29390) (29367 . 29390) (#("        </v-card-text>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 10 21 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29366) (undo-tree-id100 . -10) (29389 . 29390) 29376) nil (25827 17013 953483 391000) 0 nil])
([nil nil ((#("        </v-text-field>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-text-field") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-text-field") 10 22 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-text-field") 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-text-field")) . 29414) (29391 . 29414) (#("        </v-card-text>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-card-text") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-card-text") 10 21 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-card-text") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-card-text")) . 29367) (undo-tree-id99 . -10) (29390 . 29414) 29377) nil (25827 17013 953479 603000) 0 nil])
([nil nil (("
" . 29297) (undo-tree-id98 . -1)) nil (25827 17013 953476 116000) 0 nil])
([nil nil (("        " . -29297)) nil (25827 17013 953473 194000) 0 nil])
([nil nil ((29321 . 29323)) nil (25827 17013 953471 998000) 0 nil])
([nil nil ((29357 . 29359) 29358) nil (25827 17013 953470 540000) 0 nil])
([nil nil ((29370 . 29372) 29373) nil (25827 17013 953468 277000) 0 nil])
([nil nil (("
" . 29360) (undo-tree-id96 . -1) (undo-tree-id97 . -1)) nil (25827 17013 953462 861000) 0 nil])
([nil nil ((29310 . 29323) (t 25827 17013 988021 318000)) nil (25827 17131 128413 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29330 . 29331) (nil tag-attr t 29330 . 29331) (nil tag-attr-end 0 29330 . 29331) (nil tag-name "v-text-field" 29330 . 29331) (nil tag-type start 29330 . 29331) (nil font-lock-face web-mode-html-attr-name-face 29330 . 29331) (nil tag-attr t 29324 . 29330) (nil tag-name "v-text-field" 29324 . 29330) (nil tag-type start 29324 . 29330) (nil font-lock-face web-mode-html-attr-name-face 29324 . 29330) (nil tag-attr-beg 0 29323 . 29324) (nil tag-attr t 29323 . 29324) (nil tag-name "v-text-field" 29323 . 29324) (nil tag-type start 29323 . 29324) (nil font-lock-face web-mode-html-attr-name-face 29323 . 29324) (29323 . 29331)) nil (25827 17131 128410 214000) 0 nil])
([nil nil ((29331 . 29344)) nil (25827 17131 128400 240000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29348 . 29349) (nil tag-attr t 29348 . 29349) (nil tag-attr-end 0 29348 . 29349) (nil tag-name "v-text-field" 29348 . 29349) (nil tag-type start 29348 . 29349) (nil font-lock-face web-mode-html-attr-name-face 29348 . 29349) (nil tag-attr t 29345 . 29348) (nil tag-name "v-text-field" 29345 . 29348) (nil tag-type start 29345 . 29348) (nil font-lock-face web-mode-html-attr-name-face 29345 . 29348) (nil tag-attr-beg 0 29344 . 29345) (nil tag-attr t 29344 . 29345) (nil tag-name "v-text-field" 29344 . 29345) (nil tag-type start 29344 . 29345) (nil font-lock-face web-mode-html-attr-name-face 29344 . 29345) (29344 . 29349)) nil (25827 17131 128397 462000) 0 nil])
([nil nil ((29349 . 29362)) nil (25827 17131 128387 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 29369 . 29370) (nil tag-attr t 29369 . 29370) (nil tag-attr-end 0 29369 . 29370) (nil tag-name "v-text-field" 29369 . 29370) (nil tag-type start 29369 . 29370) (nil font-lock-face web-mode-html-attr-name-face 29369 . 29370) (nil tag-attr t 29363 . 29369) (nil tag-name "v-text-field" 29363 . 29369) (nil tag-type start 29363 . 29369) (nil font-lock-face web-mode-html-attr-name-face 29363 . 29369) (nil tag-attr-beg 0 29362 . 29363) (nil tag-attr t 29362 . 29363) (nil tag-name "v-text-field" 29362 . 29363) (nil tag-type start 29362 . 29363) (nil font-lock-face web-mode-html-attr-name-face 29362 . 29363) (29362 . 29370)) nil (25827 17131 128379 327000) 0 nil])
([nil nil ((29370 . 29383)) nil (25827 17131 128373 723000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29414 . 29415) (nil tag-attr t 29414 . 29415) (nil tag-attr-end 12 29414 . 29415) (nil tag-name "v-text-field" 29414 . 29415) (nil tag-type start 29414 . 29415) (nil font-lock-face web-mode-html-attr-value-face 29414 . 29415) (nil tag-attr t 29396 . 29414) (nil tag-name "v-text-field" 29396 . 29414) (nil tag-type start 29396 . 29414) (nil font-lock-face web-mode-html-attr-value-face 29396 . 29414) (nil tag-attr t 29395 . 29396) (nil tag-name "v-text-field" 29395 . 29396) (nil tag-type start 29395 . 29396) (nil font-lock-face web-mode-html-attr-equal-face 29395 . 29396) (nil tag-attr t 29384 . 29395) (nil tag-name "v-text-field" 29384 . 29395) (nil tag-type start 29384 . 29395) (nil font-lock-face web-mode-html-attr-name-face 29384 . 29395) (nil tag-attr-beg 0 29383 . 29384) (nil tag-attr t 29383 . 29384) (nil tag-name "v-text-field" 29383 . 29384) (nil tag-type start 29383 . 29384) (nil font-lock-face web-mode-html-attr-name-face 29383 . 29384) (29383 . 29415)) nil (25827 17131 128371 401000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29401) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29402) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29403) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29404) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29405) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29406) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29407) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29408) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29409) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29410) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29411) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29412) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-text-field" tag-attr t)) . -29413) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) 29414) nil (25827 17131 128329 537000) 0 nil])
([nil nil ((29401 . 29402)) nil (25827 17131 127394 875000) 0 nil])
([nil nil ((29402 . 29407)) nil (25827 17131 127386 982000) 0 nil])
([nil nil ((#("confirm" 0 7 (block-side t)) . 29221) (undo-tree-id679 . -7) (undo-tree-id680 . -7) (undo-tree-id681 . -7) (t 25827 17131 164392 899000)) nil (25827 21692 247001 443000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29234 . 29235) (nil block-side t 29221 . 29235) (29221 . 29235)) nil (25827 21692 246996 380000) 0 nil])
([nil nil ((#("General" 0 7 (block-side t)) . 29213) (undo-tree-id677 . -7) (undo-tree-id678 . -7)) nil (25827 21692 246993 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29227 . 29228) (nil block-side t 29227 . 29228) (nil block-side t 29226 . 29227) (nil block-side t 29225 . 29226) (nil block-side t 29224 . 29225) (nil block-side t 29223 . 29224) (nil block-side t 29222 . 29223) (nil block-side t 29221 . 29222) (nil block-side t 29220 . 29221) (nil block-side t 29219 . 29220) (nil block-side t 29218 . 29219) (nil block-side t 29217 . 29218) (nil block-side t 29216 . 29217) (nil block-side t 29215 . 29216) (nil block-side t 29214 . 29215) (nil block-side t 29213 . 29214) (29213 . 29228)) nil (25827 21692 246964 691000) 0 nil])
([nil nil ((29423 . 29436) (t 25827 21692 286514 165000)) nil (25827 21779 88606 812000) 0 nil])
([nil nil ((29436 . 29440)) nil (25827 21779 88602 417000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29439) (undo-tree-id697 . -1) 29440) nil (25827 21779 88597 677000) 0 nil])
([nil nil ((29439 . 29441)) nil (25827 21779 88592 437000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -29436) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29437) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29438) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29439) (undo-tree-id695 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29440) (undo-tree-id696 . -1) 29441) nil (25827 21779 88585 492000) 0 nil])
([nil nil ((29436 . 29441)) nil (25827 21779 88283 430000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29440) (undo-tree-id685 . -1) 29441) nil (25827 21779 88279 491000) 0 nil])
([nil nil ((29440 . 29445)) nil (25827 21779 88267 996000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29486 . 29487) (nil block-side t 29484 . 29487) (nil tag-attr t 29484 . 29487) (nil tag-name "v-text-field" 29484 . 29487) (nil tag-type start 29484 . 29487) (nil block-side t 29483 . 29484) (nil tag-attr t 29483 . 29484) (nil tag-name "v-text-field" 29483 . 29484) (nil tag-type start 29483 . 29484) (nil block-side t 29482 . 29483) (nil tag-attr t 29482 . 29483) (nil tag-name "v-text-field" 29482 . 29483) (nil tag-type start 29482 . 29483) (nil block-side t 29481 . 29482) (nil tag-attr t 29481 . 29482) (nil tag-name "v-text-field" 29481 . 29482) (nil tag-type start 29481 . 29482) (nil block-side t 29480 . 29481) (nil tag-attr t 29480 . 29481) (nil tag-name "v-text-field" 29480 . 29481) (nil tag-type start 29480 . 29481) (nil block-side t 29479 . 29480) (nil tag-attr t 29479 . 29480) (nil tag-name "v-text-field" 29479 . 29480) (nil tag-type start 29479 . 29480) (nil block-side t 29478 . 29479) (nil tag-attr t 29478 . 29479) (nil tag-name "v-text-field" 29478 . 29479) (nil tag-type start 29478 . 29479) (nil block-side t 29477 . 29478) (nil tag-attr t 29477 . 29478) (nil tag-name "v-text-field" 29477 . 29478) (nil tag-type start 29477 . 29478) (nil block-side t 29476 . 29477) (nil tag-attr t 29476 . 29477) (nil tag-name "v-text-field" 29476 . 29477) (nil tag-type start 29476 . 29477) (nil block-side t 29475 . 29476) (nil tag-attr t 29475 . 29476) (nil tag-name "v-text-field" 29475 . 29476) (nil tag-type start 29475 . 29476) (nil block-side t 29474 . 29475) (nil tag-attr t 29474 . 29475) (nil tag-name "v-text-field" 29474 . 29475) (nil tag-type start 29474 . 29475) (nil block-side t 29473 . 29474) (nil tag-attr t 29473 . 29474) (nil tag-name "v-text-field" 29473 . 29474) (nil tag-type start 29473 . 29474) (nil block-side t 29472 . 29473) (nil tag-attr t 29472 . 29473) (nil tag-name "v-text-field" 29472 . 29473) (nil tag-type start 29472 . 29473) (nil block-side t 29471 . 29472) (nil tag-attr t 29471 . 29472) (nil tag-name "v-text-field" 29471 . 29472) (nil tag-type start 29471 . 29472) (nil block-side t 29470 . 29471) (nil tag-attr t 29470 . 29471) (nil tag-name "v-text-field" 29470 . 29471) (nil tag-type start 29470 . 29471) (nil block-side t 29469 . 29470) (nil tag-attr t 29469 . 29470) (nil tag-name "v-text-field" 29469 . 29470) (nil tag-type start 29469 . 29470) (nil block-side t 29468 . 29469) (nil tag-attr t 29468 . 29469) (nil tag-name "v-text-field" 29468 . 29469) (nil tag-type start 29468 . 29469) (nil block-side t 29467 . 29468) (nil tag-attr t 29467 . 29468) (nil tag-name "v-text-field" 29467 . 29468) (nil tag-type start 29467 . 29468) (nil block-side t 29466 . 29467) (nil tag-attr t 29466 . 29467) (nil tag-name "v-text-field" 29466 . 29467) (nil tag-type start 29466 . 29467) (nil block-side t 29465 . 29466) (nil tag-attr t 29465 . 29466) (nil tag-name "v-text-field" 29465 . 29466) (nil tag-type start 29465 . 29466) (nil block-side t 29464 . 29465) (nil tag-attr t 29464 . 29465) (nil tag-name "v-text-field" 29464 . 29465) (nil tag-type start 29464 . 29465) (nil block-side t 29463 . 29464) (nil tag-attr t 29463 . 29464) (nil tag-name "v-text-field" 29463 . 29464) (nil tag-type start 29463 . 29464) (nil block-side t 29462 . 29463) (nil tag-attr t 29462 . 29463) (nil tag-name "v-text-field" 29462 . 29463) (nil tag-type start 29462 . 29463) (nil block-side t 29461 . 29462) (nil tag-attr t 29461 . 29462) (nil tag-name "v-text-field" 29461 . 29462) (nil tag-type start 29461 . 29462) (nil block-side t 29460 . 29461) (nil tag-attr t 29460 . 29461) (nil tag-name "v-text-field" 29460 . 29461) (nil tag-type start 29460 . 29461) (nil block-side t 29459 . 29460) (nil tag-attr t 29459 . 29460) (nil tag-name "v-text-field" 29459 . 29460) (nil tag-type start 29459 . 29460) (nil block-side t 29458 . 29459) (nil tag-attr t 29458 . 29459) (nil tag-name "v-text-field" 29458 . 29459) (nil tag-type start 29458 . 29459) (nil block-side t 29457 . 29458) (nil tag-attr t 29457 . 29458) (nil tag-name "v-text-field" 29457 . 29458) (nil tag-type start 29457 . 29458) (nil block-side t 29456 . 29457) (nil tag-attr t 29456 . 29457) (nil tag-name "v-text-field" 29456 . 29457) (nil tag-type start 29456 . 29457) (nil block-side t 29455 . 29456) (nil tag-attr t 29455 . 29456) (nil tag-name "v-text-field" 29455 . 29456) (nil tag-type start 29455 . 29456) (nil block-side t 29454 . 29455) (nil tag-attr t 29454 . 29455) (nil tag-name "v-text-field" 29454 . 29455) (nil tag-type start 29454 . 29455) (nil block-side t 29453 . 29454) (nil tag-attr t 29453 . 29454) (nil tag-name "v-text-field" 29453 . 29454) (nil tag-type start 29453 . 29454) (nil block-side t 29452 . 29453) (nil tag-attr t 29452 . 29453) (nil tag-name "v-text-field" 29452 . 29453) (nil tag-type start 29452 . 29453) (nil block-side t 29451 . 29452) (nil tag-attr t 29451 . 29452) (nil tag-name "v-text-field" 29451 . 29452) (nil tag-type start 29451 . 29452) (nil block-side t 29450 . 29451) (nil tag-attr t 29450 . 29451) (nil tag-name "v-text-field" 29450 . 29451) (nil tag-type start 29450 . 29451) (nil block-side t 29449 . 29450) (nil tag-attr t 29449 . 29450) (nil tag-name "v-text-field" 29449 . 29450) (nil tag-type start 29449 . 29450) (nil block-side t 29448 . 29449) (nil tag-attr t 29448 . 29449) (nil tag-name "v-text-field" 29448 . 29449) (nil tag-type start 29448 . 29449) (nil block-side t 29446 . 29448) (nil tag-attr t 29446 . 29448) (nil tag-name "v-text-field" 29446 . 29448) (nil tag-type start 29446 . 29448) (nil block-side t 29445 . 29446) (nil tag-attr t 29445 . 29446) (nil tag-name "v-text-field" 29445 . 29446) (nil tag-type start 29445 . 29446) (nil block-side t 29444 . 29445) (nil tag-attr t 29444 . 29445) (nil tag-name "v-text-field" 29444 . 29445) (nil tag-type start 29444 . 29445) (29444 . 29487)) nil (25827 21779 88250 495000) 0 nil])
([nil nil ((#("tree_search_profiles" 0 20 (tag-type start tag-name "v-text-field" tag-attr t block-side t)) . 29464) (undo-tree-id682 . -20) (undo-tree-id683 . -20) (undo-tree-id684 . -20)) nil (25827 21779 88168 226000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29472 . 29473) (nil block-side t 29464 . 29473) (nil tag-attr t 29464 . 29473) (nil tag-name "v-text-field" 29464 . 29473) (nil tag-type start 29464 . 29473) (29464 . 29473)) nil (25827 21779 88111 321000) 0 nil])
([nil nil ((29308 . 29312) (29300 . 29309) (t 25827 21779 146841 346000)) nil (25827 21801 862346 536000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-card-text" tag-attr t)) . -29311) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) 29312) nil (25827 21801 862342 864000) 0 nil])
([nil nil ((29311 . 29312)) nil (25827 21801 862296 286000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-card-text" tag-attr t)) . -29311) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) 29312) nil (25827 21801 862293 99000) 0 nil])
([nil nil ((29311 . 29312)) nil (25827 21801 862265 559000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -29390) (undo-tree-id771 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29391) (undo-tree-id772 . -1) (#("q" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29392) (undo-tree-id773 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29393) (undo-tree-id774 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29394) (undo-tree-id775 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29395) (undo-tree-id776 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t)) . -29396) (undo-tree-id777 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-text-field" tag-attr-end 0 tag-attr t rear-nonsticky t)) . -29397) (undo-tree-id778 . -1) 29398 (t 25827 21801 902926 747000)) nil (25827 22267 318683 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29415 . 29416) (nil block-side t 29415 . 29416) (nil block-end t 29415 . 29416) (nil block-token delimiter-end 29415 . 29416) (nil tag-attr t 29415 . 29416) (nil tag-attr-end 5 29415 . 29416) (nil tag-name "v-text-field" 29415 . 29416) (nil tag-type start 29415 . 29416) (nil block-side t 29414 . 29415) (nil tag-attr t 29414 . 29415) (nil tag-name "v-text-field" 29414 . 29415) (nil tag-type start 29414 . 29415) (nil block-side t 29413 . 29414) (nil tag-attr t 29413 . 29414) (nil tag-name "v-text-field" 29413 . 29414) (nil tag-type start 29413 . 29414) (nil block-side t 29412 . 29413) (nil tag-attr t 29412 . 29413) (nil tag-name "v-text-field" 29412 . 29413) (nil tag-type start 29412 . 29413) (nil block-side t 29411 . 29412) (nil tag-attr t 29411 . 29412) (nil tag-name "v-text-field" 29411 . 29412) (nil tag-type start 29411 . 29412) (nil block-side t 29410 . 29411) (nil tag-attr t 29410 . 29411) (nil tag-name "v-text-field" 29410 . 29411) (nil tag-type start 29410 . 29411) (nil block-side t 29409 . 29410) (nil tag-attr t 29409 . 29410) (nil tag-name "v-text-field" 29409 . 29410) (nil tag-type start 29409 . 29410) (nil block-side t 29408 . 29409) (nil tag-attr t 29408 . 29409) (nil tag-name "v-text-field" 29408 . 29409) (nil tag-type start 29408 . 29409) (nil block-side t 29407 . 29408) (nil tag-attr t 29407 . 29408) (nil tag-name "v-text-field" 29407 . 29408) (nil tag-type start 29407 . 29408) (nil block-side t 29406 . 29407) (nil tag-attr t 29406 . 29407) (nil tag-name "v-text-field" 29406 . 29407) (nil tag-type start 29406 . 29407) (nil block-side t 29405 . 29406) (nil tag-attr t 29405 . 29406) (nil tag-name "v-text-field" 29405 . 29406) (nil tag-type start 29405 . 29406) (nil block-side t 29404 . 29405) (nil tag-attr t 29404 . 29405) (nil tag-name "v-text-field" 29404 . 29405) (nil tag-type start 29404 . 29405) (nil block-side t 29403 . 29404) (nil tag-attr t 29403 . 29404) (nil tag-name "v-text-field" 29403 . 29404) (nil tag-type start 29403 . 29404) (nil block-side t 29402 . 29403) (nil tag-attr t 29402 . 29403) (nil tag-name "v-text-field" 29402 . 29403) (nil tag-type start 29402 . 29403) (nil block-side t 29401 . 29402) (nil tag-attr t 29401 . 29402) (nil tag-name "v-text-field" 29401 . 29402) (nil tag-type start 29401 . 29402) (nil block-side t 29400 . 29401) (nil tag-attr t 29400 . 29401) (nil tag-name "v-text-field" 29400 . 29401) (nil tag-type start 29400 . 29401) (nil block-side t 29399 . 29400) (nil tag-attr t 29399 . 29400) (nil tag-name "v-text-field" 29399 . 29400) (nil tag-type start 29399 . 29400) (nil block-side t 29398 . 29399) (nil tag-attr t 29398 . 29399) (nil tag-name "v-text-field" 29398 . 29399) (nil tag-type start 29398 . 29399) (nil block-side t 29397 . 29398) (nil block-token delimiter-beg 29397 . 29398) (nil tag-attr t 29397 . 29398) (nil tag-name "v-text-field" 29397 . 29398) (nil tag-type start 29397 . 29398) (nil block-side t 29396 . 29397) (nil block-token delimiter-beg 29396 . 29397) (nil tag-attr t 29396 . 29397) (nil tag-name "v-text-field" 29396 . 29397) (nil tag-type start 29396 . 29397) (nil block-side t 29395 . 29396) (nil block-token delimiter-beg 29395 . 29396) (nil tag-attr t 29395 . 29396) (nil tag-name "v-text-field" 29395 . 29396) (nil tag-type start 29395 . 29396) (nil block-side t 29394 . 29395) (nil block-token delimiter-beg 29394 . 29395) (nil tag-attr t 29394 . 29395) (nil tag-name "v-text-field" 29394 . 29395) (nil tag-type start 29394 . 29395) (nil block-side t 29393 . 29394) (nil block-token delimiter-beg 29393 . 29394) (nil tag-attr t 29393 . 29394) (nil tag-name "v-text-field" 29393 . 29394) (nil tag-type start 29393 . 29394) (nil block-side t 29392 . 29393) (nil block-token delimiter-beg 29392 . 29393) (nil tag-attr t 29392 . 29393) (nil tag-name "v-text-field" 29392 . 29393) (nil tag-type start 29392 . 29393) (nil block-side t 29391 . 29392) (nil block-token delimiter-beg 29391 . 29392) (nil tag-attr-beg 0 29391 . 29392) (nil tag-attr t 29391 . 29392) (nil tag-name "v-text-field" 29391 . 29392) (nil tag-type start 29391 . 29392) (nil block-beg 0 29390 . 29391) (nil block-controls 0 29390 . 29391) (nil block-side t 29390 . 29391) (nil block-token delimiter-beg 29390 . 29391) (nil tag-name "v-text-field" 29390 . 29391) (nil tag-type start 29390 . 29391) (29390 . 29416)) nil (25827 22267 318580 401000) 0 nil])
([nil nil ((#("save_filter_foldR" 0 17 (tag-type start tag-name "v-text-field" tag-attr t block-side t)) . 29398) (undo-tree-id768 . -17) (undo-tree-id769 . -17) (undo-tree-id770 . -17)) nil (25827 22267 318555 580000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29410 . 29411) (nil block-side t 29398 . 29411) (nil tag-attr t 29398 . 29411) (nil tag-name "v-text-field" 29398 . 29411) (nil tag-type start 29398 . 29411) (29398 . 29411)) nil (25827 22267 318551 552000) 0 nil])
([nil nil ((32480 . 32481)) nil (25827 22267 318549 520000) 0 nil])
([nil nil ((32481 . 32490)) nil (25827 22267 318548 533000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32582 . 32583) (nil part-side javascript 32582 . 32583) (nil face (rainbow-delimiters-depth-4-face) 32582 . 32583) (nil part-side javascript 32573 . 32582) (nil rear-nonsticky t 32572 . 32573) (nil part-side javascript 32572 . 32573) (nil face (rainbow-delimiters-depth-5-face) 32572 . 32573) (nil part-side javascript 32571 . 32572) (nil part-token string 32571 . 32572) (nil syntax-table (15) 32571 . 32572) (nil font-lock-face web-mode-javascript-string-face 32571 . 32572) (nil part-side javascript 32546 . 32571) (nil part-token string 32546 . 32571) (nil font-lock-face web-mode-javascript-string-face 32546 . 32571) (nil part-side javascript 32545 . 32546) (nil part-token string 32545 . 32546) (nil syntax-table (15) 32545 . 32546) (nil font-lock-face web-mode-javascript-string-face 32545 . 32546) (nil part-side javascript 32544 . 32545) (nil face (rainbow-delimiters-depth-5-face) 32544 . 32545) (nil part-side javascript 32541 . 32544) (nil part-side javascript 32537 . 32541) (nil face web-mode-constant-face 32537 . 32541) (nil part-side javascript 32525 . 32537) (nil part-side javascript 32515 . 32525) (nil part-side javascript 32514 . 32515) (nil part-side javascript 32513 . 32514) (nil face (rainbow-delimiters-depth-4-face) 32513 . 32514) (nil part-side javascript 32512 . 32513) (nil part-side javascript 32511 . 32512) (nil part-side javascript 32498 . 32511) (nil face web-mode-variable-name-face 32498 . 32511) (nil part-side javascript 32490 . 32498) (32490 . 32583)) nil (25827 22267 318545 898000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -32490) (undo-tree-id767 . -1) 32491) nil (25827 22267 318537 985000) 0 nil])
([nil nil ((32565 . 32576)) nil (25827 22267 318535 514000) 0 nil])
([nil nil ((32576 . 32581)) nil (25827 22267 318534 585000) 0 nil])
([nil nil ((#("v => " 0 1 (part-side javascript) 1 4 (part-side javascript) 4 5 (part-side javascript)) . 32576) (undo-tree-id764 . -5) (undo-tree-id765 . -5) (undo-tree-id766 . -5)) nil (25827 22267 318532 954000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32657 . 32658) (nil part-side javascript 32657 . 32658) (nil face whitespace-trailing 32657 . 32658) (nil part-side javascript 32656 . 32657) (nil part-token string 32656 . 32657) (nil syntax-table (15) 32656 . 32657) (nil font-lock-face web-mode-javascript-string-face 32656 . 32657) (nil part-side javascript 32605 . 32656) (nil part-token string 32605 . 32656) (nil font-lock-face web-mode-javascript-string-face 32605 . 32656) (nil part-side javascript 32604 . 32605) (nil part-token string 32604 . 32605) (nil syntax-table (15) 32604 . 32605) (nil font-lock-face web-mode-javascript-string-face 32604 . 32605) (nil part-side javascript 32600 . 32604) (nil part-side javascript 32599 . 32600) (nil face (rainbow-delimiters-depth-5-face) 32599 . 32600) (nil part-side javascript 32598 . 32599) (nil part-side javascript 32597 . 32598) (nil face (rainbow-delimiters-depth-5-face) 32597 . 32598) (nil part-side javascript 32593 . 32597) (nil face web-mode-function-call-face 32593 . 32597) (nil part-side javascript 32589 . 32593) (nil part-side javascript 32588 . 32589) (nil face (rainbow-delimiters-depth-5-face) 32588 . 32589) (nil part-side javascript 32584 . 32588) (nil part-side javascript 32583 . 32584) (nil face (rainbow-delimiters-depth-5-face) 32583 . 32584) (nil part-side javascript 32576 . 32583) (32576 . 32658)) nil (25827 22267 318527 802000) 0 nil])
([nil nil ((#("'Name must only contain alphabets, numeric and space' " 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1 52 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 52 53 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 53 54 (face whitespace-trailing part-side javascript rear-nonsticky t)) . 32604) (undo-tree-id762 . -54) (undo-tree-id763 . -54)) nil (25827 22267 318520 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32639 . 32640) (nil part-side javascript 32639 . 32640) (nil face (rainbow-delimiters-depth-5-face) 32639 . 32640) (nil part-side javascript 32638 . 32639) (nil part-token string 32638 . 32639) (nil syntax-table (15) 32638 . 32639) (nil font-lock-face web-mode-javascript-string-face 32638 . 32639) (nil part-side javascript 32613 . 32638) (nil part-token string 32613 . 32638) (nil font-lock-face web-mode-javascript-string-face 32613 . 32638) (nil part-side javascript 32612 . 32613) (nil part-token string 32612 . 32613) (nil syntax-table (15) 32612 . 32613) (nil font-lock-face web-mode-javascript-string-face 32612 . 32613) (nil part-side javascript 32611 . 32612) (nil face (rainbow-delimiters-depth-5-face) 32611 . 32612) (nil part-side javascript 32608 . 32611) (nil part-side javascript 32604 . 32608) (nil face web-mode-constant-face 32604 . 32608) (32604 . 32640)) nil (25827 22267 318516 614000) 0 nil])
([nil nil ((#("fname_req" 0 9 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 32554) (undo-tree-id760 . -9) (undo-tree-id761 . -9)) nil (25827 22267 318511 604000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32568 . 32569) (nil part-side javascript 32554 . 32569) (nil part-token string 32554 . 32569) (nil font-lock-face web-mode-javascript-string-face 32554 . 32569) (32554 . 32569)) nil (25827 22267 318508 367000) 0 nil])
([nil nil ((#("fname_req" 0 9 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 32635) (undo-tree-id728 . -9) (undo-tree-id729 . -9) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -9) (undo-tree-id759 . -9)) nil (25827 22267 318503 583000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32648 . 32649) (nil part-side javascript 32635 . 32649) (nil part-token string 32635 . 32649) (nil font-lock-face web-mode-javascript-string-face 32635 . 32649) (32635 . 32649)) nil (25827 22267 318453 445000) 0 nil])
([nil nil ((32571 . 32572) (t 25827 22267 360653 252000)) nil (25827 22285 258740 140000) 0 nil])
([nil nil ((29314 . 29325) (t 25827 22285 300719 241000)) nil (25827 23167 79062 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29364 . 29365) (nil tag-name "v-form" 29364 . 29365) (nil tag-type start 29364 . 29365) (nil tag-end t 29364 . 29365) (nil font-lock-face web-mode-html-tag-bracket-face 29364 . 29365) (nil tag-name "v-form" 29363 . 29364) (nil tag-type start 29363 . 29364) (nil tag-attr t 29362 . 29363) (nil tag-attr-end 3 29362 . 29363) (nil tag-name "v-form" 29362 . 29363) (nil tag-type start 29362 . 29363) (nil font-lock-face web-mode-html-attr-value-face 29362 . 29363) (nil tag-attr t 29337 . 29362) (nil tag-name "v-form" 29337 . 29362) (nil tag-type start 29337 . 29362) (nil font-lock-face web-mode-html-attr-value-face 29337 . 29362) (nil tag-attr t 29336 . 29337) (nil tag-name "v-form" 29336 . 29337) (nil tag-type start 29336 . 29337) (nil font-lock-face web-mode-html-attr-equal-face 29336 . 29337) (nil tag-attr t 29334 . 29336) (nil tag-name "v-form" 29334 . 29336) (nil tag-type start 29334 . 29336) (nil font-lock-face web-mode-html-attr-name-face 29334 . 29336) (nil tag-attr-beg 0 29333 . 29334) (nil tag-attr t 29333 . 29334) (nil tag-name "v-form" 29333 . 29334) (nil tag-type start 29333 . 29334) (nil font-lock-face web-mode-html-attr-name-face 29333 . 29334) (nil tag-name "v-form" 29332 . 29333) (nil tag-type start 29332 . 29333) (nil tag-name "v-form" 29326 . 29332) (nil tag-type start 29326 . 29332) (nil font-lock-face web-mode-html-tag-custom-face 29326 . 29332) (nil tag-name "v-form" 29325 . 29326) (nil tag-type start 29325 . 29326) (nil tag-beg 19 29325 . 29326) (nil font-lock-face web-mode-html-tag-bracket-face 29325 . 29326) (29325 . 29365)) nil (25827 23167 79059 100000) 0 nil])
([nil nil ((29631 . 29642)) nil (25827 23167 79049 475000) 0 nil])
([nil nil ((29642 . 29651)) nil (25827 23167 79048 482000) 0 nil])
([nil nil ((29632 . 29634) (29618 . 29620) (29580 . 29582) (29524 . 29526) (29484 . 29486) (29447 . 29449) (29427 . 29429) (29404 . 29406) (29376 . 29378) 29315) nil (25827 23167 79046 971000) 0 nil])
([nil nil ((#("savefilterselection" 0 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-form" tag-attr t)) . 29343) (undo-tree-id796 . -19) (undo-tree-id797 . -19)) nil (25827 23167 79043 787000) 0 nil])
([nil nil ((29343 . 29352)) nil (25827 23167 79040 558000) 0 nil])
([nil nil ((34956 . 34965)) nil (25827 23167 79039 578000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35010 . 35011) (nil part-side javascript 35010 . 35011) (nil face (rainbow-delimiters-depth-4-face) 35010 . 35011) (nil part-side javascript 35009 . 35010) (nil face (rainbow-delimiters-depth-4-face) 35009 . 35010) (nil part-side javascript 35001 . 35009) (nil face web-mode-function-call-face 35001 . 35009) (nil part-side javascript 34969 . 35001) (nil part-side javascript 34965 . 34969) (nil face web-mode-constant-face 34965 . 34969) (34965 . 35011)) nil (25827 23167 79038 198000) 0 nil])
([nil nil ((34968 . 34970) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -34968) (34965 . 34969)) nil (25827 23167 79035 17000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 34969)) nil (25827 23167 79033 396000) 0 nil])
([nil nil ((35017 . 35019) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35017) (35015 . 35018)) nil (25827 23167 79032 10000) 0 nil])
([nil nil ((35020 . 35028) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 35019) (undo-tree-id794 . -8) (undo-tree-id795 . 10) (35027 . 35029) (35018 . 35028)) nil (25827 23167 79029 692000) 0 nil])
([nil nil ((#("
        console.log('Creating empty folder')
        return null" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-4-face) part-side javascript) 21 22 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 22 43 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 44 45 (face (rainbow-delimiters-depth-4-face) part-side javascript) 45 46 (part-side javascript) 46 54 (part-side javascript) 54 60 (face web-mode-keyword-face part-side javascript) 60 61 (part-side javascript) 61 65 (face web-mode-constant-face part-side javascript)) . 35029) (undo-tree-id791 . -65) (undo-tree-id792 . -1) (undo-tree-id793 . -65)) nil (25827 23167 79023 633000) 0 nil])
([nil nil ((#("form_savefilterselection" 0 24 (part-side javascript)) . 34980) (undo-tree-id789 . -24) (undo-tree-id790 . -24)) nil (25827 23167 79016 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34993 . 34994) (nil part-side javascript 34980 . 34994) (34980 . 34994)) nil (25827 23167 79012 922000) 0 nil])
([nil nil ((35009 . 35019)) nil (25827 23167 79011 451000) 0 nil])
([nil nil ((35010 . 35020) (#("          " 0 10 (part-side javascript)) . 35009) (undo-tree-id788 . -10) (35019 . 35020)) nil (25827 23167 79010 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35055 . 35056) (nil rear-nonsticky t 35055 . 35056) (nil part-side javascript 35055 . 35056) (nil face (rainbow-delimiters-depth-5-face) 35055 . 35056) (nil part-side javascript 35054 . 35055) (nil face (rainbow-delimiters-depth-5-face) 35054 . 35055) (nil part-side javascript 35046 . 35054) (nil face web-mode-function-call-face 35046 . 35054) (nil part-side javascript 35045 . 35046) (nil rear-nonsticky t 35044 . 35045) (nil part-side javascript 35044 . 35045) (nil part-side javascript 35031 . 35044) (nil part-side javascript 35024 . 35031) (nil part-side javascript 35020 . 35024) (nil face web-mode-constant-face 35020 . 35024) (35020 . 35056)) nil (25827 23167 79005 495000) 0 nil])
([nil nil ((#("v" 0 1 (face web-mode-function-call-face part-side javascript)) . -35046) (undo-tree-id780 . -1) (#("a" 0 1 (face web-mode-function-call-face part-side javascript)) . -35047) (undo-tree-id781 . -1) (#("l" 0 1 (face web-mode-function-call-face part-side javascript)) . -35048) (undo-tree-id782 . -1) (#("i" 0 1 (face web-mode-function-call-face part-side javascript)) . -35049) (undo-tree-id783 . -1) (#("d" 0 1 (face web-mode-function-call-face part-side javascript)) . -35050) (undo-tree-id784 . -1) (#("a" 0 1 (face web-mode-function-call-face part-side javascript)) . -35051) (undo-tree-id785 . -1) (#("t" 0 1 (face web-mode-function-call-face part-side javascript)) . -35052) (undo-tree-id786 . -1) (#("e" 0 1 (face web-mode-function-call-face part-side javascript)) . -35053) (undo-tree-id787 . -1) 35054) nil (25827 23167 78996 564000) 0 nil])
([nil nil ((35046 . 35051)) nil (25827 23167 78984 695000) 0 nil])
([nil nil ((35010 . 35020) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 35009) (35009 . 35019) (35009 . 35010)) nil (25827 23167 78983 366000) 0 nil])
([nil nil ((35009 . 35019)) nil (25827 23167 78981 713000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 35032) (35031 . 35032) (35030 . 35032) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -35030) (35019 . 35031)) nil (25827 23167 78980 220000) 0 nil])
([nil nil ((35031 . 35037)) nil (25827 23167 78978 279000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -35036) (undo-tree-id779 . -1) 35037) nil (25827 23167 78976 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35050 . 35051) (nil part-side javascript 35036 . 35051) (35036 . 35051)) nil (25827 23167 78965 359000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing part-side javascript)) . -35053) 35051) nil (25827 23167 78957 642000) 0 nil])
([nil nil ((#("tree_edit_drive" 0 14 (part-side javascript) 14 15 (part-side javascript rear-nonsticky t)) . 35036) (undo-tree-id798 . -15) (undo-tree-id799 . -5) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -15) (undo-tree-id805 . -15) (t 25827 23167 119875 643000)) nil (25827 23233 343332 281000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35051 . 35052) (nil part-side javascript 35036 . 35052) (35036 . 35052)) nil (25827 23233 343306 890000) 0 nil])
([nil nil ((35008 . 35019) (t 25827 23233 384113 882000)) nil (25827 27849 560002 977000) 0 nil])
([nil nil ((35019 . 35021)) nil (25827 27849 560000 848000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35019) (undo-tree-id881 . -1) (#("o" 0 1 (part-side javascript)) . -35020) (undo-tree-id882 . -1) 35021) nil (25827 27849 559998 585000) 0 nil])
([nil nil ((35019 . 35026)) nil (25827 27849 559992 317000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -35023) (undo-tree-id878 . -1) (#("t" 0 1 (part-side javascript)) . -35024) (undo-tree-id879 . -1) (#(" " 0 1 (part-side javascript)) . -35025) (undo-tree-id880 . -1) 35026) nil (25827 27849 559989 429000) 0 nil])
([nil nil ((35038 . 35040) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -35038) (35023 . 35039)) nil (25827 27849 559978 774000) 0 nil])
([nil nil ((35049 . 35051) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -35049) (35039 . 35050)) nil (25827 27849 559975 970000) 0 nil])
([nil nil ((35051 . 35059)) nil (25827 27849 559973 767000) 0 nil])
([nil nil ((35059 . 35065)) nil (25827 27849 559972 294000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -35064) (undo-tree-id877 . -1) 35065) nil (25827 27849 559970 81000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35078 . 35079) (nil rear-nonsticky t 35078 . 35079) (nil part-side javascript 35078 . 35079) (nil part-side javascript 35064 . 35078) (35064 . 35079)) nil (25827 27849 559965 249000) 0 nil])
([nil nil ((35079 . 35084)) nil (25827 27849 559962 296000) 0 nil])
([nil nil ((35008 . 35019)) nil (25827 27849 559960 765000) 0 nil])
([nil nil ((35019 . 35040)) nil (25827 27849 559959 130000) 0 nil])
([nil nil ((32741 . 32742)) nil (25827 27849 559957 805000) 0 nil])
([nil nil ((32742 . 32751)) nil (25827 27849 559956 173000) 0 nil])
([nil nil ((32751 . 32754)) nil (25827 27849 559954 797000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -32751) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("h" 0 1 (part-side javascript)) . -32752) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("i" 0 1 (part-side javascript)) . -32753) (undo-tree-id875 . -1) (undo-tree-id876 . -1) 32754) nil (25827 27849 559950 379000) 0 nil])
([nil nil ((32751 . 32767)) nil (25827 27849 559935 310000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32764) (undo-tree-id868 . -1) (#("=" 0 1 (part-side javascript)) . -32765) (undo-tree-id869 . -1) (#(" " 0 1 (part-side javascript)) . -32766) (undo-tree-id870 . -1) 32767) nil (25827 27849 559930 847000) 0 nil])
([nil nil ((32764 . 32769)) nil (25827 27849 559921 888000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -32768) (undo-tree-id867 . -1) 32769) nil (25827 27849 559919 947000) 0 nil])
([nil nil ((35067 . 35073)) nil (25827 27849 559915 2000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -35072) (undo-tree-id866 . -1) 35073) nil (25827 27849 559912 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35084 . 35085) (nil part-side javascript 35072 . 35085) (35072 . 35085)) nil (25827 27849 559907 968000) 0 nil])
([nil nil ((35085 . 35087)) nil (25827 27849 559903 200000) 0 nil])
([nil nil ((35085 . 35086)) nil (25827 27849 559899 594000) 0 nil])
([nil nil ((35087 . 35088)) nil (25827 27849 559898 253000) 0 nil])
([nil nil ((35165 . 35171)) nil (25827 27849 559897 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35183 . 35184) (nil part-side javascript 35171 . 35184) (35171 . 35184)) nil (25827 27849 559896 202000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -32766) (undo-tree-id865 . -1) 32767) nil (25827 27849 559894 167000) 0 nil])
([nil nil ((32766 . 32768)) nil (25827 27849 559891 739000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -32768) (undo-tree-id864 . -1) 32769) nil (25827 27849 559890 459000) 0 nil])
([nil nil ((35232 . 35242) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 35231) (35231 . 35241) (35231 . 35232)) nil (25827 27849 559882 812000) 0 nil])
([nil nil ((35231 . 35241)) nil (25827 27849 559879 627000) 0 nil])
([nil nil ((35241 . 35257)) nil (25827 27849 559877 875000) 0 nil])
([nil nil ((35246 . 35262) (#("filter_tree" 0 11 (part-side javascript)) . -35246) (undo-tree-id861 . -11) (undo-tree-id862 . -11) (undo-tree-id863 . -7) 35257) nil (25827 27849 559875 654000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 35271) (35270 . 35271) (35269 . 35271) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -35269) (35262 . 35270)) nil (25827 27849 559863 536000) 0 nil])
([nil nil ((#("a" 0 1 (face web-mode-function-call-face part-side javascript)) . -35263) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("p" 0 1 (face web-mode-function-call-face part-side javascript)) . -35264) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#("p" 0 1 (face web-mode-function-call-face part-side javascript)) . -35265) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (#("e" 0 1 (face web-mode-function-call-face part-side javascript)) . -35266) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#("n" 0 1 (face web-mode-function-call-face part-side javascript)) . -35267) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (#("d" 0 1 (face web-mode-function-call-face part-side javascript)) . -35268) (undo-tree-id859 . -1) (undo-tree-id860 . -1) 35269) nil (25827 27849 559859 822000) 0 nil])
([nil nil ((35263 . 35267)) nil (25827 27849 559843 426000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35277 . 35278) (nil part-side javascript 35268 . 35278) (35268 . 35278)) nil (25827 27849 559842 365000) 0 nil])
([nil nil ((35279 . 35290)) nil (25827 27849 559840 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35323 . 35324) (nil part-side javascript 35323 . 35324) (nil face (rainbow-delimiters-depth-5-face) 35323 . 35324) (nil rear-nonsticky t 35322 . 35323) (nil part-side javascript 35322 . 35323) (nil part-side javascript 35307 . 35322) (nil part-side javascript 35306 . 35307) (nil part-side javascript 35302 . 35306) (nil face web-mode-constant-face 35302 . 35306) (nil part-side javascript 35301 . 35302) (nil face (rainbow-delimiters-depth-5-face) 35301 . 35302) (nil part-side javascript 35298 . 35301) (nil face web-mode-function-call-face 35298 . 35301) (nil part-side javascript 35290 . 35298) (35290 . 35324)) nil (25827 27849 559839 121000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 35324) (undo-tree-id848 . -1)) nil (25827 27849 559834 884000) 0 nil])
([nil nil ((35397 . 35404)) nil (25827 27849 559832 753000) 0 nil])
([nil nil ((35404 . 35412)) nil (25827 27849 559831 753000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35411) (undo-tree-id847 . -1) 35412) nil (25827 27849 559830 543000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 35413) (35412 . 35413) (35411 . 35413) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -35411) (35411 . 35412)) nil (25827 27849 559827 822000) 0 nil])
([nil nil ((35412 . 35416)) nil (25827 27849 559825 765000) 0 nil])
([nil nil ((35418 . 35420) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -35418) (35417 . 35419)) nil (25827 27849 559824 471000) 0 nil])
([nil nil ((35421 . 35427) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 35420) (undo-tree-id845 . 8) (35420 . 35428) (#("      " 0 6 (part-side javascript)) . 35420) (undo-tree-id846 . -6) (35419 . 35427)) nil (25827 27849 559822 438000) 0 nil])
([nil nil ((35420 . 35428)) nil (25827 27849 559816 541000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35774 . 35775) (nil part-side javascript 35771 . 35775) (nil part-side javascript 35765 . 35771) (nil face web-mode-keyword-face 35765 . 35771) (nil part-side javascript 35756 . 35765) (nil part-side javascript 35755 . 35756) (nil face (rainbow-delimiters-depth-4-face) 35755 . 35756) (nil part-side javascript 35754 . 35755) (nil face (rainbow-delimiters-depth-5-face) 35754 . 35755) (nil part-side javascript 35745 . 35754) (nil part-side javascript 35744 . 35745) (nil face (rainbow-delimiters-depth-6-face) 35744 . 35745) (nil part-side javascript 35733 . 35744) (nil part-side javascript 35732 . 35733) (nil face (rainbow-delimiters-depth-7-face) 35732 . 35733) (nil part-side javascript 35719 . 35732) (nil part-side javascript 35718 . 35719) (nil face (rainbow-delimiters-depth-8-face) 35718 . 35719) (nil part-side javascript 35706 . 35718) (nil part-side javascript 35705 . 35706) (nil face (rainbow-delimiters-depth-8-face) 35705 . 35706) (nil part-side javascript 35701 . 35705) (nil face web-mode-function-call-face 35701 . 35705) (nil part-side javascript 35682 . 35701) (nil part-side javascript 35681 . 35682) (nil face (rainbow-delimiters-depth-7-face) 35681 . 35682) (nil part-side javascript 35680 . 35681) (nil part-side javascript 35676 . 35680) (nil face web-mode-keyword-face 35676 . 35680) (nil part-side javascript 35663 . 35676) (nil part-side javascript 35662 . 35663) (nil face (rainbow-delimiters-depth-7-face) 35662 . 35663) (nil part-side javascript 35649 . 35662) (nil part-side javascript 35648 . 35649) (nil face (rainbow-delimiters-depth-8-face) 35648 . 35649) (nil part-side javascript 35647 . 35648) (nil face (rainbow-delimiters-depth-9-face) 35647 . 35648) (nil part-side javascript 35631 . 35647) (nil part-side javascript 35630 . 35631) (nil face (rainbow-delimiters-depth-9-face) 35630 . 35631) (nil part-side javascript 35612 . 35630) (nil face web-mode-function-call-face 35612 . 35630) (nil part-side javascript 35611 . 35612) (nil part-side javascript 35607 . 35611) (nil face web-mode-constant-face 35607 . 35611) (nil part-side javascript 35606 . 35607) (nil face (rainbow-delimiters-depth-8-face) 35606 . 35607) (nil part-side javascript 35600 . 35606) (nil face web-mode-function-call-face 35600 . 35606) (nil part-side javascript 35575 . 35600) (nil part-side javascript 35574 . 35575) (nil face (rainbow-delimiters-depth-7-face) 35574 . 35575) (nil part-side javascript 35573 . 35574) (nil part-side javascript 35572 . 35573) (nil face (rainbow-delimiters-depth-7-face) 35572 . 35573) (nil part-side javascript 35545 . 35572) (nil part-side javascript 35544 . 35545) (nil face (rainbow-delimiters-depth-7-face) 35544 . 35545) (nil part-side javascript 35543 . 35544) (nil part-side javascript 35541 . 35543) (nil face web-mode-keyword-face 35541 . 35543) (nil part-side javascript 35528 . 35541) (nil part-side javascript 35527 . 35528) (nil face (rainbow-delimiters-depth-6-face) 35527 . 35528) (nil part-side javascript 35526 . 35527) (nil part-side javascript 35525 . 35526) (nil face (rainbow-delimiters-depth-6-face) 35525 . 35526) (nil part-side javascript 35517 . 35525) (nil part-side javascript 35515 . 35517) (nil face web-mode-keyword-face 35515 . 35517) (nil part-side javascript 35514 . 35515) (nil part-side javascript 35513 . 35514) (nil part-token string 35513 . 35514) (nil syntax-table (15) 35513 . 35514) (nil font-lock-face web-mode-javascript-string-face 35513 . 35514) (nil part-side javascript 35505 . 35513) (nil part-token string 35505 . 35513) (nil font-lock-face web-mode-javascript-string-face 35505 . 35513) (nil part-side javascript 35504 . 35505) (nil part-token string 35504 . 35505) (nil syntax-table (15) 35504 . 35505) (nil font-lock-face web-mode-javascript-string-face 35504 . 35505) (nil part-side javascript 35503 . 35504) (nil face (rainbow-delimiters-depth-6-face) 35503 . 35504) (nil part-side javascript 35502 . 35503) (nil part-side javascript 35500 . 35502) (nil face web-mode-keyword-face 35500 . 35502) (nil part-side javascript 35489 . 35500) (nil part-side javascript 35488 . 35489) (nil face (rainbow-delimiters-depth-5-face) 35488 . 35489) (nil part-side javascript 35484 . 35488) (nil part-side javascript 35477 . 35484) (nil face web-mode-function-name-face 35477 . 35484) (nil part-side javascript 35476 . 35477) (nil face (rainbow-delimiters-depth-4-face) 35476 . 35477) (nil part-side javascript 35469 . 35476) (nil face web-mode-function-name-face 35469 . 35476) (nil part-side javascript 35448 . 35469) (nil part-side javascript 35447 . 35448) (nil face (rainbow-delimiters-depth-4-face) 35447 . 35448) (nil part-side javascript 35446 . 35447) (nil face (rainbow-delimiters-depth-4-face) 35446 . 35447) (nil part-side javascript 35443 . 35446) (nil part-side javascript 35440 . 35443) (nil face web-mode-variable-name-face 35440 . 35443) (nil part-side javascript 35439 . 35440) (nil part-side javascript 35436 . 35439) (nil face web-mode-keyword-face 35436 . 35439) (nil part-side javascript 35428 . 35436) (35428 . 35775)) nil (25827 27849 559800 417000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -35428) (undo-tree-id844 . -4) 35432) nil (25827 27849 559753 805000) 0 nil])
([nil nil ((#("tree" 0 4 (part-side javascript)) . 35412) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -3) (undo-tree-id843 . -4)) nil (25827 27849 559749 741000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35422 . 35423) (nil part-side javascript 35412 . 35423) (35412 . 35423)) nil (25827 27849 559740 573000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35445) (undo-tree-id838 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35446) (undo-tree-id839 . -1) 35447) nil (25827 27849 559737 580000) 0 nil])
([nil nil ((35445 . 35446)) nil (25827 27849 559731 719000) 0 nil])
([nil nil ((#("
            else {
              res.push(element.name)
            }" 0 13 (part-side javascript) 13 17 (face web-mode-keyword-face part-side javascript) 17 18 (part-side javascript) 18 19 (face (rainbow-delimiters-depth-7-face) part-side javascript) 19 38 (part-side javascript) 38 42 (face web-mode-function-call-face part-side javascript) 42 43 (face (rainbow-delimiters-depth-8-face) part-side javascript) 43 55 (part-side javascript) 55 56 (face (rainbow-delimiters-depth-8-face) part-side javascript) 56 69 (part-side javascript) 69 70 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 35661) (undo-tree-id835 . -70) (undo-tree-id836 . -1) (undo-tree-id837 . -70)) nil (25827 27849 559730 182000) 0 nil])
([nil nil ((#("element.children.length" 0 23 (part-side javascript)) . 35543) (undo-tree-id833 . -23) (undo-tree-id834 . -23)) nil (25827 27849 559718 848000) 0 nil])
([nil nil ((35543 . 35550)) nil (25827 27849 559711 588000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -35547) (undo-tree-id830 . -1) (#("n" 0 1 (part-side javascript)) . -35548) (undo-tree-id831 . -1) (#("." 0 1 (part-side javascript)) . -35549) (undo-tree-id832 . -1) 35550) nil (25827 27849 559708 238000) 0 nil])
([nil nil ((35547 . 35554)) nil (25827 27849 559697 724000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35553) (undo-tree-id829 . -1) 35554) nil (25827 27849 559695 202000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -35556) (undo-tree-id828 . -1) 35557) nil (25827 27849 559684 292000) 0 nil])
([nil nil ((35556 . 35559)) nil (25827 27849 559679 739000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -35554) (undo-tree-id827 . -1) 35555) nil (25827 27849 559678 353000) 0 nil])
([nil nil ((35554 . 35555)) nil (25827 27849 559676 54000) 0 nil])
([nil nil ((#("es.concat(this.check_empty_folder(element.children))" 0 3 (part-side javascript) 3 9 (face web-mode-function-call-face part-side javascript) 9 10 (face (rainbow-delimiters-depth-8-face) part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 15 (part-side javascript) 15 33 (face web-mode-function-call-face part-side javascript) 33 34 (face (rainbow-delimiters-depth-9-face) part-side javascript) 34 50 (part-side javascript) 50 51 (face (rainbow-delimiters-depth-9-face) part-side javascript) 51 52 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . 35584) (undo-tree-id825 . -52) (undo-tree-id826 . -52)) nil (25827 27849 559674 693000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -35583) (undo-tree-id823 . -1) (undo-tree-id824 . -1) 35584) nil (25827 27849 559671 507000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35592 . 35593) (nil part-side javascript 35583 . 35593) (35583 . 35593)) nil (25827 27849 559668 62000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-function-name-face part-side javascript)) . -35409) (undo-tree-id821 . -1) (#("n" 0 1 (face web-mode-function-name-face part-side javascript)) . -35410) (undo-tree-id822 . -1) 35411) nil (25827 27849 559666 361000) 0 nil])
([nil nil ((35409 . 35414)) nil (25827 27849 559663 16000) 0 nil])
([nil nil ((36358 . 36369)) nil (25827 27849 559662 71000) 0 nil])
([nil nil ((36369 . 36374)) nil (25827 27849 559661 27000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36391 . 36392) (nil part-side javascript 36378 . 36392) (nil part-side javascript 36374 . 36378) (nil face web-mode-constant-face 36374 . 36378) (36374 . 36392)) nil (25827 27849 559659 783000) 0 nil])
([nil nil ((36392 . 36397)) nil (25827 27849 559658 120000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36396) (undo-tree-id820 . -1) 36397) nil (25827 27849 559656 940000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -36373) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#("t" 0 1 (part-side javascript)) . -36374) (undo-tree-id816 . -1) (#("h" 0 1 (part-side javascript)) . -36375) (undo-tree-id817 . -1) (#("i" 0 1 (part-side javascript)) . -36376) (undo-tree-id818 . -1) (#("s" 0 1 (face web-mode-constant-face part-side javascript)) . -36377) (undo-tree-id819 . -1) 36378) nil (25827 27849 559653 507000) 0 nil])
([nil nil ((36594 . 36605)) nil (25827 27849 559644 224000) 0 nil])
([nil nil ((36605 . 36610)) nil (25827 27849 559643 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36627 . 36628) (nil part-side javascript 36614 . 36628) (nil part-side javascript 36610 . 36614) (nil face web-mode-constant-face 36610 . 36614) (36610 . 36628)) nil (25827 27849 559642 2000) 0 nil])
([nil nil ((36628 . 36631)) nil (25827 27849 559640 136000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -36609) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("t" 0 1 (part-side javascript)) . -36610) (undo-tree-id810 . -1) (#("h" 0 1 (part-side javascript)) . -36611) (undo-tree-id811 . -1) (#("i" 0 1 (part-side javascript)) . -36612) (undo-tree-id812 . -1) (#("s" 0 1 (face web-mode-constant-face part-side javascript)) . -36613) (undo-tree-id813 . -1) 36614) nil (25827 27849 559637 991000) 0 nil])
([nil nil ((36626 . 36631)) nil (25827 27849 559629 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36653 . 36654) (nil part-side javascript 36653 . 36654) (nil face (rainbow-delimiters-depth-5-face) 36653 . 36654) (nil rear-nonsticky t 36652 . 36653) (nil part-side javascript 36652 . 36653) (nil part-side javascript 36642 . 36652) (nil part-side javascript 36641 . 36642) (nil face (rainbow-delimiters-depth-5-face) 36641 . 36642) (nil part-side javascript 36631 . 36641) (nil face web-mode-function-call-face 36631 . 36641) (36631 . 36654)) nil (25827 27849 559627 316000) 0 nil])
([nil nil ((#("filter_tree" 0 11 (part-side javascript)) . 36642) (undo-tree-id806 . -11) (undo-tree-id807 . -11)) nil (25827 27849 559623 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36662 . 36663) (nil part-side javascript 36646 . 36663) (nil part-side javascript 36642 . 36646) (nil face web-mode-constant-face 36642 . 36646) (36642 . 36663)) nil (25827 27849 559613 487000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing part-side javascript)) . -35324) 36663) nil (25827 27849 559603 868000) 0 nil])
([nil nil ((35368 . 35379) (t 25827 27849 601114 354000)) nil (25827 27881 165523 467000) 0 nil])
([nil nil ((35379 . 35384)) nil (25827 27881 165522 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35400 . 35401) (nil part-side javascript 35384 . 35401) (35384 . 35401)) nil (25827 27881 165520 855000) 0 nil])
([nil nil ((35401 . 35410)) nil (25827 27881 165519 275000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35409) (undo-tree-id885 . -1) 35410) nil (25827 27881 165517 998000) 0 nil])
([nil nil ((35409 . 35420)) nil (25827 27881 165515 610000) 0 nil])
([nil nil ((35420 . 35426)) nil (25827 27881 165514 514000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35425) (undo-tree-id884 . -1) 35426) nil (25827 27881 165513 81000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35439 . 35440) (nil part-side javascript 35425 . 35440) (35425 . 35440)) nil (25827 27881 165509 501000) 0 nil])
([nil nil ((35440 . 35445)) nil (25827 27881 165507 707000) 0 nil])
([nil nil ((35445 . 35448)) nil (25827 27881 165506 27000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35447) (undo-tree-id883 . -1) 35448) nil (25827 27881 165500 223000) 0 nil])
([nil nil ((35729 . 35730) (t 25827 27881 205233 823000)) nil (25827 27890 848850 315000) 0 nil])
([nil nil ((35898 . 35903) (t 25827 27890 889270 400000)) nil (25828 27507 3804 891000) 0 nil])
([nil nil ((#("j" 0 1 (part-side javascript)) . -35898) (undo-tree-id0 . -1) (#("s" 0 1 (part-side javascript)) . -35899) (undo-tree-id1 . -1) (#("o" 0 1 (part-side javascript)) . -35900) (undo-tree-id2 . -1) (#("n" 0 1 (part-side javascript)) . -35901) (undo-tree-id3 . -1) (#("." 0 1 (part-side javascript)) . -35902) (undo-tree-id4 . -1) 35903) nil (25828 27507 3802 152000) 0 nil])
([nil nil ((35908 . 35910) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -35908) (35898 . 35909)) nil (25828 27507 3780 344000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 35909)) nil (25828 27507 3778 377000) 0 nil])
([nil nil ((35934 . 35935)) nil (25828 27507 3777 3000) 0 nil])
([nil nil ((35923 . 35925) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -35923) (35909 . 35924)) nil (25828 27507 3775 104000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 35924)) nil (25828 27507 3771 912000) 0 nil])
([nil nil ((35950 . 35951)) nil (25828 27507 3764 923000) 0 nil])
([nil nil ((26702 . 26707) (t 25828 27507 47153 340000)) nil (25828 30302 60759 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27727 . 27728) (nil tag-name "v-dialog" 27727 . 27728) (nil tag-type end 27727 . 27728) (nil tag-end t 27727 . 27728) (nil font-lock-face web-mode-html-tag-bracket-face 27727 . 27728) (nil tag-name "v-dialog" 27719 . 27727) (nil tag-type end 27719 . 27727) (nil font-lock-face web-mode-html-tag-custom-face 27719 . 27727) (nil tag-name "v-dialog" 27718 . 27719) (nil tag-type end 27718 . 27719) (nil font-lock-face web-mode-html-tag-bracket-face 27718 . 27719) (nil tag-name "v-dialog" 27717 . 27718) (nil tag-type end 27717 . 27718) (nil tag-beg 22 27717 . 27718) (nil font-lock-face web-mode-html-tag-bracket-face 27717 . 27718) (nil tag-name "v-card" 27711 . 27712) (nil tag-type end 27711 . 27712) (nil tag-end t 27711 . 27712) (nil font-lock-face web-mode-html-tag-bracket-face 27711 . 27712) (nil tag-name "v-card" 27705 . 27711) (nil tag-type end 27705 . 27711) (nil font-lock-face web-mode-html-tag-custom-face 27705 . 27711) (nil tag-name "v-card" 27704 . 27705) (nil tag-type end 27704 . 27705) (nil font-lock-face web-mode-html-tag-bracket-face 27704 . 27705) (nil tag-name "v-card" 27703 . 27704) (nil tag-type end 27703 . 27704) (nil tag-beg 22 27703 . 27704) (nil font-lock-face web-mode-html-tag-bracket-face 27703 . 27704) (nil tag-name "v-card-actions" 27695 . 27696) (nil tag-type end 27695 . 27696) (nil tag-end t 27695 . 27696) (nil font-lock-face web-mode-html-tag-bracket-face 27695 . 27696) (nil tag-name "v-card-actions" 27681 . 27695) (nil tag-type end 27681 . 27695) (nil font-lock-face web-mode-html-tag-custom-face 27681 . 27695) (nil tag-name "v-card-actions" 27680 . 27681) (nil tag-type end 27680 . 27681) (nil font-lock-face web-mode-html-tag-bracket-face 27680 . 27681) (nil tag-name "v-card-actions" 27679 . 27680) (nil tag-type end 27679 . 27680) (nil tag-beg 22 27679 . 27680) (nil font-lock-face web-mode-html-tag-bracket-face 27679 . 27680) (nil tag-name "v-btn" 27669 . 27670) (nil tag-type end 27669 . 27670) (nil tag-end t 27669 . 27670) (nil font-lock-face web-mode-html-tag-bracket-face 27669 . 27670) (nil tag-name "v-btn" 27664 . 27669) (nil tag-type end 27664 . 27669) (nil font-lock-face web-mode-html-tag-custom-face 27664 . 27669) (nil tag-name "v-btn" 27663 . 27664) (nil tag-type end 27663 . 27664) (nil font-lock-face web-mode-html-tag-bracket-face 27663 . 27664) (nil tag-name "v-btn" 27662 . 27663) (nil tag-type end 27662 . 27663) (nil tag-beg 22 27662 . 27663) (nil font-lock-face web-mode-html-tag-bracket-face 27662 . 27663) (nil block-side t 27661 . 27662) (nil block-end t 27661 . 27662) (nil block-token delimiter-end 27661 . 27662) (nil font-lock-face web-mode-block-delimiter-face 27661 . 27662) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27661 . 27662) (nil block-side t 27660 . 27661) (nil block-token delimiter-end 27660 . 27661) (nil font-lock-face web-mode-block-delimiter-face 27660 . 27661) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27660 . 27661) (nil block-side t 27659 . 27660) (nil face (rainbow-delimiters-depth-3-face) 27659 . 27660) (nil block-side t 27657 . 27659) (nil block-side t 27656 . 27657) (nil face web-mode-variable-name-face 27656 . 27657) (nil block-side t 27655 . 27656) (nil face web-mode-variable-name-face 27655 . 27656) (nil block-side t 27654 . 27655) (nil face web-mode-variable-name-face 27654 . 27655) (nil block-side t 27653 . 27654) (nil face web-mode-variable-name-face 27653 . 27654) (nil block-side t 27652 . 27653) (nil face web-mode-variable-name-face 27652 . 27653) (nil block-side t 27651 . 27652) (nil block-side t 27650 . 27651) (nil face web-mode-variable-name-face 27650 . 27651) (nil block-side t 27649 . 27650) (nil face web-mode-variable-name-face 27649 . 27650) (nil block-side t 27648 . 27649) (nil face web-mode-variable-name-face 27648 . 27649) (nil block-side t 27647 . 27648) (nil face web-mode-variable-name-face 27647 . 27648) (nil block-side t 27646 . 27647) (nil face web-mode-variable-name-face 27646 . 27647) (nil block-side t 27645 . 27646) (nil face web-mode-variable-name-face 27645 . 27646) (nil block-side t 27644 . 27645) (nil face web-mode-variable-name-face 27644 . 27645) (nil block-side t 27643 . 27644) (nil block-side t 27642 . 27643) (nil face (rainbow-delimiters-depth-3-face) 27642 . 27643) (nil block-side t 27641 . 27642) (nil face web-mode-variable-name-face 27641 . 27642) (nil block-side t 27639 . 27641) (nil block-side t 27638 . 27639) (nil block-token delimiter-beg 27638 . 27639) (nil font-lock-face web-mode-block-delimiter-face 27638 . 27639) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27638 . 27639) (nil block-beg 0 27637 . 27638) (nil block-controls 0 27637 . 27638) (nil block-side t 27637 . 27638) (nil block-token delimiter-beg 27637 . 27638) (nil font-lock-face web-mode-block-delimiter-face 27637 . 27638) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27637 . 27638) (nil tag-name "v-btn" 27636 . 27637) (nil tag-type start 27636 . 27637) (nil tag-end t 27636 . 27637) (nil font-lock-face web-mode-html-tag-bracket-face 27636 . 27637) (nil block-side t 27635 . 27636) (nil block-end t 27635 . 27636) (nil block-token delimiter-end 27635 . 27636) (nil tag-attr t 27635 . 27636) (nil tag-attr-end 6 27635 . 27636) (nil tag-name "v-btn" 27635 . 27636) (nil tag-type start 27635 . 27636) (nil font-lock-face web-mode-block-delimiter-face 27635 . 27636) (nil block-side t 27634 . 27635) (nil tag-attr t 27634 . 27635) (nil tag-name "v-btn" 27634 . 27635) (nil tag-type start 27634 . 27635) (nil face web-mode-variable-name-face 27634 . 27635) (nil block-side t 27633 . 27634) (nil tag-attr t 27633 . 27634) (nil tag-name "v-btn" 27633 . 27634) (nil tag-type start 27633 . 27634) (nil face web-mode-variable-name-face 27633 . 27634) (nil block-side t 27632 . 27633) (nil tag-attr t 27632 . 27633) (nil tag-name "v-btn" 27632 . 27633) (nil tag-type start 27632 . 27633) (nil face web-mode-variable-name-face 27632 . 27633) (nil block-side t 27631 . 27632) (nil tag-attr t 27631 . 27632) (nil tag-name "v-btn" 27631 . 27632) (nil tag-type start 27631 . 27632) (nil face web-mode-variable-name-face 27631 . 27632) (nil block-side t 27630 . 27631) (nil tag-attr t 27630 . 27631) (nil tag-name "v-btn" 27630 . 27631) (nil tag-type start 27630 . 27631) (nil block-side t 27629 . 27630) (nil tag-attr t 27629 . 27630) (nil tag-name "v-btn" 27629 . 27630) (nil tag-type start 27629 . 27630) (nil face web-mode-variable-name-face 27629 . 27630) (nil block-side t 27628 . 27629) (nil tag-attr t 27628 . 27629) (nil tag-name "v-btn" 27628 . 27629) (nil tag-type start 27628 . 27629) (nil face web-mode-variable-name-face 27628 . 27629) (nil block-side t 27627 . 27628) (nil tag-attr t 27627 . 27628) (nil tag-name "v-btn" 27627 . 27628) (nil tag-type start 27627 . 27628) (nil face web-mode-variable-name-face 27627 . 27628) (nil block-side t 27626 . 27627) (nil tag-attr t 27626 . 27627) (nil tag-name "v-btn" 27626 . 27627) (nil tag-type start 27626 . 27627) (nil face web-mode-variable-name-face 27626 . 27627) (nil block-side t 27625 . 27626) (nil tag-attr t 27625 . 27626) (nil tag-name "v-btn" 27625 . 27626) (nil tag-type start 27625 . 27626) (nil face web-mode-variable-name-face 27625 . 27626) (nil block-side t 27624 . 27625) (nil tag-attr t 27624 . 27625) (nil tag-name "v-btn" 27624 . 27625) (nil tag-type start 27624 . 27625) (nil face web-mode-variable-name-face 27624 . 27625) (nil block-side t 27623 . 27624) (nil tag-attr t 27623 . 27624) (nil tag-name "v-btn" 27623 . 27624) (nil tag-type start 27623 . 27624) (nil face web-mode-variable-name-face 27623 . 27624) (nil block-side t 27622 . 27623) (nil tag-attr t 27622 . 27623) (nil tag-name "v-btn" 27622 . 27623) (nil tag-type start 27622 . 27623) (nil face web-mode-variable-name-face 27622 . 27623) (nil block-side t 27621 . 27622) (nil tag-attr t 27621 . 27622) (nil tag-name "v-btn" 27621 . 27622) (nil tag-type start 27621 . 27622) (nil face web-mode-variable-name-face 27621 . 27622) (nil block-side t 27620 . 27621) (nil tag-attr t 27620 . 27621) (nil tag-name "v-btn" 27620 . 27621) (nil tag-type start 27620 . 27621) (nil face web-mode-variable-name-face 27620 . 27621) (nil block-side t 27619 . 27620) (nil tag-attr t 27619 . 27620) (nil tag-name "v-btn" 27619 . 27620) (nil tag-type start 27619 . 27620) (nil face web-mode-variable-name-face 27619 . 27620) (nil block-side t 27618 . 27619) (nil tag-attr t 27618 . 27619) (nil tag-name "v-btn" 27618 . 27619) (nil tag-type start 27618 . 27619) (nil face web-mode-variable-name-face 27618 . 27619) (nil block-side t 27617 . 27618) (nil tag-attr t 27617 . 27618) (nil tag-name "v-btn" 27617 . 27618) (nil tag-type start 27617 . 27618) (nil face web-mode-variable-name-face 27617 . 27618) (nil block-side t 27616 . 27617) (nil tag-attr t 27616 . 27617) (nil tag-name "v-btn" 27616 . 27617) (nil tag-type start 27616 . 27617) (nil face web-mode-variable-name-face 27616 . 27617) (nil block-side t 27615 . 27616) (nil tag-attr t 27615 . 27616) (nil tag-name "v-btn" 27615 . 27616) (nil tag-type start 27615 . 27616) (nil face web-mode-variable-name-face 27615 . 27616) (nil block-side t 27614 . 27615) (nil tag-attr t 27614 . 27615) (nil tag-name "v-btn" 27614 . 27615) (nil tag-type start 27614 . 27615) (nil face web-mode-variable-name-face 27614 . 27615) (nil block-side t 27613 . 27614) (nil tag-attr t 27613 . 27614) (nil tag-name "v-btn" 27613 . 27614) (nil tag-type start 27613 . 27614) (nil face web-mode-variable-name-face 27613 . 27614) (nil block-side t 27612 . 27613) (nil tag-attr t 27612 . 27613) (nil tag-name "v-btn" 27612 . 27613) (nil tag-type start 27612 . 27613) (nil face web-mode-variable-name-face 27612 . 27613) (nil block-side t 27611 . 27612) (nil tag-attr t 27611 . 27612) (nil tag-name "v-btn" 27611 . 27612) (nil tag-type start 27611 . 27612) (nil block-side t 27610 . 27611) (nil tag-attr t 27610 . 27611) (nil tag-name "v-btn" 27610 . 27611) (nil tag-type start 27610 . 27611) (nil face web-mode-variable-name-face 27610 . 27611) (nil block-side t 27609 . 27610) (nil tag-attr t 27609 . 27610) (nil tag-name "v-btn" 27609 . 27610) (nil tag-type start 27609 . 27610) (nil face web-mode-variable-name-face 27609 . 27610) (nil block-side t 27608 . 27609) (nil tag-attr t 27608 . 27609) (nil tag-name "v-btn" 27608 . 27609) (nil tag-type start 27608 . 27609) (nil face web-mode-variable-name-face 27608 . 27609) (nil block-side t 27607 . 27608) (nil tag-attr t 27607 . 27608) (nil tag-name "v-btn" 27607 . 27608) (nil tag-type start 27607 . 27608) (nil face web-mode-variable-name-face 27607 . 27608) (nil block-side t 27606 . 27607) (nil tag-attr t 27606 . 27607) (nil tag-name "v-btn" 27606 . 27607) (nil tag-type start 27606 . 27607) (nil face web-mode-variable-name-face 27606 . 27607) (nil block-side t 27605 . 27606) (nil tag-attr t 27605 . 27606) (nil tag-name "v-btn" 27605 . 27606) (nil tag-type start 27605 . 27606) (nil block-side t 27604 . 27605) (nil tag-attr t 27604 . 27605) (nil tag-name "v-btn" 27604 . 27605) (nil tag-type start 27604 . 27605) (nil face web-mode-variable-name-face 27604 . 27605) (nil block-side t 27603 . 27604) (nil tag-attr t 27603 . 27604) (nil tag-name "v-btn" 27603 . 27604) (nil tag-type start 27603 . 27604) (nil face web-mode-variable-name-face 27603 . 27604) (nil block-side t 27602 . 27603) (nil tag-attr t 27602 . 27603) (nil tag-name "v-btn" 27602 . 27603) (nil tag-type start 27602 . 27603) (nil face web-mode-variable-name-face 27602 . 27603) (nil block-side t 27601 . 27602) (nil tag-attr t 27601 . 27602) (nil tag-name "v-btn" 27601 . 27602) (nil tag-type start 27601 . 27602) (nil face web-mode-variable-name-face 27601 . 27602) (nil block-side t 27600 . 27601) (nil tag-attr t 27600 . 27601) (nil tag-name "v-btn" 27600 . 27601) (nil tag-type start 27600 . 27601) (nil face web-mode-variable-name-face 27600 . 27601) (nil block-side t 27599 . 27600) (nil tag-attr t 27599 . 27600) (nil tag-name "v-btn" 27599 . 27600) (nil tag-type start 27599 . 27600) (nil face web-mode-variable-name-face 27599 . 27600) (nil block-side t 27598 . 27599) (nil tag-attr t 27598 . 27599) (nil tag-name "v-btn" 27598 . 27599) (nil tag-type start 27598 . 27599) (nil face web-mode-variable-name-face 27598 . 27599) (nil block-side t 27597 . 27598) (nil tag-attr t 27597 . 27598) (nil tag-name "v-btn" 27597 . 27598) (nil tag-type start 27597 . 27598) (nil face web-mode-variable-name-face 27597 . 27598) (nil block-side t 27596 . 27597) (nil tag-attr t 27596 . 27597) (nil tag-name "v-btn" 27596 . 27597) (nil tag-type start 27596 . 27597) (nil face web-mode-variable-name-face 27596 . 27597) (nil block-side t 27595 . 27596) (nil tag-attr t 27595 . 27596) (nil tag-name "v-btn" 27595 . 27596) (nil tag-type start 27595 . 27596) (nil face web-mode-variable-name-face 27595 . 27596) (nil block-side t 27594 . 27595) (nil tag-attr t 27594 . 27595) (nil tag-name "v-btn" 27594 . 27595) (nil tag-type start 27594 . 27595) (nil face web-mode-variable-name-face 27594 . 27595) (nil block-side t 27593 . 27594) (nil tag-attr t 27593 . 27594) (nil tag-name "v-btn" 27593 . 27594) (nil tag-type start 27593 . 27594) (nil face web-mode-variable-name-face 27593 . 27594) (nil block-side t 27592 . 27593) (nil tag-attr t 27592 . 27593) (nil tag-name "v-btn" 27592 . 27593) (nil tag-type start 27592 . 27593) (nil face web-mode-variable-name-face 27592 . 27593) (nil block-side t 27591 . 27592) (nil tag-attr t 27591 . 27592) (nil tag-name "v-btn" 27591 . 27592) (nil tag-type start 27591 . 27592) (nil face web-mode-variable-name-face 27591 . 27592) (nil block-side t 27590 . 27591) (nil tag-attr t 27590 . 27591) (nil tag-name "v-btn" 27590 . 27591) (nil tag-type start 27590 . 27591) (nil face web-mode-variable-name-face 27590 . 27591) (nil block-side t 27589 . 27590) (nil tag-attr t 27589 . 27590) (nil tag-name "v-btn" 27589 . 27590) (nil tag-type start 27589 . 27590) (nil face web-mode-variable-name-face 27589 . 27590) (nil block-side t 27588 . 27589) (nil tag-attr t 27588 . 27589) (nil tag-name "v-btn" 27588 . 27589) (nil tag-type start 27588 . 27589) (nil face web-mode-variable-name-face 27588 . 27589) (nil block-side t 27587 . 27588) (nil tag-attr t 27587 . 27588) (nil tag-name "v-btn" 27587 . 27588) (nil tag-type start 27587 . 27588) (nil face web-mode-variable-name-face 27587 . 27588) (nil block-side t 27586 . 27587) (nil tag-attr t 27586 . 27587) (nil tag-name "v-btn" 27586 . 27587) (nil tag-type start 27586 . 27587) (nil face web-mode-variable-name-face 27586 . 27587) (nil block-side t 27585 . 27586) (nil tag-attr t 27585 . 27586) (nil tag-name "v-btn" 27585 . 27586) (nil tag-type start 27585 . 27586) (nil face web-mode-variable-name-face 27585 . 27586) (nil block-side t 27584 . 27585) (nil tag-attr t 27584 . 27585) (nil tag-name "v-btn" 27584 . 27585) (nil tag-type start 27584 . 27585) (nil face web-mode-variable-name-face 27584 . 27585) (nil block-side t 27583 . 27584) (nil block-token delimiter-beg 27583 . 27584) (nil tag-attr t 27583 . 27584) (nil tag-name "v-btn" 27583 . 27584) (nil tag-type start 27583 . 27584) (nil font-lock-face web-mode-block-delimiter-face 27583 . 27584) (nil block-side t 27582 . 27583) (nil block-token delimiter-beg 27582 . 27583) (nil tag-attr t 27582 . 27583) (nil tag-name "v-btn" 27582 . 27583) (nil tag-type start 27582 . 27583) (nil font-lock-face web-mode-block-delimiter-face 27582 . 27583) (nil block-side t 27581 . 27582) (nil block-token delimiter-beg 27581 . 27582) (nil tag-attr t 27581 . 27582) (nil tag-name "v-btn" 27581 . 27582) (nil tag-type start 27581 . 27582) (nil font-lock-face web-mode-block-delimiter-face 27581 . 27582) (nil block-side t 27580 . 27581) (nil block-token delimiter-beg 27580 . 27581) (nil tag-attr t 27580 . 27581) (nil tag-name "v-btn" 27580 . 27581) (nil tag-type start 27580 . 27581) (nil font-lock-face web-mode-block-delimiter-face 27580 . 27581) (nil block-side t 27579 . 27580) (nil block-token delimiter-beg 27579 . 27580) (nil tag-attr t 27579 . 27580) (nil tag-name "v-btn" 27579 . 27580) (nil tag-type start 27579 . 27580) (nil font-lock-face web-mode-block-delimiter-face 27579 . 27580) (nil block-side t 27578 . 27579) (nil block-token delimiter-beg 27578 . 27579) (nil tag-attr t 27578 . 27579) (nil tag-name "v-btn" 27578 . 27579) (nil tag-type start 27578 . 27579) (nil font-lock-face web-mode-block-delimiter-face 27578 . 27579) (nil block-side t 27577 . 27578) (nil block-token delimiter-beg 27577 . 27578) (nil tag-attr t 27577 . 27578) (nil tag-name "v-btn" 27577 . 27578) (nil tag-type start 27577 . 27578) (nil font-lock-face web-mode-block-delimiter-face 27577 . 27578) (nil block-beg 0 27576 . 27577) (nil block-controls 0 27576 . 27577) (nil block-side t 27576 . 27577) (nil block-token delimiter-beg 27576 . 27577) (nil tag-attr-beg 2 27576 . 27577) (nil tag-attr t 27576 . 27577) (nil tag-name "v-btn" 27576 . 27577) (nil tag-type start 27576 . 27577) (nil font-lock-face web-mode-block-delimiter-face 27576 . 27577) (nil tag-name "v-btn" 27575 . 27576) (nil tag-type start 27575 . 27576) (nil tag-attr t 27574 . 27575) (nil tag-attr-end 5 27574 . 27575) (nil tag-name "v-btn" 27574 . 27575) (nil tag-type start 27574 . 27575) (nil font-lock-face web-mode-html-attr-value-face 27574 . 27575) (nil tag-attr t 27568 . 27574) (nil tag-name "v-btn" 27568 . 27574) (nil tag-type start 27568 . 27574) (nil font-lock-face web-mode-html-attr-value-face 27568 . 27574) (nil tag-attr t 27567 . 27568) (nil tag-name "v-btn" 27567 . 27568) (nil tag-type start 27567 . 27568) (nil font-lock-face web-mode-html-attr-equal-face 27567 . 27568) (nil tag-attr t 27563 . 27567) (nil tag-name "v-btn" 27563 . 27567) (nil tag-type start 27563 . 27567) (nil font-lock-face web-mode-html-attr-name-face 27563 . 27567) (nil tag-attr-beg 0 27562 . 27563) (nil tag-attr t 27562 . 27563) (nil tag-name "v-btn" 27562 . 27563) (nil tag-type start 27562 . 27563) (nil font-lock-face web-mode-html-attr-name-face 27562 . 27563) (nil tag-name "v-btn" 27561 . 27562) (nil tag-type start 27561 . 27562) (nil tag-name "v-btn" 27556 . 27561) (nil tag-type start 27556 . 27561) (nil font-lock-face web-mode-html-tag-custom-face 27556 . 27561) (nil tag-name "v-btn" 27555 . 27556) (nil tag-type start 27555 . 27556) (nil tag-beg 19 27555 . 27556) (nil font-lock-face web-mode-html-tag-bracket-face 27555 . 27556) (nil tag-name "v-btn" 27543 . 27544) (nil tag-type end 27543 . 27544) (nil tag-end t 27543 . 27544) (nil font-lock-face web-mode-html-tag-bracket-face 27543 . 27544) (nil tag-name "v-btn" 27538 . 27543) (nil tag-type end 27538 . 27543) (nil font-lock-face web-mode-html-tag-custom-face 27538 . 27543) (nil tag-name "v-btn" 27537 . 27538) (nil tag-type end 27537 . 27538) (nil font-lock-face web-mode-html-tag-bracket-face 27537 . 27538) (nil tag-name "v-btn" 27536 . 27537) (nil tag-type end 27536 . 27537) (nil tag-beg 22 27536 . 27537) (nil font-lock-face web-mode-html-tag-bracket-face 27536 . 27537) (nil block-side t 27535 . 27536) (nil block-end t 27535 . 27536) (nil block-token delimiter-end 27535 . 27536) (nil font-lock-face web-mode-block-delimiter-face 27535 . 27536) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27535 . 27536) (nil block-side t 27534 . 27535) (nil block-token delimiter-end 27534 . 27535) (nil font-lock-face web-mode-block-delimiter-face 27534 . 27535) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27534 . 27535) (nil block-side t 27533 . 27534) (nil face (rainbow-delimiters-depth-3-face) 27533 . 27534) (nil block-side t 27531 . 27533) (nil block-side t 27530 . 27531) (nil face web-mode-variable-name-face 27530 . 27531) (nil block-side t 27529 . 27530) (nil face web-mode-variable-name-face 27529 . 27530) (nil block-side t 27528 . 27529) (nil face web-mode-variable-name-face 27528 . 27529) (nil block-side t 27527 . 27528) (nil face web-mode-variable-name-face 27527 . 27528) (nil block-side t 27526 . 27527) (nil face web-mode-variable-name-face 27526 . 27527) (nil block-side t 27525 . 27526) (nil face web-mode-variable-name-face 27525 . 27526) (nil block-side t 27524 . 27525) (nil face web-mode-variable-name-face 27524 . 27525) (nil block-side t 27523 . 27524) (nil block-side t 27522 . 27523) (nil face web-mode-variable-name-face 27522 . 27523) (nil block-side t 27521 . 27522) (nil face web-mode-variable-name-face 27521 . 27522) (nil block-side t 27520 . 27521) (nil face web-mode-variable-name-face 27520 . 27521) (nil block-side t 27519 . 27520) (nil face web-mode-variable-name-face 27519 . 27520) (nil block-side t 27518 . 27519) (nil face web-mode-variable-name-face 27518 . 27519) (nil block-side t 27517 . 27518) (nil face web-mode-variable-name-face 27517 . 27518) (nil block-side t 27516 . 27517) (nil face web-mode-variable-name-face 27516 . 27517) (nil block-side t 27515 . 27516) (nil block-side t 27514 . 27515) (nil face (rainbow-delimiters-depth-3-face) 27514 . 27515) (nil block-side t 27513 . 27514) (nil face web-mode-variable-name-face 27513 . 27514) (nil block-side t 27511 . 27513) (nil block-side t 27510 . 27511) (nil block-token delimiter-beg 27510 . 27511) (nil font-lock-face web-mode-block-delimiter-face 27510 . 27511) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27510 . 27511) (nil block-beg 0 27509 . 27510) (nil block-controls 0 27509 . 27510) (nil block-side t 27509 . 27510) (nil block-token delimiter-beg 27509 . 27510) (nil font-lock-face web-mode-block-delimiter-face 27509 . 27510) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27509 . 27510) (nil tag-name "v-btn" 27508 . 27509) (nil tag-type start 27508 . 27509) (nil tag-end t 27508 . 27509) (nil font-lock-face web-mode-html-tag-bracket-face 27508 . 27509) (nil block-side t 27507 . 27508) (nil block-end t 27507 . 27508) (nil block-token delimiter-end 27507 . 27508) (nil tag-attr t 27507 . 27508) (nil tag-attr-end 6 27507 . 27508) (nil tag-name "v-btn" 27507 . 27508) (nil tag-type start 27507 . 27508) (nil font-lock-face web-mode-block-delimiter-face 27507 . 27508) (nil block-side t 27505 . 27507) (nil tag-attr t 27505 . 27507) (nil tag-name "v-btn" 27505 . 27507) (nil tag-type start 27505 . 27507) (nil block-side t 27482 . 27505) (nil tag-attr t 27482 . 27505) (nil tag-name "v-btn" 27482 . 27505) (nil tag-type start 27482 . 27505) (nil face web-mode-function-call-face 27482 . 27505) (nil block-side t 27481 . 27482) (nil block-token delimiter-beg 27481 . 27482) (nil tag-attr t 27481 . 27482) (nil tag-name "v-btn" 27481 . 27482) (nil tag-type start 27481 . 27482) (nil font-lock-face web-mode-block-delimiter-face 27481 . 27482) (nil block-side t 27480 . 27481) (nil block-token delimiter-beg 27480 . 27481) (nil tag-attr t 27480 . 27481) (nil tag-name "v-btn" 27480 . 27481) (nil tag-type start 27480 . 27481) (nil font-lock-face web-mode-block-delimiter-face 27480 . 27481) (nil block-side t 27479 . 27480) (nil block-token delimiter-beg 27479 . 27480) (nil tag-attr t 27479 . 27480) (nil tag-name "v-btn" 27479 . 27480) (nil tag-type start 27479 . 27480) (nil font-lock-face web-mode-block-delimiter-face 27479 . 27480) (nil block-side t 27478 . 27479) (nil block-token delimiter-beg 27478 . 27479) (nil tag-attr t 27478 . 27479) (nil tag-name "v-btn" 27478 . 27479) (nil tag-type start 27478 . 27479) (nil font-lock-face web-mode-block-delimiter-face 27478 . 27479) (nil block-side t 27477 . 27478) (nil block-token delimiter-beg 27477 . 27478) (nil tag-attr t 27477 . 27478) (nil tag-name "v-btn" 27477 . 27478) (nil tag-type start 27477 . 27478) (nil font-lock-face web-mode-block-delimiter-face 27477 . 27478) (nil block-side t 27476 . 27477) (nil block-token delimiter-beg 27476 . 27477) (nil tag-attr t 27476 . 27477) (nil tag-name "v-btn" 27476 . 27477) (nil tag-type start 27476 . 27477) (nil font-lock-face web-mode-block-delimiter-face 27476 . 27477) (nil block-side t 27475 . 27476) (nil block-token delimiter-beg 27475 . 27476) (nil tag-attr t 27475 . 27476) (nil tag-name "v-btn" 27475 . 27476) (nil tag-type start 27475 . 27476) (nil font-lock-face web-mode-block-delimiter-face 27475 . 27476) (nil block-beg 0 27474 . 27475) (nil block-controls 0 27474 . 27475) (nil block-side t 27474 . 27475) (nil block-token delimiter-beg 27474 . 27475) (nil tag-attr-beg 2 27474 . 27475) (nil tag-attr t 27474 . 27475) (nil tag-name "v-btn" 27474 . 27475) (nil tag-type start 27474 . 27475) (nil font-lock-face web-mode-block-delimiter-face 27474 . 27475) (nil tag-name "v-btn" 27473 . 27474) (nil tag-type start 27473 . 27474) (nil tag-attr t 27472 . 27473) (nil tag-attr-end 5 27472 . 27473) (nil tag-name "v-btn" 27472 . 27473) (nil tag-type start 27472 . 27473) (nil font-lock-face web-mode-html-attr-value-face 27472 . 27473) (nil tag-attr t 27464 . 27472) (nil tag-name "v-btn" 27464 . 27472) (nil tag-type start 27464 . 27472) (nil font-lock-face web-mode-html-attr-value-face 27464 . 27472) (nil tag-attr t 27463 . 27464) (nil tag-name "v-btn" 27463 . 27464) (nil tag-type start 27463 . 27464) (nil font-lock-face web-mode-html-attr-equal-face 27463 . 27464) (nil tag-attr t 27459 . 27463) (nil tag-name "v-btn" 27459 . 27463) (nil tag-type start 27459 . 27463) (nil font-lock-face web-mode-html-attr-name-face 27459 . 27463) (nil tag-attr-beg 0 27458 . 27459) (nil tag-attr t 27458 . 27459) (nil tag-name "v-btn" 27458 . 27459) (nil tag-type start 27458 . 27459) (nil font-lock-face web-mode-html-attr-name-face 27458 . 27459) (nil tag-name "v-btn" 27457 . 27458) (nil tag-type start 27457 . 27458) (nil tag-name "v-btn" 27452 . 27457) (nil tag-type start 27452 . 27457) (nil font-lock-face web-mode-html-tag-custom-face 27452 . 27457) (nil tag-name "v-btn" 27451 . 27452) (nil tag-type start 27451 . 27452) (nil tag-beg 19 27451 . 27452) (nil font-lock-face web-mode-html-tag-bracket-face 27451 . 27452) (nil tag-name "v-spacer" 27439 . 27440) (nil tag-type end 27439 . 27440) (nil tag-end t 27439 . 27440) (nil font-lock-face web-mode-html-tag-bracket-face 27439 . 27440) (nil tag-name "v-spacer" 27431 . 27439) (nil tag-type end 27431 . 27439) (nil font-lock-face web-mode-html-tag-custom-face 27431 . 27439) (nil tag-name "v-spacer" 27430 . 27431) (nil tag-type end 27430 . 27431) (nil font-lock-face web-mode-html-tag-bracket-face 27430 . 27431) (nil tag-name "v-spacer" 27429 . 27430) (nil tag-type end 27429 . 27430) (nil tag-beg 22 27429 . 27430) (nil font-lock-face web-mode-html-tag-bracket-face 27429 . 27430) (nil tag-name "v-spacer" 27428 . 27429) (nil tag-type start 27428 . 27429) (nil tag-end t 27428 . 27429) (nil font-lock-face web-mode-html-tag-bracket-face 27428 . 27429) (nil tag-name "v-spacer" 27420 . 27428) (nil tag-type start 27420 . 27428) (nil font-lock-face web-mode-html-tag-custom-face 27420 . 27428) (nil tag-name "v-spacer" 27419 . 27420) (nil tag-type start 27419 . 27420) (nil tag-beg 18 27419 . 27420) (nil font-lock-face web-mode-html-tag-bracket-face 27419 . 27420) (nil tag-name "v-card-actions" 27407 . 27408) (nil tag-type start 27407 . 27408) (nil tag-end t 27407 . 27408) (nil font-lock-face web-mode-html-tag-bracket-face 27407 . 27408) (nil tag-name "v-card-actions" 27393 . 27407) (nil tag-type start 27393 . 27407) (nil font-lock-face web-mode-html-tag-custom-face 27393 . 27407) (nil tag-name "v-card-actions" 27392 . 27393) (nil tag-type start 27392 . 27393) (nil tag-beg 18 27392 . 27393) (nil font-lock-face web-mode-html-tag-bracket-face 27392 . 27393) (nil tag-name "v-card-text" 27382 . 27383) (nil tag-type end 27382 . 27383) (nil tag-end t 27382 . 27383) (nil font-lock-face web-mode-html-tag-bracket-face 27382 . 27383) (nil tag-name "v-card-text" 27371 . 27382) (nil tag-type end 27371 . 27382) (nil font-lock-face web-mode-html-tag-custom-face 27371 . 27382) (nil tag-name "v-card-text" 27370 . 27371) (nil tag-type end 27370 . 27371) (nil font-lock-face web-mode-html-tag-bracket-face 27370 . 27371) (nil tag-name "v-card-text" 27369 . 27370) (nil tag-type end 27369 . 27370) (nil tag-beg 22 27369 . 27370) (nil font-lock-face web-mode-html-tag-bracket-face 27369 . 27370) (nil tag-name "p" 27359 . 27360) (nil tag-type end 27359 . 27360) (nil tag-end t 27359 . 27360) (nil font-lock-face web-mode-html-tag-bracket-face 27359 . 27360) (nil tag-name "p" 27358 . 27359) (nil tag-type end 27358 . 27359) (nil font-lock-face web-mode-html-tag-face 27358 . 27359) (nil tag-name "p" 27357 . 27358) (nil tag-type end 27357 . 27358) (nil font-lock-face web-mode-html-tag-bracket-face 27357 . 27358) (nil tag-name "p" 27356 . 27357) (nil tag-type end 27356 . 27357) (nil tag-beg 20 27356 . 27357) (nil font-lock-face web-mode-html-tag-bracket-face 27356 . 27357) (nil block-side t 27355 . 27356) (nil block-end t 27355 . 27356) (nil block-token delimiter-end 27355 . 27356) (nil font-lock-face web-mode-block-delimiter-face 27355 . 27356) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27355 . 27356) (nil block-side t 27354 . 27355) (nil block-token delimiter-end 27354 . 27355) (nil font-lock-face web-mode-block-delimiter-face 27354 . 27355) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27354 . 27355) (nil block-side t 27353 . 27354) (nil face (rainbow-delimiters-depth-3-face) 27353 . 27354) (nil block-side t 27352 . 27353) (nil face web-mode-variable-name-face 27352 . 27353) (nil block-side t 27351 . 27352) (nil face web-mode-variable-name-face 27351 . 27352) (nil block-side t 27350 . 27351) (nil face web-mode-variable-name-face 27350 . 27351) (nil block-side t 27349 . 27350) (nil face web-mode-variable-name-face 27349 . 27350) (nil block-side t 27348 . 27349) (nil face web-mode-variable-name-face 27348 . 27349) (nil block-side t 27347 . 27348) (nil face web-mode-variable-name-face 27347 . 27348) (nil block-side t 27346 . 27347) (nil face web-mode-variable-name-face 27346 . 27347) (nil block-side t 27345 . 27346) (nil face web-mode-variable-name-face 27345 . 27346) (nil block-side t 27344 . 27345) (nil face web-mode-variable-name-face 27344 . 27345) (nil block-side t 27343 . 27344) (nil face web-mode-variable-name-face 27343 . 27344) (nil block-side t 27342 . 27343) (nil face web-mode-variable-name-face 27342 . 27343) (nil block-side t 27341 . 27342) (nil face web-mode-variable-name-face 27341 . 27342) (nil block-side t 27340 . 27341) (nil face web-mode-variable-name-face 27340 . 27341) (nil block-side t 27339 . 27340) (nil face web-mode-variable-name-face 27339 . 27340) (nil block-side t 27338 . 27339) (nil face web-mode-variable-name-face 27338 . 27339) (nil block-side t 27337 . 27338) (nil face web-mode-variable-name-face 27337 . 27338) (nil block-side t 27336 . 27337) (nil face web-mode-variable-name-face 27336 . 27337) (nil block-side t 27335 . 27336) (nil face web-mode-variable-name-face 27335 . 27336) (nil block-side t 27334 . 27335) (nil face (rainbow-delimiters-depth-3-face) 27334 . 27335) (nil block-side t 27333 . 27334) (nil face web-mode-variable-name-face 27333 . 27334) (nil block-side t 27332 . 27333) (nil block-side t 27331 . 27332) (nil block-token delimiter-beg 27331 . 27332) (nil font-lock-face web-mode-block-delimiter-face 27331 . 27332) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27331 . 27332) (nil block-beg 0 27330 . 27331) (nil block-controls 0 27330 . 27331) (nil block-side t 27330 . 27331) (nil block-token delimiter-beg 27330 . 27331) (nil font-lock-face web-mode-block-delimiter-face 27330 . 27331) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27330 . 27331) (nil tag-name "p" 27329 . 27330) (nil tag-type start 27329 . 27330) (nil tag-end t 27329 . 27330) (nil font-lock-face web-mode-html-tag-bracket-face 27329 . 27330) (nil tag-attr t 27328 . 27329) (nil tag-attr-end 4 27328 . 27329) (nil tag-name "p" 27328 . 27329) (nil tag-type start 27328 . 27329) (nil font-lock-face web-mode-html-attr-value-face 27328 . 27329) (nil tag-attr t 27309 . 27328) (nil tag-name "p" 27309 . 27328) (nil tag-type start 27309 . 27328) (nil font-lock-face web-mode-html-attr-value-face 27309 . 27328) (nil tag-attr t 27308 . 27309) (nil tag-name "p" 27308 . 27309) (nil tag-type start 27308 . 27309) (nil font-lock-face web-mode-html-attr-equal-face 27308 . 27309) (nil tag-attr t 27305 . 27308) (nil tag-name "p" 27305 . 27308) (nil tag-type start 27305 . 27308) (nil font-lock-face web-mode-html-attr-engine-face 27305 . 27308) (nil tag-attr-beg 2 27304 . 27305) (nil tag-attr t 27304 . 27305) (nil tag-name "p" 27304 . 27305) (nil tag-type start 27304 . 27305) (nil font-lock-face web-mode-html-attr-engine-face 27304 . 27305) (nil tag-name "p" 27303 . 27304) (nil tag-type start 27303 . 27304) (nil tag-attr t 27302 . 27303) (nil tag-attr-end 5 27302 . 27303) (nil tag-name "p" 27302 . 27303) (nil tag-type start 27302 . 27303) (nil font-lock-face web-mode-html-attr-value-face 27302 . 27303) (nil tag-attr t 27292 . 27302) (nil tag-name "p" 27292 . 27302) (nil tag-type start 27292 . 27302) (nil font-lock-face web-mode-html-attr-value-face 27292 . 27302) (nil tag-attr t 27291 . 27292) (nil tag-name "p" 27291 . 27292) (nil tag-type start 27291 . 27292) (nil font-lock-face web-mode-html-attr-equal-face 27291 . 27292) (nil tag-attr t 27287 . 27291) (nil tag-name "p" 27287 . 27291) (nil tag-type start 27287 . 27291) (nil font-lock-face web-mode-html-attr-name-face 27287 . 27291) (nil tag-attr-beg 0 27286 . 27287) (nil tag-attr t 27286 . 27287) (nil tag-name "p" 27286 . 27287) (nil tag-type start 27286 . 27287) (nil font-lock-face web-mode-html-attr-name-face 27286 . 27287) (nil tag-name "p" 27285 . 27286) (nil tag-type start 27285 . 27286) (nil tag-name "p" 27284 . 27285) (nil tag-type start 27284 . 27285) (nil font-lock-face web-mode-html-tag-face 27284 . 27285) (nil tag-name "p" 27283 . 27284) (nil tag-type start 27283 . 27284) (nil tag-beg 17 27283 . 27284) (nil font-lock-face web-mode-html-tag-bracket-face 27283 . 27284) (nil block-side t 27271 . 27272) (nil block-end t 27271 . 27272) (nil block-token delimiter-end 27271 . 27272) (nil font-lock-face web-mode-block-delimiter-face 27271 . 27272) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27271 . 27272) (nil block-side t 27270 . 27271) (nil block-token delimiter-end 27270 . 27271) (nil font-lock-face web-mode-block-delimiter-face 27270 . 27271) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27270 . 27271) (nil block-side t 27269 . 27270) (nil block-side t 27268 . 27269) (nil face (rainbow-delimiters-depth-3-face) 27268 . 27269) (nil block-side t 27267 . 27268) (nil block-side t 27266 . 27267) (nil face web-mode-variable-name-face 27266 . 27267) (nil block-side t 27265 . 27266) (nil face web-mode-variable-name-face 27265 . 27266) (nil block-side t 27264 . 27265) (nil face web-mode-variable-name-face 27264 . 27265) (nil block-side t 27263 . 27264) (nil face web-mode-variable-name-face 27263 . 27264) (nil block-side t 27262 . 27263) (nil face web-mode-variable-name-face 27262 . 27263) (nil block-side t 27261 . 27262) (nil face web-mode-variable-name-face 27261 . 27262) (nil block-side t 27260 . 27261) (nil face web-mode-variable-name-face 27260 . 27261) (nil block-side t 27259 . 27260) (nil face web-mode-variable-name-face 27259 . 27260) (nil block-side t 27258 . 27259) (nil face web-mode-variable-name-face 27258 . 27259) (nil block-side t 27257 . 27258) (nil face web-mode-variable-name-face 27257 . 27258) (nil block-side t 27256 . 27257) (nil face web-mode-variable-name-face 27256 . 27257) (nil block-side t 27255 . 27256) (nil face web-mode-variable-name-face 27255 . 27256) (nil block-side t 27254 . 27255) (nil face web-mode-variable-name-face 27254 . 27255) (nil block-side t 27253 . 27254) (nil face web-mode-variable-name-face 27253 . 27254) (nil block-side t 27252 . 27253) (nil face web-mode-variable-name-face 27252 . 27253) (nil block-side t 27251 . 27252) (nil face web-mode-variable-name-face 27251 . 27252) (nil block-side t 27250 . 27251) (nil face web-mode-variable-name-face 27250 . 27251) (nil block-side t 27249 . 27250) (nil face web-mode-variable-name-face 27249 . 27250) (nil block-side t 27248 . 27249) (nil face web-mode-variable-name-face 27248 . 27249) (nil block-side t 27247 . 27248) (nil face web-mode-variable-name-face 27247 . 27248) (nil block-side t 27246 . 27247) (nil face web-mode-variable-name-face 27246 . 27247) (nil block-side t 27245 . 27246) (nil block-side t 27244 . 27245) (nil face web-mode-variable-name-face 27244 . 27245) (nil block-side t 27243 . 27244) (nil face web-mode-variable-name-face 27243 . 27244) (nil block-side t 27242 . 27243) (nil face web-mode-variable-name-face 27242 . 27243) (nil block-side t 27241 . 27242) (nil face web-mode-variable-name-face 27241 . 27242) (nil block-side t 27240 . 27241) (nil face web-mode-variable-name-face 27240 . 27241) (nil block-side t 27239 . 27240) (nil face web-mode-variable-name-face 27239 . 27240) (nil block-side t 27238 . 27239) (nil face web-mode-variable-name-face 27238 . 27239) (nil block-side t 27237 . 27238) (nil face web-mode-variable-name-face 27237 . 27238) (nil block-side t 27236 . 27237) (nil face web-mode-variable-name-face 27236 . 27237) (nil block-side t 27235 . 27236) (nil face web-mode-variable-name-face 27235 . 27236) (nil block-side t 27234 . 27235) (nil face web-mode-variable-name-face 27234 . 27235) (nil block-side t 27233 . 27234) (nil face web-mode-variable-name-face 27233 . 27234) (nil block-side t 27232 . 27233) (nil face web-mode-variable-name-face 27232 . 27233) (nil block-side t 27231 . 27232) (nil face web-mode-variable-name-face 27231 . 27232) (nil block-side t 27230 . 27231) (nil face web-mode-variable-name-face 27230 . 27231) (nil block-side t 27229 . 27230) (nil block-side t 27228 . 27229) (nil face (rainbow-delimiters-depth-3-face) 27228 . 27229) (nil block-side t 27227 . 27228) (nil face web-mode-variable-name-face 27227 . 27228) (nil block-side t 27225 . 27227) (nil block-side t 27224 . 27225) (nil block-token delimiter-beg 27224 . 27225) (nil font-lock-face web-mode-block-delimiter-face 27224 . 27225) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 27224 . 27225) (nil block-beg 0 27223 . 27224) (nil block-controls 0 27223 . 27224) (nil block-side t 27223 . 27224) (nil block-token delimiter-beg 27223 . 27224) (nil font-lock-face web-mode-block-delimiter-face 27223 . 27224) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 27223 . 27224) (nil tag-name "v-card-text" 27211 . 27212) (nil tag-type start 27211 . 27212) (nil tag-end t 27211 . 27212) (nil font-lock-face web-mode-html-tag-bracket-face 27211 . 27212) (nil tag-name "v-card-text" 27200 . 27211) (nil tag-type start 27200 . 27211) (nil font-lock-face web-mode-html-tag-custom-face 27200 . 27211) (nil tag-name "v-card-text" 27199 . 27200) (nil tag-type start 27199 . 27200) (nil tag-beg 18 27199 . 27200) (nil font-lock-face web-mode-html-tag-bracket-face 27199 . 27200) (nil tag-name "v-card-title" 27189 . 27190) (nil tag-type end 27189 . 27190) (nil tag-end t 27189 . 27190) (nil font-lock-face web-mode-html-tag-bracket-face 27189 . 27190) (nil tag-name "v-card-title" 27177 . 27189) (nil tag-type end 27177 . 27189) (nil font-lock-face web-mode-html-tag-custom-face 27177 . 27189) (nil tag-name "v-card-title" 27176 . 27177) (nil tag-type end 27176 . 27177) (nil font-lock-face web-mode-html-tag-bracket-face 27176 . 27177) (nil tag-name "v-card-title" 27175 . 27176) (nil tag-type end 27175 . 27176) (nil tag-beg 22 27175 . 27176) (nil font-lock-face web-mode-html-tag-bracket-face 27175 . 27176) (nil tag-name "v-btn" 27165 . 27166) (nil tag-type end 27165 . 27166) (nil tag-end t 27165 . 27166) (nil font-lock-face web-mode-html-tag-bracket-face 27165 . 27166) (nil tag-name "v-btn" 27160 . 27165) (nil tag-type end 27160 . 27165) (nil font-lock-face web-mode-html-tag-custom-face 27160 . 27165) (nil tag-name "v-btn" 27159 . 27160) (nil tag-type end 27159 . 27160) (nil font-lock-face web-mode-html-tag-bracket-face 27159 . 27160) (nil tag-name "v-btn" 27158 . 27159) (nil tag-type end 27158 . 27159) (nil tag-beg 22 27158 . 27159) (nil font-lock-face web-mode-html-tag-bracket-face 27158 . 27159) (nil tag-name "v-icon" 27146 . 27147) (nil tag-type end 27146 . 27147) (nil tag-end t 27146 . 27147) (nil font-lock-face web-mode-html-tag-bracket-face 27146 . 27147) (nil tag-name "v-icon" 27140 . 27146) (nil tag-type end 27140 . 27146) (nil font-lock-face web-mode-html-tag-custom-face 27140 . 27146) (nil tag-name "v-icon" 27139 . 27140) (nil tag-type end 27139 . 27140) (nil font-lock-face web-mode-html-tag-bracket-face 27139 . 27140) (nil tag-name "v-icon" 27138 . 27139) (nil tag-type end 27138 . 27139) (nil tag-beg 22 27138 . 27139) (nil font-lock-face web-mode-html-tag-bracket-face 27138 . 27139) (nil tag-name "v-icon" 27128 . 27129) (nil tag-type start 27128 . 27129) (nil tag-end t 27128 . 27129) (nil font-lock-face web-mode-html-tag-bracket-face 27128 . 27129) (nil tag-name "v-icon" 27122 . 27128) (nil tag-type start 27122 . 27128) (nil font-lock-face web-mode-html-tag-custom-face 27122 . 27128) (nil tag-name "v-icon" 27121 . 27122) (nil tag-type start 27121 . 27122) (nil tag-beg 18 27121 . 27122) (nil font-lock-face web-mode-html-tag-bracket-face 27121 . 27122) (nil tag-name "v-btn" 27107 . 27108) (nil tag-type start 27107 . 27108) (nil tag-end t 27107 . 27108) (nil font-lock-face web-mode-html-tag-bracket-face 27107 . 27108) (nil block-side t 27106 . 27107) (nil block-end t 27106 . 27107) (nil block-token delimiter-end 27106 . 27107) (nil tag-attr t 27106 . 27107) (nil tag-attr-end 5 27106 . 27107) (nil tag-name "v-btn" 27106 . 27107) (nil tag-type start 27106 . 27107) (nil font-lock-face web-mode-block-delimiter-face 27106 . 27107) (nil block-side t 27105 . 27106) (nil tag-attr t 27105 . 27106) (nil tag-name "v-btn" 27105 . 27106) (nil tag-type start 27105 . 27106) (nil face web-mode-variable-name-face 27105 . 27106) (nil block-side t 27104 . 27105) (nil tag-attr t 27104 . 27105) (nil tag-name "v-btn" 27104 . 27105) (nil tag-type start 27104 . 27105) (nil face web-mode-variable-name-face 27104 . 27105) (nil block-side t 27103 . 27104) (nil tag-attr t 27103 . 27104) (nil tag-name "v-btn" 27103 . 27104) (nil tag-type start 27103 . 27104) (nil face web-mode-variable-name-face 27103 . 27104) (nil block-side t 27102 . 27103) (nil tag-attr t 27102 . 27103) (nil tag-name "v-btn" 27102 . 27103) (nil tag-type start 27102 . 27103) (nil face web-mode-variable-name-face 27102 . 27103) (nil block-side t 27101 . 27102) (nil tag-attr t 27101 . 27102) (nil tag-name "v-btn" 27101 . 27102) (nil tag-type start 27101 . 27102) (nil block-side t 27100 . 27101) (nil tag-attr t 27100 . 27101) (nil tag-name "v-btn" 27100 . 27101) (nil tag-type start 27100 . 27101) (nil face web-mode-variable-name-face 27100 . 27101) (nil block-side t 27099 . 27100) (nil tag-attr t 27099 . 27100) (nil tag-name "v-btn" 27099 . 27100) (nil tag-type start 27099 . 27100) (nil face web-mode-variable-name-face 27099 . 27100) (nil block-side t 27098 . 27099) (nil tag-attr t 27098 . 27099) (nil tag-name "v-btn" 27098 . 27099) (nil tag-type start 27098 . 27099) (nil face web-mode-variable-name-face 27098 . 27099) (nil block-side t 27097 . 27098) (nil tag-attr t 27097 . 27098) (nil tag-name "v-btn" 27097 . 27098) (nil tag-type start 27097 . 27098) (nil face web-mode-variable-name-face 27097 . 27098) (nil block-side t 27096 . 27097) (nil tag-attr t 27096 . 27097) (nil tag-name "v-btn" 27096 . 27097) (nil tag-type start 27096 . 27097) (nil face web-mode-variable-name-face 27096 . 27097) (nil block-side t 27095 . 27096) (nil tag-attr t 27095 . 27096) (nil tag-name "v-btn" 27095 . 27096) (nil tag-type start 27095 . 27096) (nil face web-mode-variable-name-face 27095 . 27096) (nil block-side t 27094 . 27095) (nil tag-attr t 27094 . 27095) (nil tag-name "v-btn" 27094 . 27095) (nil tag-type start 27094 . 27095) (nil face web-mode-variable-name-face 27094 . 27095) (nil block-side t 27093 . 27094) (nil tag-attr t 27093 . 27094) (nil tag-name "v-btn" 27093 . 27094) (nil tag-type start 27093 . 27094) (nil face web-mode-variable-name-face 27093 . 27094) (nil block-side t 27092 . 27093) (nil tag-attr t 27092 . 27093) (nil tag-name "v-btn" 27092 . 27093) (nil tag-type start 27092 . 27093) (nil face web-mode-variable-name-face 27092 . 27093) (nil block-side t 27091 . 27092) (nil tag-attr t 27091 . 27092) (nil tag-name "v-btn" 27091 . 27092) (nil tag-type start 27091 . 27092) (nil face web-mode-variable-name-face 27091 . 27092) (nil block-side t 27090 . 27091) (nil tag-attr t 27090 . 27091) (nil tag-name "v-btn" 27090 . 27091) (nil tag-type start 27090 . 27091) (nil face web-mode-variable-name-face 27090 . 27091) (nil block-side t 27089 . 27090) (nil tag-attr t 27089 . 27090) (nil tag-name "v-btn" 27089 . 27090) (nil tag-type start 27089 . 27090) (nil face web-mode-variable-name-face 27089 . 27090) (nil block-side t 27088 . 27089) (nil tag-attr t 27088 . 27089) (nil tag-name "v-btn" 27088 . 27089) (nil tag-type start 27088 . 27089) (nil face web-mode-variable-name-face 27088 . 27089) (nil block-side t 27087 . 27088) (nil tag-attr t 27087 . 27088) (nil tag-name "v-btn" 27087 . 27088) (nil tag-type start 27087 . 27088) (nil face web-mode-variable-name-face 27087 . 27088) (nil block-side t 27086 . 27087) (nil tag-attr t 27086 . 27087) (nil tag-name "v-btn" 27086 . 27087) (nil tag-type start 27086 . 27087) (nil face web-mode-variable-name-face 27086 . 27087) (nil block-side t 27085 . 27086) (nil tag-attr t 27085 . 27086) (nil tag-name "v-btn" 27085 . 27086) (nil tag-type start 27085 . 27086) (nil face web-mode-variable-name-face 27085 . 27086) (nil block-side t 27084 . 27085) (nil tag-attr t 27084 . 27085) (nil tag-name "v-btn" 27084 . 27085) (nil tag-type start 27084 . 27085) (nil face web-mode-variable-name-face 27084 . 27085) (nil block-side t 27083 . 27084) (nil tag-attr t 27083 . 27084) (nil tag-name "v-btn" 27083 . 27084) (nil tag-type start 27083 . 27084) (nil face web-mode-variable-name-face 27083 . 27084) (nil block-side t 27082 . 27083) (nil tag-attr t 27082 . 27083) (nil tag-name "v-btn" 27082 . 27083) (nil tag-type start 27082 . 27083) (nil block-side t 27081 . 27082) (nil tag-attr t 27081 . 27082) (nil tag-name "v-btn" 27081 . 27082) (nil tag-type start 27081 . 27082) (nil face web-mode-variable-name-face 27081 . 27082) (nil block-side t 27080 . 27081) (nil tag-attr t 27080 . 27081) (nil tag-name "v-btn" 27080 . 27081) (nil tag-type start 27080 . 27081) (nil face web-mode-variable-name-face 27080 . 27081) (nil block-side t 27079 . 27080) (nil tag-attr t 27079 . 27080) (nil tag-name "v-btn" 27079 . 27080) (nil tag-type start 27079 . 27080) (nil face web-mode-variable-name-face 27079 . 27080) (nil block-side t 27078 . 27079) (nil tag-attr t 27078 . 27079) (nil tag-name "v-btn" 27078 . 27079) (nil tag-type start 27078 . 27079) (nil face web-mode-variable-name-face 27078 . 27079) (nil block-side t 27077 . 27078) (nil tag-attr t 27077 . 27078) (nil tag-name "v-btn" 27077 . 27078) (nil tag-type start 27077 . 27078) (nil face web-mode-variable-name-face 27077 . 27078) (nil block-side t 27076 . 27077) (nil tag-attr t 27076 . 27077) (nil tag-name "v-btn" 27076 . 27077) (nil tag-type start 27076 . 27077) (nil block-side t 27075 . 27076) (nil tag-attr t 27075 . 27076) (nil tag-name "v-btn" 27075 . 27076) (nil tag-type start 27075 . 27076) (nil face web-mode-variable-name-face 27075 . 27076) (nil block-side t 27074 . 27075) (nil tag-attr t 27074 . 27075) (nil tag-name "v-btn" 27074 . 27075) (nil tag-type start 27074 . 27075) (nil face web-mode-variable-name-face 27074 . 27075) (nil block-side t 27073 . 27074) (nil tag-attr t 27073 . 27074) (nil tag-name "v-btn" 27073 . 27074) (nil tag-type start 27073 . 27074) (nil face web-mode-variable-name-face 27073 . 27074) (nil block-side t 27072 . 27073) (nil tag-attr t 27072 . 27073) (nil tag-name "v-btn" 27072 . 27073) (nil tag-type start 27072 . 27073) (nil face web-mode-variable-name-face 27072 . 27073) (nil block-side t 27071 . 27072) (nil tag-attr t 27071 . 27072) (nil tag-name "v-btn" 27071 . 27072) (nil tag-type start 27071 . 27072) (nil face web-mode-variable-name-face 27071 . 27072) (nil block-side t 27070 . 27071) (nil tag-attr t 27070 . 27071) (nil tag-name "v-btn" 27070 . 27071) (nil tag-type start 27070 . 27071) (nil face web-mode-variable-name-face 27070 . 27071) (nil block-side t 27069 . 27070) (nil tag-attr t 27069 . 27070) (nil tag-name "v-btn" 27069 . 27070) (nil tag-type start 27069 . 27070) (nil face web-mode-variable-name-face 27069 . 27070) (nil block-side t 27068 . 27069) (nil tag-attr t 27068 . 27069) (nil tag-name "v-btn" 27068 . 27069) (nil tag-type start 27068 . 27069) (nil face web-mode-variable-name-face 27068 . 27069) (nil block-side t 27067 . 27068) (nil tag-attr t 27067 . 27068) (nil tag-name "v-btn" 27067 . 27068) (nil tag-type start 27067 . 27068) (nil face web-mode-variable-name-face 27067 . 27068) (nil block-side t 27066 . 27067) (nil tag-attr t 27066 . 27067) (nil tag-name "v-btn" 27066 . 27067) (nil tag-type start 27066 . 27067) (nil face web-mode-variable-name-face 27066 . 27067) (nil block-side t 27065 . 27066) (nil tag-attr t 27065 . 27066) (nil tag-name "v-btn" 27065 . 27066) (nil tag-type start 27065 . 27066) (nil face web-mode-variable-name-face 27065 . 27066) (nil block-side t 27064 . 27065) (nil tag-attr t 27064 . 27065) (nil tag-name "v-btn" 27064 . 27065) (nil tag-type start 27064 . 27065) (nil face web-mode-variable-name-face 27064 . 27065) (nil block-side t 27063 . 27064) (nil tag-attr t 27063 . 27064) (nil tag-name "v-btn" 27063 . 27064) (nil tag-type start 27063 . 27064) (nil face web-mode-variable-name-face 27063 . 27064) (nil block-side t 27062 . 27063) (nil tag-attr t 27062 . 27063) (nil tag-name "v-btn" 27062 . 27063) (nil tag-type start 27062 . 27063) (nil face web-mode-variable-name-face 27062 . 27063) (nil block-side t 27061 . 27062) (nil tag-attr t 27061 . 27062) (nil tag-name "v-btn" 27061 . 27062) (nil tag-type start 27061 . 27062) (nil face web-mode-variable-name-face 27061 . 27062) (nil block-side t 27060 . 27061) (nil tag-attr t 27060 . 27061) (nil tag-name "v-btn" 27060 . 27061) (nil tag-type start 27060 . 27061) (nil face web-mode-variable-name-face 27060 . 27061) (nil block-side t 27059 . 27060) (nil tag-attr t 27059 . 27060) (nil tag-name "v-btn" 27059 . 27060) (nil tag-type start 27059 . 27060) (nil face web-mode-variable-name-face 27059 . 27060) (nil block-side t 27058 . 27059) (nil tag-attr t 27058 . 27059) (nil tag-name "v-btn" 27058 . 27059) (nil tag-type start 27058 . 27059) (nil face web-mode-variable-name-face 27058 . 27059) (nil block-side t 27057 . 27058) (nil tag-attr t 27057 . 27058) (nil tag-name "v-btn" 27057 . 27058) (nil tag-type start 27057 . 27058) (nil face web-mode-variable-name-face 27057 . 27058) (nil block-side t 27056 . 27057) (nil tag-attr t 27056 . 27057) (nil tag-name "v-btn" 27056 . 27057) (nil tag-type start 27056 . 27057) (nil face web-mode-variable-name-face 27056 . 27057) (nil block-side t 27055 . 27056) (nil tag-attr t 27055 . 27056) (nil tag-name "v-btn" 27055 . 27056) (nil tag-type start 27055 . 27056) (nil face web-mode-variable-name-face 27055 . 27056) (nil block-side t 27054 . 27055) (nil block-token delimiter-beg 27054 . 27055) (nil tag-attr t 27054 . 27055) (nil tag-name "v-btn" 27054 . 27055) (nil tag-type start 27054 . 27055) (nil font-lock-face web-mode-block-delimiter-face 27054 . 27055) (nil block-side t 27053 . 27054) (nil block-token delimiter-beg 27053 . 27054) (nil tag-attr t 27053 . 27054) (nil tag-name "v-btn" 27053 . 27054) (nil tag-type start 27053 . 27054) (nil font-lock-face web-mode-block-delimiter-face 27053 . 27054) (nil block-side t 27052 . 27053) (nil block-token delimiter-beg 27052 . 27053) (nil tag-attr t 27052 . 27053) (nil tag-name "v-btn" 27052 . 27053) (nil tag-type start 27052 . 27053) (nil font-lock-face web-mode-block-delimiter-face 27052 . 27053) (nil block-side t 27051 . 27052) (nil block-token delimiter-beg 27051 . 27052) (nil tag-attr t 27051 . 27052) (nil tag-name "v-btn" 27051 . 27052) (nil tag-type start 27051 . 27052) (nil font-lock-face web-mode-block-delimiter-face 27051 . 27052) (nil block-side t 27050 . 27051) (nil block-token delimiter-beg 27050 . 27051) (nil tag-attr t 27050 . 27051) (nil tag-name "v-btn" 27050 . 27051) (nil tag-type start 27050 . 27051) (nil font-lock-face web-mode-block-delimiter-face 27050 . 27051) (nil block-side t 27049 . 27050) (nil block-token delimiter-beg 27049 . 27050) (nil tag-attr t 27049 . 27050) (nil tag-name "v-btn" 27049 . 27050) (nil tag-type start 27049 . 27050) (nil font-lock-face web-mode-block-delimiter-face 27049 . 27050) (nil block-side t 27048 . 27049) (nil block-token delimiter-beg 27048 . 27049) (nil tag-attr-beg 0 27048 . 27049) (nil tag-attr t 27048 . 27049) (nil tag-name "v-btn" 27048 . 27049) (nil tag-type start 27048 . 27049) (nil font-lock-face web-mode-block-delimiter-face 27048 . 27049) (nil block-beg 0 27047 . 27048) (nil block-controls 0 27047 . 27048) (nil block-side t 27047 . 27048) (nil block-token delimiter-beg 27047 . 27048) (nil tag-name "v-btn" 27047 . 27048) (nil tag-type start 27047 . 27048) (nil font-lock-face web-mode-block-delimiter-face 27047 . 27048) (nil tag-name "v-btn" 27034 . 27047) (nil tag-type start 27034 . 27047) (nil tag-attr t 27033 . 27034) (nil tag-attr-end 0 27033 . 27034) (nil tag-name "v-btn" 27033 . 27034) (nil tag-type start 27033 . 27034) (nil font-lock-face web-mode-html-attr-name-face 27033 . 27034) (nil tag-attr t 27031 . 27033) (nil tag-name "v-btn" 27031 . 27033) (nil tag-type start 27031 . 27033) (nil font-lock-face web-mode-html-attr-name-face 27031 . 27033) (nil tag-attr-beg 0 27030 . 27031) (nil tag-attr t 27030 . 27031) (nil tag-name "v-btn" 27030 . 27031) (nil tag-type start 27030 . 27031) (nil font-lock-face web-mode-html-attr-name-face 27030 . 27031) (nil tag-name "v-btn" 27017 . 27030) (nil tag-type start 27017 . 27030) (nil tag-name "v-btn" 27012 . 27017) (nil tag-type start 27012 . 27017) (nil font-lock-face web-mode-html-tag-custom-face 27012 . 27017) (nil tag-name "v-btn" 27011 . 27012) (nil tag-type start 27011 . 27012) (nil tag-beg 19 27011 . 27012) (nil font-lock-face web-mode-html-tag-bracket-face 27011 . 27012) (nil tag-name "v-spacer" 26999 . 27000) (nil tag-type end 26999 . 27000) (nil tag-end t 26999 . 27000) (nil font-lock-face web-mode-html-tag-bracket-face 26999 . 27000) (nil tag-name "v-spacer" 26991 . 26999) (nil tag-type end 26991 . 26999) (nil font-lock-face web-mode-html-tag-custom-face 26991 . 26999) (nil tag-name "v-spacer" 26990 . 26991) (nil tag-type end 26990 . 26991) (nil font-lock-face web-mode-html-tag-bracket-face 26990 . 26991) (nil tag-name "v-spacer" 26989 . 26990) (nil tag-type end 26989 . 26990) (nil tag-beg 22 26989 . 26990) (nil font-lock-face web-mode-html-tag-bracket-face 26989 . 26990) (nil tag-name "v-spacer" 26988 . 26989) (nil tag-type start 26988 . 26989) (nil tag-end t 26988 . 26989) (nil font-lock-face web-mode-html-tag-bracket-face 26988 . 26989) (nil tag-name "v-spacer" 26980 . 26988) (nil tag-type start 26980 . 26988) (nil font-lock-face web-mode-html-tag-custom-face 26980 . 26988) (nil tag-name "v-spacer" 26979 . 26980) (nil tag-type start 26979 . 26980) (nil tag-beg 18 26979 . 26980) (nil font-lock-face web-mode-html-tag-bracket-face 26979 . 26980) (nil tag-name "span" 26967 . 26968) (nil tag-type end 26967 . 26968) (nil tag-end t 26967 . 26968) (nil font-lock-face web-mode-html-tag-bracket-face 26967 . 26968) (nil tag-name "span" 26963 . 26967) (nil tag-type end 26963 . 26967) (nil font-lock-face web-mode-html-tag-face 26963 . 26967) (nil tag-name "span" 26962 . 26963) (nil tag-type end 26962 . 26963) (nil font-lock-face web-mode-html-tag-bracket-face 26962 . 26963) (nil tag-name "span" 26961 . 26962) (nil tag-type end 26961 . 26962) (nil tag-beg 20 26961 . 26962) (nil font-lock-face web-mode-html-tag-bracket-face 26961 . 26962) (nil block-side t 26960 . 26961) (nil block-end t 26960 . 26961) (nil block-token delimiter-end 26960 . 26961) (nil font-lock-face web-mode-block-delimiter-face 26960 . 26961) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 26960 . 26961) (nil block-side t 26959 . 26960) (nil block-token delimiter-end 26959 . 26960) (nil font-lock-face web-mode-block-delimiter-face 26959 . 26960) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 26959 . 26960) (nil block-side t 26958 . 26959) (nil block-side t 26957 . 26958) (nil face (rainbow-delimiters-depth-3-face) 26957 . 26958) (nil block-side t 26956 . 26957) (nil block-side t 26955 . 26956) (nil face web-mode-variable-name-face 26955 . 26956) (nil block-side t 26954 . 26955) (nil face web-mode-variable-name-face 26954 . 26955) (nil block-side t 26953 . 26954) (nil face web-mode-variable-name-face 26953 . 26954) (nil block-side t 26952 . 26953) (nil face web-mode-variable-name-face 26952 . 26953) (nil block-side t 26951 . 26952) (nil face web-mode-variable-name-face 26951 . 26952) (nil block-side t 26950 . 26951) (nil face web-mode-variable-name-face 26950 . 26951) (nil block-side t 26949 . 26950) (nil face web-mode-variable-name-face 26949 . 26950) (nil block-side t 26948 . 26949) (nil block-side t 26947 . 26948) (nil face web-mode-variable-name-face 26947 . 26948) (nil block-side t 26946 . 26947) (nil face web-mode-variable-name-face 26946 . 26947) (nil block-side t 26945 . 26946) (nil face web-mode-variable-name-face 26945 . 26946) (nil block-side t 26944 . 26945) (nil face web-mode-variable-name-face 26944 . 26945) (nil block-side t 26943 . 26944) (nil face web-mode-variable-name-face 26943 . 26944) (nil block-side t 26942 . 26943) (nil face web-mode-variable-name-face 26942 . 26943) (nil block-side t 26941 . 26942) (nil face web-mode-variable-name-face 26941 . 26942) (nil block-side t 26940 . 26941) (nil block-side t 26939 . 26940) (nil face (rainbow-delimiters-depth-3-face) 26939 . 26940) (nil block-side t 26938 . 26939) (nil face web-mode-variable-name-face 26938 . 26939) (nil block-side t 26936 . 26938) (nil block-side t 26935 . 26936) (nil block-token delimiter-beg 26935 . 26936) (nil font-lock-face web-mode-block-delimiter-face 26935 . 26936) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 26935 . 26936) (nil block-beg 0 26934 . 26935) (nil block-controls 0 26934 . 26935) (nil block-side t 26934 . 26935) (nil block-token delimiter-beg 26934 . 26935) (nil font-lock-face web-mode-block-delimiter-face 26934 . 26935) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 26934 . 26935) (nil tag-name "span" 26933 . 26934) (nil tag-type start 26933 . 26934) (nil tag-end t 26933 . 26934) (nil font-lock-face web-mode-html-tag-bracket-face 26933 . 26934) (nil tag-attr t 26932 . 26933) (nil tag-attr-end 5 26932 . 26933) (nil tag-name "span" 26932 . 26933) (nil tag-type start 26932 . 26933) (nil font-lock-face web-mode-html-attr-value-face 26932 . 26933) (nil tag-attr t 26923 . 26932) (nil tag-name "span" 26923 . 26932) (nil tag-type start 26923 . 26932) (nil font-lock-face web-mode-html-attr-value-face 26923 . 26932) (nil tag-attr t 26922 . 26923) (nil tag-name "span" 26922 . 26923) (nil tag-type start 26922 . 26923) (nil font-lock-face web-mode-html-attr-equal-face 26922 . 26923) (nil tag-attr t 26918 . 26922) (nil tag-name "span" 26918 . 26922) (nil tag-type start 26918 . 26922) (nil font-lock-face web-mode-html-attr-name-face 26918 . 26922) (nil tag-attr-beg 0 26917 . 26918) (nil tag-attr t 26917 . 26918) (nil tag-name "span" 26917 . 26918) (nil tag-type start 26917 . 26918) (nil font-lock-face web-mode-html-attr-name-face 26917 . 26918) (nil tag-name "span" 26916 . 26917) (nil tag-type start 26916 . 26917) (nil tag-name "span" 26912 . 26916) (nil tag-type start 26912 . 26916) (nil font-lock-face web-mode-html-tag-face 26912 . 26916) (nil tag-name "span" 26911 . 26912) (nil tag-type start 26911 . 26912) (nil tag-beg 17 26911 . 26912) (nil font-lock-face web-mode-html-tag-bracket-face 26911 . 26912) (nil tag-name "v-card-title" 26899 . 26900) (nil tag-type start 26899 . 26900) (nil tag-end t 26899 . 26900) (nil font-lock-face web-mode-html-tag-bracket-face 26899 . 26900) (nil tag-name "v-card-title" 26887 . 26899) (nil tag-type start 26887 . 26899) (nil font-lock-face web-mode-html-tag-custom-face 26887 . 26899) (nil tag-name "v-card-title" 26886 . 26887) (nil tag-type start 26886 . 26887) (nil tag-beg 18 26886 . 26887) (nil font-lock-face web-mode-html-tag-bracket-face 26886 . 26887) (nil tag-name "v-card" 26876 . 26877) (nil tag-type start 26876 . 26877) (nil tag-end t 26876 . 26877) (nil font-lock-face web-mode-html-tag-bracket-face 26876 . 26877) (nil tag-name "v-card" 26870 . 26876) (nil tag-type start 26870 . 26876) (nil font-lock-face web-mode-html-tag-custom-face 26870 . 26876) (nil tag-name "v-card" 26869 . 26870) (nil tag-type start 26869 . 26870) (nil tag-beg 18 26869 . 26870) (nil font-lock-face web-mode-html-tag-bracket-face 26869 . 26870) (nil tag-name "v-dialog" 26861 . 26862) (nil tag-type start 26861 . 26862) (nil tag-end t 26861 . 26862) (nil font-lock-face web-mode-html-tag-bracket-face 26861 . 26862) (nil tag-attr t 26860 . 26861) (nil tag-attr-end 9 26860 . 26861) (nil tag-name "v-dialog" 26860 . 26861) (nil tag-type start 26860 . 26861) (nil font-lock-face web-mode-html-attr-value-face 26860 . 26861) (nil tag-attr t 26854 . 26860) (nil tag-name "v-dialog" 26854 . 26860) (nil tag-type start 26854 . 26860) (nil font-lock-face web-mode-html-attr-value-face 26854 . 26860) (nil tag-attr t 26853 . 26854) (nil tag-name "v-dialog" 26853 . 26854) (nil tag-type start 26853 . 26854) (nil font-lock-face web-mode-html-attr-equal-face 26853 . 26854) (nil tag-attr t 26845 . 26853) (nil tag-name "v-dialog" 26845 . 26853) (nil tag-type start 26845 . 26853) (nil font-lock-face web-mode-html-attr-name-face 26845 . 26853) (nil tag-attr-beg 0 26844 . 26845) (nil tag-attr t 26844 . 26845) (nil tag-name "v-dialog" 26844 . 26845) (nil tag-type start 26844 . 26845) (nil font-lock-face web-mode-html-attr-name-face 26844 . 26845) (nil tag-name "v-dialog" 26843 . 26844) (nil tag-type start 26843 . 26844) (nil tag-attr t 26842 . 26843) (nil tag-attr-end 7 26842 . 26843) (nil tag-name "v-dialog" 26842 . 26843) (nil tag-type start 26842 . 26843) (nil font-lock-face web-mode-html-attr-value-face 26842 . 26843) (nil tag-attr t 26820 . 26842) (nil tag-name "v-dialog" 26820 . 26842) (nil tag-type start 26820 . 26842) (nil font-lock-face web-mode-html-attr-value-face 26820 . 26842) (nil tag-attr t 26819 . 26820) (nil tag-name "v-dialog" 26819 . 26820) (nil tag-type start 26819 . 26820) (nil font-lock-face web-mode-html-attr-equal-face 26819 . 26820) (nil tag-attr t 26813 . 26819) (nil tag-name "v-dialog" 26813 . 26819) (nil tag-type start 26813 . 26819) (nil font-lock-face web-mode-html-attr-engine-face 26813 . 26819) (nil tag-attr-beg 2 26812 . 26813) (nil tag-attr t 26812 . 26813) (nil tag-name "v-dialog" 26812 . 26813) (nil tag-type start 26812 . 26813) (nil font-lock-face web-mode-html-attr-engine-face 26812 . 26813) (nil tag-name "v-dialog" 26811 . 26812) (nil tag-type start 26811 . 26812) (nil block-side t 26810 . 26811) (nil block-end t 26810 . 26811) (nil block-token delimiter-end 26810 . 26811) (nil tag-attr t 26810 . 26811) (nil tag-attr-end 14 26810 . 26811) (nil tag-name "v-dialog" 26810 . 26811) (nil tag-type start 26810 . 26811) (nil font-lock-face web-mode-block-delimiter-face 26810 . 26811) (nil block-side t 26809 . 26810) (nil tag-attr t 26809 . 26810) (nil tag-name "v-dialog" 26809 . 26810) (nil tag-type start 26809 . 26810) (nil face web-mode-variable-name-face 26809 . 26810) (nil block-side t 26808 . 26809) (nil tag-attr t 26808 . 26809) (nil tag-name "v-dialog" 26808 . 26809) (nil tag-type start 26808 . 26809) (nil face web-mode-variable-name-face 26808 . 26809) (nil block-side t 26807 . 26808) (nil tag-attr t 26807 . 26808) (nil tag-name "v-dialog" 26807 . 26808) (nil tag-type start 26807 . 26808) (nil face web-mode-variable-name-face 26807 . 26808) (nil block-side t 26806 . 26807) (nil tag-attr t 26806 . 26807) (nil tag-name "v-dialog" 26806 . 26807) (nil tag-type start 26806 . 26807) (nil face web-mode-variable-name-face 26806 . 26807) (nil block-side t 26805 . 26806) (nil tag-attr t 26805 . 26806) (nil tag-name "v-dialog" 26805 . 26806) (nil tag-type start 26805 . 26806) (nil block-side t 26804 . 26805) (nil tag-attr t 26804 . 26805) (nil tag-name "v-dialog" 26804 . 26805) (nil tag-type start 26804 . 26805) (nil face web-mode-variable-name-face 26804 . 26805) (nil block-side t 26803 . 26804) (nil tag-attr t 26803 . 26804) (nil tag-name "v-dialog" 26803 . 26804) (nil tag-type start 26803 . 26804) (nil face web-mode-variable-name-face 26803 . 26804) (nil block-side t 26802 . 26803) (nil tag-attr t 26802 . 26803) (nil tag-name "v-dialog" 26802 . 26803) (nil tag-type start 26802 . 26803) (nil face web-mode-variable-name-face 26802 . 26803) (nil block-side t 26801 . 26802) (nil tag-attr t 26801 . 26802) (nil tag-name "v-dialog" 26801 . 26802) (nil tag-type start 26801 . 26802) (nil face web-mode-variable-name-face 26801 . 26802) (nil block-side t 26800 . 26801) (nil tag-attr t 26800 . 26801) (nil tag-name "v-dialog" 26800 . 26801) (nil tag-type start 26800 . 26801) (nil face web-mode-variable-name-face 26800 . 26801) (nil block-side t 26799 . 26800) (nil tag-attr t 26799 . 26800) (nil tag-name "v-dialog" 26799 . 26800) (nil tag-type start 26799 . 26800) (nil face web-mode-variable-name-face 26799 . 26800) (nil block-side t 26798 . 26799) (nil tag-attr t 26798 . 26799) (nil tag-name "v-dialog" 26798 . 26799) (nil tag-type start 26798 . 26799) (nil face web-mode-variable-name-face 26798 . 26799) (nil block-side t 26797 . 26798) (nil tag-attr t 26797 . 26798) (nil tag-name "v-dialog" 26797 . 26798) (nil tag-type start 26797 . 26798) (nil face web-mode-variable-name-face 26797 . 26798) (nil block-side t 26796 . 26797) (nil tag-attr t 26796 . 26797) (nil tag-name "v-dialog" 26796 . 26797) (nil tag-type start 26796 . 26797) (nil face web-mode-variable-name-face 26796 . 26797) (nil block-side t 26795 . 26796) (nil tag-attr t 26795 . 26796) (nil tag-name "v-dialog" 26795 . 26796) (nil tag-type start 26795 . 26796) (nil face web-mode-variable-name-face 26795 . 26796) (nil block-side t 26794 . 26795) (nil tag-attr t 26794 . 26795) (nil tag-name "v-dialog" 26794 . 26795) (nil tag-type start 26794 . 26795) (nil face web-mode-variable-name-face 26794 . 26795) (nil block-side t 26793 . 26794) (nil tag-attr t 26793 . 26794) (nil tag-name "v-dialog" 26793 . 26794) (nil tag-type start 26793 . 26794) (nil face web-mode-variable-name-face 26793 . 26794) (nil block-side t 26792 . 26793) (nil tag-attr t 26792 . 26793) (nil tag-name "v-dialog" 26792 . 26793) (nil tag-type start 26792 . 26793) (nil face web-mode-variable-name-face 26792 . 26793) (nil block-side t 26791 . 26792) (nil tag-attr t 26791 . 26792) (nil tag-name "v-dialog" 26791 . 26792) (nil tag-type start 26791 . 26792) (nil face web-mode-variable-name-face 26791 . 26792) (nil block-side t 26790 . 26791) (nil tag-attr t 26790 . 26791) (nil tag-name "v-dialog" 26790 . 26791) (nil tag-type start 26790 . 26791) (nil face web-mode-variable-name-face 26790 . 26791) (nil block-side t 26789 . 26790) (nil tag-attr t 26789 . 26790) (nil tag-name "v-dialog" 26789 . 26790) (nil tag-type start 26789 . 26790) (nil face web-mode-variable-name-face 26789 . 26790) (nil block-side t 26788 . 26789) (nil tag-attr t 26788 . 26789) (nil tag-name "v-dialog" 26788 . 26789) (nil tag-type start 26788 . 26789) (nil face web-mode-variable-name-face 26788 . 26789) (nil block-side t 26787 . 26788) (nil tag-attr t 26787 . 26788) (nil tag-name "v-dialog" 26787 . 26788) (nil tag-type start 26787 . 26788) (nil face web-mode-variable-name-face 26787 . 26788) (nil block-side t 26786 . 26787) (nil block-token delimiter-beg 26786 . 26787) (nil tag-attr t 26786 . 26787) (nil tag-name "v-dialog" 26786 . 26787) (nil tag-type start 26786 . 26787) (nil font-lock-face web-mode-block-delimiter-face 26786 . 26787) (nil block-side t 26785 . 26786) (nil block-token delimiter-beg 26785 . 26786) (nil tag-attr t 26785 . 26786) (nil tag-name "v-dialog" 26785 . 26786) (nil tag-type start 26785 . 26786) (nil font-lock-face web-mode-block-delimiter-face 26785 . 26786) (nil block-side t 26784 . 26785) (nil block-token delimiter-beg 26784 . 26785) (nil tag-attr t 26784 . 26785) (nil tag-name "v-dialog" 26784 . 26785) (nil tag-type start 26784 . 26785) (nil font-lock-face web-mode-block-delimiter-face 26784 . 26785) (nil block-side t 26783 . 26784) (nil block-token delimiter-beg 26783 . 26784) (nil tag-attr t 26783 . 26784) (nil tag-name "v-dialog" 26783 . 26784) (nil tag-type start 26783 . 26784) (nil font-lock-face web-mode-block-delimiter-face 26783 . 26784) (nil block-side t 26782 . 26783) (nil block-token delimiter-beg 26782 . 26783) (nil tag-attr t 26782 . 26783) (nil tag-name "v-dialog" 26782 . 26783) (nil tag-type start 26782 . 26783) (nil font-lock-face web-mode-block-delimiter-face 26782 . 26783) (nil block-side t 26781 . 26782) (nil block-token delimiter-beg 26781 . 26782) (nil tag-attr t 26781 . 26782) (nil tag-name "v-dialog" 26781 . 26782) (nil tag-type start 26781 . 26782) (nil font-lock-face web-mode-block-delimiter-face 26781 . 26782) (nil block-side t 26780 . 26781) (nil block-token delimiter-beg 26780 . 26781) (nil tag-attr t 26780 . 26781) (nil tag-name "v-dialog" 26780 . 26781) (nil tag-type start 26780 . 26781) (nil font-lock-face web-mode-block-delimiter-face 26780 . 26781) (nil block-side t 26779 . 26780) (nil block-token delimiter-beg 26779 . 26780) (nil tag-attr t 26779 . 26780) (nil tag-name "v-dialog" 26779 . 26780) (nil tag-type start 26779 . 26780) (nil font-lock-face web-mode-block-delimiter-face 26779 . 26780) (nil block-side t 26778 . 26779) (nil block-token delimiter-beg 26778 . 26779) (nil tag-attr t 26778 . 26779) (nil tag-name "v-dialog" 26778 . 26779) (nil tag-type start 26778 . 26779) (nil font-lock-face web-mode-block-delimiter-face 26778 . 26779) (nil block-beg 0 26777 . 26778) (nil block-controls 0 26777 . 26778) (nil block-side t 26777 . 26778) (nil block-token delimiter-beg 26777 . 26778) (nil tag-attr t 26777 . 26778) (nil tag-name "v-dialog" 26777 . 26778) (nil tag-type start 26777 . 26778) (nil font-lock-face web-mode-block-delimiter-face 26777 . 26778) (nil tag-attr t 26772 . 26777) (nil tag-name "v-dialog" 26772 . 26777) (nil tag-type start 26772 . 26777) (nil font-lock-face web-mode-html-attr-engine-face 26772 . 26777) (nil tag-attr-beg 2 26771 . 26772) (nil tag-attr t 26771 . 26772) (nil tag-name "v-dialog" 26771 . 26772) (nil tag-type start 26771 . 26772) (nil font-lock-face web-mode-html-attr-engine-face 26771 . 26772) (nil tag-name "v-dialog" 26770 . 26771) (nil tag-type start 26770 . 26771) (nil tag-name "v-dialog" 26762 . 26770) (nil tag-type start 26762 . 26770) (nil font-lock-face web-mode-html-tag-custom-face 26762 . 26770) (nil tag-name "v-dialog" 26761 . 26762) (nil tag-type start 26761 . 26762) (nil tag-beg 19 26761 . 26762) (nil font-lock-face web-mode-html-tag-bracket-face 26761 . 26762) (nil tag-type comment 26755 . 26756) (nil tag-end t 26755 . 26756) (nil font-lock-face web-mode-comment-face 26755 . 26756) (nil tag-type comment 26712 . 26755) (nil font-lock-face web-mode-comment-face 26712 . 26755) (nil tag-type comment 26711 . 26712) (nil tag-beg 0 26711 . 26712) (nil font-lock-face web-mode-comment-face 26711 . 26712) (26707 . 27728)) nil (25828 30302 60668 398000) 0 nil])
([nil nil (("    " . -26707) 26716) nil (25828 30302 60291 149000) 0 nil])
([nil nil ((#(" deletion" 0 9 (tag-type comment font-lock-face web-mode-comment-face)) . 26719) (undo-tree-id91 . -9) (undo-tree-id92 . -9)) nil (25828 30302 60289 822000) 0 nil])
([nil nil ((26719 . 26731)) nil (25828 30302 60286 894000) 0 nil])
([nil nil ((26731 . 26746)) nil (25828 30302 60285 995000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -26745) (undo-tree-id90 . -1) 26746) nil (25828 30302 60284 779000) 0 nil])
([nil nil ((#("n" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("o" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("i" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("t" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("c" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("e" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("l" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("e" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("s" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("r" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("e" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("t" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("l" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("i" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("f" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("f" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#("o" 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . 26745)) nil (25828 30302 60280 29000) 0 nil])
([nil nil ((33787 . 33788)) nil (25828 30302 60275 88000) 0 nil])
([nil nil ((33788 . 33797)) nil (25828 30302 60274 130000) 0 nil])
([nil nil ((33797 . 33809)) nil (25828 30302 60273 127000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33808) (undo-tree-id89 . -1) 33809) nil (25828 30302 60271 708000) 0 nil])
([nil nil ((33808 . 33816)) nil (25828 30302 60269 373000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33815) (undo-tree-id88 . -1) 33816) nil (25828 30302 60268 289000) 0 nil])
([nil nil ((33815 . 33820)) nil (25828 30302 60266 97000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -33817) (undo-tree-id85 . -1) (#("u" 0 1 (part-side javascript)) . -33818) (undo-tree-id86 . -1) (#("y" 0 1 (part-side javascript)) . -33819) (undo-tree-id87 . -1) 33820) nil (25828 30302 60264 600000) 0 nil])
([nil nil ((33817 . 33823)) nil (25828 30302 60259 719000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33822) (undo-tree-id84 . -1) 33823) nil (25828 30302 60258 658000) 0 nil])
([nil nil ((#("filterSelEditError" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 8 9 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 9 10 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 10 11 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face)) . 26780) (undo-tree-id82 . -18) (undo-tree-id83 . -18)) nil (25828 30302 60256 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26797 . 26798) (nil block-side t 26797 . 26798) (nil tag-attr t 26797 . 26798) (nil tag-name "v-dialog" 26797 . 26798) (nil tag-type start 26797 . 26798) (nil face web-mode-variable-name-face 26797 . 26798) (nil block-side t 26796 . 26797) (nil tag-attr t 26796 . 26797) (nil tag-name "v-dialog" 26796 . 26797) (nil tag-type start 26796 . 26797) (nil face web-mode-variable-name-face 26796 . 26797) (nil block-side t 26795 . 26796) (nil tag-attr t 26795 . 26796) (nil tag-name "v-dialog" 26795 . 26796) (nil tag-type start 26795 . 26796) (nil face web-mode-variable-name-face 26795 . 26796) (nil block-side t 26794 . 26795) (nil tag-attr t 26794 . 26795) (nil tag-name "v-dialog" 26794 . 26795) (nil tag-type start 26794 . 26795) (nil face web-mode-variable-name-face 26794 . 26795) (nil block-side t 26793 . 26794) (nil tag-attr t 26793 . 26794) (nil tag-name "v-dialog" 26793 . 26794) (nil tag-type start 26793 . 26794) (nil face web-mode-variable-name-face 26793 . 26794) (nil block-side t 26792 . 26793) (nil tag-attr t 26792 . 26793) (nil tag-name "v-dialog" 26792 . 26793) (nil tag-type start 26792 . 26793) (nil face web-mode-variable-name-face 26792 . 26793) (nil block-side t 26791 . 26792) (nil tag-attr t 26791 . 26792) (nil tag-name "v-dialog" 26791 . 26792) (nil tag-type start 26791 . 26792) (nil face web-mode-variable-name-face 26791 . 26792) (nil block-side t 26790 . 26791) (nil tag-attr t 26790 . 26791) (nil tag-name "v-dialog" 26790 . 26791) (nil tag-type start 26790 . 26791) (nil face web-mode-variable-name-face 26790 . 26791) (nil block-side t 26789 . 26790) (nil tag-attr t 26789 . 26790) (nil tag-name "v-dialog" 26789 . 26790) (nil tag-type start 26789 . 26790) (nil face web-mode-variable-name-face 26789 . 26790) (nil block-side t 26788 . 26789) (nil tag-attr t 26788 . 26789) (nil tag-name "v-dialog" 26788 . 26789) (nil tag-type start 26788 . 26789) (nil face web-mode-variable-name-face 26788 . 26789) (nil block-side t 26787 . 26788) (nil tag-attr t 26787 . 26788) (nil tag-name "v-dialog" 26787 . 26788) (nil tag-type start 26787 . 26788) (nil face web-mode-variable-name-face 26787 . 26788) (nil block-side t 26786 . 26787) (nil tag-attr t 26786 . 26787) (nil tag-name "v-dialog" 26786 . 26787) (nil tag-type start 26786 . 26787) (nil face web-mode-variable-name-face 26786 . 26787) (nil block-side t 26785 . 26786) (nil tag-attr t 26785 . 26786) (nil tag-name "v-dialog" 26785 . 26786) (nil tag-type start 26785 . 26786) (nil face web-mode-variable-name-face 26785 . 26786) (nil block-side t 26784 . 26785) (nil tag-attr t 26784 . 26785) (nil tag-name "v-dialog" 26784 . 26785) (nil tag-type start 26784 . 26785) (nil face web-mode-variable-name-face 26784 . 26785) (nil block-side t 26783 . 26784) (nil tag-attr t 26783 . 26784) (nil tag-name "v-dialog" 26783 . 26784) (nil tag-type start 26783 . 26784) (nil face web-mode-variable-name-face 26783 . 26784) (nil block-side t 26782 . 26783) (nil tag-attr t 26782 . 26783) (nil tag-name "v-dialog" 26782 . 26783) (nil tag-type start 26782 . 26783) (nil face web-mode-variable-name-face 26782 . 26783) (nil block-side t 26781 . 26782) (nil tag-attr t 26781 . 26782) (nil tag-name "v-dialog" 26781 . 26782) (nil tag-type start 26781 . 26782) (nil face web-mode-variable-name-face 26781 . 26782) (nil block-side t 26780 . 26781) (nil tag-attr t 26780 . 26781) (nil tag-name "v-dialog" 26780 . 26781) (nil tag-type start 26780 . 26781) (nil face web-mode-variable-name-face 26780 . 26781) (26780 . 26798)) nil (25828 30302 60248 648000) 0 nil])
([nil nil ((#("=" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start)) . 26798)) nil (25828 30302 60229 138000) 0 nil])
([nil nil ((26798 . 26804)) nil (25828 30302 60228 170000) 0 nil])
([nil nil ((#("l" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face)) . 26804) (#("l" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face)) . 26804) (#("u" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face)) . 26804) (#("n" 0 1 (block-side t tag-attr t tag-name "v-dialog" tag-type start face web-mode-variable-name-face)) . 26804)) nil (25828 30302 60226 714000) 0 nil])
([nil nil ((#("deleteSelectionDialog" 0 21 (tag-attr t tag-name "v-dialog" tag-type start font-lock-face web-mode-html-attr-value-face)) . 26815) (undo-tree-id80 . -21) (undo-tree-id81 . -21)) nil (25828 30302 60224 670000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26832 . 26833) (nil tag-attr t 26815 . 26833) (nil tag-name "v-dialog" 26815 . 26833) (nil tag-type start 26815 . 26833) (nil font-lock-face web-mode-html-attr-value-face 26815 . 26833) (26815 . 26833)) nil (25828 30302 60221 425000) 0 nil])
([nil nil ((#("deleteSelectionDialog" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 10 11 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . 27046) (undo-tree-id78 . -21) (undo-tree-id79 . -21)) nil (25828 30302 60219 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27063 . 27064) (nil block-side t 27063 . 27064) (nil tag-attr t 27063 . 27064) (nil tag-name "v-btn" 27063 . 27064) (nil tag-type start 27063 . 27064) (nil face web-mode-variable-name-face 27063 . 27064) (nil block-side t 27062 . 27063) (nil tag-attr t 27062 . 27063) (nil tag-name "v-btn" 27062 . 27063) (nil tag-type start 27062 . 27063) (nil face web-mode-variable-name-face 27062 . 27063) (nil block-side t 27061 . 27062) (nil tag-attr t 27061 . 27062) (nil tag-name "v-btn" 27061 . 27062) (nil tag-type start 27061 . 27062) (nil face web-mode-variable-name-face 27061 . 27062) (nil block-side t 27060 . 27061) (nil tag-attr t 27060 . 27061) (nil tag-name "v-btn" 27060 . 27061) (nil tag-type start 27060 . 27061) (nil face web-mode-variable-name-face 27060 . 27061) (nil block-side t 27059 . 27060) (nil tag-attr t 27059 . 27060) (nil tag-name "v-btn" 27059 . 27060) (nil tag-type start 27059 . 27060) (nil face web-mode-variable-name-face 27059 . 27060) (nil block-side t 27058 . 27059) (nil tag-attr t 27058 . 27059) (nil tag-name "v-btn" 27058 . 27059) (nil tag-type start 27058 . 27059) (nil face web-mode-variable-name-face 27058 . 27059) (nil block-side t 27057 . 27058) (nil tag-attr t 27057 . 27058) (nil tag-name "v-btn" 27057 . 27058) (nil tag-type start 27057 . 27058) (nil face web-mode-variable-name-face 27057 . 27058) (nil block-side t 27056 . 27057) (nil tag-attr t 27056 . 27057) (nil tag-name "v-btn" 27056 . 27057) (nil tag-type start 27056 . 27057) (nil face web-mode-variable-name-face 27056 . 27057) (nil block-side t 27055 . 27056) (nil tag-attr t 27055 . 27056) (nil tag-name "v-btn" 27055 . 27056) (nil tag-type start 27055 . 27056) (nil face web-mode-variable-name-face 27055 . 27056) (nil block-side t 27054 . 27055) (nil tag-attr t 27054 . 27055) (nil tag-name "v-btn" 27054 . 27055) (nil tag-type start 27054 . 27055) (nil face web-mode-variable-name-face 27054 . 27055) (nil block-side t 27053 . 27054) (nil tag-attr t 27053 . 27054) (nil tag-name "v-btn" 27053 . 27054) (nil tag-type start 27053 . 27054) (nil face web-mode-variable-name-face 27053 . 27054) (nil block-side t 27052 . 27053) (nil tag-attr t 27052 . 27053) (nil tag-name "v-btn" 27052 . 27053) (nil tag-type start 27052 . 27053) (nil face web-mode-variable-name-face 27052 . 27053) (nil block-side t 27051 . 27052) (nil tag-attr t 27051 . 27052) (nil tag-name "v-btn" 27051 . 27052) (nil tag-type start 27051 . 27052) (nil face web-mode-variable-name-face 27051 . 27052) (nil block-side t 27050 . 27051) (nil tag-attr t 27050 . 27051) (nil tag-name "v-btn" 27050 . 27051) (nil tag-type start 27050 . 27051) (nil face web-mode-variable-name-face 27050 . 27051) (nil block-side t 27049 . 27050) (nil tag-attr t 27049 . 27050) (nil tag-name "v-btn" 27049 . 27050) (nil tag-type start 27049 . 27050) (nil face web-mode-variable-name-face 27049 . 27050) (nil block-side t 27048 . 27049) (nil tag-attr t 27048 . 27049) (nil tag-name "v-btn" 27048 . 27049) (nil tag-type start 27048 . 27049) (nil face web-mode-variable-name-face 27048 . 27049) (nil block-side t 27047 . 27048) (nil tag-attr t 27047 . 27048) (nil tag-name "v-btn" 27047 . 27048) (nil tag-type start 27047 . 27048) (nil face web-mode-variable-name-face 27047 . 27048) (nil block-side t 27046 . 27047) (nil tag-attr t 27046 . 27047) (nil tag-name "v-btn" 27046 . 27047) (nil tag-type start 27046 . 27047) (nil face web-mode-variable-name-face 27046 . 27047) (27046 . 27064)) nil (25828 30302 60211 81000) 0 nil])
([nil nil ((#(";filterSelEditError=null" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 10 11 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-btn" tag-type start) 20 21 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . 27070) (undo-tree-id76 . -24) (undo-tree-id77 . -24)) nil (25828 30302 60189 334000) 0 nil])
([nil nil ((#("red" 0 3 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27257) (undo-tree-id74 . -3) (undo-tree-id75 . -3)) nil (25828 30302 60185 824000) 0 nil])
([nil nil ((27257 . 27261)) nil (25828 30302 60182 562000) 0 nil])
([nil nil ((#("v-if=\"filterSelEditError\"" 0 1 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 1 4 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 4 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27269) (undo-tree-id72 . -25) (undo-tree-id73 . -25)) nil (25828 30302 60181 343000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "p" tag-type start)) . -27268) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 27269) nil (25828 30302 60178 2000) 0 nil])
([nil nil ((33768 . 33769)) nil (25828 30302 60174 679000) 0 nil])
([nil nil ((33769 . 33778)) nil (25828 30302 60173 801000) 0 nil])
([nil nil ((33778 . 33792)) nil (25828 30302 60172 810000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33791) (undo-tree-id69 . -1) 33792) nil (25828 30302 60171 486000) 0 nil])
([nil nil ((33791 . 33798)) nil (25828 30302 60169 267000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33797) (undo-tree-id68 . -1) 33798) nil (25828 30302 60168 21000) 0 nil])
([nil nil ((#("const" 0 5 (part-side javascript face web-mode-keyword-face)) . 35769) (undo-tree-id66 . -5) (undo-tree-id67 . -5)) nil (25828 30302 60165 534000) 0 nil])
([nil nil ((35769 . 35774)) nil (25828 30302 60161 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35786 . 35787) (nil part-side javascript 35774 . 35787) (35774 . 35787)) nil (25828 30302 60160 713000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . 35787) (#("r" 0 1 (part-side javascript)) . 35787) (#("e" 0 1 (part-side javascript)) . 35787) (#("d" 0 1 (part-side javascript)) . 35787) (#("l" 0 1 (part-side javascript)) . 35787) (#("o" 0 1 (part-side javascript)) . 35787) (#("f" 0 1 (part-side javascript)) . 35787) (#("_" 0 1 (part-side javascript)) . 35787) (#("y" 0 1 (part-side javascript)) . 35787) (#("t" 0 1 (part-side javascript)) . 35787) (#("p" 0 1 (part-side javascript)) . 35787) (#("m" 0 1 (part-side javascript)) . 35787) (#("e" 0 1 (part-side javascript)) . 35787) (#(" " 0 1 (part-side javascript)) . 35787)) nil (25828 30302 60157 450000) 0 nil])
([nil nil ((#("empty_folders" 0 13 (part-side javascript)) . 35875) (undo-tree-id64 . -13) (undo-tree-id65 . -13)) nil (25828 30302 60153 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35892 . 35893) (nil rear-nonsticky t 35892 . 35893) (nil part-side javascript 35892 . 35893) (nil part-side javascript 35880 . 35892) (nil part-side javascript 35879 . 35880) (nil part-side javascript 35875 . 35879) (nil face web-mode-constant-face 35875 . 35879) (35875 . 35893)) nil (25828 30302 60148 13000) 0 nil])
([nil nil ((#("filterSelEditError" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t face web-mode-variable-name-face) 15 16 (block-side t face web-mode-variable-name-face) 16 17 (block-side t face web-mode-variable-name-face) 17 18 (block-side t face web-mode-variable-name-face)) . 27274) (undo-tree-id62 . -18) (undo-tree-id63 . -18)) nil (25828 30302 60145 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27291 . 27292) (nil rear-nonsticky t 27291 . 27292) (nil block-side t 27291 . 27292) (nil face web-mode-variable-name-face 27291 . 27292) (nil block-side t 27290 . 27291) (nil face web-mode-variable-name-face 27290 . 27291) (nil block-side t 27289 . 27290) (nil face web-mode-variable-name-face 27289 . 27290) (nil block-side t 27288 . 27289) (nil face web-mode-variable-name-face 27288 . 27289) (nil block-side t 27287 . 27288) (nil face web-mode-variable-name-face 27287 . 27288) (nil block-side t 27286 . 27287) (nil face web-mode-variable-name-face 27286 . 27287) (nil block-side t 27285 . 27286) (nil face web-mode-variable-name-face 27285 . 27286) (nil block-side t 27284 . 27285) (nil face web-mode-variable-name-face 27284 . 27285) (nil block-side t 27283 . 27284) (nil face web-mode-variable-name-face 27283 . 27284) (nil block-side t 27282 . 27283) (nil face web-mode-variable-name-face 27282 . 27283) (nil block-side t 27281 . 27282) (nil face web-mode-variable-name-face 27281 . 27282) (nil block-side t 27280 . 27281) (nil face web-mode-variable-name-face 27280 . 27281) (nil block-side t 27279 . 27280) (nil face web-mode-variable-name-face 27279 . 27280) (nil block-side t 27278 . 27279) (nil block-side t 27277 . 27278) (nil face web-mode-variable-name-face 27277 . 27278) (nil block-side t 27276 . 27277) (nil face web-mode-variable-name-face 27276 . 27277) (nil block-side t 27275 . 27276) (nil face web-mode-variable-name-face 27275 . 27276) (nil block-side t 27274 . 27275) (nil face web-mode-variable-name-face 27274 . 27275) (27274 . 27292)) nil (25828 30302 60140 156000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -27274) (undo-tree-id57 . -1) (#("h" 0 1 (block-side t face web-mode-variable-name-face)) . -27275) (undo-tree-id58 . -1) (#("i" 0 1 (block-side t face web-mode-variable-name-face)) . -27276) (undo-tree-id59 . -1) (#("s" 0 1 (block-side t face web-mode-variable-name-face)) . -27277) (undo-tree-id60 . -1) (#("." 0 1 (block-side t)) . -27278) (undo-tree-id61 . -1) 27279) nil (25828 30302 60129 429000) 0 nil])
([nil nil ((#("$" 0 1 (block-side t)) . -27271) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -27272) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("(" 0 1 (block-side t face (rainbow-delimiters-depth-3-face))) . -27273) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 27274) nil (25828 30302 60121 430000) 0 nil])
([nil nil ((#(")" 0 1 (block-side t face (rainbow-delimiters-mismatched-face))) . -27284) (undo-tree-id47 . -1) 27285) nil (25828 30302 60110 653000) 0 nil])
([nil nil ((#("delete_filter_selection()" 0 23 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 23 25 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 27412) (undo-tree-id45 . -25) (undo-tree-id46 . -25)) nil (25828 30302 60107 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27429 . 27430) (nil block-side t 27429 . 27430) (nil tag-attr t 27429 . 27430) (nil tag-name "v-btn" 27429 . 27430) (nil tag-type start 27429 . 27430) (nil block-side t 27428 . 27429) (nil tag-attr t 27428 . 27429) (nil tag-name "v-btn" 27428 . 27429) (nil tag-type start 27428 . 27429) (nil block-side t 27412 . 27428) (nil tag-attr t 27412 . 27428) (nil tag-name "v-btn" 27412 . 27428) (nil tag-type start 27412 . 27428) (nil face web-mode-function-call-face 27412 . 27428) (27412 . 27430)) nil (25828 30302 60104 90000) 0 nil])
([nil nil ((27429 . 27431)) nil (25828 30302 60099 77000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27429) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("r" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27430) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 27431) nil (25828 30302 60097 595000) 0 nil])
([nil nil ((27429 . 27433)) nil (25828 30302 60091 641000) 0 nil])
([nil nil ((#("T" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27429) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("r" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27430) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("u" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27431) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -27432) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 27433) nil (25828 30302 60089 350000) 0 nil])
([nil nil ((27429 . 27434)) nil (25828 30302 60077 149000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -27433) (undo-tree-id30 . -1) 27434) nil (25828 30302 60075 972000) 0 nil])
([nil nil ((35745 . 35750)) nil (25828 30302 60073 805000) 0 nil])
([nil nil ((35750 . 35763)) nil (25828 30302 60072 893000) 0 nil])
([nil nil ((#("F" 0 1 (part-side javascript)) . -35757) (undo-tree-id24 . -1) (#("a" 0 1 (part-side javascript)) . -35758) (undo-tree-id25 . -1) (#("l" 0 1 (part-side javascript)) . -35759) (undo-tree-id26 . -1) (#("s" 0 1 (part-side javascript)) . -35760) (undo-tree-id27 . -1) (#("e" 0 1 (part-side javascript)) . -35761) (undo-tree-id28 . -1) (#(" " 0 1 (part-side javascript)) . -35762) (undo-tree-id29 . -1) 35763) nil (25828 30302 60070 731000) 0 nil])
([nil nil ((35757 . 35763)) nil (25828 30302 60062 117000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35762) (undo-tree-id23 . -1) 35763) nil (25828 30302 60060 920000) 0 nil])
([nil nil ((35841 . 35850)) nil (25828 30302 60058 647000) 0 nil])
([nil nil ((35854 . 35871) (35853 . 35855) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -35853) (35850 . 35854)) nil (25828 30302 60057 321000) 0 nil])
([nil nil ((35871 . 35881)) nil (25828 30302 60055 721000) 0 nil])
([nil nil ((#("k" 0 1 (part-side javascript)) . -35877) (undo-tree-id19 . -1) (#("e" 0 1 (part-side javascript)) . -35878) (undo-tree-id20 . -1) (#("a" 0 1 (part-side javascript)) . -35879) (undo-tree-id21 . -1) (#("r" 0 1 (part-side javascript)) . -35880) (undo-tree-id22 . -1) 35881) nil (25828 30302 60053 853000) 0 nil])
([nil nil ((35877 . 35882)) nil (25828 30302 60047 483000) 0 nil])
([nil nil ((#(":" 0 1 (part-side javascript)) . -35881) (undo-tree-id18 . -1) 35882) nil (25828 30302 60046 8000) 0 nil])
([nil nil ((35881 . 35888)) nil (25828 30302 60043 657000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35887) (undo-tree-id17 . -1) 35888) nil (25828 30302 60042 347000) 0 nil])
([nil nil ((35889 . 35891) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -35889) (35888 . 35890)) nil (25828 30302 60039 997000) 0 nil])
([nil nil ((35890 . 35899)) nil (25828 30302 60038 499000) 0 nil])
([nil nil ((#("        console.log('empty folders:', this.empty_folders)
" 0 16 (part-side javascript) 16 19 (part-side javascript face web-mode-function-call-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-4-face)) 20 21 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 21 27 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 27 34 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 42 (part-side javascript face web-mode-constant-face) 42 55 (part-side javascript) 55 56 (rear-nonsticky t part-side javascript) 56 57 (part-side javascript face (rainbow-delimiters-depth-4-face)) 57 58 (part-side javascript)) . 35959) (undo-tree-id13 . -58) (undo-tree-id14 . -8) (undo-tree-id15 . -38) (undo-tree-id16 . -38) (35949 . 35959) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 35891) (35901 . 35959) 35909) nil (25828 30302 60036 846000) 0 nil])
([nil nil ((#("        console.log('empty folders:', this.empty_folders)
" 0 16 (part-side javascript) 16 19 (part-side javascript face web-mode-function-call-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-5-face)) 20 21 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 21 27 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 27 34 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 42 (part-side javascript face web-mode-constant-face) 42 55 (part-side javascript) 55 56 (rear-nonsticky t part-side javascript) 56 57 (part-side javascript face (rainbow-delimiters-depth-5-face)) 57 58 (part-side javascript)) . 35949) (undo-tree-id9 . -58) (undo-tree-id10 . -8) (35900 . 35949) (#("        if (this.empty_folders && clear_empty) {
" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 16 (part-side javascript face web-mode-constant-face) 16 34 (part-side javascript) 34 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-4-face)) 46 47 (part-side javascript) 47 48 (part-side javascript face (rainbow-delimiters-depth-4-face)) 48 49 (part-side javascript)) . 35842) (undo-tree-id11 . -44) (undo-tree-id12 . -40) (35891 . 35949) 35899) nil (25828 30302 60030 292000) 0 nil])
([nil nil ((#("        this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-constant-face) 12 18 (part-side javascript) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 33 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 36 (part-side javascript) 36 37 (part-side javascript face (rainbow-delimiters-depth-5-face)) 37 41 (part-side javascript face web-mode-constant-face) 41 59 (part-side javascript) 59 63 (part-side javascript face web-mode-constant-face) 63 80 (part-side javascript) 80 81 (part-side javascript face (rainbow-delimiters-depth-5-face)) 81 82 (part-side javascript face (rainbow-delimiters-depth-4-face)) 82 83 (part-side javascript)) . 36042) (undo-tree-id7 . -83) (undo-tree-id8 . -8) (36032 . 36042) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 35949) (35959 . 36042) 35967) nil (25828 30302 60023 135000) 0 nil])
([nil nil ((35957 . 35959)) nil (25828 30302 60018 744000) 0 nil])
([nil nil ((36043 . 36052)) nil (25828 30302 60017 760000) 0 nil])
([nil nil ((36052 . 36057)) nil (25828 30302 60016 774000) 0 nil])
([nil nil ((#("deleteSelectionDialog=false;filterSelEditError=null" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 10 11 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-btn" tag-type start) 22 23 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-btn" tag-type start) 28 29 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 33 34 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 34 35 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 35 36 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 36 37 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 37 38 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 38 39 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 39 40 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 40 41 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 42 43 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 43 44 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 45 46 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "v-btn" tag-type start) 47 48 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 48 49 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 49 50 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 50 51 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . 27511) (undo-tree-id5 . -51) (undo-tree-id6 . -51)) nil (25828 30302 60015 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27534 . 27535) (nil block-side t 27534 . 27535) (nil tag-attr t 27534 . 27535) (nil tag-name "v-btn" 27534 . 27535) (nil tag-type start 27534 . 27535) (nil face web-mode-variable-name-face 27534 . 27535) (nil block-side t 27533 . 27534) (nil tag-attr t 27533 . 27534) (nil tag-name "v-btn" 27533 . 27534) (nil tag-type start 27533 . 27534) (nil face web-mode-variable-name-face 27533 . 27534) (nil block-side t 27532 . 27533) (nil tag-attr t 27532 . 27533) (nil tag-name "v-btn" 27532 . 27533) (nil tag-type start 27532 . 27533) (nil face web-mode-variable-name-face 27532 . 27533) (nil block-side t 27531 . 27532) (nil tag-attr t 27531 . 27532) (nil tag-name "v-btn" 27531 . 27532) (nil tag-type start 27531 . 27532) (nil face web-mode-variable-name-face 27531 . 27532) (nil block-side t 27530 . 27531) (nil tag-attr t 27530 . 27531) (nil tag-name "v-btn" 27530 . 27531) (nil tag-type start 27530 . 27531) (nil face web-mode-variable-name-face 27530 . 27531) (nil block-side t 27529 . 27530) (nil tag-attr t 27529 . 27530) (nil tag-name "v-btn" 27529 . 27530) (nil tag-type start 27529 . 27530) (nil rear-nonsticky t 27528 . 27529) (nil block-side t 27528 . 27529) (nil tag-attr t 27528 . 27529) (nil tag-name "v-btn" 27528 . 27529) (nil tag-type start 27528 . 27529) (nil face web-mode-variable-name-face 27528 . 27529) (nil block-side t 27527 . 27528) (nil tag-attr t 27527 . 27528) (nil tag-name "v-btn" 27527 . 27528) (nil tag-type start 27527 . 27528) (nil face web-mode-variable-name-face 27527 . 27528) (nil block-side t 27526 . 27527) (nil tag-attr t 27526 . 27527) (nil tag-name "v-btn" 27526 . 27527) (nil tag-type start 27526 . 27527) (nil face web-mode-variable-name-face 27526 . 27527) (nil block-side t 27525 . 27526) (nil tag-attr t 27525 . 27526) (nil tag-name "v-btn" 27525 . 27526) (nil tag-type start 27525 . 27526) (nil face web-mode-variable-name-face 27525 . 27526) (nil block-side t 27524 . 27525) (nil tag-attr t 27524 . 27525) (nil tag-name "v-btn" 27524 . 27525) (nil tag-type start 27524 . 27525) (nil face web-mode-variable-name-face 27524 . 27525) (nil block-side t 27523 . 27524) (nil tag-attr t 27523 . 27524) (nil tag-name "v-btn" 27523 . 27524) (nil tag-type start 27523 . 27524) (nil face web-mode-variable-name-face 27523 . 27524) (nil block-side t 27522 . 27523) (nil tag-attr t 27522 . 27523) (nil tag-name "v-btn" 27522 . 27523) (nil tag-type start 27522 . 27523) (nil face web-mode-variable-name-face 27522 . 27523) (nil block-side t 27521 . 27522) (nil tag-attr t 27521 . 27522) (nil tag-name "v-btn" 27521 . 27522) (nil tag-type start 27521 . 27522) (nil face web-mode-variable-name-face 27521 . 27522) (nil block-side t 27520 . 27521) (nil tag-attr t 27520 . 27521) (nil tag-name "v-btn" 27520 . 27521) (nil tag-type start 27520 . 27521) (nil face web-mode-variable-name-face 27520 . 27521) (nil block-side t 27519 . 27520) (nil tag-attr t 27519 . 27520) (nil tag-name "v-btn" 27519 . 27520) (nil tag-type start 27519 . 27520) (nil face web-mode-variable-name-face 27519 . 27520) (nil block-side t 27518 . 27519) (nil tag-attr t 27518 . 27519) (nil tag-name "v-btn" 27518 . 27519) (nil tag-type start 27518 . 27519) (nil face web-mode-variable-name-face 27518 . 27519) (nil block-side t 27517 . 27518) (nil tag-attr t 27517 . 27518) (nil tag-name "v-btn" 27517 . 27518) (nil tag-type start 27517 . 27518) (nil face web-mode-variable-name-face 27517 . 27518) (nil block-side t 27516 . 27517) (nil tag-attr t 27516 . 27517) (nil tag-name "v-btn" 27516 . 27517) (nil tag-type start 27516 . 27517) (nil face web-mode-variable-name-face 27516 . 27517) (nil block-side t 27515 . 27516) (nil tag-attr t 27515 . 27516) (nil tag-name "v-btn" 27515 . 27516) (nil tag-type start 27515 . 27516) (nil face web-mode-variable-name-face 27515 . 27516) (nil block-side t 27514 . 27515) (nil tag-attr t 27514 . 27515) (nil tag-name "v-btn" 27514 . 27515) (nil tag-type start 27514 . 27515) (nil face web-mode-variable-name-face 27514 . 27515) (nil block-side t 27513 . 27514) (nil tag-attr t 27513 . 27514) (nil tag-name "v-btn" 27513 . 27514) (nil tag-type start 27513 . 27514) (nil face web-mode-variable-name-face 27513 . 27514) (nil block-side t 27512 . 27513) (nil tag-attr t 27512 . 27513) (nil tag-name "v-btn" 27512 . 27513) (nil tag-type start 27512 . 27513) (nil face web-mode-variable-name-face 27512 . 27513) (nil block-side t 27511 . 27512) (nil tag-attr t 27511 . 27512) (nil tag-name "v-btn" 27511 . 27512) (nil tag-type start 27511 . 27512) (nil face web-mode-variable-name-face 27511 . 27512) (27511 . 27535)) nil (25828 30302 59997 294000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript face whitespace-trailing)) . -36029) 27535) nil (25828 30302 59959 910000) 0 nil])
([nil nil ((36031 . 36032) (36030 . 36032) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -36030) (36029 . 36031) (t 25828 30302 107459 920000)) nil (25828 30917 927460 337000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36031) (undo-tree-id163 . -1) 36032) nil (25828 30917 927457 865000) 0 nil])
([nil nil ((35903 . 35915)) nil (25828 30917 927454 618000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35914) (undo-tree-id162 . -1) 35915) nil (25828 30917 927453 126000) 0 nil])
([nil nil ((#("&" 0 1 (part-side javascript)) . -35915) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("&" 0 1 (part-side javascript)) . -35916) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#(" " 0 1 (part-side javascript)) . -35917) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("c" 0 1 (part-side javascript)) . -35918) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("l" 0 1 (part-side javascript)) . -35919) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("e" 0 1 (part-side javascript)) . -35920) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("a" 0 1 (part-side javascript)) . -35921) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("r" 0 1 (part-side javascript)) . -35922) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("_" 0 1 (part-side javascript)) . -35923) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("e" 0 1 (part-side javascript)) . -35924) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("m" 0 1 (part-side javascript)) . -35925) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("p" 0 1 (part-side javascript)) . -35926) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("t" 0 1 (part-side javascript)) . -35927) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("y" 0 1 (part-side javascript)) . -35928) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 35929) nil (25828 30917 927446 511000) 0 nil])
([nil nil ((35915 . 35926)) nil (25828 30917 927406 169000) 0 nil])
([nil nil ((#("m" 0 1 (part-side javascript)) . -35924) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("_" 0 1 (part-side javascript)) . -35925) (undo-tree-id133 . -1) 35926) nil (25828 30917 927404 488000) 0 nil])
([nil nil ((35924 . 35931)) nil (25828 30917 927398 875000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35930) (undo-tree-id130 . -1) 35931) nil (25828 30917 927397 264000) 0 nil])
([nil nil ((#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-3-face)) 9 10 (part-side javascript)) . 36029) (35944 . 36029) (#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-6-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-6-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-5-face)) 84 85 (part-side javascript)) . 35934) (undo-tree-id129 . -38) (36019 . 36029) 35972) nil (25828 30917 927394 46000) 0 nil])
([nil nil ((#("        else {}
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 36045) (35960 . 36045) (#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-5-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-4-face)) 84 85 (part-side javascript)) . 35944) (undo-tree-id128 . -38) (36029 . 36045) 35982) nil (25828 30917 927389 667000) 0 nil])
([nil nil ((#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-5-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-4-face)) 84 85 (part-side javascript)) . 36045) (undo-tree-id126 . -85) (undo-tree-id127 . -38) (36029 . 36045) (#("        else {}
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 35944) (35960 . 36045) 35998) nil (25828 30917 927385 457000) 0 nil])
([nil nil ((#("        else {}
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 36045) (35960 . 36045) (#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-5-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-4-face)) 84 85 (part-side javascript)) . 35944) (undo-tree-id125 . -38) (36029 . 36045) 35982) nil (25828 30917 927380 459000) 0 nil])
([nil nil ((35933 . 35944)) nil (25828 30917 927376 34000) 0 nil])
([nil nil ((35944 . 35949)) nil (25828 30917 927374 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35966 . 35967) (nil part-side javascript 35966 . 35967) (nil part-side javascript 35965 . 35966) (nil part-side javascript 35964 . 35965) (nil part-side javascript 35963 . 35964) (nil part-side javascript 35962 . 35963) (nil part-side javascript 35961 . 35962) (nil part-side javascript 35960 . 35961) (nil part-side javascript 35959 . 35960) (nil part-side javascript 35958 . 35959) (nil part-side javascript 35957 . 35958) (nil part-side javascript 35956 . 35957) (nil part-side javascript 35955 . 35956) (nil part-side javascript 35954 . 35955) (nil part-side javascript 35953 . 35954) (nil part-side javascript 35952 . 35953) (nil part-side javascript 35951 . 35952) (nil part-side javascript 35950 . 35951) (nil part-side javascript 35949 . 35950) (35949 . 35967)) nil (25828 30917 927372 419000) 0 nil])
([nil nil ((35967 . 35975)) nil (25828 30917 927366 880000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35974) (undo-tree-id124 . -1) 35975) nil (25828 30917 927365 659000) 0 nil])
([nil nil ((36001 . 36009) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 36000) (undo-tree-id122 . -8) (undo-tree-id123 . 10) (36008 . 36010) (35999 . 36009)) nil (25828 30917 927362 996000) 0 nil])
([nil nil ((#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-5-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-4-face)) 84 85 (part-side javascript)) . 36096) (undo-tree-id120 . -85) (undo-tree-id121 . -8) (36086 . 36096) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 36001) (36011 . 36096) 36019) nil (25828 30917 927358 145000) 0 nil])
([nil nil ((#("          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-6-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 61 (part-side javascript) 61 65 (part-side javascript face web-mode-constant-face) 65 82 (part-side javascript) 82 83 (part-side javascript face (rainbow-delimiters-depth-6-face)) 83 84 (part-side javascript face (rainbow-delimiters-depth-5-face)) 84 85 (part-side javascript)) . 36086) (undo-tree-id118 . -85) (undo-tree-id119 . -8) (36085 . 36086) (#("
" 0 1 (part-side javascript)) . 36000) (36001 . 36086) 36009) nil (25828 30917 927353 758000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 36085) (undo-tree-id117 . -1)) nil (25828 30917 927349 257000) 0 nil])
([nil nil ((35999 . 36010)) nil (25828 30917 927346 243000) 0 nil])
([nil nil ((36010 . 36017)) nil (25828 30917 927345 0) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -36015) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("a" 0 1 (part-side javascript)) . -36016) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 36017) nil (25828 30917 927343 101000) 0 nil])
([nil nil ((36015 . 36016)) nil (25828 30917 927336 677000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -36010) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("h" 0 1 (part-side javascript)) . -36011) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("i" 0 1 (part-side javascript)) . -36012) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("s" 0 1 (part-side javascript face web-mode-constant-face)) . -36013) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("." 0 1 (part-side javascript)) . -36014) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("f" 0 1 (part-side javascript)) . -36015) (undo-tree-id112 . -1) 36016) nil (25828 30917 927333 520000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36039 . 36040) (nil part-side javascript 36036 . 36040) (nil face web-mode-constant-face 36036 . 36040) (nil part-side javascript 36035 . 36036) (nil part-side javascript 36033 . 36035) (nil rear-nonsticky t 36032 . 36033) (nil part-side javascript 36032 . 36033) (nil part-side javascript 36015 . 36032) (nil part-side javascript 36014 . 36015) (nil part-side javascript 36010 . 36014) (nil face web-mode-constant-face 36010 . 36014) (36010 . 36040)) nil (25828 30917 927316 976000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -36036) (undo-tree-id98 . -1) (#("r" 0 1 (part-side javascript)) . -36037) (undo-tree-id99 . -1) (#("u" 0 1 (part-side javascript)) . -36038) (undo-tree-id100 . -1) (#("e" 0 1 (rear-nonsticky t part-side javascript face web-mode-constant-face)) . -36039) (undo-tree-id101 . -1) 36040) nil (25828 30917 927311 366000) 0 nil])
([nil nil ((36036 . 36042)) nil (25828 30917 927303 121000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36041) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 36042) nil (25828 30917 927297 241000) 0 nil])
([nil nil ((#("deleteFilterSelection" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t face web-mode-variable-name-face) 15 16 (block-side t face web-mode-variable-name-face) 16 17 (block-side t face web-mode-variable-name-face) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face)) . 27210) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) (t 25828 30917 973043 832000)) nil (25828 31091 882937 431000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27228 . 27229) (nil block-side t 27210 . 27229) (27210 . 27229)) nil (25828 31091 882914 805000) 0 nil])
([nil nil ((27288 . 27291) (27287 . 27289) (#("(" 0 1 (block-side t face (rainbow-delimiters-depth-3-face))) . -27287) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (27282 . 27288) (t 25828 31091 933407 167000)) nil (25828 31166 744281 535000) 0 nil])
([nil nil ((#("x" 0 1 (block-side t)) . -27290) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 27291) nil (25828 31166 744275 728000) 0 nil])
([nil nil ((27289 . 27291)) nil (25828 31166 744257 422000) 0 nil])
([nil nil ((27293 . 27294) (t 25828 31166 781557 400000)) nil (25828 31182 51285 477000) 0 nil])
([nil nil ((27269 . 27270)) nil (25828 31182 51277 875000) 0 nil])
([nil nil ((27266 . 27274) (t 25828 31182 93587 750000)) nil (25828 31225 331878 511000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27285 . 27286) (nil rear-nonsticky t 27285 . 27286) (nil tag-attr t 27285 . 27286) (nil tag-name "p" 27285 . 27286) (nil tag-type start 27285 . 27286) (nil font-lock-face web-mode-html-attr-value-face 27285 . 27286) (nil tag-attr t 27284 . 27285) (nil tag-name "p" 27284 . 27285) (nil tag-type start 27284 . 27285) (nil font-lock-face web-mode-html-attr-value-face 27284 . 27285) (nil tag-attr t 27283 . 27284) (nil tag-name "p" 27283 . 27284) (nil tag-type start 27283 . 27284) (nil font-lock-face web-mode-html-attr-value-face 27283 . 27284) (nil tag-attr t 27282 . 27283) (nil tag-name "p" 27282 . 27283) (nil tag-type start 27282 . 27283) (nil font-lock-face web-mode-html-attr-value-face 27282 . 27283) (nil tag-attr t 27281 . 27282) (nil tag-name "p" 27281 . 27282) (nil tag-type start 27281 . 27282) (nil font-lock-face web-mode-html-attr-value-face 27281 . 27282) (nil tag-attr t 27280 . 27281) (nil tag-name "p" 27280 . 27281) (nil tag-type start 27280 . 27281) (nil font-lock-face web-mode-html-attr-value-face 27280 . 27281) (nil tag-attr t 27279 . 27280) (nil tag-name "p" 27279 . 27280) (nil tag-type start 27279 . 27280) (nil font-lock-face web-mode-html-attr-value-face 27279 . 27280) (nil tag-attr t 27278 . 27279) (nil tag-name "p" 27278 . 27279) (nil tag-type start 27278 . 27279) (nil font-lock-face web-mode-html-attr-value-face 27278 . 27279) (nil tag-attr t 27277 . 27278) (nil tag-name "p" 27277 . 27278) (nil tag-type start 27277 . 27278) (nil font-lock-face web-mode-html-attr-value-face 27277 . 27278) (nil tag-attr t 27276 . 27277) (nil tag-name "p" 27276 . 27277) (nil tag-type start 27276 . 27277) (nil font-lock-face web-mode-html-attr-value-face 27276 . 27277) (nil tag-attr t 27275 . 27276) (nil tag-name "p" 27275 . 27276) (nil tag-type start 27275 . 27276) (nil font-lock-face web-mode-html-attr-value-face 27275 . 27276) (nil tag-attr t 27274 . 27275) (nil tag-name "p" 27274 . 27275) (nil tag-type start 27274 . 27275) (nil font-lock-face web-mode-html-attr-value-face 27274 . 27275) (nil tag-attr t 27273 . 27274) (nil tag-name "p" 27273 . 27274) (nil tag-type start 27273 . 27274) (nil font-lock-face web-mode-html-attr-value-face 27273 . 27274) (27273 . 27286)) nil (25828 31225 331859 430000) 0 nil])
([nil nil ((27265 . 27270) (t 25828 31225 385672 897000)) nil (25828 31247 150758 737000) 0 nil])
([nil nil ((#("/^[\\w\\s]+$/" 0 2 (part-side javascript) 2 3 (part-side javascript face (rainbow-delimiters-depth-5-face)) 3 7 (part-side javascript) 7 8 (part-side javascript face (rainbow-delimiters-depth-5-face)) 8 11 (part-side javascript)) . 33630) (undo-tree-id172 . -11) (undo-tree-id173 . -10) (undo-tree-id174 . -11) (t 25828 31247 193715 444000)) nil (25828 31429 543642 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33650 . 33651) (nil part-side javascript 33647 . 33651) (nil part-side javascript 33646 . 33647) (nil face (rainbow-delimiters-depth-5-face) 33646 . 33647) (nil part-side javascript 33638 . 33646) (nil part-side javascript 33637 . 33638) (nil face (rainbow-delimiters-depth-6-face) 33637 . 33638) (nil part-side javascript 33636 . 33637) (nil part-side javascript 33635 . 33636) (nil face (rainbow-delimiters-depth-6-face) 33635 . 33636) (nil part-side javascript 33633 . 33635) (nil part-side javascript 33632 . 33633) (nil face (rainbow-delimiters-depth-5-face) 33632 . 33633) (nil part-side javascript 33630 . 33632) (33630 . 33651)) nil (25828 31429 543604 591000) 0 nil])
([nil nil ((35006 . 35013) (t 25828 31429 598063 612000)) nil (25828 31507 10770 59000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 35026) (35025 . 35026) (35024 . 35026) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35024) (35013 . 35025)) nil (25828 31507 10767 619000) 0 nil])
([nil nil ((35026 . 35030) (nil part-token string 35026 . 35027) (nil font-lock-face web-mode-javascript-string-face 35026 . 35027) (nil part-side javascript 35026 . 35027) (35025 . 35027) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -35025) (35025 . 35026)) nil (25828 31507 10757 949000) 0 nil])
([nil nil ((33875 . 33884) (t 25828 31507 54474 94000)) nil (25828 33182 822303 946000) 0 nil])
([nil nil ((33884 . 33893)) nil (25828 33182 822302 783000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -33892) (undo-tree-id181 . -1) 33893) nil (25828 33182 822301 582000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 33897) (33896 . 33897) (33895 . 33897) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -33895) (33892 . 33896)) nil (25828 33182 822298 386000) 0 nil])
([nil nil ((33897 . 33910) (33896 . 33898) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -33896) (33896 . 33897)) nil (25828 33182 822295 555000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -33909) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 33910) nil (25828 33182 822289 422000) 0 nil])
([nil nil ((33833 . 33840) (t 25828 33182 876110 540000)) nil (25828 33468 128510 777000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33858 . 33859) (nil part-side javascript 33840 . 33859) (33840 . 33859)) nil (25828 33468 128509 498000) 0 nil])
([nil nil ((33859 . 33861)) nil (25828 33468 128508 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33886 . 33887) (nil part-side javascript 33886 . 33887) (nil face (rainbow-delimiters-depth-3-face) 33886 . 33887) (nil part-side javascript 33885 . 33886) (nil part-side javascript 33884 . 33885) (nil face (rainbow-delimiters-depth-3-face) 33884 . 33885) (nil part-side javascript 33870 . 33884) (nil part-side javascript 33869 . 33870) (nil face (rainbow-delimiters-depth-3-face) 33869 . 33870) (nil part-side javascript 33861 . 33869) (nil face web-mode-keyword-face 33861 . 33869) (33861 . 33887)) nil (25828 33468 128506 687000) 0 nil])
([nil nil ((33889 . 33897) (#("        " 0 8 (part-side javascript)) . 33888) (undo-tree-id188 . -8) (33887 . 33897)) nil (25828 33468 128502 794000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -33895) (33897 . 33898)) nil (25828 33468 128499 198000) 0 nil])
([nil nil ((33888 . 33896)) nil (25828 33468 128497 887000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 33909) (33908 . 33909) (33907 . 33909) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -33907) (33896 . 33908)) nil (25828 33468 128496 111000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 33910) (33909 . 33910) (33908 . 33910) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -33908) (33908 . 33909)) nil (25828 33468 128493 667000) 0 nil])
([nil nil ((33909 . 33922)) nil (25828 33468 128491 667000) 0 nil])
([nil nil ((33922 . 33924)) nil (25828 33468 128490 653000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -33923) (undo-tree-id187 . -1) 33924) nil (25828 33468 128489 112000) 0 nil])
([nil nil ((33924 . 33933)) nil (25828 33468 128485 777000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33932) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 33933) nil (25828 33468 128480 250000) 0 nil])
([nil nil ((33941 . 33942) (t 25828 33468 172824 163000)) nil (25828 33485 324748 502000) 0 nil])
([nil nil ((56 . 61) (t 25828 33485 368866 746000)) nil (25828 33720 715319 532000) 0 nil])
([nil nil ((62 . 64) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -62) (62 . 63) (61 . 63) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -61) (61 . 62)) nil (25828 33720 722680 605000) 0 nil])
([nil nil ((nil rear-nonsticky nil 81 . 82) (nil block-side t 63 . 82) (63 . 82)) nil (25828 33727 492656 331000) 0 nil] [nil nil ((nil rear-nonsticky nil 88 . 89) (nil block-side t 88 . 89) (nil face (rainbow-delimiters-depth-3-face) 88 . 89) (nil block-side t 87 . 88) (nil block-side t 86 . 87) (nil face (rainbow-delimiters-depth-3-face) 86 . 87) (nil block-side t 72 . 86) (nil block-side t 71 . 72) (nil face (rainbow-delimiters-depth-3-face) 71 . 72) (nil block-side t 63 . 71) (63 . 89)) ((#("function(newVal, oldVal) {" 0 8 (block-side t) 8 9 (block-side t face (rainbow-delimiters-depth-3-face)) 9 23 (block-side t) 23 24 (block-side t face (rainbow-delimiters-depth-3-face)) 24 25 (block-side t) 25 26 (rear-nonsticky nil block-side t face (rainbow-delimiters-depth-3-face))) . 63) (undo-tree-id189 . -26) (nil face (rainbow-delimiters-depth-3-face) 71 . 72) (nil face (rainbow-delimiters-depth-3-face) 86 . 87) (nil face (rainbow-delimiters-depth-3-face) 88 . 89) (nil rear-nonsticky t 88 . 89)) (25828 33720 715308 193000) 0 nil])
([nil nil ((82 . 83)) nil (25828 33727 492649 27000) 0 nil])
nil
([nil nil ((#("    {{displayActiveFilter }}" 4 5 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 5 6 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 6 24 (block-side t) 24 25 (rear-nonsticky t block-side t) 25 26 (block-side t) 26 27 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 27 28 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face))) . 57) (undo-tree-id197 . -28) (undo-tree-id198 . -6) (undo-tree-id199 . -27) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -28) (t 25828 33727 533659 808000)) nil (25828 33754 99111 106000) 0 nil])
([nil nil (("
" . -56) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 57) nil (25828 33754 99097 850000) 0 nil])
([nil nil ((#(": function(newVal, oldVal)" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript face (rainbow-delimiters-depth-3-face)) 11 25 (part-side javascript) 25 26 (part-side javascript face (rainbow-delimiters-depth-3-face))) . 33859) (undo-tree-id236 . -26) (undo-tree-id237 . -26) (t 25828 33754 137742 494000)) nil (25828 33961 521436 730000) 0 nil])
([nil nil ((33860 . 33863) (33859 . 33861) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -33859) (33859 . 33860)) nil (25828 33961 521432 605000) 0 nil])
([nil nil ((#("k" 0 1 (part-side javascript)) . -33862) (undo-tree-id235 . -1) 33863) nil (25828 33961 521430 608000) 0 nil])
([nil nil ((33862 . 33863)) nil (25828 33961 521427 574000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -33905) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("e" 0 1 (part-side javascript)) . -33906) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("w" 0 1 (part-side javascript)) . -33907) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("V" 0 1 (part-side javascript)) . -33908) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 33909) nil (25828 33961 521422 756000) 0 nil])
([nil nil ((33905 . 33906)) nil (25828 33961 521399 678000) 0 nil])
([nil nil ((33909 . 33918)) nil (25828 33961 521398 186000) 0 nil])
([nil nil ((33918 . 33921)) nil (25828 33961 521396 763000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33920) (undo-tree-id226 . -1) 33921) nil (25828 33961 521395 9000) 0 nil])
([nil nil ((33920 . 33921)) nil (25828 33961 521390 900000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -33920) (undo-tree-id225 . -1) 33921) nil (25828 33961 521388 808000) 0 nil])
([nil nil ((33920 . 33921)) nil (25828 33961 521384 918000) 0 nil])
([nil nil ((33922 . 33925) (33921 . 33923) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -33921) (33921 . 33922)) nil (25828 33961 521382 872000) 0 nil])
([nil nil ((33927 . 33929) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -33927) (33926 . 33928)) nil (25828 33961 521379 954000) 0 nil])
([nil nil ((33930 . 33938) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 33929) (undo-tree-id223 . -8) (undo-tree-id224 . 10) (33937 . 33939) (33928 . 33938)) nil (25828 33961 521376 806000) 0 nil])
([nil nil ((33922 . 33923)) nil (25828 33961 521368 892000) 0 nil])
([nil nil ((33930 . 33940)) nil (25828 33961 521367 351000) 0 nil])
([nil nil ((33940 . 33945)) nil (25828 33961 521365 837000) 0 nil])
([nil nil ((52738 . 52739)) nil (25828 33961 521364 355000) 0 nil])
([nil nil ((52739 . 52746)) nil (25828 33961 521363 71000) 0 nil])
([nil nil ((52746 . 52747)) nil (25828 33961 521361 717000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -52746) (undo-tree-id222 . -1) 52747) nil (25828 33961 521359 831000) 0 nil])
([nil nil ((52746 . 52751)) nil (25828 33961 521354 846000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -52748) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("t" 0 1 (part-side javascript)) . -52749) (undo-tree-id220 . -1) (#("e" 0 1 (part-side javascript)) . -52750) (undo-tree-id221 . -1) 52751) nil (25828 33961 521348 342000) 0 nil])
([nil nil ((52759 . 52761) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -52759) (52758 . 52760) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 52758) (52757 . 52758) (52756 . 52758) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -52756) (52748 . 52757)) nil (25828 33961 521334 717000) 0 nil])
([nil nil ((52762 . 52768) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 52761) (undo-tree-id215 . 8) (52761 . 52769) (#("      " 0 6 (part-side javascript)) . 52761) (undo-tree-id216 . -6) (52760 . 52768)) nil (25828 33961 521330 527000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33954 . 33955) (nil part-side javascript 33945 . 33955) (33945 . 33955)) nil (25828 33961 521324 24000) 0 nil])
([nil nil ((33955 . 33957) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -33955) (33955 . 33956)) nil (25828 33961 521321 857000) 0 nil])
([nil nil ((52773 . 52781)) nil (25828 33961 521319 662000) 0 nil])
([nil nil ((52781 . 52786)) nil (25828 33961 521318 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 52804 . 52805) (nil part-side javascript 52804 . 52805) (nil face (rainbow-delimiters-depth-4-face) 52804 . 52805) (nil part-side javascript 52803 . 52804) (nil face (rainbow-delimiters-depth-4-face) 52803 . 52804) (nil part-side javascript 52786 . 52803) (nil face web-mode-function-call-face 52786 . 52803) (52786 . 52805)) nil (25828 33961 521316 336000) 0 nil])
([nil nil ((52805 . 52814)) nil (25828 33961 521312 887000) 0 nil])
([nil nil ((52814 . 52819)) nil (25828 33961 521311 400000) 0 nil])
([nil nil ((#("this.clear_edit_fields()
        this." 0 4 (part-side javascript face web-mode-constant-face) 4 5 (part-side javascript) 5 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-4-face)) 23 24 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face)) 24 25 (part-side javascript) 25 33 (part-side javascript) 33 37 (part-side javascript face web-mode-constant-face) 37 38 (part-side javascript)) . 52781) (undo-tree-id210 . -38) (undo-tree-id211 . -25) (undo-tree-id212 . -38) (undo-tree-id213 . -5) (undo-tree-id214 . -38)) nil (25828 33961 521309 385000) 0 nil])
([nil nil ((nil rear-nonsticky nil 52920 . 52921) (nil part-side javascript 52903 . 52921) (nil part-side javascript 52899 . 52903) (nil face web-mode-constant-face 52899 . 52903) (nil part-side javascript 52878 . 52899) (nil part-side javascript 52874 . 52878) (nil face web-mode-constant-face 52874 . 52878) (nil part-side javascript 52860 . 52874) (nil part-side javascript 52856 . 52860) (nil face web-mode-constant-face 52856 . 52860) (nil part-side javascript 52845 . 52856) (nil part-side javascript 52841 . 52845) (nil face web-mode-constant-face 52841 . 52845) (nil part-side javascript 52821 . 52841) (nil part-side javascript 52817 . 52821) (nil face web-mode-constant-face 52817 . 52821) (nil part-side javascript 52806 . 52817) (nil part-side javascript 52805 . 52806) (nil face (rainbow-delimiters-depth-4-face) 52805 . 52806) (nil part-side javascript 52804 . 52805) (nil face (rainbow-delimiters-depth-4-face) 52804 . 52805) (nil part-side javascript 52785 . 52804) (nil part-side javascript 52781 . 52785) (nil face web-mode-constant-face 52781 . 52785) (52781 . 52921)) nil (25828 33961 521295 991000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -52815) 52845) nil (25828 33961 521280 503000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -52852) 52880) nil (25828 33961 521279 188000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -52893) 52917) nil (25828 33961 521277 779000) 0 nil])
([nil nil ((#("this.tree_edit_drive = []
          this.filter_tree_edit = null
          this.tree_edit = !this.tree_edit
          this.max_folder_id = 0" 0 4 (part-side javascript face web-mode-constant-face) 4 23 (part-side javascript) 23 24 (part-side javascript face (rainbow-delimiters-depth-5-face)) 24 25 (part-side javascript face (rainbow-delimiters-depth-5-face)) 25 36 (part-side javascript) 36 40 (part-side javascript face web-mode-constant-face) 40 60 (part-side javascript) 60 64 (part-side javascript face web-mode-constant-face) 64 75 (part-side javascript) 75 79 (part-side javascript face web-mode-constant-face) 79 93 (part-side javascript) 93 97 (part-side javascript face web-mode-constant-face) 97 118 (part-side javascript) 118 122 (part-side javascript face web-mode-constant-face) 122 140 (part-side javascript)) . 37793) (undo-tree-id206 . -140) (undo-tree-id207 . -26) (undo-tree-id208 . -140) (undo-tree-id209 . -140)) nil (25828 33961 521276 93000) 0 nil])
([nil nil ((37793 . 37798)) nil (25828 33961 521270 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37809 . 37810) (nil part-side javascript 37809 . 37810) (nil face (rainbow-delimiters-depth-5-face) 37809 . 37810) (nil part-side javascript 37808 . 37809) (nil face (rainbow-delimiters-depth-5-face) 37808 . 37809) (nil part-side javascript 37798 . 37808) (nil face web-mode-function-call-face 37798 . 37808) (37798 . 37810)) nil (25828 33961 521268 629000) 0 nil])
([nil nil ((#("this.tree_edit_drive = []
          this.filter_tree_edit = null
          this.tree_edit = !this.tree_edit" 0 4 (part-side javascript face web-mode-constant-face) 4 23 (part-side javascript) 23 24 (part-side javascript face (rainbow-delimiters-depth-5-face)) 24 25 (part-side javascript face (rainbow-delimiters-depth-5-face)) 25 36 (part-side javascript) 36 40 (part-side javascript face web-mode-constant-face) 40 60 (part-side javascript) 60 64 (part-side javascript face web-mode-constant-face) 64 75 (part-side javascript) 75 79 (part-side javascript face web-mode-constant-face) 79 93 (part-side javascript) 93 97 (part-side javascript face web-mode-constant-face) 97 107 (part-side javascript)) . 37630) (undo-tree-id203 . -107) (undo-tree-id204 . -26) (undo-tree-id205 . -107)) nil (25828 33961 521265 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37641 . 37642) (nil part-side javascript 37641 . 37642) (nil face (rainbow-delimiters-depth-5-face) 37641 . 37642) (nil part-side javascript 37640 . 37641) (nil face (rainbow-delimiters-depth-5-face) 37640 . 37641) (nil part-side javascript 37630 . 37640) (nil face web-mode-function-call-face 37630 . 37640) (37630 . 37642)) nil (25828 33961 521253 494000) 0 nil])
([nil nil ((37630 . 37635)) nil (25828 33961 521244 885000) 0 nil])
([nil nil ((#("!this.tree_edit" 0 1 (part-side javascript) 1 5 (part-side javascript face web-mode-constant-face) 5 15 (part-side javascript)) . 52656) (undo-tree-id239 . -15) (undo-tree-id240 . -15) (t 25828 33961 566363 117000)) nil (25828 34003 938077 992000) 0 nil])
([nil nil ((52656 . 52662)) nil (25828 34003 938072 430000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -52661) (undo-tree-id238 . -1) 52662) nil (25828 34003 938066 468000) 0 nil])
([nil nil ((#("              <v-toolbar outlined flat class=\"mb-5\" dense>
" 14 15 (tag-name "v-toolbar" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 24 (tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-toolbar" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 26 32 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-attr-end 0 tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 33 34 (tag-name "v-toolbar" tag-type start) 34 35 (tag-attr-beg 0 tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 35 37 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-attr t tag-attr-end 0 tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-name "v-toolbar" tag-type start) 39 40 (tag-attr-beg 0 tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 40 44 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-equal-face) 45 50 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-attr t tag-attr-end 5 tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-name "v-toolbar" tag-type start) 52 53 (tag-attr-beg 0 tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 53 56 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-attr-end 0 tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-name-face) 57 58 (tag-name "v-toolbar" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14830) (14753 . 14830) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14694) (undo-tree-id253 . -76) (14771 . 14830) 14770 (t 25828 34003 978485 623000)) nil (25828 34220 167899 999000) 0 nil])
([nil nil ((#("                <v-icon left>mdi-harddisk</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 27 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 41 42 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 42 43 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 43 49 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 49 50 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14881) (14804 . 14881) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14753) (undo-tree-id252 . -76) (14830 . 14881) 14829) nil (25828 34220 167892 847000) 0 nil])
([nil nil ((#("                <v-toolbar-title>{{tree_edit_drive[1]}}</v-toolbar-title>
" 16 17 (tag-name "v-toolbar-title" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 17 32 (tag-name "v-toolbar-title" tag-type start font-lock-face web-mode-html-tag-custom-face) 32 33 (tag-name "v-toolbar-title" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 33 34 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg face (rainbow-delimiters-depth-1-face)) 34 35 (block-side t block-token delimiter-beg face (rainbow-delimiters-depth-2-face)) 35 36 (block-side t) 36 37 (block-side t) 37 38 (block-side t) 38 39 (block-side t) 39 40 (block-side t) 40 41 (block-side t) 41 42 (block-side t) 42 43 (block-side t) 43 44 (block-side t) 44 45 (block-side t) 45 46 (block-side t) 46 47 (block-side t) 47 48 (block-side t) 48 49 (block-side t) 49 50 (block-side t) 50 51 (block-side t face (rainbow-delimiters-depth-3-face)) 51 52 (block-side t) 52 53 (block-side t face (rainbow-delimiters-depth-3-face)) 53 54 (block-side t block-token delimiter-end face (rainbow-delimiters-depth-2-face)) 54 55 (block-side t block-end t block-token delimiter-end face (rainbow-delimiters-depth-1-face)) 55 56 (tag-name "v-toolbar-title" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-toolbar-title" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 72 (tag-name "v-toolbar-title" tag-type end font-lock-face web-mode-html-tag-custom-face) 72 73 (tag-name "v-toolbar-title" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14955) (14878 . 14955) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14804) (undo-tree-id251 . -76) (14881 . 14955) 14880) nil (25828 34220 167886 621000) 0 nil])
([nil nil ((#("                <v-spacer></v-spacer>
" 16 17 (tag-name "v-spacer" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 17 25 (tag-name "v-spacer" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-spacer" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "v-spacer" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "v-spacer" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 36 (tag-name "v-spacer" tag-type end font-lock-face web-mode-html-tag-custom-face) 36 37 (tag-name "v-spacer" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14993) (14916 . 14993) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14878) (undo-tree-id250 . -76) (14955 . 14993) 14954) nil (25828 34220 167880 406000) 0 nil])
([nil nil ((#("                <v-btn icon @click=\"new_folder_dialog=true\">
" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-btn" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-name "v-btn" tag-type start) 28 29 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start) 29 30 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start) 30 31 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 31 32 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 32 33 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 36 37 (block-side t tag-attr t tag-name "v-btn" tag-type start) 37 38 (block-side t tag-attr t tag-name "v-btn" tag-type start) 38 39 (block-side t tag-attr t tag-name "v-btn" tag-type start) 39 40 (block-side t tag-attr t tag-name "v-btn" tag-type start) 40 41 (block-side t tag-attr t tag-name "v-btn" tag-type start) 41 42 (block-side t tag-attr t tag-name "v-btn" tag-type start) 42 43 (block-side t tag-attr t tag-name "v-btn" tag-type start) 43 44 (block-side t tag-attr t tag-name "v-btn" tag-type start) 44 45 (block-side t tag-attr t tag-name "v-btn" tag-type start) 45 46 (block-side t tag-attr t tag-name "v-btn" tag-type start) 46 47 (block-side t tag-attr t tag-name "v-btn" tag-type start) 47 48 (block-side t tag-attr t tag-name "v-btn" tag-type start) 48 49 (block-side t tag-attr t tag-name "v-btn" tag-type start) 49 50 (block-side t tag-attr t tag-name "v-btn" tag-type start) 50 51 (block-side t tag-attr t tag-name "v-btn" tag-type start) 51 52 (block-side t tag-attr t tag-name "v-btn" tag-type start) 52 53 (block-side t tag-attr t tag-name "v-btn" tag-type start) 53 54 (block-side t tag-attr t tag-name "v-btn" tag-type start) 54 55 (block-side t tag-attr t tag-name "v-btn" tag-type start) 55 56 (block-side t tag-attr t tag-name "v-btn" tag-type start) 56 57 (block-side t tag-attr t tag-name "v-btn" tag-type start) 57 58 (block-side t tag-attr t tag-name "v-btn" tag-type start) 58 59 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start) 59 60 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15054) (14977 . 15054) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14916) (14993 . 15054) 14992) nil (25828 34220 167873 963000) 0 nil])
([nil nil ((#("                  <v-icon>mdi-folder-plus</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 41 42 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 42 43 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 43 49 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 49 50 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15105) (15028 . 15105) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14977) (undo-tree-id249 . -76) (15054 . 15105) 15053) nil (25828 34220 167869 400000) 0 nil])
([nil nil ((#("                </v-btn>
" 16 17 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15130) (15053 . 15130) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15028) (undo-tree-id248 . -76) (15105 . 15130) 15104) nil (25828 34220 167863 298000) 0 nil])
([nil nil ((#("                <v-btn icon @click=\"save_filter_tree()\">
" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-btn" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-name "v-btn" tag-type start) 28 29 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start) 29 30 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start) 30 31 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 31 32 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 32 33 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 36 52 (block-side t tag-attr t tag-name "v-btn" tag-type start) 52 54 (block-side t tag-attr t tag-name "v-btn" tag-type start) 54 55 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start) 55 56 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15187) (15110 . 15187) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15053) (undo-tree-id247 . -76) (15130 . 15187) 15129) nil (25828 34220 167857 71000) 0 nil])
([nil nil ((#("                  <v-icon>mdi-content-save-edit</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 48 49 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 49 55 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 55 56 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15244) (15167 . 15244) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15110) (undo-tree-id246 . -76) (15187 . 15244) 15186) nil (25828 34220 167850 729000) 0 nil])
([nil nil ((#("                </v-btn>
" 16 17 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15269) (15192 . 15269) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15167) (undo-tree-id245 . -76) (15244 . 15269) 15243) nil (25828 34220 167843 712000) 0 nil])
([nil nil ((#("                <v-btn icon @click=\"edit_switch(tree_edit_drive[0])\">
" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-btn" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-name "v-btn" tag-type start) 28 29 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start) 29 30 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start) 30 31 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 31 32 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 32 33 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start) 36 47 (block-side t tag-attr t tag-name "v-btn" tag-type start) 47 48 (block-side t tag-attr t tag-name "v-btn" tag-type start) 48 49 (block-side t tag-attr t tag-name "v-btn" tag-type start) 49 50 (block-side t tag-attr t tag-name "v-btn" tag-type start) 50 51 (block-side t tag-attr t tag-name "v-btn" tag-type start) 51 52 (block-side t tag-attr t tag-name "v-btn" tag-type start) 52 53 (block-side t tag-attr t tag-name "v-btn" tag-type start) 53 54 (block-side t tag-attr t tag-name "v-btn" tag-type start) 54 55 (block-side t tag-attr t tag-name "v-btn" tag-type start) 55 56 (block-side t tag-attr t tag-name "v-btn" tag-type start) 56 57 (block-side t tag-attr t tag-name "v-btn" tag-type start) 57 58 (block-side t tag-attr t tag-name "v-btn" tag-type start) 58 59 (block-side t tag-attr t tag-name "v-btn" tag-type start) 59 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start) 63 67 (block-side t tag-attr t tag-name "v-btn" tag-type start) 67 68 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start) 68 69 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15339) (15262 . 15339) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15192) (undo-tree-id244 . -76) (15269 . 15339) 15268) nil (25828 34220 167836 978000) 0 nil])
([nil nil ((#("                  <v-icon>mdi-close-circle-outline</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 50 51 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 51 52 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 52 58 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 58 59 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15399) (15322 . 15399) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15262) (undo-tree-id243 . -76) (15339 . 15399) 15338) nil (25828 34220 167829 322000) 0 nil])
([nil nil ((#("                </v-btn>
" 16 17 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15424) (15347 . 15424) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15322) (undo-tree-id242 . -76) (15399 . 15424) 15398) nil (25828 34220 167821 254000) 0 nil])
([nil nil ((#("              </v-toolbar>
" 14 15 (tag-name "v-toolbar" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-toolbar" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 25 (tag-name "v-toolbar" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-toolbar" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15451) (15374 . 15451) (#("            <v-container class=\"pa-3\" style=\"height:670px; overflow:auto;\" >
" 12 13 (tag-name "v-container" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 24 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-container" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-container" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 39 43 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 44 73 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-container" tag-type start) 75 76 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 15347) (undo-tree-id241 . -76) (15424 . 15451) 15423) nil (25828 34220 167812 735000) 0 nil])
([nil nil ((15386 . 15388) 15450) nil (25828 34220 167796 80000) 0 nil])
([nil nil (("  " . -15333) ("  " . -15312) ("  " . -15256) ("  " . -15186) ("  " . -15163) ("  " . -15110) ("  " . -15053) ("  " . -15030) ("  " . -14983) ("  " . -14922) ("  " . -14886) ("  " . -14814) ("  " . -14765) ("  " . -14706) 14694) nil (25828 34220 167777 141000) 0 nil])
([nil nil ((#("7" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -15401) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 15402 (t 25828 34220 223093 210000)) nil (25828 34249 877227 85000) 0 nil])
([nil nil ((15401 . 15402)) nil (25828 34249 877048 520000) 0 nil])
([nil nil ((14738 . 14748) (t 25828 34249 923174 807000)) nil (25828 34274 149775 186000) 0 nil])
([nil nil ((#("l" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14739) (undo-tree-id281 . -1) 14740 (t 25828 34274 219241 277000)) nil (25828 34349 130668 617000) 0 nil])
([nil nil ((14739 . 14740)) nil (25828 34349 130665 349000) 0 nil])
([nil nil ((#("l" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14744) (undo-tree-id280 . -1) 14745) nil (25828 34349 130663 735000) 0 nil])
([nil nil ((14744 . 14745)) nil (25828 34349 130659 876000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14747) (undo-tree-id279 . -1) (#("-" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14747) (#("b" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14747) (#("m" 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14747) (#(" " 0 1 (tag-attr t tag-name "v-toolbar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14747)) nil (25828 34349 130653 332000) 0 nil])
([nil nil ((37647 . 37658) (37614 . 37625) (37570 . 37581) (37520 . 37531) (37456 . 37458) (37456 . 37618) (#("if (this.tree_edit && this.filter_tree_edit != sub_tree) {
          console.log(this.filter_tree_edit)
          console.log('EDIT detected')
          this.reset_tree()
        }" 0 2 (part-side javascript face web-mode-keyword-face) 2 3 (part-side javascript) 3 4 (part-side javascript face (rainbow-delimiters-depth-4-face)) 4 8 (part-side javascript face web-mode-constant-face) 8 22 (part-side javascript) 22 26 (part-side javascript face web-mode-constant-face) 26 55 (part-side javascript) 55 56 (part-side javascript face (rainbow-delimiters-depth-4-face)) 56 57 (part-side javascript) 57 58 (part-side javascript face (rainbow-delimiters-depth-4-face)) 58 59 (part-side javascript) 59 77 (part-side javascript) 77 80 (part-side javascript face web-mode-function-call-face) 80 81 (part-side javascript face (rainbow-delimiters-depth-5-face)) 81 85 (part-side javascript face web-mode-constant-face) 85 102 (part-side javascript) 102 103 (part-side javascript face (rainbow-delimiters-depth-5-face)) 103 122 (part-side javascript) 122 125 (part-side javascript face web-mode-function-call-face) 125 126 (part-side javascript face (rainbow-delimiters-depth-5-face)) 126 127 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 127 140 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 140 141 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 141 142 (part-side javascript face (rainbow-delimiters-depth-5-face)) 142 153 (part-side javascript) 153 157 (part-side javascript face web-mode-constant-face) 157 158 (part-side javascript) 158 168 (part-side javascript face web-mode-function-call-face) 168 169 (part-side javascript face (rainbow-delimiters-depth-5-face)) 169 170 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face)) 170 171 (part-side javascript) 171 179 (part-side javascript) 179 180 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 37456) (undo-tree-id284 . -180) (undo-tree-id285 . -59) (undo-tree-id286 . -153) (undo-tree-id287 . -153) (undo-tree-id288 . -180) (undo-tree-id289 . -180) (t 25828 34349 187444 946000)) nil (25828 34499 880919 223000) 0 nil])
([nil nil ((#("else " 0 4 (part-side javascript face web-mode-keyword-face) 4 5 (part-side javascript)) . 37673) (undo-tree-id282 . -5) (undo-tree-id283 . -5)) nil (25828 34499 880905 416000) 0 nil])
([nil nil ((#("!this.tree_edit" 0 1 (part-side javascript) 1 5 (part-side javascript face web-mode-constant-face) 5 15 (part-side javascript)) . 37910) (undo-tree-id291 . -15) (undo-tree-id292 . -15) (t 25828 34499 927848 844000)) nil (25828 34508 782871 530000) 0 nil])
([nil nil ((37910 . 37915)) nil (25828 34508 782866 600000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -37914) (undo-tree-id290 . -1) 37915) nil (25828 34508 782860 772000) 0 nil])
([nil nil ((36272 . 36283) (t 25828 34508 831872 499000)) nil (25828 44628 716082 501000) 0 nil])
([nil nil ((36283 . 36304)) nil (25828 44628 716081 241000) 0 nil])
([nil nil ((36304 . 36305)) nil (25828 44628 716079 953000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -36301) (undo-tree-id505 . -1) (#("d" 0 1 (part-side javascript)) . -36302) (undo-tree-id506 . -1) (#("t" 0 1 (part-side javascript)) . -36303) (undo-tree-id507 . -1) (#(" " 0 1 (part-side javascript)) . -36304) (undo-tree-id508 . -1) 36305) nil (25828 44628 716077 987000) 0 nil])
([nil nil ((36301 . 36305)) nil (25828 44628 716072 73000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36304) (undo-tree-id504 . -1) 36305) nil (25828 44628 716070 817000) 0 nil])
([nil nil ((36304 . 36306)) nil (25828 44628 716068 556000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -36304) (undo-tree-id502 . -1) (#("," 0 1 (part-side javascript)) . -36305) (undo-tree-id503 . -1) 36306) nil (25828 44628 716067 43000) 0 nil])
([nil nil ((36304 . 36308)) nil (25828 44628 716062 369000) 0 nil])
([nil nil ((36305 . 36312) (#("for" 0 3 (part-side javascript)) . -36305) (undo-tree-id500 . -3) (undo-tree-id501 . -3) 36308) nil (25828 44628 716061 12000) 0 nil])
([nil nil ((36312 . 36314) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -36312) (36312 . 36313)) nil (25828 44628 716057 21000) 0 nil])
([nil nil ((36324 . 36326) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -36324) (36313 . 36325)) nil (25828 44628 716055 389000) 0 nil])
([nil nil ((36328 . 36338) (#("            " 0 12 (part-side javascript face whitespace-trailing)) . 36327) (undo-tree-id496 . -10) (undo-tree-id497 . 12) (36337 . 36339) (36327 . 36338) (#("            " 0 12 (part-side javascript face whitespace-trailing)) . 36326) (undo-tree-id498 . -10) (undo-tree-id499 . 12) (36336 . 36338) (36325 . 36337)) nil (25828 44628 716053 183000) 0 nil])
([nil nil ((36327 . 36339)) nil (25828 44628 716046 688000) 0 nil])
([nil nil ((36326 . 36338)) nil (25828 44628 716045 752000) 0 nil])
([nil nil ((35925 . 35932)) nil (25828 44628 716044 831000) 0 nil])
([nil nil ((35932 . 35938)) nil (25828 44628 716043 910000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -35936) (undo-tree-id494 . -1) (#("e" 0 1 (part-side javascript)) . -35937) (undo-tree-id495 . -1) 35938) nil (25828 44628 716042 490000) 0 nil])
([nil nil ((35936 . 35947)) nil (25828 44628 716025 956000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -35940) (undo-tree-id487 . -1) (#("r" 0 1 (part-side javascript)) . -35941) (undo-tree-id488 . -1) (#("e" 0 1 (part-side javascript)) . -35942) (undo-tree-id489 . -1) (#("e" 0 1 (part-side javascript)) . -35943) (undo-tree-id490 . -1) (#("_" 0 1 (part-side javascript)) . -35944) (undo-tree-id491 . -1) (#("n" 0 1 (part-side javascript)) . -35945) (undo-tree-id492 . -1) (#("a" 0 1 (part-side javascript)) . -35946) (undo-tree-id493 . -1) 35947) nil (25828 44628 716023 558000) 0 nil])
([nil nil ((35940 . 35943)) nil (25828 44628 716013 919000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -35942) (undo-tree-id486 . -1) 35943) nil (25828 44628 716012 596000) 0 nil])
([nil nil ((35942 . 35946)) nil (25828 44628 716010 453000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 35955) (35954 . 35955) (35953 . 35955) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35953) (35946 . 35954)) nil (25828 44628 716009 11000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35952) (undo-tree-id483 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35953) (undo-tree-id484 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35954) (undo-tree-id485 . -1) 35955) nil (25828 44628 716006 594000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 35954) (35953 . 35954) (35952 . 35954) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35952) (35952 . 35953)) nil (25828 44628 716001 331000) 0 nil])
([nil nil ((35953 . 35957)) nil (25828 44628 715999 608000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -35953) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("r" 0 1 (part-side javascript)) . -35954) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("e" 0 1 (part-side javascript)) . -35955) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("e" 0 1 (part-side javascript)) . -35956) (undo-tree-id481 . -1) (undo-tree-id482 . -1) 35957) nil (25828 44628 715997 300000) 0 nil])
([nil nil ((35953 . 35965)) nil (25828 44628 715983 308000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35964) (undo-tree-id471 . -1) 35965) nil (25828 44628 715982 151000) 0 nil])
([nil nil ((35966 . 35968) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -35966) (35965 . 35967)) nil (25828 44628 715979 360000) 0 nil])
([nil nil ((35970 . 35976) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 35969) (35969 . 35977) (#("      " 0 6 (part-side javascript)) . 35969) (undo-tree-id468 . -6) (35969 . 35976) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 35968) (undo-tree-id469 . 8) (35968 . 35976) (#("      " 0 6 (part-side javascript)) . 35968) (undo-tree-id470 . -6) (35967 . 35975)) nil (25828 44628 715976 842000) 0 nil])
([nil nil ((35969 . 35977)) nil (25828 44628 715971 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36008 . 36009) (nil part-side javascript 36008 . 36009) (nil face (rainbow-delimiters-depth-5-face) 36008 . 36009) (nil part-side javascript 36004 . 36008) (nil part-side javascript 35997 . 36004) (nil face web-mode-function-name-face 35997 . 36004) (nil part-side javascript 35996 . 35997) (nil face (rainbow-delimiters-depth-4-face) 35996 . 35997) (nil part-side javascript 35989 . 35996) (nil face web-mode-function-call-face 35989 . 35996) (nil part-side javascript 35977 . 35989) (35977 . 36009)) nil (25828 44628 715969 520000) 0 nil])
([nil nil ((36009 . 36011)) nil (25828 44628 715966 179000) 0 nil])
([nil nil ((36011 . 36019) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 36010) (undo-tree-id466 . -8) (undo-tree-id467 . 10) (36018 . 36020) (36009 . 36019)) nil (25828 44628 715964 786000) 0 nil])
([nil nil ((#("          this.filter_tree_edit.forEach(element => {
            
            
          })" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 32 (part-side javascript) 32 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-5-face)) 40 47 (part-side javascript face web-mode-function-name-face) 47 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-6-face)) 52 53 (part-side javascript) 53 65 (part-side javascript face whitespace-trailing) 65 66 (part-side javascript) 66 78 (part-side javascript face whitespace-trailing) 78 89 (part-side javascript) 89 90 (part-side javascript face (rainbow-delimiters-depth-6-face)) 90 91 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 36377) (undo-tree-id463 . -91) (undo-tree-id464 . -53) (undo-tree-id465 . -91)) nil (25828 44628 715960 706000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -36376) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) 36377) nil (25828 44628 715956 475000) 0 nil])
([nil nil ((36376 . 36387)) nil (25828 44628 715941 256000) 0 nil])
([nil nil ((36387 . 36408)) nil (25828 44628 715940 256000) 0 nil])
([nil nil ((36408 . 36412)) nil (25828 44628 715939 290000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36411) (undo-tree-id459 . -1) 36412) nil (25828 44628 715937 954000) 0 nil])
([nil nil ((36411 . 36414)) nil (25828 44628 715935 802000) 0 nil])
([nil nil ((36405 . 36425) (#("get_new_f" 0 9 (part-side javascript)) . -36405) (undo-tree-id456 . -5) (undo-tree-id457 . -9) (undo-tree-id458 . -9) 36414) nil (25828 44628 715934 396000) 0 nil])
([nil nil ((36427 . 36428) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36427) (36426 . 36427) (36425 . 36427) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -36425) (36425 . 36426)) nil (25828 44628 715929 349000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36427) (undo-tree-id455 . -1) 36428) nil (25828 44628 715927 176000) 0 nil])
([nil nil ((36426 . 36447)) nil (25828 44628 715924 925000) 0 nil])
([nil nil ((36447 . 36448)) nil (25828 44628 715923 922000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36447) (undo-tree-id454 . -1) 36448) nil (25828 44628 715922 737000) 0 nil])
([nil nil ((36010 . 36020)) nil (25828 44628 715920 486000) 0 nil])
([nil nil ((35968 . 35976)) nil (25828 44628 715919 601000) 0 nil])
([nil nil ((35964 . 35976)) nil (25828 44628 715918 679000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35975) (undo-tree-id453 . -1) 35976) nil (25828 44628 715917 341000) 0 nil])
([nil nil ((35987 . 35993)) nil (25828 44628 715915 228000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -35988) (undo-tree-id448 . -1) (#("n" 0 1 (part-side javascript)) . -35989) (undo-tree-id449 . -1) (#("s" 0 1 (part-side javascript)) . -35990) (undo-tree-id450 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -35991) (undo-tree-id451 . -1) (#(" " 0 1 (part-side javascript)) . -35992) (undo-tree-id452 . -1) 35993) nil (25828 44628 715913 384000) 0 nil])
([nil nil ((35988 . 35989)) nil (25828 44628 715906 422000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -35987) (undo-tree-id446 . -1) (#("v" 0 1 (part-side javascript)) . -35988) (undo-tree-id447 . -1) 35989) nil (25828 44628 715905 22000) 0 nil])
([nil nil ((35987 . 35991)) nil (25828 44628 715901 666000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -35988) (undo-tree-id443 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -35989) (undo-tree-id444 . -1) (#(" " 0 1 (part-side javascript)) . -35990) (undo-tree-id445 . -1) 35991) nil (25828 44628 715900 5000) 0 nil])
([nil nil ((35988 . 35989)) nil (25828 44628 715895 299000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35986) (undo-tree-id440 . -1) (#("v" 0 1 (part-side javascript)) . -35987) (undo-tree-id441 . -1) (#("æ" 0 1 (part-side javascript)) . -35988) (undo-tree-id442 . -1) 35989) nil (25828 44628 715893 744000) 0 nil])
([nil nil ((35986 . 35990)) nil (25828 44628 715889 206000) 0 nil])
([nil nil ((#("æ" 0 1 (part-side javascript)) . -35986) (undo-tree-id436 . -1) (#("e" 0 1 (part-side javascript)) . -35987) (undo-tree-id437 . -1) (#("t" 0 1 (part-side javascript)) . -35988) (undo-tree-id438 . -1) (#(" " 0 1 (part-side javascript)) . -35989) (undo-tree-id439 . -1) 35990) nil (25828 44628 715887 67000) 0 nil])
([nil nil ((35986 . 35989)) nil (25828 44628 715880 929000) 0 nil])
([nil nil ((35979 . 35987) (#("       " 0 7 (part-side javascript)) . 35979) 35989) nil (25828 44628 715879 614000) 0 nil])
([nil nil ((35990 . 36005)) nil (25828 44628 715878 89000) 0 nil])
([nil nil ((36005 . 36015)) nil (25828 44628 715877 66000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36014) (undo-tree-id435 . -1) 36015) nil (25828 44628 715875 884000) 0 nil])
([nil nil ((36014 . 36023)) nil (25828 44628 715873 824000) 0 nil])
([nil nil ((36023 . 36027)) nil (25828 44628 715872 871000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -36026) (undo-tree-id434 . -1) 36027) nil (25828 44628 715871 672000) 0 nil])
([nil nil ((36041 . 36043) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -36041) (36026 . 36042)) nil (25828 44628 715869 187000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36298 . 36299) (nil part-side javascript 36298 . 36299) (nil face (rainbow-delimiters-depth-6-face) 36298 . 36299) (nil part-side javascript 36285 . 36298) (nil part-side javascript 36284 . 36285) (nil face (rainbow-delimiters-depth-7-face) 36284 . 36285) (nil part-side javascript 36272 . 36284) (nil part-side javascript 36271 . 36272) (nil face (rainbow-delimiters-depth-7-face) 36271 . 36272) (nil part-side javascript 36267 . 36271) (nil face web-mode-function-call-face 36267 . 36271) (nil part-side javascript 36248 . 36267) (nil part-side javascript 36247 . 36248) (nil face (rainbow-delimiters-depth-6-face) 36247 . 36248) (nil part-side javascript 36246 . 36247) (nil part-side javascript 36242 . 36246) (nil face web-mode-keyword-face 36242 . 36246) (nil part-side javascript 36229 . 36242) (nil part-side javascript 36228 . 36229) (nil face (rainbow-delimiters-depth-6-face) 36228 . 36229) (nil part-side javascript 36215 . 36228) (nil part-side javascript 36214 . 36215) (nil face (rainbow-delimiters-depth-7-face) 36214 . 36215) (nil part-side javascript 36213 . 36214) (nil face (rainbow-delimiters-depth-8-face) 36213 . 36214) (nil part-side javascript 36197 . 36213) (nil part-side javascript 36196 . 36197) (nil face (rainbow-delimiters-depth-8-face) 36196 . 36197) (nil part-side javascript 36178 . 36196) (nil face web-mode-function-call-face 36178 . 36196) (nil part-side javascript 36177 . 36178) (nil part-side javascript 36173 . 36177) (nil face web-mode-constant-face 36173 . 36177) (nil part-side javascript 36172 . 36173) (nil face (rainbow-delimiters-depth-7-face) 36172 . 36173) (nil part-side javascript 36166 . 36172) (nil face web-mode-function-call-face 36166 . 36172) (nil part-side javascript 36141 . 36166) (nil part-side javascript 36140 . 36141) (nil face (rainbow-delimiters-depth-6-face) 36140 . 36141) (nil part-side javascript 36139 . 36140) (nil part-side javascript 36138 . 36139) (nil face (rainbow-delimiters-depth-6-face) 36138 . 36139) (nil part-side javascript 36111 . 36138) (nil part-side javascript 36110 . 36111) (nil face (rainbow-delimiters-depth-6-face) 36110 . 36111) (nil part-side javascript 36109 . 36110) (nil part-side javascript 36107 . 36109) (nil face web-mode-keyword-face 36107 . 36109) (nil part-side javascript 36095 . 36107) (36095 . 36299)) nil (25828 44628 715865 113000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -36095) 36123) nil (25828 44628 715852 442000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36142) 36169) nil (25828 44628 715851 102000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36212) 36215) nil (25828 44628 715849 737000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36224) 36232) nil (25828 44628 715848 505000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36243) 36267) nil (25828 44628 715847 270000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36276) 36279) nil (25828 44628 715845 965000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -36226) (undo-tree-id431 . -1) (#("e" 0 1 (part-side javascript face web-mode-keyword-face)) . -36227) (undo-tree-id432 . -1) (#(" " 0 1 (part-side javascript)) . -36228) (undo-tree-id433 . -1) 36229) nil (25828 44628 715844 168000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36234) (36233 . 36234) (36232 . 36234) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -36232) (36226 . 36233)) nil (25828 44628 715838 939000) 0 nil])
([nil nil ((36233 . 36235)) nil (25828 44628 715836 925000) 0 nil])
([nil nil ((36234 . 36242)) nil (25828 44628 715835 960000) 0 nil])
([nil nil ((36243 . 36251)) nil (25828 44628 715834 962000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -36244) (undo-tree-id424 . -1) (#("o" 0 1 (part-side javascript)) . -36245) (undo-tree-id425 . -1) (#("t" 0 1 (part-side javascript)) . -36246) (undo-tree-id426 . -1) (#(" " 0 1 (part-side javascript)) . -36247) (undo-tree-id427 . -1) (#("i" 0 1 (part-side javascript)) . -36248) (undo-tree-id428 . -1) (#("n" 0 1 (part-side javascript face web-mode-keyword-face)) . -36249) (undo-tree-id429 . -1) (#(" " 0 1 (part-side javascript)) . -36250) (undo-tree-id430 . -1) 36251) nil (25828 44628 715832 375000) 0 nil])
([nil nil ((36084 . 36095)) nil (25828 44628 715822 626000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36122 . 36123) (nil part-side javascript 36122 . 36123) (nil face (rainbow-delimiters-depth-6-face) 36122 . 36123) (nil part-side javascript 36121 . 36122) (nil part-side javascript 36120 . 36121) (nil face (rainbow-delimiters-depth-6-face) 36120 . 36121) (nil part-side javascript 36112 . 36120) (nil part-side javascript 36110 . 36112) (nil face web-mode-keyword-face 36110 . 36112) (nil part-side javascript 36109 . 36110) (nil part-side javascript 36108 . 36109) (nil part-token string 36108 . 36109) (nil syntax-table (15) 36108 . 36109) (nil font-lock-face web-mode-javascript-string-face 36108 . 36109) (nil part-side javascript 36100 . 36108) (nil part-token string 36100 . 36108) (nil font-lock-face web-mode-javascript-string-face 36100 . 36108) (nil part-side javascript 36099 . 36100) (nil part-token string 36099 . 36100) (nil syntax-table (15) 36099 . 36100) (nil font-lock-face web-mode-javascript-string-face 36099 . 36100) (nil part-side javascript 36098 . 36099) (nil face (rainbow-delimiters-depth-6-face) 36098 . 36099) (nil part-side javascript 36097 . 36098) (nil part-side javascript 36095 . 36097) (nil face web-mode-keyword-face 36095 . 36097) (36095 . 36123)) nil (25828 44628 715820 349000) 0 nil])
([nil nil ((36252 . 36265)) nil (25828 44628 715814 277000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -36263) (36265 . 36266)) nil (25828 44628 715813 167000) 0 nil])
([nil nil ((36134 . 36136) 36135) nil (25828 44628 715811 753000) 0 nil])
([nil nil ((36253 . 36255) 36254) nil (25828 44628 715810 382000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36283) (#(" " 0 1 (part-side javascript)) . 36283) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 36283) (#("n" 0 1 (part-side javascript)) . 36283) (#("e" 0 1 (part-side javascript)) . 36283) (undo-tree-id423 . -1) (#("r" 0 1 (part-side javascript)) . 36283) (#("d" 0 1 (part-side javascript)) . 36283) (#("l" 0 1 (part-side javascript)) . 36283) (#("i" 0 1 (part-side javascript)) . 36283) (#("h" 0 1 (part-side javascript)) . 36283) (#("c" 0 1 (part-side javascript)) . 36283) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 36283) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 36283) (#(" " 0 1 (part-side javascript)) . 36283) (#("f" 0 1 (part-side javascript face web-mode-function-name-face)) . 36283) (#("i" 0 1 (part-side javascript face web-mode-function-name-face)) . 36283) (#(" " 0 1 (part-side javascript)) . 36283)) nil (25828 44628 715806 707000) 0 nil])
([nil nil ((36283 . 36284)) nil (25828 44628 715801 412000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -36299) (undo-tree-id402 . -1) (#("s" 0 1 (part-side javascript)) . -36300) (undo-tree-id403 . -1) (#("." 0 1 (part-side javascript)) . -36301) (undo-tree-id404 . -1) (#("p" 0 1 (part-side javascript)) . -36302) (undo-tree-id405 . -1) (#("u" 0 1 (part-side javascript)) . -36303) (undo-tree-id406 . -1) (#("s" 0 1 (part-side javascript)) . -36304) (undo-tree-id407 . -1) (#("h" 0 1 (part-side javascript)) . -36305) (undo-tree-id408 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36306) (undo-tree-id409 . -1) (#("e" 0 1 (part-side javascript)) . -36307) (undo-tree-id410 . -1) (#("l" 0 1 (part-side javascript)) . -36308) (undo-tree-id411 . -1) (#("e" 0 1 (part-side javascript)) . -36309) (undo-tree-id412 . -1) (#("m" 0 1 (part-side javascript)) . -36310) (undo-tree-id413 . -1) (#("e" 0 1 (part-side javascript)) . -36311) (undo-tree-id414 . -1) (#("n" 0 1 (part-side javascript)) . -36312) (undo-tree-id415 . -1) (#("t" 0 1 (part-side javascript)) . -36313) (undo-tree-id416 . -1) (#("." 0 1 (part-side javascript)) . -36314) (undo-tree-id417 . -1) (#("n" 0 1 (part-side javascript)) . -36315) (undo-tree-id418 . -1) (#("a" 0 1 (part-side javascript)) . -36316) (undo-tree-id419 . -1) (#("m" 0 1 (part-side javascript)) . -36317) (undo-tree-id420 . -1) (#("e" 0 1 (part-side javascript)) . -36318) (undo-tree-id421 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36319) (undo-tree-id422 . -1) 36320) nil (25828 44628 715796 669000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36298) (undo-tree-id401 . -1) 36299) nil (25828 44628 715768 526000) 0 nil])
([nil nil ((36298 . 36310)) nil (25828 44628 715766 167000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36309) (undo-tree-id400 . -1) 36310) nil (25828 44628 715764 913000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36316) (36315 . 36316) (36314 . 36316) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36314) (36309 . 36315)) nil (25828 44628 715761 972000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36317) (36316 . 36317) (36315 . 36317) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . -36315) (36315 . 36316)) nil (25828 44628 715759 543000) 0 nil])
([nil nil ((36316 . 36323)) nil (25828 44628 715757 675000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -36316) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("i" 0 1 (part-side javascript)) . -36317) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("l" 0 1 (part-side javascript)) . -36318) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("t" 0 1 (part-side javascript)) . -36319) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("e" 0 1 (part-side javascript)) . -36320) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("r" 0 1 (part-side javascript)) . -36321) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#("_" 0 1 (part-side javascript)) . -36322) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 36323) nil (25828 44628 715754 585000) 0 nil])
([nil nil ((36316 . 36337)) nil (25828 44628 715738 255000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36336) (undo-tree-id385 . -1) 36337) nil (25828 44628 715736 700000) 0 nil])
([nil nil ((36285 . 36298)) nil (25828 44628 715734 311000) 0 nil])
([nil nil ((36298 . 36302)) nil (25828 44628 715733 233000) 0 nil])
([nil nil ((36302 . 36309)) nil (25828 44628 715732 181000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -36305) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("n" 0 1 (part-side javascript)) . -36306) (undo-tree-id382 . -1) (#("e" 0 1 (part-side javascript)) . -36307) (undo-tree-id383 . -1) (#(" " 0 1 (part-side javascript)) . -36308) (undo-tree-id384 . -1) 36309) nil (25828 44628 715729 793000) 0 nil])
([nil nil ((36305 . 36324)) nil (25828 44628 715694 781000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36323) (undo-tree-id378 . -1) 36324) nil (25828 44628 715693 588000) 0 nil])
([nil nil ((36323 . 36326)) nil (25828 44628 715691 175000) 0 nil])
([nil nil ((36325 . 36326)) nil (25828 44628 715689 852000) 0 nil])
([nil nil ((36327 . 36341)) nil (25828 44628 715688 826000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36340) (undo-tree-id377 . -1) 36341) nil (25828 44628 715687 578000) 0 nil])
([nil nil ((36183 . 36185)) nil (25828 44628 715685 105000) 0 nil])
([nil nil ((#("res.concat(this.check_empty_folder(element.children))" 0 4 (part-side javascript) 4 10 (part-side javascript face web-mode-function-call-face) 10 11 (part-side javascript face (rainbow-delimiters-depth-8-face)) 11 15 (part-side javascript face web-mode-constant-face) 15 16 (part-side javascript) 16 34 (part-side javascript face web-mode-function-call-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-9-face)) 35 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-9-face)) 52 53 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 36191) (undo-tree-id374 . -53) (undo-tree-id375 . -53) (undo-tree-id376 . -53)) nil (25828 44628 715683 564000) 0 nil])
([nil nil ((36209 . 36211) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . -36209) (36191 . 36210)) nil (25828 44628 715678 707000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36185) (undo-tree-id371 . -1) (#("e" 0 1 (part-side javascript)) . -36186) (undo-tree-id372 . -1) (#("s" 0 1 (part-side javascript)) . -36187) (undo-tree-id373 . -1) 36188) nil (25828 44628 715676 397000) 0 nil])
([nil nil ((36185 . 36196)) nil (25828 44628 715671 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36261 . 36262) (nil part-side javascript 36261 . 36262) (nil face (rainbow-delimiters-depth-9-face) 36261 . 36262) (nil part-side javascript 36239 . 36261) (nil part-side javascript 36238 . 36239) (nil face (rainbow-delimiters-depth-9-face) 36238 . 36239) (nil part-side javascript 36218 . 36238) (nil face web-mode-function-call-face 36218 . 36238) (36218 . 36262)) nil (25828 44628 715670 276000) 0 nil])
([nil nil ((#("filter_tree" 0 11 (part-side javascript)) . 36239) (undo-tree-id369 . -11) (undo-tree-id370 . -11)) nil (25828 44628 715667 277000) 0 nil])
([nil nil ((36239 . 36252)) nil (25828 44628 715664 186000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -36250) (undo-tree-id367 . -1) (#("l" 0 1 (part-side javascript)) . -36251) (undo-tree-id368 . -1) 36252) nil (25828 44628 715662 545000) 0 nil])
([nil nil ((36250 . 36256)) nil (25828 44628 715658 885000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36255) (undo-tree-id366 . -1) 36256) nil (25828 44628 715657 527000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . 36256) (#("m" 0 1 (part-side javascript)) . 36256) (#("a" 0 1 (part-side javascript)) . 36256) (#("n" 0 1 (part-side javascript)) . 36256) (#("_" 0 1 (part-side javascript)) . 36256) (#("t" 0 1 (part-side javascript)) . 36256) (#("o" 0 1 (part-side javascript)) . 36256) (#("o" 0 1 (part-side javascript)) . 36256) (#("r" 0 1 (part-side javascript)) . 36256) (#(" " 0 1 (part-side javascript)) . 36256)) nil (25828 44628 715654 104000) 0 nil])
([nil nil ((36256 . 36257)) nil (25828 44628 715651 38000) 0 nil])
([nil nil ((36170 . 36185)) nil (25828 44628 715650 73000) 0 nil])
([nil nil ((36185 . 36189)) nil (25828 44628 715649 135000) 0 nil])
([nil nil ((36189 . 36197)) nil (25828 44628 715648 85000) 0 nil])
([nil nil ((#("w" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36196) (undo-tree-id365 . -1) 36197) nil (25828 44628 715646 670000) 0 nil])
([nil nil ((36196 . 36210)) nil (25828 44628 715644 292000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36200) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("o" 0 1 (part-side javascript)) . -36201) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("o" 0 1 (part-side javascript)) . -36202) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("t" 0 1 (part-side javascript)) . -36203) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("_" 0 1 (part-side javascript)) . -36204) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("n" 0 1 (part-side javascript)) . -36205) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("a" 0 1 (part-side javascript)) . -36206) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("m" 0 1 (part-side javascript)) . -36207) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("e" 0 1 (part-side javascript)) . -36208) (undo-tree-id363 . -1) (#(" " 0 1 (part-side javascript)) . -36209) (undo-tree-id364 . -1) 36210) nil (25828 44628 715640 632000) 0 nil])
([nil nil ((#("filter_name" 0 11 (part-side javascript)) . 36359) (undo-tree-id342 . -11) (undo-tree-id343 . -11)) nil (25828 44628 715614 531000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36367 . 36368) (nil part-side javascript 36359 . 36368) (36359 . 36368)) nil (25828 44628 715611 486000) 0 nil])
([nil nil ((#("filter_name" 0 11 (part-side javascript)) . 36425) (undo-tree-id340 . -11) (undo-tree-id341 . -11)) nil (25828 44628 715609 835000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36450 . 36451) (nil part-side javascript 36438 . 36451) (nil part-side javascript 36437 . 36438) (nil part-token string 36437 . 36438) (nil syntax-table (15) 36437 . 36438) (nil font-lock-face web-mode-javascript-string-face 36437 . 36438) (nil part-side javascript 36436 . 36437) (nil part-token string 36436 . 36437) (nil font-lock-face web-mode-javascript-string-face 36436 . 36437) (nil part-side javascript 36435 . 36436) (nil part-token string 36435 . 36436) (nil syntax-table (15) 36435 . 36436) (nil font-lock-face web-mode-javascript-string-face 36435 . 36436) (nil part-side javascript 36434 . 36435) (nil rear-nonsticky t 36433 . 36434) (nil part-side javascript 36433 . 36434) (nil part-side javascript 36425 . 36433) (36425 . 36451)) nil (25828 44628 715605 875000) 0 nil])
([nil nil ((#("
            filter_name = root_name+'/'+element.name" 0 1 (part-side javascript) 1 24 (part-side javascript) 24 26 (part-side javascript) 26 27 (part-side javascript) 27 35 (part-side javascript) 35 36 (rear-nonsticky t part-side javascript) 36 37 (part-side javascript) 37 38 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 38 39 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 39 40 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 40 53 (part-side javascript)) . 36332) (undo-tree-id334 . -53) (undo-tree-id335 . -1) (undo-tree-id336 . -27) (undo-tree-id337 . -27) (undo-tree-id338 . -53) (undo-tree-id339 . -53)) nil (25828 44628 715600 747000) 0 nil])
([nil nil ((#("        let filter_name = root_name" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-keyword-face) 11 12 (part-side javascript) 12 23 (part-side javascript face web-mode-variable-name-face) 23 25 (part-side javascript) 25 35 (part-side javascript)) . 35979) (undo-tree-id331 . -35) (undo-tree-id332 . -35) (undo-tree-id333 . -35)) nil (25828 44628 715592 284000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -35978) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) 35979) nil (25828 44628 715587 273000) 0 nil])
([nil nil ((36164 . 36165)) nil (25828 44628 715581 835000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36164) (undo-tree-id326 . -1) 36165) nil (25828 44628 715580 625000) 0 nil])
([nil nil ((36134 . 36149)) nil (25828 44628 715578 365000) 0 nil])
([nil nil ((36149 . 36153)) nil (25828 44628 715577 352000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -36150) (undo-tree-id323 . -1) (#("f" 0 1 (part-side javascript)) . -36151) (undo-tree-id324 . -1) (#(" " 0 1 (part-side javascript)) . -36152) (undo-tree-id325 . -1) 36153) nil (25828 44628 715575 740000) 0 nil])
([nil nil ((36150 . 36162)) nil (25828 44628 715571 9000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36161) (undo-tree-id322 . -1) 36162) nil (25828 44628 715569 633000) 0 nil])
([nil nil ((36161 . 36162)) nil (25828 44628 715567 272000) 0 nil])
([nil nil ((36152 . 36154) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . -36152) (36152 . 36153)) nil (25828 44628 715566 55000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 36153)) nil (25828 44628 715564 393000) 0 nil])
([nil nil ((36164 . 36166) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . -36164) (36163 . 36165)) nil (25828 44628 715563 195000) 0 nil])
([nil nil ((36165 . 36180)) nil (25828 44628 715561 611000) 0 nil])
([nil nil ((36167 . 36181) (#("                " 0 16 (part-side javascript face whitespace-trailing)) . 36166) (undo-tree-id320 . 16) (36166 . 36182) (#("              " 0 14 (part-side javascript)) . 36166) (undo-tree-id321 . -14) (36180 . 36181)) nil (25828 44628 715559 974000) 0 nil])
([nil nil ((36211 . 36220)) nil (25828 44628 715555 365000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -36217) (undo-tree-id317 . -1) (#("n" 0 1 (part-side javascript)) . -36218) (undo-tree-id318 . -1) (#("m" 0 1 (part-side javascript)) . -36219) (undo-tree-id319 . -1) 36220) nil (25828 44628 715553 452000) 0 nil])
([nil nil ((36217 . 36224)) nil (25828 44628 715548 584000) 0 nil])
([nil nil ((#("+" 0 1 (part-side javascript)) . -36222) (undo-tree-id315 . -1) (#(" " 0 1 (part-side javascript face whitespace-trailing)) . -36223) (undo-tree-id316 . -1) 36224) nil (25828 44628 715547 131000) 0 nil])
([nil nil ((36222 . 36237)) nil (25828 44628 715543 604000) 0 nil])
([nil nil ((36237 . 36238)) nil (25828 44628 715542 730000) 0 nil])
([nil nil ((36237 . 36238)) nil (25828 44628 715541 854000) 0 nil])
([nil nil ((36239 . 36243)) nil (25828 44628 715540 980000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -36240) (undo-tree-id312 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -36241) (undo-tree-id313 . -1) (#(" " 0 1 (part-side javascript face whitespace-trailing)) . -36242) (undo-tree-id314 . -1) 36243) nil (25828 44628 715539 369000) 0 nil])
([nil nil ((36240 . 36257)) nil (25828 44628 715533 199000) 0 nil])
([nil nil ((36257 . 36270)) nil (25828 44628 715532 140000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript face whitespace-trailing)) . -36269) (undo-tree-id311 . -1) 36270) nil (25828 44628 715530 691000) 0 nil])
([nil nil ((#("              if (root_name) {

              }" 0 14 (part-side javascript) 14 16 (part-side javascript face web-mode-keyword-face) 16 17 (part-side javascript) 17 18 (part-side javascript face (rainbow-delimiters-depth-8-face)) 18 27 (part-side javascript) 27 28 (part-side javascript face (rainbow-delimiters-depth-8-face)) 28 29 (part-side javascript) 29 30 (part-side javascript face (rainbow-delimiters-depth-8-face)) 30 31 (part-side javascript) 31 46 (part-side javascript) 46 47 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 36135) (undo-tree-id308 . -47) (undo-tree-id309 . -31) (undo-tree-id310 . -47)) nil (25828 44628 715527 811000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -36134) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 36135) nil (25828 44628 715522 711000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36221) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 36222) nil (25828 44628 715513 123000) 0 nil])
([nil nil ((36308 . 36315) (t 25828 44628 765093 220000)) nil (25828 44642 49851 728000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36314) (undo-tree-id510 . -1) 36315) nil (25828 44642 49849 867000) 0 nil])
([nil nil ((36450 . 36459)) nil (25828 44642 49846 624000) 0 nil])
([nil nil ((36459 . 36478)) nil (25828 44642 49844 951000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36477) (undo-tree-id509 . -1) 36478) nil (25828 44642 49839 639000) 0 nil])
([nil nil ((36485 . 36486) (t 25828 44642 101128 828000)) nil (25828 44656 154756 276000) 0 nil])
([nil nil ((#("
          this.$emit('restruct_tree', [this.tree_edit_drive, this.filter_tree_edit])" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 15 (part-side javascript face web-mode-constant-face) 15 21 (part-side javascript) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 23 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 23 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 39 (part-side javascript) 39 40 (part-side javascript face (rainbow-delimiters-depth-6-face)) 40 44 (part-side javascript face web-mode-constant-face) 44 62 (part-side javascript) 62 66 (part-side javascript face web-mode-constant-face) 66 83 (part-side javascript) 83 84 (part-side javascript face (rainbow-delimiters-depth-6-face)) 84 85 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 36905) (undo-tree-id582 . -85) (undo-tree-id583 . -1) (t 25828 44656 205166 552000)) nil (25828 47154 839608 10000) 0 nil])
([nil nil ((41316 . 41324)) nil (25828 47154 839604 936000) 0 nil])
([nil nil ((41324 . 41326)) nil (25828 47154 839604 44000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -41324) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("e" 0 1 (part-side javascript)) . -41325) (undo-tree-id580 . -1) (undo-tree-id581 . -1) 41326) nil (25828 47154 839602 579000) 0 nil])
([nil nil ((41324 . 41330)) nil (25828 47154 839596 524000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -41324) (undo-tree-id572 . -1) (#("o" 0 1 (part-side javascript)) . -41325) (undo-tree-id573 . -1) (#("n" 0 1 (part-side javascript)) . -41326) (undo-tree-id574 . -1) (#("s" 0 1 (part-side javascript)) . -41327) (undo-tree-id575 . -1) (#("t" 0 1 (part-side javascript)) . -41328) (undo-tree-id576 . -1) (#(" " 0 1 (part-side javascript)) . -41329) (undo-tree-id577 . -1) 41330) nil (25828 47154 839594 390000) 0 nil])
([nil nil ((41344 . 41346) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -41344) (41344 . 41345) (41343 . 41345) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -41343) (41324 . 41344)) nil (25828 47154 839586 41000) 0 nil])
([nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -41343) (undo-tree-id571 . -1) 41344) nil (25828 47154 839583 888000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -41345) (undo-tree-id570 . -1) 41346) nil (25828 47154 839581 552000) 0 nil])
([nil nil ((41344 . 41360)) nil (25828 47154 839579 381000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -41359) (undo-tree-id569 . -1) 41360) nil (25828 47154 839578 163000) 0 nil])
([nil nil ((#("filter.id, name" 0 15 (part-side javascript)) . 41394) (undo-tree-id567 . -15) (undo-tree-id568 . -15)) nil (25828 47154 839575 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 41403 . 41404) (nil part-side javascript 41394 . 41404) (41394 . 41404)) nil (25828 47154 839572 804000) 0 nil])
([nil nil ((#("
        console.log(filter)" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 27 (part-side javascript) 27 28 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 41287) (undo-tree-id564 . -28) (undo-tree-id565 . -1) (undo-tree-id566 . -28)) nil (25828 47166 971018 936000) 0 nil])
([nil nil ((36905 . 36916) (t 25828 47168 180024 77000)) nil (25828 47292 629427 531000) 0 nil] [nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -36005) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -36006) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 36007) ((36005 . 36007)) (25828 47165 571775 975000) 0 nil])
([nil nil ((36916 . 36923)) nil (25828 47292 629426 294000) 0 nil])
([nil nil ((36005 . 36007) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -36005) (36005 . 36006)) ((#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 36005) (36005 . 36006) (#("{}" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 36005)) (25828 47165 192596 918000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -36921) (undo-tree-id761 . -1) (#("f" 0 1 (part-side javascript)) . -36922) (undo-tree-id762 . -1) 36923) nil (25828 47292 629424 648000) 0 nil])
([nil nil ((#(".push" 0 1 (part-side javascript) 1 5 (part-side javascript face web-mode-function-call-face)) . 36383) (undo-tree-id558 . -5) (undo-tree-id559 . -5)) ((36383 . 36388)) (25828 47164 875898 803000) 0 nil])
([nil nil ((36921 . 36935)) nil (25828 47292 629421 110000) 0 nil])
([nil nil ((36383 . 36385) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36383) (36383 . 36384)) ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 36383) (36383 . 36384) (#("()" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 36383) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2)) (25828 47164 405123 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36995 . 36996) (nil part-side javascript 36995 . 36996) (nil part-side javascript 36994 . 36995) (nil face (rainbow-delimiters-depth-5-face) 36994 . 36995) (nil part-side javascript 36993 . 36994) (nil face (rainbow-delimiters-depth-6-face) 36993 . 36994) (nil part-side javascript 36992 . 36993) (nil face (rainbow-delimiters-depth-7-face) 36992 . 36993) (nil part-side javascript 36991 . 36992) (nil face (rainbow-delimiters-depth-8-face) 36991 . 36992) (nil part-side javascript 36984 . 36991) (nil face web-mode-variable-name-face 36984 . 36991) (nil part-side javascript 36980 . 36984) (nil part-side javascript 36979 . 36980) (nil face (rainbow-delimiters-depth-9-face) 36979 . 36980) (nil part-side javascript 36975 . 36979) (nil part-side javascript 36974 . 36975) (nil face (rainbow-delimiters-depth-9-face) 36974 . 36975) (nil part-side javascript 36973 . 36974) (nil face (rainbow-delimiters-depth-8-face) 36973 . 36974) (nil part-side javascript 36972 . 36973) (nil face (rainbow-delimiters-depth-7-face) 36972 . 36973) (nil part-side javascript 36968 . 36972) (nil part-side javascript 36967 . 36968) (nil face (rainbow-delimiters-depth-7-face) 36967 . 36968) (nil part-side javascript 36966 . 36967) (nil part-side javascript 36965 . 36966) (nil face (rainbow-delimiters-depth-7-face) 36965 . 36966) (nil part-side javascript 36964 . 36965) (nil face (rainbow-delimiters-depth-6-face) 36964 . 36965) (nil part-side javascript 36961 . 36964) (nil face web-mode-function-call-face 36961 . 36964) (nil part-side javascript 36951 . 36961) (nil part-side javascript 36950 . 36951) (nil face (rainbow-delimiters-depth-6-face) 36950 . 36951) (nil part-side javascript 36949 . 36950) (nil face (rainbow-delimiters-depth-6-face) 36949 . 36950) (nil part-side javascript 36948 . 36949) (nil face (rainbow-delimiters-depth-5-face) 36948 . 36949) (nil part-side javascript 36942 . 36948) (nil face web-mode-function-call-face 36942 . 36948) (nil part-side javascript 36935 . 36942) (36935 . 36996)) nil (25828 47292 629418 36000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36383) (undo-tree-id556 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36384) (undo-tree-id557 . -1) 36385) ((36383 . 36385)) (25828 47163 852619 245000) 0 nil])
([nil nil ((#("d" 0 1 (part-side javascript)) . -36956) (undo-tree-id757 . -1) (#("a" 0 1 (part-side javascript)) . -36957) (undo-tree-id758 . -1) (#("t" 0 1 (part-side javascript)) . -36958) (undo-tree-id759 . -1) (#("a" 0 1 (part-side javascript)) . -36959) (undo-tree-id760 . -1) 36960) nil (25828 47292 629407 586000) 0 nil])
([nil nil ((36383 . 36385) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36383) (36383 . 36384)) ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 36383) (36383 . 36384) (#("[]" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 36383) (undo-tree-id705 . -2) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2)) (25828 47163 284621 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36964 . 36965) (nil part-side javascript 36956 . 36965) (36956 . 36965)) nil (25828 47292 629401 89000) 0 nil])
([nil nil ((36385 . 36386)) ((#(" " 0 1 (part-side javascript)) . 36385) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1)) (25828 47162 888806 439000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -36981) (undo-tree-id754 . -1) (#("i" 0 1 (part-side javascript)) . -36982) (undo-tree-id755 . -1) (#("d" 0 1 (part-side javascript)) . -36983) (undo-tree-id756 . -1) 36984) nil (25828 47292 629398 898000) 0 nil])
([nil nil ((36386 . 36388)) ((#("= " 0 1 (part-side javascript) 1 2 (part-side javascript)) . 36386)) (25828 47162 552717 509000) 0 nil])
([nil nil ((36982 . 36983) (36981 . 36983) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -36981) (36981 . 36982)) nil (25828 47292 629392 812000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36390 . 36391) (nil part-side javascript 36384 . 36391) (36384 . 36391)) ((#("element" 0 6 (part-side javascript) 6 7 (rear-nonsticky nil part-side javascript)) . 36384) (undo-tree-id671 . -7) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -7) (undo-tree-id675 . -7) (undo-tree-id676 . -7) (undo-tree-id677 . -7) (undo-tree-id678 . -7) (undo-tree-id679 . -7) (undo-tree-id680 . -7) (undo-tree-id681 . -7) (undo-tree-id682 . -7) (undo-tree-id683 . -7) (undo-tree-id684 . -7) (undo-tree-id685 . -7) (undo-tree-id686 . -7) (undo-tree-id687 . -7) (undo-tree-id688 . -7) (undo-tree-id689 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (nil rear-nonsticky t 36390 . 36391)) (25828 47162 199114 81000) 0 nil])
([nil nil ((#("y" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("r" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("n" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("u" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("o" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . 36988) (#("." 0 1 (part-side javascript)) . 36988)) nil (25828 47292 629388 485000) 0 nil])
([nil nil ((36391 . 36395)) ((#(".id " 0 3 (part-side javascript) 3 4 (part-side javascript)) . 36391) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4)) (25828 47161 961651 430000) 0 nil])
([nil nil ((36989 . 36990) (36988 . 36990) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-9-face))) . -36988) (36988 . 36989)) nil (25828 47292 629378 769000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36394) (undo-tree-id555 . -1) 36395) ((36394 . 36395)) (25828 47161 683606 699000) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t part-side javascript)) . -36995) (undo-tree-id753 . -1) 36996) nil (25828 47292 629371 548000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -36398) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-8-face))) . -36399) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("e" 0 1 (part-side javascript)) . -36400) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("l" 0 1 (part-side javascript)) . -36401) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("e" 0 1 (part-side javascript)) . -36402) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("m" 0 1 (part-side javascript)) . -36403) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("e" 0 1 (part-side javascript)) . -36404) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("n" 0 1 (part-side javascript)) . -36405) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("t" 0 1 (part-side javascript)) . -36406) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("," 0 1 (part-side javascript)) . -36407) (undo-tree-id554 . -1) 36408) ((36398 . 36408)) (25828 47161 458307 245000) 0 nil])
([nil nil ((36995 . 37006)) nil (25828 47292 629365 402000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -36425) (undo-tree-id534 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -36426) (undo-tree-id535 . -1) 36427) ((36425 . 36427)) (25828 47161 68742 70000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 37019) (37018 . 37019) (37017 . 37019) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -37017) (37006 . 37018)) nil (25828 47292 629362 197000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36397) (undo-tree-id532 . -1) (undo-tree-id533 . -1) 36398) ((36397 . 36398)) (25828 47160 751701 292000) 0 nil])
([nil nil ((37018 . 37029)) nil (25828 47292 629357 470000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36273 . 36274) (nil part-side javascript 36273 . 36274) (nil part-side javascript 36272 . 36273) (nil face (rainbow-delimiters-depth-8-face) 36272 . 36273) (nil part-side javascript 36269 . 36272) (nil part-side javascript 36268 . 36269) (nil face web-mode-variable-name-face 36268 . 36269) (nil part-side javascript 36266 . 36268) (nil part-side javascript 36265 . 36266) (nil face (rainbow-delimiters-depth-9-face) 36265 . 36266) (nil part-side javascript 36264 . 36265) (nil face (rainbow-delimiters-depth-9-face) 36264 . 36265) (nil part-side javascript 36263 . 36264) (nil face (rainbow-delimiters-depth-8-face) 36263 . 36264) (nil part-side javascript 36257 . 36263) (nil face web-mode-function-call-face 36257 . 36263) (nil part-side javascript 36250 . 36257) (36250 . 36274)) ((#("Object.assign({}, a, b);" 0 7 (part-side javascript) 7 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-8-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-9-face)) 15 16 (part-side javascript face (rainbow-delimiters-depth-9-face)) 16 18 (part-side javascript) 18 19 (part-side javascript face web-mode-variable-name-face) 19 21 (part-side javascript) 21 22 (part-side javascript) 22 23 (part-side javascript face (rainbow-delimiters-depth-8-face)) 23 24 (rear-nonsticky nil part-side javascript)) . 36250) (undo-tree-id655 . -18) (undo-tree-id656 . -24) (undo-tree-id657 . -23) (undo-tree-id658 . -21) (undo-tree-id659 . -24) (undo-tree-id660 . -24) (undo-tree-id661 . -24) (nil face (rainbow-delimiters-depth-8-face) 36263 . 36264) (nil face (rainbow-delimiters-depth-9-face) 36264 . 36265) (nil face (rainbow-delimiters-depth-9-face) 36265 . 36266) (nil face (rainbow-delimiters-depth-8-face) 36272 . 36273) (nil rear-nonsticky t 36273 . 36274)) (25828 47160 482278 775000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -37028) (undo-tree-id752 . -1) 37029) nil (25828 47292 629350 164000) 0 nil])
([nil nil ((36274 . 36275)) ((#(" " 0 1 (part-side javascript)) . 36274) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1)) (25828 47160 177087 266000) 0 nil])
([nil nil ((41449 . 41450) (t 25828 47292 684370 631000)) nil (25828 47314 914854 48000) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t part-side javascript)) . -36273) (undo-tree-id530 . -1) (#(" " 0 1 (part-side javascript)) . -36274) (undo-tree-id531 . -1) 36275) ((36273 . 36275)) (25828 47159 892421 726000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -41440) (undo-tree-id775 . -1) (#("i" 0 1 (part-side javascript)) . -41441) (undo-tree-id776 . -1) (#("l" 0 1 (part-side javascript)) . -41442) (undo-tree-id777 . -1) (#("t" 0 1 (part-side javascript)) . -41443) (undo-tree-id778 . -1) (#("e" 0 1 (part-side javascript)) . -41444) (undo-tree-id779 . -1) (#("r" 0 1 (part-side javascript)) . -41445) (undo-tree-id780 . -1) (#("." 0 1 (part-side javascript)) . -41446) (undo-tree-id781 . -1) (#("i" 0 1 (part-side javascript)) . -41447) (undo-tree-id782 . -1) (#("d" 0 1 (part-side javascript)) . -41448) (undo-tree-id783 . -1) (#(" " 0 1 (part-side javascript)) . -41449) (undo-tree-id784 . -1) (#(":" 0 1 (part-side javascript)) . -41450) (undo-tree-id785 . -1) (#(" " 0 1 (part-side javascript)) . -41451) (undo-tree-id786 . -1) (#("n" 0 1 (part-side javascript)) . -41452) (undo-tree-id787 . -1) (#("a" 0 1 (part-side javascript)) . -41453) (undo-tree-id788 . -1) (#("m" 0 1 (part-side javascript)) . -41454) (undo-tree-id789 . -1) (#("e" 0 1 (part-side javascript)) . -41455) (undo-tree-id790 . -1) 41456 (t 25828 47314 964432 701000)) nil (25828 47374 956519 358000) 0 nil])
([nil nil ((36273 . 36274)) ((#(" " 0 1 (part-side javascript)) . 36273) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1)) (25828 47159 602669 791000) 0 nil])
([nil nil ((41441 . 41450)) nil (25828 47374 956497 25000) 0 nil])
([nil nil ((#("filter_list.concat(get_new_filter_names(element.children, n_root))" 0 12 (part-side javascript) 12 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-8-face)) 19 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-9-face)) 40 48 (part-side javascript) 48 56 (part-side javascript face web-mode-variable-name-face) 56 64 (part-side javascript) 64 65 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-9-face)) 65 66 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 36274) (undo-tree-id528 . -66) (undo-tree-id529 . -66)) ((36274 . 36340)) (25828 47159 343246 556000) 0 nil])
([nil nil ((41450 . 41456)) nil (25828 47374 956495 894000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36273) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 36274) ((36273 . 36274)) (25828 47158 976853 700000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -41455) (undo-tree-id774 . -1) 41456) nil (25828 47374 956494 653000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript)) . -36271) (undo-tree-id525 . -1) 36272) ((36271 . 36272)) (25828 47158 814799 29000) 0 nil])
([nil nil ((41455 . 41458)) nil (25828 47374 956492 245000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36336 . 36337) (nil part-side javascript 36336 . 36337) (nil face (rainbow-delimiters-depth-9-face) 36336 . 36337) (nil rear-nonsticky t 36335 . 36336) (nil part-side javascript 36335 . 36336) (nil face (rainbow-delimiters-depth-1-face) 36335 . 36336) (nil part-side javascript 36327 . 36335) (nil part-side javascript 36319 . 36327) (nil face web-mode-variable-name-face 36319 . 36327) (nil part-side javascript 36311 . 36319) (nil part-side javascript 36310 . 36311) (nil face (rainbow-delimiters-depth-1-face) 36310 . 36311) (nil part-side javascript 36290 . 36310) (nil face web-mode-function-call-face 36290 . 36310) (nil part-side javascript 36289 . 36290) (nil face (rainbow-delimiters-depth-9-face) 36289 . 36290) (nil part-side javascript 36283 . 36289) (nil face web-mode-function-call-face 36283 . 36289) (nil part-side javascript 36271 . 36283) (36271 . 36337)) ((#("filter_list.concat(get_new_filter_names(element.children, n_root))" 0 12 (part-side javascript) 12 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-9-face)) 19 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-1-face)) 40 48 (part-side javascript) 48 56 (part-side javascript face web-mode-variable-name-face) 56 64 (part-side javascript) 64 65 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-1-face)) 65 66 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-9-face))) . 36271) (nil face (rainbow-delimiters-depth-9-face) 36289 . 36290) (nil face (rainbow-delimiters-depth-1-face) 36310 . 36311) (nil face (rainbow-delimiters-depth-1-face) 36335 . 36336) (nil rear-nonsticky nil 36335 . 36336) (nil face (rainbow-delimiters-depth-9-face) 36336 . 36337) (nil rear-nonsticky t 36336 . 36337)) (25828 47158 341827 85000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -41456) (undo-tree-id772 . -1) (#("o" 0 1 (part-side javascript)) . -41457) (undo-tree-id773 . -1) 41458) nil (25828 47374 956490 638000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36268) (undo-tree-id524 . -1) 36269) ((36268 . 36269)) (25828 47158 110985 802000) 0 nil])
([nil nil ((41461 . 41470) (41460 . 41462) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -41460) (41456 . 41461)) nil (25828 47374 956486 17000) 0 nil])
([nil nil ((36268 . 36278)) ((#("filter_obj" 0 10 (part-side javascript face web-mode-variable-name-face)) . 36268) (undo-tree-id616 . -8)) (25828 47157 862399 476000) 0 nil])
([nil nil ((41471 . 41479)) nil (25828 47374 956483 624000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript face web-mode-variable-name-face)) . -35998) (undo-tree-id520 . -1) (#("i" 0 1 (part-side javascript face web-mode-variable-name-face)) . -35999) (undo-tree-id521 . -1) (#("s" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36000) (undo-tree-id522 . -1) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36001) (undo-tree-id523 . -1) 36002) ((35998 . 36002)) (25828 47157 668303 530000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -41478) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 41479) nil (25828 47374 956477 825000) 0 nil])
([nil nil ((35998 . 36000)) ((#("bj" 0 1 (part-side javascript face web-mode-variable-name-face) 1 2 (part-side javascript face web-mode-variable-name-face)) . 35998) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2)) (25828 47156 741456 430000) 0 nil])
([nil nil ((36862 . 36867) (t 25828 47375 12600 61000)) nil (25828 47425 935497 769000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript face web-mode-variable-name-face)) . -35998) (undo-tree-id518 . -1) (#("j" 0 1 (part-side javascript face web-mode-variable-name-face)) . -35999) (undo-tree-id519 . -1) 36000) ((35998 . 36000)) (25828 47156 365605 669000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript face web-mode-function-call-face)) . -36866) (undo-tree-id792 . -1) 36867) nil (25828 47425 935495 643000) 0 nil])
([nil nil ((35998 . 36001)) ((#("obj" 0 3 (part-side javascript face web-mode-variable-name-face)) . 35998) (undo-tree-id585 . -3) (undo-tree-id586 . -3)) (25828 47156 74550 361000) 0 nil])
([nil nil ((36866 . 36867)) nil (25828 47425 935492 321000) 0 nil])
([nil nil ((#("filter_list" 0 11 (part-side javascript)) . 36235) (undo-tree-id516 . -11) (undo-tree-id517 . -11)) ((36235 . 36246)) (25828 47155 707410 412000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -36866) (undo-tree-id791 . -1) 36867) nil (25828 47425 935489 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36244 . 36245) (nil part-side javascript 36235 . 36245) (36235 . 36245)) ((#("filter_obj" 0 9 (part-side javascript) 9 10 (rear-nonsticky nil part-side javascript)) . 36235) (nil rear-nonsticky t 36244 . 36245)) (25828 47155 457980 99000) 0 nil])
([nil nil ((36866 . 36867)) nil (25828 47425 935472 109000) 0 nil])
([nil nil ((#("filter_list" 0 11 (part-side javascript)) . 36401) (undo-tree-id513 . -11) (undo-tree-id514 . -11) (undo-tree-id515 . -11)) ((36401 . 36412)) (25828 47155 170645 970000) 0 nil])
([nil nil ((36269 . 36274) (t 25828 47425 984742 202000)) nil (25828 47434 372740 686000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36410 . 36411) (nil part-side javascript 36401 . 36411) (36401 . 36411)) ((#("filter_obj" 0 9 (part-side javascript) 9 10 (rear-nonsticky nil part-side javascript)) . 36401) (nil rear-nonsticky t 36410 . 36411)) (25828 47154 959355 233000) 0 nil])
([nil nil ((36914 . 36921) (t 25828 47434 420765 732000)) nil (25828 47496 652813 432000) 0 nil])
([nil nil ((#("filter_list" 0 11 (part-side javascript)) . 36491) (undo-tree-id511 . -11) (undo-tree-id512 . -11)) ((36491 . 36502)) (25828 47154 841174 257000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36920) (undo-tree-id793 . -1) 36921) nil (25828 47496 652807 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36500 . 36501) (nil part-side javascript 36491 . 36501) (36491 . 36501)) ((#("filter_obj" 0 9 (part-side javascript) 9 10 (rear-nonsticky nil part-side javascript)) . 36491) (undo-tree-id584 . -10) (nil rear-nonsticky t 36500 . 36501)) (25828 47154 839436 721000) 0 nil])
([nil nil ((36921 . 36932) (t 25828 47496 700939 511000)) nil (25828 47513 45917 263000) 0 nil])
nil
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 36945) (36944 . 36945) (36943 . 36945) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -36943) (36932 . 36944)) nil (25828 47513 45915 622000) 0 nil])
([nil nil ((36945 . 36954) (nil part-token string 36945 . 36946) (nil font-lock-face web-mode-javascript-string-face 36945 . 36946) (nil part-side javascript 36945 . 36946) (36944 . 36946) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -36944) (36944 . 36945)) nil (25828 47513 45913 383000) 0 nil])
([nil nil ((36955 . 36967)) nil (25828 47513 45911 159000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36966) (undo-tree-id796 . -1) 36967) nil (25828 47635 316323 656000) 0 nil])
([nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -37043) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 37044) (#("0" 0 1 (part-side javascript)) . -37044) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -37045) (undo-tree-id833 . -1) 37046 (t 25828 47529 933032 265000)) nil (25828 47641 735752 490000) 0 nil] [nil nil ((#("Object.assign({}, ...new_names.map((x) => ({[x[0]]: x[1]})))" 0 7 (part-side javascript) 7 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-6-face)) 15 16 (part-side javascript face (rainbow-delimiters-depth-6-face)) 16 21 (part-side javascript) 21 29 (part-side javascript) 29 30 (rear-nonsticky t part-side javascript) 30 31 (part-side javascript) 31 34 (part-side javascript face web-mode-function-call-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-6-face)) 35 36 (part-side javascript face (rainbow-delimiters-depth-7-face)) 36 37 (part-side javascript) 37 38 (part-side javascript face (rainbow-delimiters-depth-7-face)) 38 42 (part-side javascript) 42 43 (part-side javascript face (rainbow-delimiters-depth-7-face)) 43 44 (part-side javascript face (rainbow-delimiters-depth-8-face)) 44 45 (part-side javascript face (rainbow-delimiters-depth-9-face)) 45 46 (part-side javascript) 46 47 (part-side javascript face (rainbow-delimiters-depth-1-face)) 47 48 (part-side javascript) 48 49 (part-side javascript face (rainbow-delimiters-depth-1-face)) 49 50 (part-side javascript face (rainbow-delimiters-depth-9-face)) 50 52 (part-side javascript) 52 53 (part-side javascript) 53 54 (part-side javascript face (rainbow-delimiters-depth-9-face)) 54 55 (part-side javascript) 55 56 (part-side javascript face (rainbow-delimiters-depth-9-face)) 56 57 (part-side javascript face (rainbow-delimiters-depth-8-face)) 57 58 (part-side javascript face (rainbow-delimiters-depth-7-face)) 58 59 (part-side javascript face (rainbow-delimiters-depth-6-face)) 59 60 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 36997) (undo-tree-id800 . -60) (undo-tree-id801 . -21) (undo-tree-id802 . -60) (t 25828 47529 933032 265000)) ((36997 . 37057)) (25828 47634 918537 757000) 0 nil] [nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-9-face))) . -37041) (undo-tree-id794 . -1) (undo-tree-id795 . -1) 37042) ((37041 . 37042)) (25828 47524 262221 341000) 0 nil])
([nil nil ((37043 . 37047)) nil (25828 47641 735742 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37044 . 37045) (nil part-side javascript 37044 . 37045) (nil part-side javascript 37043 . 37044) (nil face (rainbow-delimiters-depth-5-face) 37043 . 37044) (nil part-side javascript 37042 . 37043) (nil face (rainbow-delimiters-depth-6-face) 37042 . 37043) (nil part-side javascript 37041 . 37042) (nil face (rainbow-delimiters-depth-7-face) 37041 . 37042) (nil part-side javascript 37037 . 37041) (nil part-side javascript 37036 . 37037) (nil face (rainbow-delimiters-depth-7-face) 37036 . 37037) (nil part-side javascript 37032 . 37036) (nil part-side javascript 37031 . 37032) (nil face (rainbow-delimiters-depth-7-face) 37031 . 37032) (nil part-side javascript 37030 . 37031) (nil face (rainbow-delimiters-depth-8-face) 37030 . 37031) (nil part-side javascript 37026 . 37030) (nil part-side javascript 37025 . 37026) (nil face (rainbow-delimiters-depth-8-face) 37025 . 37026) (nil part-side javascript 37024 . 37025) (nil face (rainbow-delimiters-depth-7-face) 37024 . 37025) (nil part-side javascript 37023 . 37024) (nil face (rainbow-delimiters-depth-6-face) 37023 . 37024) (nil part-side javascript 37020 . 37023) (nil face web-mode-function-call-face 37020 . 37023) (nil part-side javascript 37016 . 37020) (nil part-side javascript 37015 . 37016) (nil face (rainbow-delimiters-depth-5-face) 37015 . 37016) (nil part-side javascript 37004 . 37015) (nil face web-mode-function-call-face 37004 . 37015) (nil part-side javascript 36997 . 37004) (36997 . 37045)) ((#("Object.fromEntries(arr.map(([v, k]) => [k, v]));" 0 7 (part-side javascript) 7 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-5-face)) 19 20 (part-side javascript) 20 21 (part-side javascript) 21 22 (part-side javascript) 22 23 (part-side javascript) 23 26 (part-side javascript face web-mode-function-call-face) 26 27 (part-side javascript face (rainbow-delimiters-depth-6-face)) 27 28 (part-side javascript face (rainbow-delimiters-depth-7-face)) 28 29 (part-side javascript face (rainbow-delimiters-depth-8-face)) 29 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-8-face)) 34 35 (part-side javascript face (rainbow-delimiters-depth-7-face)) 35 39 (part-side javascript) 39 40 (part-side javascript face (rainbow-delimiters-depth-7-face)) 40 44 (part-side javascript) 44 45 (part-side javascript face (rainbow-delimiters-depth-7-face)) 45 46 (part-side javascript face (rainbow-delimiters-depth-6-face)) 46 47 (part-side javascript face (rainbow-delimiters-depth-5-face)) 47 48 (rear-nonsticky nil part-side javascript)) . 36997) (undo-tree-id805 . -19) (undo-tree-id806 . -19) (undo-tree-id807 . -22) (undo-tree-id808 . -19) (undo-tree-id809 . -19) (undo-tree-id810 . -19) (undo-tree-id811 . -19) (undo-tree-id812 . -19) (undo-tree-id813 . -19) (undo-tree-id814 . -19) (undo-tree-id815 . -19) (undo-tree-id816 . -22) (undo-tree-id817 . -22) (undo-tree-id818 . -22) (undo-tree-id819 . -22) (undo-tree-id820 . -22) (undo-tree-id821 . -22) (undo-tree-id822 . -22) (undo-tree-id823 . -22) (undo-tree-id824 . -22) (undo-tree-id825 . -22) (undo-tree-id826 . -22) (undo-tree-id827 . -22) (nil face (rainbow-delimiters-depth-5-face) 37015 . 37016) (nil face (rainbow-delimiters-depth-6-face) 37023 . 37024) (nil face (rainbow-delimiters-depth-7-face) 37024 . 37025) (nil face (rainbow-delimiters-depth-8-face) 37025 . 37026) (nil face (rainbow-delimiters-depth-8-face) 37030 . 37031) (nil face (rainbow-delimiters-depth-7-face) 37031 . 37032) (nil face (rainbow-delimiters-depth-7-face) 37036 . 37037) (nil face (rainbow-delimiters-depth-7-face) 37041 . 37042) (nil face (rainbow-delimiters-depth-6-face) 37042 . 37043) (nil face (rainbow-delimiters-depth-5-face) 37043 . 37044) (nil rear-nonsticky t 37044 . 37045)) (25828 47634 565242 769000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 37045)) ((37045 . 37046) (t 25828 47513 100985 284000)) (25828 47513 45889 746000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -37046) (undo-tree-id828 . -1) 37047) nil (25828 47649 141435 903000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -37016) (undo-tree-id797 . -1) (#("r" 0 1 (part-side javascript)) . -37017) (undo-tree-id798 . -1) (#("r" 0 1 (part-side javascript)) . -37018) (undo-tree-id799 . -1) 37019) ((37016 . 37019)) (25828 47634 286862 874000) 0 nil])
nil
([nil nil ((37046 . 37047) (t 25828 47641 781344 638000)) nil (25828 47656 696549 706000) 0 nil] [nil nil ((37044 . 37045) (37043 . 37045) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -37043) (37043 . 37044) (t 25828 47641 781344 638000)) ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 37043) (37043 . 37044) (#("[]" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 37043) (#("0" 0 1 (part-side javascript)) . 37044)) (25828 47649 136623 637000) 0 nil])
([nil nil ((37016 . 37025)) ((#("new_names" 0 9 (part-side javascript)) . 37016) (undo-tree-id803 . -5) (undo-tree-id804 . -8)) (25828 47634 284229 999000) 0 nil])
([nil nil ((37044 . 37045) (37043 . 37045) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -37043) (37043 . 37044)) nil (25828 47719 581996 142000) 0 nil])
nil
nil
([nil nil ((36364 . 36377) (t 25828 47656 741386 429000)) nil (25828 47741 474911 304000) 0 nil] [nil nil ((36007 . 36016) (t 25828 47656 741386 429000)) ((#("
        " 0 1 (part-side javascript) 1 9 (part-side javascript)) . 36007) (undo-tree-id870 . -9) (undo-tree-id871 . -9) (undo-tree-id872 . -9) (undo-tree-id873 . -1) (undo-tree-id874 . -9) (undo-tree-id875 . -9) (undo-tree-id876 . -9) (undo-tree-id877 . -9) (undo-tree-id878 . -9) (undo-tree-id879 . -9) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) (undo-tree-id888 . -9) (undo-tree-id889 . -9) (undo-tree-id890 . -9) (undo-tree-id891 . -9) (undo-tree-id892 . -9) (undo-tree-id893 . -9) (undo-tree-id894 . -9) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (undo-tree-id897 . -9) (undo-tree-id898 . -9) (undo-tree-id899 . -9) (undo-tree-id900 . -9) (undo-tree-id901 . -9) (undo-tree-id902 . -9) (undo-tree-id903 . -9) (undo-tree-id904 . -9) (undo-tree-id905 . -9) (undo-tree-id906 . -9) (undo-tree-id907 . -1) (undo-tree-id908 . -9) (undo-tree-id909 . -9) (undo-tree-id910 . -9) (undo-tree-id911 . -9) (undo-tree-id912 . -9) (undo-tree-id913 . -9) (undo-tree-id914 . -9) (undo-tree-id915 . -9) (undo-tree-id916 . -9) (undo-tree-id917 . -9) (undo-tree-id918 . -9) (undo-tree-id919 . -9)) (25828 47719 152837 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36448 . 36449) (nil part-side javascript 36436 . 36449) (nil part-side javascript 36434 . 36436) (nil part-side javascript 36421 . 36434) (nil part-side javascript 36419 . 36421) (nil part-side javascript 36418 . 36419) (nil part-token string 36418 . 36419) (nil syntax-table (15) 36418 . 36419) (nil font-lock-face web-mode-javascript-string-face 36418 . 36419) (nil part-side javascript 36417 . 36418) (nil part-token string 36417 . 36418) (nil font-lock-face web-mode-javascript-string-face 36417 . 36418) (nil part-side javascript 36416 . 36417) (nil part-token string 36416 . 36417) (nil syntax-table (15) 36416 . 36417) (nil font-lock-face web-mode-javascript-string-face 36416 . 36417) (nil part-side javascript 36415 . 36416) (nil part-side javascript 36413 . 36415) (nil part-side javascript 36403 . 36413) (nil part-side javascript 36401 . 36403) (nil part-side javascript 36391 . 36401) (nil part-side javascript 36389 . 36391) (nil part-side javascript 36383 . 36389) (nil face web-mode-variable-name-face 36383 . 36389) (nil part-side javascript 36382 . 36383) (nil part-side javascript 36377 . 36382) (nil face web-mode-keyword-face 36377 . 36382) (36377 . 36449)) nil (25828 47741 474908 741000) 0 nil])
([nil nil ((36016 . 36021)) ((#("root_" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 3 (part-side javascript) 3 4 (part-side javascript) 4 5 (part-side javascript)) . 36016) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5)) (25828 47718 529359 934000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36385) (undo-tree-id936 . -1) (#("o" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36386) (undo-tree-id937 . -1) (#("o" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36387) (undo-tree-id938 . -1) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . -36388) (undo-tree-id939 . -1) 36389) nil (25828 47741 474901 79000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -36016) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("o" 0 1 (part-side javascript)) . -36017) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#("o" 0 1 (part-side javascript)) . -36018) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("t" 0 1 (part-side javascript)) . -36019) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("_" 0 1 (part-side javascript)) . -36020) (undo-tree-id842 . -1) (undo-tree-id843 . -1) 36021) ((36016 . 36021)) (25828 47718 39070 949000) 0 nil])
([nil nil ((36385 . 36389)) nil (25828 47741 474894 250000) 0 nil])
([nil nil ((36016 . 36029)) ((#("let root_n = " 0 3 (part-side javascript face web-mode-keyword-face) 3 4 (part-side javascript) 4 10 (part-side javascript face web-mode-variable-name-face) 10 12 (part-side javascript) 12 13 (part-side javascript)) . 36016) (undo-tree-id844 . -7) (undo-tree-id845 . -10) (undo-tree-id846 . -13) (undo-tree-id847 . -13)) (25828 47718 38189 291000) 0 nil])
([nil nil ((#("root_name+'/'+element.name" 0 10 (part-side javascript) 10 11 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 11 12 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 25 (part-side javascript) 25 26 (rear-nonsticky t part-side javascript)) . 36489) (undo-tree-id934 . -26) (undo-tree-id935 . -26)) nil (25828 47741 474893 28000) 0 nil])
nil
([nil nil ((36489 . 36491)) nil (25828 47741 474889 554000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -36490) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) 36491) nil (25828 47741 474887 856000) 0 nil])
([nil nil ((36490 . 36492)) nil (25828 47741 474880 455000) 0 nil])
([nil nil ((36492 . 36496)) nil (25828 47741 474878 797000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -36495) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) 36496) nil (25828 47741 474872 710000) 0 nil])
([nil nil ((37161 . 37171) (#("          " 0 10 (part-side javascript)) . 37160) (undo-tree-id967 . -10) (37159 . 37171) (t 25828 47741 521623 367000)) nil (25828 47970 850948 425000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript)) . -37161) (undo-tree-id940 . -10) (undo-tree-id941 . -10) (undo-tree-id942 . -10) (undo-tree-id943 . -10) (undo-tree-id944 . -10) (undo-tree-id945 . -10) (undo-tree-id946 . -10) (undo-tree-id947 . -10) (undo-tree-id948 . -10) (undo-tree-id949 . -10) (undo-tree-id950 . -10) (undo-tree-id951 . -10) (undo-tree-id952 . -10) (undo-tree-id953 . -10) (undo-tree-id954 . -10) (undo-tree-id955 . -10) (undo-tree-id956 . -10) (undo-tree-id957 . -10) (undo-tree-id958 . -10) (undo-tree-id959 . -10) (undo-tree-id960 . -10) (undo-tree-id961 . -10) (undo-tree-id962 . -10) (undo-tree-id963 . -10) (undo-tree-id964 . -10) (undo-tree-id965 . -10) (undo-tree-id966 . -10) 37171) nil (25828 47970 850939 737000) 0 nil])
([nil nil ((37161 . 37171) (#("          " 0 10 (part-side javascript)) . 37160) (undo-tree-id985 . -10) (37159 . 37171) (t 25828 47970 905510 674000)) nil (25828 49298 354251 771000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37806 . 37807) (nil part-side javascript 37806 . 37807) (nil face (rainbow-delimiters-depth-5-face) 37806 . 37807) (nil part-side javascript 37805 . 37806) (nil face (rainbow-delimiters-depth-6-face) 37805 . 37806) (nil part-side javascript 37796 . 37805) (nil part-side javascript 37795 . 37796) (nil face (rainbow-delimiters-depth-7-face) 37795 . 37796) (nil part-side javascript 37794 . 37795) (nil face (rainbow-delimiters-depth-8-face) 37794 . 37795) (nil part-side javascript 37793 . 37794) (nil part-token string 37793 . 37794) (nil syntax-table (15) 37793 . 37794) (nil font-lock-face web-mode-javascript-string-face 37793 . 37794) (nil part-side javascript 37787 . 37793) (nil part-token string 37787 . 37793) (nil font-lock-face web-mode-javascript-string-face 37787 . 37793) (nil part-side javascript 37786 . 37787) (nil part-token string 37786 . 37787) (nil syntax-table (15) 37786 . 37787) (nil font-lock-face web-mode-javascript-string-face 37786 . 37787) (nil part-side javascript 37785 . 37786) (nil face (rainbow-delimiters-depth-8-face) 37785 . 37786) (nil part-side javascript 37763 . 37785) (nil part-side javascript 37762 . 37763) (nil part-token string 37762 . 37763) (nil syntax-table (15) 37762 . 37763) (nil font-lock-face web-mode-javascript-string-face 37762 . 37763) (nil part-side javascript 37748 . 37762) (nil part-token string 37748 . 37762) (nil font-lock-face web-mode-javascript-string-face 37748 . 37762) (nil part-side javascript 37747 . 37748) (nil part-token string 37747 . 37748) (nil syntax-table (15) 37747 . 37748) (nil font-lock-face web-mode-javascript-string-face 37747 . 37748) (nil part-side javascript 37746 . 37747) (nil face (rainbow-delimiters-depth-7-face) 37746 . 37747) (nil part-side javascript 37743 . 37746) (nil part-side javascript 37739 . 37743) (nil face web-mode-constant-face 37739 . 37743) (nil part-side javascript 37718 . 37739) (nil part-side javascript 37714 . 37718) (nil face web-mode-constant-face 37714 . 37718) (nil part-side javascript 37703 . 37714) (nil part-side javascript 37702 . 37703) (nil face (rainbow-delimiters-depth-6-face) 37702 . 37703) (nil part-side javascript 37698 . 37702) (nil part-side javascript 37693 . 37698) (nil face web-mode-function-name-face 37693 . 37698) (nil part-side javascript 37692 . 37693) (nil face (rainbow-delimiters-depth-5-face) 37692 . 37693) (nil part-side javascript 37687 . 37692) (nil face web-mode-function-call-face 37687 . 37692) (nil part-side javascript 37686 . 37687) (nil part-side javascript 37685 . 37686) (nil face (rainbow-delimiters-depth-5-face) 37685 . 37686) (nil part-side javascript 37684 . 37685) (nil face (rainbow-delimiters-depth-6-face) 37684 . 37685) (nil part-side javascript 37675 . 37684) (nil part-side javascript 37674 . 37675) (nil face (rainbow-delimiters-depth-7-face) 37674 . 37675) (nil part-side javascript 37663 . 37674) (nil part-side javascript 37662 . 37663) (nil face (rainbow-delimiters-depth-8-face) 37662 . 37663) (nil part-side javascript 37661 . 37662) (nil face (rainbow-delimiters-depth-9-face) 37661 . 37662) (nil part-side javascript 37649 . 37661) (nil part-side javascript 37648 . 37649) (nil face (rainbow-delimiters-depth-9-face) 37648 . 37649) (nil part-side javascript 37646 . 37648) (nil part-side javascript 37645 . 37646) (nil part-token string 37645 . 37646) (nil syntax-table (15) 37645 . 37646) (nil font-lock-face web-mode-javascript-string-face 37645 . 37646) (nil part-side javascript 37634 . 37645) (nil part-token string 37634 . 37645) (nil font-lock-face web-mode-javascript-string-face 37634 . 37645) (nil part-side javascript 37633 . 37634) (nil part-token string 37633 . 37634) (nil syntax-table (15) 37633 . 37634) (nil font-lock-face web-mode-javascript-string-face 37633 . 37634) (nil part-side javascript 37632 . 37633) (nil face (rainbow-delimiters-depth-8-face) 37632 . 37633) (nil part-side javascript 37626 . 37632) (nil part-side javascript 37622 . 37626) (nil face web-mode-constant-face 37622 . 37626) (nil part-side javascript 37609 . 37622) (nil part-side javascript 37608 . 37609) (nil face (rainbow-delimiters-depth-7-face) 37608 . 37609) (nil part-side javascript 37607 . 37608) (nil part-side javascript 37606 . 37607) (nil face (rainbow-delimiters-depth-7-face) 37606 . 37607) (nil part-side javascript 37605 . 37606) (nil face (rainbow-delimiters-depth-8-face) 37605 . 37606) (nil part-side javascript 37581 . 37605) (nil part-side javascript 37577 . 37581) (nil face web-mode-function-name-face 37577 . 37581) (nil part-side javascript 37576 . 37577) (nil face (rainbow-delimiters-depth-8-face) 37576 . 37577) (nil part-side javascript 37572 . 37576) (nil face web-mode-function-call-face 37572 . 37576) (nil part-side javascript 37557 . 37572) (nil part-side javascript 37553 . 37557) (nil face web-mode-constant-face 37553 . 37557) (nil part-side javascript 37552 . 37553) (nil face (rainbow-delimiters-depth-7-face) 37552 . 37553) (nil part-side javascript 37551 . 37552) (nil part-side javascript 37549 . 37551) (nil face web-mode-keyword-face 37549 . 37551) (nil part-side javascript 37539 . 37549) (nil part-side javascript 37538 . 37539) (nil syntax-table (12) 37538 . 37539) (nil part-side javascript 37490 . 37538) (nil part-token comment 37490 . 37538) (nil font-lock-face web-mode-javascript-comment-face 37490 . 37538) (nil part-side javascript 37489 . 37490) (nil part-token comment 37489 . 37490) (nil syntax-table (11) 37489 . 37490) (nil font-lock-face web-mode-javascript-comment-face 37489 . 37490) (nil part-side javascript 37478 . 37489) (nil part-side javascript 37477 . 37478) (nil part-side javascript 37476 . 37477) (nil face (rainbow-delimiters-depth-7-face) 37476 . 37477) (nil part-side javascript 37475 . 37476) (nil part-token string 37475 . 37476) (nil syntax-table (15) 37475 . 37476) (nil font-lock-face web-mode-javascript-string-face 37475 . 37476) (nil part-side javascript 37461 . 37475) (nil part-token string 37461 . 37475) (nil font-lock-face web-mode-javascript-string-face 37461 . 37475) (nil part-side javascript 37460 . 37461) (nil part-token string 37460 . 37461) (nil syntax-table (15) 37460 . 37461) (nil font-lock-face web-mode-javascript-string-face 37460 . 37461) (nil part-side javascript 37459 . 37460) (nil face (rainbow-delimiters-depth-7-face) 37459 . 37460) (nil part-side javascript 37453 . 37459) (nil part-side javascript 37449 . 37453) (nil face web-mode-constant-face 37449 . 37453) (nil part-side javascript 37439 . 37449) (nil part-side javascript 37438 . 37439) (nil syntax-table (12) 37438 . 37439) (nil part-side javascript 37418 . 37438) (nil part-token comment 37418 . 37438) (nil font-lock-face web-mode-javascript-comment-face 37418 . 37438) (nil part-side javascript 37417 . 37418) (nil part-token comment 37417 . 37418) (nil syntax-table (11) 37417 . 37418) (nil font-lock-face web-mode-javascript-comment-face 37417 . 37418) (nil part-side javascript 37405 . 37417) (nil part-side javascript 37401 . 37405) (nil face web-mode-constant-face 37401 . 37405) (nil part-side javascript 37380 . 37401) (nil part-side javascript 37376 . 37380) (nil face web-mode-constant-face 37376 . 37380) (nil part-side javascript 37366 . 37376) (nil part-side javascript 37365 . 37366) (nil syntax-table (12) 37365 . 37366) (nil part-side javascript 37322 . 37365) (nil part-token comment 37322 . 37365) (nil font-lock-face web-mode-javascript-comment-face 37322 . 37365) (nil part-side javascript 37321 . 37322) (nil part-token comment 37321 . 37322) (nil syntax-table (11) 37321 . 37322) (nil font-lock-face web-mode-javascript-comment-face 37321 . 37322) (nil part-side javascript 37309 . 37321) (nil part-side javascript 37304 . 37309) (nil face web-mode-constant-face 37304 . 37309) (nil part-side javascript 37288 . 37304) (nil part-side javascript 37284 . 37288) (nil face web-mode-constant-face 37284 . 37288) (nil part-side javascript 37274 . 37284) (nil part-side javascript 37273 . 37274) (nil syntax-table (12) 37273 . 37274) (nil part-side javascript 37244 . 37273) (nil part-token comment 37244 . 37273) (nil font-lock-face web-mode-javascript-comment-face 37244 . 37273) (nil part-side javascript 37243 . 37244) (nil part-token comment 37243 . 37244) (nil syntax-table (11) 37243 . 37244) (nil font-lock-face web-mode-javascript-comment-face 37243 . 37244) (nil part-side javascript 37233 . 37243) (nil part-side javascript 37232 . 37233) (nil part-side javascript 37231 . 37232) (nil face (rainbow-delimiters-depth-6-face) 37231 . 37232) (nil part-side javascript 37227 . 37231) (nil part-side javascript 37221 . 37227) (nil face web-mode-function-name-face 37221 . 37227) (nil part-side javascript 37220 . 37221) (nil face (rainbow-delimiters-depth-5-face) 37220 . 37221) (nil part-side javascript 37216 . 37220) (nil face web-mode-function-call-face 37216 . 37220) (nil part-side javascript 37215 . 37216) (nil part-side javascript 37214 . 37215) (nil face (rainbow-delimiters-depth-5-face) 37214 . 37215) (nil rear-nonsticky t 37213 . 37214) (nil part-side javascript 37213 . 37214) (nil part-side javascript 37204 . 37213) (nil part-side javascript 37203 . 37204) (nil face (rainbow-delimiters-depth-5-face) 37203 . 37204) (nil part-side javascript 37191 . 37203) (nil face web-mode-function-call-face 37191 . 37203) (nil part-side javascript 37171 . 37191) (37171 . 37807)) nil (25828 49298 354238 870000) 0 nil])
([nil nil ((37821 . 37823) (37728 . 37730) (37696 . 37698) (37684 . 37686) (37630 . 37632) (37555 . 37557) (37493 . 37495) (37451 . 37453) (37417 . 37419) (37374 . 37376) (37317 . 37319) (37278 . 37280) (37235 . 37237) (#("        " 0 8 (part-side javascript)) . -37171) 37161) nil (25828 49298 354194 48000) 0 nil])
([nil nil ((37224 . 37237)) nil (25828 49298 354190 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37266 . 37267) (nil part-side javascript 37263 . 37267) (nil face web-mode-constant-face 37263 . 37267) (nil part-side javascript 37262 . 37263) (nil part-side javascript 37260 . 37262) (nil rear-nonsticky t 37259 . 37260) (nil part-side javascript 37259 . 37260) (nil part-side javascript 37242 . 37259) (nil part-side javascript 37241 . 37242) (nil part-side javascript 37237 . 37241) (nil face web-mode-constant-face 37237 . 37241) (37237 . 37267)) nil (25828 49298 354188 380000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -37263) (undo-tree-id981 . -1) (#("r" 0 1 (part-side javascript)) . -37264) (undo-tree-id982 . -1) (#("u" 0 1 (part-side javascript)) . -37265) (undo-tree-id983 . -1) (#("e" 0 1 (rear-nonsticky t part-side javascript face web-mode-constant-face)) . -37266) (undo-tree-id984 . -1) 37267) nil (25828 49298 354183 871000) 0 nil])
([nil nil ((37263 . 37269)) nil (25828 49298 354177 667000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -37268) (undo-tree-id980 . -1) 37269) nil (25828 49298 354176 241000) 0 nil])
([nil nil ((#("            // Close dialog after renaming
            this.renameDialog = false

            // Clear error message on succesful renaming
            this.filterRenameError = null
" 0 12 (part-side javascript) 12 13 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 13 42 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 42 43 (part-side javascript syntax-table (12)) 43 55 (part-side javascript) 55 59 (part-side javascript face web-mode-constant-face) 59 75 (part-side javascript) 75 80 (part-side javascript face web-mode-constant-face) 80 94 (part-side javascript) 94 95 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 95 138 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 138 139 (part-side javascript syntax-table (12)) 139 151 (part-side javascript) 151 155 (part-side javascript face web-mode-constant-face) 155 176 (part-side javascript) 176 180 (part-side javascript face web-mode-constant-face) 180 181 (part-side javascript)) . 37269) (undo-tree-id977 . -181) (undo-tree-id978 . -43) (undo-tree-id979 . -181)) nil (25828 49298 354173 399000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -37268) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) 37269) nil (25828 49298 355249 276000) 0 nil])
([nil nil ((#("
            // Reload filter tree" 0 13 (part-side javascript) 13 14 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 14 34 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37268) (undo-tree-id1015 . -34) (undo-tree-id1016 . -1) (undo-tree-id1017 . -34) (undo-tree-id1018 . -34)) nil (25828 49425 487810 452000) 0 nil] [nil nil ((#("            this.folder_edit_dialog = false
            // Reload filter tree" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 56 (part-side javascript) 56 57 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 57 77 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37225) (undo-tree-id968 . -77) (undo-tree-id969 . -42) (undo-tree-id970 . -44) (undo-tree-id971 . -12) (undo-tree-id972 . -43) (undo-tree-id973 . -77)) ((37225 . 37302)) (25828 49298 354158 79000) 0 nil])
([nil nil ((#("
            // Renaming selected/applied filter - rename chip" 0 13 (part-side javascript) 13 14 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 14 62 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37310) (undo-tree-id1012 . -62) (undo-tree-id1013 . -1) (undo-tree-id1014 . -62)) nil (25828 49425 487805 215000) 0 nil])
nil
([nil nil ((#("
" 0 1 (part-side javascript)) . -37309) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 37310) nil (25828 49425 487800 467000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 37590) (undo-tree-id1007 . -1) (#("
" 0 1 (part-side javascript)) . 37590) (undo-tree-id1008 . -1)) nil (25828 49425 487795 972000) 0 nil])
([nil nil ((37309 . 37322)) nil (25828 49425 487791 495000) 0 nil])
([nil nil ((37322 . 37331)) nil (25828 49425 487790 671000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -37322) (undo-tree-id998 . -1) (#("o" 0 1 (part-side javascript)) . -37323) (undo-tree-id999 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -37324) (undo-tree-id1000 . -1) (#(" " 0 1 (part-side javascript)) . -37325) (undo-tree-id1001 . -1) (#("i" 0 1 (part-side javascript)) . -37326) (undo-tree-id1002 . -1) (#(" " 0 1 (part-side javascript)) . -37327) (undo-tree-id1003 . -1) (#("i" 0 1 (part-side javascript)) . -37328) (undo-tree-id1004 . -1) (#("n" 0 1 (part-side javascript face web-mode-keyword-face)) . -37329) (undo-tree-id1005 . -1) (#(" " 0 1 (part-side javascript)) . -37330) (undo-tree-id1006 . -1) 37331) nil (25828 49425 487787 755000) 0 nil])
([nil nil ((37322 . 37333)) nil (25828 49425 487775 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37353 . 37354) (nil part-side javascript 37353 . 37354) (nil face (rainbow-delimiters-depth-8-face) 37353 . 37354) (nil part-side javascript 37349 . 37353) (nil part-side javascript 37342 . 37349) (nil face web-mode-function-name-face 37342 . 37349) (nil part-side javascript 37341 . 37342) (nil face (rainbow-delimiters-depth-7-face) 37341 . 37342) (nil part-side javascript 37334 . 37341) (nil face web-mode-function-call-face 37334 . 37341) (nil part-side javascript 37333 . 37334) (37333 . 37354)) nil (25828 49425 487773 689000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . 37332) (undo-tree-id997 . -1)) nil (25828 49425 487770 307000) 0 nil])
([nil nil ((37353 . 37355)) nil (25828 49425 487768 411000) 0 nil])
([nil nil ((37355 . 37367) (#("              " 0 14 (part-side javascript face whitespace-trailing)) . 37354) (undo-tree-id995 . -12) (undo-tree-id996 . 14) (37366 . 37368) (37353 . 37367)) nil (25828 49425 487767 143000) 0 nil])
([nil nil ((37355 . 37497) (#("            if (this.chosenFilters.find(item => item.id == filter.id)) {
              this.$emit('rename_chip', [filter, name])
            }" 0 12 (part-side javascript) 12 14 (part-side javascript face web-mode-keyword-face) 14 15 (part-side javascript) 15 16 (part-side javascript face (rainbow-delimiters-depth-7-face)) 16 20 (part-side javascript face web-mode-constant-face) 20 35 (part-side javascript) 35 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-8-face)) 40 44 (part-side javascript face web-mode-function-name-face) 44 68 (part-side javascript) 68 69 (part-side javascript face (rainbow-delimiters-depth-8-face)) 69 70 (part-side javascript face (rainbow-delimiters-depth-7-face)) 70 71 (part-side javascript) 71 72 (part-side javascript face (rainbow-delimiters-depth-7-face)) 72 73 (part-side javascript) 73 87 (part-side javascript) 87 91 (part-side javascript face web-mode-constant-face) 91 97 (part-side javascript) 97 98 (part-side javascript face (rainbow-delimiters-depth-8-face)) 98 99 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 99 110 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 110 111 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 111 113 (part-side javascript) 113 114 (part-side javascript face (rainbow-delimiters-depth-9-face)) 114 126 (part-side javascript) 126 127 (part-side javascript face (rainbow-delimiters-depth-9-face)) 127 128 (part-side javascript face (rainbow-delimiters-depth-8-face)) 128 129 (part-side javascript) 129 141 (part-side javascript) 141 142 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 37370) (undo-tree-id992 . -142) (undo-tree-id993 . -73) (undo-tree-id994 . -142)) nil (25828 49425 487763 1000) 0 nil])
([nil nil ((37354 . 37496) (#("            if (this.chosenFilters.find(item => item.id == filter.id)) {
              this.$emit('rename_chip', [filter, name])
            }" 0 12 (part-side javascript) 12 14 (part-side javascript face web-mode-keyword-face) 14 15 (part-side javascript) 15 16 (part-side javascript face (rainbow-delimiters-depth-9-face)) 16 20 (part-side javascript face web-mode-constant-face) 20 35 (part-side javascript) 35 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-1-face)) 40 44 (part-side javascript face web-mode-function-name-face) 44 68 (part-side javascript) 68 69 (part-side javascript face (rainbow-delimiters-depth-1-face)) 69 70 (part-side javascript face (rainbow-delimiters-depth-9-face)) 70 71 (part-side javascript) 71 72 (part-side javascript face (rainbow-delimiters-depth-9-face)) 72 73 (part-side javascript) 73 87 (part-side javascript) 87 91 (part-side javascript face web-mode-constant-face) 91 97 (part-side javascript) 97 98 (part-side javascript face (rainbow-delimiters-depth-1-face)) 98 99 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 99 110 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 110 111 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 111 113 (part-side javascript) 113 114 (part-side javascript face (rainbow-delimiters-depth-2-face)) 114 126 (part-side javascript) 126 127 (part-side javascript face (rainbow-delimiters-depth-2-face)) 127 128 (part-side javascript face (rainbow-delimiters-depth-1-face)) 128 129 (part-side javascript) 129 141 (part-side javascript) 141 142 (part-side javascript face (rainbow-delimiters-depth-9-face))) . -37355) (undo-tree-id989 . -142) (undo-tree-id990 . -129) (undo-tree-id991 . -142) 37497) nil (25828 49425 487757 818000) 0 nil])
([nil nil ((37499 . 37501) (37429 . 37445) (#("              " 0 14 (part-side javascript)) . 37429) (37366 . 37368) 37354) nil (25828 49425 487752 294000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 37517) (undo-tree-id988 . -1)) nil (25828 49487 85942 439000) 0 nil])
([nil nil ((#("filter_obj" 0 10 (part-side javascript)) . 37322) (undo-tree-id1049 . -10) (undo-tree-id1050 . -8) (undo-tree-id1051 . -10) (undo-tree-id1052 . -10)) nil (25828 49555 147060 728000) 0 nil] [nil nil ((37673 . 37684) (37575 . 37586) (37542 . 37553) (37524 . 37535) (37505 . 37516) (37444 . 37455) (37366 . 37377) (37319 . 37330) (37275 . 37286) (37228 . 37239) (37171 . 37581) (#("authservice.renameFilter(filter_obj).then(result => {
            this.folder_edit_dialog = false
            this.$emit('refresh_filter')
            filter_obj.forEach(element => {
              if (this.chosenFilters.find(item => item.id == filter.id)) {
                this.$emit('rename_chip', [filter, name])
              }
            })
          }).catch(error => {
            this.filterRenameError = this.$t('ErrorMessages.' + error.response.data['errtag'])
          })" 0 12 (part-side javascript) 12 24 (part-side javascript face web-mode-function-call-face) 24 25 (part-side javascript face (rainbow-delimiters-depth-5-face)) 25 35 (part-side javascript) 35 36 (part-side javascript face (rainbow-delimiters-depth-5-face)) 36 37 (part-side javascript) 37 41 (part-side javascript face web-mode-function-call-face) 41 42 (part-side javascript face (rainbow-delimiters-depth-5-face)) 42 48 (part-side javascript face web-mode-function-name-face) 48 52 (part-side javascript) 52 53 (part-side javascript face (rainbow-delimiters-depth-6-face)) 53 54 (part-side javascript) 54 66 (part-side javascript) 66 70 (part-side javascript face web-mode-constant-face) 70 91 (part-side javascript) 91 92 (part-side javascript) 92 97 (part-side javascript face web-mode-constant-face) 97 98 (part-side javascript) 98 110 (part-side javascript) 110 114 (part-side javascript face web-mode-constant-face) 114 120 (part-side javascript) 120 121 (part-side javascript face (rainbow-delimiters-depth-7-face)) 121 122 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 122 136 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 136 137 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 137 138 (part-side javascript face (rainbow-delimiters-depth-7-face)) 138 139 (part-side javascript) 139 161 (part-side javascript) 161 162 (part-side javascript) 162 169 (part-side javascript face web-mode-function-call-face) 169 170 (part-side javascript face (rainbow-delimiters-depth-7-face)) 170 177 (part-side javascript face web-mode-function-name-face) 177 181 (part-side javascript) 181 182 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-8-face)) 182 183 (part-side javascript) 183 197 (part-side javascript) 197 199 (part-side javascript face web-mode-keyword-face) 199 200 (part-side javascript) 200 201 (part-side javascript face (rainbow-delimiters-depth-9-face)) 201 205 (part-side javascript face web-mode-constant-face) 205 220 (part-side javascript) 220 224 (part-side javascript face web-mode-function-call-face) 224 225 (part-side javascript face (rainbow-delimiters-depth-1-face)) 225 229 (part-side javascript face web-mode-function-name-face) 229 253 (part-side javascript) 253 254 (part-side javascript face (rainbow-delimiters-depth-1-face)) 254 255 (part-side javascript face (rainbow-delimiters-depth-9-face)) 255 256 (part-side javascript) 256 257 (part-side javascript face (rainbow-delimiters-depth-9-face)) 257 258 (part-side javascript) 258 274 (part-side javascript) 274 278 (part-side javascript face web-mode-constant-face) 278 284 (part-side javascript) 284 285 (part-side javascript face (rainbow-delimiters-depth-1-face)) 285 286 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 286 297 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 297 298 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 298 300 (part-side javascript) 300 301 (part-side javascript face (rainbow-delimiters-depth-2-face)) 301 313 (part-side javascript) 313 314 (part-side javascript face (rainbow-delimiters-depth-2-face)) 314 315 (part-side javascript face (rainbow-delimiters-depth-1-face)) 315 316 (part-side javascript) 316 330 (part-side javascript) 330 331 (part-side javascript face (rainbow-delimiters-depth-9-face)) 331 332 (part-side javascript) 332 344 (part-side javascript) 344 345 (part-side javascript face (rainbow-delimiters-depth-8-face)) 345 346 (part-side javascript face (rainbow-delimiters-depth-7-face)) 346 347 (part-side javascript) 347 357 (part-side javascript) 357 358 (part-side javascript face (rainbow-delimiters-depth-6-face)) 358 359 (part-side javascript face (rainbow-delimiters-depth-5-face)) 359 360 (part-side javascript) 360 365 (part-side javascript face web-mode-function-call-face) 365 366 (part-side javascript face (rainbow-delimiters-depth-5-face)) 366 371 (part-side javascript face web-mode-function-name-face) 371 375 (part-side javascript) 375 376 (part-side javascript face (rainbow-delimiters-depth-6-face)) 376 377 (part-side javascript) 377 389 (part-side javascript) 389 393 (part-side javascript face web-mode-constant-face) 393 414 (part-side javascript) 414 418 (part-side javascript face web-mode-constant-face) 418 421 (part-side javascript) 421 422 (part-side javascript face (rainbow-delimiters-depth-7-face)) 422 423 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 423 437 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 437 438 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 438 460 (part-side javascript) 460 461 (part-side javascript face (rainbow-delimiters-depth-8-face)) 461 462 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 462 468 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 468 469 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 469 470 (part-side javascript face (rainbow-delimiters-depth-8-face)) 470 471 (part-side javascript face (rainbow-delimiters-depth-7-face)) 471 472 (part-side javascript) 472 482 (part-side javascript) 482 483 (part-side javascript face (rainbow-delimiters-depth-6-face)) 483 484 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face))) . 37171) (undo-tree-id1020 . -484) (undo-tree-id1021 . -159) (undo-tree-id1022 . -54) (undo-tree-id1023 . -484) (undo-tree-id1024 . -66) (undo-tree-id1025 . -97) (undo-tree-id1026 . -97) (undo-tree-id1027 . -97) (undo-tree-id1028 . -138) (undo-tree-id1029 . -161) (undo-tree-id1030 . -183) (undo-tree-id1031 . -331) (undo-tree-id1032 . -177) (undo-tree-id1033 . -250) (undo-tree-id1034 . -484)) ((37171 . 37655) (#("/* authservice.renameFilter(filter_obj).then(result => {
*   this.folder_edit_dialog = false
*   this.$emit('refresh_filter')
*   filter_obj.forEach(element => {
*     if (this.chosenFilters.find(item => item.id == filter.id)) {
*       this.$emit('rename_chip', [filter, name])
*     }
*   })
* }).catch(error => {
*   this.filterRenameError = this.$t('ErrorMessages.' + error.response.data['errtag'])
* }) */" 0 1 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1 15 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 15 27 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 27 40 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 40 44 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 44 45 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 45 51 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 51 61 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 61 65 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 65 87 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 87 92 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 92 97 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 97 101 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 101 141 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 141 148 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 148 149 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 149 156 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 156 168 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 168 170 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 170 172 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 172 176 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 176 191 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 191 195 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 195 196 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 196 200 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 200 237 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 237 241 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 241 299 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 299 304 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 304 305 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 305 310 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 310 320 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 320 324 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 324 345 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 345 349 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 349 410 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37171) (undo-tree-id1036 . -57) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37228) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37275) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37319) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37366) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37444) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37505) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37524) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37542) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37575) (#("           " 0 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 37673) (t 25828 49472 934517 489000)) (25828 49472 875549 713000) 0 nil] [nil nil ((#("element" 0 7 (part-side javascript face web-mode-function-name-face)) . 37341) (undo-tree-id986 . -7) (undo-tree-id987 . -7)) ((37341 . 37348)) (25828 49425 488916 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37330 . 37331) (nil part-side javascript 37322 . 37331) (37322 . 37331)) nil (25828 49555 147054 424000) 0 nil])
nil
([nil nil ((37341 . 37345)) ((#("item" 0 4 (part-side javascript face web-mode-function-name-face)) . 37341) (undo-tree-id1019 . -4)) (25828 49425 487729 7000) 0 nil])
([nil nil ((#("ilter" 0 5 (part-side javascript)) . 37415) (undo-tree-id1046 . -5) (undo-tree-id1047 . -5) (undo-tree-id1048 . -5)) nil (25828 49555 147052 798000) 0 nil])
nil
([nil nil ((#("f" 0 1 (part-side javascript)) . -37414) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 37415) nil (25828 49555 147048 411000) 0 nil])
([nil nil ((37422 . 37423) (37421 . 37423) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -37421) (37414 . 37422)) nil (25828 49555 147043 839000) 0 nil])
([nil nil ((#("filter" 0 6 (part-side javascript)) . 37475) (undo-tree-id1040 . -6) (undo-tree-id1041 . -5) (undo-tree-id1042 . -6)) nil (25828 49555 147041 964000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37484 . 37485) (nil part-side javascript 37484 . 37485) (nil face (rainbow-delimiters-depth-3-face) 37484 . 37485) (nil part-side javascript 37483 . 37484) (nil part-side javascript 37482 . 37483) (nil face (rainbow-delimiters-depth-3-face) 37482 . 37483) (nil part-side javascript 37475 . 37482) (37475 . 37485)) nil (25828 49555 147037 500000) 0 nil])
([nil nil ((#("name" 0 4 (part-side javascript)) . 37487) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4)) nil (25828 49555 147034 706000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37496 . 37497) (nil part-side javascript 37496 . 37497) (nil face (rainbow-delimiters-depth-3-face) 37496 . 37497) (nil part-side javascript 37495 . 37496) (nil part-side javascript 37494 . 37495) (nil face (rainbow-delimiters-depth-3-face) 37494 . 37495) (nil part-side javascript 37487 . 37494) (37487 . 37497)) nil (25828 49555 147030 420000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -37495) (undo-tree-id1037 . -1) 37496) nil (25828 49555 147026 400000) 0 nil])
([nil nil ((37495 . 37496)) nil (25828 49555 147010 903000) 0 nil])
([nil nil ((#("      <v-col cols=\"4\">
        <v-tooltip top>
          <template v-slot:activator=\"{ on, attrs }\">
            <v-btn
              v-bind=\"attrs\"
              v-on=\"on\"
              :disabled=\"getting_data || selected.length == 0 || tree_edit\"
              @click=\"get_filter_selections();filterSelSaveDialog_open()\"
              color=\"primary\"
              block>

              {{ $t('AnalysisNetwork.saveFilterSelection') }}
              <v-icon right dark>mdi-filter-plus-outline</v-icon>
            </v-btn>
          </template>
          <span>{{ $t('AnalysisNetwork.saveFilterSelectionTooltip', [selected.length]) }}</span>
        </v-tooltip>
      </v-col>" 6 7 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 12 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 17 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 18 20 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 32 41 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 41 42 (tag-name "v-tooltip" tag-type start) 42 43 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 45 46 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 57 58 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 58 66 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 66 67 (tag-name "template" tag-type start) 67 68 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 68 73 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 73 74 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 74 75 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 81 82 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 82 83 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 83 84 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 84 85 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 85 87 (block-side t tag-attr t tag-name "template" tag-type start) 87 88 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 88 89 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 89 91 (block-side t tag-attr t tag-name "template" tag-type start) 91 92 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 93 94 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 94 95 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 95 96 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 96 98 (block-side t tag-attr t tag-name "template" tag-type start) 98 99 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 99 100 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 113 114 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 114 119 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 119 134 (tag-name "v-btn" tag-type start) 134 135 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 135 140 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 140 141 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 141 147 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 148 163 (tag-name "v-btn" tag-type start) 163 164 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 164 167 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 167 168 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 168 171 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 171 172 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 172 187 (tag-name "v-btn" tag-type start) 187 188 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 188 189 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 189 190 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 190 191 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 191 192 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 192 193 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 193 194 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 194 195 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 195 196 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 196 197 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 197 198 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 198 199 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 199 200 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 200 201 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 201 202 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 202 203 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 203 204 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 204 205 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 205 206 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 206 207 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 207 208 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 208 209 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 209 210 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 210 214 (block-side t tag-attr t tag-name "v-btn" tag-type start) 214 215 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 215 216 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 216 217 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 217 218 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 218 219 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 219 220 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 220 221 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 221 222 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 222 223 (block-side t tag-attr t tag-name "v-btn" tag-type start) 223 224 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 224 225 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 225 226 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 226 227 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 227 228 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 228 229 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 229 238 (block-side t tag-attr t tag-name "v-btn" tag-type start) 238 239 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 239 240 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 240 241 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 241 242 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 242 243 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 243 244 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 244 245 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 245 246 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 246 247 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 247 248 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 9 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 248 263 (tag-name "v-btn" tag-type start) 263 264 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 264 265 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 265 266 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 266 267 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 267 268 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 268 269 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 269 270 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 270 271 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 271 292 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 292 295 (block-side t tag-attr t tag-name "v-btn" tag-type start) 295 319 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 319 321 (block-side t tag-attr t tag-name "v-btn" tag-type start) 321 322 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 322 337 (tag-name "v-btn" tag-type start) 337 338 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 338 342 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 342 343 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 343 351 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 351 352 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 352 367 (tag-name "v-btn" tag-type start) 367 368 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 368 371 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 371 372 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 372 373 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 389 390 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 390 391 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 391 393 (block-side t) 393 394 (block-side t face web-mode-variable-name-face) 394 395 (block-side t face (rainbow-delimiters-depth-3-face)) 395 396 (block-side t) 396 397 (block-side t face web-mode-variable-name-face) 397 398 (block-side t face web-mode-variable-name-face) 398 399 (block-side t face web-mode-variable-name-face) 399 400 (block-side t face web-mode-variable-name-face) 400 401 (block-side t face web-mode-variable-name-face) 401 402 (block-side t face web-mode-variable-name-face) 402 403 (block-side t face web-mode-variable-name-face) 403 404 (block-side t face web-mode-variable-name-face) 404 405 (block-side t face web-mode-variable-name-face) 405 406 (block-side t face web-mode-variable-name-face) 406 407 (block-side t face web-mode-variable-name-face) 407 408 (block-side t face web-mode-variable-name-face) 408 409 (block-side t face web-mode-variable-name-face) 409 410 (block-side t face web-mode-variable-name-face) 410 411 (block-side t face web-mode-variable-name-face) 411 412 (block-side t) 412 413 (block-side t face web-mode-variable-name-face) 413 414 (block-side t face web-mode-variable-name-face) 414 415 (block-side t face web-mode-variable-name-face) 415 416 (block-side t face web-mode-variable-name-face) 416 417 (block-side t face web-mode-variable-name-face) 417 418 (block-side t face web-mode-variable-name-face) 418 419 (block-side t face web-mode-variable-name-face) 419 420 (block-side t face web-mode-variable-name-face) 420 421 (block-side t face web-mode-variable-name-face) 421 422 (block-side t face web-mode-variable-name-face) 422 423 (block-side t face web-mode-variable-name-face) 423 424 (block-side t face web-mode-variable-name-face) 424 425 (block-side t face web-mode-variable-name-face) 425 426 (block-side t face web-mode-variable-name-face) 426 427 (block-side t face web-mode-variable-name-face) 427 428 (block-side t face web-mode-variable-name-face) 428 429 (block-side t face web-mode-variable-name-face) 429 430 (block-side t face web-mode-variable-name-face) 430 431 (block-side t face web-mode-variable-name-face) 431 432 (block-side t) 432 433 (block-side t face (rainbow-delimiters-depth-3-face)) 433 434 (block-side t) 434 435 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 435 436 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 451 452 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 452 458 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 458 459 (tag-name "v-icon" tag-type start) 459 460 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 460 463 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 463 464 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 464 465 (tag-name "v-icon" tag-type start) 465 466 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 466 468 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 468 469 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 469 470 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 493 494 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 494 495 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 495 501 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 501 502 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 515 516 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 516 517 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 517 522 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 522 523 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 534 535 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 535 536 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 536 544 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 544 545 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 556 557 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 557 561 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 561 562 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 562 563 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 563 564 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 564 566 (block-side t) 566 567 (block-side t face web-mode-variable-name-face) 567 568 (block-side t face (rainbow-delimiters-depth-3-face)) 568 569 (block-side t) 569 570 (block-side t face web-mode-variable-name-face) 570 571 (block-side t face web-mode-variable-name-face) 571 572 (block-side t face web-mode-variable-name-face) 572 573 (block-side t face web-mode-variable-name-face) 573 574 (block-side t face web-mode-variable-name-face) 574 575 (block-side t face web-mode-variable-name-face) 575 576 (block-side t face web-mode-variable-name-face) 576 577 (block-side t face web-mode-variable-name-face) 577 578 (block-side t face web-mode-variable-name-face) 578 579 (block-side t face web-mode-variable-name-face) 579 580 (block-side t face web-mode-variable-name-face) 580 581 (block-side t face web-mode-variable-name-face) 581 582 (block-side t face web-mode-variable-name-face) 582 583 (block-side t face web-mode-variable-name-face) 583 584 (block-side t face web-mode-variable-name-face) 584 585 (block-side t) 585 586 (block-side t face web-mode-variable-name-face) 586 587 (block-side t face web-mode-variable-name-face) 587 588 (block-side t face web-mode-variable-name-face) 588 589 (block-side t face web-mode-variable-name-face) 589 590 (block-side t face web-mode-variable-name-face) 590 591 (block-side t face web-mode-variable-name-face) 591 592 (block-side t face web-mode-variable-name-face) 592 593 (block-side t face web-mode-variable-name-face) 593 594 (block-side t face web-mode-variable-name-face) 594 595 (block-side t face web-mode-variable-name-face) 595 596 (block-side t face web-mode-variable-name-face) 596 597 (block-side t face web-mode-variable-name-face) 597 598 (block-side t face web-mode-variable-name-face) 598 599 (block-side t face web-mode-variable-name-face) 599 600 (block-side t face web-mode-variable-name-face) 600 601 (block-side t face web-mode-variable-name-face) 601 602 (block-side t face web-mode-variable-name-face) 602 603 (block-side t face web-mode-variable-name-face) 603 604 (block-side t face web-mode-variable-name-face) 604 605 (block-side t face web-mode-variable-name-face) 605 606 (block-side t face web-mode-variable-name-face) 606 607 (block-side t face web-mode-variable-name-face) 607 608 (block-side t face web-mode-variable-name-face) 608 609 (block-side t face web-mode-variable-name-face) 609 610 (block-side t face web-mode-variable-name-face) 610 611 (block-side t face web-mode-variable-name-face) 611 614 (block-side t) 614 615 (block-side t face (rainbow-delimiters-depth-4-face)) 615 616 (block-side t face web-mode-variable-name-face) 616 617 (block-side t face web-mode-variable-name-face) 617 618 (block-side t face web-mode-variable-name-face) 618 619 (block-side t face web-mode-variable-name-face) 619 620 (block-side t face web-mode-variable-name-face) 620 621 (block-side t face web-mode-variable-name-face) 621 622 (block-side t face web-mode-variable-name-face) 622 623 (block-side t face web-mode-variable-name-face) 623 624 (block-side t) 624 625 (block-side t face web-mode-variable-name-face) 625 626 (block-side t face web-mode-variable-name-face) 626 627 (block-side t face web-mode-variable-name-face) 627 628 (block-side t face web-mode-variable-name-face) 628 629 (block-side t face web-mode-variable-name-face) 629 630 (block-side t face web-mode-variable-name-face) 630 631 (block-side t face (rainbow-delimiters-depth-4-face)) 631 632 (block-side t face (rainbow-delimiters-depth-3-face)) 632 633 (block-side t) 633 634 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 634 635 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 635 636 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 636 637 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 637 641 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 641 642 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 651 652 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 652 653 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 653 662 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 662 663 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 670 671 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 671 672 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 672 677 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 677 678 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 17736) (undo-tree-id1056 . -678) (undo-tree-id1057 . -23) (undo-tree-id1058 . -678) (t 25828 49555 194656 672000)) nil (25828 49615 241820 902000) 0 nil])
([nil nil (("
" . -17735) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 17736) nil (25828 49615 241815 461000) 0 nil])
([nil nil ((17532 . 17539)) nil (25828 49615 241804 553000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18216 . 18217) (nil tag-name "v-col" 18216 . 18217) (nil tag-type end 18216 . 18217) (nil tag-end t 18216 . 18217) (nil font-lock-face web-mode-html-tag-bracket-face 18216 . 18217) (nil tag-name "v-col" 18211 . 18216) (nil tag-type end 18211 . 18216) (nil font-lock-face web-mode-html-tag-custom-face 18211 . 18216) (nil tag-name "v-col" 18210 . 18211) (nil tag-type end 18210 . 18211) (nil font-lock-face web-mode-html-tag-bracket-face 18210 . 18211) (nil tag-name "v-col" 18209 . 18210) (nil tag-type end 18209 . 18210) (nil tag-beg 22 18209 . 18210) (nil font-lock-face web-mode-html-tag-bracket-face 18209 . 18210) (nil tag-name "v-tooltip" 18201 . 18202) (nil tag-type end 18201 . 18202) (nil tag-end t 18201 . 18202) (nil font-lock-face web-mode-html-tag-bracket-face 18201 . 18202) (nil tag-name "v-tooltip" 18192 . 18201) (nil tag-type end 18192 . 18201) (nil font-lock-face web-mode-html-tag-custom-face 18192 . 18201) (nil tag-name "v-tooltip" 18191 . 18192) (nil tag-type end 18191 . 18192) (nil font-lock-face web-mode-html-tag-bracket-face 18191 . 18192) (nil tag-name "v-tooltip" 18190 . 18191) (nil tag-type end 18190 . 18191) (nil tag-beg 22 18190 . 18191) (nil font-lock-face web-mode-html-tag-bracket-face 18190 . 18191) (nil tag-name "span" 18180 . 18181) (nil tag-type end 18180 . 18181) (nil tag-end t 18180 . 18181) (nil font-lock-face web-mode-html-tag-bracket-face 18180 . 18181) (nil tag-name "span" 18176 . 18180) (nil tag-type end 18176 . 18180) (nil font-lock-face web-mode-html-tag-face 18176 . 18180) (nil tag-name "span" 18175 . 18176) (nil tag-type end 18175 . 18176) (nil font-lock-face web-mode-html-tag-bracket-face 18175 . 18176) (nil tag-name "span" 18174 . 18175) (nil tag-type end 18174 . 18175) (nil tag-beg 20 18174 . 18175) (nil font-lock-face web-mode-html-tag-bracket-face 18174 . 18175) (nil block-side t 18173 . 18174) (nil block-end t 18173 . 18174) (nil block-token delimiter-end 18173 . 18174) (nil face (rainbow-delimiters-depth-1-face) 18173 . 18174) (nil block-side t 18172 . 18173) (nil block-token delimiter-end 18172 . 18173) (nil face (rainbow-delimiters-depth-2-face) 18172 . 18173) (nil block-side t 18171 . 18172) (nil block-side t 18170 . 18171) (nil face (rainbow-delimiters-depth-3-face) 18170 . 18171) (nil block-side t 18169 . 18170) (nil face (rainbow-delimiters-depth-4-face) 18169 . 18170) (nil block-side t 18168 . 18169) (nil block-side t 18167 . 18168) (nil block-side t 18166 . 18167) (nil block-side t 18165 . 18166) (nil block-side t 18164 . 18165) (nil block-side t 18163 . 18164) (nil block-side t 18162 . 18163) (nil block-side t 18161 . 18162) (nil block-side t 18160 . 18161) (nil block-side t 18159 . 18160) (nil block-side t 18158 . 18159) (nil block-side t 18157 . 18158) (nil block-side t 18156 . 18157) (nil block-side t 18155 . 18156) (nil block-side t 18154 . 18155) (nil block-side t 18153 . 18154) (nil face (rainbow-delimiters-depth-4-face) 18153 . 18154) (nil block-side t 18150 . 18153) (nil block-side t 18149 . 18150) (nil block-side t 18148 . 18149) (nil block-side t 18147 . 18148) (nil block-side t 18146 . 18147) (nil block-side t 18145 . 18146) (nil block-side t 18144 . 18145) (nil block-side t 18143 . 18144) (nil block-side t 18142 . 18143) (nil block-side t 18141 . 18142) (nil block-side t 18140 . 18141) (nil block-side t 18139 . 18140) (nil block-side t 18138 . 18139) (nil block-side t 18137 . 18138) (nil block-side t 18136 . 18137) (nil block-side t 18135 . 18136) (nil block-side t 18134 . 18135) (nil block-side t 18133 . 18134) (nil block-side t 18132 . 18133) (nil block-side t 18131 . 18132) (nil block-side t 18130 . 18131) (nil block-side t 18129 . 18130) (nil block-side t 18128 . 18129) (nil block-side t 18127 . 18128) (nil block-side t 18126 . 18127) (nil block-side t 18125 . 18126) (nil block-side t 18124 . 18125) (nil block-side t 18123 . 18124) (nil block-side t 18122 . 18123) (nil block-side t 18121 . 18122) (nil block-side t 18120 . 18121) (nil block-side t 18119 . 18120) (nil block-side t 18118 . 18119) (nil block-side t 18117 . 18118) (nil block-side t 18116 . 18117) (nil block-side t 18115 . 18116) (nil block-side t 18114 . 18115) (nil block-side t 18113 . 18114) (nil block-side t 18112 . 18113) (nil block-side t 18111 . 18112) (nil block-side t 18110 . 18111) (nil block-side t 18109 . 18110) (nil block-side t 18108 . 18109) (nil block-side t 18107 . 18108) (nil block-side t 18106 . 18107) (nil face (rainbow-delimiters-depth-3-face) 18106 . 18107) (nil block-side t 18105 . 18106) (nil block-side t 18103 . 18105) (nil block-side t 18102 . 18103) (nil block-token delimiter-beg 18102 . 18103) (nil face (rainbow-delimiters-depth-2-face) 18102 . 18103) (nil block-beg 0 18101 . 18102) (nil block-controls 0 18101 . 18102) (nil block-side t 18101 . 18102) (nil block-token delimiter-beg 18101 . 18102) (nil face (rainbow-delimiters-depth-1-face) 18101 . 18102) (nil tag-name "span" 18100 . 18101) (nil tag-type start 18100 . 18101) (nil tag-end t 18100 . 18101) (nil font-lock-face web-mode-html-tag-bracket-face 18100 . 18101) (nil tag-name "span" 18096 . 18100) (nil tag-type start 18096 . 18100) (nil font-lock-face web-mode-html-tag-face 18096 . 18100) (nil tag-name "span" 18095 . 18096) (nil tag-type start 18095 . 18096) (nil tag-beg 16 18095 . 18096) (nil font-lock-face web-mode-html-tag-bracket-face 18095 . 18096) (nil tag-name "template" 18083 . 18084) (nil tag-type end 18083 . 18084) (nil tag-end t 18083 . 18084) (nil font-lock-face web-mode-html-tag-bracket-face 18083 . 18084) (nil tag-name "template" 18075 . 18083) (nil tag-type end 18075 . 18083) (nil font-lock-face web-mode-html-tag-face 18075 . 18083) (nil tag-name "template" 18074 . 18075) (nil tag-type end 18074 . 18075) (nil font-lock-face web-mode-html-tag-bracket-face 18074 . 18075) (nil tag-name "template" 18073 . 18074) (nil tag-type end 18073 . 18074) (nil tag-beg 20 18073 . 18074) (nil font-lock-face web-mode-html-tag-bracket-face 18073 . 18074) (nil tag-name "v-btn" 18061 . 18062) (nil tag-type end 18061 . 18062) (nil tag-end t 18061 . 18062) (nil font-lock-face web-mode-html-tag-bracket-face 18061 . 18062) (nil tag-name "v-btn" 18056 . 18061) (nil tag-type end 18056 . 18061) (nil font-lock-face web-mode-html-tag-custom-face 18056 . 18061) (nil tag-name "v-btn" 18055 . 18056) (nil tag-type end 18055 . 18056) (nil font-lock-face web-mode-html-tag-bracket-face 18055 . 18056) (nil tag-name "v-btn" 18054 . 18055) (nil tag-type end 18054 . 18055) (nil tag-beg 22 18054 . 18055) (nil font-lock-face web-mode-html-tag-bracket-face 18054 . 18055) (nil tag-name "v-icon" 18040 . 18041) (nil tag-type end 18040 . 18041) (nil tag-end t 18040 . 18041) (nil font-lock-face web-mode-html-tag-bracket-face 18040 . 18041) (nil tag-name "v-icon" 18034 . 18040) (nil tag-type end 18034 . 18040) (nil font-lock-face web-mode-html-tag-custom-face 18034 . 18040) (nil tag-name "v-icon" 18033 . 18034) (nil tag-type end 18033 . 18034) (nil font-lock-face web-mode-html-tag-bracket-face 18033 . 18034) (nil tag-name "v-icon" 18032 . 18033) (nil tag-type end 18032 . 18033) (nil tag-beg 22 18032 . 18033) (nil font-lock-face web-mode-html-tag-bracket-face 18032 . 18033) (nil tag-name "v-icon" 18008 . 18009) (nil tag-type start 18008 . 18009) (nil tag-end t 18008 . 18009) (nil font-lock-face web-mode-html-tag-bracket-face 18008 . 18009) (nil tag-attr t 18007 . 18008) (nil tag-attr-end 0 18007 . 18008) (nil tag-name "v-icon" 18007 . 18008) (nil tag-type start 18007 . 18008) (nil font-lock-face web-mode-html-attr-name-face 18007 . 18008) (nil tag-attr t 18005 . 18007) (nil tag-name "v-icon" 18005 . 18007) (nil tag-type start 18005 . 18007) (nil font-lock-face web-mode-html-attr-name-face 18005 . 18007) (nil tag-attr-beg 0 18004 . 18005) (nil tag-attr t 18004 . 18005) (nil tag-name "v-icon" 18004 . 18005) (nil tag-type start 18004 . 18005) (nil font-lock-face web-mode-html-attr-name-face 18004 . 18005) (nil tag-name "v-icon" 18003 . 18004) (nil tag-type start 18003 . 18004) (nil tag-attr t 18002 . 18003) (nil tag-attr-end 0 18002 . 18003) (nil tag-name "v-icon" 18002 . 18003) (nil tag-type start 18002 . 18003) (nil font-lock-face web-mode-html-attr-name-face 18002 . 18003) (nil tag-attr t 17999 . 18002) (nil tag-name "v-icon" 17999 . 18002) (nil tag-type start 17999 . 18002) (nil font-lock-face web-mode-html-attr-name-face 17999 . 18002) (nil tag-attr-beg 0 17998 . 17999) (nil tag-attr t 17998 . 17999) (nil tag-name "v-icon" 17998 . 17999) (nil tag-type start 17998 . 17999) (nil font-lock-face web-mode-html-attr-name-face 17998 . 17999) (nil tag-name "v-icon" 17997 . 17998) (nil tag-type start 17997 . 17998) (nil tag-name "v-icon" 17991 . 17997) (nil tag-type start 17991 . 17997) (nil font-lock-face web-mode-html-tag-custom-face 17991 . 17997) (nil tag-name "v-icon" 17990 . 17991) (nil tag-type start 17990 . 17991) (nil tag-beg 19 17990 . 17991) (nil font-lock-face web-mode-html-tag-bracket-face 17990 . 17991) (nil block-side t 17974 . 17975) (nil block-end t 17974 . 17975) (nil block-token delimiter-end 17974 . 17975) (nil face (rainbow-delimiters-depth-1-face) 17974 . 17975) (nil block-side t 17973 . 17974) (nil block-token delimiter-end 17973 . 17974) (nil face (rainbow-delimiters-depth-2-face) 17973 . 17974) (nil block-side t 17972 . 17973) (nil block-side t 17971 . 17972) (nil face (rainbow-delimiters-depth-3-face) 17971 . 17972) (nil block-side t 17970 . 17971) (nil block-side t 17969 . 17970) (nil block-side t 17968 . 17969) (nil block-side t 17967 . 17968) (nil block-side t 17966 . 17967) (nil block-side t 17965 . 17966) (nil block-side t 17964 . 17965) (nil block-side t 17963 . 17964) (nil block-side t 17962 . 17963) (nil block-side t 17961 . 17962) (nil block-side t 17960 . 17961) (nil block-side t 17959 . 17960) (nil block-side t 17958 . 17959) (nil block-side t 17957 . 17958) (nil block-side t 17956 . 17957) (nil block-side t 17955 . 17956) (nil block-side t 17954 . 17955) (nil block-side t 17953 . 17954) (nil block-side t 17952 . 17953) (nil block-side t 17951 . 17952) (nil block-side t 17950 . 17951) (nil block-side t 17949 . 17950) (nil block-side t 17948 . 17949) (nil block-side t 17947 . 17948) (nil block-side t 17946 . 17947) (nil block-side t 17945 . 17946) (nil block-side t 17944 . 17945) (nil block-side t 17943 . 17944) (nil block-side t 17942 . 17943) (nil block-side t 17941 . 17942) (nil block-side t 17940 . 17941) (nil block-side t 17939 . 17940) (nil block-side t 17938 . 17939) (nil block-side t 17937 . 17938) (nil block-side t 17936 . 17937) (nil block-side t 17935 . 17936) (nil block-side t 17934 . 17935) (nil block-side t 17933 . 17934) (nil face (rainbow-delimiters-depth-3-face) 17933 . 17934) (nil block-side t 17932 . 17933) (nil block-side t 17930 . 17932) (nil block-side t 17929 . 17930) (nil block-token delimiter-beg 17929 . 17930) (nil face (rainbow-delimiters-depth-2-face) 17929 . 17930) (nil block-beg 0 17928 . 17929) (nil block-controls 0 17928 . 17929) (nil block-side t 17928 . 17929) (nil block-token delimiter-beg 17928 . 17929) (nil face (rainbow-delimiters-depth-1-face) 17928 . 17929) (nil tag-name "v-btn" 17911 . 17912) (nil tag-type start 17911 . 17912) (nil tag-end t 17911 . 17912) (nil font-lock-face web-mode-html-tag-bracket-face 17911 . 17912) (nil tag-attr t 17910 . 17911) (nil tag-attr-end 0 17910 . 17911) (nil tag-name "v-btn" 17910 . 17911) (nil tag-type start 17910 . 17911) (nil font-lock-face web-mode-html-attr-name-face 17910 . 17911) (nil tag-attr t 17907 . 17910) (nil tag-name "v-btn" 17907 . 17910) (nil tag-type start 17907 . 17910) (nil font-lock-face web-mode-html-attr-name-face 17907 . 17910) (nil tag-attr-beg 0 17906 . 17907) (nil tag-attr t 17906 . 17907) (nil tag-name "v-btn" 17906 . 17907) (nil tag-type start 17906 . 17907) (nil font-lock-face web-mode-html-attr-name-face 17906 . 17907) (nil tag-name "v-btn" 17891 . 17906) (nil tag-type start 17891 . 17906) (nil tag-attr t 17890 . 17891) (nil tag-attr-end 5 17890 . 17891) (nil tag-name "v-btn" 17890 . 17891) (nil tag-type start 17890 . 17891) (nil font-lock-face web-mode-html-attr-value-face 17890 . 17891) (nil tag-attr t 17882 . 17890) (nil tag-name "v-btn" 17882 . 17890) (nil tag-type start 17882 . 17890) (nil font-lock-face web-mode-html-attr-value-face 17882 . 17890) (nil tag-attr t 17881 . 17882) (nil tag-name "v-btn" 17881 . 17882) (nil tag-type start 17881 . 17882) (nil font-lock-face web-mode-html-attr-equal-face 17881 . 17882) (nil tag-attr t 17877 . 17881) (nil tag-name "v-btn" 17877 . 17881) (nil tag-type start 17877 . 17881) (nil font-lock-face web-mode-html-attr-name-face 17877 . 17881) (nil tag-attr-beg 0 17876 . 17877) (nil tag-attr t 17876 . 17877) (nil tag-name "v-btn" 17876 . 17877) (nil tag-type start 17876 . 17877) (nil font-lock-face web-mode-html-attr-name-face 17876 . 17877) (nil tag-name "v-btn" 17861 . 17876) (nil tag-type start 17861 . 17876) (nil block-side t 17860 . 17861) (nil block-end t 17860 . 17861) (nil block-token delimiter-end 17860 . 17861) (nil tag-attr t 17860 . 17861) (nil tag-attr-end 6 17860 . 17861) (nil tag-name "v-btn" 17860 . 17861) (nil tag-type start 17860 . 17861) (nil block-side t 17858 . 17860) (nil tag-attr t 17858 . 17860) (nil tag-name "v-btn" 17858 . 17860) (nil tag-type start 17858 . 17860) (nil block-side t 17834 . 17858) (nil tag-attr t 17834 . 17858) (nil tag-name "v-btn" 17834 . 17858) (nil tag-type start 17834 . 17858) (nil block-side t 17831 . 17834) (nil tag-attr t 17831 . 17834) (nil tag-name "v-btn" 17831 . 17834) (nil tag-type start 17831 . 17834) (nil block-side t 17810 . 17831) (nil tag-attr t 17810 . 17831) (nil tag-name "v-btn" 17810 . 17831) (nil tag-type start 17810 . 17831) (nil block-side t 17809 . 17810) (nil block-token delimiter-beg 17809 . 17810) (nil tag-attr t 17809 . 17810) (nil tag-name "v-btn" 17809 . 17810) (nil tag-type start 17809 . 17810) (nil block-side t 17808 . 17809) (nil block-token delimiter-beg 17808 . 17809) (nil tag-attr t 17808 . 17809) (nil tag-name "v-btn" 17808 . 17809) (nil tag-type start 17808 . 17809) (nil block-side t 17807 . 17808) (nil block-token delimiter-beg 17807 . 17808) (nil tag-attr t 17807 . 17808) (nil tag-name "v-btn" 17807 . 17808) (nil tag-type start 17807 . 17808) (nil block-side t 17806 . 17807) (nil block-token delimiter-beg 17806 . 17807) (nil tag-attr t 17806 . 17807) (nil tag-name "v-btn" 17806 . 17807) (nil tag-type start 17806 . 17807) (nil block-side t 17805 . 17806) (nil block-token delimiter-beg 17805 . 17806) (nil tag-attr t 17805 . 17806) (nil tag-name "v-btn" 17805 . 17806) (nil tag-type start 17805 . 17806) (nil block-side t 17804 . 17805) (nil block-token delimiter-beg 17804 . 17805) (nil tag-attr t 17804 . 17805) (nil tag-name "v-btn" 17804 . 17805) (nil tag-type start 17804 . 17805) (nil block-side t 17803 . 17804) (nil block-token delimiter-beg 17803 . 17804) (nil tag-attr t 17803 . 17804) (nil tag-name "v-btn" 17803 . 17804) (nil tag-type start 17803 . 17804) (nil block-beg 0 17802 . 17803) (nil block-controls 0 17802 . 17803) (nil block-side t 17802 . 17803) (nil block-token delimiter-beg 17802 . 17803) (nil tag-attr-beg 2 17802 . 17803) (nil tag-attr t 17802 . 17803) (nil tag-name "v-btn" 17802 . 17803) (nil tag-type start 17802 . 17803) (nil tag-name "v-btn" 17787 . 17802) (nil tag-type start 17787 . 17802) (nil block-side t 17786 . 17787) (nil block-end t 17786 . 17787) (nil block-token delimiter-end 17786 . 17787) (nil tag-attr t 17786 . 17787) (nil tag-attr-end 9 17786 . 17787) (nil tag-name "v-btn" 17786 . 17787) (nil tag-type start 17786 . 17787) (nil block-side t 17785 . 17786) (nil tag-attr t 17785 . 17786) (nil tag-name "v-btn" 17785 . 17786) (nil tag-type start 17785 . 17786) (nil block-side t 17784 . 17785) (nil tag-attr t 17784 . 17785) (nil tag-name "v-btn" 17784 . 17785) (nil tag-type start 17784 . 17785) (nil block-side t 17783 . 17784) (nil tag-attr t 17783 . 17784) (nil tag-name "v-btn" 17783 . 17784) (nil tag-type start 17783 . 17784) (nil block-side t 17782 . 17783) (nil tag-attr t 17782 . 17783) (nil tag-name "v-btn" 17782 . 17783) (nil tag-type start 17782 . 17783) (nil block-side t 17781 . 17782) (nil tag-attr t 17781 . 17782) (nil tag-name "v-btn" 17781 . 17782) (nil tag-type start 17781 . 17782) (nil block-side t 17780 . 17781) (nil tag-attr t 17780 . 17781) (nil tag-name "v-btn" 17780 . 17781) (nil tag-type start 17780 . 17781) (nil block-side t 17779 . 17780) (nil tag-attr t 17779 . 17780) (nil tag-name "v-btn" 17779 . 17780) (nil tag-type start 17779 . 17780) (nil block-side t 17778 . 17779) (nil tag-attr t 17778 . 17779) (nil tag-name "v-btn" 17778 . 17779) (nil tag-type start 17778 . 17779) (nil block-side t 17777 . 17778) (nil tag-attr t 17777 . 17778) (nil tag-name "v-btn" 17777 . 17778) (nil tag-type start 17777 . 17778) (nil block-side t 17768 . 17777) (nil tag-attr t 17768 . 17777) (nil tag-name "v-btn" 17768 . 17777) (nil tag-type start 17768 . 17777) (nil block-side t 17767 . 17768) (nil tag-attr t 17767 . 17768) (nil tag-name "v-btn" 17767 . 17768) (nil tag-type start 17767 . 17768) (nil block-side t 17766 . 17767) (nil tag-attr t 17766 . 17767) (nil tag-name "v-btn" 17766 . 17767) (nil tag-type start 17766 . 17767) (nil block-side t 17765 . 17766) (nil tag-attr t 17765 . 17766) (nil tag-name "v-btn" 17765 . 17766) (nil tag-type start 17765 . 17766) (nil block-side t 17764 . 17765) (nil tag-attr t 17764 . 17765) (nil tag-name "v-btn" 17764 . 17765) (nil tag-type start 17764 . 17765) (nil block-side t 17763 . 17764) (nil tag-attr t 17763 . 17764) (nil tag-name "v-btn" 17763 . 17764) (nil tag-type start 17763 . 17764) (nil block-side t 17762 . 17763) (nil tag-attr t 17762 . 17763) (nil tag-name "v-btn" 17762 . 17763) (nil tag-type start 17762 . 17763) (nil block-side t 17761 . 17762) (nil tag-attr t 17761 . 17762) (nil tag-name "v-btn" 17761 . 17762) (nil tag-type start 17761 . 17762) (nil block-side t 17760 . 17761) (nil tag-attr t 17760 . 17761) (nil tag-name "v-btn" 17760 . 17761) (nil tag-type start 17760 . 17761) (nil block-side t 17759 . 17760) (nil tag-attr t 17759 . 17760) (nil tag-name "v-btn" 17759 . 17760) (nil tag-type start 17759 . 17760) (nil block-side t 17758 . 17759) (nil tag-attr t 17758 . 17759) (nil tag-name "v-btn" 17758 . 17759) (nil tag-type start 17758 . 17759) (nil block-side t 17757 . 17758) (nil tag-attr t 17757 . 17758) (nil tag-name "v-btn" 17757 . 17758) (nil tag-type start 17757 . 17758) (nil block-side t 17756 . 17757) (nil tag-attr t 17756 . 17757) (nil tag-name "v-btn" 17756 . 17757) (nil tag-type start 17756 . 17757) (nil block-side t 17755 . 17756) (nil tag-attr t 17755 . 17756) (nil tag-name "v-btn" 17755 . 17756) (nil tag-type start 17755 . 17756) (nil block-side t 17754 . 17755) (nil tag-attr t 17754 . 17755) (nil tag-name "v-btn" 17754 . 17755) (nil tag-type start 17754 . 17755) (nil block-side t 17753 . 17754) (nil tag-attr t 17753 . 17754) (nil tag-name "v-btn" 17753 . 17754) (nil tag-type start 17753 . 17754) (nil block-side t 17749 . 17753) (nil tag-attr t 17749 . 17753) (nil tag-name "v-btn" 17749 . 17753) (nil tag-type start 17749 . 17753) (nil block-side t 17748 . 17749) (nil tag-attr t 17748 . 17749) (nil tag-name "v-btn" 17748 . 17749) (nil tag-type start 17748 . 17749) (nil block-side t 17747 . 17748) (nil tag-attr t 17747 . 17748) (nil tag-name "v-btn" 17747 . 17748) (nil tag-type start 17747 . 17748) (nil block-side t 17746 . 17747) (nil tag-attr t 17746 . 17747) (nil tag-name "v-btn" 17746 . 17747) (nil tag-type start 17746 . 17747) (nil block-side t 17745 . 17746) (nil tag-attr t 17745 . 17746) (nil tag-name "v-btn" 17745 . 17746) (nil tag-type start 17745 . 17746) (nil block-side t 17744 . 17745) (nil tag-attr t 17744 . 17745) (nil tag-name "v-btn" 17744 . 17745) (nil tag-type start 17744 . 17745) (nil block-side t 17743 . 17744) (nil tag-attr t 17743 . 17744) (nil tag-name "v-btn" 17743 . 17744) (nil tag-type start 17743 . 17744) (nil block-side t 17742 . 17743) (nil tag-attr t 17742 . 17743) (nil tag-name "v-btn" 17742 . 17743) (nil tag-type start 17742 . 17743) (nil block-side t 17741 . 17742) (nil tag-attr t 17741 . 17742) (nil tag-name "v-btn" 17741 . 17742) (nil tag-type start 17741 . 17742) (nil block-side t 17740 . 17741) (nil tag-attr t 17740 . 17741) (nil tag-name "v-btn" 17740 . 17741) (nil tag-type start 17740 . 17741) (nil block-side t 17739 . 17740) (nil tag-attr t 17739 . 17740) (nil tag-name "v-btn" 17739 . 17740) (nil tag-type start 17739 . 17740) (nil block-side t 17738 . 17739) (nil tag-attr t 17738 . 17739) (nil tag-name "v-btn" 17738 . 17739) (nil tag-type start 17738 . 17739) (nil block-side t 17737 . 17738) (nil tag-attr t 17737 . 17738) (nil tag-name "v-btn" 17737 . 17738) (nil tag-type start 17737 . 17738) (nil block-side t 17736 . 17737) (nil block-token delimiter-beg 17736 . 17737) (nil tag-attr t 17736 . 17737) (nil tag-name "v-btn" 17736 . 17737) (nil tag-type start 17736 . 17737) (nil block-side t 17735 . 17736) (nil block-token delimiter-beg 17735 . 17736) (nil tag-attr t 17735 . 17736) (nil tag-name "v-btn" 17735 . 17736) (nil tag-type start 17735 . 17736) (nil block-side t 17734 . 17735) (nil block-token delimiter-beg 17734 . 17735) (nil tag-attr t 17734 . 17735) (nil tag-name "v-btn" 17734 . 17735) (nil tag-type start 17734 . 17735) (nil block-side t 17733 . 17734) (nil block-token delimiter-beg 17733 . 17734) (nil tag-attr t 17733 . 17734) (nil tag-name "v-btn" 17733 . 17734) (nil tag-type start 17733 . 17734) (nil block-side t 17732 . 17733) (nil block-token delimiter-beg 17732 . 17733) (nil tag-attr t 17732 . 17733) (nil tag-name "v-btn" 17732 . 17733) (nil tag-type start 17732 . 17733) (nil block-side t 17731 . 17732) (nil block-token delimiter-beg 17731 . 17732) (nil tag-attr t 17731 . 17732) (nil tag-name "v-btn" 17731 . 17732) (nil tag-type start 17731 . 17732) (nil block-side t 17730 . 17731) (nil block-token delimiter-beg 17730 . 17731) (nil tag-attr t 17730 . 17731) (nil tag-name "v-btn" 17730 . 17731) (nil tag-type start 17730 . 17731) (nil block-side t 17729 . 17730) (nil block-token delimiter-beg 17729 . 17730) (nil tag-attr t 17729 . 17730) (nil tag-name "v-btn" 17729 . 17730) (nil tag-type start 17729 . 17730) (nil block-side t 17728 . 17729) (nil block-token delimiter-beg 17728 . 17729) (nil tag-attr t 17728 . 17729) (nil tag-name "v-btn" 17728 . 17729) (nil tag-type start 17728 . 17729) (nil block-side t 17727 . 17728) (nil block-token delimiter-beg 17727 . 17728) (nil tag-attr t 17727 . 17728) (nil tag-name "v-btn" 17727 . 17728) (nil tag-type start 17727 . 17728) (nil block-beg 0 17726 . 17727) (nil block-controls 0 17726 . 17727) (nil block-side t 17726 . 17727) (nil block-token delimiter-beg 17726 . 17727) (nil tag-attr-beg 2 17726 . 17727) (nil tag-attr t 17726 . 17727) (nil tag-name "v-btn" 17726 . 17727) (nil tag-type start 17726 . 17727) (nil tag-name "v-btn" 17711 . 17726) (nil tag-type start 17711 . 17726) (nil tag-attr t 17710 . 17711) (nil tag-attr-end 4 17710 . 17711) (nil tag-name "v-btn" 17710 . 17711) (nil tag-type start 17710 . 17711) (nil font-lock-face web-mode-html-attr-value-face 17710 . 17711) (nil tag-attr t 17707 . 17710) (nil tag-name "v-btn" 17707 . 17710) (nil tag-type start 17707 . 17710) (nil font-lock-face web-mode-html-attr-value-face 17707 . 17710) (nil tag-attr t 17706 . 17707) (nil tag-name "v-btn" 17706 . 17707) (nil tag-type start 17706 . 17707) (nil font-lock-face web-mode-html-attr-equal-face 17706 . 17707) (nil tag-attr t 17703 . 17706) (nil tag-name "v-btn" 17703 . 17706) (nil tag-type start 17703 . 17706) (nil font-lock-face web-mode-html-attr-engine-face 17703 . 17706) (nil tag-attr-beg 2 17702 . 17703) (nil tag-attr t 17702 . 17703) (nil tag-name "v-btn" 17702 . 17703) (nil tag-type start 17702 . 17703) (nil font-lock-face web-mode-html-attr-engine-face 17702 . 17703) (nil tag-name "v-btn" 17687 . 17702) (nil tag-type start 17687 . 17702) (nil tag-attr t 17686 . 17687) (nil tag-attr-end 6 17686 . 17687) (nil tag-name "v-btn" 17686 . 17687) (nil tag-type start 17686 . 17687) (nil font-lock-face web-mode-html-attr-value-face 17686 . 17687) (nil tag-attr t 17680 . 17686) (nil tag-name "v-btn" 17680 . 17686) (nil tag-type start 17680 . 17686) (nil font-lock-face web-mode-html-attr-value-face 17680 . 17686) (nil tag-attr t 17679 . 17680) (nil tag-name "v-btn" 17679 . 17680) (nil tag-type start 17679 . 17680) (nil font-lock-face web-mode-html-attr-equal-face 17679 . 17680) (nil tag-attr t 17674 . 17679) (nil tag-name "v-btn" 17674 . 17679) (nil tag-type start 17674 . 17679) (nil font-lock-face web-mode-html-attr-engine-face 17674 . 17679) (nil tag-attr-beg 2 17673 . 17674) (nil tag-attr t 17673 . 17674) (nil tag-name "v-btn" 17673 . 17674) (nil tag-type start 17673 . 17674) (nil font-lock-face web-mode-html-attr-engine-face 17673 . 17674) (nil tag-name "v-btn" 17658 . 17673) (nil tag-type start 17658 . 17673) (nil tag-name "v-btn" 17653 . 17658) (nil tag-type start 17653 . 17658) (nil font-lock-face web-mode-html-tag-custom-face 17653 . 17658) (nil tag-name "v-btn" 17652 . 17653) (nil tag-type start 17652 . 17653) (nil tag-beg 19 17652 . 17653) (nil font-lock-face web-mode-html-tag-bracket-face 17652 . 17653) (nil tag-name "template" 17638 . 17639) (nil tag-type start 17638 . 17639) (nil tag-end t 17638 . 17639) (nil font-lock-face web-mode-html-tag-bracket-face 17638 . 17639) (nil block-side t 17637 . 17638) (nil block-end t 17637 . 17638) (nil block-token delimiter-end 17637 . 17638) (nil tag-attr t 17637 . 17638) (nil tag-attr-end 16 17637 . 17638) (nil tag-name "template" 17637 . 17638) (nil tag-type start 17637 . 17638) (nil block-side t 17635 . 17637) (nil tag-attr t 17635 . 17637) (nil tag-name "template" 17635 . 17637) (nil tag-type start 17635 . 17637) (nil block-side t 17634 . 17635) (nil tag-attr t 17634 . 17635) (nil tag-name "template" 17634 . 17635) (nil tag-type start 17634 . 17635) (nil block-side t 17633 . 17634) (nil tag-attr t 17633 . 17634) (nil tag-name "template" 17633 . 17634) (nil tag-type start 17633 . 17634) (nil block-side t 17632 . 17633) (nil tag-attr t 17632 . 17633) (nil tag-name "template" 17632 . 17633) (nil tag-type start 17632 . 17633) (nil block-side t 17631 . 17632) (nil tag-attr t 17631 . 17632) (nil tag-name "template" 17631 . 17632) (nil tag-type start 17631 . 17632) (nil block-side t 17630 . 17631) (nil tag-attr t 17630 . 17631) (nil tag-name "template" 17630 . 17631) (nil tag-type start 17630 . 17631) (nil block-side t 17628 . 17630) (nil tag-attr t 17628 . 17630) (nil tag-name "template" 17628 . 17630) (nil tag-type start 17628 . 17630) (nil block-side t 17627 . 17628) (nil tag-attr t 17627 . 17628) (nil tag-name "template" 17627 . 17628) (nil tag-type start 17627 . 17628) (nil block-side t 17626 . 17627) (nil tag-attr t 17626 . 17627) (nil tag-name "template" 17626 . 17627) (nil tag-type start 17626 . 17627) (nil block-side t 17624 . 17626) (nil tag-attr t 17624 . 17626) (nil tag-name "template" 17624 . 17626) (nil tag-type start 17624 . 17626) (nil block-side t 17623 . 17624) (nil block-token delimiter-beg 17623 . 17624) (nil tag-attr t 17623 . 17624) (nil tag-name "template" 17623 . 17624) (nil tag-type start 17623 . 17624) (nil block-side t 17622 . 17623) (nil block-token delimiter-beg 17622 . 17623) (nil tag-attr t 17622 . 17623) (nil tag-name "template" 17622 . 17623) (nil tag-type start 17622 . 17623) (nil block-side t 17621 . 17622) (nil block-token delimiter-beg 17621 . 17622) (nil tag-attr t 17621 . 17622) (nil tag-name "template" 17621 . 17622) (nil tag-type start 17621 . 17622) (nil block-side t 17620 . 17621) (nil block-token delimiter-beg 17620 . 17621) (nil tag-attr t 17620 . 17621) (nil tag-name "template" 17620 . 17621) (nil tag-type start 17620 . 17621) (nil block-side t 17619 . 17620) (nil block-token delimiter-beg 17619 . 17620) (nil tag-attr t 17619 . 17620) (nil tag-name "template" 17619 . 17620) (nil tag-type start 17619 . 17620) (nil block-side t 17618 . 17619) (nil block-token delimiter-beg 17618 . 17619) (nil tag-attr t 17618 . 17619) (nil tag-name "template" 17618 . 17619) (nil tag-type start 17618 . 17619) (nil block-side t 17617 . 17618) (nil block-token delimiter-beg 17617 . 17618) (nil tag-attr t 17617 . 17618) (nil tag-name "template" 17617 . 17618) (nil tag-type start 17617 . 17618) (nil block-side t 17616 . 17617) (nil block-token delimiter-beg 17616 . 17617) (nil tag-attr t 17616 . 17617) (nil tag-name "template" 17616 . 17617) (nil tag-type start 17616 . 17617) (nil block-side t 17615 . 17616) (nil block-token delimiter-beg 17615 . 17616) (nil tag-attr t 17615 . 17616) (nil tag-name "template" 17615 . 17616) (nil tag-type start 17615 . 17616) (nil block-side t 17614 . 17615) (nil block-token delimiter-beg 17614 . 17615) (nil tag-attr t 17614 . 17615) (nil tag-name "template" 17614 . 17615) (nil tag-type start 17614 . 17615) (nil block-side t 17613 . 17614) (nil block-token delimiter-beg 17613 . 17614) (nil tag-attr t 17613 . 17614) (nil tag-name "template" 17613 . 17614) (nil tag-type start 17613 . 17614) (nil block-beg 0 17612 . 17613) (nil block-controls 0 17612 . 17613) (nil block-side t 17612 . 17613) (nil block-token delimiter-beg 17612 . 17613) (nil tag-attr t 17612 . 17613) (nil tag-name "template" 17612 . 17613) (nil tag-type start 17612 . 17613) (nil tag-attr t 17607 . 17612) (nil tag-name "template" 17607 . 17612) (nil tag-type start 17607 . 17612) (nil font-lock-face web-mode-html-attr-engine-face 17607 . 17612) (nil tag-attr-beg 2 17606 . 17607) (nil tag-attr t 17606 . 17607) (nil tag-name "template" 17606 . 17607) (nil tag-type start 17606 . 17607) (nil font-lock-face web-mode-html-attr-engine-face 17606 . 17607) (nil tag-name "template" 17605 . 17606) (nil tag-type start 17605 . 17606) (nil tag-name "template" 17597 . 17605) (nil tag-type start 17597 . 17605) (nil font-lock-face web-mode-html-tag-face 17597 . 17605) (nil tag-name "template" 17596 . 17597) (nil tag-type start 17596 . 17597) (nil tag-beg 17 17596 . 17597) (nil font-lock-face web-mode-html-tag-bracket-face 17596 . 17597) (nil tag-name "v-tooltip" 17584 . 17585) (nil tag-type start 17584 . 17585) (nil tag-end t 17584 . 17585) (nil font-lock-face web-mode-html-tag-bracket-face 17584 . 17585) (nil tag-attr t 17583 . 17584) (nil tag-attr-end 0 17583 . 17584) (nil tag-name "v-tooltip" 17583 . 17584) (nil tag-type start 17583 . 17584) (nil font-lock-face web-mode-html-attr-name-face 17583 . 17584) (nil tag-attr t 17582 . 17583) (nil tag-name "v-tooltip" 17582 . 17583) (nil tag-type start 17582 . 17583) (nil font-lock-face web-mode-html-attr-name-face 17582 . 17583) (nil tag-attr-beg 0 17581 . 17582) (nil tag-attr t 17581 . 17582) (nil tag-name "v-tooltip" 17581 . 17582) (nil tag-type start 17581 . 17582) (nil font-lock-face web-mode-html-attr-name-face 17581 . 17582) (nil tag-name "v-tooltip" 17580 . 17581) (nil tag-type start 17580 . 17581) (nil tag-name "v-tooltip" 17571 . 17580) (nil tag-type start 17571 . 17580) (nil font-lock-face web-mode-html-tag-custom-face 17571 . 17580) (nil tag-name "v-tooltip" 17570 . 17571) (nil tag-type start 17570 . 17571) (nil tag-beg 19 17570 . 17571) (nil font-lock-face web-mode-html-tag-bracket-face 17570 . 17571) (nil tag-name "v-col" 17560 . 17561) (nil tag-type start 17560 . 17561) (nil tag-end t 17560 . 17561) (nil font-lock-face web-mode-html-tag-bracket-face 17560 . 17561) (nil tag-attr t 17559 . 17560) (nil tag-attr-end 4 17559 . 17560) (nil tag-name "v-col" 17559 . 17560) (nil tag-type start 17559 . 17560) (nil font-lock-face web-mode-html-attr-value-face 17559 . 17560) (nil tag-attr t 17557 . 17559) (nil tag-name "v-col" 17557 . 17559) (nil tag-type start 17557 . 17559) (nil font-lock-face web-mode-html-attr-value-face 17557 . 17559) (nil tag-attr t 17556 . 17557) (nil tag-name "v-col" 17556 . 17557) (nil tag-type start 17556 . 17557) (nil font-lock-face web-mode-html-attr-equal-face 17556 . 17557) (nil tag-attr t 17553 . 17556) (nil tag-name "v-col" 17553 . 17556) (nil tag-type start 17553 . 17556) (nil font-lock-face web-mode-html-attr-name-face 17553 . 17556) (nil tag-attr-beg 0 17552 . 17553) (nil tag-attr t 17552 . 17553) (nil tag-name "v-col" 17552 . 17553) (nil tag-type start 17552 . 17553) (nil font-lock-face web-mode-html-attr-name-face 17552 . 17553) (nil tag-name "v-col" 17551 . 17552) (nil tag-type start 17551 . 17552) (nil tag-name "v-col" 17546 . 17551) (nil tag-type start 17546 . 17551) (nil font-lock-face web-mode-html-tag-custom-face 17546 . 17551) (nil tag-name "v-col" 17545 . 17546) (nil tag-type start 17545 . 17546) (nil tag-beg 19 17545 . 17546) (nil font-lock-face web-mode-html-tag-bracket-face 17545 . 17546) (17539 . 18217)) nil (25828 49615 241761 1000) 0 nil])
([nil nil (("      " . -17539) 17533) nil (25828 49615 241575 382000) 0 nil])
([nil nil ((30961 . 30965) ("    " . 30960) (undo-tree-id1117 . -4) (30960 . 30965) (#("    " 0 4 (face whitespace-trailing)) . 30959) (30959 . 30963) (30959 . 30960) (t 25828 49615 294759 789000)) nil (25828 50222 144583 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31224 . 31225) (nil tag-name "v-snackbars" 31224 . 31225) (nil tag-type end 31224 . 31225) (nil tag-end t 31224 . 31225) (nil font-lock-face web-mode-html-tag-bracket-face 31224 . 31225) (nil tag-name "v-snackbars" 31213 . 31224) (nil tag-type end 31213 . 31224) (nil font-lock-face web-mode-html-tag-custom-face 31213 . 31224) (nil tag-name "v-snackbars" 31212 . 31213) (nil tag-type end 31212 . 31213) (nil font-lock-face web-mode-html-tag-bracket-face 31212 . 31213) (nil tag-name "v-snackbars" 31211 . 31212) (nil tag-type end 31211 . 31212) (nil tag-beg 22 31211 . 31212) (nil font-lock-face web-mode-html-tag-bracket-face 31211 . 31212) (nil tag-name "template" 31205 . 31206) (nil tag-type end 31205 . 31206) (nil tag-end t 31205 . 31206) (nil font-lock-face web-mode-html-tag-bracket-face 31205 . 31206) (nil tag-name "template" 31197 . 31205) (nil tag-type end 31197 . 31205) (nil font-lock-face web-mode-html-tag-face 31197 . 31205) (nil tag-name "template" 31196 . 31197) (nil tag-type end 31196 . 31197) (nil font-lock-face web-mode-html-tag-bracket-face 31196 . 31197) (nil tag-name "template" 31195 . 31196) (nil tag-type end 31195 . 31196) (nil tag-beg 20 31195 . 31196) (nil font-lock-face web-mode-html-tag-bracket-face 31195 . 31196) (nil block-side t 31187 . 31188) (nil block-end t 31187 . 31188) (nil block-token delimiter-end 31187 . 31188) (nil font-lock-face web-mode-block-delimiter-face 31187 . 31188) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 31187 . 31188) (nil block-side t 31186 . 31187) (nil block-token delimiter-end 31186 . 31187) (nil font-lock-face web-mode-block-delimiter-face 31186 . 31187) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 31186 . 31187) (nil block-side t 31185 . 31186) (nil block-side t 31184 . 31185) (nil face (rainbow-delimiters-depth-3-face) 31184 . 31185) (nil block-side t 31183 . 31184) (nil block-side t 31182 . 31183) (nil face (rainbow-delimiters-depth-3-face) 31182 . 31183) (nil block-side t 31181 . 31182) (nil face web-mode-variable-name-face 31181 . 31182) (nil block-side t 31180 . 31181) (nil face web-mode-variable-name-face 31180 . 31181) (nil block-side t 31179 . 31180) (nil face web-mode-variable-name-face 31179 . 31180) (nil block-side t 31178 . 31179) (nil face web-mode-variable-name-face 31178 . 31179) (nil block-side t 31177 . 31178) (nil face web-mode-variable-name-face 31177 . 31178) (nil block-side t 31176 . 31177) (nil face web-mode-variable-name-face 31176 . 31177) (nil block-side t 31175 . 31176) (nil face web-mode-variable-name-face 31175 . 31176) (nil block-side t 31174 . 31175) (nil block-side t 31173 . 31174) (nil block-token delimiter-beg 31173 . 31174) (nil font-lock-face web-mode-block-delimiter-face 31173 . 31174) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 31173 . 31174) (nil block-beg 0 31172 . 31173) (nil block-controls 0 31172 . 31173) (nil block-side t 31172 . 31173) (nil block-token delimiter-beg 31172 . 31173) (nil font-lock-face web-mode-block-delimiter-face 31172 . 31173) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 31172 . 31173) (nil tag-name "v-icon" 31162 . 31163) (nil tag-type end 31162 . 31163) (nil tag-end t 31162 . 31163) (nil font-lock-face web-mode-html-tag-bracket-face 31162 . 31163) (nil tag-name "v-icon" 31156 . 31162) (nil tag-type end 31156 . 31162) (nil font-lock-face web-mode-html-tag-custom-face 31156 . 31162) (nil tag-name "v-icon" 31155 . 31156) (nil tag-type end 31155 . 31156) (nil font-lock-face web-mode-html-tag-bracket-face 31155 . 31156) (nil tag-name "v-icon" 31154 . 31155) (nil tag-type end 31154 . 31155) (nil tag-beg 22 31154 . 31155) (nil font-lock-face web-mode-html-tag-bracket-face 31154 . 31155) (nil block-side t 31144 . 31145) (nil block-end t 31144 . 31145) (nil block-token delimiter-end 31144 . 31145) (nil font-lock-face web-mode-block-delimiter-face 31144 . 31145) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 31144 . 31145) (nil block-side t 31143 . 31144) (nil block-token delimiter-end 31143 . 31144) (nil font-lock-face web-mode-block-delimiter-face 31143 . 31144) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 31143 . 31144) (nil block-side t 31141 . 31143) (nil block-side t 31140 . 31141) (nil face (rainbow-delimiters-depth-3-face) 31140 . 31141) (nil block-side t 31139 . 31140) (nil block-side t 31138 . 31139) (nil face (rainbow-delimiters-depth-3-face) 31138 . 31139) (nil block-side t 31137 . 31138) (nil face web-mode-variable-name-face 31137 . 31138) (nil block-side t 31136 . 31137) (nil face web-mode-variable-name-face 31136 . 31137) (nil block-side t 31135 . 31136) (nil face web-mode-variable-name-face 31135 . 31136) (nil block-side t 31134 . 31135) (nil face web-mode-variable-name-face 31134 . 31135) (nil block-side t 31133 . 31134) (nil face web-mode-variable-name-face 31133 . 31134) (nil block-side t 31132 . 31133) (nil face web-mode-variable-name-face 31132 . 31133) (nil block-side t 31131 . 31132) (nil face web-mode-variable-name-face 31131 . 31132) (nil block-side t 31130 . 31131) (nil block-side t 31129 . 31130) (nil block-token delimiter-beg 31129 . 31130) (nil font-lock-face web-mode-block-delimiter-face 31129 . 31130) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 31129 . 31130) (nil block-beg 0 31128 . 31129) (nil block-controls 0 31128 . 31129) (nil block-side t 31128 . 31129) (nil block-token delimiter-beg 31128 . 31129) (nil font-lock-face web-mode-block-delimiter-face 31128 . 31129) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 31128 . 31129) (nil tag-name "v-icon" 31116 . 31117) (nil tag-type start 31116 . 31117) (nil tag-end t 31116 . 31117) (nil font-lock-face web-mode-html-tag-bracket-face 31116 . 31117) (nil tag-name "v-icon" 31107 . 31116) (nil tag-type start 31107 . 31116) (nil tag-attr t 31106 . 31107) (nil tag-attr-end 0 31106 . 31107) (nil tag-name "v-icon" 31106 . 31107) (nil tag-type start 31106 . 31107) (nil font-lock-face web-mode-html-attr-name-face 31106 . 31107) (nil tag-attr t 31104 . 31106) (nil tag-name "v-icon" 31104 . 31106) (nil tag-type start 31104 . 31106) (nil font-lock-face web-mode-html-attr-name-face 31104 . 31106) (nil tag-attr-beg 0 31103 . 31104) (nil tag-attr t 31103 . 31104) (nil tag-name "v-icon" 31103 . 31104) (nil tag-type start 31103 . 31104) (nil font-lock-face web-mode-html-attr-name-face 31103 . 31104) (nil tag-name "v-icon" 31092 . 31103) (nil tag-type start 31092 . 31103) (nil tag-attr t 31091 . 31092) (nil tag-attr-end 0 31091 . 31092) (nil tag-name "v-icon" 31091 . 31092) (nil tag-type start 31091 . 31092) (nil font-lock-face web-mode-html-attr-name-face 31091 . 31092) (nil tag-attr t 31089 . 31091) (nil tag-name "v-icon" 31089 . 31091) (nil tag-type start 31089 . 31091) (nil font-lock-face web-mode-html-attr-name-face 31089 . 31091) (nil tag-attr-beg 0 31088 . 31089) (nil tag-attr t 31088 . 31089) (nil tag-name "v-icon" 31088 . 31089) (nil tag-type start 31088 . 31089) (nil font-lock-face web-mode-html-attr-name-face 31088 . 31089) (nil tag-name "v-icon" 31077 . 31088) (nil tag-type start 31077 . 31088) (nil tag-name "v-icon" 31071 . 31077) (nil tag-type start 31071 . 31077) (nil font-lock-face web-mode-html-tag-custom-face 31071 . 31077) (nil tag-name "v-icon" 31070 . 31071) (nil tag-type start 31070 . 31071) (nil tag-beg 19 31070 . 31071) (nil font-lock-face web-mode-html-tag-bracket-face 31070 . 31071) (nil tag-name "template" 31060 . 31061) (nil tag-type start 31060 . 31061) (nil tag-end t 31060 . 31061) (nil font-lock-face web-mode-html-tag-bracket-face 31060 . 31061) (nil block-side t 31059 . 31060) (nil block-end t 31059 . 31060) (nil block-token delimiter-end 31059 . 31060) (nil tag-attr t 31059 . 31060) (nil tag-attr-end 14 31059 . 31060) (nil tag-name "template" 31059 . 31060) (nil tag-type start 31059 . 31060) (nil font-lock-face web-mode-block-delimiter-face 31059 . 31060) (nil block-side t 31058 . 31059) (nil tag-attr t 31058 . 31059) (nil tag-name "template" 31058 . 31059) (nil tag-type start 31058 . 31059) (nil block-side t 31057 . 31058) (nil tag-attr t 31057 . 31058) (nil tag-name "template" 31057 . 31058) (nil tag-type start 31057 . 31058) (nil face web-mode-variable-name-face 31057 . 31058) (nil block-side t 31056 . 31057) (nil tag-attr t 31056 . 31057) (nil tag-name "template" 31056 . 31057) (nil tag-type start 31056 . 31057) (nil face web-mode-variable-name-face 31056 . 31057) (nil block-side t 31055 . 31056) (nil tag-attr t 31055 . 31056) (nil tag-name "template" 31055 . 31056) (nil tag-type start 31055 . 31056) (nil face web-mode-variable-name-face 31055 . 31056) (nil block-side t 31054 . 31055) (nil tag-attr t 31054 . 31055) (nil tag-name "template" 31054 . 31055) (nil tag-type start 31054 . 31055) (nil face web-mode-variable-name-face 31054 . 31055) (nil block-side t 31053 . 31054) (nil tag-attr t 31053 . 31054) (nil tag-name "template" 31053 . 31054) (nil tag-type start 31053 . 31054) (nil face web-mode-variable-name-face 31053 . 31054) (nil block-side t 31052 . 31053) (nil tag-attr t 31052 . 31053) (nil tag-name "template" 31052 . 31053) (nil tag-type start 31052 . 31053) (nil face web-mode-variable-name-face 31052 . 31053) (nil block-side t 31051 . 31052) (nil tag-attr t 31051 . 31052) (nil tag-name "template" 31051 . 31052) (nil tag-type start 31051 . 31052) (nil face web-mode-variable-name-face 31051 . 31052) (nil block-side t 31050 . 31051) (nil tag-attr t 31050 . 31051) (nil tag-name "template" 31050 . 31051) (nil tag-type start 31050 . 31051) (nil block-side t 31049 . 31050) (nil block-token delimiter-beg 31049 . 31050) (nil tag-attr t 31049 . 31050) (nil tag-name "template" 31049 . 31050) (nil tag-type start 31049 . 31050) (nil font-lock-face web-mode-block-delimiter-face 31049 . 31050) (nil block-side t 31048 . 31049) (nil block-token delimiter-beg 31048 . 31049) (nil tag-attr t 31048 . 31049) (nil tag-name "template" 31048 . 31049) (nil tag-type start 31048 . 31049) (nil font-lock-face web-mode-block-delimiter-face 31048 . 31049) (nil block-side t 31047 . 31048) (nil block-token delimiter-beg 31047 . 31048) (nil tag-attr t 31047 . 31048) (nil tag-name "template" 31047 . 31048) (nil tag-type start 31047 . 31048) (nil font-lock-face web-mode-block-delimiter-face 31047 . 31048) (nil block-side t 31046 . 31047) (nil block-token delimiter-beg 31046 . 31047) (nil tag-attr t 31046 . 31047) (nil tag-name "template" 31046 . 31047) (nil tag-type start 31046 . 31047) (nil font-lock-face web-mode-block-delimiter-face 31046 . 31047) (nil block-side t 31045 . 31046) (nil block-token delimiter-beg 31045 . 31046) (nil tag-attr t 31045 . 31046) (nil tag-name "template" 31045 . 31046) (nil tag-type start 31045 . 31046) (nil font-lock-face web-mode-block-delimiter-face 31045 . 31046) (nil block-side t 31044 . 31045) (nil block-token delimiter-beg 31044 . 31045) (nil tag-attr t 31044 . 31045) (nil tag-name "template" 31044 . 31045) (nil tag-type start 31044 . 31045) (nil font-lock-face web-mode-block-delimiter-face 31044 . 31045) (nil block-side t 31043 . 31044) (nil block-token delimiter-beg 31043 . 31044) (nil tag-attr t 31043 . 31044) (nil tag-name "template" 31043 . 31044) (nil tag-type start 31043 . 31044) (nil font-lock-face web-mode-block-delimiter-face 31043 . 31044) (nil block-side t 31042 . 31043) (nil block-token delimiter-beg 31042 . 31043) (nil tag-attr t 31042 . 31043) (nil tag-name "template" 31042 . 31043) (nil tag-type start 31042 . 31043) (nil font-lock-face web-mode-block-delimiter-face 31042 . 31043) (nil block-side t 31041 . 31042) (nil block-token delimiter-beg 31041 . 31042) (nil tag-attr t 31041 . 31042) (nil tag-name "template" 31041 . 31042) (nil tag-type start 31041 . 31042) (nil font-lock-face web-mode-block-delimiter-face 31041 . 31042) (nil block-beg 0 31040 . 31041) (nil block-controls 0 31040 . 31041) (nil block-side t 31040 . 31041) (nil block-token delimiter-beg 31040 . 31041) (nil tag-attr t 31040 . 31041) (nil tag-name "template" 31040 . 31041) (nil tag-type start 31040 . 31041) (nil font-lock-face web-mode-block-delimiter-face 31040 . 31041) (nil tag-attr t 31035 . 31040) (nil tag-name "template" 31035 . 31040) (nil tag-type start 31035 . 31040) (nil font-lock-face web-mode-html-attr-engine-face 31035 . 31040) (nil tag-attr-beg 2 31034 . 31035) (nil tag-attr t 31034 . 31035) (nil tag-name "template" 31034 . 31035) (nil tag-type start 31034 . 31035) (nil font-lock-face web-mode-html-attr-engine-face 31034 . 31035) (nil tag-name "template" 31033 . 31034) (nil tag-type start 31033 . 31034) (nil tag-name "template" 31025 . 31033) (nil tag-type start 31025 . 31033) (nil font-lock-face web-mode-html-tag-face 31025 . 31033) (nil tag-name "template" 31024 . 31025) (nil tag-type start 31024 . 31025) (nil tag-beg 17 31024 . 31025) (nil font-lock-face web-mode-html-tag-bracket-face 31024 . 31025) (nil tag-name "v-snackbars" 31016 . 31017) (nil tag-type start 31016 . 31017) (nil tag-end t 31016 . 31017) (nil font-lock-face web-mode-html-tag-bracket-face 31016 . 31017) (nil tag-attr t 31015 . 31016) (nil tag-attr-end 12 31015 . 31016) (nil tag-name "v-snackbars" 31015 . 31016) (nil tag-type start 31015 . 31016) (nil font-lock-face web-mode-html-attr-value-face 31015 . 31016) (nil tag-attr t 31003 . 31015) (nil tag-name "v-snackbars" 31003 . 31015) (nil tag-type start 31003 . 31015) (nil font-lock-face web-mode-html-attr-value-face 31003 . 31015) (nil tag-attr t 31002 . 31003) (nil tag-name "v-snackbars" 31002 . 31003) (nil tag-type start 31002 . 31003) (nil font-lock-face web-mode-html-attr-equal-face 31002 . 31003) (nil tag-attr t 30991 . 31002) (nil tag-name "v-snackbars" 30991 . 31002) (nil tag-type start 30991 . 31002) (nil font-lock-face web-mode-html-attr-name-face 30991 . 31002) (nil tag-attr-beg 0 30990 . 30991) (nil tag-attr t 30990 . 30991) (nil tag-name "v-snackbars" 30990 . 30991) (nil tag-type start 30990 . 30991) (nil font-lock-face web-mode-html-attr-name-face 30990 . 30991) (nil tag-name "v-snackbars" 30988 . 30990) (nil tag-type start 30988 . 30990) (nil tag-attr t 30987 . 30988) (nil tag-attr-end 0 30987 . 30988) (nil tag-name "v-snackbars" 30987 . 30988) (nil tag-type start 30987 . 30988) (nil font-lock-face web-mode-html-attr-name-face 30987 . 30988) (nil tag-attr t 30985 . 30987) (nil tag-name "v-snackbars" 30985 . 30987) (nil tag-type start 30985 . 30987) (nil font-lock-face web-mode-html-attr-name-face 30985 . 30987) (nil tag-attr-beg 0 30984 . 30985) (nil tag-attr t 30984 . 30985) (nil tag-name "v-snackbars" 30984 . 30985) (nil tag-type start 30984 . 30985) (nil font-lock-face web-mode-html-attr-name-face 30984 . 30985) (nil tag-name "v-snackbars" 30983 . 30984) (nil tag-type start 30983 . 30984) (nil tag-attr t 30982 . 30983) (nil tag-attr-end 0 30982 . 30983) (nil tag-name "v-snackbars" 30982 . 30983) (nil tag-type start 30982 . 30983) (nil font-lock-face web-mode-html-attr-name-face 30982 . 30983) (nil tag-attr t 30978 . 30982) (nil tag-name "v-snackbars" 30978 . 30982) (nil tag-type start 30978 . 30982) (nil font-lock-face web-mode-html-attr-name-face 30978 . 30982) (nil tag-attr-beg 0 30977 . 30978) (nil tag-attr t 30977 . 30978) (nil tag-name "v-snackbars" 30977 . 30978) (nil tag-type start 30977 . 30978) (nil font-lock-face web-mode-html-attr-name-face 30977 . 30978) (nil tag-name "v-snackbars" 30976 . 30977) (nil tag-type start 30976 . 30977) (nil tag-name "v-snackbars" 30965 . 30976) (nil tag-type start 30965 . 30976) (nil font-lock-face web-mode-html-tag-custom-face 30965 . 30976) (nil tag-name "v-snackbars" 30964 . 30965) (nil tag-type start 30964 . 30965) (nil tag-beg 19 30964 . 30965) (nil font-lock-face web-mode-html-tag-bracket-face 30964 . 30965) (30960 . 31225)) nil (25828 50222 144561 767000) 0 nil])
([nil nil ((34055 . 34056)) nil (25828 50222 144480 362000) 0 nil])
([nil nil ((34056 . 34065)) nil (25828 50222 144479 476000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34080 . 34081) (nil part-side javascript 34080 . 34081) (nil part-side javascript 34079 . 34080) (nil face (rainbow-delimiters-depth-4-face) 34079 . 34080) (nil part-side javascript 34078 . 34079) (nil face (rainbow-delimiters-depth-4-face) 34078 . 34079) (nil part-side javascript 34076 . 34078) (nil part-side javascript 34065 . 34076) (nil face web-mode-variable-name-face 34065 . 34076) (34065 . 34081)) nil (25828 50222 144478 105000) 0 nil])
([nil nil ((#("," 0 1 (rear-nonsticky t part-side javascript)) . -34080) (undo-tree-id1116 . -1) 34081) nil (25828 50222 144474 989000) 0 nil])
([nil nil ((37856 . 37869)) nil (25828 50222 144472 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38073 . 38074) (nil part-side javascript 38073 . 38074) (nil face (rainbow-delimiters-depth-7-face) 38073 . 38074) (nil part-side javascript 38072 . 38073) (nil face (rainbow-delimiters-depth-8-face) 38072 . 38073) (nil part-side javascript 38053 . 38072) (nil part-side javascript 38046 . 38053) (nil face web-mode-variable-name-face 38046 . 38053) (nil part-side javascript 38030 . 38046) (nil part-side javascript 38029 . 38030) (nil part-token string 38029 . 38030) (nil syntax-table (15) 38029 . 38030) (nil font-lock-face web-mode-javascript-string-face 38029 . 38030) (nil part-side javascript 38024 . 38029) (nil part-token string 38024 . 38029) (nil font-lock-face web-mode-javascript-string-face 38024 . 38029) (nil part-side javascript 38023 . 38024) (nil part-token string 38023 . 38024) (nil syntax-table (15) 38023 . 38024) (nil font-lock-face web-mode-javascript-string-face 38023 . 38024) (nil part-side javascript 38021 . 38023) (nil part-side javascript 38016 . 38021) (nil face web-mode-variable-name-face 38016 . 38021) (nil part-side javascript 38000 . 38016) (nil part-side javascript 37999 . 38000) (nil face (rainbow-delimiters-depth-9-face) 37999 . 38000) (nil part-side javascript 37998 . 37999) (nil part-token string 37998 . 37999) (nil syntax-table (15) 37998 . 37999) (nil font-lock-face web-mode-javascript-string-face 37998 . 37999) (nil part-side javascript 37972 . 37998) (nil part-token string 37972 . 37998) (nil font-lock-face web-mode-javascript-string-face 37972 . 37998) (nil part-side javascript 37971 . 37972) (nil part-token string 37971 . 37972) (nil syntax-table (15) 37971 . 37972) (nil font-lock-face web-mode-javascript-string-face 37971 . 37972) (nil part-side javascript 37969 . 37971) (nil part-side javascript 37968 . 37969) (nil face (rainbow-delimiters-depth-1-face) 37968 . 37969) (nil part-side javascript 37967 . 37968) (nil part-token string 37967 . 37968) (nil syntax-table (15) 37967 . 37968) (nil font-lock-face web-mode-javascript-string-face 37967 . 37968) (nil part-side javascript 37938 . 37967) (nil part-token string 37938 . 37967) (nil font-lock-face web-mode-javascript-string-face 37938 . 37967) (nil part-side javascript 37937 . 37938) (nil part-token string 37937 . 37938) (nil syntax-table (15) 37937 . 37938) (nil font-lock-face web-mode-javascript-string-face 37937 . 37938) (nil part-side javascript 37936 . 37937) (nil face (rainbow-delimiters-depth-1-face) 37936 . 37937) (nil part-side javascript 37933 . 37936) (nil part-side javascript 37929 . 37933) (nil face web-mode-constant-face 37929 . 37933) (nil part-side javascript 37928 . 37929) (nil face (rainbow-delimiters-depth-9-face) 37928 . 37929) (nil part-side javascript 37926 . 37928) (nil part-side javascript 37919 . 37926) (nil face web-mode-variable-name-face 37919 . 37926) (nil part-side javascript 37904 . 37919) (nil part-side javascript 37903 . 37904) (nil face (rainbow-delimiters-depth-8-face) 37903 . 37904) (nil part-side javascript 37902 . 37903) (nil face (rainbow-delimiters-depth-7-face) 37902 . 37903) (nil part-side javascript 37898 . 37902) (nil face web-mode-function-call-face 37898 . 37902) (nil part-side javascript 37885 . 37898) (nil part-side javascript 37881 . 37885) (nil face web-mode-constant-face 37881 . 37885) (nil part-side javascript 37869 . 37881) (37869 . 38074)) nil (25828 50222 144468 250000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -37869) 37857) nil (25828 50222 144452 581000) 0 nil])
([nil nil ((#("green" 0 5 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 38012) (undo-tree-id1112 . -5) (undo-tree-id1113 . -5) (undo-tree-id1114 . -5) (undo-tree-id1115 . -5)) nil (25828 50222 144450 996000) 0 nil])
([nil nil ((38012 . 38015)) nil (25828 50222 144446 81000) 0 nil])
([nil nil ((#("this.$t('Integration.Azure.test_create'), 'mdi-checkbox-marked-circle'" 0 4 (part-side javascript face web-mode-constant-face) 4 7 (part-side javascript) 7 8 (part-side javascript face (rainbow-delimiters-depth-1-face)) 8 9 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 9 38 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 38 39 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-1-face)) 40 42 (part-side javascript) 42 43 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 43 69 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 69 70 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 37917) (undo-tree-id1108 . -70) (undo-tree-id1109 . -19) (undo-tree-id1110 . -70) (undo-tree-id1111 . -70)) nil (25828 50222 144444 716000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37974 . 37975) (nil part-side javascript 37974 . 37975) (nil part-token string 37974 . 37975) (nil syntax-table (15) 37974 . 37975) (nil font-lock-face web-mode-javascript-string-face 37974 . 37975) (nil part-side javascript 37950 . 37974) (nil part-token string 37950 . 37974) (nil font-lock-face web-mode-javascript-string-face 37950 . 37974) (nil part-side javascript 37949 . 37950) (nil part-token string 37949 . 37950) (nil syntax-table (15) 37949 . 37950) (nil font-lock-face web-mode-javascript-string-face 37949 . 37950) (nil part-side javascript 37947 . 37949) (nil part-side javascript 37946 . 37947) (nil face (rainbow-delimiters-depth-1-face) 37946 . 37947) (nil part-side javascript 37945 . 37946) (nil part-token string 37945 . 37946) (nil syntax-table (15) 37945 . 37946) (nil font-lock-face web-mode-javascript-string-face 37945 . 37946) (nil part-side javascript 37938 . 37945) (nil part-token string 37938 . 37945) (nil font-lock-face web-mode-javascript-string-face 37938 . 37945) (nil part-side javascript 37937 . 37938) (nil part-token string 37937 . 37938) (nil syntax-table (15) 37937 . 37938) (nil font-lock-face web-mode-javascript-string-face 37937 . 37938) (nil part-side javascript 37936 . 37937) (nil face (rainbow-delimiters-depth-1-face) 37936 . 37937) (nil part-side javascript 37917 . 37936) (37917 . 37975)) nil (25828 50222 144438 384000) 0 nil])
([nil nil ((#("error.response.data['message']" 0 19 (part-side javascript) 19 20 (part-side javascript face (rainbow-delimiters-depth-1-face)) 20 21 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 21 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 37917) (undo-tree-id1106 . -30) (undo-tree-id1107 . -30)) nil (25828 50222 144430 972000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37972 . 37973) (nil part-side javascript 37972 . 37973) (nil face (rainbow-delimiters-depth-2-face) 37972 . 37973) (nil part-side javascript 37971 . 37972) (nil part-token string 37971 . 37972) (nil syntax-table (15) 37971 . 37972) (nil font-lock-face web-mode-javascript-string-face 37971 . 37972) (nil part-side javascript 37965 . 37971) (nil part-token string 37965 . 37971) (nil font-lock-face web-mode-javascript-string-face 37965 . 37971) (nil part-side javascript 37964 . 37965) (nil part-token string 37964 . 37965) (nil syntax-table (15) 37964 . 37965) (nil font-lock-face web-mode-javascript-string-face 37964 . 37965) (nil part-side javascript 37963 . 37964) (nil face (rainbow-delimiters-depth-2-face) 37963 . 37964) (nil part-side javascript 37941 . 37963) (nil part-side javascript 37940 . 37941) (nil part-token string 37940 . 37941) (nil syntax-table (15) 37940 . 37941) (nil font-lock-face web-mode-javascript-string-face 37940 . 37941) (nil part-side javascript 37926 . 37940) (nil part-token string 37926 . 37940) (nil font-lock-face web-mode-javascript-string-face 37926 . 37940) (nil part-side javascript 37925 . 37926) (nil part-token string 37925 . 37926) (nil syntax-table (15) 37925 . 37926) (nil font-lock-face web-mode-javascript-string-face 37925 . 37926) (nil part-side javascript 37924 . 37925) (nil face (rainbow-delimiters-depth-1-face) 37924 . 37925) (nil part-side javascript 37921 . 37924) (nil part-side javascript 37917 . 37921) (nil face web-mode-constant-face 37917 . 37921) (37917 . 37973)) nil (25828 50222 144426 305000) 0 nil])
([nil nil ((#("
            this.filterRenameError = this.$t('ErrorMessages.' + error.response.data['errtag'])" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 17 (part-side javascript face web-mode-constant-face) 17 38 (part-side javascript) 38 42 (part-side javascript face web-mode-constant-face) 42 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-8-face)) 46 47 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 47 61 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 61 62 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 62 84 (part-side javascript) 84 85 (part-side javascript face (rainbow-delimiters-depth-9-face)) 85 86 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 86 92 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 92 93 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 93 94 (part-side javascript face (rainbow-delimiters-depth-9-face)) 94 95 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 38074) (undo-tree-id1102 . -95) (undo-tree-id1103 . -1) (undo-tree-id1104 . -94) (undo-tree-id1105 . -95)) nil (25828 50222 144418 410000) 0 nil])
([nil nil ((37826 . 37839)) nil (25828 50222 144413 239000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38069 . 38070) (nil part-side javascript 38069 . 38070) (nil face (rainbow-delimiters-depth-7-face) 38069 . 38070) (nil part-side javascript 38068 . 38069) (nil face (rainbow-delimiters-depth-8-face) 38068 . 38069) (nil part-side javascript 38041 . 38068) (nil part-side javascript 38034 . 38041) (nil face web-mode-variable-name-face 38034 . 38041) (nil part-side javascript 38010 . 38034) (nil part-side javascript 38009 . 38010) (nil part-token string 38009 . 38010) (nil syntax-table (15) 38009 . 38010) (nil font-lock-face web-mode-javascript-string-face 38009 . 38010) (nil part-side javascript 38006 . 38009) (nil part-token string 38006 . 38009) (nil font-lock-face web-mode-javascript-string-face 38006 . 38009) (nil part-side javascript 38005 . 38006) (nil part-token string 38005 . 38006) (nil syntax-table (15) 38005 . 38006) (nil font-lock-face web-mode-javascript-string-face 38005 . 38006) (nil part-side javascript 38003 . 38005) (nil part-side javascript 37998 . 38003) (nil face web-mode-variable-name-face 37998 . 38003) (nil part-side javascript 37974 . 37998) (nil part-side javascript 37973 . 37974) (nil face (rainbow-delimiters-depth-9-face) 37973 . 37974) (nil part-side javascript 37972 . 37973) (nil part-token string 37972 . 37973) (nil syntax-table (15) 37972 . 37973) (nil font-lock-face web-mode-javascript-string-face 37972 . 37973) (nil part-side javascript 37948 . 37972) (nil part-token string 37948 . 37972) (nil font-lock-face web-mode-javascript-string-face 37948 . 37972) (nil part-side javascript 37947 . 37948) (nil part-token string 37947 . 37948) (nil syntax-table (15) 37947 . 37948) (nil font-lock-face web-mode-javascript-string-face 37947 . 37948) (nil part-side javascript 37945 . 37947) (nil part-side javascript 37944 . 37945) (nil face (rainbow-delimiters-depth-1-face) 37944 . 37945) (nil part-side javascript 37943 . 37944) (nil part-token string 37943 . 37944) (nil syntax-table (15) 37943 . 37944) (nil font-lock-face web-mode-javascript-string-face 37943 . 37944) (nil part-side javascript 37936 . 37943) (nil part-token string 37936 . 37943) (nil font-lock-face web-mode-javascript-string-face 37936 . 37943) (nil part-side javascript 37935 . 37936) (nil part-token string 37935 . 37936) (nil syntax-table (15) 37935 . 37936) (nil font-lock-face web-mode-javascript-string-face 37935 . 37936) (nil part-side javascript 37934 . 37935) (nil face (rainbow-delimiters-depth-1-face) 37934 . 37935) (nil part-side javascript 37915 . 37934) (nil part-side javascript 37914 . 37915) (nil face (rainbow-delimiters-depth-9-face) 37914 . 37915) (nil part-side javascript 37912 . 37914) (nil part-side javascript 37905 . 37912) (nil face web-mode-variable-name-face 37905 . 37912) (nil part-side javascript 37882 . 37905) (nil part-side javascript 37881 . 37882) (nil face (rainbow-delimiters-depth-8-face) 37881 . 37882) (nil part-side javascript 37880 . 37881) (nil face (rainbow-delimiters-depth-7-face) 37880 . 37881) (nil part-side javascript 37876 . 37880) (nil face web-mode-function-call-face 37876 . 37880) (nil part-side javascript 37863 . 37876) (nil part-side javascript 37859 . 37863) (nil face web-mode-constant-face 37859 . 37863) (nil part-side javascript 37839 . 37859) (37839 . 38070)) nil (25828 50222 144408 835000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -38016) (#("        " 0 8 (part-side javascript)) . -37990) (#("        " 0 8 (part-side javascript)) . -37962) (#("        " 0 8 (part-side javascript)) . -37877) (#("                    " 0 20 (part-side javascript)) . -37839) 37827) nil (25828 50222 144390 608000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37970) (undo-tree-id1099 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37971) (undo-tree-id1100 . -1) (#("d" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37972) (undo-tree-id1101 . -1) 37973) nil (25828 50222 144387 742000) 0 nil])
([nil nil ((37970 . 37972)) nil (25828 50222 144381 509000) 0 nil])
([nil nil ((37972 . 37975)) nil (25828 50222 144380 573000) 0 nil])
([nil nil ((#("error.response.data['message']" 0 19 (part-side javascript) 19 20 (part-side javascript face (rainbow-delimiters-depth-1-face)) 20 21 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 21 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 37887) (undo-tree-id1097 . -30) (undo-tree-id1098 . -30)) nil (25828 50222 144379 186000) 0 nil])
([nil nil ((#("mdi-close-circle-outline" 0 24 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 37890) (undo-tree-id1094 . -24) (undo-tree-id1095 . -24) (undo-tree-id1096 . -24)) nil (25828 50222 144375 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37915 . 37916) (nil part-side javascript 37890 . 37916) (nil part-token string 37890 . 37916) (nil font-lock-face web-mode-javascript-string-face 37890 . 37916) (37890 . 37916)) nil (25828 50222 144371 84000) 0 nil])
([nil nil ((37887 . 37889)) nil (25828 50222 144369 114000) 0 nil])
([nil nil ((37888 . 37893)) nil (25828 50222 144368 58000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37892) (undo-tree-id1093 . -1) 37893) nil (25828 50222 144366 704000) 0 nil])
([nil nil ((37892 . 37897)) nil (25828 50222 144364 36000) 0 nil])
([nil nil ((#("T" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37888) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37889) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37890) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37891) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (#("v" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37892) (undo-tree-id1088 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37893) (undo-tree-id1089 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37894) (undo-tree-id1090 . -1) (#("w" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37895) (undo-tree-id1091 . -1) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37896) (undo-tree-id1092 . -1) 37897) nil (25828 50222 144360 81000) 0 nil])
([nil nil ((37888 . 37895)) nil (25828 50222 144340 375000) 0 nil])
([nil nil ((#("R" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37888) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37889) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37890) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37891) (undo-tree-id1073 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37892) (undo-tree-id1074 . -1) (#("u" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37893) (undo-tree-id1075 . -1) (#("c" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37894) (undo-tree-id1076 . -1) 37895) nil (25828 50222 144337 464000) 0 nil])
([nil nil ((37888 . 37909)) nil (25828 50222 144324 222000) 0 nil])
([nil nil ((37909 . 37916)) nil (25828 50222 144322 977000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -37915) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) 37916) nil (25828 50222 144320 482000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing)) . -31226) 37915) nil (25828 50222 144296 123000) 0 nil])
([nil nil ((38164 . 38165) (t 25828 50222 199950 607000)) nil (25828 50247 524714 402000) 0 nil])
([nil nil ((#("
          this.folder_edit_dialog = false" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 15 (part-side javascript face web-mode-constant-face) 15 36 (part-side javascript) 36 37 (part-side javascript) 37 42 (part-side javascript face web-mode-constant-face)) . 37153) (undo-tree-id1147 . -42) (undo-tree-id1148 . -1) (undo-tree-id1149 . -42) (t 25828 50247 580002 637000)) nil (25828 50393 350547 923000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 37409) (undo-tree-id1146 . -1)) nil (25828 50393 350542 928000) 0 nil])
([nil nil ((#("            this.folder_edit_dialog = false
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 44 (part-side javascript)) . 37518) (undo-tree-id1144 . -43) (undo-tree-id1145 . -44) (37454 . 37518) (#("          authservice.renameFilter(filter_obj).then(result => {
" 0 10 (part-side javascript) 10 22 (part-side javascript) 22 34 (part-side javascript face web-mode-function-call-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face)) 35 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-5-face)) 46 47 (part-side javascript) 47 51 (part-side javascript face web-mode-function-call-face) 51 52 (part-side javascript face (rainbow-delimiters-depth-5-face)) 52 58 (part-side javascript face web-mode-function-name-face) 58 62 (part-side javascript) 62 63 (part-side javascript face (rainbow-delimiters-depth-6-face)) 63 64 (part-side javascript)) . 37410) (37474 . 37518) 37517) nil (25828 50393 350540 167000) 0 nil])
([nil nil ((#("            this.folder_edit_dialog = false
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 44 (part-side javascript)) . 37454) (undo-tree-id1141 . -43) (undo-tree-id1142 . -44) (37420 . 37454) (#("          console.log(filter_obj)
" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 32 (part-side javascript) 32 33 (part-side javascript face (rainbow-delimiters-depth-5-face)) 33 34 (part-side javascript)) . 37376) (undo-tree-id1143 . -20) (37410 . 37454) 37453) nil (25828 50393 350535 967000) 0 nil])
([nil nil ((#("            this.folder_edit_dialog = false
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 44 (part-side javascript)) . 37420) (undo-tree-id1138 . -44) (undo-tree-id1139 . -43) (undo-tree-id1140 . -44) (37327 . 37420) (#("          const filter_obj = Object.assign({}, ...new_names.map((x) => ({[x[0].id]: x[1]})))
" 0 10 (part-side javascript) 10 15 (part-side javascript face web-mode-keyword-face) 15 16 (part-side javascript) 16 26 (part-side javascript face web-mode-variable-name-face) 26 28 (part-side javascript) 28 29 (part-side javascript) 29 36 (part-side javascript) 36 42 (part-side javascript face web-mode-function-call-face) 42 43 (part-side javascript face (rainbow-delimiters-depth-5-face)) 43 44 (part-side javascript face (rainbow-delimiters-depth-6-face)) 44 45 (part-side javascript face (rainbow-delimiters-depth-6-face)) 45 50 (part-side javascript) 50 58 (part-side javascript) 58 59 (rear-nonsticky t part-side javascript) 59 60 (part-side javascript) 60 63 (part-side javascript face web-mode-function-call-face) 63 64 (part-side javascript face (rainbow-delimiters-depth-6-face)) 64 65 (part-side javascript face (rainbow-delimiters-depth-7-face)) 65 66 (part-side javascript) 66 67 (part-side javascript face (rainbow-delimiters-depth-7-face)) 67 71 (part-side javascript) 71 72 (part-side javascript face (rainbow-delimiters-depth-7-face)) 72 73 (part-side javascript face (rainbow-delimiters-depth-8-face)) 73 74 (part-side javascript face (rainbow-delimiters-depth-9-face)) 74 75 (part-side javascript) 75 76 (part-side javascript face (rainbow-delimiters-depth-1-face)) 76 77 (part-side javascript) 77 78 (part-side javascript face (rainbow-delimiters-depth-1-face)) 78 79 (part-side javascript) 79 81 (part-side javascript) 81 82 (part-side javascript face (rainbow-delimiters-depth-9-face)) 82 84 (part-side javascript) 84 85 (part-side javascript) 85 86 (part-side javascript face (rainbow-delimiters-depth-9-face)) 86 87 (part-side javascript) 87 88 (part-side javascript face (rainbow-delimiters-depth-9-face)) 88 89 (part-side javascript face (rainbow-delimiters-depth-8-face)) 89 90 (part-side javascript face (rainbow-delimiters-depth-7-face)) 90 91 (part-side javascript face (rainbow-delimiters-depth-6-face)) 91 92 (part-side javascript face (rainbow-delimiters-depth-5-face)) 92 93 (part-side javascript)) . 37283) (37376 . 37420) 37419) nil (25828 50393 350529 294000) 0 nil])
([nil nil ((#("            this.folder_edit_dialog = false
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 44 (part-side javascript)) . 37327) (undo-tree-id1135 . -44) (undo-tree-id1136 . -43) (undo-tree-id1137 . -44) (37281 . 37327) (#("          console.log(\"New names\", new_names)
" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 23 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 23 32 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 33 35 (part-side javascript) 35 44 (part-side javascript) 44 45 (part-side javascript face (rainbow-delimiters-depth-5-face)) 45 46 (part-side javascript)) . 37237) (37283 . 37327) 37326) nil (25828 50393 350523 296000) 0 nil])
([nil nil ((#("            this.folder_edit_dialog = false
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 37 (part-side javascript) 37 38 (part-side javascript) 38 43 (part-side javascript face web-mode-constant-face) 43 44 (part-side javascript)) . 37281) (undo-tree-id1132 . -43) (undo-tree-id1133 . -44) (37198 . 37281) (#("          const new_names = this.get_new_filter_names(this.filter_tree_edit, null)
" 0 10 (part-side javascript) 10 15 (part-side javascript face web-mode-keyword-face) 15 16 (part-side javascript) 16 25 (part-side javascript face web-mode-variable-name-face) 25 27 (part-side javascript) 27 28 (part-side javascript) 28 32 (part-side javascript face web-mode-constant-face) 32 33 (part-side javascript) 33 53 (part-side javascript face web-mode-function-call-face) 53 54 (part-side javascript face (rainbow-delimiters-depth-5-face)) 54 58 (part-side javascript face web-mode-constant-face) 58 77 (part-side javascript) 77 81 (part-side javascript face web-mode-constant-face) 81 82 (part-side javascript face (rainbow-delimiters-depth-5-face)) 82 83 (part-side javascript)) . 37154) (undo-tree-id1134 . -82) (37237 . 37281) 37280) nil (25828 50393 350517 426000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -37164) 37197) nil (25828 50393 350511 177000) 0 nil])
([nil nil ((37515 . 37528)) nil (25828 50393 350509 792000) 0 nil])
([nil nil ((37528 . 37538)) nil (25828 50393 350508 337000) 0 nil])
([nil nil ((#("            this.$emit('refresh_filter')
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 22 (part-side javascript) 22 23 (part-side javascript face (rainbow-delimiters-depth-7-face)) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 38 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 38 39 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-7-face)) 40 41 (part-side javascript)) . 37580) (37557 . 37580) (#("            this.reset
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 22 (part-side javascript) 22 23 (part-side javascript)) . 37516) (undo-tree-id1129 . -21) (undo-tree-id1130 . -22) (undo-tree-id1131 . -22) (37539 . 37580) 37538) nil (25828 50393 350506 469000) 0 nil])
([nil nil ((37579 . 37580)) nil (25828 50393 350500 558000) 0 nil])
([nil nil ((37585 . 37586) (37584 . 37586) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -37584) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (37580 . 37585)) nil (25828 50393 350498 258000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -37585) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 37586) nil (25828 50393 350489 140000) 0 nil])
([nil nil ((#("       console.log(sub_tree)
          /* if (this.tree_edit && this.filter_tree_edit != sub_tree) {
           *   console.log(this.filter_tree_edit)
           *   console.log('EDIT detected')
           *   this.reset_tree()
           * } */" 0 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 27 (part-side javascript) 27 28 (part-side javascript face (rainbow-delimiters-depth-4-face)) 28 29 (part-side javascript) 29 39 (part-side javascript) 39 40 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 40 42 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 42 44 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 44 46 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 46 50 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 50 64 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 64 68 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 68 124 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 124 127 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 127 128 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 128 132 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 132 174 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 174 177 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 177 210 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 210 214 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 214 215 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 215 225 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 225 245 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 39326) (undo-tree-id1163 . -245) (undo-tree-id1164 . -29) (undo-tree-id1165 . -245) (undo-tree-id1166 . -245) (t 25828 50393 408298 496000)) nil (25828 50465 539400 32000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -39324) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (#(" " 0 1 (part-side javascript)) . -39325) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) 39326) nil (25828 50465 539392 445000) 0 nil])
([nil nil ((#("        console.log(id)
        console.log(this.filters[id])" 0 16 (part-side javascript) 16 19 (part-side javascript face web-mode-function-call-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-4-face)) 20 22 (part-side javascript) 22 23 (part-side javascript face (rainbow-delimiters-depth-4-face)) 23 40 (part-side javascript) 40 43 (part-side javascript face web-mode-function-call-face) 43 44 (part-side javascript face (rainbow-delimiters-depth-4-face)) 44 48 (part-side javascript face web-mode-constant-face) 48 56 (part-side javascript) 56 57 (part-side javascript face (rainbow-delimiters-depth-5-face)) 57 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-5-face)) 60 61 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 39141) (undo-tree-id1153 . -61) (undo-tree-id1154 . -24) (undo-tree-id1155 . -61)) nil (25828 50465 539380 301000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -39140) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) 39141) nil (25828 50465 539370 306000) 0 nil])
([nil nil ((#("          console.log(\"New names\", new_names)" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 23 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 23 32 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 33 35 (part-side javascript) 35 44 (part-side javascript) 44 45 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 37279) (undo-tree-id1205 . -45) (undo-tree-id1206 . -45) (t 25828 50465 596443 284000)) nil (25828 50513 204345 10000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -37278) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) 37279) nil (25828 50513 204340 419000) 0 nil])
([nil nil ((#("          console.log(filter_obj)" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 32 (part-side javascript) 32 33 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 37372) (undo-tree-id1200 . -33) (undo-tree-id1201 . -33)) nil (25828 50513 204336 150000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -37371) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) 37372) nil (25828 50513 204332 763000) 0 nil])
([nil nil ((#("          console.log(this.filter_tree_edit)" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 26 (part-side javascript face web-mode-constant-face) 26 43 (part-side javascript) 43 44 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 38436) (undo-tree-id1194 . -44) (undo-tree-id1195 . -44)) nil (25828 50513 204327 604000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -38435) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) 38436) nil (25828 50513 204324 393000) 0 nil])
([nil nil ((#("          console.log(this.filter_tree_edit)" 0 18 (part-side javascript) 18 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 26 (part-side javascript face web-mode-constant-face) 26 43 (part-side javascript) 43 44 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 38485) (undo-tree-id1189 . -44) (undo-tree-id1190 . -44)) nil (25828 50513 204319 997000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -38484) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) 38485) nil (25828 50513 204316 334000) 0 nil])
([nil nil ((#("
        console.log('filter obj', filter_obj)" 0 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 32 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 33 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 43046) (undo-tree-id1183 . -46) (undo-tree-id1184 . -1) (undo-tree-id1185 . -46)) nil (25828 50513 204311 554000) 0 nil])
([nil nil ((#("
        console.log('active', this.active)" 0 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 31 (part-side javascript) 31 35 (part-side javascript face web-mode-constant-face) 35 42 (part-side javascript) 42 43 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 43139) (undo-tree-id1180 . -43) (undo-tree-id1181 . -1) (undo-tree-id1182 . -43)) nil (25828 50513 204306 913000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 43187) (undo-tree-id1179 . -1)) nil (25828 50513 204296 994000) 0 nil])
([nil nil ((#("
        console.log(\"DIALOG CHANGED\", val)" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 40 (part-side javascript) 40 42 (part-side javascript) 42 43 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 34137) (undo-tree-id1176 . -43) (undo-tree-id1177 . -1) (undo-tree-id1178 . -43)) nil (25828 50513 204288 275000) 0 nil])
([nil nil ((#("
        console.log(\"heyo filters\")" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 34 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 34246) (undo-tree-id1173 . -36) (undo-tree-id1174 . -1) (undo-tree-id1175 . -36)) nil (25828 50513 204278 795000) 0 nil])
([nil nil ((#("
      console.log(\"Heyo\")" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-3-face)) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 24 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 26 (part-side javascript face (rainbow-delimiters-depth-3-face))) . 35377) (undo-tree-id1170 . -26) (undo-tree-id1171 . -1) (undo-tree-id1172 . -26)) nil (25828 50513 204266 910000) 0 nil])
([nil nil ((#("
        console.log('empty folders:', this.empty_folders)" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 39 (part-side javascript) 39 43 (part-side javascript face web-mode-constant-face) 43 56 (part-side javascript) 56 57 (rear-nonsticky t part-side javascript) 57 58 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 36863) (undo-tree-id1167 . -58) (undo-tree-id1168 . -1) (undo-tree-id1169 . -58)) nil (25828 50513 204248 960000) 0 nil])
([nil nil ((36778 . 36779) (t 25828 50513 268538 396000)) nil (25828 50543 617521 419000) 0 nil])
([nil nil ((36780 . 36781)) nil (25828 50543 617509 545000) 0 nil])
([nil nil ((#("'New treeview has been saved'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 37627) (undo-tree-id1221 . -29) (undo-tree-id1222 . -29) (t 25828 50543 672598 868000)) nil (25828 50715 768745 47000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37683 . 37684) (nil part-side javascript 37683 . 37684) (nil face (rainbow-delimiters-depth-1-face) 37683 . 37684) (nil rear-nonsticky t 37682 . 37683) (nil part-side javascript 37682 . 37683) (nil face (rainbow-delimiters-depth-2-face) 37682 . 37683) (nil part-side javascript 37681 . 37682) (nil part-token string 37681 . 37682) (nil syntax-table (15) 37681 . 37682) (nil font-lock-face web-mode-javascript-string-face 37681 . 37682) (nil part-side javascript 37675 . 37681) (nil part-token string 37675 . 37681) (nil font-lock-face web-mode-javascript-string-face 37675 . 37681) (nil part-side javascript 37674 . 37675) (nil part-token string 37674 . 37675) (nil syntax-table (15) 37674 . 37675) (nil font-lock-face web-mode-javascript-string-face 37674 . 37675) (nil part-side javascript 37673 . 37674) (nil face (rainbow-delimiters-depth-2-face) 37673 . 37674) (nil part-side javascript 37651 . 37673) (nil part-side javascript 37650 . 37651) (nil part-token string 37650 . 37651) (nil syntax-table (15) 37650 . 37651) (nil font-lock-face web-mode-javascript-string-face 37650 . 37651) (nil part-side javascript 37636 . 37650) (nil part-token string 37636 . 37650) (nil font-lock-face web-mode-javascript-string-face 37636 . 37650) (nil part-side javascript 37635 . 37636) (nil part-token string 37635 . 37636) (nil syntax-table (15) 37635 . 37636) (nil font-lock-face web-mode-javascript-string-face 37635 . 37636) (nil part-side javascript 37634 . 37635) (nil face (rainbow-delimiters-depth-1-face) 37634 . 37635) (nil part-side javascript 37631 . 37634) (nil part-side javascript 37627 . 37631) (nil face web-mode-constant-face 37627 . 37631) (37627 . 37684)) nil (25828 50715 768740 63000) 0 nil])
([nil nil ((#(" error.response.data['errtag']" 0 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-2-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript face (rainbow-delimiters-depth-2-face))) . 37653) (undo-tree-id1218 . -30) (undo-tree-id1219 . -30) (undo-tree-id1220 . -30)) nil (25828 50715 768730 631000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -37650) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#(" " 0 1 (part-side javascript)) . -37651) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (#("+" 0 1 (part-side javascript)) . -37652) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) 37653) nil (25828 50715 768725 325000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -37635) (undo-tree-id1208 . -1) 37636) nil (25828 50715 768713 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37665 . 37666) (nil part-side javascript 37649 . 37666) (37649 . 37666)) nil (25828 50715 768709 608000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . 37635) (#("e" 0 1 (part-side javascript)) . 37635) (#("g" 0 1 (part-side javascript)) . 37635) (#("a" 0 1 (part-side javascript)) . 37635) (#("s" 0 1 (part-side javascript)) . 37635) (#("s" 0 1 (part-side javascript)) . 37635) (#("e" 0 1 (part-side javascript)) . 37635) (#("M" 0 1 (part-side javascript)) . 37635) (#("r" 0 1 (part-side javascript)) . 37635) (#("o" 0 1 (part-side javascript)) . 37635) (#("r" 0 1 (part-side javascript)) . 37635) (#("r" 0 1 (part-side javascript)) . 37635) (#("E" 0 1 (part-side javascript)) . 37635) (undo-tree-id1207 . -1)) nil (25828 50715 768704 712000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37649 . 37650) (nil part-side javascript 37635 . 37650) (37635 . 37650)) nil (25828 50715 768685 232000) 0 nil])
([nil nil ((37635 . 37636) (t 25828 50715 824938 875000)) nil (25828 50854 317124 807000) 0 nil])
([nil nil ((37669 . 37670)) nil (25828 50854 317116 931000) 0 nil])
([nil nil ((914 . 923) (t 25828 50854 369210 157000)) nil (25829 57006 804809 76000) 0 nil])
([nil nil ((923 . 938)) nil (25829 57006 804807 781000) 0 nil])
([nil nil ((931 . 941) (932 . 940) (#("          " 0 10 (face whitespace-trailing)) . 931) (931 . 941) (931 . 932) ("        " . 931) (930 . 939)) nil (25829 57006 804806 363000) 0 nil])
([nil nil ((929 . 930)) nil (25829 57006 804803 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 946 . 947) (nil tag-attr t 946 . 947) (nil tag-attr-end 4 946 . 947) (nil tag-name "v-row" 946 . 947) (nil tag-type start 946 . 947) (nil font-lock-face web-mode-html-attr-value-face 946 . 947) (nil tag-attr t 935 . 946) (nil tag-name "v-row" 935 . 946) (nil tag-type start 935 . 946) (nil font-lock-face web-mode-html-attr-value-face 935 . 946) (nil tag-attr t 934 . 935) (nil tag-name "v-row" 934 . 935) (nil tag-type start 934 . 935) (nil font-lock-face web-mode-html-attr-equal-face 934 . 935) (nil tag-attr t 931 . 934) (nil tag-name "v-row" 931 . 934) (nil tag-type start 931 . 934) (nil font-lock-face web-mode-html-attr-engine-face 931 . 934) (nil tag-attr-beg 2 930 . 931) (nil tag-attr t 930 . 931) (nil tag-name "v-row" 930 . 931) (nil tag-type start 930 . 931) (nil font-lock-face web-mode-html-attr-engine-face 930 . 931) (930 . 947)) nil (25829 57006 804800 818000) 0 nil])
([nil nil ((947 . 948)) nil (25829 57006 804790 407000) 0 nil])
([nil nil ((nil rear-nonsticky nil 964 . 965) (nil tag-attr t 964 . 965) (nil tag-attr-end 5 964 . 965) (nil tag-name "v-row" 964 . 965) (nil tag-type start 964 . 965) (nil font-lock-face web-mode-html-attr-value-face 964 . 965) (nil tag-attr t 954 . 964) (nil tag-name "v-row" 954 . 964) (nil tag-type start 954 . 964) (nil font-lock-face web-mode-html-attr-value-face 954 . 964) (nil tag-attr t 953 . 954) (nil tag-name "v-row" 953 . 954) (nil tag-type start 953 . 954) (nil font-lock-face web-mode-html-attr-equal-face 953 . 954) (nil tag-attr t 949 . 953) (nil tag-name "v-row" 949 . 953) (nil tag-type start 949 . 953) (nil font-lock-face web-mode-html-attr-name-face 949 . 953) (nil tag-attr-beg 0 948 . 949) (nil tag-attr t 948 . 949) (nil tag-name "v-row" 948 . 949) (nil tag-type start 948 . 949) (nil font-lock-face web-mode-html-attr-name-face 948 . 949) (948 . 965)) nil (25829 57007 76719 183000) 0 nil])
([nil nil ((#("        <v-row v-if=\"!tree_edit\" class=\"pa-0 ma-0\">
          
        </v-row>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 9 14 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 14 15 (tag-type start tag-name "v-row") 15 16 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 16 19 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 20 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t rear-nonsticky t) 32 33 (tag-type start tag-name "v-row") 33 34 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 34 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 39 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t rear-nonsticky t) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 52 62 (face whitespace-trailing) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 72 73 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 73 78 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row")) . 915) (undo-tree-id48 . -52) (undo-tree-id49 . -32) (undo-tree-id50 . -79) (undo-tree-id51 . -12) (undo-tree-id52 . -15) (undo-tree-id53 . -15) (undo-tree-id54 . -33) (undo-tree-id55 . -79)) nil (25829 57101 553795 570000) 0 nil] [nil nil ((1010 . 1017)) ((#("v-else " 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1 5 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t) 6 7 (tag-type start tag-name "v-row")) . 1010) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (undo-tree-id9 . -7)) (25829 57006 806214 740000) 0 nil])
([nil nil (("
" . -914) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 915) nil (25829 57101 553786 185000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -1016) (undo-tree-id0 . -1) 1017) ((1016 . 1017)) (25829 57006 804775 913000) 0 nil])
([nil nil ((56 . 61)) nil (25829 57101 553776 590000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 139 . 140) (nil tag-name "v-row" 139 . 140) (nil tag-type end 139 . 140) (nil tag-end t 139 . 140) (nil font-lock-face web-mode-html-tag-bracket-face 139 . 140) (nil tag-name "v-row" 134 . 139) (nil tag-type end 134 . 139) (nil font-lock-face web-mode-html-tag-custom-face 134 . 139) (nil tag-name "v-row" 133 . 134) (nil tag-type end 133 . 134) (nil font-lock-face web-mode-html-tag-bracket-face 133 . 134) (nil tag-name "v-row" 132 . 133) (nil tag-type end 132 . 133) (nil tag-beg 22 132 . 133) (nil font-lock-face web-mode-html-tag-bracket-face 132 . 133) (nil face whitespace-trailing 113 . 123) (nil tag-name "v-row" 111 . 112) (nil tag-type start 111 . 112) (nil tag-end t 111 . 112) (nil font-lock-face web-mode-html-tag-bracket-face 111 . 112) (nil rear-nonsticky t 110 . 111) (nil tag-attr t 110 . 111) (nil tag-attr-end 5 110 . 111) (nil tag-name "v-row" 110 . 111) (nil tag-type start 110 . 111) (nil font-lock-face web-mode-html-attr-value-face 110 . 111) (nil tag-attr t 100 . 110) (nil tag-name "v-row" 100 . 110) (nil tag-type start 100 . 110) (nil font-lock-face web-mode-html-attr-value-face 100 . 110) (nil tag-attr t 99 . 100) (nil tag-name "v-row" 99 . 100) (nil tag-type start 99 . 100) (nil font-lock-face web-mode-html-attr-equal-face 99 . 100) (nil tag-attr t 95 . 99) (nil tag-name "v-row" 95 . 99) (nil tag-type start 95 . 99) (nil font-lock-face web-mode-html-attr-name-face 95 . 99) (nil tag-attr-beg 0 94 . 95) (nil tag-attr t 94 . 95) (nil tag-name "v-row" 94 . 95) (nil tag-type start 94 . 95) (nil font-lock-face web-mode-html-attr-name-face 94 . 95) (nil tag-name "v-row" 93 . 94) (nil tag-type start 93 . 94) (nil rear-nonsticky t 92 . 93) (nil tag-attr t 92 . 93) (nil tag-attr-end 4 92 . 93) (nil tag-name "v-row" 92 . 93) (nil tag-type start 92 . 93) (nil font-lock-face web-mode-html-attr-value-face 92 . 93) (nil tag-attr t 81 . 92) (nil tag-name "v-row" 81 . 92) (nil tag-type start 81 . 92) (nil font-lock-face web-mode-html-attr-value-face 81 . 92) (nil tag-attr t 80 . 81) (nil tag-name "v-row" 80 . 81) (nil tag-type start 80 . 81) (nil font-lock-face web-mode-html-attr-equal-face 80 . 81) (nil tag-attr t 77 . 80) (nil tag-name "v-row" 77 . 80) (nil tag-type start 77 . 80) (nil font-lock-face web-mode-html-attr-engine-face 77 . 80) (nil tag-attr-beg 2 76 . 77) (nil tag-attr t 76 . 77) (nil tag-name "v-row" 76 . 77) (nil tag-type start 76 . 77) (nil font-lock-face web-mode-html-attr-engine-face 76 . 77) (nil tag-name "v-row" 75 . 76) (nil tag-type start 75 . 76) (nil tag-name "v-row" 70 . 75) (nil tag-type start 70 . 75) (nil font-lock-face web-mode-html-tag-custom-face 70 . 75) (nil tag-name "v-row" 69 . 70) (nil tag-type start 69 . 70) (nil tag-beg 19 69 . 70) (nil font-lock-face web-mode-html-tag-bracket-face 69 . 70) (61 . 140)) nil (25829 57101 553771 766000) 0 nil])
([nil nil ((152 . 159)) nil (25829 57101 553755 1000) 0 nil])
([nil nil (("        " . -61) 75) nil (25829 57101 553753 635000) 0 nil])
([nil nil (("    " . -111) (undo-tree-id39 . -4) 115) nil (25829 57101 553752 208000) 0 nil])
([nil nil (("    " . -116) (undo-tree-id38 . -2) 118) nil (25829 57101 553749 921000) 0 nil])
([nil nil ((#("!" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 74)) nil (25829 57101 553747 602000) 0 nil])
([nil nil ((#("v-if=\"!tree_edit\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 2) 1 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 5 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 4 tag-attr t)) . 5940) (undo-tree-id35 . -17) (undo-tree-id36 . -17) (undo-tree-id37 . -17)) nil (25829 57101 553746 324000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -5939) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 5940) nil (25829 57101 553731 298000) 0 nil])
([nil nil ((#("          <!-- <v-col class=\"pa-0 mt-3 pr-4\" sm=\"2\" md=\"2\" cols=\"2\" align=\"end\">
               <v-btn
               outlined
               small
               dense
               class=\"databuttons\"
               @click=\"edit_switch()\"
               :color=\"tree_edit ? 'black' : 'grey'\"
               >
               Edit Tree
               <v-icon right color=\"blue\" v-if=\"tree_edit\">mdi-toggle-switch</v-icon>
               <v-icon right color=\"grey\" v-else>mdi-toggle-switch-off</v-icon>
               </v-btn>
               </v-col> -->" 10 11 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 11 219 (font-lock-face web-mode-comment-face tag-type comment) 219 220 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 220 221 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 221 222 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 222 223 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 223 224 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 224 225 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 225 227 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 227 238 (face web-mode-function-call-face tag-type comment block-side t) 238 240 (tag-type comment block-side t) 240 241 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 241 257 (font-lock-face web-mode-comment-face tag-type comment) 257 258 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 258 259 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 259 260 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 260 261 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 261 262 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 262 263 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 263 265 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 265 266 (face web-mode-variable-name-face tag-type comment block-side t) 266 267 (face web-mode-variable-name-face tag-type comment block-side t) 267 268 (face web-mode-variable-name-face tag-type comment block-side t) 268 269 (face web-mode-variable-name-face tag-type comment block-side t) 269 270 (face web-mode-variable-name-face tag-type comment block-side t) 270 271 (face web-mode-variable-name-face tag-type comment block-side t) 271 272 (face web-mode-variable-name-face tag-type comment block-side t) 272 273 (face web-mode-variable-name-face tag-type comment block-side t) 273 274 (face web-mode-variable-name-face tag-type comment block-side t) 274 278 (tag-type comment block-side t) 278 279 (face web-mode-variable-name-face tag-type comment block-side t) 279 280 (face web-mode-variable-name-face tag-type comment block-side t) 280 281 (face web-mode-variable-name-face tag-type comment block-side t) 281 282 (face web-mode-variable-name-face tag-type comment block-side t) 282 283 (face web-mode-variable-name-face tag-type comment block-side t) 283 288 (tag-type comment block-side t) 288 289 (face web-mode-variable-name-face tag-type comment block-side t) 289 290 (face web-mode-variable-name-face tag-type comment block-side t) 290 291 (face web-mode-variable-name-face tag-type comment block-side t) 291 292 (face web-mode-variable-name-face tag-type comment block-side t) 292 293 (tag-type comment block-side t) 293 294 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 294 553 (font-lock-face web-mode-comment-face tag-type comment) 553 554 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 6664) (undo-tree-id29 . -81) (undo-tree-id30 . -554) (undo-tree-id31 . -554)) nil (25829 57101 553726 855000) 0 nil])
([nil nil (("
" . -6663) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 6664) nil (25829 57101 553722 826000) 0 nil])
([nil nil ((#("    <v-col v-else cols=\"9\" class=\"pa-0 ma-0 editTree\">
        <v-row class=\"pa-0 ma-0\">
          <v-col class=\"pa-0 ma-0\">
            <v-toolbar outlined flat class=\"ma-0 pa-0\" dense>
              <v-icon left>mdi-harddisk</v-icon>
              <v-toolbar-title>{{tree_edit_drive[1]}}</v-toolbar-title>
              <v-spacer></v-spacer>
              <v-btn icon @click=\"new_folder_dialog=true\">
                <v-icon>mdi-folder-plus</v-icon>
              </v-btn>
              <v-btn icon @click=\"save_filter_tree()\">
                <v-icon>mdi-content-save-edit</v-icon>
              </v-btn>
              <v-btn icon @click=\"edit_switch(tree_edit_drive[0])\">
                <v-icon>mdi-close-circle-outline</v-icon>
              </v-btn>
            </v-toolbar>
              <v-container class=\"pa-3\" style=\"height:650px; overflow:auto;\" >
              <v-draggable-treeview
                v-model=\"filter_tree_edit\"
                group=\"filtergroup\"
                dense
              >
                <template v-slot:prepend=\"{ item, open }\">
                  <v-icon v-if=\"item.id <= 0 && item.id > -3\">
                    mdi-harddisk
                  </v-icon>
                  <v-icon v-else-if=\"!item.filter\">
                    {{ open ? 'mdi-folder-open' : 'mdi-folder' }}
                  </v-icon>
                  <v-icon v-else>
                    mdi-filter
                  </v-icon>
                </template>
                <template v-slot:label=\"{ item }\">
                  <v-row v-if=\"item.filter\">
                    <v-tooltip
                      bottom
                    >
                      <template v-slot:activator=\"{ on, attrs }\">
                        <v-col v-bind=\"attrs\"
                               v-on=\"on\"
                               style=\" display: flex;\"
                        >
                          {{item.name}}
                        </v-col>
                      </template>
                      <span>
                        <v-row class=\"pa-0 ma-0\">
                          <v-col class=\"pa-0 ma-0\">
                            ({{item.creator}} - {{item.toc}})
                          </v-col>
                        </v-row>
                        <v-row class=\"pa-0 ma-0\">
                          <v-col class=\"pa-0 ma-0 pt-1\">
                            {{ filtertostring(item.filter) }}
                          </v-col>
                        </v-row>
                      </span>
                    </v-tooltip>
                  </v-row>
                  <v-row v-else>
                    <v-col style=\" display: flex;\">
                      {{item.name}}
                    </v-col>
                  </v-row>
                </template>
              </v-draggable-treeview>

            </v-container>
          </v-col>
        </v-row>
      </v-col>" 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 5 10 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 10 11 (tag-type start tag-name "v-col") 11 12 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 2) 12 16 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr-end 0 tag-attr t) 17 18 (tag-type start tag-name "v-col") 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 19 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 23 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 4 tag-attr t) 26 27 (tag-type start tag-name "v-col") 27 28 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 28 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 33 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 64 69 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 69 70 (tag-type start tag-name "v-row") 70 71 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 71 75 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 75 76 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 76 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t) 87 88 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 99 100 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 100 105 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 105 106 (tag-type start tag-name "v-col") 106 107 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 107 111 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 111 112 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 112 122 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 122 123 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-toolbar") 138 147 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-toolbar") 147 148 (tag-type start tag-name "v-toolbar") 148 149 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0) 149 155 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t) 155 156 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t) 156 157 (tag-type start tag-name "v-toolbar") 157 158 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0) 158 160 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t) 160 161 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t) 161 162 (tag-type start tag-name "v-toolbar") 162 163 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0) 163 167 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t) 167 168 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-toolbar" tag-attr t) 168 178 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar" tag-attr t) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-toolbar" tag-attr-end 5 tag-attr t) 179 180 (tag-type start tag-name "v-toolbar") 180 181 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t tag-attr-beg 0) 181 184 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr t) 184 185 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-toolbar" tag-attr-end 0 tag-attr t) 185 186 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-toolbar") 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 202 208 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 208 209 (tag-type start tag-name "v-icon") 209 210 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 0) 210 212 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr t) 212 213 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 213 214 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 228 234 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 250 251 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-toolbar-title") 251 266 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-toolbar-title") 266 267 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-toolbar-title") 267 268 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 268 269 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 269 270 (face web-mode-variable-name-face block-side t) 270 271 (face web-mode-variable-name-face block-side t) 271 272 (face web-mode-variable-name-face block-side t) 272 273 (face web-mode-variable-name-face block-side t) 273 274 (face web-mode-variable-name-face block-side t) 274 275 (face web-mode-variable-name-face block-side t) 275 276 (face web-mode-variable-name-face block-side t) 276 277 (face web-mode-variable-name-face block-side t) 277 278 (face web-mode-variable-name-face block-side t) 278 279 (face web-mode-variable-name-face block-side t) 279 280 (face web-mode-variable-name-face block-side t) 280 281 (face web-mode-variable-name-face block-side t) 281 282 (face web-mode-variable-name-face block-side t) 282 283 (face web-mode-variable-name-face block-side t) 283 284 (face web-mode-variable-name-face block-side t) 284 285 (face (rainbow-delimiters-depth-3-face) block-side t) 285 286 (block-side t) 286 287 (face (rainbow-delimiters-depth-3-face) block-side t) 287 288 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 288 289 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 289 290 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-toolbar-title") 290 291 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-toolbar-title") 291 306 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-toolbar-title") 306 307 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-toolbar-title") 322 323 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-spacer") 323 331 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-spacer") 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-spacer") 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-spacer") 333 334 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-spacer") 334 342 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-spacer") 342 343 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-spacer") 358 359 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 359 364 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 364 365 (tag-type start tag-name "v-btn") 365 366 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 366 368 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 368 369 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 369 370 (tag-type start tag-name "v-btn") 370 371 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 371 372 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 372 373 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 373 374 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 374 375 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 375 376 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 376 377 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 377 378 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 378 379 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 379 380 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 380 381 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 381 382 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 382 383 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 383 384 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 384 385 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 385 386 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 386 387 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 387 388 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 388 389 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 389 390 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 390 391 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 391 392 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 392 393 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 393 394 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 394 395 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 395 396 (tag-type start tag-name "v-btn" tag-attr t block-side t) 396 397 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 397 398 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 398 399 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 399 400 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 400 401 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 401 402 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 419 420 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-icon") 420 426 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 426 427 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 442 443 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 443 444 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 444 450 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 450 451 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 466 467 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 467 468 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 468 473 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 473 474 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 489 490 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 490 495 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 495 496 (tag-type start tag-name "v-btn") 496 497 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 497 499 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 499 500 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 500 501 (tag-type start tag-name "v-btn") 501 502 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 502 503 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 503 504 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 504 505 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 505 506 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 506 507 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 507 508 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 508 509 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 509 525 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t) 525 527 (tag-type start tag-name "v-btn" tag-attr t block-side t) 527 528 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 528 529 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 546 547 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-icon") 547 553 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 553 554 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 575 576 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 576 577 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 577 583 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 583 584 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 599 600 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 600 601 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 601 606 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 606 607 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 622 623 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-btn") 623 628 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-btn") 628 629 (tag-type start tag-name "v-btn") 629 630 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0) 630 632 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr t) 632 633 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-btn" tag-attr-end 0 tag-attr t) 633 634 (tag-type start tag-name "v-btn") 634 635 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 635 636 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 636 637 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 637 638 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 638 639 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 639 640 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 640 641 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 641 642 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 642 653 (face web-mode-function-call-face tag-type start tag-name "v-btn" tag-attr t block-side t) 653 654 (tag-type start tag-name "v-btn" tag-attr t block-side t) 654 655 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 655 656 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 656 657 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 657 658 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 658 659 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 659 660 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 660 661 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 661 662 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 662 663 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 663 664 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 664 665 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 665 666 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 666 667 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 667 668 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 668 669 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 669 673 (tag-type start tag-name "v-btn" tag-attr t block-side t) 673 674 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 674 675 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-btn") 692 693 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-icon") 693 699 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 699 700 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 724 725 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 725 726 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 726 732 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 732 733 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 748 749 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-btn") 749 750 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-btn") 750 755 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-btn") 755 756 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-btn") 769 770 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-toolbar") 770 771 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-toolbar") 771 780 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-toolbar") 780 781 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-toolbar") 796 797 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-container") 797 808 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-container") 808 809 (tag-type start tag-name "v-container") 809 810 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t tag-attr-beg 0) 810 814 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t) 814 815 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-container" tag-attr t) 815 820 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t) 820 821 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr-end 5 tag-attr t) 821 822 (tag-type start tag-name "v-container") 822 823 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t tag-attr-beg 0) 823 827 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-container" tag-attr t) 827 828 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-container" tag-attr t) 828 857 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t) 857 858 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr-end 5 tag-attr t) 858 859 (tag-type start tag-name "v-container") 859 860 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-container") 875 876 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-draggable-treeview") 876 896 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-draggable-treeview") 896 913 (tag-type start tag-name "v-draggable-treeview") 913 914 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-draggable-treeview" tag-attr t tag-attr-beg 2) 914 920 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 920 921 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 921 938 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 938 939 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-draggable-treeview" tag-attr-end 7 tag-attr t) 939 956 (tag-type start tag-name "v-draggable-treeview") 956 957 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-draggable-treeview" tag-attr t tag-attr-beg 0) 957 961 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 961 962 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 962 974 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 974 975 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-draggable-treeview" tag-attr-end 5 tag-attr t) 975 992 (tag-type start tag-name "v-draggable-treeview") 992 993 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-draggable-treeview" tag-attr t tag-attr-beg 0) 993 996 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-draggable-treeview" tag-attr t) 996 997 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-draggable-treeview" tag-attr-end 0 tag-attr t) 997 1012 (tag-type start tag-name "v-draggable-treeview") 1012 1013 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-draggable-treeview") 1030 1031 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "template") 1031 1039 (font-lock-face web-mode-html-tag-face tag-type start tag-name "template") 1039 1040 (tag-type start tag-name "template") 1040 1041 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t tag-attr-beg 2) 1041 1046 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t) 1046 1047 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1047 1048 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1048 1049 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1049 1050 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1050 1051 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1051 1052 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1052 1053 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1053 1054 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1054 1055 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1055 1056 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1056 1058 (tag-type start tag-name "template" tag-attr t block-side t) 1058 1059 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1059 1060 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1060 1061 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1061 1062 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1062 1064 (tag-type start tag-name "template" tag-attr t block-side t) 1064 1065 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1065 1066 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1066 1067 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1067 1068 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1068 1070 (tag-type start tag-name "template" tag-attr t block-side t) 1070 1071 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr-end 14 tag-attr t block-token delimiter-end block-end t block-side t) 1071 1072 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "template") 1091 1092 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 1092 1098 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 1098 1099 (tag-type start tag-name "v-icon") 1099 1100 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2) 1100 1103 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t) 1103 1104 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-icon" tag-attr t) 1104 1133 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t) 1133 1134 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr-end 4 tag-attr t) 1134 1135 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 1187 1188 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 1188 1189 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 1189 1195 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 1195 1196 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 1215 1216 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 1216 1222 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 1222 1223 (tag-type start tag-name "v-icon") 1223 1224 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2) 1224 1232 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t) 1232 1233 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-icon" tag-attr t) 1233 1246 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr t) 1246 1247 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-icon" tag-attr-end 9 tag-attr t) 1247 1248 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 1269 1270 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1270 1271 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1271 1272 (block-side t) 1272 1273 (face web-mode-variable-name-face block-side t) 1273 1274 (face web-mode-variable-name-face block-side t) 1274 1275 (face web-mode-variable-name-face block-side t) 1275 1276 (face web-mode-variable-name-face block-side t) 1276 1280 (block-side t) 1280 1281 (face web-mode-variable-name-face block-side t) 1281 1282 (face web-mode-variable-name-face block-side t) 1282 1283 (face web-mode-variable-name-face block-side t) 1283 1284 (block-side t) 1284 1285 (face web-mode-variable-name-face block-side t) 1285 1286 (face web-mode-variable-name-face block-side t) 1286 1287 (face web-mode-variable-name-face block-side t) 1287 1288 (face web-mode-variable-name-face block-side t) 1288 1289 (face web-mode-variable-name-face block-side t) 1289 1290 (face web-mode-variable-name-face block-side t) 1290 1291 (block-side t) 1291 1292 (face web-mode-variable-name-face block-side t) 1292 1293 (face web-mode-variable-name-face block-side t) 1293 1294 (face web-mode-variable-name-face block-side t) 1294 1295 (face web-mode-variable-name-face block-side t) 1295 1300 (block-side t) 1300 1301 (face web-mode-variable-name-face block-side t) 1301 1302 (face web-mode-variable-name-face block-side t) 1302 1303 (face web-mode-variable-name-face block-side t) 1303 1304 (block-side t) 1304 1305 (face web-mode-variable-name-face block-side t) 1305 1306 (face web-mode-variable-name-face block-side t) 1306 1307 (face web-mode-variable-name-face block-side t) 1307 1308 (face web-mode-variable-name-face block-side t) 1308 1309 (face web-mode-variable-name-face block-side t) 1309 1310 (face web-mode-variable-name-face block-side t) 1310 1312 (block-side t) 1312 1313 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 1313 1314 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1333 1334 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 1334 1335 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 1335 1341 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 1341 1342 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 1361 1362 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-icon") 1362 1368 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-icon") 1368 1369 (tag-type start tag-name "v-icon") 1369 1370 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t tag-attr-beg 2) 1370 1374 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr t) 1374 1375 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-icon" tag-attr-end 0 tag-attr t) 1375 1376 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-icon") 1426 1427 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-icon") 1427 1428 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-icon") 1428 1434 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-icon") 1434 1435 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-icon") 1452 1453 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "template") 1453 1454 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "template") 1454 1462 (font-lock-face web-mode-html-tag-face tag-type end tag-name "template") 1462 1463 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "template") 1480 1481 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "template") 1481 1489 (font-lock-face web-mode-html-tag-face tag-type start tag-name "template") 1489 1490 (tag-type start tag-name "template") 1490 1491 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t tag-attr-beg 2) 1491 1496 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t) 1496 1497 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1497 1498 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1498 1499 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1499 1500 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1500 1501 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1501 1502 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1502 1503 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1503 1504 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1504 1506 (tag-type start tag-name "template" tag-attr t block-side t) 1506 1507 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1507 1508 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1508 1509 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1509 1510 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1510 1512 (tag-type start tag-name "template" tag-attr t block-side t) 1512 1513 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr-end 12 tag-attr t block-token delimiter-end block-end t block-side t) 1513 1514 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "template") 1533 1534 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 1534 1539 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 1539 1540 (tag-type start tag-name "v-row") 1540 1541 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1541 1544 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 1544 1545 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 1545 1557 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 1557 1558 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t) 1558 1559 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 1580 1581 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-tooltip") 1581 1590 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-tooltip") 1590 1613 (tag-type start tag-name "v-tooltip") 1613 1614 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-tooltip" tag-attr t tag-attr-beg 0) 1614 1618 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-tooltip" tag-attr t) 1618 1619 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-tooltip" tag-attr-end 0 tag-attr t) 1619 1640 (tag-type start tag-name "v-tooltip") 1640 1641 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-tooltip") 1664 1665 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "template") 1665 1673 (font-lock-face web-mode-html-tag-face tag-type start tag-name "template") 1673 1674 (tag-type start tag-name "template") 1674 1675 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t tag-attr-beg 2) 1675 1680 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "template" tag-attr t) 1680 1681 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1681 1682 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1682 1683 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1683 1684 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1684 1685 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1685 1686 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1686 1687 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1687 1688 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1688 1689 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1689 1690 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1690 1691 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1691 1692 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr t block-token delimiter-beg block-side t) 1692 1694 (tag-type start tag-name "template" tag-attr t block-side t) 1694 1695 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1695 1696 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1696 1698 (tag-type start tag-name "template" tag-attr t block-side t) 1698 1699 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1699 1700 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1700 1701 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1701 1702 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1702 1703 (face web-mode-variable-name-face tag-type start tag-name "template" tag-attr t block-side t) 1703 1705 (tag-type start tag-name "template" tag-attr t block-side t) 1705 1706 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "template" tag-attr-end 16 tag-attr t block-token delimiter-end block-end t block-side t) 1706 1707 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "template") 1732 1733 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 1733 1738 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 1738 1739 (tag-type start tag-name "v-col") 1739 1740 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 2) 1740 1745 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t) 1745 1746 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 1746 1752 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 1752 1753 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 6 tag-attr t) 1753 1785 (tag-type start tag-name "v-col") 1785 1786 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 2) 1786 1789 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t) 1789 1790 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 1790 1793 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 1793 1794 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 4 tag-attr t) 1794 1826 (tag-type start tag-name "v-col") 1826 1827 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1827 1831 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 1831 1832 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 1832 1848 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 1848 1849 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 1849 1874 (tag-type start tag-name "v-col") 1874 1875 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 1902 1903 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1903 1904 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1904 1905 (face web-mode-variable-name-face block-side t) 1905 1906 (face web-mode-variable-name-face block-side t) 1906 1907 (face web-mode-variable-name-face block-side t) 1907 1908 (face web-mode-variable-name-face block-side t) 1908 1909 (block-side t) 1909 1910 (face web-mode-variable-name-face block-side t) 1910 1911 (face web-mode-variable-name-face block-side t) 1911 1912 (face web-mode-variable-name-face block-side t) 1912 1913 (face web-mode-variable-name-face block-side t) 1913 1914 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 1914 1915 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 1940 1941 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 1941 1942 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 1942 1947 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 1947 1948 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col") 1971 1972 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "template") 1972 1973 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "template") 1973 1981 (font-lock-face web-mode-html-tag-face tag-type end tag-name "template") 1981 1982 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "template") 2005 2006 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "span") 2006 2010 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 2010 2011 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 2036 2037 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 2037 2042 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 2042 2043 (tag-type start tag-name "v-row") 2043 2044 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 2044 2048 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 2048 2049 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 2049 2059 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 2059 2060 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t) 2060 2061 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 2088 2089 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 2089 2094 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 2094 2095 (tag-type start tag-name "v-col") 2095 2096 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 2096 2100 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 2100 2101 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 2101 2111 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 2111 2112 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 2112 2113 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 2142 2143 (face (rainbow-delimiters-depth-1-face)) 2143 2144 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 2144 2145 (face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2145 2146 (face web-mode-variable-name-face block-side t) 2146 2147 (face web-mode-variable-name-face block-side t) 2147 2148 (face web-mode-variable-name-face block-side t) 2148 2149 (face web-mode-variable-name-face block-side t) 2149 2150 (block-side t) 2150 2151 (face web-mode-variable-name-face block-side t) 2151 2152 (face web-mode-variable-name-face block-side t) 2152 2153 (face web-mode-variable-name-face block-side t) 2153 2154 (face web-mode-variable-name-face block-side t) 2154 2155 (face web-mode-variable-name-face block-side t) 2155 2156 (face web-mode-variable-name-face block-side t) 2156 2157 (face web-mode-variable-name-face block-side t) 2157 2158 (face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 2158 2159 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 2162 2163 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 2163 2164 (face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2164 2165 (face web-mode-variable-name-face block-side t) 2165 2166 (face web-mode-variable-name-face block-side t) 2166 2167 (face web-mode-variable-name-face block-side t) 2167 2168 (face web-mode-variable-name-face block-side t) 2168 2169 (block-side t) 2169 2170 (face web-mode-variable-name-face block-side t) 2170 2171 (face web-mode-variable-name-face block-side t) 2171 2172 (face web-mode-variable-name-face block-side t) 2172 2173 (face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 2173 2174 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 2174 2175 (face (rainbow-delimiters-depth-1-face)) 2202 2203 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 2203 2204 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 2204 2209 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 2209 2210 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col") 2235 2236 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 2236 2237 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2237 2242 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 2242 2243 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row") 2268 2269 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 2269 2274 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 2274 2275 (tag-type start tag-name "v-row") 2275 2276 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 2276 2280 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 2280 2281 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 2281 2291 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 2291 2292 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t) 2292 2293 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 2320 2321 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 2321 2326 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 2326 2327 (tag-type start tag-name "v-col") 2327 2328 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 2328 2332 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 2332 2333 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 2333 2348 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 2348 2349 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 2349 2350 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 2379 2380 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 2380 2381 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2381 2382 (block-side t) 2382 2396 (face web-mode-function-call-face block-side t) 2396 2397 (face (rainbow-delimiters-depth-3-face) block-side t) 2397 2398 (face web-mode-variable-name-face block-side t) 2398 2399 (face web-mode-variable-name-face block-side t) 2399 2400 (face web-mode-variable-name-face block-side t) 2400 2401 (face web-mode-variable-name-face block-side t) 2401 2402 (block-side t) 2402 2403 (face web-mode-variable-name-face block-side t) 2403 2404 (face web-mode-variable-name-face block-side t) 2404 2405 (face web-mode-variable-name-face block-side t) 2405 2406 (face web-mode-variable-name-face block-side t) 2406 2407 (face web-mode-variable-name-face block-side t) 2407 2408 (face web-mode-variable-name-face block-side t) 2408 2409 (face (rainbow-delimiters-depth-3-face) block-side t) 2409 2410 (block-side t) 2410 2411 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 2411 2412 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 2439 2440 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 2440 2441 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 2441 2446 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 2446 2447 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col") 2472 2473 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 2473 2474 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2474 2479 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 2479 2480 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row") 2503 2504 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 2504 2505 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 2505 2509 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 2509 2510 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 2531 2532 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-tooltip") 2532 2533 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-tooltip") 2533 2542 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-tooltip") 2542 2543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-tooltip") 2562 2563 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 2563 2564 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2564 2569 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 2569 2570 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row") 2589 2590 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-row") 2590 2595 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 2595 2596 (tag-type start tag-name "v-row") 2596 2597 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 2597 2601 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 2601 2602 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t) 2602 2603 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 2624 2625 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 2625 2630 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 2630 2631 (tag-type start tag-name "v-col") 2631 2632 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 2632 2636 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 2636 2637 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 2637 2653 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 2653 2654 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 2654 2655 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 2678 2679 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 2679 2680 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2680 2681 (face web-mode-variable-name-face block-side t) 2681 2682 (face web-mode-variable-name-face block-side t) 2682 2683 (face web-mode-variable-name-face block-side t) 2683 2684 (face web-mode-variable-name-face block-side t) 2684 2685 (block-side t) 2685 2686 (face web-mode-variable-name-face block-side t) 2686 2687 (face web-mode-variable-name-face block-side t) 2687 2688 (face web-mode-variable-name-face block-side t) 2688 2689 (face web-mode-variable-name-face block-side t) 2689 2690 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 2690 2691 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 2712 2713 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 2713 2714 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 2714 2719 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 2719 2720 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col") 2739 2740 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 2740 2741 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2741 2746 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 2746 2747 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row") 2764 2765 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "template") 2765 2766 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "template") 2766 2774 (font-lock-face web-mode-html-tag-face tag-type end tag-name "template") 2774 2775 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "template") 2790 2791 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-draggable-treeview") 2791 2792 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-draggable-treeview") 2792 2812 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-draggable-treeview") 2812 2813 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-draggable-treeview") 2827 2828 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-container") 2828 2829 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-container") 2829 2840 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-container") 2840 2841 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-container") 2852 2853 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 2853 2854 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 2854 2859 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 2859 2860 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col") 2869 2870 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 2870 2871 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 2871 2876 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 2876 2877 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row") 2884 2885 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 2885 2886 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 2886 2891 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 2891 2892 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 14070) (undo-tree-id22 . -2892) (undo-tree-id23 . -1916) (undo-tree-id24 . -2878) (undo-tree-id25 . -2892) 16962) nil (25829 57101 553718 307000) 0 nil])
([nil nil (("
" . -14067) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (" " . -14068) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (" " . -14069) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 14070) nil (25829 57101 553712 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3001 . 3002) (nil tag-name "v-col" 3001 . 3002) (nil tag-type end 3001 . 3002) (nil tag-end t 3001 . 3002) (nil font-lock-face web-mode-html-tag-bracket-face 3001 . 3002) (nil tag-name "v-col" 2996 . 3001) (nil tag-type end 2996 . 3001) (nil font-lock-face web-mode-html-tag-custom-face 2996 . 3001) (nil tag-name "v-col" 2995 . 2996) (nil tag-type end 2995 . 2996) (nil font-lock-face web-mode-html-tag-bracket-face 2995 . 2996) (nil tag-name "v-col" 2994 . 2995) (nil tag-type end 2994 . 2995) (nil tag-beg 22 2994 . 2995) (nil font-lock-face web-mode-html-tag-bracket-face 2994 . 2995) (nil tag-name "v-row" 2986 . 2987) (nil tag-type end 2986 . 2987) (nil tag-end t 2986 . 2987) (nil font-lock-face web-mode-html-tag-bracket-face 2986 . 2987) (nil tag-name "v-row" 2981 . 2986) (nil tag-type end 2981 . 2986) (nil font-lock-face web-mode-html-tag-custom-face 2981 . 2986) (nil tag-name "v-row" 2980 . 2981) (nil tag-type end 2980 . 2981) (nil font-lock-face web-mode-html-tag-bracket-face 2980 . 2981) (nil tag-name "v-row" 2979 . 2980) (nil tag-type end 2979 . 2980) (nil tag-beg 22 2979 . 2980) (nil font-lock-face web-mode-html-tag-bracket-face 2979 . 2980) (nil tag-name "v-col" 2969 . 2970) (nil tag-type end 2969 . 2970) (nil tag-end t 2969 . 2970) (nil font-lock-face web-mode-html-tag-bracket-face 2969 . 2970) (nil tag-name "v-col" 2964 . 2969) (nil tag-type end 2964 . 2969) (nil font-lock-face web-mode-html-tag-custom-face 2964 . 2969) (nil tag-name "v-col" 2963 . 2964) (nil tag-type end 2963 . 2964) (nil font-lock-face web-mode-html-tag-bracket-face 2963 . 2964) (nil tag-name "v-col" 2962 . 2963) (nil tag-type end 2962 . 2963) (nil tag-beg 22 2962 . 2963) (nil font-lock-face web-mode-html-tag-bracket-face 2962 . 2963) (nil tag-name "v-container" 2950 . 2951) (nil tag-type end 2950 . 2951) (nil tag-end t 2950 . 2951) (nil font-lock-face web-mode-html-tag-bracket-face 2950 . 2951) (nil tag-name "v-container" 2939 . 2950) (nil tag-type end 2939 . 2950) (nil font-lock-face web-mode-html-tag-custom-face 2939 . 2950) (nil tag-name "v-container" 2938 . 2939) (nil tag-type end 2938 . 2939) (nil font-lock-face web-mode-html-tag-bracket-face 2938 . 2939) (nil tag-name "v-container" 2937 . 2938) (nil tag-type end 2937 . 2938) (nil tag-beg 22 2937 . 2938) (nil font-lock-face web-mode-html-tag-bracket-face 2937 . 2938) (nil tag-name "v-draggable-treeview" 2922 . 2923) (nil tag-type end 2922 . 2923) (nil tag-end t 2922 . 2923) (nil font-lock-face web-mode-html-tag-bracket-face 2922 . 2923) (nil tag-name "v-draggable-treeview" 2902 . 2922) (nil tag-type end 2902 . 2922) (nil font-lock-face web-mode-html-tag-custom-face 2902 . 2922) (nil tag-name "v-draggable-treeview" 2901 . 2902) (nil tag-type end 2901 . 2902) (nil font-lock-face web-mode-html-tag-bracket-face 2901 . 2902) (nil tag-name "v-draggable-treeview" 2900 . 2901) (nil tag-type end 2900 . 2901) (nil tag-beg 22 2900 . 2901) (nil font-lock-face web-mode-html-tag-bracket-face 2900 . 2901) (nil tag-name "template" 2884 . 2885) (nil tag-type end 2884 . 2885) (nil tag-end t 2884 . 2885) (nil font-lock-face web-mode-html-tag-bracket-face 2884 . 2885) (nil tag-name "template" 2876 . 2884) (nil tag-type end 2876 . 2884) (nil font-lock-face web-mode-html-tag-face 2876 . 2884) (nil tag-name "template" 2875 . 2876) (nil tag-type end 2875 . 2876) (nil font-lock-face web-mode-html-tag-bracket-face 2875 . 2876) (nil tag-name "template" 2874 . 2875) (nil tag-type end 2874 . 2875) (nil tag-beg 20 2874 . 2875) (nil font-lock-face web-mode-html-tag-bracket-face 2874 . 2875) (nil tag-name "v-row" 2856 . 2857) (nil tag-type end 2856 . 2857) (nil tag-end t 2856 . 2857) (nil font-lock-face web-mode-html-tag-bracket-face 2856 . 2857) (nil tag-name "v-row" 2851 . 2856) (nil tag-type end 2851 . 2856) (nil font-lock-face web-mode-html-tag-custom-face 2851 . 2856) (nil tag-name "v-row" 2850 . 2851) (nil tag-type end 2850 . 2851) (nil font-lock-face web-mode-html-tag-bracket-face 2850 . 2851) (nil tag-name "v-row" 2849 . 2850) (nil tag-type end 2849 . 2850) (nil tag-beg 22 2849 . 2850) (nil font-lock-face web-mode-html-tag-bracket-face 2849 . 2850) (nil tag-name "v-col" 2829 . 2830) (nil tag-type end 2829 . 2830) (nil tag-end t 2829 . 2830) (nil font-lock-face web-mode-html-tag-bracket-face 2829 . 2830) (nil tag-name "v-col" 2824 . 2829) (nil tag-type end 2824 . 2829) (nil font-lock-face web-mode-html-tag-custom-face 2824 . 2829) (nil tag-name "v-col" 2823 . 2824) (nil tag-type end 2823 . 2824) (nil font-lock-face web-mode-html-tag-bracket-face 2823 . 2824) (nil tag-name "v-col" 2822 . 2823) (nil tag-type end 2822 . 2823) (nil tag-beg 22 2822 . 2823) (nil font-lock-face web-mode-html-tag-bracket-face 2822 . 2823) (nil block-side t 2800 . 2801) (nil block-end t 2800 . 2801) (nil block-token delimiter-end 2800 . 2801) (nil font-lock-face web-mode-block-delimiter-face 2800 . 2801) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2800 . 2801) (nil block-side t 2799 . 2800) (nil block-token delimiter-end 2799 . 2800) (nil font-lock-face web-mode-block-delimiter-face 2799 . 2800) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2799 . 2800) (nil block-side t 2798 . 2799) (nil face web-mode-variable-name-face 2798 . 2799) (nil block-side t 2797 . 2798) (nil face web-mode-variable-name-face 2797 . 2798) (nil block-side t 2796 . 2797) (nil face web-mode-variable-name-face 2796 . 2797) (nil block-side t 2795 . 2796) (nil face web-mode-variable-name-face 2795 . 2796) (nil block-side t 2794 . 2795) (nil block-side t 2793 . 2794) (nil face web-mode-variable-name-face 2793 . 2794) (nil block-side t 2792 . 2793) (nil face web-mode-variable-name-face 2792 . 2793) (nil block-side t 2791 . 2792) (nil face web-mode-variable-name-face 2791 . 2792) (nil block-side t 2790 . 2791) (nil face web-mode-variable-name-face 2790 . 2791) (nil block-side t 2789 . 2790) (nil block-token delimiter-beg 2789 . 2790) (nil font-lock-face web-mode-block-delimiter-face 2789 . 2790) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2789 . 2790) (nil block-beg 0 2788 . 2789) (nil block-controls 0 2788 . 2789) (nil block-side t 2788 . 2789) (nil block-token delimiter-beg 2788 . 2789) (nil font-lock-face web-mode-block-delimiter-face 2788 . 2789) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2788 . 2789) (nil tag-name "v-col" 2764 . 2765) (nil tag-type start 2764 . 2765) (nil tag-end t 2764 . 2765) (nil font-lock-face web-mode-html-tag-bracket-face 2764 . 2765) (nil tag-attr t 2763 . 2764) (nil tag-attr-end 5 2763 . 2764) (nil tag-name "v-col" 2763 . 2764) (nil tag-type start 2763 . 2764) (nil font-lock-face web-mode-html-attr-value-face 2763 . 2764) (nil tag-attr t 2747 . 2763) (nil tag-name "v-col" 2747 . 2763) (nil tag-type start 2747 . 2763) (nil font-lock-face web-mode-html-attr-value-face 2747 . 2763) (nil tag-attr t 2746 . 2747) (nil tag-name "v-col" 2746 . 2747) (nil tag-type start 2746 . 2747) (nil font-lock-face web-mode-html-attr-equal-face 2746 . 2747) (nil tag-attr t 2742 . 2746) (nil tag-name "v-col" 2742 . 2746) (nil tag-type start 2742 . 2746) (nil font-lock-face web-mode-html-attr-name-face 2742 . 2746) (nil tag-attr-beg 0 2741 . 2742) (nil tag-attr t 2741 . 2742) (nil tag-name "v-col" 2741 . 2742) (nil tag-type start 2741 . 2742) (nil font-lock-face web-mode-html-attr-name-face 2741 . 2742) (nil tag-name "v-col" 2740 . 2741) (nil tag-type start 2740 . 2741) (nil tag-name "v-col" 2735 . 2740) (nil tag-type start 2735 . 2740) (nil font-lock-face web-mode-html-tag-custom-face 2735 . 2740) (nil tag-name "v-col" 2734 . 2735) (nil tag-type start 2734 . 2735) (nil tag-beg 19 2734 . 2735) (nil font-lock-face web-mode-html-tag-bracket-face 2734 . 2735) (nil tag-name "v-row" 2712 . 2713) (nil tag-type start 2712 . 2713) (nil tag-end t 2712 . 2713) (nil font-lock-face web-mode-html-tag-bracket-face 2712 . 2713) (nil tag-attr t 2711 . 2712) (nil tag-attr-end 0 2711 . 2712) (nil tag-name "v-row" 2711 . 2712) (nil tag-type start 2711 . 2712) (nil font-lock-face web-mode-html-attr-engine-face 2711 . 2712) (nil tag-attr t 2707 . 2711) (nil tag-name "v-row" 2707 . 2711) (nil tag-type start 2707 . 2711) (nil font-lock-face web-mode-html-attr-engine-face 2707 . 2711) (nil tag-attr-beg 2 2706 . 2707) (nil tag-attr t 2706 . 2707) (nil tag-name "v-row" 2706 . 2707) (nil tag-type start 2706 . 2707) (nil font-lock-face web-mode-html-attr-engine-face 2706 . 2707) (nil tag-name "v-row" 2705 . 2706) (nil tag-type start 2705 . 2706) (nil tag-name "v-row" 2700 . 2705) (nil tag-type start 2700 . 2705) (nil font-lock-face web-mode-html-tag-custom-face 2700 . 2705) (nil tag-name "v-row" 2699 . 2700) (nil tag-type start 2699 . 2700) (nil tag-beg 19 2699 . 2700) (nil font-lock-face web-mode-html-tag-bracket-face 2699 . 2700) (nil tag-name "v-row" 2679 . 2680) (nil tag-type end 2679 . 2680) (nil tag-end t 2679 . 2680) (nil font-lock-face web-mode-html-tag-bracket-face 2679 . 2680) (nil tag-name "v-row" 2674 . 2679) (nil tag-type end 2674 . 2679) (nil font-lock-face web-mode-html-tag-custom-face 2674 . 2679) (nil tag-name "v-row" 2673 . 2674) (nil tag-type end 2673 . 2674) (nil font-lock-face web-mode-html-tag-bracket-face 2673 . 2674) (nil tag-name "v-row" 2672 . 2673) (nil tag-type end 2672 . 2673) (nil tag-beg 22 2672 . 2673) (nil font-lock-face web-mode-html-tag-bracket-face 2672 . 2673) (nil tag-name "v-tooltip" 2652 . 2653) (nil tag-type end 2652 . 2653) (nil tag-end t 2652 . 2653) (nil font-lock-face web-mode-html-tag-bracket-face 2652 . 2653) (nil tag-name "v-tooltip" 2643 . 2652) (nil tag-type end 2643 . 2652) (nil font-lock-face web-mode-html-tag-custom-face 2643 . 2652) (nil tag-name "v-tooltip" 2642 . 2643) (nil tag-type end 2642 . 2643) (nil font-lock-face web-mode-html-tag-bracket-face 2642 . 2643) (nil tag-name "v-tooltip" 2641 . 2642) (nil tag-type end 2641 . 2642) (nil tag-beg 22 2641 . 2642) (nil font-lock-face web-mode-html-tag-bracket-face 2641 . 2642) (nil tag-name "span" 2619 . 2620) (nil tag-type end 2619 . 2620) (nil tag-end t 2619 . 2620) (nil font-lock-face web-mode-html-tag-bracket-face 2619 . 2620) (nil tag-name "span" 2615 . 2619) (nil tag-type end 2615 . 2619) (nil font-lock-face web-mode-html-tag-face 2615 . 2619) (nil tag-name "span" 2614 . 2615) (nil tag-type end 2614 . 2615) (nil font-lock-face web-mode-html-tag-bracket-face 2614 . 2615) (nil tag-name "span" 2613 . 2614) (nil tag-type end 2613 . 2614) (nil tag-beg 20 2613 . 2614) (nil font-lock-face web-mode-html-tag-bracket-face 2613 . 2614) (nil tag-name "v-row" 2589 . 2590) (nil tag-type end 2589 . 2590) (nil tag-end t 2589 . 2590) (nil font-lock-face web-mode-html-tag-bracket-face 2589 . 2590) (nil tag-name "v-row" 2584 . 2589) (nil tag-type end 2584 . 2589) (nil font-lock-face web-mode-html-tag-custom-face 2584 . 2589) (nil tag-name "v-row" 2583 . 2584) (nil tag-type end 2583 . 2584) (nil font-lock-face web-mode-html-tag-bracket-face 2583 . 2584) (nil tag-name "v-row" 2582 . 2583) (nil tag-type end 2582 . 2583) (nil tag-beg 22 2582 . 2583) (nil font-lock-face web-mode-html-tag-bracket-face 2582 . 2583) (nil tag-name "v-col" 2556 . 2557) (nil tag-type end 2556 . 2557) (nil tag-end t 2556 . 2557) (nil font-lock-face web-mode-html-tag-bracket-face 2556 . 2557) (nil tag-name "v-col" 2551 . 2556) (nil tag-type end 2551 . 2556) (nil font-lock-face web-mode-html-tag-custom-face 2551 . 2556) (nil tag-name "v-col" 2550 . 2551) (nil tag-type end 2550 . 2551) (nil font-lock-face web-mode-html-tag-bracket-face 2550 . 2551) (nil tag-name "v-col" 2549 . 2550) (nil tag-type end 2549 . 2550) (nil tag-beg 22 2549 . 2550) (nil font-lock-face web-mode-html-tag-bracket-face 2549 . 2550) (nil block-side t 2521 . 2522) (nil block-end t 2521 . 2522) (nil block-token delimiter-end 2521 . 2522) (nil font-lock-face web-mode-block-delimiter-face 2521 . 2522) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2521 . 2522) (nil block-side t 2520 . 2521) (nil block-token delimiter-end 2520 . 2521) (nil font-lock-face web-mode-block-delimiter-face 2520 . 2521) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2520 . 2521) (nil block-side t 2519 . 2520) (nil block-side t 2518 . 2519) (nil face (rainbow-delimiters-depth-3-face) 2518 . 2519) (nil block-side t 2517 . 2518) (nil face web-mode-variable-name-face 2517 . 2518) (nil block-side t 2516 . 2517) (nil face web-mode-variable-name-face 2516 . 2517) (nil block-side t 2515 . 2516) (nil face web-mode-variable-name-face 2515 . 2516) (nil block-side t 2514 . 2515) (nil face web-mode-variable-name-face 2514 . 2515) (nil block-side t 2513 . 2514) (nil face web-mode-variable-name-face 2513 . 2514) (nil block-side t 2512 . 2513) (nil face web-mode-variable-name-face 2512 . 2513) (nil block-side t 2511 . 2512) (nil block-side t 2510 . 2511) (nil face web-mode-variable-name-face 2510 . 2511) (nil block-side t 2509 . 2510) (nil face web-mode-variable-name-face 2509 . 2510) (nil block-side t 2508 . 2509) (nil face web-mode-variable-name-face 2508 . 2509) (nil block-side t 2507 . 2508) (nil face web-mode-variable-name-face 2507 . 2508) (nil block-side t 2506 . 2507) (nil face (rainbow-delimiters-depth-3-face) 2506 . 2507) (nil block-side t 2492 . 2506) (nil face web-mode-function-call-face 2492 . 2506) (nil block-side t 2491 . 2492) (nil block-side t 2490 . 2491) (nil block-token delimiter-beg 2490 . 2491) (nil font-lock-face web-mode-block-delimiter-face 2490 . 2491) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2490 . 2491) (nil block-beg 0 2489 . 2490) (nil block-controls 0 2489 . 2490) (nil block-side t 2489 . 2490) (nil block-token delimiter-beg 2489 . 2490) (nil font-lock-face web-mode-block-delimiter-face 2489 . 2490) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2489 . 2490) (nil tag-name "v-col" 2459 . 2460) (nil tag-type start 2459 . 2460) (nil tag-end t 2459 . 2460) (nil font-lock-face web-mode-html-tag-bracket-face 2459 . 2460) (nil tag-attr t 2458 . 2459) (nil tag-attr-end 5 2458 . 2459) (nil tag-name "v-col" 2458 . 2459) (nil tag-type start 2458 . 2459) (nil font-lock-face web-mode-html-attr-value-face 2458 . 2459) (nil tag-attr t 2443 . 2458) (nil tag-name "v-col" 2443 . 2458) (nil tag-type start 2443 . 2458) (nil font-lock-face web-mode-html-attr-value-face 2443 . 2458) (nil tag-attr t 2442 . 2443) (nil tag-name "v-col" 2442 . 2443) (nil tag-type start 2442 . 2443) (nil font-lock-face web-mode-html-attr-equal-face 2442 . 2443) (nil tag-attr t 2438 . 2442) (nil tag-name "v-col" 2438 . 2442) (nil tag-type start 2438 . 2442) (nil font-lock-face web-mode-html-attr-name-face 2438 . 2442) (nil tag-attr-beg 0 2437 . 2438) (nil tag-attr t 2437 . 2438) (nil tag-name "v-col" 2437 . 2438) (nil tag-type start 2437 . 2438) (nil font-lock-face web-mode-html-attr-name-face 2437 . 2438) (nil tag-name "v-col" 2436 . 2437) (nil tag-type start 2436 . 2437) (nil tag-name "v-col" 2431 . 2436) (nil tag-type start 2431 . 2436) (nil font-lock-face web-mode-html-tag-custom-face 2431 . 2436) (nil tag-name "v-col" 2430 . 2431) (nil tag-type start 2430 . 2431) (nil tag-beg 19 2430 . 2431) (nil font-lock-face web-mode-html-tag-bracket-face 2430 . 2431) (nil tag-name "v-row" 2402 . 2403) (nil tag-type start 2402 . 2403) (nil tag-end t 2402 . 2403) (nil font-lock-face web-mode-html-tag-bracket-face 2402 . 2403) (nil tag-attr t 2401 . 2402) (nil tag-attr-end 5 2401 . 2402) (nil tag-name "v-row" 2401 . 2402) (nil tag-type start 2401 . 2402) (nil font-lock-face web-mode-html-attr-value-face 2401 . 2402) (nil tag-attr t 2391 . 2401) (nil tag-name "v-row" 2391 . 2401) (nil tag-type start 2391 . 2401) (nil font-lock-face web-mode-html-attr-value-face 2391 . 2401) (nil tag-attr t 2390 . 2391) (nil tag-name "v-row" 2390 . 2391) (nil tag-type start 2390 . 2391) (nil font-lock-face web-mode-html-attr-equal-face 2390 . 2391) (nil tag-attr t 2386 . 2390) (nil tag-name "v-row" 2386 . 2390) (nil tag-type start 2386 . 2390) (nil font-lock-face web-mode-html-attr-name-face 2386 . 2390) (nil tag-attr-beg 0 2385 . 2386) (nil tag-attr t 2385 . 2386) (nil tag-name "v-row" 2385 . 2386) (nil tag-type start 2385 . 2386) (nil font-lock-face web-mode-html-attr-name-face 2385 . 2386) (nil tag-name "v-row" 2384 . 2385) (nil tag-type start 2384 . 2385) (nil tag-name "v-row" 2379 . 2384) (nil tag-type start 2379 . 2384) (nil font-lock-face web-mode-html-tag-custom-face 2379 . 2384) (nil tag-name "v-row" 2378 . 2379) (nil tag-type start 2378 . 2379) (nil tag-beg 19 2378 . 2379) (nil font-lock-face web-mode-html-tag-bracket-face 2378 . 2379) (nil tag-name "v-row" 2352 . 2353) (nil tag-type end 2352 . 2353) (nil tag-end t 2352 . 2353) (nil font-lock-face web-mode-html-tag-bracket-face 2352 . 2353) (nil tag-name "v-row" 2347 . 2352) (nil tag-type end 2347 . 2352) (nil font-lock-face web-mode-html-tag-custom-face 2347 . 2352) (nil tag-name "v-row" 2346 . 2347) (nil tag-type end 2346 . 2347) (nil font-lock-face web-mode-html-tag-bracket-face 2346 . 2347) (nil tag-name "v-row" 2345 . 2346) (nil tag-type end 2345 . 2346) (nil tag-beg 22 2345 . 2346) (nil font-lock-face web-mode-html-tag-bracket-face 2345 . 2346) (nil tag-name "v-col" 2319 . 2320) (nil tag-type end 2319 . 2320) (nil tag-end t 2319 . 2320) (nil font-lock-face web-mode-html-tag-bracket-face 2319 . 2320) (nil tag-name "v-col" 2314 . 2319) (nil tag-type end 2314 . 2319) (nil font-lock-face web-mode-html-tag-custom-face 2314 . 2319) (nil tag-name "v-col" 2313 . 2314) (nil tag-type end 2313 . 2314) (nil font-lock-face web-mode-html-tag-bracket-face 2313 . 2314) (nil tag-name "v-col" 2312 . 2313) (nil tag-type end 2312 . 2313) (nil tag-beg 22 2312 . 2313) (nil font-lock-face web-mode-html-tag-bracket-face 2312 . 2313) (nil face (rainbow-delimiters-depth-1-face) 2284 . 2285) (nil block-side t 2283 . 2284) (nil block-end t 2283 . 2284) (nil block-token delimiter-end 2283 . 2284) (nil font-lock-face web-mode-block-delimiter-face 2283 . 2284) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2283 . 2284) (nil block-side t 2282 . 2283) (nil block-token delimiter-end 2282 . 2283) (nil font-lock-face web-mode-block-delimiter-face 2282 . 2283) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2282 . 2283) (nil block-side t 2281 . 2282) (nil face web-mode-variable-name-face 2281 . 2282) (nil block-side t 2280 . 2281) (nil face web-mode-variable-name-face 2280 . 2281) (nil block-side t 2279 . 2280) (nil face web-mode-variable-name-face 2279 . 2280) (nil block-side t 2278 . 2279) (nil block-side t 2277 . 2278) (nil face web-mode-variable-name-face 2277 . 2278) (nil block-side t 2276 . 2277) (nil face web-mode-variable-name-face 2276 . 2277) (nil block-side t 2275 . 2276) (nil face web-mode-variable-name-face 2275 . 2276) (nil block-side t 2274 . 2275) (nil face web-mode-variable-name-face 2274 . 2275) (nil block-side t 2273 . 2274) (nil block-token delimiter-beg 2273 . 2274) (nil font-lock-face web-mode-block-delimiter-face 2273 . 2274) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2273 . 2274) (nil block-beg 0 2272 . 2273) (nil block-controls 0 2272 . 2273) (nil block-side t 2272 . 2273) (nil block-token delimiter-beg 2272 . 2273) (nil font-lock-face web-mode-block-delimiter-face 2272 . 2273) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2272 . 2273) (nil block-side t 2268 . 2269) (nil block-end t 2268 . 2269) (nil block-token delimiter-end 2268 . 2269) (nil font-lock-face web-mode-block-delimiter-face 2268 . 2269) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2268 . 2269) (nil block-side t 2267 . 2268) (nil block-token delimiter-end 2267 . 2268) (nil font-lock-face web-mode-block-delimiter-face 2267 . 2268) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2267 . 2268) (nil block-side t 2266 . 2267) (nil face web-mode-variable-name-face 2266 . 2267) (nil block-side t 2265 . 2266) (nil face web-mode-variable-name-face 2265 . 2266) (nil block-side t 2264 . 2265) (nil face web-mode-variable-name-face 2264 . 2265) (nil block-side t 2263 . 2264) (nil face web-mode-variable-name-face 2263 . 2264) (nil block-side t 2262 . 2263) (nil face web-mode-variable-name-face 2262 . 2263) (nil block-side t 2261 . 2262) (nil face web-mode-variable-name-face 2261 . 2262) (nil block-side t 2260 . 2261) (nil face web-mode-variable-name-face 2260 . 2261) (nil block-side t 2259 . 2260) (nil block-side t 2258 . 2259) (nil face web-mode-variable-name-face 2258 . 2259) (nil block-side t 2257 . 2258) (nil face web-mode-variable-name-face 2257 . 2258) (nil block-side t 2256 . 2257) (nil face web-mode-variable-name-face 2256 . 2257) (nil block-side t 2255 . 2256) (nil face web-mode-variable-name-face 2255 . 2256) (nil block-side t 2254 . 2255) (nil block-token delimiter-beg 2254 . 2255) (nil font-lock-face web-mode-block-delimiter-face 2254 . 2255) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2254 . 2255) (nil block-beg 0 2253 . 2254) (nil block-controls 0 2253 . 2254) (nil block-side t 2253 . 2254) (nil block-token delimiter-beg 2253 . 2254) (nil font-lock-face web-mode-block-delimiter-face 2253 . 2254) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2253 . 2254) (nil face (rainbow-delimiters-depth-1-face) 2252 . 2253) (nil tag-name "v-col" 2222 . 2223) (nil tag-type start 2222 . 2223) (nil tag-end t 2222 . 2223) (nil font-lock-face web-mode-html-tag-bracket-face 2222 . 2223) (nil tag-attr t 2221 . 2222) (nil tag-attr-end 5 2221 . 2222) (nil tag-name "v-col" 2221 . 2222) (nil tag-type start 2221 . 2222) (nil font-lock-face web-mode-html-attr-value-face 2221 . 2222) (nil tag-attr t 2211 . 2221) (nil tag-name "v-col" 2211 . 2221) (nil tag-type start 2211 . 2221) (nil font-lock-face web-mode-html-attr-value-face 2211 . 2221) (nil tag-attr t 2210 . 2211) (nil tag-name "v-col" 2210 . 2211) (nil tag-type start 2210 . 2211) (nil font-lock-face web-mode-html-attr-equal-face 2210 . 2211) (nil tag-attr t 2206 . 2210) (nil tag-name "v-col" 2206 . 2210) (nil tag-type start 2206 . 2210) (nil font-lock-face web-mode-html-attr-name-face 2206 . 2210) (nil tag-attr-beg 0 2205 . 2206) (nil tag-attr t 2205 . 2206) (nil tag-name "v-col" 2205 . 2206) (nil tag-type start 2205 . 2206) (nil font-lock-face web-mode-html-attr-name-face 2205 . 2206) (nil tag-name "v-col" 2204 . 2205) (nil tag-type start 2204 . 2205) (nil tag-name "v-col" 2199 . 2204) (nil tag-type start 2199 . 2204) (nil font-lock-face web-mode-html-tag-custom-face 2199 . 2204) (nil tag-name "v-col" 2198 . 2199) (nil tag-type start 2198 . 2199) (nil tag-beg 19 2198 . 2199) (nil font-lock-face web-mode-html-tag-bracket-face 2198 . 2199) (nil tag-name "v-row" 2170 . 2171) (nil tag-type start 2170 . 2171) (nil tag-end t 2170 . 2171) (nil font-lock-face web-mode-html-tag-bracket-face 2170 . 2171) (nil tag-attr t 2169 . 2170) (nil tag-attr-end 5 2169 . 2170) (nil tag-name "v-row" 2169 . 2170) (nil tag-type start 2169 . 2170) (nil font-lock-face web-mode-html-attr-value-face 2169 . 2170) (nil tag-attr t 2159 . 2169) (nil tag-name "v-row" 2159 . 2169) (nil tag-type start 2159 . 2169) (nil font-lock-face web-mode-html-attr-value-face 2159 . 2169) (nil tag-attr t 2158 . 2159) (nil tag-name "v-row" 2158 . 2159) (nil tag-type start 2158 . 2159) (nil font-lock-face web-mode-html-attr-equal-face 2158 . 2159) (nil tag-attr t 2154 . 2158) (nil tag-name "v-row" 2154 . 2158) (nil tag-type start 2154 . 2158) (nil font-lock-face web-mode-html-attr-name-face 2154 . 2158) (nil tag-attr-beg 0 2153 . 2154) (nil tag-attr t 2153 . 2154) (nil tag-name "v-row" 2153 . 2154) (nil tag-type start 2153 . 2154) (nil font-lock-face web-mode-html-attr-name-face 2153 . 2154) (nil tag-name "v-row" 2152 . 2153) (nil tag-type start 2152 . 2153) (nil tag-name "v-row" 2147 . 2152) (nil tag-type start 2147 . 2152) (nil font-lock-face web-mode-html-tag-custom-face 2147 . 2152) (nil tag-name "v-row" 2146 . 2147) (nil tag-type start 2146 . 2147) (nil tag-beg 19 2146 . 2147) (nil font-lock-face web-mode-html-tag-bracket-face 2146 . 2147) (nil tag-name "span" 2120 . 2121) (nil tag-type start 2120 . 2121) (nil tag-end t 2120 . 2121) (nil font-lock-face web-mode-html-tag-bracket-face 2120 . 2121) (nil tag-name "span" 2116 . 2120) (nil tag-type start 2116 . 2120) (nil font-lock-face web-mode-html-tag-face 2116 . 2120) (nil tag-name "span" 2115 . 2116) (nil tag-type start 2115 . 2116) (nil tag-beg 16 2115 . 2116) (nil font-lock-face web-mode-html-tag-bracket-face 2115 . 2116) (nil tag-name "template" 2091 . 2092) (nil tag-type end 2091 . 2092) (nil tag-end t 2091 . 2092) (nil font-lock-face web-mode-html-tag-bracket-face 2091 . 2092) (nil tag-name "template" 2083 . 2091) (nil tag-type end 2083 . 2091) (nil font-lock-face web-mode-html-tag-face 2083 . 2091) (nil tag-name "template" 2082 . 2083) (nil tag-type end 2082 . 2083) (nil font-lock-face web-mode-html-tag-bracket-face 2082 . 2083) (nil tag-name "template" 2081 . 2082) (nil tag-type end 2081 . 2082) (nil tag-beg 20 2081 . 2082) (nil font-lock-face web-mode-html-tag-bracket-face 2081 . 2082) (nil tag-name "v-col" 2057 . 2058) (nil tag-type end 2057 . 2058) (nil tag-end t 2057 . 2058) (nil font-lock-face web-mode-html-tag-bracket-face 2057 . 2058) (nil tag-name "v-col" 2052 . 2057) (nil tag-type end 2052 . 2057) (nil font-lock-face web-mode-html-tag-custom-face 2052 . 2057) (nil tag-name "v-col" 2051 . 2052) (nil tag-type end 2051 . 2052) (nil font-lock-face web-mode-html-tag-bracket-face 2051 . 2052) (nil tag-name "v-col" 2050 . 2051) (nil tag-type end 2050 . 2051) (nil tag-beg 22 2050 . 2051) (nil font-lock-face web-mode-html-tag-bracket-face 2050 . 2051) (nil block-side t 2024 . 2025) (nil block-end t 2024 . 2025) (nil block-token delimiter-end 2024 . 2025) (nil font-lock-face web-mode-block-delimiter-face 2024 . 2025) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2024 . 2025) (nil block-side t 2023 . 2024) (nil block-token delimiter-end 2023 . 2024) (nil font-lock-face web-mode-block-delimiter-face 2023 . 2024) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2023 . 2024) (nil block-side t 2022 . 2023) (nil face web-mode-variable-name-face 2022 . 2023) (nil block-side t 2021 . 2022) (nil face web-mode-variable-name-face 2021 . 2022) (nil block-side t 2020 . 2021) (nil face web-mode-variable-name-face 2020 . 2021) (nil block-side t 2019 . 2020) (nil face web-mode-variable-name-face 2019 . 2020) (nil block-side t 2018 . 2019) (nil block-side t 2017 . 2018) (nil face web-mode-variable-name-face 2017 . 2018) (nil block-side t 2016 . 2017) (nil face web-mode-variable-name-face 2016 . 2017) (nil block-side t 2015 . 2016) (nil face web-mode-variable-name-face 2015 . 2016) (nil block-side t 2014 . 2015) (nil face web-mode-variable-name-face 2014 . 2015) (nil block-side t 2013 . 2014) (nil block-token delimiter-beg 2013 . 2014) (nil font-lock-face web-mode-block-delimiter-face 2013 . 2014) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2013 . 2014) (nil block-beg 0 2012 . 2013) (nil block-controls 0 2012 . 2013) (nil block-side t 2012 . 2013) (nil block-token delimiter-beg 2012 . 2013) (nil font-lock-face web-mode-block-delimiter-face 2012 . 2013) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2012 . 2013) (nil tag-name "v-col" 1984 . 1985) (nil tag-type start 1984 . 1985) (nil tag-end t 1984 . 1985) (nil font-lock-face web-mode-html-tag-bracket-face 1984 . 1985) (nil tag-name "v-col" 1959 . 1984) (nil tag-type start 1959 . 1984) (nil tag-attr t 1958 . 1959) (nil tag-attr-end 5 1958 . 1959) (nil tag-name "v-col" 1958 . 1959) (nil tag-type start 1958 . 1959) (nil font-lock-face web-mode-html-attr-value-face 1958 . 1959) (nil tag-attr t 1942 . 1958) (nil tag-name "v-col" 1942 . 1958) (nil tag-type start 1942 . 1958) (nil font-lock-face web-mode-html-attr-value-face 1942 . 1958) (nil tag-attr t 1941 . 1942) (nil tag-name "v-col" 1941 . 1942) (nil tag-type start 1941 . 1942) (nil font-lock-face web-mode-html-attr-equal-face 1941 . 1942) (nil tag-attr t 1937 . 1941) (nil tag-name "v-col" 1937 . 1941) (nil tag-type start 1937 . 1941) (nil font-lock-face web-mode-html-attr-name-face 1937 . 1941) (nil tag-attr-beg 0 1936 . 1937) (nil tag-attr t 1936 . 1937) (nil tag-name "v-col" 1936 . 1937) (nil tag-type start 1936 . 1937) (nil font-lock-face web-mode-html-attr-name-face 1936 . 1937) (nil tag-name "v-col" 1904 . 1936) (nil tag-type start 1904 . 1936) (nil tag-attr t 1903 . 1904) (nil tag-attr-end 4 1903 . 1904) (nil tag-name "v-col" 1903 . 1904) (nil tag-type start 1903 . 1904) (nil font-lock-face web-mode-html-attr-value-face 1903 . 1904) (nil tag-attr t 1900 . 1903) (nil tag-name "v-col" 1900 . 1903) (nil tag-type start 1900 . 1903) (nil font-lock-face web-mode-html-attr-value-face 1900 . 1903) (nil tag-attr t 1899 . 1900) (nil tag-name "v-col" 1899 . 1900) (nil tag-type start 1899 . 1900) (nil font-lock-face web-mode-html-attr-equal-face 1899 . 1900) (nil tag-attr t 1896 . 1899) (nil tag-name "v-col" 1896 . 1899) (nil tag-type start 1896 . 1899) (nil font-lock-face web-mode-html-attr-engine-face 1896 . 1899) (nil tag-attr-beg 2 1895 . 1896) (nil tag-attr t 1895 . 1896) (nil tag-name "v-col" 1895 . 1896) (nil tag-type start 1895 . 1896) (nil font-lock-face web-mode-html-attr-engine-face 1895 . 1896) (nil tag-name "v-col" 1863 . 1895) (nil tag-type start 1863 . 1895) (nil tag-attr t 1862 . 1863) (nil tag-attr-end 6 1862 . 1863) (nil tag-name "v-col" 1862 . 1863) (nil tag-type start 1862 . 1863) (nil font-lock-face web-mode-html-attr-value-face 1862 . 1863) (nil tag-attr t 1856 . 1862) (nil tag-name "v-col" 1856 . 1862) (nil tag-type start 1856 . 1862) (nil font-lock-face web-mode-html-attr-value-face 1856 . 1862) (nil tag-attr t 1855 . 1856) (nil tag-name "v-col" 1855 . 1856) (nil tag-type start 1855 . 1856) (nil font-lock-face web-mode-html-attr-equal-face 1855 . 1856) (nil tag-attr t 1850 . 1855) (nil tag-name "v-col" 1850 . 1855) (nil tag-type start 1850 . 1855) (nil font-lock-face web-mode-html-attr-engine-face 1850 . 1855) (nil tag-attr-beg 2 1849 . 1850) (nil tag-attr t 1849 . 1850) (nil tag-name "v-col" 1849 . 1850) (nil tag-type start 1849 . 1850) (nil font-lock-face web-mode-html-attr-engine-face 1849 . 1850) (nil tag-name "v-col" 1848 . 1849) (nil tag-type start 1848 . 1849) (nil tag-name "v-col" 1843 . 1848) (nil tag-type start 1843 . 1848) (nil font-lock-face web-mode-html-tag-custom-face 1843 . 1848) (nil tag-name "v-col" 1842 . 1843) (nil tag-type start 1842 . 1843) (nil tag-beg 19 1842 . 1843) (nil font-lock-face web-mode-html-tag-bracket-face 1842 . 1843) (nil tag-name "template" 1816 . 1817) (nil tag-type start 1816 . 1817) (nil tag-end t 1816 . 1817) (nil font-lock-face web-mode-html-tag-bracket-face 1816 . 1817) (nil block-side t 1815 . 1816) (nil block-end t 1815 . 1816) (nil block-token delimiter-end 1815 . 1816) (nil tag-attr t 1815 . 1816) (nil tag-attr-end 16 1815 . 1816) (nil tag-name "template" 1815 . 1816) (nil tag-type start 1815 . 1816) (nil font-lock-face web-mode-block-delimiter-face 1815 . 1816) (nil block-side t 1813 . 1815) (nil tag-attr t 1813 . 1815) (nil tag-name "template" 1813 . 1815) (nil tag-type start 1813 . 1815) (nil block-side t 1812 . 1813) (nil tag-attr t 1812 . 1813) (nil tag-name "template" 1812 . 1813) (nil tag-type start 1812 . 1813) (nil face web-mode-variable-name-face 1812 . 1813) (nil block-side t 1811 . 1812) (nil tag-attr t 1811 . 1812) (nil tag-name "template" 1811 . 1812) (nil tag-type start 1811 . 1812) (nil face web-mode-variable-name-face 1811 . 1812) (nil block-side t 1810 . 1811) (nil tag-attr t 1810 . 1811) (nil tag-name "template" 1810 . 1811) (nil tag-type start 1810 . 1811) (nil face web-mode-variable-name-face 1810 . 1811) (nil block-side t 1809 . 1810) (nil tag-attr t 1809 . 1810) (nil tag-name "template" 1809 . 1810) (nil tag-type start 1809 . 1810) (nil face web-mode-variable-name-face 1809 . 1810) (nil block-side t 1808 . 1809) (nil tag-attr t 1808 . 1809) (nil tag-name "template" 1808 . 1809) (nil tag-type start 1808 . 1809) (nil face web-mode-variable-name-face 1808 . 1809) (nil block-side t 1806 . 1808) (nil tag-attr t 1806 . 1808) (nil tag-name "template" 1806 . 1808) (nil tag-type start 1806 . 1808) (nil block-side t 1805 . 1806) (nil tag-attr t 1805 . 1806) (nil tag-name "template" 1805 . 1806) (nil tag-type start 1805 . 1806) (nil face web-mode-variable-name-face 1805 . 1806) (nil block-side t 1804 . 1805) (nil tag-attr t 1804 . 1805) (nil tag-name "template" 1804 . 1805) (nil tag-type start 1804 . 1805) (nil face web-mode-variable-name-face 1804 . 1805) (nil block-side t 1802 . 1804) (nil tag-attr t 1802 . 1804) (nil tag-name "template" 1802 . 1804) (nil tag-type start 1802 . 1804) (nil block-side t 1801 . 1802) (nil block-token delimiter-beg 1801 . 1802) (nil tag-attr t 1801 . 1802) (nil tag-name "template" 1801 . 1802) (nil tag-type start 1801 . 1802) (nil font-lock-face web-mode-block-delimiter-face 1801 . 1802) (nil block-side t 1800 . 1801) (nil block-token delimiter-beg 1800 . 1801) (nil tag-attr t 1800 . 1801) (nil tag-name "template" 1800 . 1801) (nil tag-type start 1800 . 1801) (nil font-lock-face web-mode-block-delimiter-face 1800 . 1801) (nil block-side t 1799 . 1800) (nil block-token delimiter-beg 1799 . 1800) (nil tag-attr t 1799 . 1800) (nil tag-name "template" 1799 . 1800) (nil tag-type start 1799 . 1800) (nil font-lock-face web-mode-block-delimiter-face 1799 . 1800) (nil block-side t 1798 . 1799) (nil block-token delimiter-beg 1798 . 1799) (nil tag-attr t 1798 . 1799) (nil tag-name "template" 1798 . 1799) (nil tag-type start 1798 . 1799) (nil font-lock-face web-mode-block-delimiter-face 1798 . 1799) (nil block-side t 1797 . 1798) (nil block-token delimiter-beg 1797 . 1798) (nil tag-attr t 1797 . 1798) (nil tag-name "template" 1797 . 1798) (nil tag-type start 1797 . 1798) (nil font-lock-face web-mode-block-delimiter-face 1797 . 1798) (nil block-side t 1796 . 1797) (nil block-token delimiter-beg 1796 . 1797) (nil tag-attr t 1796 . 1797) (nil tag-name "template" 1796 . 1797) (nil tag-type start 1796 . 1797) (nil font-lock-face web-mode-block-delimiter-face 1796 . 1797) (nil block-side t 1795 . 1796) (nil block-token delimiter-beg 1795 . 1796) (nil tag-attr t 1795 . 1796) (nil tag-name "template" 1795 . 1796) (nil tag-type start 1795 . 1796) (nil font-lock-face web-mode-block-delimiter-face 1795 . 1796) (nil block-side t 1794 . 1795) (nil block-token delimiter-beg 1794 . 1795) (nil tag-attr t 1794 . 1795) (nil tag-name "template" 1794 . 1795) (nil tag-type start 1794 . 1795) (nil font-lock-face web-mode-block-delimiter-face 1794 . 1795) (nil block-side t 1793 . 1794) (nil block-token delimiter-beg 1793 . 1794) (nil tag-attr t 1793 . 1794) (nil tag-name "template" 1793 . 1794) (nil tag-type start 1793 . 1794) (nil font-lock-face web-mode-block-delimiter-face 1793 . 1794) (nil block-side t 1792 . 1793) (nil block-token delimiter-beg 1792 . 1793) (nil tag-attr t 1792 . 1793) (nil tag-name "template" 1792 . 1793) (nil tag-type start 1792 . 1793) (nil font-lock-face web-mode-block-delimiter-face 1792 . 1793) (nil block-side t 1791 . 1792) (nil block-token delimiter-beg 1791 . 1792) (nil tag-attr t 1791 . 1792) (nil tag-name "template" 1791 . 1792) (nil tag-type start 1791 . 1792) (nil font-lock-face web-mode-block-delimiter-face 1791 . 1792) (nil block-beg 0 1790 . 1791) (nil block-controls 0 1790 . 1791) (nil block-side t 1790 . 1791) (nil block-token delimiter-beg 1790 . 1791) (nil tag-attr t 1790 . 1791) (nil tag-name "template" 1790 . 1791) (nil tag-type start 1790 . 1791) (nil font-lock-face web-mode-block-delimiter-face 1790 . 1791) (nil tag-attr t 1785 . 1790) (nil tag-name "template" 1785 . 1790) (nil tag-type start 1785 . 1790) (nil font-lock-face web-mode-html-attr-engine-face 1785 . 1790) (nil tag-attr-beg 2 1784 . 1785) (nil tag-attr t 1784 . 1785) (nil tag-name "template" 1784 . 1785) (nil tag-type start 1784 . 1785) (nil font-lock-face web-mode-html-attr-engine-face 1784 . 1785) (nil tag-name "template" 1783 . 1784) (nil tag-type start 1783 . 1784) (nil tag-name "template" 1775 . 1783) (nil tag-type start 1775 . 1783) (nil font-lock-face web-mode-html-tag-face 1775 . 1783) (nil tag-name "template" 1774 . 1775) (nil tag-type start 1774 . 1775) (nil tag-beg 17 1774 . 1775) (nil font-lock-face web-mode-html-tag-bracket-face 1774 . 1775) (nil tag-name "v-tooltip" 1750 . 1751) (nil tag-type start 1750 . 1751) (nil tag-end t 1750 . 1751) (nil font-lock-face web-mode-html-tag-bracket-face 1750 . 1751) (nil tag-name "v-tooltip" 1729 . 1750) (nil tag-type start 1729 . 1750) (nil tag-attr t 1728 . 1729) (nil tag-attr-end 0 1728 . 1729) (nil tag-name "v-tooltip" 1728 . 1729) (nil tag-type start 1728 . 1729) (nil font-lock-face web-mode-html-attr-name-face 1728 . 1729) (nil tag-attr t 1724 . 1728) (nil tag-name "v-tooltip" 1724 . 1728) (nil tag-type start 1724 . 1728) (nil font-lock-face web-mode-html-attr-name-face 1724 . 1728) (nil tag-attr-beg 0 1723 . 1724) (nil tag-attr t 1723 . 1724) (nil tag-name "v-tooltip" 1723 . 1724) (nil tag-type start 1723 . 1724) (nil font-lock-face web-mode-html-attr-name-face 1723 . 1724) (nil tag-name "v-tooltip" 1700 . 1723) (nil tag-type start 1700 . 1723) (nil tag-name "v-tooltip" 1691 . 1700) (nil tag-type start 1691 . 1700) (nil font-lock-face web-mode-html-tag-custom-face 1691 . 1700) (nil tag-name "v-tooltip" 1690 . 1691) (nil tag-type start 1690 . 1691) (nil tag-beg 19 1690 . 1691) (nil font-lock-face web-mode-html-tag-bracket-face 1690 . 1691) (nil tag-name "v-row" 1668 . 1669) (nil tag-type start 1668 . 1669) (nil tag-end t 1668 . 1669) (nil font-lock-face web-mode-html-tag-bracket-face 1668 . 1669) (nil tag-attr t 1667 . 1668) (nil tag-attr-end 4 1667 . 1668) (nil tag-name "v-row" 1667 . 1668) (nil tag-type start 1667 . 1668) (nil font-lock-face web-mode-html-attr-value-face 1667 . 1668) (nil tag-attr t 1655 . 1667) (nil tag-name "v-row" 1655 . 1667) (nil tag-type start 1655 . 1667) (nil font-lock-face web-mode-html-attr-value-face 1655 . 1667) (nil tag-attr t 1654 . 1655) (nil tag-name "v-row" 1654 . 1655) (nil tag-type start 1654 . 1655) (nil font-lock-face web-mode-html-attr-equal-face 1654 . 1655) (nil tag-attr t 1651 . 1654) (nil tag-name "v-row" 1651 . 1654) (nil tag-type start 1651 . 1654) (nil font-lock-face web-mode-html-attr-engine-face 1651 . 1654) (nil tag-attr-beg 2 1650 . 1651) (nil tag-attr t 1650 . 1651) (nil tag-name "v-row" 1650 . 1651) (nil tag-type start 1650 . 1651) (nil font-lock-face web-mode-html-attr-engine-face 1650 . 1651) (nil tag-name "v-row" 1649 . 1650) (nil tag-type start 1649 . 1650) (nil tag-name "v-row" 1644 . 1649) (nil tag-type start 1644 . 1649) (nil font-lock-face web-mode-html-tag-custom-face 1644 . 1649) (nil tag-name "v-row" 1643 . 1644) (nil tag-type start 1643 . 1644) (nil tag-beg 19 1643 . 1644) (nil font-lock-face web-mode-html-tag-bracket-face 1643 . 1644) (nil tag-name "template" 1623 . 1624) (nil tag-type start 1623 . 1624) (nil tag-end t 1623 . 1624) (nil font-lock-face web-mode-html-tag-bracket-face 1623 . 1624) (nil block-side t 1622 . 1623) (nil block-end t 1622 . 1623) (nil block-token delimiter-end 1622 . 1623) (nil tag-attr t 1622 . 1623) (nil tag-attr-end 12 1622 . 1623) (nil tag-name "template" 1622 . 1623) (nil tag-type start 1622 . 1623) (nil font-lock-face web-mode-block-delimiter-face 1622 . 1623) (nil block-side t 1620 . 1622) (nil tag-attr t 1620 . 1622) (nil tag-name "template" 1620 . 1622) (nil tag-type start 1620 . 1622) (nil block-side t 1619 . 1620) (nil tag-attr t 1619 . 1620) (nil tag-name "template" 1619 . 1620) (nil tag-type start 1619 . 1620) (nil face web-mode-variable-name-face 1619 . 1620) (nil block-side t 1618 . 1619) (nil tag-attr t 1618 . 1619) (nil tag-name "template" 1618 . 1619) (nil tag-type start 1618 . 1619) (nil face web-mode-variable-name-face 1618 . 1619) (nil block-side t 1617 . 1618) (nil tag-attr t 1617 . 1618) (nil tag-name "template" 1617 . 1618) (nil tag-type start 1617 . 1618) (nil face web-mode-variable-name-face 1617 . 1618) (nil block-side t 1616 . 1617) (nil tag-attr t 1616 . 1617) (nil tag-name "template" 1616 . 1617) (nil tag-type start 1616 . 1617) (nil face web-mode-variable-name-face 1616 . 1617) (nil block-side t 1614 . 1616) (nil tag-attr t 1614 . 1616) (nil tag-name "template" 1614 . 1616) (nil tag-type start 1614 . 1616) (nil block-side t 1613 . 1614) (nil block-token delimiter-beg 1613 . 1614) (nil tag-attr t 1613 . 1614) (nil tag-name "template" 1613 . 1614) (nil tag-type start 1613 . 1614) (nil font-lock-face web-mode-block-delimiter-face 1613 . 1614) (nil block-side t 1612 . 1613) (nil block-token delimiter-beg 1612 . 1613) (nil tag-attr t 1612 . 1613) (nil tag-name "template" 1612 . 1613) (nil tag-type start 1612 . 1613) (nil font-lock-face web-mode-block-delimiter-face 1612 . 1613) (nil block-side t 1611 . 1612) (nil block-token delimiter-beg 1611 . 1612) (nil tag-attr t 1611 . 1612) (nil tag-name "template" 1611 . 1612) (nil tag-type start 1611 . 1612) (nil font-lock-face web-mode-block-delimiter-face 1611 . 1612) (nil block-side t 1610 . 1611) (nil block-token delimiter-beg 1610 . 1611) (nil tag-attr t 1610 . 1611) (nil tag-name "template" 1610 . 1611) (nil tag-type start 1610 . 1611) (nil font-lock-face web-mode-block-delimiter-face 1610 . 1611) (nil block-side t 1609 . 1610) (nil block-token delimiter-beg 1609 . 1610) (nil tag-attr t 1609 . 1610) (nil tag-name "template" 1609 . 1610) (nil tag-type start 1609 . 1610) (nil font-lock-face web-mode-block-delimiter-face 1609 . 1610) (nil block-side t 1608 . 1609) (nil block-token delimiter-beg 1608 . 1609) (nil tag-attr t 1608 . 1609) (nil tag-name "template" 1608 . 1609) (nil tag-type start 1608 . 1609) (nil font-lock-face web-mode-block-delimiter-face 1608 . 1609) (nil block-side t 1607 . 1608) (nil block-token delimiter-beg 1607 . 1608) (nil tag-attr t 1607 . 1608) (nil tag-name "template" 1607 . 1608) (nil tag-type start 1607 . 1608) (nil font-lock-face web-mode-block-delimiter-face 1607 . 1608) (nil block-beg 0 1606 . 1607) (nil block-controls 0 1606 . 1607) (nil block-side t 1606 . 1607) (nil block-token delimiter-beg 1606 . 1607) (nil tag-attr t 1606 . 1607) (nil tag-name "template" 1606 . 1607) (nil tag-type start 1606 . 1607) (nil font-lock-face web-mode-block-delimiter-face 1606 . 1607) (nil tag-attr t 1601 . 1606) (nil tag-name "template" 1601 . 1606) (nil tag-type start 1601 . 1606) (nil font-lock-face web-mode-html-attr-engine-face 1601 . 1606) (nil tag-attr-beg 2 1600 . 1601) (nil tag-attr t 1600 . 1601) (nil tag-name "template" 1600 . 1601) (nil tag-type start 1600 . 1601) (nil font-lock-face web-mode-html-attr-engine-face 1600 . 1601) (nil tag-name "template" 1599 . 1600) (nil tag-type start 1599 . 1600) (nil tag-name "template" 1591 . 1599) (nil tag-type start 1591 . 1599) (nil font-lock-face web-mode-html-tag-face 1591 . 1599) (nil tag-name "template" 1590 . 1591) (nil tag-type start 1590 . 1591) (nil tag-beg 17 1590 . 1591) (nil font-lock-face web-mode-html-tag-bracket-face 1590 . 1591) (nil tag-name "template" 1572 . 1573) (nil tag-type end 1572 . 1573) (nil tag-end t 1572 . 1573) (nil font-lock-face web-mode-html-tag-bracket-face 1572 . 1573) (nil tag-name "template" 1564 . 1572) (nil tag-type end 1564 . 1572) (nil font-lock-face web-mode-html-tag-face 1564 . 1572) (nil tag-name "template" 1563 . 1564) (nil tag-type end 1563 . 1564) (nil font-lock-face web-mode-html-tag-bracket-face 1563 . 1564) (nil tag-name "template" 1562 . 1563) (nil tag-type end 1562 . 1563) (nil tag-beg 20 1562 . 1563) (nil font-lock-face web-mode-html-tag-bracket-face 1562 . 1563) (nil tag-name "v-icon" 1544 . 1545) (nil tag-type end 1544 . 1545) (nil tag-end t 1544 . 1545) (nil font-lock-face web-mode-html-tag-bracket-face 1544 . 1545) (nil tag-name "v-icon" 1538 . 1544) (nil tag-type end 1538 . 1544) (nil font-lock-face web-mode-html-tag-custom-face 1538 . 1544) (nil tag-name "v-icon" 1537 . 1538) (nil tag-type end 1537 . 1538) (nil font-lock-face web-mode-html-tag-bracket-face 1537 . 1538) (nil tag-name "v-icon" 1536 . 1537) (nil tag-type end 1536 . 1537) (nil tag-beg 22 1536 . 1537) (nil font-lock-face web-mode-html-tag-bracket-face 1536 . 1537) (nil tag-name "v-icon" 1485 . 1486) (nil tag-type start 1485 . 1486) (nil tag-end t 1485 . 1486) (nil font-lock-face web-mode-html-tag-bracket-face 1485 . 1486) (nil tag-attr t 1484 . 1485) (nil tag-attr-end 0 1484 . 1485) (nil tag-name "v-icon" 1484 . 1485) (nil tag-type start 1484 . 1485) (nil font-lock-face web-mode-html-attr-engine-face 1484 . 1485) (nil tag-attr t 1480 . 1484) (nil tag-name "v-icon" 1480 . 1484) (nil tag-type start 1480 . 1484) (nil font-lock-face web-mode-html-attr-engine-face 1480 . 1484) (nil tag-attr-beg 2 1479 . 1480) (nil tag-attr t 1479 . 1480) (nil tag-name "v-icon" 1479 . 1480) (nil tag-type start 1479 . 1480) (nil font-lock-face web-mode-html-attr-engine-face 1479 . 1480) (nil tag-name "v-icon" 1478 . 1479) (nil tag-type start 1478 . 1479) (nil tag-name "v-icon" 1472 . 1478) (nil tag-type start 1472 . 1478) (nil font-lock-face web-mode-html-tag-custom-face 1472 . 1478) (nil tag-name "v-icon" 1471 . 1472) (nil tag-type start 1471 . 1472) (nil tag-beg 19 1471 . 1472) (nil font-lock-face web-mode-html-tag-bracket-face 1471 . 1472) (nil tag-name "v-icon" 1451 . 1452) (nil tag-type end 1451 . 1452) (nil tag-end t 1451 . 1452) (nil font-lock-face web-mode-html-tag-bracket-face 1451 . 1452) (nil tag-name "v-icon" 1445 . 1451) (nil tag-type end 1445 . 1451) (nil font-lock-face web-mode-html-tag-custom-face 1445 . 1451) (nil tag-name "v-icon" 1444 . 1445) (nil tag-type end 1444 . 1445) (nil font-lock-face web-mode-html-tag-bracket-face 1444 . 1445) (nil tag-name "v-icon" 1443 . 1444) (nil tag-type end 1443 . 1444) (nil tag-beg 22 1443 . 1444) (nil font-lock-face web-mode-html-tag-bracket-face 1443 . 1444) (nil block-side t 1423 . 1424) (nil block-end t 1423 . 1424) (nil block-token delimiter-end 1423 . 1424) (nil font-lock-face web-mode-block-delimiter-face 1423 . 1424) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1423 . 1424) (nil block-side t 1422 . 1423) (nil block-token delimiter-end 1422 . 1423) (nil font-lock-face web-mode-block-delimiter-face 1422 . 1423) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1422 . 1423) (nil block-side t 1420 . 1422) (nil block-side t 1419 . 1420) (nil face web-mode-variable-name-face 1419 . 1420) (nil block-side t 1418 . 1419) (nil face web-mode-variable-name-face 1418 . 1419) (nil block-side t 1417 . 1418) (nil face web-mode-variable-name-face 1417 . 1418) (nil block-side t 1416 . 1417) (nil face web-mode-variable-name-face 1416 . 1417) (nil block-side t 1415 . 1416) (nil face web-mode-variable-name-face 1415 . 1416) (nil block-side t 1414 . 1415) (nil face web-mode-variable-name-face 1414 . 1415) (nil block-side t 1413 . 1414) (nil block-side t 1412 . 1413) (nil face web-mode-variable-name-face 1412 . 1413) (nil block-side t 1411 . 1412) (nil face web-mode-variable-name-face 1411 . 1412) (nil block-side t 1410 . 1411) (nil face web-mode-variable-name-face 1410 . 1411) (nil block-side t 1405 . 1410) (nil block-side t 1404 . 1405) (nil face web-mode-variable-name-face 1404 . 1405) (nil block-side t 1403 . 1404) (nil face web-mode-variable-name-face 1403 . 1404) (nil block-side t 1402 . 1403) (nil face web-mode-variable-name-face 1402 . 1403) (nil block-side t 1401 . 1402) (nil face web-mode-variable-name-face 1401 . 1402) (nil block-side t 1400 . 1401) (nil block-side t 1399 . 1400) (nil face web-mode-variable-name-face 1399 . 1400) (nil block-side t 1398 . 1399) (nil face web-mode-variable-name-face 1398 . 1399) (nil block-side t 1397 . 1398) (nil face web-mode-variable-name-face 1397 . 1398) (nil block-side t 1396 . 1397) (nil face web-mode-variable-name-face 1396 . 1397) (nil block-side t 1395 . 1396) (nil face web-mode-variable-name-face 1395 . 1396) (nil block-side t 1394 . 1395) (nil face web-mode-variable-name-face 1394 . 1395) (nil block-side t 1393 . 1394) (nil block-side t 1392 . 1393) (nil face web-mode-variable-name-face 1392 . 1393) (nil block-side t 1391 . 1392) (nil face web-mode-variable-name-face 1391 . 1392) (nil block-side t 1390 . 1391) (nil face web-mode-variable-name-face 1390 . 1391) (nil block-side t 1386 . 1390) (nil block-side t 1385 . 1386) (nil face web-mode-variable-name-face 1385 . 1386) (nil block-side t 1384 . 1385) (nil face web-mode-variable-name-face 1384 . 1385) (nil block-side t 1383 . 1384) (nil face web-mode-variable-name-face 1383 . 1384) (nil block-side t 1382 . 1383) (nil face web-mode-variable-name-face 1382 . 1383) (nil block-side t 1381 . 1382) (nil block-side t 1380 . 1381) (nil block-token delimiter-beg 1380 . 1381) (nil font-lock-face web-mode-block-delimiter-face 1380 . 1381) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1380 . 1381) (nil block-beg 0 1379 . 1380) (nil block-controls 0 1379 . 1380) (nil block-side t 1379 . 1380) (nil block-token delimiter-beg 1379 . 1380) (nil font-lock-face web-mode-block-delimiter-face 1379 . 1380) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1379 . 1380) (nil tag-name "v-icon" 1357 . 1358) (nil tag-type start 1357 . 1358) (nil tag-end t 1357 . 1358) (nil font-lock-face web-mode-html-tag-bracket-face 1357 . 1358) (nil tag-attr t 1356 . 1357) (nil tag-attr-end 9 1356 . 1357) (nil tag-name "v-icon" 1356 . 1357) (nil tag-type start 1356 . 1357) (nil font-lock-face web-mode-html-attr-value-face 1356 . 1357) (nil tag-attr t 1343 . 1356) (nil tag-name "v-icon" 1343 . 1356) (nil tag-type start 1343 . 1356) (nil font-lock-face web-mode-html-attr-value-face 1343 . 1356) (nil tag-attr t 1342 . 1343) (nil tag-name "v-icon" 1342 . 1343) (nil tag-type start 1342 . 1343) (nil font-lock-face web-mode-html-attr-equal-face 1342 . 1343) (nil tag-attr t 1334 . 1342) (nil tag-name "v-icon" 1334 . 1342) (nil tag-type start 1334 . 1342) (nil font-lock-face web-mode-html-attr-engine-face 1334 . 1342) (nil tag-attr-beg 2 1333 . 1334) (nil tag-attr t 1333 . 1334) (nil tag-name "v-icon" 1333 . 1334) (nil tag-type start 1333 . 1334) (nil font-lock-face web-mode-html-attr-engine-face 1333 . 1334) (nil tag-name "v-icon" 1332 . 1333) (nil tag-type start 1332 . 1333) (nil tag-name "v-icon" 1326 . 1332) (nil tag-type start 1326 . 1332) (nil font-lock-face web-mode-html-tag-custom-face 1326 . 1332) (nil tag-name "v-icon" 1325 . 1326) (nil tag-type start 1325 . 1326) (nil tag-beg 19 1325 . 1326) (nil font-lock-face web-mode-html-tag-bracket-face 1325 . 1326) (nil tag-name "v-icon" 1305 . 1306) (nil tag-type end 1305 . 1306) (nil tag-end t 1305 . 1306) (nil font-lock-face web-mode-html-tag-bracket-face 1305 . 1306) (nil tag-name "v-icon" 1299 . 1305) (nil tag-type end 1299 . 1305) (nil font-lock-face web-mode-html-tag-custom-face 1299 . 1305) (nil tag-name "v-icon" 1298 . 1299) (nil tag-type end 1298 . 1299) (nil font-lock-face web-mode-html-tag-bracket-face 1298 . 1299) (nil tag-name "v-icon" 1297 . 1298) (nil tag-type end 1297 . 1298) (nil tag-beg 22 1297 . 1298) (nil font-lock-face web-mode-html-tag-bracket-face 1297 . 1298) (nil tag-name "v-icon" 1244 . 1245) (nil tag-type start 1244 . 1245) (nil tag-end t 1244 . 1245) (nil font-lock-face web-mode-html-tag-bracket-face 1244 . 1245) (nil tag-attr t 1243 . 1244) (nil tag-attr-end 4 1243 . 1244) (nil tag-name "v-icon" 1243 . 1244) (nil tag-type start 1243 . 1244) (nil font-lock-face web-mode-html-attr-value-face 1243 . 1244) (nil tag-attr t 1214 . 1243) (nil tag-name "v-icon" 1214 . 1243) (nil tag-type start 1214 . 1243) (nil font-lock-face web-mode-html-attr-value-face 1214 . 1243) (nil tag-attr t 1213 . 1214) (nil tag-name "v-icon" 1213 . 1214) (nil tag-type start 1213 . 1214) (nil font-lock-face web-mode-html-attr-equal-face 1213 . 1214) (nil tag-attr t 1210 . 1213) (nil tag-name "v-icon" 1210 . 1213) (nil tag-type start 1210 . 1213) (nil font-lock-face web-mode-html-attr-engine-face 1210 . 1213) (nil tag-attr-beg 2 1209 . 1210) (nil tag-attr t 1209 . 1210) (nil tag-name "v-icon" 1209 . 1210) (nil tag-type start 1209 . 1210) (nil font-lock-face web-mode-html-attr-engine-face 1209 . 1210) (nil tag-name "v-icon" 1208 . 1209) (nil tag-type start 1208 . 1209) (nil tag-name "v-icon" 1202 . 1208) (nil tag-type start 1202 . 1208) (nil font-lock-face web-mode-html-tag-custom-face 1202 . 1208) (nil tag-name "v-icon" 1201 . 1202) (nil tag-type start 1201 . 1202) (nil tag-beg 19 1201 . 1202) (nil font-lock-face web-mode-html-tag-bracket-face 1201 . 1202) (nil tag-name "template" 1181 . 1182) (nil tag-type start 1181 . 1182) (nil tag-end t 1181 . 1182) (nil font-lock-face web-mode-html-tag-bracket-face 1181 . 1182) (nil block-side t 1180 . 1181) (nil block-end t 1180 . 1181) (nil block-token delimiter-end 1180 . 1181) (nil tag-attr t 1180 . 1181) (nil tag-attr-end 14 1180 . 1181) (nil tag-name "template" 1180 . 1181) (nil tag-type start 1180 . 1181) (nil font-lock-face web-mode-block-delimiter-face 1180 . 1181) (nil block-side t 1178 . 1180) (nil tag-attr t 1178 . 1180) (nil tag-name "template" 1178 . 1180) (nil tag-type start 1178 . 1180) (nil block-side t 1177 . 1178) (nil tag-attr t 1177 . 1178) (nil tag-name "template" 1177 . 1178) (nil tag-type start 1177 . 1178) (nil face web-mode-variable-name-face 1177 . 1178) (nil block-side t 1176 . 1177) (nil tag-attr t 1176 . 1177) (nil tag-name "template" 1176 . 1177) (nil tag-type start 1176 . 1177) (nil face web-mode-variable-name-face 1176 . 1177) (nil block-side t 1175 . 1176) (nil tag-attr t 1175 . 1176) (nil tag-name "template" 1175 . 1176) (nil tag-type start 1175 . 1176) (nil face web-mode-variable-name-face 1175 . 1176) (nil block-side t 1174 . 1175) (nil tag-attr t 1174 . 1175) (nil tag-name "template" 1174 . 1175) (nil tag-type start 1174 . 1175) (nil face web-mode-variable-name-face 1174 . 1175) (nil block-side t 1172 . 1174) (nil tag-attr t 1172 . 1174) (nil tag-name "template" 1172 . 1174) (nil tag-type start 1172 . 1174) (nil block-side t 1171 . 1172) (nil tag-attr t 1171 . 1172) (nil tag-name "template" 1171 . 1172) (nil tag-type start 1171 . 1172) (nil face web-mode-variable-name-face 1171 . 1172) (nil block-side t 1170 . 1171) (nil tag-attr t 1170 . 1171) (nil tag-name "template" 1170 . 1171) (nil tag-type start 1170 . 1171) (nil face web-mode-variable-name-face 1170 . 1171) (nil block-side t 1169 . 1170) (nil tag-attr t 1169 . 1170) (nil tag-name "template" 1169 . 1170) (nil tag-type start 1169 . 1170) (nil face web-mode-variable-name-face 1169 . 1170) (nil block-side t 1168 . 1169) (nil tag-attr t 1168 . 1169) (nil tag-name "template" 1168 . 1169) (nil tag-type start 1168 . 1169) (nil face web-mode-variable-name-face 1168 . 1169) (nil block-side t 1166 . 1168) (nil tag-attr t 1166 . 1168) (nil tag-name "template" 1166 . 1168) (nil tag-type start 1166 . 1168) (nil block-side t 1165 . 1166) (nil block-token delimiter-beg 1165 . 1166) (nil tag-attr t 1165 . 1166) (nil tag-name "template" 1165 . 1166) (nil tag-type start 1165 . 1166) (nil font-lock-face web-mode-block-delimiter-face 1165 . 1166) (nil block-side t 1164 . 1165) (nil block-token delimiter-beg 1164 . 1165) (nil tag-attr t 1164 . 1165) (nil tag-name "template" 1164 . 1165) (nil tag-type start 1164 . 1165) (nil font-lock-face web-mode-block-delimiter-face 1164 . 1165) (nil block-side t 1163 . 1164) (nil block-token delimiter-beg 1163 . 1164) (nil tag-attr t 1163 . 1164) (nil tag-name "template" 1163 . 1164) (nil tag-type start 1163 . 1164) (nil font-lock-face web-mode-block-delimiter-face 1163 . 1164) (nil block-side t 1162 . 1163) (nil block-token delimiter-beg 1162 . 1163) (nil tag-attr t 1162 . 1163) (nil tag-name "template" 1162 . 1163) (nil tag-type start 1162 . 1163) (nil font-lock-face web-mode-block-delimiter-face 1162 . 1163) (nil block-side t 1161 . 1162) (nil block-token delimiter-beg 1161 . 1162) (nil tag-attr t 1161 . 1162) (nil tag-name "template" 1161 . 1162) (nil tag-type start 1161 . 1162) (nil font-lock-face web-mode-block-delimiter-face 1161 . 1162) (nil block-side t 1160 . 1161) (nil block-token delimiter-beg 1160 . 1161) (nil tag-attr t 1160 . 1161) (nil tag-name "template" 1160 . 1161) (nil tag-type start 1160 . 1161) (nil font-lock-face web-mode-block-delimiter-face 1160 . 1161) (nil block-side t 1159 . 1160) (nil block-token delimiter-beg 1159 . 1160) (nil tag-attr t 1159 . 1160) (nil tag-name "template" 1159 . 1160) (nil tag-type start 1159 . 1160) (nil font-lock-face web-mode-block-delimiter-face 1159 . 1160) (nil block-side t 1158 . 1159) (nil block-token delimiter-beg 1158 . 1159) (nil tag-attr t 1158 . 1159) (nil tag-name "template" 1158 . 1159) (nil tag-type start 1158 . 1159) (nil font-lock-face web-mode-block-delimiter-face 1158 . 1159) (nil block-side t 1157 . 1158) (nil block-token delimiter-beg 1157 . 1158) (nil tag-attr t 1157 . 1158) (nil tag-name "template" 1157 . 1158) (nil tag-type start 1157 . 1158) (nil font-lock-face web-mode-block-delimiter-face 1157 . 1158) (nil block-beg 0 1156 . 1157) (nil block-controls 0 1156 . 1157) (nil block-side t 1156 . 1157) (nil block-token delimiter-beg 1156 . 1157) (nil tag-attr t 1156 . 1157) (nil tag-name "template" 1156 . 1157) (nil tag-type start 1156 . 1157) (nil font-lock-face web-mode-block-delimiter-face 1156 . 1157) (nil tag-attr t 1151 . 1156) (nil tag-name "template" 1151 . 1156) (nil tag-type start 1151 . 1156) (nil font-lock-face web-mode-html-attr-engine-face 1151 . 1156) (nil tag-attr-beg 2 1150 . 1151) (nil tag-attr t 1150 . 1151) (nil tag-name "template" 1150 . 1151) (nil tag-type start 1150 . 1151) (nil font-lock-face web-mode-html-attr-engine-face 1150 . 1151) (nil tag-name "template" 1149 . 1150) (nil tag-type start 1149 . 1150) (nil tag-name "template" 1141 . 1149) (nil tag-type start 1141 . 1149) (nil font-lock-face web-mode-html-tag-face 1141 . 1149) (nil tag-name "template" 1140 . 1141) (nil tag-type start 1140 . 1141) (nil tag-beg 17 1140 . 1141) (nil font-lock-face web-mode-html-tag-bracket-face 1140 . 1141) (nil tag-name "v-draggable-treeview" 1122 . 1123) (nil tag-type start 1122 . 1123) (nil tag-end t 1122 . 1123) (nil font-lock-face web-mode-html-tag-bracket-face 1122 . 1123) (nil tag-name "v-draggable-treeview" 1107 . 1122) (nil tag-type start 1107 . 1122) (nil tag-attr t 1106 . 1107) (nil tag-attr-end 0 1106 . 1107) (nil tag-name "v-draggable-treeview" 1106 . 1107) (nil tag-type start 1106 . 1107) (nil font-lock-face web-mode-html-attr-name-face 1106 . 1107) (nil tag-attr t 1103 . 1106) (nil tag-name "v-draggable-treeview" 1103 . 1106) (nil tag-type start 1103 . 1106) (nil font-lock-face web-mode-html-attr-name-face 1103 . 1106) (nil tag-attr-beg 0 1102 . 1103) (nil tag-attr t 1102 . 1103) (nil tag-name "v-draggable-treeview" 1102 . 1103) (nil tag-type start 1102 . 1103) (nil font-lock-face web-mode-html-attr-name-face 1102 . 1103) (nil tag-name "v-draggable-treeview" 1085 . 1102) (nil tag-type start 1085 . 1102) (nil tag-attr t 1084 . 1085) (nil tag-attr-end 5 1084 . 1085) (nil tag-name "v-draggable-treeview" 1084 . 1085) (nil tag-type start 1084 . 1085) (nil font-lock-face web-mode-html-attr-value-face 1084 . 1085) (nil tag-attr t 1072 . 1084) (nil tag-name "v-draggable-treeview" 1072 . 1084) (nil tag-type start 1072 . 1084) (nil font-lock-face web-mode-html-attr-value-face 1072 . 1084) (nil tag-attr t 1071 . 1072) (nil tag-name "v-draggable-treeview" 1071 . 1072) (nil tag-type start 1071 . 1072) (nil font-lock-face web-mode-html-attr-equal-face 1071 . 1072) (nil tag-attr t 1067 . 1071) (nil tag-name "v-draggable-treeview" 1067 . 1071) (nil tag-type start 1067 . 1071) (nil font-lock-face web-mode-html-attr-name-face 1067 . 1071) (nil tag-attr-beg 0 1066 . 1067) (nil tag-attr t 1066 . 1067) (nil tag-name "v-draggable-treeview" 1066 . 1067) (nil tag-type start 1066 . 1067) (nil font-lock-face web-mode-html-attr-name-face 1066 . 1067) (nil tag-name "v-draggable-treeview" 1049 . 1066) (nil tag-type start 1049 . 1066) (nil tag-attr t 1048 . 1049) (nil tag-attr-end 7 1048 . 1049) (nil tag-name "v-draggable-treeview" 1048 . 1049) (nil tag-type start 1048 . 1049) (nil font-lock-face web-mode-html-attr-value-face 1048 . 1049) (nil tag-attr t 1031 . 1048) (nil tag-name "v-draggable-treeview" 1031 . 1048) (nil tag-type start 1031 . 1048) (nil font-lock-face web-mode-html-attr-value-face 1031 . 1048) (nil tag-attr t 1030 . 1031) (nil tag-name "v-draggable-treeview" 1030 . 1031) (nil tag-type start 1030 . 1031) (nil font-lock-face web-mode-html-attr-equal-face 1030 . 1031) (nil tag-attr t 1024 . 1030) (nil tag-name "v-draggable-treeview" 1024 . 1030) (nil tag-type start 1024 . 1030) (nil font-lock-face web-mode-html-attr-engine-face 1024 . 1030) (nil tag-attr-beg 2 1023 . 1024) (nil tag-attr t 1023 . 1024) (nil tag-name "v-draggable-treeview" 1023 . 1024) (nil tag-type start 1023 . 1024) (nil font-lock-face web-mode-html-attr-engine-face 1023 . 1024) (nil tag-name "v-draggable-treeview" 1006 . 1023) (nil tag-type start 1006 . 1023) (nil tag-name "v-draggable-treeview" 986 . 1006) (nil tag-type start 986 . 1006) (nil font-lock-face web-mode-html-tag-custom-face 986 . 1006) (nil tag-name "v-draggable-treeview" 985 . 986) (nil tag-type start 985 . 986) (nil tag-beg 19 985 . 986) (nil font-lock-face web-mode-html-tag-bracket-face 985 . 986) (nil tag-name "v-container" 969 . 970) (nil tag-type start 969 . 970) (nil tag-end t 969 . 970) (nil font-lock-face web-mode-html-tag-bracket-face 969 . 970) (nil tag-name "v-container" 968 . 969) (nil tag-type start 968 . 969) (nil tag-attr t 967 . 968) (nil tag-attr-end 5 967 . 968) (nil tag-name "v-container" 967 . 968) (nil tag-type start 967 . 968) (nil font-lock-face web-mode-html-attr-value-face 967 . 968) (nil tag-attr t 938 . 967) (nil tag-name "v-container" 938 . 967) (nil tag-type start 938 . 967) (nil font-lock-face web-mode-html-attr-value-face 938 . 967) (nil tag-attr t 937 . 938) (nil tag-name "v-container" 937 . 938) (nil tag-type start 937 . 938) (nil font-lock-face web-mode-html-attr-equal-face 937 . 938) (nil tag-attr t 933 . 937) (nil tag-name "v-container" 933 . 937) (nil tag-type start 933 . 937) (nil font-lock-face web-mode-html-attr-name-face 933 . 937) (nil tag-attr-beg 0 932 . 933) (nil tag-attr t 932 . 933) (nil tag-name "v-container" 932 . 933) (nil tag-type start 932 . 933) (nil font-lock-face web-mode-html-attr-name-face 932 . 933) (nil tag-name "v-container" 931 . 932) (nil tag-type start 931 . 932) (nil tag-attr t 930 . 931) (nil tag-attr-end 5 930 . 931) (nil tag-name "v-container" 930 . 931) (nil tag-type start 930 . 931) (nil font-lock-face web-mode-html-attr-value-face 930 . 931) (nil tag-attr t 925 . 930) (nil tag-name "v-container" 925 . 930) (nil tag-type start 925 . 930) (nil font-lock-face web-mode-html-attr-value-face 925 . 930) (nil tag-attr t 924 . 925) (nil tag-name "v-container" 924 . 925) (nil tag-type start 924 . 925) (nil font-lock-face web-mode-html-attr-equal-face 924 . 925) (nil tag-attr t 920 . 924) (nil tag-name "v-container" 920 . 924) (nil tag-type start 920 . 924) (nil font-lock-face web-mode-html-attr-name-face 920 . 924) (nil tag-attr-beg 0 919 . 920) (nil tag-attr t 919 . 920) (nil tag-name "v-container" 919 . 920) (nil tag-type start 919 . 920) (nil font-lock-face web-mode-html-attr-name-face 919 . 920) (nil tag-name "v-container" 918 . 919) (nil tag-type start 918 . 919) (nil tag-name "v-container" 907 . 918) (nil tag-type start 907 . 918) (nil font-lock-face web-mode-html-tag-custom-face 907 . 918) (nil tag-name "v-container" 906 . 907) (nil tag-type start 906 . 907) (nil tag-beg 19 906 . 907) (nil font-lock-face web-mode-html-tag-bracket-face 906 . 907) (nil tag-name "v-toolbar" 890 . 891) (nil tag-type end 890 . 891) (nil tag-end t 890 . 891) (nil font-lock-face web-mode-html-tag-bracket-face 890 . 891) (nil tag-name "v-toolbar" 881 . 890) (nil tag-type end 881 . 890) (nil font-lock-face web-mode-html-tag-custom-face 881 . 890) (nil tag-name "v-toolbar" 880 . 881) (nil tag-type end 880 . 881) (nil font-lock-face web-mode-html-tag-bracket-face 880 . 881) (nil tag-name "v-toolbar" 879 . 880) (nil tag-type end 879 . 880) (nil tag-beg 22 879 . 880) (nil font-lock-face web-mode-html-tag-bracket-face 879 . 880) (nil tag-name "v-btn" 865 . 866) (nil tag-type end 865 . 866) (nil tag-end t 865 . 866) (nil font-lock-face web-mode-html-tag-bracket-face 865 . 866) (nil tag-name "v-btn" 860 . 865) (nil tag-type end 860 . 865) (nil font-lock-face web-mode-html-tag-custom-face 860 . 865) (nil tag-name "v-btn" 859 . 860) (nil tag-type end 859 . 860) (nil font-lock-face web-mode-html-tag-bracket-face 859 . 860) (nil tag-name "v-btn" 858 . 859) (nil tag-type end 858 . 859) (nil tag-beg 22 858 . 859) (nil font-lock-face web-mode-html-tag-bracket-face 858 . 859) (nil tag-name "v-icon" 842 . 843) (nil tag-type end 842 . 843) (nil tag-end t 842 . 843) (nil font-lock-face web-mode-html-tag-bracket-face 842 . 843) (nil tag-name "v-icon" 836 . 842) (nil tag-type end 836 . 842) (nil font-lock-face web-mode-html-tag-custom-face 836 . 842) (nil tag-name "v-icon" 835 . 836) (nil tag-type end 835 . 836) (nil font-lock-face web-mode-html-tag-bracket-face 835 . 836) (nil tag-name "v-icon" 834 . 835) (nil tag-type end 834 . 835) (nil tag-beg 22 834 . 835) (nil font-lock-face web-mode-html-tag-bracket-face 834 . 835) (nil tag-name "v-icon" 809 . 810) (nil tag-type start 809 . 810) (nil tag-end t 809 . 810) (nil font-lock-face web-mode-html-tag-bracket-face 809 . 810) (nil tag-name "v-icon" 803 . 809) (nil tag-type start 803 . 809) (nil font-lock-face web-mode-html-tag-custom-face 803 . 809) (nil tag-name "v-icon" 802 . 803) (nil tag-type start 802 . 803) (nil tag-beg 18 802 . 803) (nil font-lock-face web-mode-html-tag-bracket-face 802 . 803) (nil tag-name "v-btn" 784 . 785) (nil tag-type start 784 . 785) (nil tag-end t 784 . 785) (nil font-lock-face web-mode-html-tag-bracket-face 784 . 785) (nil block-side t 783 . 784) (nil block-end t 783 . 784) (nil block-token delimiter-end 783 . 784) (nil tag-attr t 783 . 784) (nil tag-attr-end 5 783 . 784) (nil tag-name "v-btn" 783 . 784) (nil tag-type start 783 . 784) (nil font-lock-face web-mode-block-delimiter-face 783 . 784) (nil block-side t 779 . 783) (nil tag-attr t 779 . 783) (nil tag-name "v-btn" 779 . 783) (nil tag-type start 779 . 783) (nil block-side t 778 . 779) (nil tag-attr t 778 . 779) (nil tag-name "v-btn" 778 . 779) (nil tag-type start 778 . 779) (nil face web-mode-variable-name-face 778 . 779) (nil block-side t 777 . 778) (nil tag-attr t 777 . 778) (nil tag-name "v-btn" 777 . 778) (nil tag-type start 777 . 778) (nil face web-mode-variable-name-face 777 . 778) (nil block-side t 776 . 777) (nil tag-attr t 776 . 777) (nil tag-name "v-btn" 776 . 777) (nil tag-type start 776 . 777) (nil face web-mode-variable-name-face 776 . 777) (nil block-side t 775 . 776) (nil tag-attr t 775 . 776) (nil tag-name "v-btn" 775 . 776) (nil tag-type start 775 . 776) (nil face web-mode-variable-name-face 775 . 776) (nil block-side t 774 . 775) (nil tag-attr t 774 . 775) (nil tag-name "v-btn" 774 . 775) (nil tag-type start 774 . 775) (nil face web-mode-variable-name-face 774 . 775) (nil block-side t 773 . 774) (nil tag-attr t 773 . 774) (nil tag-name "v-btn" 773 . 774) (nil tag-type start 773 . 774) (nil face web-mode-variable-name-face 773 . 774) (nil block-side t 772 . 773) (nil tag-attr t 772 . 773) (nil tag-name "v-btn" 772 . 773) (nil tag-type start 772 . 773) (nil face web-mode-variable-name-face 772 . 773) (nil block-side t 771 . 772) (nil tag-attr t 771 . 772) (nil tag-name "v-btn" 771 . 772) (nil tag-type start 771 . 772) (nil face web-mode-variable-name-face 771 . 772) (nil block-side t 770 . 771) (nil tag-attr t 770 . 771) (nil tag-name "v-btn" 770 . 771) (nil tag-type start 770 . 771) (nil face web-mode-variable-name-face 770 . 771) (nil block-side t 769 . 770) (nil tag-attr t 769 . 770) (nil tag-name "v-btn" 769 . 770) (nil tag-type start 769 . 770) (nil face web-mode-variable-name-face 769 . 770) (nil block-side t 768 . 769) (nil tag-attr t 768 . 769) (nil tag-name "v-btn" 768 . 769) (nil tag-type start 768 . 769) (nil face web-mode-variable-name-face 768 . 769) (nil block-side t 767 . 768) (nil tag-attr t 767 . 768) (nil tag-name "v-btn" 767 . 768) (nil tag-type start 767 . 768) (nil face web-mode-variable-name-face 767 . 768) (nil block-side t 766 . 767) (nil tag-attr t 766 . 767) (nil tag-name "v-btn" 766 . 767) (nil tag-type start 766 . 767) (nil face web-mode-variable-name-face 766 . 767) (nil block-side t 765 . 766) (nil tag-attr t 765 . 766) (nil tag-name "v-btn" 765 . 766) (nil tag-type start 765 . 766) (nil face web-mode-variable-name-face 765 . 766) (nil block-side t 764 . 765) (nil tag-attr t 764 . 765) (nil tag-name "v-btn" 764 . 765) (nil tag-type start 764 . 765) (nil face web-mode-variable-name-face 764 . 765) (nil block-side t 763 . 764) (nil tag-attr t 763 . 764) (nil tag-name "v-btn" 763 . 764) (nil tag-type start 763 . 764) (nil block-side t 752 . 763) (nil tag-attr t 752 . 763) (nil tag-name "v-btn" 752 . 763) (nil tag-type start 752 . 763) (nil face web-mode-function-call-face 752 . 763) (nil block-side t 751 . 752) (nil block-token delimiter-beg 751 . 752) (nil tag-attr t 751 . 752) (nil tag-name "v-btn" 751 . 752) (nil tag-type start 751 . 752) (nil font-lock-face web-mode-block-delimiter-face 751 . 752) (nil block-side t 750 . 751) (nil block-token delimiter-beg 750 . 751) (nil tag-attr t 750 . 751) (nil tag-name "v-btn" 750 . 751) (nil tag-type start 750 . 751) (nil font-lock-face web-mode-block-delimiter-face 750 . 751) (nil block-side t 749 . 750) (nil block-token delimiter-beg 749 . 750) (nil tag-attr t 749 . 750) (nil tag-name "v-btn" 749 . 750) (nil tag-type start 749 . 750) (nil font-lock-face web-mode-block-delimiter-face 749 . 750) (nil block-side t 748 . 749) (nil block-token delimiter-beg 748 . 749) (nil tag-attr t 748 . 749) (nil tag-name "v-btn" 748 . 749) (nil tag-type start 748 . 749) (nil font-lock-face web-mode-block-delimiter-face 748 . 749) (nil block-side t 747 . 748) (nil block-token delimiter-beg 747 . 748) (nil tag-attr t 747 . 748) (nil tag-name "v-btn" 747 . 748) (nil tag-type start 747 . 748) (nil font-lock-face web-mode-block-delimiter-face 747 . 748) (nil block-side t 746 . 747) (nil block-token delimiter-beg 746 . 747) (nil tag-attr t 746 . 747) (nil tag-name "v-btn" 746 . 747) (nil tag-type start 746 . 747) (nil font-lock-face web-mode-block-delimiter-face 746 . 747) (nil block-side t 745 . 746) (nil block-token delimiter-beg 745 . 746) (nil tag-attr-beg 0 745 . 746) (nil tag-attr t 745 . 746) (nil tag-name "v-btn" 745 . 746) (nil tag-type start 745 . 746) (nil font-lock-face web-mode-block-delimiter-face 745 . 746) (nil block-beg 0 744 . 745) (nil block-controls 0 744 . 745) (nil block-side t 744 . 745) (nil block-token delimiter-beg 744 . 745) (nil tag-name "v-btn" 744 . 745) (nil tag-type start 744 . 745) (nil font-lock-face web-mode-block-delimiter-face 744 . 745) (nil tag-name "v-btn" 743 . 744) (nil tag-type start 743 . 744) (nil tag-attr t 742 . 743) (nil tag-attr-end 0 742 . 743) (nil tag-name "v-btn" 742 . 743) (nil tag-type start 742 . 743) (nil font-lock-face web-mode-html-attr-name-face 742 . 743) (nil tag-attr t 740 . 742) (nil tag-name "v-btn" 740 . 742) (nil tag-type start 740 . 742) (nil font-lock-face web-mode-html-attr-name-face 740 . 742) (nil tag-attr-beg 0 739 . 740) (nil tag-attr t 739 . 740) (nil tag-name "v-btn" 739 . 740) (nil tag-type start 739 . 740) (nil font-lock-face web-mode-html-attr-name-face 739 . 740) (nil tag-name "v-btn" 738 . 739) (nil tag-type start 738 . 739) (nil tag-name "v-btn" 733 . 738) (nil tag-type start 733 . 738) (nil font-lock-face web-mode-html-tag-custom-face 733 . 738) (nil tag-name "v-btn" 732 . 733) (nil tag-type start 732 . 733) (nil tag-beg 19 732 . 733) (nil font-lock-face web-mode-html-tag-bracket-face 732 . 733) (nil tag-name "v-btn" 716 . 717) (nil tag-type end 716 . 717) (nil tag-end t 716 . 717) (nil font-lock-face web-mode-html-tag-bracket-face 716 . 717) (nil tag-name "v-btn" 711 . 716) (nil tag-type end 711 . 716) (nil font-lock-face web-mode-html-tag-custom-face 711 . 716) (nil tag-name "v-btn" 710 . 711) (nil tag-type end 710 . 711) (nil font-lock-face web-mode-html-tag-bracket-face 710 . 711) (nil tag-name "v-btn" 709 . 710) (nil tag-type end 709 . 710) (nil tag-beg 22 709 . 710) (nil font-lock-face web-mode-html-tag-bracket-face 709 . 710) (nil tag-name "v-icon" 693 . 694) (nil tag-type end 693 . 694) (nil tag-end t 693 . 694) (nil font-lock-face web-mode-html-tag-bracket-face 693 . 694) (nil tag-name "v-icon" 687 . 693) (nil tag-type end 687 . 693) (nil font-lock-face web-mode-html-tag-custom-face 687 . 693) (nil tag-name "v-icon" 686 . 687) (nil tag-type end 686 . 687) (nil font-lock-face web-mode-html-tag-bracket-face 686 . 687) (nil tag-name "v-icon" 685 . 686) (nil tag-type end 685 . 686) (nil tag-beg 22 685 . 686) (nil font-lock-face web-mode-html-tag-bracket-face 685 . 686) (nil tag-name "v-icon" 663 . 664) (nil tag-type start 663 . 664) (nil tag-end t 663 . 664) (nil font-lock-face web-mode-html-tag-bracket-face 663 . 664) (nil tag-name "v-icon" 657 . 663) (nil tag-type start 657 . 663) (nil font-lock-face web-mode-html-tag-custom-face 657 . 663) (nil tag-name "v-icon" 656 . 657) (nil tag-type start 656 . 657) (nil tag-beg 18 656 . 657) (nil font-lock-face web-mode-html-tag-bracket-face 656 . 657) (nil tag-name "v-btn" 638 . 639) (nil tag-type start 638 . 639) (nil tag-end t 638 . 639) (nil font-lock-face web-mode-html-tag-bracket-face 638 . 639) (nil block-side t 637 . 638) (nil block-end t 637 . 638) (nil block-token delimiter-end 637 . 638) (nil tag-attr t 637 . 638) (nil tag-attr-end 5 637 . 638) (nil tag-name "v-btn" 637 . 638) (nil tag-type start 637 . 638) (nil font-lock-face web-mode-block-delimiter-face 637 . 638) (nil block-side t 635 . 637) (nil tag-attr t 635 . 637) (nil tag-name "v-btn" 635 . 637) (nil tag-type start 635 . 637) (nil block-side t 619 . 635) (nil tag-attr t 619 . 635) (nil tag-name "v-btn" 619 . 635) (nil tag-type start 619 . 635) (nil face web-mode-function-call-face 619 . 635) (nil block-side t 618 . 619) (nil block-token delimiter-beg 618 . 619) (nil tag-attr t 618 . 619) (nil tag-name "v-btn" 618 . 619) (nil tag-type start 618 . 619) (nil font-lock-face web-mode-block-delimiter-face 618 . 619) (nil block-side t 617 . 618) (nil block-token delimiter-beg 617 . 618) (nil tag-attr t 617 . 618) (nil tag-name "v-btn" 617 . 618) (nil tag-type start 617 . 618) (nil font-lock-face web-mode-block-delimiter-face 617 . 618) (nil block-side t 616 . 617) (nil block-token delimiter-beg 616 . 617) (nil tag-attr t 616 . 617) (nil tag-name "v-btn" 616 . 617) (nil tag-type start 616 . 617) (nil font-lock-face web-mode-block-delimiter-face 616 . 617) (nil block-side t 615 . 616) (nil block-token delimiter-beg 615 . 616) (nil tag-attr t 615 . 616) (nil tag-name "v-btn" 615 . 616) (nil tag-type start 615 . 616) (nil font-lock-face web-mode-block-delimiter-face 615 . 616) (nil block-side t 614 . 615) (nil block-token delimiter-beg 614 . 615) (nil tag-attr t 614 . 615) (nil tag-name "v-btn" 614 . 615) (nil tag-type start 614 . 615) (nil font-lock-face web-mode-block-delimiter-face 614 . 615) (nil block-side t 613 . 614) (nil block-token delimiter-beg 613 . 614) (nil tag-attr t 613 . 614) (nil tag-name "v-btn" 613 . 614) (nil tag-type start 613 . 614) (nil font-lock-face web-mode-block-delimiter-face 613 . 614) (nil block-side t 612 . 613) (nil block-token delimiter-beg 612 . 613) (nil tag-attr-beg 0 612 . 613) (nil tag-attr t 612 . 613) (nil tag-name "v-btn" 612 . 613) (nil tag-type start 612 . 613) (nil font-lock-face web-mode-block-delimiter-face 612 . 613) (nil block-beg 0 611 . 612) (nil block-controls 0 611 . 612) (nil block-side t 611 . 612) (nil block-token delimiter-beg 611 . 612) (nil tag-name "v-btn" 611 . 612) (nil tag-type start 611 . 612) (nil font-lock-face web-mode-block-delimiter-face 611 . 612) (nil tag-name "v-btn" 610 . 611) (nil tag-type start 610 . 611) (nil tag-attr t 609 . 610) (nil tag-attr-end 0 609 . 610) (nil tag-name "v-btn" 609 . 610) (nil tag-type start 609 . 610) (nil font-lock-face web-mode-html-attr-name-face 609 . 610) (nil tag-attr t 607 . 609) (nil tag-name "v-btn" 607 . 609) (nil tag-type start 607 . 609) (nil font-lock-face web-mode-html-attr-name-face 607 . 609) (nil tag-attr-beg 0 606 . 607) (nil tag-attr t 606 . 607) (nil tag-name "v-btn" 606 . 607) (nil tag-type start 606 . 607) (nil font-lock-face web-mode-html-attr-name-face 606 . 607) (nil tag-name "v-btn" 605 . 606) (nil tag-type start 605 . 606) (nil tag-name "v-btn" 600 . 605) (nil tag-type start 600 . 605) (nil font-lock-face web-mode-html-tag-custom-face 600 . 605) (nil tag-name "v-btn" 599 . 600) (nil tag-type start 599 . 600) (nil tag-beg 19 599 . 600) (nil font-lock-face web-mode-html-tag-bracket-face 599 . 600) (nil tag-name "v-btn" 583 . 584) (nil tag-type end 583 . 584) (nil tag-end t 583 . 584) (nil font-lock-face web-mode-html-tag-bracket-face 583 . 584) (nil tag-name "v-btn" 578 . 583) (nil tag-type end 578 . 583) (nil font-lock-face web-mode-html-tag-custom-face 578 . 583) (nil tag-name "v-btn" 577 . 578) (nil tag-type end 577 . 578) (nil font-lock-face web-mode-html-tag-bracket-face 577 . 578) (nil tag-name "v-btn" 576 . 577) (nil tag-type end 576 . 577) (nil tag-beg 22 576 . 577) (nil font-lock-face web-mode-html-tag-bracket-face 576 . 577) (nil tag-name "v-icon" 560 . 561) (nil tag-type end 560 . 561) (nil tag-end t 560 . 561) (nil font-lock-face web-mode-html-tag-bracket-face 560 . 561) (nil tag-name "v-icon" 554 . 560) (nil tag-type end 554 . 560) (nil font-lock-face web-mode-html-tag-custom-face 554 . 560) (nil tag-name "v-icon" 553 . 554) (nil tag-type end 553 . 554) (nil font-lock-face web-mode-html-tag-bracket-face 553 . 554) (nil tag-name "v-icon" 552 . 553) (nil tag-type end 552 . 553) (nil tag-beg 22 552 . 553) (nil font-lock-face web-mode-html-tag-bracket-face 552 . 553) (nil tag-name "v-icon" 536 . 537) (nil tag-type start 536 . 537) (nil tag-end t 536 . 537) (nil font-lock-face web-mode-html-tag-bracket-face 536 . 537) (nil tag-name "v-icon" 530 . 536) (nil tag-type start 530 . 536) (nil font-lock-face web-mode-html-tag-custom-face 530 . 536) (nil tag-name "v-icon" 529 . 530) (nil tag-type start 529 . 530) (nil tag-beg 18 529 . 530) (nil font-lock-face web-mode-html-tag-bracket-face 529 . 530) (nil tag-name "v-btn" 511 . 512) (nil tag-type start 511 . 512) (nil tag-end t 511 . 512) (nil font-lock-face web-mode-html-tag-bracket-face 511 . 512) (nil block-side t 510 . 511) (nil block-end t 510 . 511) (nil block-token delimiter-end 510 . 511) (nil tag-attr t 510 . 511) (nil tag-attr-end 5 510 . 511) (nil tag-name "v-btn" 510 . 511) (nil tag-type start 510 . 511) (nil font-lock-face web-mode-block-delimiter-face 510 . 511) (nil block-side t 509 . 510) (nil tag-attr t 509 . 510) (nil tag-name "v-btn" 509 . 510) (nil tag-type start 509 . 510) (nil face web-mode-variable-name-face 509 . 510) (nil block-side t 508 . 509) (nil tag-attr t 508 . 509) (nil tag-name "v-btn" 508 . 509) (nil tag-type start 508 . 509) (nil face web-mode-variable-name-face 508 . 509) (nil block-side t 507 . 508) (nil tag-attr t 507 . 508) (nil tag-name "v-btn" 507 . 508) (nil tag-type start 507 . 508) (nil face web-mode-variable-name-face 507 . 508) (nil block-side t 506 . 507) (nil tag-attr t 506 . 507) (nil tag-name "v-btn" 506 . 507) (nil tag-type start 506 . 507) (nil face web-mode-variable-name-face 506 . 507) (nil block-side t 505 . 506) (nil tag-attr t 505 . 506) (nil tag-name "v-btn" 505 . 506) (nil tag-type start 505 . 506) (nil block-side t 504 . 505) (nil tag-attr t 504 . 505) (nil tag-name "v-btn" 504 . 505) (nil tag-type start 504 . 505) (nil face web-mode-variable-name-face 504 . 505) (nil block-side t 503 . 504) (nil tag-attr t 503 . 504) (nil tag-name "v-btn" 503 . 504) (nil tag-type start 503 . 504) (nil face web-mode-variable-name-face 503 . 504) (nil block-side t 502 . 503) (nil tag-attr t 502 . 503) (nil tag-name "v-btn" 502 . 503) (nil tag-type start 502 . 503) (nil face web-mode-variable-name-face 502 . 503) (nil block-side t 501 . 502) (nil tag-attr t 501 . 502) (nil tag-name "v-btn" 501 . 502) (nil tag-type start 501 . 502) (nil face web-mode-variable-name-face 501 . 502) (nil block-side t 500 . 501) (nil tag-attr t 500 . 501) (nil tag-name "v-btn" 500 . 501) (nil tag-type start 500 . 501) (nil face web-mode-variable-name-face 500 . 501) (nil block-side t 499 . 500) (nil tag-attr t 499 . 500) (nil tag-name "v-btn" 499 . 500) (nil tag-type start 499 . 500) (nil face web-mode-variable-name-face 499 . 500) (nil block-side t 498 . 499) (nil tag-attr t 498 . 499) (nil tag-name "v-btn" 498 . 499) (nil tag-type start 498 . 499) (nil face web-mode-variable-name-face 498 . 499) (nil block-side t 497 . 498) (nil tag-attr t 497 . 498) (nil tag-name "v-btn" 497 . 498) (nil tag-type start 497 . 498) (nil face web-mode-variable-name-face 497 . 498) (nil block-side t 496 . 497) (nil tag-attr t 496 . 497) (nil tag-name "v-btn" 496 . 497) (nil tag-type start 496 . 497) (nil face web-mode-variable-name-face 496 . 497) (nil block-side t 495 . 496) (nil tag-attr t 495 . 496) (nil tag-name "v-btn" 495 . 496) (nil tag-type start 495 . 496) (nil face web-mode-variable-name-face 495 . 496) (nil block-side t 494 . 495) (nil tag-attr t 494 . 495) (nil tag-name "v-btn" 494 . 495) (nil tag-type start 494 . 495) (nil face web-mode-variable-name-face 494 . 495) (nil block-side t 493 . 494) (nil tag-attr t 493 . 494) (nil tag-name "v-btn" 493 . 494) (nil tag-type start 493 . 494) (nil face web-mode-variable-name-face 493 . 494) (nil block-side t 492 . 493) (nil tag-attr t 492 . 493) (nil tag-name "v-btn" 492 . 493) (nil tag-type start 492 . 493) (nil face web-mode-variable-name-face 492 . 493) (nil block-side t 491 . 492) (nil tag-attr t 491 . 492) (nil tag-name "v-btn" 491 . 492) (nil tag-type start 491 . 492) (nil face web-mode-variable-name-face 491 . 492) (nil block-side t 490 . 491) (nil tag-attr t 490 . 491) (nil tag-name "v-btn" 490 . 491) (nil tag-type start 490 . 491) (nil face web-mode-variable-name-face 490 . 491) (nil block-side t 489 . 490) (nil tag-attr t 489 . 490) (nil tag-name "v-btn" 489 . 490) (nil tag-type start 489 . 490) (nil face web-mode-variable-name-face 489 . 490) (nil block-side t 488 . 489) (nil tag-attr t 488 . 489) (nil tag-name "v-btn" 488 . 489) (nil tag-type start 488 . 489) (nil face web-mode-variable-name-face 488 . 489) (nil block-side t 487 . 488) (nil block-token delimiter-beg 487 . 488) (nil tag-attr t 487 . 488) (nil tag-name "v-btn" 487 . 488) (nil tag-type start 487 . 488) (nil font-lock-face web-mode-block-delimiter-face 487 . 488) (nil block-side t 486 . 487) (nil block-token delimiter-beg 486 . 487) (nil tag-attr t 486 . 487) (nil tag-name "v-btn" 486 . 487) (nil tag-type start 486 . 487) (nil font-lock-face web-mode-block-delimiter-face 486 . 487) (nil block-side t 485 . 486) (nil block-token delimiter-beg 485 . 486) (nil tag-attr t 485 . 486) (nil tag-name "v-btn" 485 . 486) (nil tag-type start 485 . 486) (nil font-lock-face web-mode-block-delimiter-face 485 . 486) (nil block-side t 484 . 485) (nil block-token delimiter-beg 484 . 485) (nil tag-attr t 484 . 485) (nil tag-name "v-btn" 484 . 485) (nil tag-type start 484 . 485) (nil font-lock-face web-mode-block-delimiter-face 484 . 485) (nil block-side t 483 . 484) (nil block-token delimiter-beg 483 . 484) (nil tag-attr t 483 . 484) (nil tag-name "v-btn" 483 . 484) (nil tag-type start 483 . 484) (nil font-lock-face web-mode-block-delimiter-face 483 . 484) (nil block-side t 482 . 483) (nil block-token delimiter-beg 482 . 483) (nil tag-attr t 482 . 483) (nil tag-name "v-btn" 482 . 483) (nil tag-type start 482 . 483) (nil font-lock-face web-mode-block-delimiter-face 482 . 483) (nil block-side t 481 . 482) (nil block-token delimiter-beg 481 . 482) (nil tag-attr-beg 0 481 . 482) (nil tag-attr t 481 . 482) (nil tag-name "v-btn" 481 . 482) (nil tag-type start 481 . 482) (nil font-lock-face web-mode-block-delimiter-face 481 . 482) (nil block-beg 0 480 . 481) (nil block-controls 0 480 . 481) (nil block-side t 480 . 481) (nil block-token delimiter-beg 480 . 481) (nil tag-name "v-btn" 480 . 481) (nil tag-type start 480 . 481) (nil font-lock-face web-mode-block-delimiter-face 480 . 481) (nil tag-name "v-btn" 479 . 480) (nil tag-type start 479 . 480) (nil tag-attr t 478 . 479) (nil tag-attr-end 0 478 . 479) (nil tag-name "v-btn" 478 . 479) (nil tag-type start 478 . 479) (nil font-lock-face web-mode-html-attr-name-face 478 . 479) (nil tag-attr t 476 . 478) (nil tag-name "v-btn" 476 . 478) (nil tag-type start 476 . 478) (nil font-lock-face web-mode-html-attr-name-face 476 . 478) (nil tag-attr-beg 0 475 . 476) (nil tag-attr t 475 . 476) (nil tag-name "v-btn" 475 . 476) (nil tag-type start 475 . 476) (nil font-lock-face web-mode-html-attr-name-face 475 . 476) (nil tag-name "v-btn" 474 . 475) (nil tag-type start 474 . 475) (nil tag-name "v-btn" 469 . 474) (nil tag-type start 469 . 474) (nil font-lock-face web-mode-html-tag-custom-face 469 . 474) (nil tag-name "v-btn" 468 . 469) (nil tag-type start 468 . 469) (nil tag-beg 19 468 . 469) (nil font-lock-face web-mode-html-tag-bracket-face 468 . 469) (nil tag-name "v-spacer" 452 . 453) (nil tag-type end 452 . 453) (nil tag-end t 452 . 453) (nil font-lock-face web-mode-html-tag-bracket-face 452 . 453) (nil tag-name "v-spacer" 444 . 452) (nil tag-type end 444 . 452) (nil font-lock-face web-mode-html-tag-custom-face 444 . 452) (nil tag-name "v-spacer" 443 . 444) (nil tag-type end 443 . 444) (nil font-lock-face web-mode-html-tag-bracket-face 443 . 444) (nil tag-name "v-spacer" 442 . 443) (nil tag-type end 442 . 443) (nil tag-beg 22 442 . 443) (nil font-lock-face web-mode-html-tag-bracket-face 442 . 443) (nil tag-name "v-spacer" 441 . 442) (nil tag-type start 441 . 442) (nil tag-end t 441 . 442) (nil font-lock-face web-mode-html-tag-bracket-face 441 . 442) (nil tag-name "v-spacer" 433 . 441) (nil tag-type start 433 . 441) (nil font-lock-face web-mode-html-tag-custom-face 433 . 441) (nil tag-name "v-spacer" 432 . 433) (nil tag-type start 432 . 433) (nil tag-beg 18 432 . 433) (nil font-lock-face web-mode-html-tag-bracket-face 432 . 433) (nil tag-name "v-toolbar-title" 416 . 417) (nil tag-type end 416 . 417) (nil tag-end t 416 . 417) (nil font-lock-face web-mode-html-tag-bracket-face 416 . 417) (nil tag-name "v-toolbar-title" 401 . 416) (nil tag-type end 401 . 416) (nil font-lock-face web-mode-html-tag-custom-face 401 . 416) (nil tag-name "v-toolbar-title" 400 . 401) (nil tag-type end 400 . 401) (nil font-lock-face web-mode-html-tag-bracket-face 400 . 401) (nil tag-name "v-toolbar-title" 399 . 400) (nil tag-type end 399 . 400) (nil tag-beg 22 399 . 400) (nil font-lock-face web-mode-html-tag-bracket-face 399 . 400) (nil block-side t 398 . 399) (nil block-end t 398 . 399) (nil block-token delimiter-end 398 . 399) (nil font-lock-face web-mode-block-delimiter-face 398 . 399) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 398 . 399) (nil block-side t 397 . 398) (nil block-token delimiter-end 397 . 398) (nil font-lock-face web-mode-block-delimiter-face 397 . 398) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 397 . 398) (nil block-side t 396 . 397) (nil face (rainbow-delimiters-depth-3-face) 396 . 397) (nil block-side t 395 . 396) (nil block-side t 394 . 395) (nil face (rainbow-delimiters-depth-3-face) 394 . 395) (nil block-side t 393 . 394) (nil face web-mode-variable-name-face 393 . 394) (nil block-side t 392 . 393) (nil face web-mode-variable-name-face 392 . 393) (nil block-side t 391 . 392) (nil face web-mode-variable-name-face 391 . 392) (nil block-side t 390 . 391) (nil face web-mode-variable-name-face 390 . 391) (nil block-side t 389 . 390) (nil face web-mode-variable-name-face 389 . 390) (nil block-side t 388 . 389) (nil face web-mode-variable-name-face 388 . 389) (nil block-side t 387 . 388) (nil face web-mode-variable-name-face 387 . 388) (nil block-side t 386 . 387) (nil face web-mode-variable-name-face 386 . 387) (nil block-side t 385 . 386) (nil face web-mode-variable-name-face 385 . 386) (nil block-side t 384 . 385) (nil face web-mode-variable-name-face 384 . 385) (nil block-side t 383 . 384) (nil face web-mode-variable-name-face 383 . 384) (nil block-side t 382 . 383) (nil face web-mode-variable-name-face 382 . 383) (nil block-side t 381 . 382) (nil face web-mode-variable-name-face 381 . 382) (nil block-side t 380 . 381) (nil face web-mode-variable-name-face 380 . 381) (nil block-side t 379 . 380) (nil face web-mode-variable-name-face 379 . 380) (nil block-side t 378 . 379) (nil block-token delimiter-beg 378 . 379) (nil font-lock-face web-mode-block-delimiter-face 378 . 379) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 378 . 379) (nil block-beg 0 377 . 378) (nil block-controls 0 377 . 378) (nil block-side t 377 . 378) (nil block-token delimiter-beg 377 . 378) (nil font-lock-face web-mode-block-delimiter-face 377 . 378) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 377 . 378) (nil tag-name "v-toolbar-title" 376 . 377) (nil tag-type start 376 . 377) (nil tag-end t 376 . 377) (nil font-lock-face web-mode-html-tag-bracket-face 376 . 377) (nil tag-name "v-toolbar-title" 361 . 376) (nil tag-type start 361 . 376) (nil font-lock-face web-mode-html-tag-custom-face 361 . 376) (nil tag-name "v-toolbar-title" 360 . 361) (nil tag-type start 360 . 361) (nil tag-beg 18 360 . 361) (nil font-lock-face web-mode-html-tag-bracket-face 360 . 361) (nil tag-name "v-icon" 344 . 345) (nil tag-type end 344 . 345) (nil tag-end t 344 . 345) (nil font-lock-face web-mode-html-tag-bracket-face 344 . 345) (nil tag-name "v-icon" 338 . 344) (nil tag-type end 338 . 344) (nil font-lock-face web-mode-html-tag-custom-face 338 . 344) (nil tag-name "v-icon" 337 . 338) (nil tag-type end 337 . 338) (nil font-lock-face web-mode-html-tag-bracket-face 337 . 338) (nil tag-name "v-icon" 336 . 337) (nil tag-type end 336 . 337) (nil tag-beg 22 336 . 337) (nil font-lock-face web-mode-html-tag-bracket-face 336 . 337) (nil tag-name "v-icon" 323 . 324) (nil tag-type start 323 . 324) (nil tag-end t 323 . 324) (nil font-lock-face web-mode-html-tag-bracket-face 323 . 324) (nil tag-attr t 322 . 323) (nil tag-attr-end 0 322 . 323) (nil tag-name "v-icon" 322 . 323) (nil tag-type start 322 . 323) (nil font-lock-face web-mode-html-attr-name-face 322 . 323) (nil tag-attr t 320 . 322) (nil tag-name "v-icon" 320 . 322) (nil tag-type start 320 . 322) (nil font-lock-face web-mode-html-attr-name-face 320 . 322) (nil tag-attr-beg 0 319 . 320) (nil tag-attr t 319 . 320) (nil tag-name "v-icon" 319 . 320) (nil tag-type start 319 . 320) (nil font-lock-face web-mode-html-attr-name-face 319 . 320) (nil tag-name "v-icon" 318 . 319) (nil tag-type start 318 . 319) (nil tag-name "v-icon" 312 . 318) (nil tag-type start 312 . 318) (nil font-lock-face web-mode-html-tag-custom-face 312 . 318) (nil tag-name "v-icon" 311 . 312) (nil tag-type start 311 . 312) (nil tag-beg 19 311 . 312) (nil font-lock-face web-mode-html-tag-bracket-face 311 . 312) (nil tag-name "v-toolbar" 295 . 296) (nil tag-type start 295 . 296) (nil tag-end t 295 . 296) (nil font-lock-face web-mode-html-tag-bracket-face 295 . 296) (nil tag-attr t 294 . 295) (nil tag-attr-end 0 294 . 295) (nil tag-name "v-toolbar" 294 . 295) (nil tag-type start 294 . 295) (nil font-lock-face web-mode-html-attr-name-face 294 . 295) (nil tag-attr t 291 . 294) (nil tag-name "v-toolbar" 291 . 294) (nil tag-type start 291 . 294) (nil font-lock-face web-mode-html-attr-name-face 291 . 294) (nil tag-attr-beg 0 290 . 291) (nil tag-attr t 290 . 291) (nil tag-name "v-toolbar" 290 . 291) (nil tag-type start 290 . 291) (nil font-lock-face web-mode-html-attr-name-face 290 . 291) (nil tag-name "v-toolbar" 289 . 290) (nil tag-type start 289 . 290) (nil tag-attr t 288 . 289) (nil tag-attr-end 5 288 . 289) (nil tag-name "v-toolbar" 288 . 289) (nil tag-type start 288 . 289) (nil font-lock-face web-mode-html-attr-value-face 288 . 289) (nil tag-attr t 278 . 288) (nil tag-name "v-toolbar" 278 . 288) (nil tag-type start 278 . 288) (nil font-lock-face web-mode-html-attr-value-face 278 . 288) (nil tag-attr t 277 . 278) (nil tag-name "v-toolbar" 277 . 278) (nil tag-type start 277 . 278) (nil font-lock-face web-mode-html-attr-equal-face 277 . 278) (nil tag-attr t 273 . 277) (nil tag-name "v-toolbar" 273 . 277) (nil tag-type start 273 . 277) (nil font-lock-face web-mode-html-attr-name-face 273 . 277) (nil tag-attr-beg 0 272 . 273) (nil tag-attr t 272 . 273) (nil tag-name "v-toolbar" 272 . 273) (nil tag-type start 272 . 273) (nil font-lock-face web-mode-html-attr-name-face 272 . 273) (nil tag-name "v-toolbar" 271 . 272) (nil tag-type start 271 . 272) (nil tag-attr t 270 . 271) (nil tag-attr-end 0 270 . 271) (nil tag-name "v-toolbar" 270 . 271) (nil tag-type start 270 . 271) (nil font-lock-face web-mode-html-attr-name-face 270 . 271) (nil tag-attr t 268 . 270) (nil tag-name "v-toolbar" 268 . 270) (nil tag-type start 268 . 270) (nil font-lock-face web-mode-html-attr-name-face 268 . 270) (nil tag-attr-beg 0 267 . 268) (nil tag-attr t 267 . 268) (nil tag-name "v-toolbar" 267 . 268) (nil tag-type start 267 . 268) (nil font-lock-face web-mode-html-attr-name-face 267 . 268) (nil tag-name "v-toolbar" 266 . 267) (nil tag-type start 266 . 267) (nil tag-attr t 265 . 266) (nil tag-attr-end 0 265 . 266) (nil tag-name "v-toolbar" 265 . 266) (nil tag-type start 265 . 266) (nil font-lock-face web-mode-html-attr-name-face 265 . 266) (nil tag-attr t 259 . 265) (nil tag-name "v-toolbar" 259 . 265) (nil tag-type start 259 . 265) (nil font-lock-face web-mode-html-attr-name-face 259 . 265) (nil tag-attr-beg 0 258 . 259) (nil tag-attr t 258 . 259) (nil tag-name "v-toolbar" 258 . 259) (nil tag-type start 258 . 259) (nil font-lock-face web-mode-html-attr-name-face 258 . 259) (nil tag-name "v-toolbar" 257 . 258) (nil tag-type start 257 . 258) (nil tag-name "v-toolbar" 248 . 257) (nil tag-type start 248 . 257) (nil font-lock-face web-mode-html-tag-custom-face 248 . 257) (nil tag-name "v-toolbar" 247 . 248) (nil tag-type start 247 . 248) (nil tag-beg 19 247 . 248) (nil font-lock-face web-mode-html-tag-bracket-face 247 . 248) (nil tag-name "v-col" 233 . 234) (nil tag-type start 233 . 234) (nil tag-end t 233 . 234) (nil font-lock-face web-mode-html-tag-bracket-face 233 . 234) (nil tag-attr t 232 . 233) (nil tag-attr-end 5 232 . 233) (nil tag-name "v-col" 232 . 233) (nil tag-type start 232 . 233) (nil font-lock-face web-mode-html-attr-value-face 232 . 233) (nil tag-attr t 222 . 232) (nil tag-name "v-col" 222 . 232) (nil tag-type start 222 . 232) (nil font-lock-face web-mode-html-attr-value-face 222 . 232) (nil tag-attr t 221 . 222) (nil tag-name "v-col" 221 . 222) (nil tag-type start 221 . 222) (nil font-lock-face web-mode-html-attr-equal-face 221 . 222) (nil tag-attr t 217 . 221) (nil tag-name "v-col" 217 . 221) (nil tag-type start 217 . 221) (nil font-lock-face web-mode-html-attr-name-face 217 . 221) (nil tag-attr-beg 0 216 . 217) (nil tag-attr t 216 . 217) (nil tag-name "v-col" 216 . 217) (nil tag-type start 216 . 217) (nil font-lock-face web-mode-html-attr-name-face 216 . 217) (nil tag-name "v-col" 215 . 216) (nil tag-type start 215 . 216) (nil tag-name "v-col" 210 . 215) (nil tag-type start 210 . 215) (nil font-lock-face web-mode-html-tag-custom-face 210 . 215) (nil tag-name "v-col" 209 . 210) (nil tag-type start 209 . 210) (nil tag-beg 19 209 . 210) (nil font-lock-face web-mode-html-tag-bracket-face 209 . 210) (nil tag-name "v-row" 197 . 198) (nil tag-type start 197 . 198) (nil tag-end t 197 . 198) (nil font-lock-face web-mode-html-tag-bracket-face 197 . 198) (nil tag-attr t 196 . 197) (nil tag-attr-end 5 196 . 197) (nil tag-name "v-row" 196 . 197) (nil tag-type start 196 . 197) (nil font-lock-face web-mode-html-attr-value-face 196 . 197) (nil tag-attr t 186 . 196) (nil tag-name "v-row" 186 . 196) (nil tag-type start 186 . 196) (nil font-lock-face web-mode-html-attr-value-face 186 . 196) (nil tag-attr t 185 . 186) (nil tag-name "v-row" 185 . 186) (nil tag-type start 185 . 186) (nil font-lock-face web-mode-html-attr-equal-face 185 . 186) (nil tag-attr t 181 . 185) (nil tag-name "v-row" 181 . 185) (nil tag-type start 181 . 185) (nil font-lock-face web-mode-html-attr-name-face 181 . 185) (nil tag-attr-beg 0 180 . 181) (nil tag-attr t 180 . 181) (nil tag-name "v-row" 180 . 181) (nil tag-type start 180 . 181) (nil font-lock-face web-mode-html-attr-name-face 180 . 181) (nil tag-name "v-row" 179 . 180) (nil tag-type start 179 . 180) (nil tag-name "v-row" 174 . 179) (nil tag-type start 174 . 179) (nil font-lock-face web-mode-html-tag-custom-face 174 . 179) (nil tag-name "v-row" 173 . 174) (nil tag-type start 173 . 174) (nil tag-beg 19 173 . 174) (nil font-lock-face web-mode-html-tag-bracket-face 173 . 174) (nil tag-name "v-col" 163 . 164) (nil tag-type start 163 . 164) (nil tag-end t 163 . 164) (nil font-lock-face web-mode-html-tag-bracket-face 163 . 164) (nil tag-attr t 162 . 163) (nil tag-attr-end 5 162 . 163) (nil tag-name "v-col" 162 . 163) (nil tag-type start 162 . 163) (nil font-lock-face web-mode-html-attr-value-face 162 . 163) (nil tag-attr t 143 . 162) (nil tag-name "v-col" 143 . 162) (nil tag-type start 143 . 162) (nil font-lock-face web-mode-html-attr-value-face 143 . 162) (nil tag-attr t 142 . 143) (nil tag-name "v-col" 142 . 143) (nil tag-type start 142 . 143) (nil font-lock-face web-mode-html-attr-equal-face 142 . 143) (nil tag-attr t 138 . 142) (nil tag-name "v-col" 138 . 142) (nil tag-type start 138 . 142) (nil font-lock-face web-mode-html-attr-name-face 138 . 142) (nil tag-attr-beg 0 137 . 138) (nil tag-attr t 137 . 138) (nil tag-name "v-col" 137 . 138) (nil tag-type start 137 . 138) (nil font-lock-face web-mode-html-attr-name-face 137 . 138) (nil tag-name "v-col" 136 . 137) (nil tag-type start 136 . 137) (nil tag-attr t 135 . 136) (nil tag-attr-end 4 135 . 136) (nil tag-name "v-col" 135 . 136) (nil tag-type start 135 . 136) (nil font-lock-face web-mode-html-attr-value-face 135 . 136) (nil tag-attr t 133 . 135) (nil tag-name "v-col" 133 . 135) (nil tag-type start 133 . 135) (nil font-lock-face web-mode-html-attr-value-face 133 . 135) (nil tag-attr t 132 . 133) (nil tag-name "v-col" 132 . 133) (nil tag-type start 132 . 133) (nil font-lock-face web-mode-html-attr-equal-face 132 . 133) (nil tag-attr t 129 . 132) (nil tag-name "v-col" 129 . 132) (nil tag-type start 129 . 132) (nil font-lock-face web-mode-html-attr-name-face 129 . 132) (nil tag-attr-beg 0 128 . 129) (nil tag-attr t 128 . 129) (nil tag-name "v-col" 128 . 129) (nil tag-type start 128 . 129) (nil font-lock-face web-mode-html-attr-name-face 128 . 129) (nil tag-name "v-col" 127 . 128) (nil tag-type start 127 . 128) (nil tag-attr t 126 . 127) (nil tag-attr-end 0 126 . 127) (nil tag-name "v-col" 126 . 127) (nil tag-type start 126 . 127) (nil font-lock-face web-mode-html-attr-engine-face 126 . 127) (nil tag-attr t 122 . 126) (nil tag-name "v-col" 122 . 126) (nil tag-type start 122 . 126) (nil font-lock-face web-mode-html-attr-engine-face 122 . 126) (nil tag-attr-beg 2 121 . 122) (nil tag-attr t 121 . 122) (nil tag-name "v-col" 121 . 122) (nil tag-type start 121 . 122) (nil font-lock-face web-mode-html-attr-engine-face 121 . 122) (nil tag-name "v-col" 120 . 121) (nil tag-type start 120 . 121) (nil tag-name "v-col" 115 . 120) (nil tag-type start 115 . 120) (nil font-lock-face web-mode-html-tag-custom-face 115 . 120) (nil tag-name "v-col" 114 . 115) (nil tag-type start 114 . 115) (nil tag-beg 19 114 . 115) (nil font-lock-face web-mode-html-tag-bracket-face 114 . 115) (110 . 3002)) nil (25829 57101 553572 176000) 0 nil])
([nil nil ((3015 . 3020)) nil (25829 57101 553049 585000) 0 nil])
([nil nil ((56 . 61)) nil (25829 57101 553048 606000) 0 nil])
([nil nil ((#("v-else" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 2) 1 5 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-col" tag-attr-end 0 tag-attr t)) . 126) (undo-tree-id13 . -6) (undo-tree-id14 . -6)) nil (25829 57101 553047 293000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -125) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 126) nil (25829 57101 553043 363000) 0 nil])
([nil nil (("    " . -115) 162) nil (25829 57101 553038 679000) 0 nil])
([nil nil (("
" . 2917) (undo-tree-id10 . -1)) nil (25829 57101 553036 394000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing)) . -3005) (#("    " 0 4 (face whitespace-trailing)) . -57) 2917) nil (25829 57101 552994 339000) 0 nil])
([nil nil ((#("cols=\"9\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 5 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 4 tag-attr t)) . 118) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (t 25829 57101 733215 857000)) nil (25829 57116 102856 157000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -117) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 118) nil (25829 57116 102774 959000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-container" tag-attr t)) . -928) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 929 (t 25829 57116 213142 917000)) nil (25829 57139 559329 736000) 0 nil])
([nil nil ((928 . 929)) nil (25829 57139 559313 519000) 0 nil])
([nil nil ((#("
              :disabled=\"tree_edit\"" 0 15 (tag-type start tag-name "v-text-field") 15 16 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 17 18 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 18 19 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 20 21 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 23 24 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 35 36 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr-end 9 tag-attr t block-token delimiter-end block-end t block-side t)) . 3410) (undo-tree-id152 . -1) (undo-tree-id153 . -36) (undo-tree-id154 . -36) (t 25829 57139 669033 638000)) nil (25829 57197 621076 525000) 0 nil])
([nil nil ((#("
                :disabled=\"tree_edit\"" 0 17 (tag-type start tag-name "v-treeview") 17 18 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 18 19 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 20 21 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 23 24 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 26 27 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 27 28 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr t block-token delimiter-beg block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 35 36 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 36 37 (face web-mode-variable-name-face tag-type start tag-name "v-treeview" tag-attr t block-side t) 37 38 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-treeview" tag-attr-end 9 tag-attr t block-token delimiter-end block-end t block-side t)) . 4027) (undo-tree-id148 . -1) (undo-tree-id149 . -38) (undo-tree-id150 . -38) (undo-tree-id151 . -38)) nil (25829 57197 621071 514000) 0 nil])
([nil nil ((#("
                          :disabled=\"tree_edit\"" 0 27 (tag-type start tag-name "v-btn") 27 28 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 28 29 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 29 30 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 30 31 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 31 32 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 32 33 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 33 34 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 35 36 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 36 37 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 37 38 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 38 39 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 39 40 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 40 41 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 41 42 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 42 43 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 43 44 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 44 45 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 45 46 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 46 47 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 47 48 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 9 tag-attr t block-token delimiter-end block-end t block-side t)) . 6132) (undo-tree-id143 . -1) (undo-tree-id144 . -48) (undo-tree-id145 . -48) (undo-tree-id146 . -48) (undo-tree-id147 . -48)) nil (25829 57197 621065 551000) 0 nil])
([nil nil ((#("
                          :disabled=\"tree_edit\"" 0 27 (tag-type start tag-name "v-btn") 27 28 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 28 29 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 29 30 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 30 31 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 31 32 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 32 33 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 33 34 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 34 35 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 35 36 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 36 37 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 37 38 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr t block-token delimiter-beg block-side t) 38 39 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 39 40 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 40 41 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 41 42 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 42 43 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 43 44 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 44 45 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 45 46 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 46 47 (face web-mode-variable-name-face tag-type start tag-name "v-btn" tag-attr t block-side t) 47 48 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-btn" tag-attr-end 9 tag-attr t block-token delimiter-end block-end t block-side t)) . 6927) (undo-tree-id140 . -1) (undo-tree-id141 . -48) (undo-tree-id142 . -48)) nil (25829 57197 621056 913000) 0 nil])
([nil nil ((#("
              :disabled=\"tree_edit\"" 0 15 (tag-type start tag-name "v-text-field") 15 16 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" block-token delimiter-beg block-side t block-controls 0 block-beg 0) 16 17 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t tag-attr-beg 0 block-token delimiter-beg block-side t) 17 18 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 18 19 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 19 20 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 20 21 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 21 22 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 23 24 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 24 25 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 25 26 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr t block-token delimiter-beg block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 32 33 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "v-text-field" tag-attr t block-side t) 35 36 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "v-text-field" tag-attr-end 8 tag-attr t block-token delimiter-end block-end t block-side t)) . 9230) (undo-tree-id137 . -1) (undo-tree-id138 . -36) (undo-tree-id139 . -36)) nil (25829 57197 621048 311000) 0 nil])
([nil nil ((358 . 363) (t 25829 57197 740807 518000)) nil (25829 57567 387862 693000) 0 nil])
([nil nil (("D" . -359) (undo-tree-id156 . -1) ("I" . -360) (undo-tree-id157 . -1) ("T" . -361) (undo-tree-id158 . -1) (" " . -362) (undo-tree-id159 . -1) 363) nil (25829 57567 387860 547000) 0 nil])
([nil nil ((359 . 364)) nil (25829 57567 387853 405000) 0 nil])
([nil nil (("t" . -363) (undo-tree-id155 . -1) 364) nil (25829 57567 387850 835000) 0 nil])
([nil nil ((363 . 374)) nil (25829 57567 387835 788000) 0 nil])
([nil nil (("Edit Treeview - " . 358) (undo-tree-id165 . -16) (undo-tree-id166 . -16) (t 25829 57567 500491 308000)) nil (25829 57586 736847 828000) 0 nil])
([nil nil ((380 . 381)) nil (25829 57586 736844 538000) 0 nil])
([nil nil ((381 . 397)) nil (25829 57586 736843 522000) 0 nil])
([nil nil ((" " . -394) (undo-tree-id162 . -1) ("-" . -395) (undo-tree-id163 . -1) (" " . -396) (undo-tree-id164 . -1) 397) nil (25829 57586 736841 869000) 0 nil])
([nil nil ((394 . 396)) nil (25829 57586 736836 615000) 0 nil])
([nil nil (("=" . -395) (undo-tree-id161 . -1) 396) nil (25829 57586 736835 211000) 0 nil])
([nil nil ((381 . 383) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face))) . -381) (381 . 382)) nil (25829 57586 736831 187000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face))) . 382) (undo-tree-id160 . -1)) nil (25829 57586 736825 366000) 0 nil])
([nil nil ((#("(Edit Treeview)" 0 1 (face (rainbow-delimiters-depth-1-face)) 14 15 (face (rainbow-delimiters-depth-1-face))) . 381) (undo-tree-id197 . -15) (undo-tree-id198 . -15) (t 25829 57586 844514 666000)) nil (25829 57602 349638 153000) 0 nil])
([nil nil ((" " . -380) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 381) nil (25829 57602 349628 769000) 0 nil])
([nil nil ((15838 . 15843) (t 25829 57602 456535 717000)) nil (25829 57779 231770 215000) 0 nil])
([nil nil ((#("check_edit_right(item.id)" 0 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 15858) (undo-tree-id282 . -25) (undo-tree-id283 . -25) (t 25829 57779 340893 627000)) nil (25829 57995 64872 564000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15854) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("&" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15855) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("&" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15856) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15857) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 15858) nil (25829 57995 64867 858000) 0 nil])
([nil nil ((15992 . 16019)) nil (25829 57995 64856 476000) 0 nil])
([nil nil ((16019 . 16030)) nil (25829 57995 64855 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16053 . 16054) (nil tag-attr t 16029 . 16054) (nil tag-name "v-btn" 16029 . 16054) (nil tag-type start 16029 . 16054) (nil font-lock-face web-mode-html-attr-value-face 16029 . 16054) (16029 . 16054)) nil (25829 57995 64853 945000) 0 nil])
([nil nil ((16019 . 16020)) nil (25829 57995 64851 515000) 0 nil])
([nil nil ((35416 . 35425)) nil (25829 57995 64850 414000) 0 nil])
([nil nil ((35425 . 35428)) nil (25829 57995 64849 100000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -35425) (undo-tree-id271 . -1) (#("e" 0 1 (part-side javascript)) . -35426) (undo-tree-id272 . -1) (#("s" 0 1 (part-side javascript)) . -35427) (undo-tree-id273 . -1) 35428) nil (25829 57995 64847 529000) 0 nil])
([nil nil ((35425 . 35429)) nil (25829 57995 64842 716000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -35416) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#(" " 0 1 (part-side javascript)) . -35417) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#(" " 0 1 (part-side javascript)) . -35418) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#(" " 0 1 (part-side javascript)) . -35419) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (part-side javascript)) . -35420) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#(" " 0 1 (part-side javascript)) . -35421) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#(" " 0 1 (part-side javascript)) . -35422) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#(" " 0 1 (part-side javascript)) . -35423) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#(" " 0 1 (part-side javascript)) . -35424) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("e" 0 1 (part-side javascript)) . -35425) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("l" 0 1 (part-side javascript)) . -35426) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("s" 0 1 (part-side javascript)) . -35427) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("e" 0 1 (face web-mode-keyword-face part-side javascript)) . -35428) (undo-tree-id270 . -1) 35429) nil (25829 57995 64837 982000) 0 nil])
([nil nil ((35360 . 35369)) nil (25829 57995 64798 356000) 0 nil])
([nil nil ((35369 . 35378)) nil (25829 57995 64797 357000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35374) (undo-tree-id241 . -1) (#("=" 0 1 (part-side javascript)) . -35375) (undo-tree-id242 . -1) (#("=" 0 1 (part-side javascript)) . -35376) (undo-tree-id243 . -1) (#(" " 0 1 (part-side javascript)) . -35377) (undo-tree-id244 . -1) 35378) nil (25829 57995 64795 298000) 0 nil])
([nil nil ((35374 . 35379)) nil (25829 57995 64789 665000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35376) (undo-tree-id238 . -1) (#("0" 0 1 (part-side javascript)) . -35377) (undo-tree-id239 . -1) (#(" " 0 1 (part-side javascript)) . -35378) (undo-tree-id240 . -1) 35379) nil (25829 57995 64788 169000) 0 nil])
([nil nil ((35376 . 35383)) nil (25829 57995 64782 59000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35379) (undo-tree-id234 . -1) (#("i" 0 1 (part-side javascript)) . -35380) (undo-tree-id235 . -1) (#("d" 0 1 (part-side javascript)) . -35381) (undo-tree-id236 . -1) (#(" " 0 1 (part-side javascript)) . -35382) (undo-tree-id237 . -1) 35383) nil (25829 57995 64779 870000) 0 nil])
([nil nil ((35379 . 35386)) nil (25829 57995 64774 139000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -35375) (undo-tree-id233 . -1) 35376) nil (25829 57995 64772 724000) 0 nil])
([nil nil ((35375 . 35376)) nil (25829 57995 64770 387000) 0 nil])
([nil nil ((35385 . 35387)) nil (25829 57995 64769 252000) 0 nil])
([nil nil ((#("<" 0 1 (part-side javascript)) . -35386) (undo-tree-id232 . -1) 35387) nil (25829 57995 64767 952000) 0 nil])
([nil nil ((35386 . 35390)) nil (25829 57995 64765 599000) 0 nil])
([nil nil ((#("2" 0 1 (part-side javascript)) . -35388) (undo-tree-id230 . -1) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . -35389) (undo-tree-id231 . -1) 35390) nil (25829 57995 64764 230000) 0 nil])
([nil nil ((35388 . 35389)) nil (25829 57995 64760 461000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -35387) (undo-tree-id228 . -1) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . -35388) (undo-tree-id229 . -1) 35389) nil (25829 57995 64758 698000) 0 nil])
([nil nil ((35387 . 35391)) nil (25829 57995 64755 70000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -35390) (undo-tree-id227 . -1) 35391) nil (25829 57995 64753 762000) 0 nil])
([nil nil ((35390 . 35394)) nil (25829 57995 64751 174000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -35391) (undo-tree-id224 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -35392) (undo-tree-id225 . -1) (#(" " 0 1 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -35393) (undo-tree-id226 . -1) 35394) nil (25829 57995 64748 991000) 0 nil])
([nil nil ((35391 . 35394)) nil (25829 57995 64744 356000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35426 . 35427) (nil part-side javascript 35426 . 35427) (nil face (rainbow-delimiters-depth-4-face) 35426 . 35427) (nil part-side javascript 35425 . 35426) (nil part-token string 35425 . 35426) (nil syntax-table (15) 35425 . 35426) (nil font-lock-face web-mode-javascript-string-face 35425 . 35426) (nil part-side javascript 35416 . 35425) (nil part-token string 35416 . 35425) (nil font-lock-face web-mode-javascript-string-face 35416 . 35425) (nil part-side javascript 35415 . 35416) (nil part-token string 35415 . 35416) (nil syntax-table (15) 35415 . 35416) (nil font-lock-face web-mode-javascript-string-face 35415 . 35416) (nil part-side javascript 35414 . 35415) (nil face (rainbow-delimiters-depth-4-face) 35414 . 35415) (nil part-side javascript 35406 . 35414) (nil face web-mode-function-call-face 35406 . 35414) (nil part-side javascript 35399 . 35406) (nil part-side javascript 35395 . 35399) (nil face web-mode-constant-face 35395 . 35399) (35395 . 35427)) nil (25829 57995 64742 195000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35394) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 35395) nil (25829 57995 64736 466000) 0 nil])
([nil nil ((35426 . 35427)) nil (25829 57995 64732 811000) 0 nil])
([nil nil ((35372 . 35374) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35372) (35372 . 35373)) nil (25829 57995 64731 518000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 35373)) nil (25829 57995 64730 64000) 0 nil])
([nil nil ((35429 . 35431) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35429) (35428 . 35430)) nil (25829 57995 64728 807000) 0 nil])
([nil nil ((35432 . 35440) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 35431) (undo-tree-id220 . -8) (undo-tree-id221 . 10) (35439 . 35441) (35430 . 35440)) nil (25829 57995 64726 602000) 0 nil])
([nil nil ((35441 . 35442)) nil (25829 57995 64722 68000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -35441) (undo-tree-id219 . -1) 35442) nil (25829 57995 64720 745000) 0 nil])
([nil nil ((35450 . 35455)) nil (25829 57995 64718 272000) 0 nil])
([nil nil ((35431 . 35441)) nil (25829 57995 64716 816000) 0 nil])
([nil nil ((35441 . 35448)) nil (25829 57995 64715 890000) 0 nil])
([nil nil ((35448 . 35453)) nil (25829 57995 64714 640000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35452) (undo-tree-id218 . -1) 35453) nil (25829 57995 64713 319000) 0 nil])
([nil nil ((35523 . 35532)) nil (25829 57995 64710 722000) 0 nil])
([nil nil ((35532 . 35545)) nil (25829 57995 64709 292000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35544) (undo-tree-id217 . -1) 35545) nil (25829 57995 64707 690000) 0 nil])
([nil nil ((35360 . 35369)) nil (25829 57995 64705 323000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 35378) (35377 . 35378) (35376 . 35378) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35376) (35369 . 35377)) nil (25829 57995 64703 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35430 . 35431) (nil rear-nonsticky t 35430 . 35431) (nil part-side javascript 35430 . 35431) (nil face (rainbow-delimiters-depth-5-face) 35430 . 35431) (nil part-side javascript 35429 . 35430) (nil part-token string 35429 . 35430) (nil syntax-table (15) 35429 . 35430) (nil font-lock-face web-mode-javascript-string-face 35429 . 35430) (nil part-side javascript 35420 . 35429) (nil part-token string 35420 . 35429) (nil font-lock-face web-mode-javascript-string-face 35420 . 35429) (nil part-side javascript 35419 . 35420) (nil part-token string 35419 . 35420) (nil syntax-table (15) 35419 . 35420) (nil font-lock-face web-mode-javascript-string-face 35419 . 35420) (nil part-side javascript 35418 . 35419) (nil face (rainbow-delimiters-depth-5-face) 35418 . 35419) (nil part-side javascript 35410 . 35418) (nil face web-mode-function-call-face 35410 . 35418) (nil part-side javascript 35403 . 35410) (nil part-side javascript 35399 . 35403) (nil face web-mode-constant-face 35399 . 35403) (nil part-side javascript 35398 . 35399) (nil part-side javascript 35395 . 35398) (nil part-side javascript 35392 . 35395) (nil part-side javascript 35390 . 35392) (nil part-side javascript 35387 . 35390) (nil part-side javascript 35384 . 35387) (nil part-side javascript 35382 . 35384) (nil part-side javascript 35379 . 35382) (nil part-side javascript 35377 . 35379) (35377 . 35431)) nil (25829 57995 64700 8000) 0 nil])
([nil nil ((35376 . 35378) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35376) (35376 . 35377)) nil (25829 57995 64690 933000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 35377)) nil (25829 57995 64689 142000) 0 nil])
([nil nil ((35433 . 35435)) nil (25829 57995 64687 997000) 0 nil])
([nil nil ((#("|" 0 1 (part-side javascript)) . -35434) (undo-tree-id216 . -1) 35435) nil (25829 57995 64686 225000) 0 nil])
([nil nil ((35434 . 35447)) nil (25829 57995 64683 643000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35446) (undo-tree-id215 . -1) 35447) nil (25829 57995 64681 878000) 0 nil])
([nil nil ((#("        if (id <= 0 && id > -2 && this.roles.includes('sys_admin')) {
          return true
        }
        else if (id == -2) {
          return true
        }
        return false" 0 8 (part-side javascript) 8 10 (face web-mode-keyword-face part-side javascript) 10 11 (part-side javascript) 11 12 (face (rainbow-delimiters-depth-4-face) part-side javascript) 12 14 (part-side javascript) 14 17 (part-side javascript) 17 19 (part-side javascript) 19 22 (part-side javascript) 22 25 (part-side javascript) 25 27 (part-side javascript) 27 30 (part-side javascript) 30 33 (part-side javascript) 33 34 (part-side javascript) 34 38 (face web-mode-constant-face part-side javascript) 38 45 (part-side javascript) 45 53 (face web-mode-function-call-face part-side javascript) 53 54 (face (rainbow-delimiters-depth-5-face) part-side javascript) 54 55 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 55 64 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 65 66 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 66 67 (face (rainbow-delimiters-depth-4-face) part-side javascript) 67 68 (part-side javascript) 68 69 (face (rainbow-delimiters-depth-4-face) part-side javascript) 69 70 (part-side javascript) 70 80 (part-side javascript) 80 86 (face web-mode-keyword-face part-side javascript) 86 87 (part-side javascript) 87 91 (face web-mode-constant-face part-side javascript) 91 100 (part-side javascript) 100 101 (face (rainbow-delimiters-depth-4-face) part-side javascript) 101 102 (part-side javascript) 102 110 (part-side javascript) 110 114 (face web-mode-keyword-face part-side javascript) 114 115 (part-side javascript) 115 117 (face web-mode-keyword-face part-side javascript) 117 118 (part-side javascript) 118 119 (face (rainbow-delimiters-depth-4-face) part-side javascript) 119 127 (part-side javascript) 127 128 (face (rainbow-delimiters-depth-4-face) part-side javascript) 128 129 (part-side javascript) 129 130 (face (rainbow-delimiters-depth-4-face) part-side javascript) 130 131 (part-side javascript) 131 141 (part-side javascript) 141 147 (face web-mode-keyword-face part-side javascript) 147 148 (part-side javascript) 148 152 (face web-mode-constant-face part-side javascript) 152 161 (part-side javascript) 161 162 (face (rainbow-delimiters-depth-4-face) part-side javascript) 162 163 (part-side javascript) 163 171 (part-side javascript) 171 177 (face web-mode-keyword-face part-side javascript) 177 178 (part-side javascript) 178 183 (face web-mode-constant-face part-side javascript)) . 35447) (undo-tree-id207 . -183) (undo-tree-id208 . -70) (undo-tree-id209 . -182) (undo-tree-id210 . -34) (undo-tree-id211 . -174) (undo-tree-id212 . -34) (undo-tree-id213 . -66) (undo-tree-id214 . -183)) nil (25829 57995 64678 88000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -35446) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 35447) nil (25829 57995 64664 114000) 0 nil])
([nil nil ((15854 . 15857) (t 25829 57995 173560 11000)) nil (25829 58082 879821 137000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15856) (undo-tree-id297 . -1) 15857) nil (25829 58082 879819 750000) 0 nil])
([nil nil ((15856 . 15858)) nil (25829 58082 879817 557000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15857) (undo-tree-id296 . -1) 15858) nil (25829 58082 879816 254000) 0 nil])
([nil nil ((15857 . 15860)) nil (25829 58082 879814 91000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15858) (undo-tree-id294 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15859) (undo-tree-id295 . -1) 15860) nil (25829 58082 879812 637000) 0 nil])
([nil nil ((15858 . 15860)) nil (25829 58082 879808 952000) 0 nil])
([nil nil ((15860 . 15867)) nil (25829 58082 879807 713000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15866) (undo-tree-id293 . -1) 15867) nil (25829 58082 879806 518000) 0 nil])
([nil nil ((15866 . 15871)) nil (25829 58082 879804 76000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15869) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15870) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 15871) nil (25829 58082 879802 496000) 0 nil])
([nil nil ((15869 . 15876)) nil (25829 58082 879796 556000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15874) (undo-tree-id287 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15875) (undo-tree-id288 . -1) 15876) nil (25829 58082 879794 782000) 0 nil])
([nil nil ((15874 . 15876)) nil (25829 58082 879790 363000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15874) (undo-tree-id285 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15875) (undo-tree-id286 . -1) 15876) nil (25829 58082 879788 527000) 0 nil])
([nil nil ((15874 . 15876)) nil (25829 58082 879783 213000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . -15875) (undo-tree-id284 . -1) 15876) nil (25829 58082 879778 303000) 0 nil])
([nil nil ((35381 . 35390) (t 25829 58082 985883 725000)) nil (25829 58130 340676 699000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 35403) (35402 . 35403) (35401 . 35403) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35401) (35390 . 35402)) nil (25829 58130 340674 795000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 35404) (35403 . 35404) (nil part-token string 35403 . 35404) (nil font-lock-face web-mode-javascript-string-face 35403 . 35404) (nil part-side javascript 35403 . 35404) (35402 . 35404) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -35402) (35402 . 35403)) nil (25829 58130 340671 972000) 0 nil])
([nil nil ((35403 . 35407)) nil (25829 58130 340669 192000) 0 nil])
([nil nil ((35408 . 35411)) nil (25829 58130 340667 750000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -35409) (undo-tree-id298 . -1) (#(" " 0 1 (part-side javascript)) . -35410) (undo-tree-id299 . -1) 35411) nil (25829 58130 340665 36000) 0 nil])
([nil nil ((35409 . 35410)) nil (25829 58130 340591 73000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35441 . 35442) (nil rear-nonsticky t 35441 . 35442) (nil part-side javascript 35441 . 35442) (nil face (rainbow-delimiters-depth-5-face) 35441 . 35442) (nil part-side javascript 35440 . 35441) (nil part-token string 35440 . 35441) (nil syntax-table (15) 35440 . 35441) (nil font-lock-face web-mode-javascript-string-face 35440 . 35441) (nil part-side javascript 35431 . 35440) (nil part-token string 35431 . 35440) (nil font-lock-face web-mode-javascript-string-face 35431 . 35440) (nil part-side javascript 35430 . 35431) (nil part-token string 35430 . 35431) (nil syntax-table (15) 35430 . 35431) (nil font-lock-face web-mode-javascript-string-face 35430 . 35431) (nil part-side javascript 35429 . 35430) (nil face (rainbow-delimiters-depth-5-face) 35429 . 35430) (nil part-side javascript 35421 . 35429) (nil face web-mode-function-call-face 35421 . 35429) (nil part-side javascript 35414 . 35421) (nil part-side javascript 35410 . 35414) (nil face web-mode-constant-face 35410 . 35414) (35410 . 35442)) nil (25829 58130 340582 676000) 0 nil])
([nil nil ((35381 . 35390) (t 25829 58130 458068 748000)) nil (25829 58141 79812 335000) 0 nil])
([nil nil ((35402 . 35405) (35401 . 35403) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -35401) (35390 . 35402)) nil (25829 58141 79809 941000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -35404) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 35405) nil (25829 58141 79803 973000) 0 nil])
([nil current ((16051 . 16052) (t 25829 58141 190111 460000)) nil (25837 55366 982447 447000) 0 nil])
([nil nil ((#("
        console.log(id)
        console.log(\"Role\", this.roles.includes('sys_admin'))" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-4-face) part-side javascript) 21 23 (part-side javascript) 23 24 (face (rainbow-delimiters-depth-4-face) part-side javascript) 24 25 (part-side javascript) 25 41 (part-side javascript) 41 44 (face web-mode-function-call-face part-side javascript) 44 45 (face (rainbow-delimiters-depth-4-face) part-side javascript) 45 46 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 46 50 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 50 51 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 51 53 (part-side javascript) 53 57 (face web-mode-constant-face part-side javascript) 57 64 (part-side javascript) 64 72 (face web-mode-function-call-face part-side javascript) 72 73 (face (rainbow-delimiters-depth-5-face) part-side javascript) 73 74 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 74 83 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 83 84 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 84 85 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 85 86 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 35382) (undo-tree-id310 . -1) (undo-tree-id312 . -53) (t 25829 58166 682214 154000)) ((35382 . 35468)) (25837 55366 620272 140000) 0 nil])
([nil nil ((16077 . 16081) (t 25829 58190 918313 344000)) ((#(" || " 0 4 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 16077) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4)) (25837 55366 229505 650000) 0 nil] [nil nil ((15875 . 15879) (t 25829 58190 918313 344000)) ((#(" && " 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-item-group" tag-attr t)) . 15875) (undo-tree-id314 . -4)) (25829 58972 648924 788000) 0 nil])
([nil nil ((16081 . 16097)) ((#("item.children > " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start) 10 11 (block-side t tag-attr t tag-name "v-btn" tag-type start) 11 12 (block-side t tag-attr t tag-name "v-btn" tag-type start) 12 13 (block-side t tag-attr t tag-name "v-btn" tag-type start) 13 14 (block-side t tag-attr t tag-name "v-btn" tag-type start) 14 15 (block-side t tag-attr t tag-name "v-btn" tag-type start) 15 16 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 16081) (undo-tree-id118 . -16) (undo-tree-id119 . -13) (undo-tree-id120 . -13) (undo-tree-id121 . -13) (undo-tree-id122 . -13) (undo-tree-id123 . -13) (undo-tree-id124 . -13) (undo-tree-id125 . -13) (undo-tree-id126 . -13) (undo-tree-id127 . -13) (undo-tree-id128 . -13) (undo-tree-id129 . -13) (undo-tree-id130 . -13) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . -13) (undo-tree-id136 . -13) (undo-tree-id137 . -13) (undo-tree-id138 . -13) (undo-tree-id139 . -13) (undo-tree-id140 . -13) (undo-tree-id141 . -13) (undo-tree-id142 . -13) (undo-tree-id143 . -13) (undo-tree-id144 . -13) (undo-tree-id145 . -13) (undo-tree-id146 . -13) (undo-tree-id147 . -13) (undo-tree-id148 . -13) (undo-tree-id149 . -13) (undo-tree-id150 . -13) (undo-tree-id151 . -13) (undo-tree-id152 . -13) (undo-tree-id153 . -13) (undo-tree-id154 . -13) (undo-tree-id155 . -13) (undo-tree-id156 . -13) (undo-tree-id157 . -13) (undo-tree-id158 . -13) (undo-tree-id159 . -13) (undo-tree-id160 . -13) (undo-tree-id161 . -13) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -13) (undo-tree-id167 . -13) (undo-tree-id168 . -13) (undo-tree-id169 . -13) (undo-tree-id170 . -13) (undo-tree-id171 . -13) (undo-tree-id172 . -13) (undo-tree-id173 . -13) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -13) (undo-tree-id177 . -13) (undo-tree-id178 . -13) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -13) (undo-tree-id188 . -13) (undo-tree-id189 . -13) (undo-tree-id190 . -13) (undo-tree-id191 . -13) (undo-tree-id192 . -13) (undo-tree-id193 . -13) (undo-tree-id194 . -13) (undo-tree-id195 . -13) (undo-tree-id196 . -13) (undo-tree-id197 . -13) (undo-tree-id198 . -13) (undo-tree-id199 . -13) (undo-tree-id200 . -13) (undo-tree-id201 . -13) (undo-tree-id202 . -13) (undo-tree-id203 . -13) (undo-tree-id204 . -13) (undo-tree-id205 . -13) (undo-tree-id206 . -13) (undo-tree-id207 . -13) (undo-tree-id208 . -13) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (undo-tree-id211 . -13) (undo-tree-id212 . -13) (undo-tree-id213 . -13) (undo-tree-id214 . -13) (undo-tree-id215 . -13) (undo-tree-id216 . -13) (undo-tree-id217 . -13) (undo-tree-id218 . -13) (undo-tree-id219 . -13) (undo-tree-id220 . -13) (undo-tree-id221 . -13) (undo-tree-id222 . -16) (undo-tree-id223 . -16) (undo-tree-id224 . -16) (undo-tree-id225 . -16) (undo-tree-id226 . -16) (undo-tree-id227 . -16) (undo-tree-id228 . -16)) (25837 55365 887010 653000) 0 nil])
nil
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16094) (#(">" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16095) (#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16096) 16097) ((16094 . 16097)) (25837 55365 484623 690000) 0 nil])
([nil nil ((16094 . 16106)) ((#(".length > 0 " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-btn" tag-type start) 2 3 (block-side t tag-attr t tag-name "v-btn" tag-type start) 3 4 (block-side t tag-attr t tag-name "v-btn" tag-type start) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start) 5 6 (block-side t tag-attr t tag-name "v-btn" tag-type start) 6 7 (block-side t tag-attr t tag-name "v-btn" tag-type start) 7 8 (block-side t tag-attr t tag-name "v-btn" tag-type start) 8 9 (block-side t tag-attr t tag-name "v-btn" tag-type start) 9 10 (block-side t tag-attr t tag-name "v-btn" tag-type start) 10 11 (block-side t tag-attr t tag-name "v-btn" tag-type start) 11 12 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 16094) (undo-tree-id25 . -12) (undo-tree-id26 . -12) (undo-tree-id27 . -12) (undo-tree-id28 . -12) (undo-tree-id29 . -12) (undo-tree-id30 . -12) (undo-tree-id31 . -12) (undo-tree-id32 . -12) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (undo-tree-id38 . -12) (undo-tree-id39 . -12) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . -12) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12) (undo-tree-id60 . -12) (undo-tree-id61 . -12) (undo-tree-id62 . -12) (undo-tree-id63 . -12) (undo-tree-id64 . -12) (undo-tree-id65 . -12) (undo-tree-id66 . -12) (undo-tree-id67 . -12) (undo-tree-id68 . -12) (undo-tree-id69 . -12) (undo-tree-id70 . -12) (undo-tree-id71 . -12) (undo-tree-id72 . -12) (undo-tree-id73 . -12) (undo-tree-id74 . -12) (undo-tree-id75 . -12) (undo-tree-id76 . -12) (undo-tree-id77 . -12) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) (undo-tree-id81 . -12) (undo-tree-id82 . -12) (undo-tree-id83 . -12) (undo-tree-id84 . -12) (undo-tree-id85 . -12) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -12) (undo-tree-id109 . -12) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12)) (25837 55361 265500 630000) 0 nil])
([nil nil ((#(">" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16102) (#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16103) (#("0" 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16104) (#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16105) 16106) ((16102 . 16106)) (25837 55360 943968 143000) 0 nil])
([nil nil ((16102 . 16107)) ((#("== 0 " 0 4 (block-side t tag-attr t tag-name "v-btn" tag-type start) 4 5 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . 16102) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5)) (25837 55360 154135 551000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-btn" tag-attr t block-side t)) . -16106) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) 16107) ((16106 . 16107) (t 25832 25236 441165 644000)) (25829 58995 24448 608000) 0 nil])
nil
