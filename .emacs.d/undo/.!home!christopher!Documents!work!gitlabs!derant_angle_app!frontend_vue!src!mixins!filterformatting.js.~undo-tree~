(undo-tree-save-format-version . 1)
"887ce0c5bb7982800c524f9e475eb69736b71abf"
[nil nil nil nil (25812 57476 700513 988000) 0 nil]
([nil nil ((nil rear-nonsticky nil 66 . 67) (nil part-side javascript 66 . 67) (nil face whitespace-trailing 66 . 67) (nil part-side javascript 65 . 66) (nil part-side javascript 64 . 65) (nil face (rainbow-delimiters-depth-1-face) 64 . 65) (nil part-side javascript 63 . 64) (nil part-token string 63 . 64) (nil syntax-table (15) 63 . 64) (nil font-lock-face web-mode-javascript-string-face 63 . 64) (nil part-side javascript 57 . 63) (nil part-token string 57 . 63) (nil font-lock-face web-mode-javascript-string-face 57 . 63) (nil part-side javascript 56 . 57) (nil part-token string 56 . 57) (nil syntax-table (15) 56 . 57) (nil font-lock-face web-mode-javascript-string-face 56 . 57) (nil part-side javascript 55 . 56) (nil face (rainbow-delimiters-depth-1-face) 55 . 56) (nil part-side javascript 48 . 55) (nil face web-mode-function-call-face 48 . 55) (nil part-side javascript 45 . 48) (nil part-side javascript 44 . 45) (nil face web-mode-variable-name-face 44 . 45) (nil part-side javascript 43 . 44) (nil part-side javascript 38 . 43) (nil face web-mode-keyword-face 38 . 43) (38 . 67) (t 25812 57477 430396 18000)) nil (25818 10454 29027 940000) 0 nil] [nil nil ((3869 . 3876) (t 25642 38060 362165 404000)) ((#("
      " 0 1 (part-side javascript syntax-table (12)) 1 7 (part-side javascript)) . 3869) (undo-tree-id273 . -7) (undo-tree-id274 . -1) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -7) (undo-tree-id287 . -1) (undo-tree-id288 . -7) (undo-tree-id289 . -7) (undo-tree-id290 . -7) (undo-tree-id291 . -7) (undo-tree-id292 . -7) (undo-tree-id293 . -7) (undo-tree-id294 . -7) (undo-tree-id295 . -7) (undo-tree-id296 . -7) (undo-tree-id297 . -7) (undo-tree-id298 . -7)) (25812 57476 324356 225000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript rear-nonsticky t)) . 66) (undo-tree-id19 . -1) (67 . 68)) nil (25818 10454 29021 11000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 3881) (3880 . 3881) (3879 . 3881) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -3879) (3876 . 3880)) ((#("if (" 0 2 (part-side javascript face web-mode-keyword-face) 2 3 (part-side javascript) 3 4 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 3876) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (3879 . 3880) (#("()" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 3879) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 3880) (3881 . 3882)) (25812 57475 997286 213000) 0 nil])
([nil nil ((97 . 102)) nil (25818 10454 29018 716000) 0 nil])
([nil nil ((3880 . 3887)) ((#("this,.f" 0 4 (part-side javascript face web-mode-constant-face) 4 5 (part-side javascript) 5 6 (part-side javascript) 6 7 (part-side javascript)) . 3880) (undo-tree-id245 . -7) (undo-tree-id246 . -7)) (25812 57475 707510 291000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 116) (115 . 116) (114 . 116) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -114) (102 . 115)) nil (25818 10454 29017 55000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -3884) (undo-tree-id28 . -1) (#("." 0 1 (part-side javascript)) . -3885) (undo-tree-id29 . -1) (#("f" 0 1 (part-side javascript)) . -3886) (undo-tree-id30 . -1) 3887) ((3884 . 3887)) (25812 57475 387524 318000) 0 nil])
([nil nil ((115 . 118)) nil (25818 10454 29014 983000) 0 nil])
([nil nil ((3893 . 3894) (3892 . 3894) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -3892) (3884 . 3893)) ((#(".filters[" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 3884) (3892 . 3893) (#("[]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 3892) (#("0" 0 1 (part-side javascript)) . 3893)) (25812 57475 100222 738000) 0 nil])
([nil nil ((118 . 122)) nil (25818 10454 29014 13000) 0 nil])
([nil nil ((3897 . 3899) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -3897) (3896 . 3898)) ((#(" {" 0 1 (part-side javascript) 1 2 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 3896) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (3897 . 3898) (#("{}" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 3897) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1)) (25812 57474 596156 528000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -121) (undo-tree-id18 . -1) 122) nil (25818 10454 29012 498000) 0 nil])
([nil nil ((3900 . 3906) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 3899) (undo-tree-id26 . 8) (3899 . 3907) (#("      " 0 6 (part-side javascript)) . 3899) (undo-tree-id27 . -6) (3898 . 3906)) ((#("
      
" 0 1 (part-side javascript) 1 7 (part-side javascript face whitespace-trailing) 7 8 (part-side javascript)) . 3898) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (undo-tree-id169 . -8) (undo-tree-id170 . -8) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (3899 . 3905) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 3899) (3899 . 3907) (#("      " 0 6 (part-side javascript)) . 3900)) (25812 57474 293936 126000) 0 nil])
([nil nil ((123 . 125) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -123) (122 . 124)) nil (25818 10454 29010 157000) 0 nil])
([nil nil ((#("      return ('aggr' in this.filters[0])
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 19 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript) 21 23 (part-side javascript face web-mode-keyword-face) 23 24 (part-side javascript) 24 28 (part-side javascript face web-mode-constant-face) 28 36 (part-side javascript) 36 37 (part-side javascript face (rainbow-delimiters-depth-5-face)) 37 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-4-face)) 40 41 (part-side javascript)) . 3949) (undo-tree-id24 . -6) (undo-tree-id25 . -41) (3941 . 3949) (#("      }
" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-4-face)) 7 8 (part-side javascript)) . 3900) (3908 . 3949) 3914) ((#("      return ('aggr' in this.filters[0])
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 19 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript) 21 23 (part-side javascript face web-mode-keyword-face) 23 24 (part-side javascript) 24 28 (part-side javascript face web-mode-constant-face) 28 36 (part-side javascript) 36 37 (part-side javascript face (rainbow-delimiters-depth-5-face)) 37 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-5-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-4-face)) 40 41 (part-side javascript)) . 3908) (undo-tree-id94 . -41) (undo-tree-id95 . -41) (undo-tree-id96 . -6) (undo-tree-id97 . -41) (undo-tree-id98 . -41) (undo-tree-id99 . -41) (undo-tree-id100 . -41) (undo-tree-id101 . -41) (undo-tree-id102 . -41) (undo-tree-id103 . -41) (undo-tree-id104 . -41) (undo-tree-id105 . -41) (undo-tree-id106 . -41) (undo-tree-id107 . -41) (undo-tree-id108 . -41) (undo-tree-id109 . -41) (undo-tree-id110 . -41) (undo-tree-id111 . -41) (undo-tree-id112 . -41) (undo-tree-id113 . -41) (undo-tree-id114 . -41) (undo-tree-id115 . -41) (undo-tree-id116 . -41) (undo-tree-id117 . -41) (undo-tree-id118 . -41) (undo-tree-id119 . -41) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (3900 . 3908) (#("      }
" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-4-face)) 7 8 (part-side javascript)) . 3941) (undo-tree-id132 . -7) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (undo-tree-id138 . -7) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (3949 . 3990)) (25812 57473 959445 865000) 0 nil])
([nil nil ((127 . 131) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 126) (undo-tree-id14 . -4) (undo-tree-id15 . 6) (130 . 132) (126 . 131) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 125) (undo-tree-id16 . -4) (undo-tree-id17 . 6) (129 . 131) (124 . 130)) nil (25818 10454 29007 815000) 0 nil])
([nil nil ((#("      return ('aggr' in this.filters[0])
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 19 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript) 21 23 (part-side javascript face web-mode-keyword-face) 23 24 (part-side javascript) 24 28 (part-side javascript face web-mode-constant-face) 28 36 (part-side javascript) 36 37 (part-side javascript face (rainbow-delimiters-depth-6-face)) 37 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-6-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-5-face)) 40 41 (part-side javascript)) . 3941) (undo-tree-id22 . -6) (undo-tree-id23 . -41) (3940 . 3941) (#("
" 0 1 (part-side javascript)) . 3899) (3900 . 3941) 3906) ((#("      return ('aggr' in this.filters[0])
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 19 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript) 21 23 (part-side javascript face web-mode-keyword-face) 23 24 (part-side javascript) 24 28 (part-side javascript face web-mode-constant-face) 28 36 (part-side javascript) 36 37 (part-side javascript face (rainbow-delimiters-depth-6-face)) 37 38 (part-side javascript) 38 39 (part-side javascript face (rainbow-delimiters-depth-6-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-5-face)) 40 41 (part-side javascript)) . 3900) (undo-tree-id73 . -6) (undo-tree-id74 . -41) (undo-tree-id75 . -41) (undo-tree-id76 . -41) (undo-tree-id77 . -41) (undo-tree-id78 . -41) (undo-tree-id79 . -41) (undo-tree-id80 . -41) (undo-tree-id81 . -41) (undo-tree-id82 . -41) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (3899 . 3900) (#("
" 0 1 (part-side javascript)) . 3940) (3941 . 3982)) (25812 57473 577907 487000) 0 nil])
([nil nil ((126 . 132)) nil (25818 10454 29001 142000) 0 nil])
([nil nil ((3899 . 3907) (#("      " 0 6 (part-side javascript)) . 3899) (undo-tree-id21 . -6) 3905) ((3899 . 3905) (#("        " 0 8 (part-side javascript)) . 3899)) (25812 57473 277737 504000) 0 nil])
([nil nil ((125 . 131)) nil (25818 10454 29000 150000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 3942) (undo-tree-id20 . -1)) ((3942 . 3943)) (25812 57472 952406 768000) 0 nil])
([nil nil ((131 . 135)) nil (25818 10454 28999 224000) 0 nil])
([nil nil ((3949 . 3956)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 3949) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7)) (25812 57472 628661 875000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -131) (undo-tree-id10 . -1) (#("a" 0 1 (part-side javascript)) . -132) (undo-tree-id11 . -1) (#("r" 0 1 (face web-mode-keyword-face part-side javascript)) . -133) (undo-tree-id12 . -1) (#(" " 0 1 (part-side javascript)) . -134) (undo-tree-id13 . -1) 135) nil (25818 10454 28997 513000) 0 nil])
([nil nil ((3956 . 3957)) ((#("r" 0 1 (part-side javascript)) . 3956) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) (25812 57472 342701 975000) 0 nil])
([nil nil ((nil rear-nonsticky nil 163 . 164) (nil part-side javascript 163 . 164) (nil face whitespace-trailing 163 . 164) (nil part-side javascript 162 . 163) (nil part-side javascript 161 . 162) (nil face (rainbow-delimiters-depth-4-face) 161 . 162) (nil part-side javascript 158 . 161) (nil part-side javascript 157 . 158) (nil face (rainbow-delimiters-depth-4-face) 157 . 158) (nil part-side javascript 148 . 157) (nil face web-mode-function-call-face 148 . 157) (nil part-side javascript 143 . 148) (nil part-side javascript 135 . 143) (nil face web-mode-variable-name-face 135 . 143) (nil part-side javascript 134 . 135) (nil part-side javascript 131 . 134) (nil face web-mode-keyword-face 131 . 134) (131 . 164)) nil (25818 10454 28990 537000) 0 nil])
([nil nil ((3957 . 3969)) ((#("eturn false " 0 5 (part-side javascript face web-mode-keyword-face) 5 6 (part-side javascript) 6 11 (part-side javascript face web-mode-constant-face) 11 12 (part-side javascript)) . 3957) (undo-tree-id31 . -2) (undo-tree-id32 . -11) (undo-tree-id33 . -12) (undo-tree-id34 . -11) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (undo-tree-id38 . -12) (undo-tree-id39 . -12) (undo-tree-id40 . -12) (undo-tree-id41 . -12)) (25812 57472 91228 367000) 0 nil])
([nil nil ((164 . 170) (#(" " 0 1 (part-side javascript rear-nonsticky t)) . 163) (undo-tree-id9 . -1) (164 . 165)) nil (25818 10454 28986 6000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -3968) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) 3969) ((3968 . 3969) (t 25812 57439 962293 738000)) (25812 57439 954112 86000) 0 nil])
([nil nil ((170 . 185)) nil (25818 10454 28983 453000) 0 nil])
nil
([nil nil ((#("O" 0 1 (part-side javascript)) . -182) (undo-tree-id6 . -1) (#("P" 0 1 (part-side javascript)) . -183) (undo-tree-id7 . -1) (#("Y" 0 1 (part-side javascript)) . -184) (undo-tree-id8 . -1) 185) nil (25818 10454 28981 972000) 0 nil])
([nil nil ((182 . 186)) nil (25818 10454 28977 243000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -184) (undo-tree-id4 . -1) (#(" " 0 1 (part-side javascript)) . -185) (undo-tree-id5 . -1) 186) nil (25818 10454 28975 898000) 0 nil])
([nil nil ((184 . 186)) nil (25818 10454 28972 174000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -184) (undo-tree-id2 . -1) (#(" " 0 1 (part-side javascript)) . -185) (undo-tree-id3 . -1) 186) nil (25818 10454 28970 770000) 0 nil])
([nil nil ((184 . 186)) nil (25818 10454 28967 237000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -185) (undo-tree-id1 . -1) 186) nil (25818 10454 28965 621000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 185) (undo-tree-id0 . -1)) nil (25818 10454 28961 846000) 0 nil])
([nil nil ((197 . 198)) nil (25818 10454 28944 409000) 0 nil])
([nil nil ((124 . 131)) nil (25818 10454 29513 949000) 0 nil])
([nil nil ((126 . 132) (#("      " 0 6 (part-side javascript)) . 125) (undo-tree-id31 . -6) (131 . 132)) nil (25818 10470 367355 676000) 0 nil] [nil nil ((104 . 109)) ((#("
    " 0 5 (part-side javascript)) . 104) (undo-tree-id20 . -5) (undo-tree-id21 . -1)) (25818 10454 28935 512000) 0 nil])
([nil nil ((125 . 131)) nil (25818 10470 367352 855000) 0 nil])
nil
([nil nil ((131 . 133)) nil (25818 10470 367351 660000) 0 nil])
([nil nil ((133 . 136)) nil (25818 10470 367350 415000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -135) (undo-tree-id30 . -1) 136) nil (25818 10470 367349 78000) 0 nil])
([nil nil ((#("7" 0 1 (part-side javascript)) . -131) (undo-tree-id29 . -1) 132) nil (25818 10470 367345 639000) 0 nil])
([nil nil ((131 . 132)) nil (25818 10470 367342 852000) 0 nil])
([nil nil ((133 . 154)) nil (25818 10470 367341 854000) 0 nil])
([nil nil ((154 . 159)) nil (25818 10470 367340 631000) 0 nil])
([nil nil ((159 . 163)) nil (25818 10470 367338 951000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -227) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -166) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) 211) nil (25818 10470 367333 247000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -200) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("b" 0 1 (part-side javascript)) . -201) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("j" 0 1 (part-side javascript)) . -202) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 203 (t 25818 10470 373976 64000)) nil (25818 10694 705589 55000) 0 nil])
([nil nil ((200 . 206)) nil (25818 10694 705564 333000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -207) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 208 (t 25818 10694 709773 472000)) nil (25827 7072 263289 297000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript syntax-table (12))) . 165) (undo-tree-id1 . -1)) nil (25827 7072 263282 617000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript syntax-table (12))) . 401) (undo-tree-id0 . -1)) nil (25827 7072 263275 567000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -65) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 66 (t 25827 7072 269333 438000)) nil (25827 7080 755546 435000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -171) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("a" 0 1 (part-side javascript)) . -172) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . -173) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 174 (t 25827 7080 761347 220000)) nil (25827 7088 816319 373000) 0 nil])
([nil nil ((171 . 177)) nil (25827 7088 816309 494000) 0 nil])
([nil nil ((#("w" 0 1 (part-side javascript)) . -175) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("t" 0 1 (part-side javascript)) . -176) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 177) nil (25827 7088 816303 972000) 0 nil])
([nil nil ((175 . 176)) nil (25827 7088 816232 276000) 0 nil])
([nil nil ((96 . 101) (t 25832 25236 445165 663000)) nil (25832 34183 806916 397000) 0 nil])
([nil nil ((101 . 115)) nil (25832 34183 806915 308000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -113) (undo-tree-id28 . -1) (#("e" 0 1 (part-side javascript)) . -114) (undo-tree-id29 . -1) 115) nil (25832 34183 806914 65000) 0 nil])
([nil nil ((116 . 127) (115 . 117) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -115) (113 . 116)) nil (25832 34183 806910 518000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript)) . -123) (undo-tree-id24 . -1) (#("," 0 1 (part-side javascript)) . -124) (undo-tree-id25 . -1) (#(" " 0 1 (part-side javascript)) . -125) (undo-tree-id26 . -1) (#("f" 0 1 (part-side javascript)) . -126) (undo-tree-id27 . -1) 127) nil (25832 34183 806908 263000) 0 nil])
([nil nil ((123 . 127)) nil (25832 34183 806902 676000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -124) (undo-tree-id21 . -1) (#("," 0 1 (part-side javascript)) . -125) (undo-tree-id22 . -1) (#(" " 0 1 (part-side javascript)) . -126) (undo-tree-id23 . -1) 127) nil (25832 34183 806901 234000) 0 nil])
([nil nil ((124 . 127)) nil (25832 34183 806896 683000) 0 nil])
([nil nil ((#("m" 0 1 (part-side javascript)) . -124) (undo-tree-id18 . -1) (#("," 0 1 (part-side javascript)) . -125) (undo-tree-id19 . -1) (#(" " 0 1 (part-side javascript)) . -126) (undo-tree-id20 . -1) 127) nil (25832 34183 806895 174000) 0 nil])
([nil nil ((124 . 132)) nil (25832 34183 806890 817000) 0 nil])
([nil nil ((132 . 135)) nil (25832 34183 806889 903000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -134) (undo-tree-id17 . -1) 135) nil (25832 34183 806888 814000) 0 nil])
([nil nil ((136 . 138) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -136) (135 . 137)) nil (25832 34183 806886 336000) 0 nil])
([nil nil ((139 . 143) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 138) (undo-tree-id15 . -4) (undo-tree-id16 . 6) (142 . 144) (137 . 143)) nil (25832 34183 806884 734000) 0 nil])
([nil nil ((144 . 145)) nil (25832 34183 806881 232000) 0 nil])
([nil nil ((65 . 66)) nil (25832 34183 806880 397000) 0 nil])
([nil nil ((nil rear-nonsticky nil 100 . 101) (nil part-side javascript 92 . 101) (nil part-side javascript 91 . 92) (nil face (rainbow-delimiters-depth-1-face) 91 . 92) (nil part-side javascript 90 . 91) (nil part-token string 90 . 91) (nil syntax-table (15) 90 . 91) (nil font-lock-face web-mode-javascript-string-face 90 . 91) (nil part-side javascript 84 . 90) (nil part-token string 84 . 90) (nil font-lock-face web-mode-javascript-string-face 84 . 90) (nil part-side javascript 83 . 84) (nil part-token string 83 . 84) (nil syntax-table (15) 83 . 84) (nil font-lock-face web-mode-javascript-string-face 83 . 84) (nil part-side javascript 82 . 83) (nil face (rainbow-delimiters-depth-1-face) 82 . 83) (nil part-side javascript 75 . 82) (nil face web-mode-function-call-face 75 . 82) (nil part-side javascript 72 . 75) (nil part-side javascript 70 . 72) (nil face web-mode-variable-name-face 70 . 72) (nil part-side javascript 69 . 70) (nil part-side javascript 66 . 69) (nil face web-mode-keyword-face 66 . 69) (66 . 101)) nil (25832 34183 806878 308000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript rear-nonsticky t)) . -100) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 101) nil (25832 34183 806872 255000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -99) (undo-tree-id12 . -1) 100) nil (25832 34183 806868 191000) 0 nil])
([nil nil ((171 . 178)) nil (25832 34183 806866 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 503 . 504) (nil part-side javascript 503 . 504) (nil part-side javascript 502 . 503) (nil face (rainbow-delimiters-depth-4-face) 502 . 503) (nil part-side javascript 501 . 502) (nil face (rainbow-delimiters-depth-5-face) 501 . 502) (nil part-side javascript 499 . 501) (nil part-side javascript 498 . 499) (nil face (rainbow-delimiters-depth-6-face) 498 . 499) (nil part-side javascript 483 . 498) (nil part-side javascript 482 . 483) (nil face (rainbow-delimiters-depth-6-face) 482 . 483) (nil part-side javascript 479 . 482) (nil face web-mode-function-call-face 479 . 482) (nil part-side javascript 466 . 479) (nil part-side javascript 465 . 466) (nil face (rainbow-delimiters-depth-5-face) 465 . 466) (nil part-side javascript 464 . 465) (nil part-side javascript 463 . 464) (nil face (rainbow-delimiters-depth-5-face) 463 . 464) (nil part-side javascript 457 . 463) (nil part-side javascript 456 . 457) (nil face (rainbow-delimiters-depth-5-face) 456 . 457) (nil part-side javascript 448 . 456) (nil face web-mode-keyword-face 448 . 456) (nil part-side javascript 446 . 448) (nil part-side javascript 445 . 446) (nil face (rainbow-delimiters-depth-5-face) 445 . 446) (nil part-side javascript 441 . 445) (nil part-side javascript 436 . 441) (nil face web-mode-variable-name-face 436 . 441) (nil part-side javascript 432 . 436) (nil part-side javascript 431 . 432) (nil face web-mode-variable-name-face 431 . 432) (nil part-side javascript 427 . 431) (nil part-side javascript 426 . 427) (nil face web-mode-variable-name-face 426 . 427) (nil part-side javascript 425 . 426) (nil part-side javascript 424 . 425) (nil face (rainbow-delimiters-depth-5-face) 424 . 425) (nil part-side javascript 423 . 424) (nil part-side javascript 422 . 423) (nil face (rainbow-delimiters-depth-5-face) 422 . 423) (nil part-side javascript 421 . 422) (nil part-side javascript 420 . 421) (nil face (rainbow-delimiters-depth-6-face) 420 . 421) (nil part-side javascript 406 . 420) (nil part-side javascript 400 . 406) (nil face web-mode-keyword-face 400 . 406) (nil part-side javascript 399 . 400) (nil part-side javascript 398 . 399) (nil face (rainbow-delimiters-depth-6-face) 398 . 399) (nil part-side javascript 397 . 398) (nil face (rainbow-delimiters-depth-6-face) 397 . 398) (nil part-side javascript 393 . 397) (nil part-side javascript 392 . 393) (nil face (rainbow-delimiters-depth-6-face) 392 . 393) (nil part-side javascript 384 . 392) (nil face web-mode-keyword-face 384 . 392) (nil part-side javascript 382 . 384) (nil part-side javascript 379 . 382) (nil face web-mode-function-name-face 379 . 382) (nil part-side javascript 373 . 379) (nil part-side javascript 372 . 373) (nil face (rainbow-delimiters-depth-6-face) 372 . 373) (nil part-side javascript 360 . 372) (nil part-side javascript 354 . 360) (nil face web-mode-keyword-face 354 . 360) (nil part-side javascript 353 . 354) (nil part-side javascript 352 . 353) (nil face (rainbow-delimiters-depth-6-face) 352 . 353) (nil part-side javascript 351 . 352) (nil face (rainbow-delimiters-depth-6-face) 351 . 352) (nil part-side javascript 347 . 351) (nil part-side javascript 346 . 347) (nil face (rainbow-delimiters-depth-6-face) 346 . 347) (nil part-side javascript 338 . 346) (nil face web-mode-keyword-face 338 . 346) (nil part-side javascript 336 . 338) (nil part-side javascript 333 . 336) (nil face web-mode-function-name-face 333 . 336) (nil part-side javascript 320 . 333) (nil part-side javascript 316 . 320) (nil face web-mode-variable-name-face 316 . 320) (nil part-side javascript 311 . 316) (nil part-side javascript 310 . 311) (nil face (rainbow-delimiters-depth-5-face) 310 . 311) (nil part-side javascript 309 . 310) (nil part-side javascript 308 . 309) (nil face (rainbow-delimiters-depth-5-face) 308 . 309) (nil part-side javascript 307 . 308) (nil part-side javascript 306 . 307) (nil face (rainbow-delimiters-depth-6-face) 306 . 307) (nil part-side javascript 291 . 306) (nil part-side javascript 285 . 291) (nil face web-mode-keyword-face 285 . 291) (nil part-side javascript 284 . 285) (nil part-side javascript 283 . 284) (nil face (rainbow-delimiters-depth-6-face) 283 . 284) (nil part-side javascript 282 . 283) (nil face (rainbow-delimiters-depth-6-face) 282 . 283) (nil part-side javascript 278 . 282) (nil part-side javascript 277 . 278) (nil face (rainbow-delimiters-depth-6-face) 277 . 278) (nil part-side javascript 269 . 277) (nil face web-mode-keyword-face 269 . 277) (nil part-side javascript 267 . 269) (nil part-side javascript 264 . 267) (nil face web-mode-function-name-face 264 . 267) (nil part-side javascript 258 . 264) (nil part-side javascript 257 . 258) (nil face (rainbow-delimiters-depth-6-face) 257 . 258) (nil part-side javascript 241 . 257) (nil part-side javascript 235 . 241) (nil face web-mode-keyword-face 235 . 241) (nil part-side javascript 234 . 235) (nil part-side javascript 233 . 234) (nil face (rainbow-delimiters-depth-6-face) 233 . 234) (nil part-side javascript 232 . 233) (nil face (rainbow-delimiters-depth-6-face) 232 . 233) (nil part-side javascript 228 . 232) (nil part-side javascript 227 . 228) (nil face (rainbow-delimiters-depth-6-face) 227 . 228) (nil part-side javascript 219 . 227) (nil face web-mode-keyword-face 219 . 227) (nil part-side javascript 217 . 219) (nil part-side javascript 214 . 217) (nil face web-mode-function-name-face 214 . 217) (nil part-side javascript 201 . 214) (nil part-side javascript 197 . 201) (nil face web-mode-variable-name-face 197 . 201) (nil part-side javascript 192 . 197) (nil part-side javascript 191 . 192) (nil face (rainbow-delimiters-depth-5-face) 191 . 192) (nil part-side javascript 190 . 191) (nil face (rainbow-delimiters-depth-4-face) 190 . 191) (nil part-side javascript 182 . 190) (nil face web-mode-function-name-face 182 . 190) (nil part-side javascript 178 . 182) (178 . 504)) nil (25832 34183 806858 414000) 0 nil])
([nil nil ((577 . 583) (527 . 547) (#("    " 0 4 (part-side javascript)) . 527) (490 . 508) (458 . 464) (407 . 415) (#("    " 0 4 (part-side javascript)) . 407) (357 . 365) (#("    " 0 4 (part-side javascript)) . 357) (336 . 344) (#("    " 0 4 (part-side javascript)) . 336) (326 . 332) (274 . 282) (#("    " 0 4 (part-side javascript)) . 274) (220 . 228) (#("    " 0 4 (part-side javascript)) . 220) (199 . 207) (#("    " 0 4 (part-side javascript)) . 199) (179 . 185)) nil (25832 34183 806827 767000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -213) (undo-tree-id7 . -1) (#("o" 0 1 (part-side javascript)) . -214) (undo-tree-id8 . -1) (#("o" 0 1 (part-side javascript)) . -215) (undo-tree-id9 . -1) (#("t" 0 1 (part-side javascript)) . -216) (undo-tree-id10 . -1) (#("1" 0 1 (part-side javascript)) . -217) (undo-tree-id11 . -1) 218) nil (25832 34183 806822 277000) 0 nil])
([nil nil ((nil rear-nonsticky nil 220 . 221) (nil part-side javascript 213 . 221) (213 . 221)) nil (25832 34183 806815 206000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -353) (undo-tree-id2 . -1) (#("o" 0 1 (part-side javascript)) . -354) (undo-tree-id3 . -1) (#("o" 0 1 (part-side javascript)) . -355) (undo-tree-id4 . -1) (#("t" 0 1 (part-side javascript)) . -356) (undo-tree-id5 . -1) (#("2" 0 1 (part-side javascript)) . -357) (undo-tree-id6 . -1) 358) nil (25832 34183 806812 602000) 0 nil])
([nil nil ((nil rear-nonsticky nil 360 . 361) (nil part-side javascript 353 . 361) (353 . 361)) nil (25832 34183 808718 560000) 0 nil])
([nil nil ((#("kiddos" 0 6 (part-side javascript)) . 454) (undo-tree-id64 . -6) (undo-tree-id65 . -6)) nil (25832 36250 503825 10000) 0 nil] [nil nil ((493 . 499) (#(" " 0 1 (part-side javascript)) . 492) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (493 . 494)) ((#("
" 0 1 (part-side javascript)) . 493) (492 . 493) (#("      " 0 6 (part-side javascript)) . 493)) (25832 34183 806798 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 458 . 459) (nil part-side javascript 454 . 459) (454 . 459)) nil (25832 36250 503822 25000) 0 nil])
nil
([nil nil ((#("thekids" 0 7 (part-side javascript)) . 318) (undo-tree-id62 . -7) (undo-tree-id63 . -7)) nil (25832 36250 503820 379000) 0 nil])
([nil nil ((nil rear-nonsticky nil 322 . 323) (nil part-side javascript 318 . 323) (318 . 323)) nil (25832 36250 503817 319000) 0 nil])
([nil nil ((#("thelabel" 0 8 (part-side javascript)) . 264) (undo-tree-id60 . -8) (undo-tree-id61 . -8)) nil (25832 36250 503815 286000) 0 nil])
([nil nil ((264 . 268)) nil (25832 36250 503812 0) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -398) (undo-tree-id56 . -1) (#("a" 0 1 (part-side javascript)) . -399) (undo-tree-id57 . -1) (#("m" 0 1 (part-side javascript)) . -400) (undo-tree-id58 . -1) (#("e" 0 1 (part-side javascript)) . -401) (undo-tree-id59 . -1) 402) nil (25832 36250 503809 952000) 0 nil])
([nil nil ((398 . 402)) nil (25832 36250 503804 176000) 0 nil])
([nil nil ((558 . 560)) nil (25832 36250 503803 316000) 0 nil])
([nil nil ((559 . 568)) nil (25832 36250 503802 412000) 0 nil])
([nil nil ((#("E" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -567) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 568) nil (25832 36250 503801 121000) 0 nil])
([nil nil ((567 . 568)) nil (25832 36250 503797 767000) 0 nil])
([nil nil ((#("R" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -566) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -567) (undo-tree-id53 . -1) 568) nil (25832 36250 503796 407000) 0 nil])
([nil nil ((566 . 575)) nil (25832 36250 503791 334000) 0 nil])
([nil nil ((#("C" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -566) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("O" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -567) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("M" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -568) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("P" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -569) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("A" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -570) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("R" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -571) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("E" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -572) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("D" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -573) (undo-tree-id49 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -574) (undo-tree-id50 . -1) 575) nil (25832 36250 503787 884000) 0 nil])
([nil nil ((566 . 575)) nil (25832 36250 503765 519000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -574) (undo-tree-id31 . -1) 575) nil (25832 36250 503763 569000) 0 nil])
([nil nil ((575 . 577)) nil (25832 36250 503759 889000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -172) (undo-tree-id30 . -6) 171) nil (25832 36250 503754 492000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript rear-nonsticky t)) . -597) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 598 (t 25832 36250 512441 677000)) nil (25832 36264 499673 813000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -587) (undo-tree-id71 . -1) 588) nil (25832 36264 499669 697000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -447) (undo-tree-id70 . -1) 448) nil (25832 36264 499667 309000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -396) (undo-tree-id69 . -1) 397) nil (25832 36264 499664 483000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -313) (undo-tree-id68 . -1) 314) nil (25832 36264 499661 28000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -262) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 263) nil (25832 36264 499654 155000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 592) (undo-tree-id75 . -1) (t 25832 36264 502442 5000)) nil (25832 36274 528189 737000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 171) (undo-tree-id74 . -1)) nil (25832 36274 528182 499000) 0 nil])
([nil nil ((171 . 178) (t 25832 36274 541089 468000)) nil (25832 36452 827939 803000) 0 nil])
([nil nil ((178 . 182)) nil (25832 36452 827938 624000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -180) (undo-tree-id78 . -1) (#("n" 0 1 (part-side javascript)) . -181) (undo-tree-id79 . -1) 182) nil (25832 36452 827937 245000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 191) (190 . 191) (189 . 191) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -189) (180 . 190)) nil (25832 36452 827933 103000) 0 nil])
([nil nil ((191 . 199) (nil part-token string 191 . 192) (nil font-lock-face web-mode-javascript-string-face 191 . 192) (nil part-side javascript 191 . 192) (190 . 192) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -190) (190 . 191)) nil (25832 36452 827931 60000) 0 nil])
([nil nil ((200 . 210)) nil (25832 36452 827928 992000) 0 nil])
([nil nil ((211 . 218)) nil (25832 36452 827928 146000) 0 nil])
([nil nil ((218 . 223)) nil (25832 36452 827927 213000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 231) (230 . 231) (229 . 231) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -229) (223 . 230)) nil (25832 36452 827925 774000) 0 nil])
([nil nil ((231 . 241) (nil part-token string 231 . 232) (nil font-lock-face web-mode-javascript-string-face 231 . 232) (nil part-side javascript 231 . 232) (230 . 232) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -230) (230 . 231)) nil (25832 36452 827923 325000) 0 nil])
([nil nil ((#("," 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -239) (undo-tree-id76 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -240) (undo-tree-id77 . -1) 241) nil (25832 36452 827919 325000) 0 nil])
([nil nil ((240 . 250)) nil (25832 36452 827902 897000) 0 nil])
([nil nil ((662 . 683) (t 25832 36452 837989 798000)) nil (25832 38161 183553 669000) 0 nil])
([nil nil ((683 . 704)) nil (25832 38161 183551 977000) 0 nil])
([nil nil ((704 . 706)) nil (25832 38161 183550 84000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -705) (undo-tree-id80 . -1) 706) nil (25832 38161 183544 370000) 0 nil])
([nil nil ((#("
                    console.log('FILTER COMPARED', result.distance)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 29 (part-side javascript) 29 32 (face web-mode-function-call-face part-side javascript) 32 33 (face (rainbow-delimiters-depth-6-face) part-side javascript) 33 34 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 34 49 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 49 50 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 50 52 (part-side javascript) 52 67 (part-side javascript) 67 68 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 594) (undo-tree-id84 . -68) (undo-tree-id85 . -50) (undo-tree-id86 . -68) (undo-tree-id87 . -68) (undo-tree-id88 . -1) (undo-tree-id89 . -68) (t 25832 38161 189593 95000)) nil (25832 38364 729366 414000) 0 nil])
([nil nil ((#("
      console.log(\"Filter A\", filter_a)
      console.log(\"Filter B\", filter_b)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 28 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 28 29 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 29 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-4-face) part-side javascript) 40 41 (part-side javascript) 41 55 (part-side javascript) 55 58 (face web-mode-function-call-face part-side javascript) 58 59 (face (rainbow-delimiters-depth-4-face) part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 68 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 68 69 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 69 79 (part-side javascript) 79 80 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 171) (undo-tree-id81 . -80) (undo-tree-id82 . -1) (undo-tree-id83 . -80)) nil (25832 38364 729357 507000) 0 nil])
([nil nil ((514 . 535)) nil (25832 38364 729344 38000) 0 nil])
([nil nil ((546 . 548) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -546) (535 . 547)) nil (25832 38364 729341 429000) 0 nil])
([nil nil ((547 . 553)) nil (25832 38364 729332 798000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -588) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("d" 0 1 (part-side javascript)) . -589) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("i" 0 1 (part-side javascript)) . -590) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("s" 0 1 (part-side javascript)) . -591) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("t" 0 1 (part-side javascript)) . -592) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("a" 0 1 (part-side javascript)) . -593) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("n" 0 1 (part-side javascript)) . -594) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("c" 0 1 (part-side javascript)) . -595) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("e" 0 1 (part-side javascript)) . -596) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 597 (t 25832 38364 737494 514000)) nil (25832 38516 769323 509000) 0 nil])
([nil nil ((178 . 197) (t 25832 38516 776766 692000)) nil (25832 39430 362325 150000) 0 nil])
([nil nil ((497 . 534) (#("                  " 0 18 (part-side javascript)) . 497) (undo-tree-id135 . -9) 506) nil (25832 39430 362323 229000) 0 nil])
([nil nil ((553 . 592) (#("                    " 0 20 (part-side javascript)) . 553) 590) nil (25832 39430 362320 91000) 0 nil])
([nil nil ((612 . 651) (#("                    " 0 20 (part-side javascript)) . 612) 645) nil (25832 39431 916131 998000) 0 nil])
([nil nil ((#("const comp_value =" 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript) 6 16 (face web-mode-variable-name-face part-side javascript) 16 18 (part-side javascript)) . 178) (undo-tree-id234 . -18) (undo-tree-id235 . -18)) nil (25832 39442 337696 813000) 0 nil] [nil nil ((673 . 680)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 673) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -1) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -7) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -7) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (undo-tree-id210 . -7) (undo-tree-id211 . -7) (undo-tree-id212 . -7) (undo-tree-id213 . -7) (undo-tree-id214 . -7) (undo-tree-id215 . -7) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -7) (undo-tree-id227 . -7) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7)) (25832 39431 433015 800000) 0 nil])
([nil nil ((178 . 185)) nil (25832 39442 337692 256000) 0 nil])
([nil nil ((680 . 688)) ((#("retirmn " 0 3 (part-side javascript) 3 4 (part-side javascript) 4 5 (part-side javascript) 5 6 (part-side javascript) 6 7 (part-side javascript) 7 8 (part-side javascript)) . 680) (undo-tree-id150 . -4) (undo-tree-id151 . -8) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -7) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (undo-tree-id183 . -8) (undo-tree-id184 . -8) (undo-tree-id185 . -8)) (25832 39431 117730 38000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -184) (undo-tree-id233 . -1) 185) nil (25832 39442 337690 592000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -683) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("r" 0 1 (part-side javascript)) . -684) (undo-tree-id131 . -1) (#("m" 0 1 (part-side javascript)) . -685) (undo-tree-id132 . -1) (#("n" 0 1 (part-side javascript)) . -686) (undo-tree-id133 . -1) (#(" " 0 1 (part-side javascript)) . -687) (undo-tree-id134 . -1) 688) ((683 . 688)) (25832 39430 683956 858000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -510) 497) nil (25832 39442 337680 472000) 0 nil])
([nil nil ((683 . 698)) ((#("urn comp_value " 0 3 (face web-mode-keyword-face part-side javascript) 3 14 (part-side javascript) 14 15 (part-side javascript)) . 683) (undo-tree-id136 . -13) (undo-tree-id137 . -15) (undo-tree-id138 . -14) (undo-tree-id139 . -15) (undo-tree-id140 . -15) (undo-tree-id141 . -15) (undo-tree-id142 . -15) (undo-tree-id143 . -15) (undo-tree-id144 . -15) (undo-tree-id145 . -15) (undo-tree-id146 . -15) (undo-tree-id147 . -15) (undo-tree-id148 . -15) (undo-tree-id149 . -15)) (25832 39430 363283 74000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -615) 613) nil (25832 39442 337677 330000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -697) (undo-tree-id128 . -1) 698) ((697 . 698)) (25832 39430 362294 112000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -556)) nil (25832 39442 337669 480000) 0 nil])
nil
([nil nil ((#("r" 0 1 (part-side javascript)) . -178) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("e" 0 1 (part-side javascript)) . -179) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("t" 0 1 (part-side javascript)) . -180) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("u" 0 1 (part-side javascript)) . -181) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("r" 0 1 (part-side javascript)) . -182) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("n" 0 1 (face web-mode-keyword-face part-side javascript)) . -183) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 184 (t 25832 39442 342715 663000)) nil (25832 39623 714172 411000) 0 nil])
([nil nil ((178 . 187)) nil (25832 39623 714152 709000) 0 nil])
([nil nil ((#("o" 0 1 (face web-mode-variable-name-face part-side javascript)) . -184) (undo-tree-id251 . -1) (#("m" 0 1 (face web-mode-variable-name-face part-side javascript)) . -185) (undo-tree-id252 . -1) (#("p" 0 1 (face web-mode-variable-name-face part-side javascript)) . -186) (undo-tree-id253 . -1) 187) nil (25832 39623 714150 867000) 0 nil])
([nil nil ((184 . 191)) nil (25832 39623 714145 326000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -189) (undo-tree-id249 . -1) (#(" " 0 1 (part-side javascript)) . -190) (undo-tree-id250 . -1) 191) nil (25832 39623 714143 887000) 0 nil])
([nil nil ((189 . 191)) nil (25832 39623 714140 69000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . -189) (undo-tree-id247 . -1) (#(" " 0 1 (part-side javascript)) . -190) (undo-tree-id248 . -1) 191) nil (25832 39623 714138 469000) 0 nil])
([nil nil ((189 . 191)) nil (25832 39623 714134 764000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -190) (undo-tree-id246 . -1) 191) nil (25832 39623 714133 345000) 0 nil])
([nil nil ((631 . 638)) nil (25832 39623 714130 811000) 0 nil])
([nil nil ((638 . 650)) nil (25832 39623 714129 697000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -649) (undo-tree-id245 . -1) 650) nil (25832 39623 714128 338000) 0 nil])
([nil nil ((631 . 638)) nil (25832 39623 714125 407000) 0 nil])
([nil nil ((651 . 655) (nil part-token string 651 . 652) (nil font-lock-face web-mode-javascript-string-face 651 . 652) (nil part-side javascript 651 . 652) (650 . 652) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -650) (650 . 651) (649 . 651) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -649) (638 . 650)) nil (25832 39623 714123 515000) 0 nil])
([nil nil ((656 . 660)) nil (25832 39623 714119 732000) 0 nil])
([nil nil ((660 . 663)) nil (25832 39623 714117 867000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -662) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 663) nil (25832 39623 714111 860000) 0 nil])
([nil nil ((#("
      console.log(\"Comp\", comp)
      return comp" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 25 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-4-face) part-side javascript) 32 33 (part-side javascript) 33 39 (part-side javascript) 39 45 (face web-mode-keyword-face part-side javascript) 45 50 (part-side javascript)) . 631) (undo-tree-id272 . -50) (undo-tree-id273 . -30) (undo-tree-id274 . -31) (undo-tree-id275 . -1) (undo-tree-id276 . -50) (t 25832 39623 718338 838000)) nil (25832 39915 209997 294000) 0 nil])
([nil nil ((#("const comp = " 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript) 6 10 (face web-mode-variable-name-face part-side javascript) 10 12 (part-side javascript) 12 13 (part-side javascript)) . 178) (undo-tree-id269 . -13) (undo-tree-id270 . -13) (undo-tree-id271 . -13)) nil (25832 39915 209988 378000) 0 nil])
([nil nil ((178 . 191)) nil (25832 39915 209971 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 139 . 140) (nil part-side javascript 135 . 140) (nil face web-mode-function-name-face 135 . 140) (135 . 140) (t 25832 39915 214703 908000)) nil (25832 39970 544025 799000) 0 nil])
([nil nil ((140 . 141)) nil (25832 39970 544013 211000) 0 nil])
([nil nil ((#("return await" 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript) 7 12 (face web-mode-keyword-face part-side javascript)) . 184) (undo-tree-id354 . -12) (undo-tree-id355 . -12) (undo-tree-id356 . -12) (t 25832 39970 553825 857000)) nil (25832 40553 100017 500000) 0 nil])
([nil nil ((181 . 187) (#("      " 0 6 (part-side javascript)) . 180) (undo-tree-id351 . -6) (180 . 187) (#("      " 0 6 (part-side javascript)) . 179) (undo-tree-id352 . -6) (179 . 186) (#("      " 0 6 (part-side javascript)) . 178) (undo-tree-id353 . -6) (177 . 185)) nil (25832 40553 100010 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 468 . 469) (nil part-side javascript 468 . 469) (nil face (rainbow-delimiters-depth-4-face) 468 . 469) (nil part-side javascript 464 . 468) (nil part-side javascript 463 . 464) (nil face (rainbow-delimiters-depth-5-face) 463 . 464) (nil part-side javascript 458 . 463) (nil part-side javascript 457 . 458) (nil face (rainbow-delimiters-depth-5-face) 457 . 458) (nil part-side javascript 454 . 457) (nil face web-mode-function-call-face 454 . 457) (nil part-side javascript 441 . 454) (nil part-side javascript 440 . 441) (nil face (rainbow-delimiters-depth-4-face) 440 . 441) (nil part-side javascript 439 . 440) (nil part-side javascript 438 . 439) (nil face (rainbow-delimiters-depth-4-face) 438 . 439) (nil part-side javascript 433 . 438) (nil part-side javascript 432 . 433) (nil face (rainbow-delimiters-depth-4-face) 432 . 433) (nil part-side javascript 431 . 432) (nil part-side javascript 426 . 431) (nil face web-mode-keyword-face 426 . 431) (nil part-side javascript 425 . 426) (nil part-side javascript 424 . 425) (nil face (rainbow-delimiters-depth-4-face) 424 . 425) (nil part-side javascript 407 . 424) (nil part-side javascript 401 . 407) (nil face web-mode-keyword-face 401 . 407) (nil part-side javascript 395 . 401) (nil part-side javascript 394 . 395) (nil face (rainbow-delimiters-depth-5-face) 394 . 395) (nil part-side javascript 393 . 394) (nil face (rainbow-delimiters-depth-6-face) 393 . 394) (nil part-side javascript 387 . 393) (nil part-side javascript 386 . 387) (nil face (rainbow-delimiters-depth-7-face) 386 . 387) (nil part-side javascript 385 . 386) (nil face (rainbow-delimiters-depth-8-face) 385 . 386) (nil part-side javascript 377 . 385) (nil part-side javascript 376 . 377) (nil face (rainbow-delimiters-depth-9-face) 376 . 377) (nil part-side javascript 372 . 376) (nil part-side javascript 371 . 372) (nil face (rainbow-delimiters-depth-9-face) 371 . 372) (nil part-side javascript 364 . 371) (nil face web-mode-function-call-face 364 . 371) (nil part-side javascript 354 . 364) (nil part-side javascript 353 . 354) (nil face (rainbow-delimiters-depth-9-face) 353 . 354) (nil part-side javascript 343 . 353) (nil part-side javascript 337 . 343) (nil face web-mode-keyword-face 337 . 343) (nil part-side javascript 325 . 337) (nil part-side javascript 324 . 325) (nil face (rainbow-delimiters-depth-1-face) 324 . 325) (nil part-side javascript 321 . 324) (nil part-side javascript 320 . 321) (nil face (rainbow-delimiters-depth-1-face) 320 . 321) (nil part-side javascript 314 . 320) (nil face web-mode-function-call-face 314 . 320) (nil part-side javascript 303 . 314) (nil part-side javascript 302 . 303) (nil face (rainbow-delimiters-depth-9-face) 302 . 303) (nil part-side javascript 301 . 302) (nil part-side javascript 300 . 301) (nil face (rainbow-delimiters-depth-9-face) 300 . 301) (nil part-side javascript 297 . 300) (nil part-side javascript 296 . 297) (nil face (rainbow-delimiters-depth-9-face) 296 . 297) (nil part-side javascript 295 . 296) (nil part-side javascript 293 . 295) (nil face web-mode-keyword-face 293 . 295) (nil part-side javascript 284 . 293) (nil part-side javascript 283 . 284) (nil face (rainbow-delimiters-depth-8-face) 283 . 284) (nil part-side javascript 279 . 283) (nil part-side javascript 278 . 279) (nil face (rainbow-delimiters-depth-8-face) 278 . 279) (nil part-side javascript 269 . 278) (nil part-side javascript 268 . 269) (nil face (rainbow-delimiters-depth-8-face) 268 . 269) (nil part-side javascript 260 . 268) (nil part-side javascript 259 . 260) (nil face (rainbow-delimiters-depth-7-face) 259 . 260) (nil part-side javascript 250 . 259) (nil face web-mode-function-call-face 250 . 259) (nil part-side javascript 243 . 250) (nil part-side javascript 242 . 243) (nil face (rainbow-delimiters-depth-6-face) 242 . 243) (nil part-side javascript 238 . 242) (nil part-side javascript 237 . 238) (nil face (rainbow-delimiters-depth-6-face) 237 . 238) (nil part-side javascript 222 . 237) (nil part-side javascript 221 . 222) (nil face (rainbow-delimiters-depth-6-face) 221 . 222) (nil part-side javascript 220 . 221) (nil face (rainbow-delimiters-depth-5-face) 220 . 221) (nil part-side javascript 213 . 220) (nil face web-mode-type-face 213 . 220) (nil part-side javascript 212 . 213) (nil part-side javascript 209 . 212) (nil face web-mode-keyword-face 209 . 212) (nil part-side javascript 208 . 209) (nil part-side javascript 203 . 208) (nil face web-mode-keyword-face 203 . 208) (nil part-side javascript 200 . 203) (nil part-side javascript 196 . 200) (nil face web-mode-variable-name-face 196 . 200) (nil part-side javascript 195 . 196) (nil part-side javascript 190 . 195) (nil face web-mode-keyword-face 190 . 195) (nil part-side javascript 185 . 190) (nil part-side javascript 184 . 185) (nil face (rainbow-delimiters-depth-4-face) 184 . 185) (nil part-side javascript 183 . 184) (nil part-side javascript 180 . 183) (nil face web-mode-keyword-face 180 . 183) (nil part-side javascript 178 . 180) (178 . 469)) nil (25832 40553 99997 982000) 0 nil])
([nil nil ((520 . 524) (490 . 498) (#("    " 0 4 (part-side javascript)) . 490) (468 . 472) (437 . 445) (#("    " 0 4 (part-side javascript)) . 437) (425 . 433) (#("    " 0 4 (part-side javascript)) . 425) (411 . 421) (#("      " 0 6 (part-side javascript)) . 411) (392 . 396) (377 . 381) (357 . 361) (330 . 334) (305 . 309) (252 . 262) (#("      " 0 6 (part-side javascript)) . 252) (190 . 198) (#("    " 0 4 (part-side javascript)) . 190) (180 . 184) 178) nil (25832 40553 99959 636000) 0 nil])
([nil nil ((#("       jq.distance({
        root: filter_a,
        lfn: function(node){ return node.type },
        cfn: function(node){ return node.rules }
      },{
        root: filter_b,
        lfn: function(node){ return node.type },
        cfn: function(node){ return node.rules }
      },{ p:2, q:3, depth:10 },
                         function(result) {
                           console.log(result)
                           return result
      })" 0 6 (part-side javascript) 6 7 (part-side javascript) 7 9 (part-side javascript) 9 10 (part-side javascript) 10 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (face (rainbow-delimiters-depth-5-face) part-side javascript) 20 21 (part-side javascript) 21 29 (part-side javascript) 29 33 (face web-mode-variable-name-face part-side javascript) 33 35 (part-side javascript) 35 42 (part-side javascript) 42 43 (part-side javascript rear-nonsticky t) 43 53 (part-side javascript) 53 56 (face web-mode-function-name-face part-side javascript) 56 58 (part-side javascript) 58 66 (face web-mode-keyword-face part-side javascript) 66 67 (face (rainbow-delimiters-depth-6-face) part-side javascript) 67 71 (part-side javascript) 71 72 (face (rainbow-delimiters-depth-6-face) part-side javascript) 72 73 (face (rainbow-delimiters-depth-6-face) part-side javascript) 73 74 (part-side javascript) 74 80 (face web-mode-keyword-face part-side javascript) 80 91 (part-side javascript) 91 92 (face (rainbow-delimiters-depth-6-face) part-side javascript) 92 102 (part-side javascript) 102 105 (face web-mode-function-name-face part-side javascript) 105 107 (part-side javascript) 107 115 (face web-mode-keyword-face part-side javascript) 115 116 (face (rainbow-delimiters-depth-6-face) part-side javascript) 116 120 (part-side javascript) 120 121 (face (rainbow-delimiters-depth-6-face) part-side javascript) 121 122 (face (rainbow-delimiters-depth-6-face) part-side javascript) 122 123 (part-side javascript) 123 129 (face web-mode-keyword-face part-side javascript) 129 135 (part-side javascript) 135 139 (part-side javascript) 139 140 (part-side javascript rear-nonsticky t) 140 141 (part-side javascript) 141 142 (face (rainbow-delimiters-depth-6-face) part-side javascript) 142 143 (part-side javascript) 143 149 (part-side javascript) 149 150 (face (rainbow-delimiters-depth-5-face) part-side javascript) 150 151 (part-side javascript) 151 152 (face (rainbow-delimiters-depth-5-face) part-side javascript) 152 153 (part-side javascript) 153 161 (part-side javascript) 161 165 (face web-mode-variable-name-face part-side javascript) 165 167 (part-side javascript) 167 174 (part-side javascript) 174 175 (part-side javascript rear-nonsticky t) 175 185 (part-side javascript) 185 188 (face web-mode-function-name-face part-side javascript) 188 190 (part-side javascript) 190 198 (face web-mode-keyword-face part-side javascript) 198 199 (face (rainbow-delimiters-depth-6-face) part-side javascript) 199 203 (part-side javascript) 203 204 (face (rainbow-delimiters-depth-6-face) part-side javascript) 204 205 (face (rainbow-delimiters-depth-6-face) part-side javascript) 205 206 (part-side javascript) 206 212 (face web-mode-keyword-face part-side javascript) 212 223 (part-side javascript) 223 224 (face (rainbow-delimiters-depth-6-face) part-side javascript) 224 234 (part-side javascript) 234 237 (face web-mode-function-name-face part-side javascript) 237 239 (part-side javascript) 239 247 (face web-mode-keyword-face part-side javascript) 247 248 (face (rainbow-delimiters-depth-6-face) part-side javascript) 248 252 (part-side javascript) 252 253 (face (rainbow-delimiters-depth-6-face) part-side javascript) 253 254 (face (rainbow-delimiters-depth-6-face) part-side javascript) 254 255 (part-side javascript) 255 261 (face web-mode-keyword-face part-side javascript) 261 267 (part-side javascript) 267 271 (part-side javascript) 271 272 (part-side javascript rear-nonsticky t) 272 273 (part-side javascript) 273 274 (face (rainbow-delimiters-depth-6-face) part-side javascript) 274 275 (part-side javascript) 275 281 (part-side javascript) 281 282 (face (rainbow-delimiters-depth-5-face) part-side javascript) 282 283 (part-side javascript) 283 284 (face (rainbow-delimiters-depth-5-face) part-side javascript) 284 285 (part-side javascript) 285 286 (face web-mode-variable-name-face part-side javascript) 286 290 (part-side javascript) 290 291 (face web-mode-variable-name-face part-side javascript) 291 295 (part-side javascript) 295 300 (face web-mode-variable-name-face part-side javascript) 300 303 (part-side javascript) 303 304 (part-side javascript) 304 305 (face (rainbow-delimiters-depth-5-face) part-side javascript) 305 332 (part-side javascript) 332 340 (face web-mode-keyword-face part-side javascript) 340 341 (face (rainbow-delimiters-depth-5-face) part-side javascript) 341 347 (part-side javascript) 347 348 (face (rainbow-delimiters-depth-5-face) part-side javascript) 348 349 (part-side javascript) 349 350 (face (rainbow-delimiters-depth-5-face) part-side javascript) 350 351 (part-side javascript) 351 378 (part-side javascript) 378 386 (part-side javascript) 386 389 (face web-mode-function-call-face part-side javascript) 389 390 (face (rainbow-delimiters-depth-6-face) part-side javascript) 390 396 (part-side javascript) 396 397 (face (rainbow-delimiters-depth-6-face) part-side javascript) 397 398 (part-side javascript) 398 425 (part-side javascript) 425 431 (face web-mode-keyword-face part-side javascript) 431 438 (part-side javascript) 438 439 (part-side javascript) 439 445 (part-side javascript) 445 446 (face (rainbow-delimiters-depth-5-face) part-side javascript) 446 447 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 535) (undo-tree-id334 . -447) (undo-tree-id335 . -350) (undo-tree-id336 . -447) (undo-tree-id337 . -350) (undo-tree-id338 . -350) (undo-tree-id339 . -438) (undo-tree-id340 . -6) (undo-tree-id341 . -6) (undo-tree-id342 . -397) (undo-tree-id343 . -447) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -21) (undo-tree-id349 . -6) (undo-tree-id350 . -447)) nil (25832 40553 99951 524000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -533) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("
" 0 1 (part-side javascript)) . -534) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 535) nil (25832 40553 99802 297000) 0 nil])
([nil nil ((#("          fetchUser(userId, (err, user) => {
            if (err) {
              reject(err);
              return;
            }

            resolve(user);
          });" 0 10 (part-side javascript) 10 19 (face web-mode-function-call-face part-side javascript) 19 20 (face (rainbow-delimiters-depth-7-face) part-side javascript) 20 28 (part-side javascript) 28 29 (face (rainbow-delimiters-depth-8-face) part-side javascript) 29 38 (part-side javascript) 38 39 (face (rainbow-delimiters-depth-8-face) part-side javascript) 39 43 (part-side javascript) 43 44 (face (rainbow-delimiters-depth-8-face) part-side javascript) 44 45 (part-side javascript) 45 57 (part-side javascript) 57 59 (face web-mode-keyword-face part-side javascript) 59 60 (part-side javascript) 60 61 (face (rainbow-delimiters-depth-9-face) part-side javascript) 61 64 (part-side javascript) 64 65 (face (rainbow-delimiters-depth-9-face) part-side javascript) 65 66 (part-side javascript) 66 67 (face (rainbow-delimiters-depth-9-face) part-side javascript) 67 68 (part-side javascript) 68 82 (part-side javascript) 82 88 (face web-mode-function-call-face part-side javascript) 88 89 (face (rainbow-delimiters-depth-1-face) part-side javascript) 89 92 (part-side javascript) 92 93 (face (rainbow-delimiters-depth-1-face) part-side javascript) 93 95 (part-side javascript) 95 109 (part-side javascript) 109 115 (face web-mode-keyword-face part-side javascript) 115 117 (part-side javascript) 117 129 (part-side javascript) 129 130 (face (rainbow-delimiters-depth-9-face) part-side javascript) 130 131 (part-side javascript) 131 144 (part-side javascript) 144 151 (face web-mode-function-call-face part-side javascript) 151 152 (face (rainbow-delimiters-depth-9-face) part-side javascript) 152 156 (part-side javascript) 156 157 (face (rainbow-delimiters-depth-9-face) part-side javascript) 157 159 (part-side javascript) 159 169 (part-side javascript) 169 170 (face (rainbow-delimiters-depth-8-face) part-side javascript) 170 171 (face (rainbow-delimiters-depth-7-face) part-side javascript) 171 172 (part-side javascript)) . 252) (undo-tree-id298 . -172) (undo-tree-id299 . -45) (undo-tree-id300 . -172)) nil (25832 40553 99761 156000) 0 nil])
([nil nil ((nil rear-nonsticky nil 698 . 699) (nil part-side javascript 698 . 699) (nil face (rainbow-delimiters-depth-7-face) 698 . 699) (nil part-side javascript 697 . 698) (nil face (rainbow-delimiters-depth-8-face) 697 . 698) (nil part-side javascript 691 . 697) (nil part-side javascript 690 . 691) (nil part-side javascript 683 . 690) (nil part-side javascript 677 . 683) (nil face web-mode-keyword-face 677 . 683) (nil part-side javascript 650 . 677) (nil part-side javascript 649 . 650) (nil part-side javascript 648 . 649) (nil face (rainbow-delimiters-depth-9-face) 648 . 649) (nil part-side javascript 642 . 648) (nil part-side javascript 641 . 642) (nil face (rainbow-delimiters-depth-9-face) 641 . 642) (nil part-side javascript 638 . 641) (nil face web-mode-function-call-face 638 . 641) (nil part-side javascript 630 . 638) (nil part-side javascript 603 . 630) (nil part-side javascript 602 . 603) (nil part-side javascript 601 . 602) (nil face (rainbow-delimiters-depth-8-face) 601 . 602) (nil part-side javascript 600 . 601) (nil part-side javascript 599 . 600) (nil face (rainbow-delimiters-depth-8-face) 599 . 600) (nil part-side javascript 593 . 599) (nil part-side javascript 592 . 593) (nil face (rainbow-delimiters-depth-8-face) 592 . 593) (nil part-side javascript 584 . 592) (nil face web-mode-keyword-face 584 . 592) (nil part-side javascript 557 . 584) (nil part-side javascript 556 . 557) (nil face (rainbow-delimiters-depth-8-face) 556 . 557) (nil part-side javascript 555 . 556) (nil part-side javascript 552 . 555) (nil part-side javascript 547 . 552) (nil face web-mode-variable-name-face 547 . 552) (nil part-side javascript 543 . 547) (nil part-side javascript 542 . 543) (nil face web-mode-variable-name-face 542 . 543) (nil part-side javascript 538 . 542) (nil part-side javascript 537 . 538) (nil face web-mode-variable-name-face 537 . 538) (nil part-side javascript 536 . 537) (nil part-side javascript 535 . 536) (nil face (rainbow-delimiters-depth-8-face) 535 . 536) (nil part-side javascript 534 . 535) (nil part-side javascript 533 . 534) (nil face (rainbow-delimiters-depth-8-face) 533 . 534) (nil part-side javascript 527 . 533) (nil part-side javascript 526 . 527) (nil part-side javascript 525 . 526) (nil face (rainbow-delimiters-depth-9-face) 525 . 526) (nil part-side javascript 524 . 525) (nil rear-nonsticky t 523 . 524) (nil part-side javascript 523 . 524) (nil part-side javascript 519 . 523) (nil part-side javascript 513 . 519) (nil part-side javascript 507 . 513) (nil face web-mode-keyword-face 507 . 513) (nil part-side javascript 506 . 507) (nil part-side javascript 505 . 506) (nil face (rainbow-delimiters-depth-9-face) 505 . 506) (nil part-side javascript 504 . 505) (nil face (rainbow-delimiters-depth-9-face) 504 . 505) (nil part-side javascript 500 . 504) (nil part-side javascript 499 . 500) (nil face (rainbow-delimiters-depth-9-face) 499 . 500) (nil part-side javascript 491 . 499) (nil face web-mode-keyword-face 491 . 499) (nil part-side javascript 489 . 491) (nil part-side javascript 486 . 489) (nil face web-mode-function-name-face 486 . 489) (nil part-side javascript 476 . 486) (nil part-side javascript 475 . 476) (nil face (rainbow-delimiters-depth-9-face) 475 . 476) (nil part-side javascript 464 . 475) (nil part-side javascript 458 . 464) (nil face web-mode-keyword-face 458 . 464) (nil part-side javascript 457 . 458) (nil part-side javascript 456 . 457) (nil face (rainbow-delimiters-depth-9-face) 456 . 457) (nil part-side javascript 455 . 456) (nil face (rainbow-delimiters-depth-9-face) 455 . 456) (nil part-side javascript 451 . 455) (nil part-side javascript 450 . 451) (nil face (rainbow-delimiters-depth-9-face) 450 . 451) (nil part-side javascript 442 . 450) (nil face web-mode-keyword-face 442 . 450) (nil part-side javascript 440 . 442) (nil part-side javascript 437 . 440) (nil face web-mode-function-name-face 437 . 440) (nil part-side javascript 427 . 437) (nil rear-nonsticky t 426 . 427) (nil part-side javascript 426 . 427) (nil part-side javascript 419 . 426) (nil part-side javascript 417 . 419) (nil part-side javascript 413 . 417) (nil face web-mode-variable-name-face 413 . 417) (nil part-side javascript 405 . 413) (nil part-side javascript 404 . 405) (nil part-side javascript 403 . 404) (nil face (rainbow-delimiters-depth-8-face) 403 . 404) (nil part-side javascript 402 . 403) (nil part-side javascript 401 . 402) (nil face (rainbow-delimiters-depth-8-face) 401 . 402) (nil part-side javascript 395 . 401) (nil part-side javascript 394 . 395) (nil part-side javascript 393 . 394) (nil face (rainbow-delimiters-depth-9-face) 393 . 394) (nil part-side javascript 392 . 393) (nil rear-nonsticky t 391 . 392) (nil part-side javascript 391 . 392) (nil part-side javascript 387 . 391) (nil part-side javascript 381 . 387) (nil part-side javascript 375 . 381) (nil face web-mode-keyword-face 375 . 381) (nil part-side javascript 374 . 375) (nil part-side javascript 373 . 374) (nil face (rainbow-delimiters-depth-9-face) 373 . 374) (nil part-side javascript 372 . 373) (nil face (rainbow-delimiters-depth-9-face) 372 . 373) (nil part-side javascript 368 . 372) (nil part-side javascript 367 . 368) (nil face (rainbow-delimiters-depth-9-face) 367 . 368) (nil part-side javascript 359 . 367) (nil face web-mode-keyword-face 359 . 367) (nil part-side javascript 357 . 359) (nil part-side javascript 354 . 357) (nil face web-mode-function-name-face 354 . 357) (nil part-side javascript 344 . 354) (nil part-side javascript 343 . 344) (nil face (rainbow-delimiters-depth-9-face) 343 . 344) (nil part-side javascript 332 . 343) (nil part-side javascript 326 . 332) (nil face web-mode-keyword-face 326 . 332) (nil part-side javascript 325 . 326) (nil part-side javascript 324 . 325) (nil face (rainbow-delimiters-depth-9-face) 324 . 325) (nil part-side javascript 323 . 324) (nil face (rainbow-delimiters-depth-9-face) 323 . 324) (nil part-side javascript 319 . 323) (nil part-side javascript 318 . 319) (nil face (rainbow-delimiters-depth-9-face) 318 . 319) (nil part-side javascript 310 . 318) (nil face web-mode-keyword-face 310 . 318) (nil part-side javascript 308 . 310) (nil part-side javascript 305 . 308) (nil face web-mode-function-name-face 305 . 308) (nil part-side javascript 295 . 305) (nil rear-nonsticky t 294 . 295) (nil part-side javascript 294 . 295) (nil part-side javascript 287 . 294) (nil part-side javascript 285 . 287) (nil part-side javascript 281 . 285) (nil face web-mode-variable-name-face 281 . 285) (nil part-side javascript 273 . 281) (nil part-side javascript 272 . 273) (nil part-side javascript 271 . 272) (nil face (rainbow-delimiters-depth-8-face) 271 . 272) (nil part-side javascript 270 . 271) (nil face (rainbow-delimiters-depth-7-face) 270 . 271) (nil part-side javascript 262 . 270) (nil face web-mode-function-name-face 262 . 270) (nil part-side javascript 261 . 262) (nil part-side javascript 259 . 261) (nil part-side javascript 258 . 259) (nil part-side javascript 252 . 258) (252 . 699)) nil (25832 40553 99748 135000) 0 nil])
([nil nil ((717 . 727) (#("      " 0 6 (part-side javascript)) . 717) (#("   " 0 3 (part-side javascript)) . -703) (#("   " 0 3 (part-side javascript)) . -659) (#("   " 0 3 (part-side javascript)) . -616) (558 . 568) (#("      " 0 6 (part-side javascript)) . 558) (513 . 517) (460 . 464) (432 . 436) (410 . 420) (#("      " 0 6 (part-side javascript)) . 410) (365 . 369) (312 . 316) (284 . 288) (252 . 262) (#("       " 0 7 (part-side javascript)) . 252)) nil (25832 40553 99697 367000) 0 nil])
([nil nil ((#("user" 0 4 (face web-mode-variable-name-face part-side javascript)) . 204) (undo-tree-id296 . -4) (undo-tree-id297 . -4)) nil (25832 40553 99691 636000) 0 nil])
([nil nil ((204 . 208)) nil (25832 40553 99687 937000) 0 nil])
([nil nil ((#("user.address" 0 12 (part-side javascript)) . 757) (undo-tree-id294 . -12) (undo-tree-id295 . -12)) nil (25832 40553 99686 292000) 0 nil])
([nil nil ((757 . 761)) nil (25832 40553 99682 493000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 822) (undo-tree-id291 . -1) (#("
" 0 1 (part-side javascript)) . 822) (undo-tree-id292 . -1) (#("
" 0 1 (part-side javascript)) . 822) (undo-tree-id293 . -1)) nil (25832 40553 99679 847000) 0 nil])
([nil nil ((#("     " 0 5 (face whitespace-trailing part-side javascript)) . -822) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) 861) nil (25832 40553 99667 439000) 0 nil])
([nil nil ((829 . 834) (t 25832 40553 110780 503000)) nil (25832 40755 85188 428000) 0 nil])
([nil nil ((834 . 838)) nil (25832 40755 85186 997000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -834) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("i" 0 1 (part-side javascript)) . -835) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("l" 0 1 (part-side javascript)) . -836) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("e" 0 1 (part-side javascript)) . -837) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 838) nil (25832 40755 85184 617000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 845) (844 . 845) (843 . 845) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -843) (834 . 844)) nil (25832 40755 85170 576000) 0 nil])
([nil nil ((844 . 862)) nil (25832 40755 85168 622000) 0 nil])
([nil nil ((864 . 866) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -864) (863 . 865)) nil (25832 40755 85167 246000) 0 nil])
([nil nil ((867 . 871) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 866) (undo-tree-id383 . -4) (undo-tree-id384 . 6) (870 . 872) (865 . 871)) nil (25832 40755 85165 182000) 0 nil])
([nil nil ((872 . 873)) nil (25832 40755 85159 983000) 0 nil])
([nil nil ((866 . 872)) nil (25832 40755 85158 746000) 0 nil])
([nil nil ((nil rear-nonsticky nil 948 . 949) (nil part-side javascript 948 . 949) (nil face (rainbow-delimiters-depth-4-face) 948 . 949) (nil part-side javascript 932 . 948) (nil part-side javascript 931 . 932) (nil face (rainbow-delimiters-depth-5-face) 931 . 932) (nil part-side javascript 930 . 931) (nil part-side javascript 929 . 930) (nil face (rainbow-delimiters-depth-5-face) 929 . 930) (nil rear-nonsticky t 928 . 929) (nil part-side javascript 928 . 929) (nil part-side javascript 921 . 928) (nil part-side javascript 917 . 921) (nil face web-mode-constant-face 917 . 921) (nil part-side javascript 916 . 917) (nil face (rainbow-delimiters-depth-4-face) 916 . 917) (nil part-side javascript 902 . 916) (nil face web-mode-function-call-face 902 . 916) (nil part-side javascript 901 . 902) (nil part-side javascript 897 . 901) (nil face web-mode-constant-face 897 . 901) (nil part-side javascript 896 . 897) (nil part-side javascript 891 . 896) (nil face web-mode-keyword-face 891 . 896) (nil part-side javascript 888 . 891) (nil part-side javascript 878 . 888) (nil face web-mode-variable-name-face 878 . 888) (nil part-side javascript 877 . 878) (nil part-side javascript 872 . 877) (nil face web-mode-keyword-face 872 . 877) (872 . 949)) nil (25832 40755 85156 186000) 0 nil])
([nil nil ((949 . 956)) nil (25832 40755 85148 270000) 0 nil])
([nil nil ((956 . 963)) nil (25832 40755 85147 145000) 0 nil])
([nil nil ((#("this." 0 4 (face web-mode-constant-face part-side javascript) 4 5 (part-side javascript)) . 897) (undo-tree-id381 . -5) (undo-tree-id382 . -5)) nil (25832 40857 164205 555000) 0 nil])
([nil nil ((#("return result" 0 6 (face web-mode-keyword-face part-side javascript) 6 13 (part-side javascript)) . 703) (undo-tree-id919 . -13) (undo-tree-id920 . -13)) nil (25832 41114 321860 330000) 0 nil] [nil nil ((#("async" 0 4 (face web-mode-keyword-face part-side javascript) 4 5 (face web-mode-keyword-face part-side javascript rear-nonsticky t)) . 135) (undo-tree-id379 . -5) (undo-tree-id380 . -5)) ((135 . 140)) (25832 40856 833678 71000) 0 nil])
([nil nil ((nil rear-nonsticky nil 716 . 717) (nil part-side javascript 716 . 717) (nil part-side javascript 715 . 716) (nil face (rainbow-delimiters-depth-9-face) 715 . 716) (nil part-side javascript 711 . 715) (nil part-side javascript 710 . 711) (nil face (rainbow-delimiters-depth-9-face) 710 . 711) (nil part-side javascript 703 . 710) (nil face web-mode-function-call-face 703 . 710) (703 . 717)) nil (25832 41114 321856 194000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 135)) ((135 . 136)) (25832 40856 448986 859000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -711) (undo-tree-id914 . -1) (#("s" 0 1 (part-side javascript)) . -712) (undo-tree-id915 . -1) (#("e" 0 1 (part-side javascript)) . -713) (undo-tree-id916 . -1) (#("r" 0 1 (part-side javascript)) . -714) (undo-tree-id917 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-9-face) part-side javascript)) . -715) (undo-tree-id918 . -1) 716) nil (25832 41114 321851 553000) 0 nil])
([nil nil ((173 . 179) (#("      " 0 6 (part-side javascript)) . 172) (undo-tree-id378 . -6) (171 . 179)) ((#("
      
" 0 1 (part-side javascript) 1 7 (face whitespace-trailing part-side javascript) 7 8 (part-side javascript)) . 171) (undo-tree-id791 . -8) (undo-tree-id792 . -8) (undo-tree-id793 . -8) (undo-tree-id794 . -8) (undo-tree-id795 . -8) (undo-tree-id796 . -8) (undo-tree-id797 . -8) (undo-tree-id798 . -8) (undo-tree-id799 . -8) (undo-tree-id800 . -8) (undo-tree-id801 . -8) (undo-tree-id802 . -8) (undo-tree-id803 . -8) (undo-tree-id804 . -8) (undo-tree-id805 . -8) (undo-tree-id806 . -8) (undo-tree-id807 . -8) (undo-tree-id808 . -8) (undo-tree-id809 . -8) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . -8) (undo-tree-id813 . -8) (undo-tree-id814 . -8) (undo-tree-id815 . -8) (undo-tree-id816 . -8) (undo-tree-id817 . -8) (undo-tree-id818 . -8) (undo-tree-id819 . -8) (undo-tree-id820 . -8) (undo-tree-id821 . -8) (undo-tree-id822 . -8) (undo-tree-id823 . -8) (undo-tree-id824 . -8) (undo-tree-id825 . -8) (undo-tree-id826 . -8) (undo-tree-id827 . -8) (undo-tree-id828 . -8) (undo-tree-id829 . -8) (undo-tree-id830 . -8) (undo-tree-id831 . -8) (undo-tree-id832 . -8) (undo-tree-id833 . -8) (undo-tree-id834 . -8) (undo-tree-id835 . -8) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -8) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (172 . 178) (#("      " 0 6 (part-side javascript)) . 173) (undo-tree-id851 . -6) (undo-tree-id852 . -6) (undo-tree-id853 . -6) (undo-tree-id854 . -6) (undo-tree-id855 . -6) (undo-tree-id856 . -6) (undo-tree-id857 . -6) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -6) (undo-tree-id861 . -6) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -6) (undo-tree-id886 . -6) (undo-tree-id887 . -6) (undo-tree-id888 . -6) (undo-tree-id889 . -6) (undo-tree-id890 . -6) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -6) (undo-tree-id898 . -6) (undo-tree-id899 . -6) (undo-tree-id900 . -6) (undo-tree-id901 . -6) (undo-tree-id902 . -6) (undo-tree-id903 . -6) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6)) (25832 40856 234418 401000) 0 nil])
([nil nil ((711 . 718)) nil (25832 41114 321842 831000) 0 nil])
([nil nil ((179 . 198)) ((#("function comp_warp " 0 8 (face web-mode-keyword-face part-side javascript) 8 9 (part-side javascript) 9 15 (face web-mode-function-name-face part-side javascript) 15 16 (face web-mode-function-name-face part-side javascript) 16 17 (face web-mode-function-name-face part-side javascript) 17 18 (face web-mode-function-name-face part-side javascript) 18 19 (part-side javascript)) . 179) (undo-tree-id747 . -19) (undo-tree-id748 . -15) (undo-tree-id749 . -15) (undo-tree-id750 . -15) (undo-tree-id751 . -15) (undo-tree-id752 . -15) (undo-tree-id753 . -15) (undo-tree-id754 . -15) (undo-tree-id755 . -15) (undo-tree-id756 . -15) (undo-tree-id757 . -15) (undo-tree-id758 . -15) (undo-tree-id759 . -15) (undo-tree-id760 . -15) (undo-tree-id761 . -15) (undo-tree-id762 . -15) (undo-tree-id763 . -15) (undo-tree-id764 . -15) (undo-tree-id765 . -15) (undo-tree-id766 . -15) (undo-tree-id767 . -15) (undo-tree-id768 . -15) (undo-tree-id769 . -15) (undo-tree-id770 . -15) (undo-tree-id771 . -15) (undo-tree-id772 . -15) (undo-tree-id773 . -15) (undo-tree-id774 . -15) (undo-tree-id775 . -17) (undo-tree-id776 . -17) (undo-tree-id777 . -17) (undo-tree-id778 . -17) (undo-tree-id779 . -17) (undo-tree-id780 . -17) (undo-tree-id781 . -17) (undo-tree-id782 . -18) (undo-tree-id783 . -19) (undo-tree-id784 . -19) (undo-tree-id785 . -19) (undo-tree-id786 . -19) (undo-tree-id787 . -19) (undo-tree-id788 . -19) (undo-tree-id789 . -19) (undo-tree-id790 . -19)) (25832 40855 999250 424000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -717) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 718) nil (25832 41114 321840 665000) 0 nil])
([nil nil ((#("p" 0 1 (face web-mode-function-name-face part-side javascript)) . -196) (undo-tree-id376 . -1) (#(" " 0 1 (part-side javascript)) . -197) (undo-tree-id377 . -1) 198) ((196 . 198)) (25832 40855 765434 730000) 0 nil])
([nil nil ((717 . 718)) nil (25832 41114 321826 535000) 0 nil])
([nil nil ((#("a" 0 1 (face web-mode-function-name-face part-side javascript)) . -194) (undo-tree-id374 . -1) (#("r" 0 1 (face web-mode-function-name-face part-side javascript)) . -195) (undo-tree-id375 . -1) 196) ((194 . 196)) (25832 40855 529867 786000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript rear-nonsticky t)) . 718)) nil (25832 41114 321824 616000) 0 nil])
([nil nil ((194 . 199)) ((#("rawp " 0 2 (face web-mode-function-name-face part-side javascript) 2 3 (face web-mode-function-name-face part-side javascript) 3 4 (face web-mode-function-name-face part-side javascript) 4 5 (part-side javascript)) . 194) (undo-tree-id725 . -5) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -4) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -5)) (25832 40855 262178 48000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -959) 718) nil (25832 41114 321816 896000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -198) (undo-tree-id373 . -1) 199) ((198 . 199)) (25832 40854 911489 193000) 0 nil])
([nil nil ((#("    comp_wrap(filter_a, filter_b) {
      const comp_score = await filter_compare(this.filters[0], element.filter)
      return
    }," 0 4 (part-side javascript) 4 13 (face web-mode-function-name-face part-side javascript) 13 14 (face (rainbow-delimiters-depth-4-face) part-side javascript) 14 32 (part-side javascript) 32 33 (face (rainbow-delimiters-depth-4-face) part-side javascript) 33 34 (part-side javascript) 34 35 (face (rainbow-delimiters-depth-4-face) part-side javascript) 35 36 (part-side javascript) 36 42 (part-side javascript) 42 47 (face web-mode-keyword-face part-side javascript) 47 48 (part-side javascript) 48 58 (face web-mode-variable-name-face part-side javascript) 58 61 (part-side javascript) 61 66 (face web-mode-keyword-face part-side javascript) 66 67 (part-side javascript) 67 81 (face web-mode-function-call-face part-side javascript) 81 82 (face (rainbow-delimiters-depth-4-face) part-side javascript) 82 86 (face web-mode-constant-face part-side javascript) 86 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-5-face) part-side javascript) 95 96 (part-side javascript) 96 97 (face (rainbow-delimiters-depth-5-face) part-side javascript) 97 113 (part-side javascript) 113 114 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t) 114 115 (part-side javascript) 115 121 (part-side javascript) 121 127 (face web-mode-keyword-face part-side javascript) 127 128 (part-side javascript) 128 132 (part-side javascript) 132 133 (face (rainbow-delimiters-depth-3-face) part-side javascript) 133 134 (part-side javascript)) . 832) (undo-tree-id927 . -134) (undo-tree-id928 . -42) (undo-tree-id929 . -67) (undo-tree-id930 . -114) (undo-tree-id931 . -36) (undo-tree-id932 . -134) (t 25832 41114 337080 598000)) nil (25832 41142 502002 14000) 0 nil])
([nil nil ((#("w" 0 1 (face web-mode-function-name-face part-side javascript)) . -196) (undo-tree-id372 . -1) 197) ((196 . 197)) (25832 40854 688547 753000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -831) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) 832) nil (25836 31326 481691 272000) 0 nil])
([nil nil ((nil rear-nonsticky nil 183 . 184) (nil rear-nonsticky t 183 . 184) (nil part-side javascript 183 . 184) (nil part-side javascript 179 . 183) (179 . 184)) ((#("async" 0 4 (part-side javascript) 4 5 (part-side javascript rear-nonsticky t)) . 179) (undo-tree-id723 . -5) (undo-tree-id724 . -5) (nil rear-nonsticky nil 183 . 184) (nil rear-nonsticky t 183 . 184)) (25832 40854 317624 973000) 0 nil])
([nil nil ((824 . 831) (t 25832 41205 369657 201000)) nil (25836 31771 420921 530000) 0 nil] [nil nil ((634 . 659) (t 25832 41205 369657 201000)) ((#("
                        " 0 1 (part-side javascript) 1 25 (part-side javascript)) . 634) (undo-tree-id1 . -25) (undo-tree-id2 . -1) (undo-tree-id3 . -25) (undo-tree-id4 . -1) (undo-tree-id5 . -25) (undo-tree-id6 . -25) (undo-tree-id7 . -25) (undo-tree-id8 . -25) (undo-tree-id9 . -25) (undo-tree-id10 . -25) (undo-tree-id11 . -25)) (25836 31326 215651 925000) 0 nil] [nil nil ((831 . 832) (t 25832 41142 513255 99000)) ((#("d" 0 1 (part-side javascript)) . 831) (t 25832 41197 589606 522000)) (25832 41197 570867 670000) 0 nil])
([nil nil ((184 . 185)) ((#(" " 0 1 (part-side javascript)) . 184)) (25832 40853 975507 986000) 0 nil])
([nil nil ((831 . 843)) nil (25836 31771 420918 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 668 . 669) (nil part-side javascript 668 . 669) (nil part-side javascript 667 . 668) (nil face (rainbow-delimiters-depth-9-face) 667 . 668) (nil part-side javascript 666 . 667) (nil face (rainbow-delimiters-depth-9-face) 666 . 667) (nil part-side javascript 659 . 666) (nil face web-mode-function-call-face 659 . 666) (659 . 669)) ((#("resolve();" 0 7 (part-side javascript face web-mode-function-call-face) 7 8 (part-side javascript face (rainbow-delimiters-depth-9-face)) 8 9 (part-side javascript face (rainbow-delimiters-depth-9-face)) 9 10 (rear-nonsticky nil part-side javascript)) . 659) (undo-tree-id0 . -10) (nil face (rainbow-delimiters-depth-9-face) 666 . 667) (nil face (rainbow-delimiters-depth-9-face) 667 . 668) (nil rear-nonsticky t 668 . 669)) (25836 31326 213638 435000) 0 nil])
nil
([nil nil ((204 . 206) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -204) (203 . 205)) ((#(" {" 0 1 (part-side javascript) 1 2 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 203) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (204 . 205) (#("{}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 204) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1)) (25832 40853 759779 104000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -842) (undo-tree-id12 . -1) 843) nil (25836 31771 420909 327000) 0 nil])
nil
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 205)) ((205 . 206)) (25832 40853 553677 901000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . 815) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (t 25836 31771 427548 920000)) nil (25836 31775 793857 304000) 0 nil])
([nil nil ((850 . 859)) ((#("
        " 0 1 (part-side javascript) 1 7 (part-side javascript) 7 9 (part-side javascript)) . 850) (undo-tree-id689 . -9) (undo-tree-id690 . -9) (undo-tree-id691 . -9) (undo-tree-id692 . -9) (undo-tree-id693 . -9) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -1) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -1) (undo-tree-id700 . -9) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . -9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9)) (25832 40853 324972 79000) 0 nil])
([nil nil ((37 . 38) (t 25836 31775 803561 420000)) nil (25836 31964 982084 697000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -857) (859 . 860)) ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 859) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (857 . 859)) (25832 40853 54450 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73 . 74) (nil part-side javascript 46 . 74) (nil part-token string 46 . 74) (nil font-lock-face web-mode-javascript-string-face 46 . 74) (nil part-side javascript 45 . 46) (nil part-token string 45 . 46) (nil syntax-table (15) 45 . 46) (nil font-lock-face web-mode-javascript-string-face 45 . 46) (nil part-side javascript 44 . 45) (nil part-side javascript 38 . 44) (nil face web-mode-keyword-face 38 . 44) (38 . 74)) nil (25836 31964 982075 930000) 0 nil])
([nil nil ((881 . 889) (#("      " 0 6 (part-side javascript)) . 881) (859 . 861) (825 . 833) (#("      " 0 6 (part-side javascript)) . 825) (810 . 812) (796 . 798) (783 . 785) (757 . 759) (711 . 713) (644 . 668) (#("                      " 0 22 (part-side javascript)) . 644) (616 . 618) (563 . 565) (508 . 510) (478 . 480) (460 . 462) (407 . 409) (352 . 354) (322 . 324) (294 . 296) (228 . 230) (206 . 214) (#("      " 0 6 (part-side javascript)) . 206) 173) ((206 . 212) (#("        " 0 8 (part-side javascript)) . 206) (#("  " 0 2 (part-side javascript)) . 228) (#("  " 0 2 (part-side javascript)) . 294) (#("  " 0 2 (part-side javascript)) . 322) (#("  " 0 2 (part-side javascript)) . 352) (#("  " 0 2 (part-side javascript)) . 407) (#("  " 0 2 (part-side javascript)) . 460) (#("  " 0 2 (part-side javascript)) . 478) (#("  " 0 2 (part-side javascript)) . 508) (#("  " 0 2 (part-side javascript)) . 563) (#("  " 0 2 (part-side javascript)) . 616) (644 . 666) (#("                        " 0 24 (part-side javascript)) . 644) (#("  " 0 2 (part-side javascript)) . 711) (#("  " 0 2 (part-side javascript)) . 757) (#("  " 0 2 (part-side javascript)) . 783) (#("  " 0 2 (part-side javascript)) . 796) (#("  " 0 2 (part-side javascript)) . 810) (825 . 831) (#("        " 0 8 (part-side javascript)) . 825) (#("  " 0 2 (part-side javascript)) . 859) (881 . 887) (#("        " 0 8 (part-side javascript)) . 881)) (25832 40852 550060 925000) 0 nil])
([nil nil ((#("
                        console.log(result)" 0 1 (part-side javascript) 1 33 (part-side javascript) 33 36 (part-side javascript face web-mode-function-call-face) 36 37 (part-side javascript face (rainbow-delimiters-depth-9-face)) 37 43 (part-side javascript) 43 44 (part-side javascript face (rainbow-delimiters-depth-9-face))) . 671) (undo-tree-id32 . -44) (undo-tree-id33 . -1) (undo-tree-id34 . -44) (t 25836 31964 988104 769000)) nil (25836 32038 287013 590000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 171) (undo-tree-id371 . -1)) ((171 . 172)) (25832 40852 200287 949000) 0 nil])
([nil nil ((#("
        return diff;" 0 9 (part-side javascript) 9 15 (part-side javascript face web-mode-keyword-face) 15 21 (part-side javascript)) . 736) (undo-tree-id29 . -21) (undo-tree-id30 . -1) (undo-tree-id31 . -21)) nil (25836 32038 287007 426000) 0 nil])
([nil nil ((202 . 204) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -202) (202 . 203)) ((#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 202) (202 . 203) (#("()" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 202) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1)) (25832 40851 544892 343000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -735) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 736) nil (25836 32038 286998 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 220 . 221) (nil part-side javascript 203 . 221) (203 . 221)) ((#("filter_a, filter_b" 0 17 (part-side javascript) 17 18 (part-side javascript rear-nonsticky nil)) . 203) (nil rear-nonsticky t 220 . 221)) (25832 40851 233570 575000) 0 nil])
([nil nil ((#("      return diff
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 17 (part-side javascript) 17 18 (part-side javascript)) . 813) (undo-tree-id41 . -18) (805 . 813) (#("      }
" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-4-face)) 7 8 (part-side javascript)) . 787) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (795 . 813) (t 25836 32038 296316 580000)) nil (25836 32071 525228 889000) 0 nil])
([nil nil ((917 . 924)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 917) (undo-tree-id638 . -7) (undo-tree-id639 . -7) (undo-tree-id640 . -7) (undo-tree-id641 . -7) (undo-tree-id642 . -7) (undo-tree-id643 . -7) (undo-tree-id644 . -1) (undo-tree-id645 . -7) (undo-tree-id646 . -7) (undo-tree-id647 . -7) (undo-tree-id648 . -7) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id651 . -7) (undo-tree-id652 . -7) (undo-tree-id653 . -7) (undo-tree-id654 . -7) (undo-tree-id655 . -7) (undo-tree-id656 . -7) (undo-tree-id657 . -7) (undo-tree-id658 . -7) (undo-tree-id659 . -7) (undo-tree-id660 . -7) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -7) (undo-tree-id666 . -7) (undo-tree-id667 . -7) (undo-tree-id668 . -7) (undo-tree-id669 . -7) (undo-tree-id670 . -7) (undo-tree-id671 . -7) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -7) (undo-tree-id675 . -7) (undo-tree-id676 . -7) (undo-tree-id677 . -7)) (25832 40850 846901 494000) 0 nil])
([nil nil ((#("      return diff
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 17 (part-side javascript) 17 18 (part-side javascript)) . 805) (undo-tree-id40 . -18) (778 . 805) (#("        console.log(error)
" 0 16 (part-side javascript) 16 19 (part-side javascript face web-mode-function-call-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-5-face)) 20 25 (part-side javascript) 25 26 (part-side javascript face (rainbow-delimiters-depth-5-face)) 26 27 (part-side javascript)) . 760) (787 . 805)) nil (25836 32071 525221 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 976 . 977) (nil rear-nonsticky t 976 . 977) (nil part-side javascript 976 . 977) (nil face (rainbow-delimiters-depth-4-face) 976 . 977) (nil part-side javascript 960 . 976) (nil part-side javascript 959 . 960) (nil face (rainbow-delimiters-depth-5-face) 959 . 960) (nil part-side javascript 958 . 959) (nil part-side javascript 957 . 958) (nil face (rainbow-delimiters-depth-5-face) 957 . 958) (nil part-side javascript 949 . 957) (nil part-side javascript 945 . 949) (nil face web-mode-constant-face 945 . 949) (nil part-side javascript 944 . 945) (nil face (rainbow-delimiters-depth-4-face) 944 . 945) (nil part-side javascript 930 . 944) (nil face web-mode-function-call-face 930 . 944) (nil part-side javascript 929 . 930) (nil part-side javascript 924 . 929) (nil face web-mode-keyword-face 924 . 929) (924 . 977)) ((#("await filter_compare(this.filters[0], element.filter)" 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript) 6 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-4-face) part-side javascript) 21 25 (face web-mode-constant-face part-side javascript) 25 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-5-face) part-side javascript) 34 35 (part-side javascript) 35 36 (face (rainbow-delimiters-depth-5-face) part-side javascript) 36 52 (part-side javascript) 52 53 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t)) . 924) (undo-tree-id633 . -20) (undo-tree-id634 . -53) (undo-tree-id635 . -53) (undo-tree-id636 . -40) (undo-tree-id637 . -6) (nil face (rainbow-delimiters-depth-4-face) 944 . 945) (nil face (rainbow-delimiters-depth-5-face) 957 . 958) (nil face (rainbow-delimiters-depth-5-face) 959 . 960) (nil face (rainbow-delimiters-depth-4-face) 976 . 977) (nil rear-nonsticky nil 976 . 977) (nil rear-nonsticky t 976 . 977)) (25832 40850 538010 64000) 0 nil])
([nil nil ((#("      return diff
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 17 (part-side javascript) 17 18 (part-side javascript)) . 778) (undo-tree-id35 . -18) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . -18) (754 . 778) (#("      } catch (error) {
" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-4-face)) 7 8 (part-side javascript) 8 13 (part-side javascript face web-mode-keyword-face) 13 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 22 (part-side javascript) 22 23 (part-side javascript face (rainbow-delimiters-depth-4-face)) 23 24 (part-side javascript)) . 736) (760 . 778)) nil (25836 32071 525216 636000) 0 nil])
([nil nil ((924 . 931)) ((#("return " 0 6 (face web-mode-keyword-face part-side javascript) 6 7 (part-side javascript)) . 924)) (25832 40850 257424 456000) 0 nil])
([nil nil ((736 . 744) (#("      " 0 6 (part-side javascript)) . 736)) nil (25836 32071 525179 68000) 0 nil])
([nil nil ((#("    comp_wrap(filter_a, filter_b) {
      const comp_score = await filter_compare(this.filters[0], element.filter)
      return 
    }," 0 4 (part-side javascript) 4 13 (face web-mode-function-name-face part-side javascript) 13 14 (face (rainbow-delimiters-depth-3-face) part-side javascript) 14 32 (part-side javascript) 32 33 (face (rainbow-delimiters-depth-3-face) part-side javascript) 33 34 (part-side javascript) 34 35 (face (rainbow-delimiters-depth-3-face) part-side javascript) 35 36 (part-side javascript) 36 42 (part-side javascript) 42 47 (face web-mode-keyword-face part-side javascript) 47 48 (part-side javascript) 48 58 (face web-mode-variable-name-face part-side javascript) 58 61 (part-side javascript) 61 66 (face web-mode-keyword-face part-side javascript) 66 67 (part-side javascript) 67 81 (face web-mode-function-call-face part-side javascript) 81 82 (face (rainbow-delimiters-depth-4-face) part-side javascript) 82 86 (face web-mode-constant-face part-side javascript) 86 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-5-face) part-side javascript) 95 96 (part-side javascript) 96 97 (face (rainbow-delimiters-depth-5-face) part-side javascript) 97 113 (part-side javascript) 113 114 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t) 114 115 (part-side javascript) 115 121 (part-side javascript) 121 127 (face web-mode-keyword-face part-side javascript) 127 128 (face whitespace-trailing part-side javascript) 128 129 (part-side javascript) 129 133 (part-side javascript) 133 134 (face (rainbow-delimiters-depth-3-face) part-side javascript) 134 135 (part-side javascript)) . 992) (undo-tree-id364 . -135) (undo-tree-id365 . -124) (undo-tree-id366 . -36) (undo-tree-id367 . -42) (undo-tree-id368 . -67) (undo-tree-id369 . -114) (undo-tree-id370 . -135)) ((992 . 1127)) (25832 40849 872526 425000) 0 nil])
([nil nil ((671 . 696) (t 25836 32071 532412 803000)) nil (25836 41773 907458 903000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -991) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) 992) ((991 . 992)) (25832 40849 547854 924000) 0 nil])
([nil nil ((696 . 697)) nil (25836 41773 907455 62000) 0 nil])
([nil nil ((#("return" 0 6 (face web-mode-keyword-face part-side javascript)) . 924) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (t 25832 40755 91280 169000)) ((924 . 930)) (25832 40849 248051 688000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -696) (undo-tree-id56 . -1) 697) nil (25836 41773 907451 127000) 0 nil])
([nil nil ((924 . 933)) ((#("const com" 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript) 6 8 (face web-mode-variable-name-face part-side javascript) 8 9 (face web-mode-variable-name-face part-side javascript)) . 924) (undo-tree-id607 . -9) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -8) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -9) (undo-tree-id623 . -9) (undo-tree-id624 . -9) (undo-tree-id625 . -9) (undo-tree-id626 . -9) (undo-tree-id627 . -9) (undo-tree-id628 . -9) (undo-tree-id629 . -9) (undo-tree-id630 . -9) (undo-tree-id631 . -9) (undo-tree-id632 . -9)) (25832 40848 964431 352000) 0 nil])
([nil nil ((696 . 699)) nil (25836 41773 907443 894000) 0 nil])
([nil nil ((#("m" 0 1 (face web-mode-variable-name-face part-side javascript)) . -932) (undo-tree-id411 . -1) (undo-tree-id412 . -1) 933) ((932 . 933)) (25832 40848 680176 36000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -698) (undo-tree-id55 . -1) 699) nil (25836 41773 907439 916000) 0 nil])
([nil nil ((932 . 942)) ((#("mp_diff = " 0 7 (face web-mode-variable-name-face part-side javascript) 7 9 (part-side javascript) 9 10 (part-side javascript)) . 932) (undo-tree-id599 . -10) (undo-tree-id600 . -10) (undo-tree-id601 . -10) (undo-tree-id602 . -10) (undo-tree-id603 . -10) (undo-tree-id604 . -10) (undo-tree-id605 . -10) (undo-tree-id606 . -10)) (25832 40848 424500 919000) 0 nil])
([nil nil ((698 . 716)) nil (25836 41773 907433 70000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -941) (undo-tree-id410 . -1) 942) ((941 . 942)) (25832 40848 37443 552000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -714) (undo-tree-id53 . -1) (#(" " 0 1 (part-side javascript)) . -715) (undo-tree-id54 . -1) 716) nil (25836 41773 907428 405000) 0 nil])
([nil nil ((997 . 1003) (#("      " 0 6 (part-side javascript)) . 996) (undo-tree-id409 . -6) (995 . 1003)) ((#("
      
" 0 1 (part-side javascript) 1 7 (face whitespace-trailing part-side javascript) 7 8 (part-side javascript)) . 995) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -8) (undo-tree-id536 . -8) (undo-tree-id537 . -8) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -8) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (undo-tree-id545 . -8) (undo-tree-id546 . -8) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -8) (undo-tree-id561 . -8) (undo-tree-id562 . -8) (undo-tree-id563 . -8) (undo-tree-id564 . -8) (undo-tree-id565 . -8) (996 . 1002) (#("      " 0 5 (part-side javascript) 5 6 (part-side javascript)) . 997) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -6) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) (undo-tree-id595 . -6) (undo-tree-id596 . -6) (undo-tree-id597 . -6) (undo-tree-id598 . -6)) (25832 40847 732246 904000) 0 nil])
([nil nil ((714 . 721)) nil (25836 41773 907417 687000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1002) (undo-tree-id408 . -1) 1003) ((1002 . 1003)) (25832 40847 474572 464000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -720) (undo-tree-id52 . -1) 721) nil (25836 41773 907413 437000) 0 nil])
([nil nil ((1002 . 1003)) ((#(" " 0 1 (part-side javascript)) . 1002) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1)) (25832 40847 254771 808000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -756) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("l" 0 1 (part-side javascript)) . -757) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("t" 0 1 (part-side javascript)) . -758) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 759) nil (25836 41773 907399 929000) 0 nil])
([nil nil ((1003 . 1016)) ((#("return compo_" 0 6 (face web-mode-keyword-face part-side javascript) 6 11 (part-side javascript) 11 12 (part-side javascript) 12 13 (part-side javascript)) . 1003) (undo-tree-id509 . -3) (undo-tree-id510 . -12) (undo-tree-id511 . -13) (undo-tree-id512 . -13) (undo-tree-id513 . -13) (undo-tree-id514 . -13) (undo-tree-id515 . -13) (undo-tree-id516 . -13)) (25832 40847 39915 315000) 0 nil])
([nil nil ((#("
                        const res = result * 100" 0 1 (part-side javascript) 1 25 (part-side javascript) 25 30 (part-side javascript face web-mode-keyword-face) 30 31 (part-side javascript) 31 34 (part-side javascript face web-mode-variable-name-face) 34 36 (part-side javascript) 36 43 (part-side javascript) 43 45 (part-side javascript) 45 49 (part-side javascript)) . 671) (undo-tree-id58 . -49) (undo-tree-id59 . -49) (undo-tree-id60 . -1) (undo-tree-id61 . -49) (t 25836 41773 919005 482000)) nil (25836 42567 608744 785000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -1014) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("_" 0 1 (part-side javascript)) . -1015) (undo-tree-id407 . -1) 1016) ((1014 . 1016)) (25832 40846 758422 564000) 0 nil])
([nil nil ((707 . 711)) nil (25836 42567 608736 720000) 0 nil])
([nil nil ((1014 . 1020)) ((#("_diff " 0 5 (part-side javascript) 5 6 (part-side javascript)) . 1014) (undo-tree-id499 . -4) (undo-tree-id500 . -6) (undo-tree-id501 . -5) (undo-tree-id502 . -6) (undo-tree-id503 . -6) (undo-tree-id504 . -6) (undo-tree-id505 . -6) (undo-tree-id506 . -6) (undo-tree-id507 . -6) (undo-tree-id508 . -6)) (25832 40846 588370 203000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -710) (undo-tree-id57 . -1) 711) nil (25836 42567 608731 370000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1019) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) 1020) ((1019 . 1020)) (25832 40846 432358 753000) 0 nil])
([nil nil ((755 . 765) (t 25836 42567 625621 388000)) nil (25836 42590 693051 922000) 0 nil])
([nil nil ((#("filter_compare" 0 14 (face web-mode-function-call-face part-side javascript)) . 948) (undo-tree-id416 . -14) (undo-tree-id418 . -6) (undo-tree-id420 . -6) (undo-tree-id422 . -5) (undo-tree-id424 . -4) (undo-tree-id426 . -4) (undo-tree-id428 . -3) (undo-tree-id430 . -3) (undo-tree-id432 . -3) (undo-tree-id434 . -2) (undo-tree-id436 . -2) (undo-tree-id438 . -1) (undo-tree-id440 . -1) (undo-tree-id442 . -1) (undo-tree-id444 . -14) (undo-tree-id445 . -14) (t 25832 40784 711391 136000)) ((948 . 962)) (25832 40846 234672 397000) 0 nil] [nil nil ((948 . 949) (t 25832 40784 711391 136000)) ((#("t" 0 1 (face web-mode-function-call-face part-side javascript)) . 948) (undo-tree-id415 . -1)) (25832 40795 720928 667000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -764) (undo-tree-id62 . -1) 765) nil (25836 42590 693045 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 956 . 957) (nil part-side javascript 948 . 957) (nil face web-mode-function-call-face 948 . 957) (948 . 957)) ((#("comp_wrap" 0 8 (face web-mode-function-call-face part-side javascript) 8 9 (face web-mode-function-call-face part-side javascript rear-nonsticky nil)) . 948) (undo-tree-id446 . -9) (undo-tree-id447 . -9) (undo-tree-id448 . -9) (undo-tree-id449 . -9) (undo-tree-id450 . -9) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -9) (undo-tree-id454 . -9) (undo-tree-id455 . -9) (undo-tree-id456 . -9) (undo-tree-id457 . -9) (undo-tree-id458 . -9) (undo-tree-id459 . -9) (undo-tree-id460 . -9) (undo-tree-id461 . -9) (undo-tree-id462 . -9) (undo-tree-id463 . -9) (undo-tree-id464 . -9) (undo-tree-id465 . -9) (undo-tree-id466 . -9) (undo-tree-id467 . -9) (undo-tree-id468 . -9) (undo-tree-id469 . -9) (undo-tree-id470 . -9) (undo-tree-id471 . -9) (undo-tree-id472 . -9) (undo-tree-id473 . -9) (undo-tree-id474 . -9) (undo-tree-id475 . -9) (undo-tree-id476 . -9) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (nil rear-nonsticky t 956 . 957) (t 25832 40801 963459 527000)) (25832 40801 952952 759000) 0 nil])
nil
([nil nil ((751 . 753) (t 25836 42590 709698 25000)) nil (25836 42828 598119 601000) 0 nil])
nil
([nil nil ((375 . 389) (#("              " 0 14 (part-side javascript)) . 374) (undo-tree-id110 . -14) (374 . 389) (#(" " 0 1 (part-side javascript)) . 373) (undo-tree-id111 . -1) (374 . 375) (t 25836 42828 606488 673000)) nil (25836 44578 899388 699000) 0 nil])
([nil nil ((374 . 388)) nil (25836 44578 899383 418000) 0 nil])
([nil nil ((420 . 432) (#(" " 0 1 (part-side javascript)) . 419) (undo-tree-id109 . -1) (420 . 421)) nil (25836 44578 899381 901000) 0 nil])
([nil nil ((388 . 396)) nil (25836 44578 899378 833000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -395) (undo-tree-id108 . -1) 396) nil (25836 44578 899377 55000) 0 nil])
([nil nil ((395 . 397)) nil (25836 44578 899374 333000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -395) (undo-tree-id106 . -1) (#(" " 0 1 (part-side javascript)) . -396) (undo-tree-id107 . -1) 397) nil (25836 44578 899372 571000) 0 nil])
([nil nil ((391 . 393)) nil (25836 44578 899368 302000) 0 nil])
([nil nil ((392 . 396)) nil (25836 44578 899367 8000) 0 nil])
([nil nil ((396 . 397)) nil (25836 44578 899365 770000) 0 nil])
([nil nil ((398 . 402)) nil (25836 44578 899364 324000) 0 nil])
([nil nil ((406 . 407)) nil (25836 44578 899362 486000) 0 nil])
([nil nil ((391 . 393) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -391) (391 . 392)) nil (25836 44578 899360 577000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 392)) nil (25836 44578 899355 937000) 0 nil])
([nil nil ((409 . 411) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -409) (408 . 410)) nil (25836 44578 899352 110000) 0 nil])
([nil nil ((412 . 426) (#("                " 0 16 (part-side javascript face whitespace-trailing)) . 411) (undo-tree-id104 . 16) (411 . 427) (#("              " 0 14 (part-side javascript)) . 411) (undo-tree-id105 . -14) (410 . 426)) nil (25836 44578 899332 406000) 0 nil])
([nil nil ((#("              return node.type
" 0 14 (part-side javascript) 14 20 (part-side javascript face web-mode-keyword-face) 20 31 (part-side javascript)) . 459) (undo-tree-id102 . -14) (undo-tree-id103 . -31) (443 . 459) (#("              }
" 0 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-1-face)) 15 16 (part-side javascript)) . 412) (428 . 459) 442) nil (25836 44578 899324 972000) 0 nil])
([nil nil ((#("              return node.type
" 0 14 (part-side javascript) 14 20 (part-side javascript face web-mode-keyword-face) 20 31 (part-side javascript)) . 443) (undo-tree-id100 . -14) (undo-tree-id101 . -31) (442 . 443) (#("
" 0 1 (part-side javascript)) . 411) (412 . 443) 426) nil (25836 44578 899318 393000) 0 nil])
([nil nil ((411 . 427) (#("              " 0 14 (part-side javascript)) . 411) (undo-tree-id99 . -14) 425) nil (25836 44578 899312 987000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 444) (undo-tree-id98 . -1)) nil (25836 44578 899309 580000) 0 nil])
([nil nil ((459 . 474)) nil (25836 44578 899306 885000) 0 nil])
([nil nil ((474 . 479)) nil (25836 44578 899305 612000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -474) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("l" 0 1 (part-side javascript)) . -475) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("s" 0 1 (part-side javascript)) . -476) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (part-side javascript face web-mode-keyword-face)) . -477) (undo-tree-id96 . -1) (#(" " 0 1 (part-side javascript)) . -478) (undo-tree-id97 . -1) 479) nil (25836 44578 899302 724000) 0 nil])
([nil nil ((407 . 413)) nil (25836 44578 899289 464000) 0 nil])
([nil nil ((412 . 416)) nil (25836 44578 899288 148000) 0 nil])
([nil nil ((417 . 426)) nil (25836 44578 899286 935000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -425) (undo-tree-id89 . -1) 426) nil (25836 44578 899285 45000) 0 nil])
([nil nil ((492 . 497)) nil (25836 44578 899228 75000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -496) (undo-tree-id88 . -1) 497) nil (25836 44578 899226 43000) 0 nil])
([nil nil ((496 . 499)) nil (25836 44578 899220 888000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript face web-mode-keyword-face)) . -495) (undo-tree-id84 . -1) (#("i" 0 1 (part-side javascript)) . -496) (undo-tree-id85 . -1) (#("f" 0 1 (part-side javascript)) . -497) (undo-tree-id86 . -1) (#(" " 0 1 (part-side javascript)) . -498) (undo-tree-id87 . -1) 499) nil (25836 44578 899218 196000) 0 nil])
([nil nil ((495 . 500)) nil (25836 44578 899210 432000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -499) (undo-tree-id83 . -1) 500) nil (25836 44578 899208 833000) 0 nil])
([nil nil ((501 . 503) (500 . 502) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -500) (499 . 501)) nil (25836 44578 899205 164000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -503) (undo-tree-id82 . -1) 504) nil (25836 44578 899202 425000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -496) (undo-tree-id75 . -1) (#("i" 0 1 (part-side javascript)) . -497) (undo-tree-id76 . -1) (#("f" 0 1 (part-side javascript face web-mode-keyword-face)) . -498) (undo-tree-id77 . -1) (#(" " 0 1 (part-side javascript)) . -499) (undo-tree-id78 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -500) (undo-tree-id79 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -501) (undo-tree-id80 . -1) (#("'" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -502) (undo-tree-id81 . -1) 503) nil (25836 44578 899197 430000) 0 nil])
([nil nil ((497 . 499) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -497) (496 . 498)) nil (25836 44578 899185 55000) 0 nil])
([nil nil ((500 . 514) (#("                " 0 16 (part-side javascript face whitespace-trailing)) . 499) (undo-tree-id73 . 16) (499 . 515) (#("              " 0 14 (part-side javascript)) . 499) (undo-tree-id74 . -14) (498 . 514)) nil (25836 44578 899182 143000) 0 nil])
([nil nil ((499 . 515)) nil (25836 44578 899177 229000) 0 nil])
([nil nil ((515 . 529)) nil (25836 44578 899175 969000) 0 nil])
([nil nil ((529 . 536)) nil (25836 44578 899174 588000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -532) (undo-tree-id69 . -1) (#("=" 0 1 (part-side javascript)) . -533) (undo-tree-id70 . -1) (#("=" 0 1 (part-side javascript)) . -534) (undo-tree-id71 . -1) (#(" " 0 1 (part-side javascript)) . -535) (undo-tree-id72 . -1) 536) nil (25836 44578 899171 922000) 0 nil])
([nil nil ((532 . 548)) nil (25836 44578 899164 420000) 0 nil])
([nil nil ((548 . 562)) nil (25836 44578 899163 170000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -561) (undo-tree-id68 . -1) 562) nil (25836 44578 899161 613000) 0 nil])
([nil nil ((721 . 735) (#(" " 0 1 (part-side javascript)) . 720) (undo-tree-id67 . -1) (721 . 722)) nil (25836 44578 899158 327000) 0 nil])
([nil nil ((752 . 764) (#(" " 0 1 (part-side javascript)) . 751) (undo-tree-id66 . -1) (752 . 753)) nil (25836 44578 899154 699000) 0 nil])
([nil nil ((#("return node.type" 0 6 (part-side javascript face web-mode-keyword-face) 6 16 (part-side javascript)) . 735) (undo-tree-id63 . -16) (undo-tree-id64 . -10) (undo-tree-id65 . -16)) nil (25836 44578 899132 472000) 0 nil])
([nil nil ((nil rear-nonsticky nil 937 . 938) (nil part-side javascript 937 . 938) (nil face (rainbow-delimiters-depth-1-face) 937 . 938) (nil part-side javascript 922 . 937) (nil part-side javascript 911 . 922) (nil part-side javascript 909 . 911) (nil part-side javascript 895 . 909) (nil part-side javascript 893 . 895) (nil part-side javascript 882 . 893) (nil part-side javascript 876 . 882) (nil face web-mode-keyword-face 876 . 882) (nil part-side javascript 860 . 876) (nil part-side javascript 859 . 860) (nil part-side javascript 858 . 859) (nil face (rainbow-delimiters-depth-1-face) 858 . 859) (nil part-side javascript 857 . 858) (nil part-side javascript 853 . 857) (nil face web-mode-keyword-face 853 . 857) (nil part-side javascript 839 . 853) (nil part-side javascript 838 . 839) (nil part-side javascript 837 . 838) (nil face (rainbow-delimiters-depth-1-face) 837 . 838) (nil part-side javascript 823 . 837) (nil part-side javascript 812 . 823) (nil part-side javascript 806 . 812) (nil face web-mode-keyword-face 806 . 812) (nil part-side javascript 790 . 806) (nil part-side javascript 789 . 790) (nil part-side javascript 788 . 789) (nil face (rainbow-delimiters-depth-1-face) 788 . 789) (nil part-side javascript 787 . 788) (nil part-side javascript 786 . 787) (nil face (rainbow-delimiters-depth-1-face) 786 . 787) (nil part-side javascript 781 . 786) (nil part-side javascript 779 . 781) (nil face web-mode-keyword-face 779 . 781) (nil part-side javascript 778 . 779) (nil part-side javascript 777 . 778) (nil part-token string 777 . 778) (nil syntax-table (15) 777 . 778) (nil font-lock-face web-mode-javascript-string-face 777 . 778) (nil part-side javascript 773 . 777) (nil part-token string 773 . 777) (nil font-lock-face web-mode-javascript-string-face 773 . 777) (nil part-side javascript 772 . 773) (nil part-token string 772 . 773) (nil syntax-table (15) 772 . 773) (nil font-lock-face web-mode-javascript-string-face 772 . 773) (nil part-side javascript 764 . 772) (nil part-side javascript 763 . 764) (nil part-side javascript 761 . 763) (nil face web-mode-keyword-face 761 . 763) (nil part-side javascript 760 . 761) (nil part-side javascript 759 . 760) (nil part-token string 759 . 760) (nil syntax-table (15) 759 . 760) (nil font-lock-face web-mode-javascript-string-face 759 . 760) (nil part-side javascript 754 . 759) (nil part-token string 754 . 759) (nil font-lock-face web-mode-javascript-string-face 754 . 759) (nil part-side javascript 753 . 754) (nil part-token string 753 . 754) (nil syntax-table (15) 753 . 754) (nil font-lock-face web-mode-javascript-string-face 753 . 754) (nil part-side javascript 752 . 753) (nil face (rainbow-delimiters-depth-1-face) 752 . 753) (nil part-side javascript 751 . 752) (nil part-side javascript 749 . 751) (nil face web-mode-keyword-face 749 . 751) (nil part-side javascript 735 . 749) (735 . 938)) nil (25836 44578 899112 121000) 0 nil])
([nil nil ((#("              " 0 14 (part-side javascript)) . -735) 691) nil (25836 44578 899083 340000) 0 nil])
([nil nil ((626 . 640) (#(" " 0 1 (part-side javascript)) . 625) (undo-tree-id130 . -1) (626 . 627) (t 25836 44578 911739 755000)) nil (25836 45066 204419 720000) 0 nil])
([nil nil ((644 . 646) (643 . 645) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -643) (640 . 644)) nil (25836 45066 204416 201000) 0 nil])
([nil nil ((645 . 649)) nil (25836 45066 204414 283000) 0 nil])
([nil nil ((650 . 659)) nil (25836 45066 204413 210000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -658) (undo-tree-id129 . -1) 659) nil (25836 45066 204411 797000) 0 nil])
([nil nil ((660 . 662) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -660) (659 . 661)) nil (25836 45066 204409 253000) 0 nil])
([nil nil ((663 . 677) (#("                " 0 16 (part-side javascript face whitespace-trailing)) . 662) (undo-tree-id127 . 16) (662 . 678) (#("              " 0 14 (part-side javascript)) . 662) (undo-tree-id128 . -14) (661 . 677)) nil (25836 45066 204407 130000) 0 nil])
([nil nil ((662 . 678)) nil (25836 45066 204402 877000) 0 nil])
([nil nil ((678 . 692)) nil (25836 45066 204401 551000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -690) (undo-tree-id125 . -1) (#("r" 0 1 (part-side javascript)) . -691) (undo-tree-id126 . -1) 692) nil (25836 45066 204400 86000) 0 nil])
([nil nil ((690 . 695)) nil (25836 45066 204396 127000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -694) (undo-tree-id124 . -1) 695) nil (25836 45066 204394 744000) 0 nil])
([nil nil ((710 . 725)) nil (25836 45066 204392 345000) 0 nil])
([nil nil ((730 . 732) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -730) (725 . 731)) nil (25836 45066 204391 97000) 0 nil])
([nil nil ((733 . 747) (#("                " 0 16 (part-side javascript face whitespace-trailing)) . 732) (undo-tree-id122 . 16) (732 . 748) (#("              " 0 14 (part-side javascript)) . 732) (undo-tree-id123 . -14) (731 . 747)) nil (25836 45066 204388 853000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 747)) nil (25836 45066 204351 402000) 0 nil])
([nil nil ((766 . 767)) nil (25836 45066 204350 273000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-9-face))) . -766) (undo-tree-id121 . -1) 767) nil (25836 45066 204348 878000) 0 nil])
([nil nil ((766 . 767)) nil (25836 45066 204346 406000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -766) (undo-tree-id120 . -1) 767) nil (25836 45066 204345 168000) 0 nil])
([nil nil ((766 . 767)) nil (25836 45066 204342 501000) 0 nil])
([nil nil ((769 . 781) (733 . 749) (#("              " 0 14 (part-side javascript)) . 733) (766 . 767)) nil (25836 45066 204340 883000) 0 nil])
([nil nil ((732 . 748)) nil (25836 45066 204338 989000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 748) (undo-tree-id118 . -1) (undo-tree-id119 . 1)) nil (25836 45066 204337 739000) 0 nil])
([nil nil ((#("                " 0 16 (part-side javascript)) . -748)) nil (25836 45066 204334 312000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 766) (undo-tree-id117 . -1) (#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . 766)) nil (25836 45066 204332 789000) 0 nil])
([nil nil ((778 . 780) (#(" " 0 1 (part-side javascript)) . 765) (undo-tree-id116 . -1) (766 . 767)) nil (25836 45066 204329 538000) 0 nil])
([nil nil ((#("return node.rules " 0 6 (part-side javascript face web-mode-keyword-face) 6 18 (part-side javascript)) . 1109) (undo-tree-id114 . -18) (undo-tree-id115 . -18)) nil (25836 45066 204326 638000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1108) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 1109) nil (25836 45066 204322 416000) 0 nil])
([nil nil ((1108 . 1121)) nil (25836 45066 204312 583000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1275 . 1276) (nil part-side javascript 1275 . 1276) (nil face (rainbow-delimiters-depth-2-face) 1275 . 1276) (nil part-side javascript 1261 . 1275) (nil part-side javascript 1249 . 1261) (nil part-side javascript 1243 . 1249) (nil face web-mode-keyword-face 1243 . 1249) (nil part-side javascript 1227 . 1243) (nil part-side javascript 1226 . 1227) (nil part-side javascript 1225 . 1226) (nil face (rainbow-delimiters-depth-2-face) 1225 . 1226) (nil part-side javascript 1224 . 1225) (nil part-side javascript 1220 . 1224) (nil face web-mode-keyword-face 1220 . 1224) (nil part-side javascript 1206 . 1220) (nil part-side javascript 1205 . 1206) (nil part-side javascript 1204 . 1205) (nil face (rainbow-delimiters-depth-2-face) 1204 . 1205) (nil part-side javascript 1189 . 1204) (nil part-side javascript 1179 . 1189) (nil part-side javascript 1173 . 1179) (nil face web-mode-keyword-face 1173 . 1179) (nil part-side javascript 1157 . 1173) (nil part-side javascript 1156 . 1157) (nil part-side javascript 1155 . 1156) (nil face (rainbow-delimiters-depth-2-face) 1155 . 1156) (nil part-side javascript 1154 . 1155) (nil part-side javascript 1153 . 1154) (nil face (rainbow-delimiters-depth-2-face) 1153 . 1154) (nil part-side javascript 1148 . 1153) (nil part-side javascript 1146 . 1148) (nil face web-mode-keyword-face 1146 . 1148) (nil part-side javascript 1145 . 1146) (nil part-side javascript 1144 . 1145) (nil part-token string 1144 . 1145) (nil syntax-table (15) 1144 . 1145) (nil font-lock-face web-mode-javascript-string-face 1144 . 1145) (nil part-side javascript 1140 . 1144) (nil part-token string 1140 . 1144) (nil font-lock-face web-mode-javascript-string-face 1140 . 1144) (nil part-side javascript 1139 . 1140) (nil part-token string 1139 . 1140) (nil syntax-table (15) 1139 . 1140) (nil font-lock-face web-mode-javascript-string-face 1139 . 1140) (nil part-side javascript 1138 . 1139) (nil face (rainbow-delimiters-depth-2-face) 1138 . 1139) (nil part-side javascript 1137 . 1138) (nil part-side javascript 1135 . 1137) (nil face web-mode-keyword-face 1135 . 1137) (nil part-side javascript 1121 . 1135) (1121 . 1276)) nil (25836 45066 204308 492000) 0 nil])
([nil nil ((1276 . 1289)) nil (25836 45066 204294 185000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -1123) 1076) nil (25836 45066 204285 836000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -1277) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 1278 (t 25836 45066 213268 531000)) nil (25836 45085 228295 211000) 0 nil])
([nil nil ((1290 . 1292) (1277 . 1279) 1109) nil (25836 45085 228290 92000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1264) (undo-tree-id132 . -1)) nil (25836 45085 228287 235000) 0 nil])
([nil nil ((#("              " 0 14 (part-side javascript face whitespace-trailing)) . -1264) (undo-tree-id131 . -12)) nil (25836 45085 228280 166000) 0 nil])
([nil nil ((1279 . 1292) (t 25836 45085 241324 76000)) nil (25836 45137 457471 942000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript)) . -1328) (undo-tree-id135 . -1) 1329) nil (25836 45137 457470 328000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript)) . -1361) 1359) nil (25836 45137 457461 378000) 0 nil])
([nil nil ((1409 . 1413) 1411) nil (25836 45137 457459 777000) 0 nil])
([nil nil ((1436 . 1446) (#("      " 0 6 (part-side javascript)) . 1436) 1450) nil (25836 45137 457457 660000) 0 nil])
([nil nil ((1472 . 1476) 1482) nil (25836 45137 457456 30000) 0 nil])
([nil nil ((1495 . 1505) (#("      " 0 6 (part-side javascript)) . 1495) 1502) nil (25836 45137 457454 318000) 0 nil])
([nil nil ((1507 . 1515) (#("    " 0 4 (part-side javascript)) . 1507) 1513) nil (25836 45137 457452 125000) 0 nil])
([nil nil ((1278 . 1279)) nil (25836 45137 457449 946000) 0 nil])
([nil nil ((1278 . 1289)) nil (25836 45137 457447 889000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1517) (#("  " 0 2 (part-side javascript)) . -1509) (#("  " 0 2 (part-side javascript)) . -1482) (#("  " 0 2 (part-side javascript)) . -1454) (#("  " 0 2 (part-side javascript)) . -1423) 1215) nil (25836 45137 457437 910000) 0 nil])
([nil nil ((796 . 808) (792 . 794) (793 . 794) (t 25836 45137 473477 496000)) nil (25836 45209 724430 520000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -806) (808 . 809)) nil (25836 45209 724428 415000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -1087) (undo-tree-id142 . -1) 1088) nil (25836 45209 724426 757000) 0 nil])
([nil nil ((1087 . 1088)) nil (25836 45209 724424 439000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-9-face))) . -1303) (undo-tree-id141 . -1) 1304) nil (25836 45209 724423 86000) 0 nil])
([nil nil ((1303 . 1304)) nil (25836 45209 724420 626000) 0 nil])
([nil nil ((1306 . 1328) (#("            " 0 12 (part-side javascript)) . 1306) (undo-tree-id140 . -11) 1317) nil (25836 45209 724419 8000) 0 nil])
([nil nil ((1352 . 1374) (#("            " 0 12 (part-side javascript)) . 1352) 1374) nil (25836 45209 724415 953000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305) (#("
" 0 1 (part-side javascript)) . 1305) (undo-tree-id139 . -1)) nil (25836 45209 724411 429000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1305) (#(" " 0 1 (part-side javascript)) . 1305)) nil (25836 45209 724403 581000) 0 nil])
([nil nil ((1370 . 1394) (#("              " 0 14 (part-side javascript)) . 1370) 1392) nil (25836 45210 93567 921000) 0 nil])
([nil nil ((#("type" 0 4 (part-side javascript)) . 457) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (t 25836 45212 697700 656000)) nil (25837 52543 293936 893000) 0 nil] [nil nil ((1307 . 1319) (#(" " 0 1 (part-side javascript)) . 1306) (undo-tree-id138 . -1) (1307 . 1308)) ((#("
" 0 1 (part-side javascript)) . 1307) (undo-tree-id144 . -1) (1306 . 1307) (#("            " 0 12 (part-side javascript)) . 1307)) (25836 45209 950483 432000) 0 nil])
([nil nil ((nil rear-nonsticky nil 467 . 468) (nil part-side javascript 467 . 468) (nil part-token string 467 . 468) (nil font-lock-face web-mode-javascript-string-face 467 . 468) (nil part-side javascript 458 . 467) (nil part-token string 458 . 467) (nil font-lock-face web-mode-javascript-string-face 458 . 467) (nil part-side javascript 457 . 458) (nil part-token string 457 . 458) (nil syntax-table (15) 457 . 458) (nil font-lock-face web-mode-javascript-string-face 457 . 458) (457 . 468)) nil (25837 52543 293931 73000) 0 nil])
([nil nil ((1324 . 1336) (#(" " 0 1 (part-side javascript)) . 1323) (undo-tree-id137 . -1) (1324 . 1325)) ((#("
" 0 1 (part-side javascript)) . 1324) (undo-tree-id143 . -1) (1323 . 1324) (#("            " 0 12 (part-side javascript)) . 1324)) (25836 45209 726174 842000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t)) . -467) (undo-tree-id1 . -1) 468) nil (25837 52543 293926 313000) 0 nil])
([nil nil ((1341 . 1353) (#(" " 0 1 (part-side javascript)) . 1340) (undo-tree-id136 . -1) (1341 . 1342)) ((#("
" 0 1 (part-side javascript)) . 1341) (1340 . 1341) (#("            " 0 12 (part-side javascript)) . 1341)) (25836 45209 724387 178000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -457) (undo-tree-id0 . -1) 458) nil (25837 52543 293918 724000) 0 nil])
nil
([nil nil ((#("node.type" 0 9 (part-side javascript)) . 954) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (t 25837 52543 306321 24000)) nil (25837 52552 499296 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 967 . 968) (nil part-side javascript 959 . 968) (nil part-side javascript 954 . 959) (954 . 968)) nil (25837 52552 499275 205000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1462 . 1463) (nil part-side javascript 1461 . 1463) (1461 . 1463) (t 25837 52552 510453 116000)) nil (25837 55662 261147 331000) 0 nil])
([nil nil ((1463 . 1465) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1463) (1463 . 1464)) nil (25837 55662 261144 861000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 1464)) nil (25837 55662 261141 975000) 0 nil])
([nil nil ((1479 . 1480)) nil (25837 55964 760983 593000) 0 nil])
([nil nil ((#("~" 0 1 (part-side javascript)) . -1461) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("~" 0 1 (part-side javascript rear-nonsticky t)) . -1462) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 1463) nil (25837 55970 508494 45000) 0 nil] [nil nil ((#("condition" 0 9 (part-side javascript)) . 457) (undo-tree-id11 . -9) (undo-tree-id12 . -9) (undo-tree-id13 . -9) (t 25837 55662 269307 484000)) ((457 . 466)) (25837 55964 408268 462000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 1461)) nil (25837 55970 508486 82000) 0 nil])
([nil nil ((457 . 461)) ((#("type" 0 4 (part-side javascript)) . 457) (undo-tree-id15 . -4)) (25837 55963 960962 797000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1476) (undo-tree-id16 . -1)) nil (25837 55970 508480 368000) 0 nil])
([nil nil ((#("condition" 0 8 (part-side javascript) 8 9 (part-side javascript rear-nonsticky t)) . 954) (undo-tree-id8 . -9) (undo-tree-id9 . -9) (undo-tree-id10 . -9)) ((954 . 963)) (25837 55963 288920 857000) 0 nil])
([nil nil ((1461 . 1463) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1461) (1461 . 1462) (t 25837 55970 522058 272000)) nil (25837 56107 779188 974000) 0 nil])
([nil nil ((954 . 958)) ((#("type" 0 4 (part-side javascript)) . 954) (undo-tree-id14 . -4) (t 25837 55906 737074 477000)) (25837 55906 725932 169000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 1462)) nil (25837 56107 779186 2000) 0 nil])
nil
([nil nil ((1482 . 1484) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1482) (1477 . 1483)) nil (25837 56107 779183 844000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1482) (undo-tree-id22 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 1483)) nil (25837 56107 779180 610000) 0 nil])
([nil nil ((1482 . 1483)) nil (25837 56107 779176 797000) 0 nil])
([nil nil ((1461 . 1463) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1461) (1461 . 1462)) nil (25837 56107 779174 904000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 1462)) nil (25837 56107 779172 430000) 0 nil])
([nil nil ((1461 . 1462)) nil (25837 56107 779170 659000) 0 nil])
([nil nil ((#("|" 0 1 (part-side javascript)) . -1461) (undo-tree-id21 . -1) 1462) nil (25837 56107 779167 592000) 0 nil])
([nil nil ((1461 . 1463)) nil (25837 56107 779135 516000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1556) 1560 (t 25837 56107 792384 87000)) nil (25837 58511 854604 884000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1542) (#("  " 0 2 (part-side javascript)) . -1517) (#("  " 0 2 (part-side javascript)) . -1491) (#("  " 0 2 (part-side javascript)) . -1452) 138) nil (25837 58511 854595 829000) 0 nil])
([nil nil ((1464 . 1465) (t 25837 58511 866957 694000)) nil (25837 58520 354931 488000) 0 nil])
([nil nil ((1466 . 1467)) nil (25837 58520 354929 572000) 0 nil])
([nil nil ((1481 . 1482)) nil (25837 58520 354927 489000) 0 nil])
([nil nil ((1483 . 1484)) nil (25837 58520 354920 215000) 0 nil])
([nil nil ((1315 . 1338) (t 25837 58520 367088 335000)) nil (25837 58539 807366 409000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -120) (undo-tree-id24 . -1) 121) nil (25837 58590 815537 161000) 0 nil] [nil nil ((813 . 836)) ((#("
                      " 0 23 (part-side javascript)) . 813)) (25837 58539 542670 573000) 0 nil])
([nil nil ((120 . 121)) nil (25837 58590 815534 187000) 0 nil])
([nil nil ((838 . 862) (#("            " 0 12 (part-side javascript)) . 838) 860) ((838 . 850) (#("                        " 0 24 (part-side javascript)) . 838)) (25837 58539 340352 202000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -127) (undo-tree-id23 . -1) 128) nil (25837 58590 815532 317000) 0 nil])
([nil nil ((878 . 902) (#("            " 0 12 (part-side javascript)) . 878) 910) ((878 . 890) (#("                        " 0 24 (part-side javascript)) . 878)) (25837 58539 338969 324000) 0 nil])
([nil nil ((127 . 128)) nil (25837 58590 815519 811000) 0 nil])
nil
([nil nil ((372 . 373)) nil (25837 58590 815518 814000) 0 nil])
([nil nil ((630 . 631)) nil (25837 58590 815517 734000) 0 nil])
([nil nil ((876 . 877)) nil (25837 58590 815516 617000) 0 nil])
([nil nil ((1134 . 1135)) nil (25837 58590 815514 563000) 0 nil])
([nil nil ((815 . 816)) nil (25837 58590 815506 946000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -103) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("a" 0 1 (part-side javascript)) . -104) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("r" 0 1 (face web-mode-keyword-face part-side javascript)) . -105) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 106 (t 25837 58590 824172 546000)) nil (25837 58603 290066 704000) 0 nil])
([nil nil ((103 . 107)) nil (25837 58603 289796 911000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -106) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 107) nil (25837 58603 289790 962000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -103) (undo-tree-id144 . -1) (#("e" 0 1 (part-side javascript)) . -104) (undo-tree-id145 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -105) (undo-tree-id146 . -1) 106 (t 25837 58603 304364 835000)) nil (25837 58614 831276 259000) 0 nil])
([nil nil ((103 . 109)) nil (25837 58614 831270 304000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -108) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 109) nil (25837 58614 831264 129000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1322) (undo-tree-id153 . -1) (t 25837 58614 848542 760000)) nil (25837 58660 678184 132000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322) (#(" " 0 1 (part-side javascript)) . 1322)) nil (25837 58660 678168 232000) 0 nil])
([nil nil ((1325 . 1337) (#(" " 0 1 (part-side javascript)) . 1324) (undo-tree-id152 . -1) (1325 . 1326)) nil (25837 58660 678148 510000) 0 nil])
([nil nil ((1342 . 1354) (#(" " 0 1 (part-side javascript)) . 1341) (undo-tree-id151 . -1) (1342 . 1343)) nil (25837 58660 678139 830000) 0 nil])
([nil nil ((1359 . 1371) (#(" " 0 1 (part-side javascript)) . 1358) (undo-tree-id150 . -1) (1359 . 1360)) nil (25837 58660 678130 657000) 0 nil])
([nil nil ((1382 . 1405)) nil (25837 58660 678122 919000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1382) (undo-tree-id149 . -1)) nil (25837 58660 678119 204000) 0 nil])
([nil nil ((#("                      " 0 22 (face whitespace-trailing part-side javascript)) . -1382) (undo-tree-id147 . -22) (undo-tree-id148 . -22)) nil (25837 58660 678108 305000) 0 nil])
([nil nil ((1339 . 1340) (t 25837 58660 697249 959000)) nil (25837 58677 45287 266000) 0 nil])
([nil nil ((1357 . 1358)) nil (25837 58677 45284 889000) 0 nil])
([nil nil ((1379 . 1380)) nil (25837 58677 45277 369000) 0 nil])
([nil nil ((1384 . 1385) (t 25837 58677 57502 506000)) nil (25837 58687 364743 144000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1384) (undo-tree-id155 . -1) 1385 (t 25837 58687 377661 865000)) nil (25837 58695 883352 820000) 0 nil])
([nil nil ((1383 . 1393) (#(" " 0 1 (part-side javascript)) . 1382) (undo-tree-id154 . -1) (1383 . 1384)) nil (25837 58695 883345 160000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1409) (undo-tree-id156 . -1) (#(" " 0 1 (part-side javascript)) . -1410) (undo-tree-id157 . -1) (#(" " 0 1 (part-side javascript)) . -1411) (undo-tree-id158 . -1) (#(" " 0 1 (part-side javascript)) . -1412) (undo-tree-id159 . -1) (#(" " 0 1 (part-side javascript)) . -1413) (undo-tree-id160 . -1) (#(" " 0 1 (part-side javascript)) . -1414) (undo-tree-id161 . -1) (#(" " 0 1 (part-side javascript)) . -1415) (undo-tree-id162 . -1) (#(" " 0 1 (part-side javascript)) . -1416) (undo-tree-id163 . -1) (#(" " 0 1 (part-side javascript)) . -1417) (undo-tree-id164 . -1) 1418 (t 25837 58695 893793 394000)) nil (25837 58721 978489 70000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441) (#(" " 0 1 (part-side javascript)) . 1441)) nil (25837 58721 978460 911000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1443) (t 25837 58721 994196 675000)) nil (25837 58741 675804 76000) 0 nil])
([nil nil ((1468 . 1471) (t 25837 58741 690501 158000)) nil (25837 58749 359670 576000) 0 nil])
([nil nil ((169 . 174) (t 25837 64763 943260 343000)) nil (25860 30902 589357 811000) 0 nil])
([nil nil ((174 . 176)) nil (25860 30902 589356 123000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -175) (undo-tree-id169 . -1) 176) nil (25860 30902 589354 707000) 0 nil])
([nil nil ((175 . 177)) nil (25860 30902 589352 313000) 0 nil])
([nil nil ((#("#" 0 1 (part-side javascript)) . -174) (undo-tree-id166 . -1) (#("#" 0 1 (part-side javascript)) . -175) (undo-tree-id167 . -1) (#(" " 0 1 (part-side javascript)) . -176) (undo-tree-id168 . -1) 177) nil (25860 30902 589350 138000) 0 nil])
([nil nil ((174 . 195)) nil (25860 30902 589344 859000) 0 nil])
([nil nil ((195 . 199)) nil (25860 30902 589343 320000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -195) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -196) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -197) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -198) (undo-tree-id165 . -1) 199) nil (25860 30902 589341 147000) 0 nil])
([nil nil ((195 . 198)) nil (25860 30902 589329 493000) 0 nil])
([nil nil ((198 . 201)) nil (25860 30902 589328 349000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -200) (undo-tree-id158 . -1) 201) nil (25860 30902 589327 94000) 0 nil])
([nil nil ((200 . 208)) nil (25860 30902 589324 634000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -207) (undo-tree-id157 . -1) 208) nil (25860 30902 589323 277000) 0 nil])
([nil nil ((232 . 233)) nil (25860 30902 589320 759000) 0 nil])
([nil nil ((233 . 238)) nil (25860 30902 589319 503000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript face web-mode-function-name-face)) . -235) (undo-tree-id154 . -1) (#("r" 0 1 (part-side javascript face web-mode-function-name-face)) . -236) (undo-tree-id155 . -1) (#("a" 0 1 (part-side javascript face web-mode-function-name-face)) . -237) (undo-tree-id156 . -1) 238) nil (25860 30902 589317 268000) 0 nil])
([nil nil ((235 . 237)) nil (25860 30902 589311 700000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript face web-mode-function-name-face)) . -235) (undo-tree-id152 . -1) (#("g" 0 1 (part-side javascript face web-mode-function-name-face)) . -236) (undo-tree-id153 . -1) 237) nil (25860 30902 589309 368000) 0 nil])
([nil nil ((235 . 240)) nil (25860 30902 589296 747000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -239) (undo-tree-id151 . -1) 240) nil (25860 30902 589292 387000) 0 nil])
([nil nil ((1641 . 1646)) nil (25860 30902 589288 123000) 0 nil])
([nil nil ((1646 . 1649)) nil (25860 30902 589285 488000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -1647) (undo-tree-id149 . -1) (#("i" 0 1 (part-side javascript)) . -1648) (undo-tree-id150 . -1) 1649) nil (25860 30902 589282 946000) 0 nil])
([nil nil ((1647 . 1661)) nil (25860 30902 589273 493000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1660) (undo-tree-id148 . -1) 1661) nil (25860 30902 589270 30000) 0 nil])
([nil nil ((1660 . 1662) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -1660) (1660 . 1661)) nil (25860 30902 589265 210000) 0 nil])
([nil nil ((1663 . 1665) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -1663) (1662 . 1664)) nil (25860 30902 589262 186000) 0 nil])
([nil nil ((1666 . 1670) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 1665) (undo-tree-id146 . -4) (undo-tree-id147 . 6) (1669 . 1671) (1664 . 1670)) nil (25860 30902 589258 771000) 0 nil])
([nil nil ((1671 . 1672)) nil (25860 30902 589251 793000) 0 nil])
([nil nil ((1660 . 1661)) nil (25860 30902 589250 330000) 0 nil])
([nil nil ((1661 . 1668)) nil (25860 30902 589248 337000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1667) (undo-tree-id145 . -1) 1668) nil (25860 30902 589246 12000) 0 nil])
([nil nil ((1668 . 1686)) nil (25860 30902 589234 197000) 0 nil])
([nil nil ((1690 . 1696)) nil (25860 30902 589232 478000) 0 nil])
([nil nil ((1641 . 1646)) nil (25860 30902 589230 581000) 0 nil])
([nil nil ((1646 . 1664)) nil (25860 30902 589228 835000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1663) (undo-tree-id144 . -1) 1664) nil (25860 30902 589226 672000) 0 nil])
([nil nil ((1663 . 1665) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -1663) (1663 . 1664)) nil (25860 30902 589222 37000) 0 nil])
([nil nil ((1666 . 1668) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -1666) (1665 . 1667)) nil (25860 30902 589219 204000) 0 nil])
([nil nil ((1669 . 1673) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 1668) (undo-tree-id142 . -4) (undo-tree-id143 . 6) (1672 . 1674) (1667 . 1673)) nil (25860 30902 589215 952000) 0 nil])
([nil nil ((1674 . 1675)) nil (25860 30902 589206 906000) 0 nil])
([nil nil ((1664 . 1670)) nil (25860 30902 589205 164000) 0 nil])
([nil nil ((1674 . 1680)) nil (25860 30902 589202 496000) 0 nil])
([nil nil ((1680 . 1685)) nil (25860 30902 589200 768000) 0 nil])
([nil nil ((1684 . 1688)) nil (25860 30902 589197 637000) 0 nil])
([nil nil ((1689 . 1697)) nil (25860 30902 589195 25000) 0 nil])
([nil nil ((1697 . 1700)) nil (25860 30902 589193 740000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1699) (undo-tree-id141 . -1) 1700) nil (25860 30902 589191 234000) 0 nil])
([nil nil ((1683 . 1685) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1683) (1683 . 1684)) nil (25860 30902 589180 636000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 1684)) nil (25860 30902 589174 234000) 0 nil])
([nil nil ((1700 . 1706)) nil (25860 30902 589171 240000) 0 nil])
([nil nil ((1705 . 1709)) nil (25860 30902 589167 744000) 0 nil])
([nil nil ((1710 . 1715)) nil (25860 30902 589165 379000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1714) (undo-tree-id140 . -1) 1715) nil (25860 30902 589162 936000) 0 nil])
([nil nil ((1714 . 1721)) nil (25860 30902 589159 29000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1720) (undo-tree-id139 . -1) 1721) nil (25860 30902 589157 119000) 0 nil])
([nil nil ((1720 . 1722)) nil (25860 30902 589151 800000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1721) (undo-tree-id138 . -1) 1722) nil (25860 30902 589149 967000) 0 nil])
([nil nil ((1722 . 1724) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1722) (1721 . 1723)) nil (25860 30902 589144 406000) 0 nil])
([nil nil ((1725 . 1731) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 1724) (undo-tree-id136 . 8) (1724 . 1732) (#("      " 0 6 (part-side javascript)) . 1724) (undo-tree-id137 . -6) (1723 . 1731)) nil (25860 30902 589139 112000) 0 nil])
([nil nil ((1724 . 1732)) nil (25860 30902 589127 129000) 0 nil])
([nil nil ((1732 . 1745)) nil (25860 30902 589125 986000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -1739) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("i" 0 1 (part-side javascript)) . -1740) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("l" 0 1 (part-side javascript)) . -1741) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("t" 0 1 (part-side javascript)) . -1742) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("e" 0 1 (part-side javascript)) . -1743) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("r" 0 1 (part-side javascript)) . -1744) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 1745) nil (25860 30902 589122 649000) 0 nil])
([nil nil ((1739 . 1754)) nil (25860 30902 589107 555000) 0 nil])
([nil nil ((1744 . 1761) (#("filter_get" 0 10 (part-side javascript)) . -1744) (undo-tree-id121 . -10) (undo-tree-id122 . -10) (undo-tree-id123 . -8) 1754) nil (25860 30902 589105 840000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 1763) (1762 . 1763) (1761 . 1763) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -1761) (1761 . 1762)) nil (25860 30902 589100 414000) 0 nil])
([nil nil ((1762 . 1766)) nil (25860 30902 589098 228000) 0 nil])
([nil nil ((1769 . 1771) (1768 . 1770) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -1768) (1766 . 1769)) nil (25860 30902 589096 651000) 0 nil])
([nil nil ((1770 . 1776)) nil (25860 30902 589094 634000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -1775) (undo-tree-id120 . -1) 1776) nil (25860 30902 589093 12000) 0 nil])
([nil nil ((1786 . 1793)) nil (25860 30902 589089 521000) 0 nil])
([nil nil ((1801 . 1803) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1801) (1793 . 1802)) nil (25860 30902 589088 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1842 . 1843) (nil part-side javascript 1842 . 1843) (nil face (rainbow-delimiters-depth-5-face) 1842 . 1843) (nil part-side javascript 1835 . 1842) (nil part-side javascript 1833 . 1835) (nil face web-mode-keyword-face 1833 . 1835) (nil part-side javascript 1832 . 1833) (nil part-side javascript 1831 . 1832) (nil part-token string 1831 . 1832) (nil syntax-table (15) 1831 . 1832) (nil font-lock-face web-mode-javascript-string-face 1831 . 1832) (nil part-side javascript 1827 . 1831) (nil part-token string 1827 . 1831) (nil font-lock-face web-mode-javascript-string-face 1827 . 1831) (nil part-side javascript 1826 . 1827) (nil part-token string 1826 . 1827) (nil syntax-table (15) 1826 . 1827) (nil font-lock-face web-mode-javascript-string-face 1826 . 1827) (nil part-side javascript 1825 . 1826) (nil part-side javascript 1822 . 1825) (nil part-side javascript 1815 . 1822) (nil part-side javascript 1813 . 1815) (nil face web-mode-keyword-face 1813 . 1815) (nil part-side javascript 1812 . 1813) (nil part-side javascript 1811 . 1812) (nil part-token string 1811 . 1812) (nil syntax-table (15) 1811 . 1812) (nil font-lock-face web-mode-javascript-string-face 1811 . 1812) (nil part-side javascript 1807 . 1811) (nil part-token string 1807 . 1811) (nil font-lock-face web-mode-javascript-string-face 1807 . 1811) (nil part-side javascript 1806 . 1807) (nil part-token string 1806 . 1807) (nil syntax-table (15) 1806 . 1807) (nil font-lock-face web-mode-javascript-string-face 1806 . 1807) (nil part-side javascript 1805 . 1806) (nil face (rainbow-delimiters-depth-5-face) 1805 . 1806) (nil part-side javascript 1804 . 1805) (nil part-side javascript 1802 . 1804) (nil face web-mode-keyword-face 1802 . 1804) (1802 . 1843)) nil (25860 30902 589084 451000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face))) . -1842) (undo-tree-id119 . -1) 1843) nil (25860 30902 589072 994000) 0 nil])
([nil nil ((#("if ('rule' in filter || " 0 2 (part-side javascript face web-mode-keyword-face) 2 3 (part-side javascript) 3 4 (part-side javascript face (rainbow-delimiters-depth-5-face)) 4 5 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 5 9 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (part-side javascript) 11 13 (part-side javascript face web-mode-keyword-face) 13 24 (part-side javascript)) . 1802) (undo-tree-id117 . -24) (undo-tree-id118 . -24)) nil (25860 30902 589070 142000) 0 nil])
([nil nil ((1819 . 1820)) nil (25860 30902 589066 631000) 0 nil])
([nil nil ((1820 . 1822) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1820) (1820 . 1821)) nil (25860 30902 589065 251000) 0 nil])
([nil nil ((1823 . 1829) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 1822) (undo-tree-id115 . 8) (1822 . 1830) (#("      " 0 6 (part-side javascript)) . 1822) (undo-tree-id116 . -6) (1821 . 1829)) nil (25860 30902 589062 992000) 0 nil])
([nil nil ((1822 . 1830)) nil (25860 30902 589058 245000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1875 . 1876) (nil part-side javascript 1875 . 1876) (nil face (rainbow-delimiters-depth-5-face) 1875 . 1876) (nil part-side javascript 1874 . 1875) (nil face (rainbow-delimiters-depth-6-face) 1874 . 1875) (nil part-side javascript 1873 . 1874) (nil part-token string 1873 . 1874) (nil syntax-table (15) 1873 . 1874) (nil font-lock-face web-mode-javascript-string-face 1873 . 1874) (nil part-side javascript 1868 . 1873) (nil part-token string 1868 . 1873) (nil font-lock-face web-mode-javascript-string-face 1868 . 1873) (nil part-side javascript 1867 . 1868) (nil part-token string 1867 . 1868) (nil syntax-table (15) 1867 . 1868) (nil font-lock-face web-mode-javascript-string-face 1867 . 1868) (nil part-side javascript 1866 . 1867) (nil face (rainbow-delimiters-depth-6-face) 1866 . 1867) (nil part-side javascript 1860 . 1866) (nil part-side javascript 1859 . 1860) (nil face (rainbow-delimiters-depth-5-face) 1859 . 1860) (nil part-side javascript 1842 . 1859) (nil face web-mode-function-call-face 1842 . 1859) (nil part-side javascript 1841 . 1842) (nil part-side javascript 1837 . 1841) (nil face web-mode-constant-face 1837 . 1841) (nil part-side javascript 1836 . 1837) (nil part-side javascript 1830 . 1836) (nil face web-mode-keyword-face 1830 . 1836) (1830 . 1876)) nil (25860 30902 589055 550000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -1872) (undo-tree-id114 . -1) 1873) nil (25860 30902 589047 27000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -1699) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (part-side javascript)) . -1700) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("|" 0 1 (part-side javascript)) . -1701) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("|" 0 1 (part-side javascript)) . -1702) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#(" " 0 1 (part-side javascript)) . -1703) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -1704) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("r" 0 1 (part-side javascript)) . -1705) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("u" 0 1 (part-side javascript)) . -1706) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("l" 0 1 (part-side javascript)) . -1707) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("e" 0 1 (part-side javascript)) . -1708) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -1709) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (part-side javascript)) . -1710) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("i" 0 1 (part-side javascript)) . -1711) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("n" 0 1 (part-side javascript face web-mode-keyword-face)) . -1712) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (part-side javascript)) . -1713) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("f" 0 1 (part-side javascript)) . -1714) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("i" 0 1 (part-side javascript)) . -1715) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("l" 0 1 (part-side javascript)) . -1716) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("t" 0 1 (part-side javascript)) . -1717) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("e" 0 1 (part-side javascript)) . -1718) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("r" 0 1 (part-side javascript)) . -1719) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 1720) nil (25860 30902 589038 3000) 0 nil])
([nil nil ((1699 . 1700)) nil (25860 30902 588955 893000) 0 nil])
([nil nil ((1689 . 1690)) nil (25860 30902 588954 774000) 0 nil])
([nil nil ((1864 . 1871)) nil (25860 30902 588953 753000) 0 nil])
([nil nil ((1871 . 1873)) nil (25860 30902 588952 593000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -1872) (undo-tree-id71 . -1) 1873) nil (25860 30902 588951 217000) 0 nil])
([nil nil ((1879 . 1881) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1879) (1872 . 1880)) nil (25860 30902 588948 468000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1875) (undo-tree-id68 . -1) (#("i" 0 1 (part-side javascript face web-mode-function-call-face)) . -1876) (undo-tree-id69 . -1) (#("f" 0 1 (part-side javascript face web-mode-keyword-face)) . -1877) (undo-tree-id70 . -1) 1878) nil (25860 30902 588946 235000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1875) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1876) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1877) (undo-tree-id67 . -1) 1878) nil (25860 30902 588940 51000) 0 nil])
([nil nil ((1875 . 1877) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1875) (1875 . 1876)) nil (25860 30902 588930 196000) 0 nil])
([nil nil ((1878 . 1884) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 1877) (undo-tree-id61 . 8) (1877 . 1885) (#("      " 0 6 (part-side javascript)) . 1877) (undo-tree-id62 . -6) (1876 . 1884)) nil (25860 30902 588927 983000) 0 nil])
([nil nil ((1875 . 1876)) nil (25860 30902 588923 713000) 0 nil])
([nil nil ((1878 . 1886)) nil (25860 30902 588922 755000) 0 nil])
([nil nil ((1886 . 1893)) nil (25860 30902 588921 386000) 0 nil])
([nil nil ((1893 . 1895) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -1893) (1893 . 1894)) nil (25860 30902 588919 980000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1932 . 1933) (nil part-side javascript 1894 . 1933) (1894 . 1933)) nil (25860 30902 588918 263000) 0 nil])
([nil nil ((1877 . 1886)) nil (25860 30902 588916 538000) 0 nil])
([nil nil ((1886 . 1890)) nil (25860 30902 588915 372000) 0 nil])
([nil nil ((#("k" 0 1 (part-side javascript)) . -1886) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("e" 0 1 (part-side javascript)) . -1887) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("y" 0 1 (part-side javascript)) . -1888) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#(" " 0 1 (part-side javascript)) . -1889) (undo-tree-id60 . -1) 1890) nil (25860 30902 588912 866000) 0 nil])
([nil nil ((1886 . 1890)) nil (25860 30902 588902 372000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -1886) (undo-tree-id50 . -1) (#("e" 0 1 (part-side javascript)) . -1887) (undo-tree-id51 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -1888) (undo-tree-id52 . -1) (#(" " 0 1 (part-side javascript)) . -1889) (undo-tree-id53 . -1) 1890) nil (25860 30902 588900 459000) 0 nil])
([nil nil ((1886 . 1899)) nil (25860 30902 588894 129000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -1897) (undo-tree-id48 . -1) (#(" " 0 1 (part-side javascript)) . -1898) (undo-tree-id49 . -1) 1899) nil (25860 30902 588892 487000) 0 nil])
([nil nil ((1897 . 1898)) nil (25860 30902 588888 269000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1936 . 1937) (nil part-side javascript 1898 . 1937) (1898 . 1937)) nil (25860 30902 588886 916000) 0 nil])
([nil nil ((#("node.field + node.operator + node.value" 0 38 (part-side javascript) 38 39 (rear-nonsticky t part-side javascript)) . 1954) (undo-tree-id46 . -39) (undo-tree-id47 . -39)) nil (25860 30902 588884 828000) 0 nil])
([nil nil ((1954 . 1965)) nil (25860 30902 588880 717000) 0 nil])
([nil nil ((#("T" 0 1 (part-side javascript)) . -1960) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("r" 0 1 (part-side javascript)) . -1961) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("u" 0 1 (part-side javascript)) . -1962) (undo-tree-id43 . -1) (#("e" 0 1 (part-side javascript)) . -1963) (undo-tree-id44 . -1) (#(" " 0 1 (part-side javascript)) . -1964) (undo-tree-id45 . -1) 1965) nil (25860 30902 588873 424000) 0 nil])
([nil nil ((1960 . 1965)) nil (25860 30902 588858 394000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1964) (undo-tree-id38 . -1) 1965) nil (25860 30902 588856 720000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1898) (undo-tree-id34 . -1) (#("o" 0 1 (part-side javascript)) . -1899) (undo-tree-id35 . -1) (#("d" 0 1 (part-side javascript)) . -1900) (undo-tree-id36 . -1) (#("e" 0 1 (part-side javascript)) . -1901) (undo-tree-id37 . -1) 1902) nil (25860 30902 588853 210000) 0 nil])
([nil nil ((1898 . 1904)) nil (25860 30902 588845 576000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1913) (undo-tree-id30 . -1) (#("o" 0 1 (part-side javascript)) . -1914) (undo-tree-id31 . -1) (#("d" 0 1 (part-side javascript)) . -1915) (undo-tree-id32 . -1) (#("e" 0 1 (part-side javascript)) . -1916) (undo-tree-id33 . -1) 1917) nil (25860 30902 588843 535000) 0 nil])
([nil nil ((1913 . 1919)) nil (25860 30902 588793 658000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1931) (undo-tree-id26 . -1) (#("o" 0 1 (part-side javascript)) . -1932) (undo-tree-id27 . -1) (#("d" 0 1 (part-side javascript)) . -1933) (undo-tree-id28 . -1) (#("e" 0 1 (part-side javascript)) . -1934) (undo-tree-id29 . -1) 1935) nil (25860 30902 588791 635000) 0 nil])
([nil nil ((1931 . 1937)) nil (25860 30902 588785 209000) 0 nil])
([nil nil ((1733 . 1735) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -1733) (1720 . 1734)) nil (25860 30902 588783 941000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 1734)) nil (25860 30902 588782 234000) 0 nil])
([nil nil ((1773 . 1774)) nil (25860 30902 588781 26000) 0 nil])
([nil nil ((1734 . 1736) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -1734) (1734 . 1735)) nil (25860 30902 588779 659000) 0 nil])
([nil nil ((1736 . 1738)) nil (25860 30902 588778 116000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1776 . 1777) (nil part-side javascript 1776 . 1777) (nil face (rainbow-delimiters-depth-6-face) 1776 . 1777) (nil part-side javascript 1775 . 1776) (nil face (rainbow-delimiters-depth-7-face) 1775 . 1776) (nil part-side javascript 1774 . 1775) (nil part-token string 1774 . 1775) (nil syntax-table (15) 1774 . 1775) (nil font-lock-face web-mode-javascript-string-face 1774 . 1775) (nil part-side javascript 1769 . 1774) (nil part-token string 1769 . 1774) (nil font-lock-face web-mode-javascript-string-face 1769 . 1774) (nil part-side javascript 1768 . 1769) (nil part-token string 1768 . 1769) (nil syntax-table (15) 1768 . 1769) (nil font-lock-face web-mode-javascript-string-face 1768 . 1769) (nil part-side javascript 1767 . 1768) (nil face (rainbow-delimiters-depth-7-face) 1767 . 1768) (nil part-side javascript 1761 . 1767) (nil part-side javascript 1760 . 1761) (nil face (rainbow-delimiters-depth-6-face) 1760 . 1761) (nil part-side javascript 1743 . 1760) (nil face web-mode-function-call-face 1743 . 1760) (nil part-side javascript 1742 . 1743) (nil part-side javascript 1738 . 1742) (nil face web-mode-constant-face 1738 . 1742) (1738 . 1777)) nil (25860 30902 588775 613000) 0 nil])
([nil nil ((1777 . 1779)) nil (25860 30902 588768 478000) 0 nil])
([nil nil ((1777 . 1778) (1776 . 1778) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -1776) (1776 . 1777)) nil (25860 30902 588767 239000) 0 nil])
([nil nil ((1821 . 1822) (1820 . 1822) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -1820) (1820 . 1821)) nil (25860 30902 588764 891000) 0 nil])
([nil nil ((2107 . 2121)) nil (25860 30902 588763 112000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2117) (undo-tree-id22 . -1) (#(" " 0 1 (part-side javascript)) . -2118) (undo-tree-id23 . -1) (#("0" 0 1 (part-side javascript)) . -2119) (undo-tree-id24 . -1) (#(" " 0 1 (part-side javascript)) . -2120) (undo-tree-id25 . -1) 2121) nil (25860 30902 588761 267000) 0 nil])
([nil nil ((2117 . 2119)) nil (25860 30902 588755 32000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2116) (undo-tree-id19 . -1) (#("a" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2117) (undo-tree-id20 . -1) (#(" " 0 1 (part-side javascript)) . -2118) (undo-tree-id21 . -1) 2119) nil (25860 30902 588753 240000) 0 nil])
([nil nil ((2116 . 2128)) nil (25860 30902 588748 247000) 0 nil])
([nil nil ((2128 . 2143)) nil (25860 30902 588747 168000) 0 nil])
([nil nil ((2133 . 2150) (#("filter_get" 0 10 (part-side javascript)) . -2133) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -8) 2143) nil (25860 30902 588745 714000) 0 nil])
([nil nil ((2151 . 2158) (2150 . 2152) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2150) (2150 . 2151)) nil (25860 30902 588740 567000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -2157) (undo-tree-id15 . -1) 2158) nil (25860 30902 588738 538000) 0 nil])
([nil nil ((2157 . 2159)) nil (25860 30902 588736 227000) 0 nil])
([nil nil ((2160 . 2167)) nil (25860 30902 588735 273000) 0 nil])
([nil nil ((2167 . 2178)) nil (25860 30902 588734 247000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2177) (undo-tree-id14 . -1) 2178) nil (25860 30902 588732 924000) 0 nil])
([nil nil ((2177 . 2179)) nil (25860 30902 588730 175000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2179) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 2180) nil (25860 30902 588728 916000) 0 nil])
([nil nil ((2179 . 2180)) nil (25860 30902 588725 353000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2179) (undo-tree-id11 . -1) 2180) nil (25860 30902 588724 64000) 0 nil])
([nil nil ((2179 . 2182)) nil (25860 30902 588721 736000) 0 nil])
([nil nil ((2173 . 2185) (#("val_objec" 0 9 (part-side javascript face web-mode-variable-name-face)) . -2173) (undo-tree-id9 . -9) (undo-tree-id10 . -9) 2182) nil (25860 30902 588720 239000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2184) (undo-tree-id8 . -1) 2185) nil (25860 30902 588716 288000) 0 nil])
([nil nil ((2184 . 2185)) nil (25860 30902 588714 70000) 0 nil])
([nil nil ((2185 . 2186)) nil (25860 30902 588713 17000) 0 nil])
([nil nil ((2185 . 2193)) nil (25860 30902 588711 823000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -2192) (undo-tree-id7 . -1) 2193) nil (25860 30902 588710 323000) 0 nil])
([nil nil ((2192 . 2203)) nil (25860 30902 588707 385000) 0 nil])
([nil nil ((2193 . 2210) (#("filter_get" 0 10 (part-side javascript)) . -2193) (undo-tree-id4 . -10) (undo-tree-id5 . -10) (undo-tree-id6 . -8) 2203) nil (25860 30902 588705 752000) 0 nil])
([nil nil ((2211 . 2220) (2210 . 2212) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2210) (2210 . 2211)) nil (25860 30902 588700 472000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -2219) (undo-tree-id3 . -1) 2220) nil (25860 30902 588698 453000) 0 nil])
([nil nil ((2219 . 2220)) nil (25860 30902 588695 596000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2219) (undo-tree-id2 . -1) 2220) nil (25860 30902 588694 103000) 0 nil])
([nil nil ((2222 . 2228) (#("      " 0 6 (part-side javascript)) . 2221) (undo-tree-id1 . -6) (2220 . 2228)) nil (25860 30902 588690 816000) 0 nil])
([nil nil ((2222 . 2228) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 2221) (2221 . 2227) (2221 . 2222)) nil (25860 30902 588686 423000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . -2223) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . -2222) (undo-tree-id0 . -6) 2221) nil (25860 30902 588679 836000) 0 nil])
([nil nil ((#("
      const val_object_a = this.filter_get_values(filter_a)
      const val_object_b = this.filter_get_values(filter_b)" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 25 (part-side javascript face web-mode-variable-name-face) 25 27 (part-side javascript) 27 28 (part-side javascript) 28 32 (part-side javascript face web-mode-constant-face) 32 33 (part-side javascript) 33 50 (part-side javascript face web-mode-function-call-face) 50 51 (part-side javascript face (rainbow-delimiters-depth-4-face)) 51 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-4-face)) 60 61 (part-side javascript) 61 67 (part-side javascript) 67 72 (part-side javascript face web-mode-keyword-face) 72 73 (part-side javascript) 73 85 (part-side javascript face web-mode-variable-name-face) 85 87 (part-side javascript) 87 88 (part-side javascript) 88 92 (part-side javascript face web-mode-constant-face) 92 93 (part-side javascript) 93 110 (part-side javascript face web-mode-function-call-face) 110 111 (part-side javascript face (rainbow-delimiters-depth-4-face)) 111 119 (part-side javascript) 119 120 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 2100) (undo-tree-id208 . -120) (undo-tree-id209 . -93) (undo-tree-id210 . -7) (undo-tree-id211 . -1) (undo-tree-id212 . -120) (undo-tree-id213 . -120) (t 25860 30902 602439 356000)) nil (25860 30997 165988 906000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2101) (undo-tree-id205 . -1) (#("
" 0 1 (part-side javascript)) . 2101) (undo-tree-id206 . -1) (undo-tree-id207 . -1)) nil (25860 30997 165976 839000) 0 nil])
([nil nil ((2101 . 2107)) nil (25860 30997 165968 765000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -2101) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) 2107) nil (25860 30997 165951 910000) 0 nil])
([nil nil ((2101 . 2107) (t 25860 30997 177528 918000)) nil (25860 31540 858424 663000) 0 nil])
([nil nil ((2120 . 2122) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2120) (2107 . 2121)) nil (25860 31540 858421 854000) 0 nil])
([nil nil ((2122 . 2123)) nil (25860 31540 858420 189000) 0 nil])
([nil nil ((2123 . 2126)) nil (25860 31540 858418 967000) 0 nil])
([nil nil ((2123 . 2130) (#("for" 0 3 (part-side javascript)) . -2123) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) 2126) nil (25860 31540 858417 346000) 0 nil])
([nil nil ((2131 . 2142) (2130 . 2132) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2130) (2130 . 2131)) nil (25860 31540 858411 849000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -2139) (undo-tree-id232 . -1) (#(">" 0 1 (part-side javascript)) . -2140) (undo-tree-id233 . -1) (#(" " 0 1 (part-side javascript)) . -2141) (undo-tree-id234 . -1) 2142) nil (25860 31540 858408 882000) 0 nil])
([nil nil ((2142 . 2144) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -2142) (2139 . 2143)) nil (25860 31540 858402 969000) 0 nil])
([nil nil ((2145 . 2151) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 2144) (undo-tree-id230 . 8) (2144 . 2152) (#("      " 0 6 (part-side javascript)) . 2144) (undo-tree-id231 . -6) (2143 . 2151)) nil (25860 31540 858400 461000) 0 nil])
([nil nil ((2144 . 2152)) nil (25860 31540 858395 934000) 0 nil])
([nil nil ((2102 . 2108) (#("      " 0 6 (part-side javascript)) . 2101) (undo-tree-id229 . -6) (2107 . 2108)) nil (25860 31540 858394 248000) 0 nil])
([nil nil ((2101 . 2107)) nil (25860 31540 858391 222000) 0 nil])
([nil nil ((2107 . 2113)) nil (25860 31540 858389 914000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -2107) (undo-tree-id223 . -1) (#("o" 0 1 (part-side javascript)) . -2108) (undo-tree-id224 . -1) (#("n" 0 1 (part-side javascript)) . -2109) (undo-tree-id225 . -1) (#("s" 0 1 (part-side javascript)) . -2110) (undo-tree-id226 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -2111) (undo-tree-id227 . -1) (#(" " 0 1 (part-side javascript)) . -2112) (undo-tree-id228 . -1) 2113) nil (25860 31540 858386 930000) 0 nil])
([nil nil ((2107 . 2125)) nil (25860 31540 858376 481000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2124) (undo-tree-id222 . -1) 2125) nil (25860 31540 858374 889000) 0 nil])
([nil nil ((2176 . 2191)) nil (25860 31540 858371 840000) 0 nil])
([nil nil ((#("9" 0 1 (part-side javascript)) . -2187) (undo-tree-id218 . -1) (#("i" 0 1 (part-side javascript)) . -2188) (undo-tree-id219 . -1) (#("n" 0 1 (part-side javascript)) . -2189) (undo-tree-id220 . -1) (#(" " 0 1 (part-side javascript)) . -2190) (undo-tree-id221 . -1) 2191) nil (25860 31540 858369 50000) 0 nil])
([nil nil ((2187 . 2199)) nil (25860 31540 858350 57000) 0 nil])
([nil nil ((2179 . 2181) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -2179) (2179 . 2180)) nil (25860 31540 858345 125000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 2180)) nil (25860 31540 858339 702000) 0 nil])
([nil nil ((2201 . 2203) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -2201) (2200 . 2202)) nil (25860 31540 858335 105000) 0 nil])
([nil nil ((2204 . 2212) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 2203) (undo-tree-id216 . -8) (undo-tree-id217 . 10) (2211 . 2213) (2202 . 2212)) nil (25860 31540 858328 147000) 0 nil])
([nil nil ((2203 . 2213)) nil (25860 31540 858313 928000) 0 nil])
([nil nil ((2213 . 2225)) nil (25860 31540 858310 261000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2224) (undo-tree-id215 . -1) 2225) nil (25860 31540 858305 672000) 0 nil])
([nil nil ((2243 . 2250)) nil (25860 31540 858296 521000) 0 nil])
([nil nil ((2250 . 2267)) nil (25860 31540 858292 444000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2266) (undo-tree-id214 . -1) 2267) nil (25860 31540 858284 230000) 0 nil])
([nil nil ((2257 . 2259) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2257) (2257 . 2258) (t 25860 31540 876094 477000)) nil (25860 33531 831417 110000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 2258)) nil (25860 33531 831414 596000) 0 nil])
([nil nil ((2267 . 2268)) nil (25860 33531 831413 570000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2272 . 2273) (nil part-side javascript 2272 . 2273) (nil face (rainbow-delimiters-depth-5-face) 2272 . 2273) (nil part-side javascript 2271 . 2272) (nil face (rainbow-delimiters-depth-5-face) 2271 . 2272) (nil part-side javascript 2267 . 2271) (nil face web-mode-function-call-face 2267 . 2271) (nil part-side javascript 2258 . 2267) (2258 . 2273)) nil (25860 33531 831411 690000) 0 nil])
([nil nil ((2273 . 2281)) nil (25860 33531 831408 7000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2280) (undo-tree-id275 . -1) 2281) nil (25860 33531 831406 497000) 0 nil])
([nil nil ((2280 . 2282)) nil (25860 33531 831403 772000) 0 nil])
([nil nil ((2299 . 2304)) nil (25860 33531 831402 479000) 0 nil])
([nil nil ((2304 . 2307)) nil (25860 33531 831401 71000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript)) . -2304) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("e" 0 1 (part-side javascript)) . -2305) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -2306) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 2307) nil (25860 33531 831398 451000) 0 nil])
([nil nil ((2304 . 2310)) nil (25860 33531 831017 225000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -2309) (undo-tree-id268 . -1) 2310) nil (25860 33531 831015 392000) 0 nil])
([nil nil ((2309 . 2320)) nil (25860 33531 831012 872000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -2317) (undo-tree-id265 . -1) (#("o" 0 1 (part-side javascript)) . -2318) (undo-tree-id266 . -1) (#("m" 0 1 (part-side javascript)) . -2319) (undo-tree-id267 . -1) 2320) nil (25860 33531 831010 679000) 0 nil])
([nil nil ((2321 . 2323) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -2321) (2317 . 2322)) nil (25860 33531 831005 293000) 0 nil])
([nil nil ((2322 . 2330)) nil (25860 33531 831003 150000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -2328) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("a" 0 1 (part-side javascript)) . -2329) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 2330) nil (25860 33531 831001 278000) 0 nil])
([nil nil ((2328 . 2338)) nil (25860 33531 830994 805000) 0 nil])
([nil nil ((2340 . 2342) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -2340) (2339 . 2341)) nil (25860 33531 830993 590000) 0 nil])
([nil nil ((2343 . 2347) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 2342) (undo-tree-id259 . -4) (undo-tree-id260 . 6) (2346 . 2348) (2341 . 2347)) nil (25860 33531 830991 424000) 0 nil])
([nil nil ((2348 . 2349)) nil (25860 33531 830987 64000) 0 nil])
([nil nil ((2342 . 2348)) nil (25860 33531 830985 529000) 0 nil])
([nil nil ((2348 . 2354)) nil (25860 33531 830984 291000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2347) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("c" 0 1 (part-side javascript)) . -2348) (undo-tree-id253 . -1) (#("o" 0 1 (part-side javascript)) . -2349) (undo-tree-id254 . -1) (#("n" 0 1 (part-side javascript)) . -2350) (undo-tree-id255 . -1) (#("s" 0 1 (part-side javascript)) . -2351) (undo-tree-id256 . -1) (#("t" 0 1 (part-side javascript face web-mode-keyword-face)) . -2352) (undo-tree-id257 . -1) (#(" " 0 1 (part-side javascript)) . -2353) (undo-tree-id258 . -1) 2354) nil (25860 33531 830981 191000) 0 nil])
([nil nil ((2347 . 2348)) nil (25860 33531 830967 713000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -2347) (undo-tree-id249 . -1) 2348) nil (25860 33531 830966 261000) 0 nil])
([nil nil ((2347 . 2348)) nil (25860 33531 830963 292000) 0 nil])
([nil nil ((2348 . 2352)) nil (25860 33531 830962 37000) 0 nil])
([nil nil ((2352 . 2356)) nil (25860 33531 830960 757000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2351) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2352) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("o" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2353) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("m" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2354) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("p" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2355) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 2356) nil (25860 33531 830957 725000) 0 nil])
([nil nil ((2351 . 2352)) nil (25860 33531 830941 776000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -2351) (undo-tree-id238 . -1) 2352) nil (25860 33531 830939 394000) 0 nil])
([nil nil ((2363 . 2365) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2363) (2351 . 2364)) nil (25860 33531 830922 128000) 0 nil])
([nil nil ((2124 . 2131) (t 25860 33531 846655 163000)) nil (25864 8531 792607 376000) 0 nil])
([nil nil ((2143 . 2151) (2142 . 2144) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -2142) (2131 . 2143)) nil (25864 8531 792594 918000) 0 nil])
([nil nil ((2026 . 2028) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -2026) (2026 . 2027) (t 25864 8531 809668 902000)) nil (25864 8605 532860 758000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 2027)) nil (25864 8605 532855 130000) 0 nil])
([nil nil ((2030 . 2031)) nil (25864 8721 118862 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2176 . 2177) (nil part-side javascript 2176 . 2177) (nil face (rainbow-delimiters-depth-4-face) 2176 . 2177) (nil part-side javascript 2173 . 2176) (nil part-side javascript 2172 . 2173) (nil face (rainbow-delimiters-depth-4-face) 2172 . 2173) (nil part-side javascript 2168 . 2172) (nil face web-mode-function-call-face 2168 . 2172) (nil part-side javascript 2161 . 2168) (2161 . 2177) (t 25864 8605 548901 672000)) nil (25864 8729 362643 396000) 0 nil] [nil nil ((2154 . 2161) (t 25864 8605 548901 672000)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 2154) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -1) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -7) (undo-tree-id384 . -7) (undo-tree-id385 . -7) (undo-tree-id386 . -7) (undo-tree-id387 . -7) (undo-tree-id388 . -7) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -7) (undo-tree-id394 . -7) (undo-tree-id395 . -7) (undo-tree-id396 . -7) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) (undo-tree-id401 . -7) (undo-tree-id402 . -7) (undo-tree-id403 . -7) (undo-tree-id404 . -7) (undo-tree-id405 . -7) (undo-tree-id406 . -7) (undo-tree-id407 . -7) (undo-tree-id408 . -7) (undo-tree-id409 . -7) (undo-tree-id410 . -7) (undo-tree-id411 . -7) (undo-tree-id412 . -7) (undo-tree-id413 . -7) (undo-tree-id414 . -7) (undo-tree-id415 . -7) (undo-tree-id416 . -7) (undo-tree-id417 . -7) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -1) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -7) (undo-tree-id428 . -7) (undo-tree-id429 . -7) (undo-tree-id430 . -7) (undo-tree-id431 . -7) (undo-tree-id432 . -7) (undo-tree-id433 . -7) (undo-tree-id434 . -7) (undo-tree-id435 . -7)) (25864 8720 726171 562000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face))) . 2173) (#("j" 0 1 (part-side javascript)) . 2173) (#("b" 0 1 (part-side javascript)) . 2173) (#("o" 0 1 (part-side javascript)) . 2173)) nil (25864 8729 362637 862000) 0 nil])
([nil nil ((2161 . 2169)) ((#("const k_" 0 5 (part-side javascript face web-mode-keyword-face) 5 6 (part-side javascript) 6 7 (part-side javascript face web-mode-variable-name-face) 7 8 (part-side javascript face web-mode-variable-name-face)) . 2161) (undo-tree-id323 . -7) (undo-tree-id324 . -8) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) (undo-tree-id334 . -7) (undo-tree-id335 . -7) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -7) (undo-tree-id339 . -7) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -7) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (undo-tree-id365 . -8) (undo-tree-id366 . -8) (undo-tree-id367 . -8) (undo-tree-id368 . -8) (undo-tree-id369 . -8) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -8)) (25864 8720 420030 220000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 2181) (#("s" 0 1 (part-side javascript face web-mode-function-call-face)) . 2181) (#("y" 0 1 (part-side javascript face web-mode-function-call-face)) . 2181) (#("e" 0 1 (part-side javascript face web-mode-function-call-face)) . 2181) (#("k" 0 1 (part-side javascript face web-mode-function-call-face)) . 2181) (#("." 0 1 (part-side javascript)) . 2181)) nil (25864 8729 362627 735000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2168) (undo-tree-id278 . -1) 2169) ((2168 . 2169)) (25864 8720 78495 803000) 0 nil])
([nil nil ((2154 . 2161) (t 25864 8729 379793 724000)) nil (25864 8784 750920 389000) 0 nil])
([nil nil ((2168 . 2174)) ((#("_Arrya" 0 4 (part-side javascript face web-mode-variable-name-face) 4 5 (part-side javascript face web-mode-variable-name-face) 5 6 (part-side javascript face web-mode-variable-name-face)) . 2168) (undo-tree-id291 . -4) (undo-tree-id292 . -6) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -6) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -6) (undo-tree-id317 . -6) (undo-tree-id318 . -6) (undo-tree-id319 . -6) (undo-tree-id320 . -6) (undo-tree-id321 . -6) (undo-tree-id322 . -6)) (25864 8719 750432 324000) 0 nil])
([nil nil ((2161 . 2167)) nil (25864 8784 750919 140000) 0 nil])
([nil nil ((#("y" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2172) (undo-tree-id276 . -1) (#("a" 0 1 (part-side javascript face web-mode-variable-name-face)) . -2173) (undo-tree-id277 . -1) 2174) ((2172 . 2174)) (25864 8719 422050 405000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -2161) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("i" 0 1 (part-side javascript)) . -2162) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("l" 0 1 (part-side javascript)) . -2163) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("t" 0 1 (part-side javascript)) . -2164) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("e" 0 1 (part-side javascript)) . -2165) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (#("r" 0 1 (part-side javascript)) . -2166) (undo-tree-id480 . -1) (undo-tree-id481 . -1) 2167) nil (25864 8784 750915 927000) 0 nil])
([nil nil ((2172 . 2177)) ((#("ay = " 0 2 (part-side javascript face web-mode-variable-name-face) 2 4 (part-side javascript) 4 5 (part-side javascript)) . 2172) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -4) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5)) (25864 8719 149436 566000) 0 nil])
([nil nil ((2161 . 2174)) nil (25864 8784 750898 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2191 . 2192) (nil part-side javascript 2191 . 2192) (nil face (rainbow-delimiters-depth-4-face) 2191 . 2192) (nil part-side javascript 2190 . 2191) (nil face (rainbow-delimiters-depth-4-face) 2190 . 2191) (nil part-side javascript 2186 . 2190) (nil face web-mode-function-call-face 2186 . 2190) (nil part-side javascript 2177 . 2186) (2177 . 2192)) ((#("filter_a.keys()" 0 9 (part-side javascript) 9 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 2177) (undo-tree-id279 . -15) (nil face (rainbow-delimiters-depth-4-face) 2190 . 2191) (nil face (rainbow-delimiters-depth-4-face) 2191 . 2192) (nil rear-nonsticky t 2191 . 2192)) (25864 8719 145541 118000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2194 . 2195) (nil part-side javascript 2194 . 2195) (nil face (rainbow-delimiters-depth-4-face) 2194 . 2195) (nil part-side javascript 2186 . 2194) (nil part-side javascript 2185 . 2186) (nil face (rainbow-delimiters-depth-4-face) 2185 . 2186) (nil part-side javascript 2181 . 2185) (nil face web-mode-function-call-face 2181 . 2185) (nil part-side javascript 2174 . 2181) (2174 . 2195)) nil (25864 8784 750897 310000) 0 nil])
nil
([nil nil ((#("Object.keys(filter_a)" 0 7 (part-side javascript) 7 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 2202) (undo-tree-id464 . -21) (undo-tree-id465 . -21) (undo-tree-id466 . -21) (undo-tree-id467 . -21) (undo-tree-id468 . -21) (undo-tree-id469 . -21)) nil (25864 8784 750893 415000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2211 . 2212) (nil part-side javascript 2202 . 2212) (2202 . 2212)) nil (25864 8784 750885 410000) 0 nil])
([nil nil ((#("filter_a.keys()" 0 9 (part-side javascript) 9 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face))) . 2324) (undo-tree-id462 . -15) (undo-tree-id463 . -15)) nil (25864 8784 750883 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2333 . 2334) (nil part-side javascript 2324 . 2334) (2324 . 2334)) nil (25864 8784 750879 797000) 0 nil])
([nil nil ((2161 . 2165)) nil (25864 8784 750877 837000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -2163) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#("t" 0 1 (part-side javascript)) . -2164) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 2165) nil (25864 8784 750873 593000) 0 nil])
([nil nil ((2163 . 2167)) nil (25864 8784 750831 498000) 0 nil])
([nil nil ((16878 . 16885) (t 25864 8784 763332 166000)) nil (25865 23014 585926 87000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -16881) (undo-tree-id122 . -1) (#("u" 0 1 (part-side javascript)) . -16882) (undo-tree-id123 . -1) (#("a" 0 1 (part-side javascript)) . -16883) (undo-tree-id124 . -1) (#("e" 0 1 (part-side javascript)) . -16884) (undo-tree-id125 . -1) 16885) nil (25865 23014 585923 890000) 0 nil])
([nil nil ((16881 . 16890)) nil (25865 23014 585917 576000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -16880) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("a" 0 1 (part-side javascript)) . -16881) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("l" 0 1 (part-side javascript)) . -16882) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("u" 0 1 (part-side javascript)) . -16883) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("e" 0 1 (part-side javascript)) . -16884) (undo-tree-id116 . -1) (#("_" 0 1 (part-side javascript)) . -16885) (undo-tree-id117 . -1) (#("c" 0 1 (part-side javascript)) . -16886) (undo-tree-id118 . -1) (#("o" 0 1 (part-side javascript)) . -16887) (undo-tree-id119 . -1) (#("m" 0 1 (part-side javascript)) . -16888) (undo-tree-id120 . -1) (#("p" 0 1 (part-side javascript)) . -16889) (undo-tree-id121 . -1) 16890) nil (25865 23014 585913 603000) 0 nil])
([nil nil ((16880 . 16901)) nil (25865 23014 585893 362000) 0 nil])
([nil nil ((16901 . 16910)) nil (25865 23014 585892 398000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -16906) (undo-tree-id104 . -1) (#("n" 0 1 (part-side javascript)) . -16907) (undo-tree-id105 . -1) (#("e" 0 1 (part-side javascript)) . -16908) (undo-tree-id106 . -1) (#(" " 0 1 (part-side javascript)) . -16909) (undo-tree-id107 . -1) 16910) nil (25865 23014 585889 852000) 0 nil])
([nil nil ((16906 . 16910)) nil (25865 23014 585883 700000) 0 nil])
([nil nil ((#("N" 0 1 (part-side javascript)) . -16905) (undo-tree-id99 . -1) (#("u" 0 1 (part-side javascript)) . -16906) (undo-tree-id100 . -1) (#("l" 0 1 (part-side javascript)) . -16907) (undo-tree-id101 . -1) (#("l" 0 1 (part-side javascript)) . -16908) (undo-tree-id102 . -1) (#(" " 0 1 (part-side javascript)) . -16909) (undo-tree-id103 . -1) 16910) nil (25865 23014 585881 103000) 0 nil])
([nil nil ((16905 . 16910)) nil (25865 23014 585873 143000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -16906) (undo-tree-id95 . -1) (#("n" 0 1 (part-side javascript)) . -16907) (undo-tree-id96 . -1) (#("e" 0 1 (part-side javascript)) . -16908) (undo-tree-id97 . -1) (#(" " 0 1 (part-side javascript)) . -16909) (undo-tree-id98 . -1) 16910) nil (25865 23014 585870 476000) 0 nil])
([nil nil ((16906 . 16910)) nil (25865 23014 585700 321000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16909) (undo-tree-id94 . -1) 16910) nil (25865 23014 585699 50000) 0 nil])
([nil nil ((19049 . 19062)) nil (25865 23014 585696 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19083 . 19084) (nil part-side javascript 19062 . 19084) (19062 . 19084)) nil (25865 23014 585695 149000) 0 nil])
([nil nil ((19065 . 19067) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -19065) (19062 . 19066)) nil (25865 23014 585693 320000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 19066)) nil (25865 23014 585691 660000) 0 nil])
([nil nil ((19090 . 19092) (#("{" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -19090) (19088 . 19091)) nil (25865 23014 585690 263000) 0 nil])
([nil nil ((19093 . 19105) (#("              " 0 14 (face whitespace-trailing part-side javascript)) . 19092) (undo-tree-id92 . -12) (undo-tree-id93 . 14) (19104 . 19106) (19091 . 19105)) nil (25865 23014 585688 234000) 0 nil])
([nil nil ((19106 . 19111)) nil (25865 23014 585683 611000) 0 nil])
([nil nil ((19106 . 19119)) nil (25865 23014 585682 561000) 0 nil])
([nil nil ((19124 . 19126) (#("{" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -19124) (19123 . 19125)) nil (25865 23014 585681 319000) 0 nil])
([nil nil ((19125 . 19138)) nil (25865 23014 585679 913000) 0 nil])
([nil nil ((#("            result.push({
" 0 19 (part-side javascript) 19 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-9-face) part-side javascript) 24 25 (face (rainbow-delimiters-depth-1-face) part-side javascript) 25 26 (part-side javascript)) . 19167) (19152 . 19167) (#("            } 
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-7-face) part-side javascript) 13 14 (face whitespace-trailing part-side javascript) 14 15 (part-side javascript)) . 19126) (undo-tree-id91 . -12) (19141 . 19167) 19138) nil (25865 23014 585678 304000) 0 nil])
([nil nil ((#("              value: filt['field'] + ' ' + filt['operator'] + ' \"' + filt['value'] + '\"',
" 0 14 (part-side javascript) 14 19 (face web-mode-variable-name-face part-side javascript) 19 25 (part-side javascript) 25 26 (face (rainbow-delimiters-depth-9-face) part-side javascript) 26 27 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 27 32 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 33 34 (face (rainbow-delimiters-depth-9-face) part-side javascript) 34 37 (part-side javascript) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 39 40 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 40 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-9-face) part-side javascript) 48 49 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 49 57 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 57 58 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 58 59 (face (rainbow-delimiters-depth-9-face) part-side javascript) 59 62 (part-side javascript) 62 63 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 63 65 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 65 66 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 66 73 (part-side javascript) 73 74 (face (rainbow-delimiters-depth-9-face) part-side javascript) 74 75 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 75 80 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 80 81 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 81 82 (face (rainbow-delimiters-depth-9-face) part-side javascript) 82 85 (part-side javascript) 85 86 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 86 87 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 87 88 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 88 90 (part-side javascript)) . 19257) (19242 . 19257) (#("            } 
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-9-face) part-side javascript) 13 14 (face whitespace-trailing part-side javascript) 14 15 (part-side javascript)) . 19152) (undo-tree-id90 . -12) (19167 . 19257) 19164) nil (25865 23014 585674 671000) 0 nil])
([nil nil ((#("              index: idxobj['i']
" 0 14 (part-side javascript) 14 19 (face web-mode-variable-name-face part-side javascript) 19 27 (part-side javascript) 27 28 (face (rainbow-delimiters-depth-9-face) part-side javascript) 28 29 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 30 31 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 31 32 (face (rainbow-delimiters-depth-9-face) part-side javascript) 32 33 (part-side javascript)) . 19290) (19275 . 19290) (#("            } 
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-9-face) part-side javascript) 13 14 (face whitespace-trailing part-side javascript) 14 15 (part-side javascript)) . 19242) (undo-tree-id89 . -12) (19257 . 19290) 19254) nil (25865 23014 585671 71000) 0 nil])
([nil nil ((#("            })
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-6-face) part-side javascript) 13 14 (face (rainbow-delimiters-mismatched-face) part-side javascript) 14 15 (part-side javascript)) . 19305) (19290 . 19305) (#("            } 
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-9-face) part-side javascript) 13 14 (face whitespace-trailing part-side javascript) 14 15 (part-side javascript)) . 19275) (undo-tree-id88 . -12) (19290 . 19305) 19287) nil (25865 23014 585667 491000) 0 nil])
([nil nil ((19293 . 19295) (19246 . 19262) (#("              " 0 14 (part-side javascript)) . 19246) (19154 . 19170) (#("              " 0 14 (part-side javascript)) . 19154) (19138 . 19140) 19013) nil (25865 23014 585663 205000) 0 nil])
([nil nil ((19049 . 19062)) nil (25865 23014 585660 976000) 0 nil])
([nil nil ((19062 . 19068)) nil (25865 23014 585659 866000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -19062) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("a" 0 1 (part-side javascript)) . -19063) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("l" 0 1 (part-side javascript)) . -19064) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#(" " 0 1 (part-side javascript)) . -19065) (undo-tree-id85 . -1) (#("=" 0 1 (part-side javascript)) . -19066) (undo-tree-id86 . -1) (#(" " 0 1 (part-side javascript)) . -19067) (undo-tree-id87 . -1) 19068) nil (25865 23014 585656 618000) 0 nil])
([nil nil ((19062 . 19068)) nil (25865 23014 585645 279000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -19062) (undo-tree-id73 . -1) (#("o" 0 1 (part-side javascript)) . -19063) (undo-tree-id74 . -1) (#("n" 0 1 (part-side javascript)) . -19064) (undo-tree-id75 . -1) (#("s" 0 1 (part-side javascript)) . -19065) (undo-tree-id76 . -1) (#("t" 0 1 (part-side javascript)) . -19066) (undo-tree-id77 . -1) (#(" " 0 1 (part-side javascript)) . -19067) (undo-tree-id78 . -1) 19068) nil (25865 23014 585642 503000) 0 nil])
([nil nil ((19062 . 19069)) nil (25865 23014 585633 970000) 0 nil])
([nil nil ((#("v" 0 1 (face web-mode-variable-name-face part-side javascript)) . -19068) (undo-tree-id72 . -1) 19069) nil (25865 23014 585632 737000) 0 nil])
([nil nil ((19068 . 19069)) nil (25865 23014 585630 538000) 0 nil])
([nil nil ((19069 . 19079)) nil (25865 23014 585629 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19145 . 19146) (nil part-side javascript 19145 . 19146) (nil part-token string 19145 . 19146) (nil font-lock-face web-mode-javascript-string-face 19145 . 19146) (nil part-side javascript 19144 . 19145) (nil part-token string 19144 . 19145) (nil font-lock-face web-mode-javascript-string-face 19144 . 19145) (nil part-side javascript 19143 . 19144) (nil part-token string 19143 . 19144) (nil syntax-table (15) 19143 . 19144) (nil font-lock-face web-mode-javascript-string-face 19143 . 19144) (nil part-side javascript 19140 . 19143) (nil part-side javascript 19139 . 19140) (nil face (rainbow-delimiters-depth-7-face) 19139 . 19140) (nil part-side javascript 19138 . 19139) (nil part-token string 19138 . 19139) (nil syntax-table (15) 19138 . 19139) (nil font-lock-face web-mode-javascript-string-face 19138 . 19139) (nil part-side javascript 19133 . 19138) (nil part-token string 19133 . 19138) (nil font-lock-face web-mode-javascript-string-face 19133 . 19138) (nil part-side javascript 19132 . 19133) (nil part-token string 19132 . 19133) (nil syntax-table (15) 19132 . 19133) (nil font-lock-face web-mode-javascript-string-face 19132 . 19133) (nil part-side javascript 19131 . 19132) (nil face (rainbow-delimiters-depth-7-face) 19131 . 19132) (nil part-side javascript 19124 . 19131) (nil part-side javascript 19123 . 19124) (nil part-token string 19123 . 19124) (nil syntax-table (15) 19123 . 19124) (nil font-lock-face web-mode-javascript-string-face 19123 . 19124) (nil part-side javascript 19121 . 19123) (nil part-token string 19121 . 19123) (nil font-lock-face web-mode-javascript-string-face 19121 . 19123) (nil part-side javascript 19120 . 19121) (nil part-token string 19120 . 19121) (nil syntax-table (15) 19120 . 19121) (nil font-lock-face web-mode-javascript-string-face 19120 . 19121) (nil part-side javascript 19117 . 19120) (nil part-side javascript 19116 . 19117) (nil face (rainbow-delimiters-depth-7-face) 19116 . 19117) (nil part-side javascript 19115 . 19116) (nil part-token string 19115 . 19116) (nil syntax-table (15) 19115 . 19116) (nil font-lock-face web-mode-javascript-string-face 19115 . 19116) (nil part-side javascript 19107 . 19115) (nil part-token string 19107 . 19115) (nil font-lock-face web-mode-javascript-string-face 19107 . 19115) (nil part-side javascript 19106 . 19107) (nil part-token string 19106 . 19107) (nil syntax-table (15) 19106 . 19107) (nil font-lock-face web-mode-javascript-string-face 19106 . 19107) (nil part-side javascript 19105 . 19106) (nil face (rainbow-delimiters-depth-7-face) 19105 . 19106) (nil part-side javascript 19098 . 19105) (nil part-side javascript 19097 . 19098) (nil part-token string 19097 . 19098) (nil syntax-table (15) 19097 . 19098) (nil font-lock-face web-mode-javascript-string-face 19097 . 19098) (nil part-side javascript 19096 . 19097) (nil part-token string 19096 . 19097) (nil font-lock-face web-mode-javascript-string-face 19096 . 19097) (nil part-side javascript 19095 . 19096) (nil part-token string 19095 . 19096) (nil syntax-table (15) 19095 . 19096) (nil font-lock-face web-mode-javascript-string-face 19095 . 19096) (nil part-side javascript 19092 . 19095) (nil part-side javascript 19091 . 19092) (nil face (rainbow-delimiters-depth-7-face) 19091 . 19092) (nil part-side javascript 19090 . 19091) (nil part-token string 19090 . 19091) (nil syntax-table (15) 19090 . 19091) (nil font-lock-face web-mode-javascript-string-face 19090 . 19091) (nil part-side javascript 19085 . 19090) (nil part-token string 19085 . 19090) (nil font-lock-face web-mode-javascript-string-face 19085 . 19090) (nil part-side javascript 19084 . 19085) (nil part-token string 19084 . 19085) (nil syntax-table (15) 19084 . 19085) (nil font-lock-face web-mode-javascript-string-face 19084 . 19085) (nil part-side javascript 19083 . 19084) (nil face (rainbow-delimiters-depth-7-face) 19083 . 19084) (nil part-side javascript 19079 . 19083) (19079 . 19146)) nil (25865 23014 585623 952000) 0 nil])
([nil nil ((#("filt['field'] + ' ' + filt['operator'] + ' \"' + filt['value'] + '\"'" 0 4 (part-side javascript) 4 5 (face (rainbow-delimiters-depth-1-face) part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 6 11 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 11 12 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 12 13 (face (rainbow-delimiters-depth-1-face) part-side javascript) 13 16 (part-side javascript) 16 17 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-1-face) part-side javascript) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 28 36 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 36 37 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 37 38 (face (rainbow-delimiters-depth-1-face) part-side javascript) 38 41 (part-side javascript) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 42 44 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 45 52 (part-side javascript) 52 53 (face (rainbow-delimiters-depth-1-face) part-side javascript) 53 54 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 54 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (face (rainbow-delimiters-depth-1-face) part-side javascript) 61 64 (part-side javascript) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 65 66 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 66 67 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 19274) (undo-tree-id70 . -67) (undo-tree-id71 . -67)) nil (25865 23014 585602 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19281 . 19282) (nil part-side javascript 19274 . 19282) (19274 . 19282)) nil (25865 23014 585595 221000) 0 nil])
([nil nil ((19189 . 19203)) nil (25865 23014 585593 568000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . 19062) (#("s" 0 1 (part-side javascript)) . 19062) (#("n" 0 1 (part-side javascript)) . 19062) (#("o" 0 1 (part-side javascript)) . 19062) (#("c" 0 1 (face web-mode-keyword-face part-side javascript)) . 19062)) nil (25865 23014 585591 189000) 0 nil])
([nil nil ((19062 . 19065)) nil (25865 23014 585588 848000) 0 nil])
([nil nil ((19201 . 19212)) nil (25865 23014 585587 778000) 0 nil])
([nil nil ((19183 . 19188)) nil (25865 23014 585586 553000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -19184) (undo-tree-id66 . -1) (#("n" 0 1 (part-side javascript)) . -19185) (undo-tree-id67 . -1) (#("d" 0 1 (part-side javascript)) . -19186) (undo-tree-id68 . -1) (#(" " 0 1 (part-side javascript)) . -19187) (undo-tree-id69 . -1) 19188) nil (25865 23014 585584 183000) 0 nil])
([nil nil ((19184 . 19192)) nil (25865 23014 585577 764000) 0 nil])
([nil nil ((19192 . 19195)) nil (25865 23014 585576 802000) 0 nil])
([nil nil ((19195 . 19199)) nil (25865 23014 585575 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19220 . 19221) (nil rear-nonsticky t 19220 . 19221) (nil part-side javascript 19220 . 19221) (nil part-side javascript 19199 . 19220) (19199 . 19221)) nil (25865 23014 585574 657000) 0 nil])
([nil nil ((19250 . 19252)) nil (25865 23014 585572 237000) 0 nil])
([nil nil ((19251 . 19257)) nil (25865 23014 585571 305000) 0 nil])
([nil nil ((19256 . 19265)) nil (25865 23014 585570 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19270 . 19271) (nil part-side javascript 19264 . 19271) (nil part-token string 19264 . 19271) (nil font-lock-face web-mode-javascript-string-face 19264 . 19271) (19264 . 19271)) nil (25865 23014 585569 109000) 0 nil])
([nil nil ((19271 . 19277)) nil (25865 23014 585566 871000) 0 nil])
([nil nil ((19279 . 19286)) nil (25865 23014 585565 917000) 0 nil])
([nil nil ((19279 . 19280)) nil (25865 23014 585564 859000) 0 nil])
([nil nil ((19280 . 19281)) nil (25865 23014 585563 937000) 0 nil])
([nil nil ((19280 . 19282)) nil (25865 23014 585562 936000) 0 nil])
([nil nil ((19281 . 19289)) nil (25865 23014 585562 36000) 0 nil])
([nil nil ((19144 . 19157)) nil (25865 23014 585561 93000) 0 nil])
([nil nil ((19157 . 19174)) nil (25865 23014 585560 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19234 . 19235) (nil part-side javascript 19234 . 19235) (nil face (rainbow-delimiters-depth-7-face) 19234 . 19235) (nil part-side javascript 19233 . 19234) (nil part-token string 19233 . 19234) (nil syntax-table (15) 19233 . 19234) (nil font-lock-face web-mode-javascript-string-face 19233 . 19234) (nil part-side javascript 19228 . 19233) (nil part-token string 19228 . 19233) (nil font-lock-face web-mode-javascript-string-face 19228 . 19233) (nil part-side javascript 19227 . 19228) (nil part-token string 19227 . 19228) (nil syntax-table (15) 19227 . 19228) (nil font-lock-face web-mode-javascript-string-face 19227 . 19228) (nil part-side javascript 19226 . 19227) (nil face (rainbow-delimiters-depth-7-face) 19226 . 19227) (nil part-side javascript 19219 . 19226) (nil part-side javascript 19218 . 19219) (nil part-token string 19218 . 19219) (nil syntax-table (15) 19218 . 19219) (nil font-lock-face web-mode-javascript-string-face 19218 . 19219) (nil part-side javascript 19216 . 19218) (nil part-token string 19216 . 19218) (nil font-lock-face web-mode-javascript-string-face 19216 . 19218) (nil part-side javascript 19215 . 19216) (nil part-token string 19215 . 19216) (nil syntax-table (15) 19215 . 19216) (nil font-lock-face web-mode-javascript-string-face 19215 . 19216) (nil part-side javascript 19212 . 19215) (nil part-side javascript 19211 . 19212) (nil face (rainbow-delimiters-depth-7-face) 19211 . 19212) (nil part-side javascript 19210 . 19211) (nil part-token string 19210 . 19211) (nil syntax-table (15) 19210 . 19211) (nil font-lock-face web-mode-javascript-string-face 19210 . 19211) (nil part-side javascript 19202 . 19210) (nil part-token string 19202 . 19210) (nil font-lock-face web-mode-javascript-string-face 19202 . 19210) (nil part-side javascript 19201 . 19202) (nil part-token string 19201 . 19202) (nil syntax-table (15) 19201 . 19202) (nil font-lock-face web-mode-javascript-string-face 19201 . 19202) (nil part-side javascript 19200 . 19201) (nil face (rainbow-delimiters-depth-7-face) 19200 . 19201) (nil part-side javascript 19193 . 19200) (nil part-side javascript 19192 . 19193) (nil part-token string 19192 . 19193) (nil syntax-table (15) 19192 . 19193) (nil font-lock-face web-mode-javascript-string-face 19192 . 19193) (nil part-side javascript 19191 . 19192) (nil part-token string 19191 . 19192) (nil font-lock-face web-mode-javascript-string-face 19191 . 19192) (nil part-side javascript 19190 . 19191) (nil part-token string 19190 . 19191) (nil syntax-table (15) 19190 . 19191) (nil font-lock-face web-mode-javascript-string-face 19190 . 19191) (nil part-side javascript 19187 . 19190) (nil part-side javascript 19186 . 19187) (nil face (rainbow-delimiters-depth-7-face) 19186 . 19187) (nil part-side javascript 19185 . 19186) (nil part-token string 19185 . 19186) (nil syntax-table (15) 19185 . 19186) (nil font-lock-face web-mode-javascript-string-face 19185 . 19186) (nil part-side javascript 19180 . 19185) (nil part-token string 19180 . 19185) (nil font-lock-face web-mode-javascript-string-face 19180 . 19185) (nil part-side javascript 19179 . 19180) (nil part-token string 19179 . 19180) (nil syntax-table (15) 19179 . 19180) (nil font-lock-face web-mode-javascript-string-face 19179 . 19180) (nil part-side javascript 19178 . 19179) (nil face (rainbow-delimiters-depth-7-face) 19178 . 19179) (nil part-side javascript 19174 . 19178) (19174 . 19235)) nil (25865 23014 585554 599000) 0 nil])
([nil nil ((#("+ ' \"' " 0 2 (part-side javascript) 2 3 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 3 5 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 6 7 (part-side javascript)) . 19213) (undo-tree-id64 . -7) (undo-tree-id65 . -7)) nil (25865 23014 585534 479000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19212) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 19213) nil (25865 23014 585527 970000) 0 nil])
([nil nil ((19212 . 19214)) nil (25865 23014 585524 578000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -19212) (undo-tree-id60 . -1) (#(" " 0 1 (part-side javascript)) . -19213) (undo-tree-id61 . -1) 19214) nil (25865 23014 585522 972000) 0 nil])
([nil nil ((19212 . 19213)) nil (25865 23014 585519 158000) 0 nil])
([nil nil ((#(" + ' '" 0 3 (part-side javascript) 3 4 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 4 5 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 19187) (undo-tree-id58 . -6) (undo-tree-id59 . -6)) nil (25865 23014 585517 548000) 0 nil])
([nil nil ((#("text_val" 0 8 (part-side javascript)) . 19265) (undo-tree-id56 . -8) (undo-tree-id57 . -8)) nil (25865 23014 585513 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19272 . 19273) (nil part-side javascript 19265 . 19273) (19265 . 19273)) nil (25865 23014 585509 567000) 0 nil])
([nil nil ((#("
            else {" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 17 (face web-mode-keyword-face part-side javascript) 17 18 (part-side javascript) 18 19 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 19391) (undo-tree-id53 . -19) (undo-tree-id54 . -1) (undo-tree-id55 . -19)) nil (25865 23014 585507 259000) 0 nil])
([nil nil ((#("
            } " 0 1 (part-side javascript) 1 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-6-face) part-side javascript) 14 15 (part-side javascript)) . 19504) (undo-tree-id50 . -15) (undo-tree-id51 . -1) (undo-tree-id52 . -15)) nil (25865 23014 585501 676000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -19494) (#("  " 0 2 (part-side javascript)) . -19463) (#("  " 0 2 (part-side javascript)) . -19432) (#("  " 0 2 (part-side javascript)) . -19404) 19392) nil (25865 23014 585492 789000) 0 nil])
([nil nil ((#("            const comp_val = filt['field'] + filt['operator'] + filt['value']
" 0 12 (part-side javascript) 12 17 (face web-mode-keyword-face part-side javascript) 17 18 (part-side javascript) 18 26 (face web-mode-variable-name-face part-side javascript) 26 28 (part-side javascript) 28 29 (part-side javascript) 29 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-7-face) part-side javascript) 34 35 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 35 40 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 40 41 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 41 42 (face (rainbow-delimiters-depth-7-face) part-side javascript) 42 49 (part-side javascript) 49 50 (face (rainbow-delimiters-depth-7-face) part-side javascript) 50 51 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 51 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (face (rainbow-delimiters-depth-7-face) part-side javascript) 61 62 (part-side javascript) 62 68 (part-side javascript) 68 69 (face (rainbow-delimiters-depth-7-face) part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 75 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 77 (face (rainbow-delimiters-depth-7-face) part-side javascript rear-nonsticky t) 77 78 (part-side javascript)) . 19223) (undo-tree-id47 . -23) (undo-tree-id48 . -23) (undo-tree-id49 . -78) (19128 . 19223) (#("            let text_val = filt['field'] + ' ' + filt['operator'] + ' \"' + filt['value'] + '\"'
" 0 12 (part-side javascript) 12 15 (face web-mode-keyword-face part-side javascript) 15 16 (part-side javascript) 16 24 (face web-mode-variable-name-face part-side javascript) 24 26 (part-side javascript) 26 27 (part-side javascript) 27 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-7-face) part-side javascript) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 33 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 39 40 (face (rainbow-delimiters-depth-7-face) part-side javascript) 40 43 (part-side javascript) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 45 46 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 46 53 (part-side javascript) 53 54 (face (rainbow-delimiters-depth-7-face) part-side javascript) 54 55 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 55 63 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 63 64 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 64 65 (face (rainbow-delimiters-depth-7-face) part-side javascript) 65 68 (part-side javascript) 68 69 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 69 71 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 71 72 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 72 79 (part-side javascript) 79 80 (face (rainbow-delimiters-depth-7-face) part-side javascript) 80 81 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 81 86 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 86 87 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 87 88 (face (rainbow-delimiters-depth-7-face) part-side javascript) 88 91 (part-side javascript) 91 92 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 92 93 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 93 94 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t) 94 95 (syntax-table (15) part-side javascript)) . 19050) (19145 . 19223) 19168) nil (25865 23014 585488 841000) 0 nil])
([nil nil ((#("            const comp_val = filt['field'] + filt['operator'] + filt['value']
" 0 12 (part-side javascript) 12 17 (face web-mode-keyword-face part-side javascript) 17 18 (part-side javascript) 18 26 (face web-mode-variable-name-face part-side javascript) 26 28 (part-side javascript) 28 29 (part-side javascript) 29 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-7-face) part-side javascript) 34 35 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 35 40 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 40 41 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 41 42 (face (rainbow-delimiters-depth-7-face) part-side javascript) 42 49 (part-side javascript) 49 50 (face (rainbow-delimiters-depth-7-face) part-side javascript) 50 51 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 51 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (face (rainbow-delimiters-depth-7-face) part-side javascript) 61 62 (part-side javascript) 62 68 (part-side javascript) 68 69 (face (rainbow-delimiters-depth-7-face) part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 75 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 77 (face (rainbow-delimiters-depth-7-face) part-side javascript rear-nonsticky t) 77 78 (part-side javascript)) . 19128) (undo-tree-id45 . -23) (undo-tree-id46 . -78) (19090 . 19128) (#("          if (isNaN(filt['value'])) {
" 0 10 (part-side javascript) 10 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-6-face) part-side javascript) 14 19 (face web-mode-function-call-face part-side javascript) 19 20 (face (rainbow-delimiters-depth-7-face) part-side javascript) 20 24 (part-side javascript) 24 25 (face (rainbow-delimiters-depth-8-face) part-side javascript) 25 26 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 26 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 33 (face (rainbow-delimiters-depth-8-face) part-side javascript) 33 34 (face (rainbow-delimiters-depth-7-face) part-side javascript) 34 35 (face (rainbow-delimiters-depth-6-face) part-side javascript) 35 36 (part-side javascript) 36 37 (face (rainbow-delimiters-depth-6-face) part-side javascript) 37 38 (part-side javascript)) . 19012) (19050 . 19128) 19073) nil (25865 23014 585194 849000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -19022) 19035) nil (25865 23014 585189 844000) 0 nil])
([nil nil ((19523 . 19536)) nil (25865 23014 585188 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19617 . 19618) (nil rear-nonsticky t 19617 . 19618) (nil part-side javascript 19617 . 19618) (nil part-token string 19617 . 19618) (nil font-lock-face web-mode-javascript-string-face 19617 . 19618) (nil part-side javascript 19616 . 19617) (nil part-token string 19616 . 19617) (nil font-lock-face web-mode-javascript-string-face 19616 . 19617) (nil part-side javascript 19615 . 19616) (nil part-token string 19615 . 19616) (nil syntax-table (15) 19615 . 19616) (nil font-lock-face web-mode-javascript-string-face 19615 . 19616) (nil part-side javascript 19612 . 19615) (nil part-side javascript 19611 . 19612) (nil face (rainbow-delimiters-depth-7-face) 19611 . 19612) (nil part-side javascript 19610 . 19611) (nil part-token string 19610 . 19611) (nil syntax-table (15) 19610 . 19611) (nil font-lock-face web-mode-javascript-string-face 19610 . 19611) (nil part-side javascript 19605 . 19610) (nil part-token string 19605 . 19610) (nil font-lock-face web-mode-javascript-string-face 19605 . 19610) (nil part-side javascript 19604 . 19605) (nil part-token string 19604 . 19605) (nil syntax-table (15) 19604 . 19605) (nil font-lock-face web-mode-javascript-string-face 19604 . 19605) (nil part-side javascript 19603 . 19604) (nil face (rainbow-delimiters-depth-7-face) 19603 . 19604) (nil part-side javascript 19596 . 19603) (nil part-side javascript 19595 . 19596) (nil part-token string 19595 . 19596) (nil syntax-table (15) 19595 . 19596) (nil font-lock-face web-mode-javascript-string-face 19595 . 19596) (nil part-side javascript 19593 . 19595) (nil part-token string 19593 . 19595) (nil font-lock-face web-mode-javascript-string-face 19593 . 19595) (nil part-side javascript 19592 . 19593) (nil part-token string 19592 . 19593) (nil syntax-table (15) 19592 . 19593) (nil font-lock-face web-mode-javascript-string-face 19592 . 19593) (nil part-side javascript 19589 . 19592) (nil part-side javascript 19588 . 19589) (nil face (rainbow-delimiters-depth-7-face) 19588 . 19589) (nil part-side javascript 19587 . 19588) (nil part-token string 19587 . 19588) (nil syntax-table (15) 19587 . 19588) (nil font-lock-face web-mode-javascript-string-face 19587 . 19588) (nil part-side javascript 19579 . 19587) (nil part-token string 19579 . 19587) (nil font-lock-face web-mode-javascript-string-face 19579 . 19587) (nil part-side javascript 19578 . 19579) (nil part-token string 19578 . 19579) (nil syntax-table (15) 19578 . 19579) (nil font-lock-face web-mode-javascript-string-face 19578 . 19579) (nil part-side javascript 19577 . 19578) (nil face (rainbow-delimiters-depth-7-face) 19577 . 19578) (nil part-side javascript 19570 . 19577) (nil part-side javascript 19569 . 19570) (nil part-token string 19569 . 19570) (nil syntax-table (15) 19569 . 19570) (nil font-lock-face web-mode-javascript-string-face 19569 . 19570) (nil part-side javascript 19568 . 19569) (nil part-token string 19568 . 19569) (nil font-lock-face web-mode-javascript-string-face 19568 . 19569) (nil part-side javascript 19567 . 19568) (nil part-token string 19567 . 19568) (nil syntax-table (15) 19567 . 19568) (nil font-lock-face web-mode-javascript-string-face 19567 . 19568) (nil part-side javascript 19564 . 19567) (nil part-side javascript 19563 . 19564) (nil face (rainbow-delimiters-depth-7-face) 19563 . 19564) (nil part-side javascript 19562 . 19563) (nil part-token string 19562 . 19563) (nil syntax-table (15) 19562 . 19563) (nil font-lock-face web-mode-javascript-string-face 19562 . 19563) (nil part-side javascript 19557 . 19562) (nil part-token string 19557 . 19562) (nil font-lock-face web-mode-javascript-string-face 19557 . 19562) (nil part-side javascript 19556 . 19557) (nil part-token string 19556 . 19557) (nil syntax-table (15) 19556 . 19557) (nil font-lock-face web-mode-javascript-string-face 19556 . 19557) (nil part-side javascript 19555 . 19556) (nil face (rainbow-delimiters-depth-7-face) 19555 . 19556) (nil part-side javascript 19551 . 19555) (nil part-side javascript 19550 . 19551) (nil part-side javascript 19548 . 19550) (nil part-side javascript 19540 . 19548) (nil face web-mode-variable-name-face 19540 . 19548) (nil part-side javascript 19539 . 19540) (nil part-side javascript 19536 . 19539) (nil face web-mode-keyword-face 19536 . 19539) (19536 . 19618)) nil (25865 23014 585182 171000) 0 nil])
([nil nil ((#("filt['field'] + ' ' + filt['operator'] + ' \"' + filt['value'] + '\"'" 0 4 (part-side javascript) 4 5 (face (rainbow-delimiters-depth-7-face) part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 6 11 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 11 12 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 12 13 (face (rainbow-delimiters-depth-7-face) part-side javascript) 13 16 (part-side javascript) 16 17 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-7-face) part-side javascript) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 28 36 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 36 37 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 37 38 (face (rainbow-delimiters-depth-7-face) part-side javascript) 38 41 (part-side javascript) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 42 44 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 45 52 (part-side javascript) 52 53 (face (rainbow-delimiters-depth-7-face) part-side javascript) 53 54 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 54 59 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 61 (face (rainbow-delimiters-depth-7-face) part-side javascript) 61 64 (part-side javascript) 64 65 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 65 66 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 66 67 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky t)) . 19551) (undo-tree-id43 . -67) (undo-tree-id44 . -67)) nil (25865 23014 585158 359000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19610 . 19611) (nil part-side javascript 19610 . 19611) (nil face (rainbow-delimiters-depth-7-face) 19610 . 19611) (nil part-side javascript 19609 . 19610) (nil part-token string 19609 . 19610) (nil syntax-table (15) 19609 . 19610) (nil font-lock-face web-mode-javascript-string-face 19609 . 19610) (nil part-side javascript 19604 . 19609) (nil part-token string 19604 . 19609) (nil font-lock-face web-mode-javascript-string-face 19604 . 19609) (nil part-side javascript 19603 . 19604) (nil part-token string 19603 . 19604) (nil syntax-table (15) 19603 . 19604) (nil font-lock-face web-mode-javascript-string-face 19603 . 19604) (nil part-side javascript 19602 . 19603) (nil face (rainbow-delimiters-depth-7-face) 19602 . 19603) (nil part-side javascript 19595 . 19602) (nil part-side javascript 19594 . 19595) (nil part-token string 19594 . 19595) (nil syntax-table (15) 19594 . 19595) (nil font-lock-face web-mode-javascript-string-face 19594 . 19595) (nil part-side javascript 19593 . 19594) (nil part-token string 19593 . 19594) (nil font-lock-face web-mode-javascript-string-face 19593 . 19594) (nil part-side javascript 19592 . 19593) (nil part-token string 19592 . 19593) (nil syntax-table (15) 19592 . 19593) (nil font-lock-face web-mode-javascript-string-face 19592 . 19593) (nil part-side javascript 19589 . 19592) (nil part-side javascript 19588 . 19589) (nil face (rainbow-delimiters-depth-7-face) 19588 . 19589) (nil part-side javascript 19587 . 19588) (nil part-token string 19587 . 19588) (nil syntax-table (15) 19587 . 19588) (nil font-lock-face web-mode-javascript-string-face 19587 . 19588) (nil part-side javascript 19579 . 19587) (nil part-token string 19579 . 19587) (nil font-lock-face web-mode-javascript-string-face 19579 . 19587) (nil part-side javascript 19578 . 19579) (nil part-token string 19578 . 19579) (nil syntax-table (15) 19578 . 19579) (nil font-lock-face web-mode-javascript-string-face 19578 . 19579) (nil part-side javascript 19577 . 19578) (nil face (rainbow-delimiters-depth-7-face) 19577 . 19578) (nil part-side javascript 19570 . 19577) (nil part-side javascript 19569 . 19570) (nil part-token string 19569 . 19570) (nil syntax-table (15) 19569 . 19570) (nil font-lock-face web-mode-javascript-string-face 19569 . 19570) (nil part-side javascript 19568 . 19569) (nil part-token string 19568 . 19569) (nil font-lock-face web-mode-javascript-string-face 19568 . 19569) (nil part-side javascript 19567 . 19568) (nil part-token string 19567 . 19568) (nil syntax-table (15) 19567 . 19568) (nil font-lock-face web-mode-javascript-string-face 19567 . 19568) (nil part-side javascript 19564 . 19567) (nil part-side javascript 19563 . 19564) (nil face (rainbow-delimiters-depth-7-face) 19563 . 19564) (nil part-side javascript 19562 . 19563) (nil part-token string 19562 . 19563) (nil syntax-table (15) 19562 . 19563) (nil font-lock-face web-mode-javascript-string-face 19562 . 19563) (nil part-side javascript 19557 . 19562) (nil part-token string 19557 . 19562) (nil font-lock-face web-mode-javascript-string-face 19557 . 19562) (nil part-side javascript 19556 . 19557) (nil part-token string 19556 . 19557) (nil syntax-table (15) 19556 . 19557) (nil font-lock-face web-mode-javascript-string-face 19556 . 19557) (nil part-side javascript 19555 . 19556) (nil face (rainbow-delimiters-depth-7-face) 19555 . 19556) (nil part-side javascript 19551 . 19555) (19551 . 19611)) nil (25865 23014 585150 620000) 0 nil])
([nil nil ((19611 . 19624)) nil (25865 23014 585129 457000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19791 . 19792) (nil part-side javascript 19791 . 19792) (nil face (rainbow-delimiters-depth-7-face) 19791 . 19792) (nil part-side javascript 19779 . 19791) (nil part-side javascript 19778 . 19779) (nil syntax-table (15) 19778 . 19779) (nil part-side javascript 19777 . 19778) (nil part-token string 19777 . 19778) (nil font-lock-face web-mode-javascript-string-face 19777 . 19778) (nil part-side javascript 19770 . 19777) (nil part-token string 19770 . 19777) (nil font-lock-face web-mode-javascript-string-face 19770 . 19777) (nil part-side javascript 19769 . 19770) (nil part-token string 19769 . 19770) (nil syntax-table (15) 19769 . 19770) (nil font-lock-face web-mode-javascript-string-face 19769 . 19770) (nil part-side javascript 19759 . 19769) (nil part-side javascript 19758 . 19759) (nil part-token string 19758 . 19759) (nil syntax-table (15) 19758 . 19759) (nil font-lock-face web-mode-javascript-string-face 19758 . 19759) (nil part-side javascript 19757 . 19758) (nil part-token string 19757 . 19758) (nil font-lock-face web-mode-javascript-string-face 19757 . 19758) (nil part-side javascript 19756 . 19757) (nil part-token string 19756 . 19757) (nil font-lock-face web-mode-javascript-string-face 19756 . 19757) (nil part-side javascript 19750 . 19756) (nil part-token string 19750 . 19756) (nil font-lock-face web-mode-javascript-string-face 19750 . 19756) (nil rear-nonsticky t 19749 . 19750) (nil part-side javascript 19749 . 19750) (nil part-token string 19749 . 19750) (nil font-lock-face web-mode-javascript-string-face 19749 . 19750) (nil part-side javascript 19743 . 19749) (nil part-token string 19743 . 19749) (nil font-lock-face web-mode-javascript-string-face 19743 . 19749) (nil part-side javascript 19741 . 19743) (nil part-token string 19741 . 19743) (nil font-lock-face web-mode-javascript-string-face 19741 . 19743) (nil part-side javascript 19736 . 19741) (nil part-token string 19736 . 19741) (nil font-lock-face web-mode-javascript-string-face 19736 . 19741) (nil part-side javascript 19730 . 19736) (nil part-token string 19730 . 19736) (nil font-lock-face web-mode-javascript-string-face 19730 . 19736) (nil part-side javascript 19729 . 19730) (nil part-token string 19729 . 19730) (nil syntax-table (15) 19729 . 19730) (nil font-lock-face web-mode-javascript-string-face 19729 . 19730) (nil part-side javascript 19728 . 19729) (nil part-side javascript 19726 . 19728) (nil part-side javascript 19704 . 19726) (nil part-side javascript 19703 . 19704) (nil part-side javascript 19702 . 19703) (nil face (rainbow-delimiters-depth-7-face) 19702 . 19703) (nil part-side javascript 19701 . 19702) (nil part-side javascript 19700 . 19701) (nil face (rainbow-delimiters-depth-7-face) 19700 . 19701) (nil rear-nonsticky t 19699 . 19700) (nil part-side javascript 19699 . 19700) (nil part-side javascript 19678 . 19699) (nil part-side javascript 19677 . 19678) (nil part-side javascript 19675 . 19677) (nil face web-mode-keyword-face 19675 . 19677) (nil part-side javascript 19674 . 19675) (nil rear-nonsticky t 19673 . 19674) (nil part-side javascript 19673 . 19674) (nil part-side javascript 19666 . 19673) (nil part-side javascript 19662 . 19666) (nil rear-nonsticky t 19661 . 19662) (nil part-side javascript 19661 . 19662) (nil part-side javascript 19640 . 19661) (nil part-side javascript 19639 . 19640) (nil face (rainbow-delimiters-depth-7-face) 19639 . 19640) (nil part-side javascript 19638 . 19639) (nil part-side javascript 19636 . 19638) (nil face web-mode-keyword-face 19636 . 19638) (nil part-side javascript 19624 . 19636) (19624 . 19792)) nil (25865 23014 585124 204000) 0 nil])
([nil nil ((19805 . 19817) (19779 . 19803) (#("            " 0 12 (part-side javascript)) . 19779) (19792 . 19793)) nil (25865 23014 585100 571000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -19779) (#("            " 0 12 (part-side javascript)) . -19624) 19612) nil (25865 23014 585097 487000) 0 nil])
([nil nil ((#("filt['field'] + ' ' + filt['operator'] + ' ' + filt['value']" 0 4 (part-side javascript) 4 5 (face (rainbow-delimiters-depth-9-face) part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 6 11 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 11 12 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 12 13 (face (rainbow-delimiters-depth-9-face) part-side javascript) 13 16 (part-side javascript) 16 17 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-9-face) part-side javascript) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 28 36 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 36 37 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 37 38 (face (rainbow-delimiters-depth-9-face) part-side javascript) 38 41 (part-side javascript) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 42 43 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 44 51 (part-side javascript) 51 52 (face (rainbow-delimiters-depth-9-face) part-side javascript) 52 53 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 53 58 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 59 60 (face (rainbow-delimiters-depth-9-face) part-side javascript)) . 19841) (undo-tree-id35 . -60) (undo-tree-id36 . -60) (undo-tree-id37 . -60) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -60) (undo-tree-id42 . -60)) nil (25865 23014 585094 896000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19848 . 19849) (nil part-side javascript 19841 . 19849) (19841 . 19849)) nil (25865 23014 585081 646000) 0 nil])
([nil nil ((#("            " 0 12 (part-side javascript)) . -19781) (undo-tree-id0 . -12) (undo-tree-id1 . -12) (undo-tree-id2 . -12) (undo-tree-id3 . -12) (undo-tree-id4 . -12) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) (undo-tree-id8 . -12) (undo-tree-id9 . -12) (undo-tree-id10 . -12) (undo-tree-id11 . -12) (undo-tree-id12 . -12) (undo-tree-id13 . -12) (undo-tree-id14 . -12) (undo-tree-id15 . -12) (undo-tree-id16 . -12) (undo-tree-id17 . -12) (undo-tree-id18 . -12) (undo-tree-id19 . -12) (undo-tree-id20 . -12) (undo-tree-id21 . -12) (undo-tree-id22 . -12) (undo-tree-id23 . -12) (undo-tree-id24 . -12) (undo-tree-id25 . -12) (undo-tree-id26 . -12) (undo-tree-id27 . -12) (undo-tree-id28 . -12) (undo-tree-id29 . -12) (undo-tree-id30 . -12) (undo-tree-id31 . -12) (undo-tree-id32 . -12) (undo-tree-id33 . -12) (undo-tree-id34 . -12) 19793) nil (25865 23014 585071 339000) 0 nil])
([nil nil ((12597 . 12601) (#("    " 0 4 (part-side javascript)) . 12596) (undo-tree-id161 . -4) (12595 . 12601) (t 25865 23014 605251 293000)) nil (25865 23239 119169 198000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12899 . 12900) (nil part-side javascript 12899 . 12900) (nil part-side javascript 12898 . 12899) (nil face (rainbow-delimiters-depth-3-face) 12898 . 12899) (nil part-side javascript 12893 . 12898) (nil part-side javascript 12892 . 12893) (nil face (rainbow-delimiters-depth-4-face) 12892 . 12893) (nil part-side javascript 12891 . 12892) (nil part-token string 12891 . 12892) (nil syntax-table (15) 12891 . 12892) (nil font-lock-face web-mode-javascript-string-face 12891 . 12892) (nil part-side javascript 12890 . 12891) (nil part-token string 12890 . 12891) (nil font-lock-face web-mode-javascript-string-face 12890 . 12891) (nil part-side javascript 12889 . 12890) (nil part-token string 12889 . 12890) (nil syntax-table (15) 12889 . 12890) (nil font-lock-face web-mode-javascript-string-face 12889 . 12890) (nil part-side javascript 12888 . 12889) (nil face (rainbow-delimiters-depth-4-face) 12888 . 12889) (nil part-side javascript 12884 . 12888) (nil face web-mode-function-call-face 12884 . 12888) (nil part-side javascript 12875 . 12884) (nil part-side javascript 12869 . 12875) (nil face web-mode-keyword-face 12869 . 12875) (nil part-side javascript 12862 . 12869) (nil part-side javascript 12861 . 12862) (nil face (rainbow-delimiters-depth-4-face) 12861 . 12862) (nil part-side javascript 12850 . 12861) (nil part-side javascript 12849 . 12850) (nil face web-mode-function-name-face 12849 . 12850) (nil part-side javascript 12848 . 12849) (nil face (rainbow-delimiters-depth-4-face) 12848 . 12849) (nil part-side javascript 12845 . 12848) (nil face web-mode-function-call-face 12845 . 12848) (nil part-side javascript 12844 . 12845) (nil part-side javascript 12843 . 12844) (nil face (rainbow-delimiters-depth-4-face) 12843 . 12844) (nil part-side javascript 12842 . 12843) (nil face (rainbow-delimiters-depth-5-face) 12842 . 12843) (nil part-side javascript 12837 . 12842) (nil face web-mode-constant-face 12837 . 12842) (nil part-side javascript 12821 . 12837) (nil part-side javascript 12820 . 12821) (nil face (rainbow-delimiters-depth-5-face) 12820 . 12821) (nil part-side javascript 12804 . 12820) (nil face web-mode-function-call-face 12804 . 12820) (nil part-side javascript 12803 . 12804) (nil part-side javascript 12799 . 12803) (nil face web-mode-constant-face 12799 . 12803) (nil part-side javascript 12798 . 12799) (nil face (rainbow-delimiters-depth-4-face) 12798 . 12799) (nil part-side javascript 12795 . 12798) (nil part-side javascript 12788 . 12795) (nil face web-mode-variable-name-face 12788 . 12795) (nil part-side javascript 12787 . 12788) (nil part-side javascript 12782 . 12787) (nil face web-mode-keyword-face 12782 . 12787) (nil part-side javascript 12775 . 12782) (nil part-side javascript 12774 . 12775) (nil face (rainbow-delimiters-depth-4-face) 12774 . 12775) (nil part-side javascript 12770 . 12774) (nil part-side javascript 12769 . 12770) (nil face web-mode-variable-name-face 12769 . 12770) (nil part-side javascript 12768 . 12769) (nil part-side javascript 12767 . 12768) (nil face (rainbow-delimiters-depth-4-face) 12767 . 12768) (nil part-side javascript 12764 . 12767) (nil part-side javascript 12758 . 12764) (nil face web-mode-variable-name-face 12758 . 12764) (nil part-side javascript 12757 . 12758) (nil part-side javascript 12752 . 12757) (nil face web-mode-keyword-face 12752 . 12757) (nil part-side javascript 12746 . 12752) (nil part-side javascript 12745 . 12746) (nil syntax-table (12) 12745 . 12746) (nil part-side javascript 12637 . 12745) (nil part-token comment 12637 . 12745) (nil font-lock-face web-mode-javascript-comment-face 12637 . 12745) (nil part-side javascript 12636 . 12637) (nil part-token comment 12636 . 12637) (nil syntax-table (11) 12636 . 12637) (nil font-lock-face web-mode-javascript-comment-face 12636 . 12637) (nil part-side javascript 12629 . 12636) (nil part-side javascript 12628 . 12629) (nil face (rainbow-delimiters-depth-3-face) 12628 . 12629) (nil part-side javascript 12627 . 12628) (nil part-side javascript 12626 . 12627) (nil face (rainbow-delimiters-depth-3-face) 12626 . 12627) (nil part-side javascript 12620 . 12626) (nil part-side javascript 12619 . 12620) (nil face (rainbow-delimiters-depth-3-face) 12619 . 12620) (nil part-side javascript 12605 . 12619) (nil face web-mode-function-name-face 12605 . 12619) (nil part-side javascript 12601 . 12605) (12601 . 12900)) nil (25865 23239 119162 111000) 0 nil])
([nil nil ((12661 . 12670) (#("      " 0 6 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 12661) (#("    " 0 4 (part-side javascript)) . -12601) 12597) nil (25865 23239 119141 805000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 12595) (undo-tree-id160 . -1)) nil (25865 23239 119140 58000) 0 nil])
([nil nil ((12658 . 12662)) nil (25865 23239 119138 2000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12661) (undo-tree-id159 . -1) 12662) nil (25865 23239 119136 803000) 0 nil])
([nil nil ((12614 . 12618)) nil (25865 23239 119134 398000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12663) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12664) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 12665) nil (25865 23239 119132 837000) 0 nil])
([nil nil ((12663 . 12668)) nil (25865 23239 119127 769000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12664) (undo-tree-id151 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12665) (undo-tree-id152 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12666) (undo-tree-id153 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12667) (undo-tree-id154 . -1) 12668) nil (25865 23239 119125 946000) 0 nil])
([nil nil ((12664 . 12680)) nil (25865 23239 119120 490000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12675) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12676) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12677) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12678) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12679) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 12680) nil (25865 23239 119118 195000) 0 nil])
([nil nil ((12675 . 12679)) nil (25865 23239 119104 559000) 0 nil])
([nil nil ((12679 . 12695)) nil (25865 23239 119103 517000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12689) (undo-tree-id135 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12690) (undo-tree-id136 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12691) (undo-tree-id137 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12692) (undo-tree-id138 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12693) (undo-tree-id139 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12694) (undo-tree-id140 . -1) 12695) nil (25865 23239 119101 102000) 0 nil])
([nil nil ((12689 . 12694)) nil (25865 23239 119093 297000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12693) (undo-tree-id134 . -1) 12694) nil (25865 23239 119092 165000) 0 nil])
([nil nil ((#("replacecurrent" 0 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 12704) (undo-tree-id132 . -14) (undo-tree-id133 . -14)) nil (25865 23239 119089 763000) 0 nil])
([nil nil ((12625 . 12631)) nil (25865 23239 119086 743000) 0 nil])
([nil nil ((12631 . 12636)) nil (25865 23239 119085 887000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -12635) (undo-tree-id131 . -1) 12636) nil (25865 23239 119084 691000) 0 nil])
([nil nil ((12764 . 12765)) nil (25865 23239 119082 492000) 0 nil])
([nil nil ((12765 . 12774)) nil (25865 23239 119081 681000) 0 nil])
([nil nil ((12774 . 12786)) nil (25865 23239 119080 745000) 0 nil])
([nil nil ((#("_" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12783) (undo-tree-id128 . -1) (#(">" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12784) (undo-tree-id129 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12785) (undo-tree-id130 . -1) 12786) nil (25865 23239 119078 943000) 0 nil])
([nil nil ((12783 . 12784)) nil (25865 23239 119074 64000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12783) (undo-tree-id127 . -1) 12784) nil (25865 23239 119072 813000) 0 nil])
([nil nil ((12783 . 12789)) nil (25865 23239 119070 140000) 0 nil])
([nil nil ((12789 . 12810)) nil (25865 23239 119069 294000) 0 nil])
([nil nil ((12810 . 12831)) nil (25865 23239 119068 371000) 0 nil])
([nil nil ((12831 . 12836)) nil (25865 23239 119067 173000) 0 nil])
([nil nil ((12836 . 12837)) nil (25865 23239 119066 226000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12836) (undo-tree-id126 . -1) 12837) nil (25865 23239 119064 448000) 0 nil])
([nil nil ((12943 . 12945)) nil (25865 23239 119054 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12952 . 12953) (nil part-side javascript 12945 . 12953) (12945 . 12953)) nil (25865 23239 119046 993000) 0 nil])
([nil nil ((2239 . 2248) (t 25865 23239 137988 575000)) nil (25865 24964 975902 173000) 0 nil])
([nil nil ((2260 . 2262) (2259 . 2261) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -2259) (2248 . 2260)) nil (25865 24964 975900 575000) 0 nil])
([nil nil ((2261 . 2269)) nil (25865 24964 975898 862000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2268) (undo-tree-id175 . -1) 2269) nil (25865 24964 975897 294000) 0 nil])
([nil nil ((2268 . 2270)) nil (25865 24964 975894 723000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2268) (undo-tree-id173 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2269) (undo-tree-id174 . -1) 2270) nil (25865 24964 975892 991000) 0 nil])
([nil nil ((2268 . 2276)) nil (25865 24964 975888 937000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2274) (undo-tree-id171 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2275) (undo-tree-id172 . -1) 2276) nil (25865 24964 975886 891000) 0 nil])
([nil nil ((2275 . 2285)) nil (25865 24964 975882 72000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2284) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 2285) nil (25865 24964 975876 488000) 0 nil])
([nil nil ((2201 . 2208) (t 25865 24964 997050 107000)) nil (25865 25030 689939 660000) 0 nil])
([nil nil ((2221 . 2224) (nil part-token string 2221 . 2222) (nil font-lock-face web-mode-javascript-string-face 2221 . 2222) (nil part-side javascript 2221 . 2222) (2220 . 2222) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -2220) (2220 . 2221) (2219 . 2221) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2219) (2208 . 2220)) nil (25865 25030 689934 478000) 0 nil])
([nil nil ((2224 . 2229)) nil (25865 25030 689925 309000) 0 nil])
([nil nil ((2230 . 2240)) nil (25865 25030 689923 116000) 0 nil])
([nil nil ((2241 . 2248)) nil (25865 25030 689919 644000) 0 nil])
([nil nil ((2261 . 2268) (nil part-token string 2261 . 2262) (nil font-lock-face web-mode-javascript-string-face 2261 . 2262) (nil part-side javascript 2261 . 2262) (2260 . 2262) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -2260) (2260 . 2261) (2259 . 2261) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2259) (2248 . 2260)) nil (25865 25030 689915 266000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2267) (undo-tree-id185 . -1) 2268) nil (25865 25030 689907 451000) 0 nil])
([nil nil ((2267 . 2269)) nil (25865 25030 689904 414000) 0 nil])
([nil nil ((2270 . 2276)) nil (25865 25030 689903 79000) 0 nil])
([nil nil ((2276 . 2281)) nil (25865 25030 689901 488000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2280) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 2281) nil (25865 25030 689895 722000) 0 nil])
([nil nil ((#("keys_array.length," 0 18 (part-side javascript)) . 2456) (undo-tree-id188 . -18) (undo-tree-id189 . -18) (t 25865 25030 708941 466000)) nil (25865 25160 625657 299000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 2456)) nil (25865 25160 625652 146000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2455) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 2456) nil (25865 25160 625649 483000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 2464)) nil (25865 25160 625631 186000) 0 nil])
([nil nil ((18900 . 18902) (t 25865 25160 641137 853000)) nil (25865 25320 821959 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18925 . 18926) (nil part-side javascript 18902 . 18926) (18902 . 18926)) nil (25865 25320 821958 246000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18901) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("," 0 1 (part-side javascript)) . -18902) (undo-tree-id192 . -1) 18903) nil (25865 25320 821955 527000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19336 . 19337) (nil part-side javascript 19313 . 19337) (19313 . 19337)) nil (25865 25320 821941 955000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20801 . 20802) (nil part-side javascript 20778 . 20802) (20778 . 20802)) nil (25865 25320 821939 553000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22013 . 22014) (nil part-side javascript 21990 . 22014) (21990 . 22014)) nil (25865 25320 821931 825000) 0 nil])
([nil nil ((#("
      console.log(filter_a)" 0 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 27 (part-side javascript) 27 28 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2126) (undo-tree-id199 . -28) (undo-tree-id200 . -1) (undo-tree-id201 . -28) (t 25865 25320 837495 186000)) nil (25865 40548 788588 288000) 0 nil])
([nil nil ((#("
      console.log(\"Filter_b\", filter_b)
      console.log(\"Filter_a\", filter_a)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 28 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 28 29 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 29 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-4-face) part-side javascript) 40 41 (part-side javascript) 41 55 (part-side javascript) 55 58 (face web-mode-function-call-face part-side javascript) 58 59 (face (rainbow-delimiters-depth-4-face) part-side javascript) 59 60 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 60 68 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 68 69 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 69 79 (part-side javascript) 79 80 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2173) (undo-tree-id196 . -80) (undo-tree-id197 . -1) (undo-tree-id198 . -80)) nil (25865 40548 788521 55000) 0 nil])
([nil nil ((#("
        console.log('compare value', element)" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-6-face) part-side javascript) 21 22 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 22 35 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 35 36 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 36 45 (part-side javascript) 45 46 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 2211) (undo-tree-id193 . -46) (undo-tree-id194 . -1) (undo-tree-id195 . -46)) nil (25865 40548 788512 303000) 0 nil])
([nil nil ((19771 . 19772) (t 25865 40548 808269 77000)) nil (25865 40614 412340 139000) 0 nil])
([nil nil ((19773 . 19774)) nil (25865 40614 412338 461000) 0 nil])
([nil nil ((19782 . 19783)) nil (25865 40614 412337 495000) 0 nil])
([nil nil ((19784 . 19785)) nil (25865 40614 412336 472000) 0 nil])
([nil nil ((20175 . 20176)) nil (25865 40614 412335 413000) 0 nil])
([nil nil ((20177 . 20178)) nil (25865 40614 412334 283000) 0 nil])
([nil nil ((20166 . 20167)) nil (25865 40614 412332 711000) 0 nil])
([nil nil ((20168 . 20169)) nil (25865 40614 412325 241000) 0 nil])
([nil nil ((#("    print_filter_comp(filter, comp_obj) {
      let val_list = []
    }," 0 4 (part-side javascript) 4 21 (face web-mode-function-name-face part-side javascript) 21 22 (face (rainbow-delimiters-depth-3-face) part-side javascript) 22 38 (part-side javascript) 38 39 (face (rainbow-delimiters-depth-3-face) part-side javascript) 39 40 (part-side javascript) 40 41 (face (rainbow-delimiters-depth-3-face) part-side javascript) 41 42 (part-side javascript) 42 48 (part-side javascript) 48 51 (face web-mode-keyword-face part-side javascript) 51 52 (part-side javascript) 52 60 (face web-mode-variable-name-face part-side javascript) 60 63 (part-side javascript) 63 64 (face (rainbow-delimiters-depth-4-face) part-side javascript) 64 65 (face (rainbow-delimiters-depth-4-face) part-side javascript) 65 70 (part-side javascript) 70 71 (face (rainbow-delimiters-depth-3-face) part-side javascript) 71 72 (part-side javascript)) . 2318) (undo-tree-id206 . -72) (undo-tree-id207 . -42) (undo-tree-id208 . -72) (undo-tree-id209 . -72) (t 25865 40614 428211 837000)) nil (25865 40667 278536 201000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2317) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 2318) nil (25865 40667 278526 220000) 0 nil])
([nil nil ((2026 . 2027) (t 25865 40667 296167 212000)) nil (25865 40680 414512 481000) 0 nil])
([nil nil ((2039 . 2040)) nil (25865 40680 414505 467000) 0 nil])
([nil current ((#(" " 0 1 (part-side javascript)) . -2032) (undo-tree-id210 . -1) 2033 (t 25865 40680 432156 310000)) nil (25875 61459 270222 373000) 0 nil])
([nil nil ((8363 . 8371) (#("        " 0 8 (part-side javascript)) . 8362) (undo-tree-id19 . -8) (8361 . 8371) (t 25865 40690 100148 333000)) ((#("
        
" 0 1 (part-side javascript) 1 9 (part-side javascript face whitespace-trailing) 9 10 (part-side javascript)) . 8361) (undo-tree-id510 . -10) (undo-tree-id511 . -10) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -10) (undo-tree-id533 . -10) (undo-tree-id534 . -10) (undo-tree-id535 . -10) (undo-tree-id536 . -10) (undo-tree-id537 . -10) (undo-tree-id538 . -10) (undo-tree-id539 . -10) (undo-tree-id540 . -10) (undo-tree-id541 . -10) (undo-tree-id542 . -10) (undo-tree-id543 . -10) (undo-tree-id544 . -10) (undo-tree-id545 . -10) (undo-tree-id546 . -10) (undo-tree-id547 . -10) (undo-tree-id548 . -10) (undo-tree-id549 . -10) (undo-tree-id550 . -10) (undo-tree-id551 . -10) (undo-tree-id552 . -10) (undo-tree-id553 . -10) (undo-tree-id554 . -10) (undo-tree-id555 . -10) (undo-tree-id556 . -10) (undo-tree-id557 . -10) (undo-tree-id558 . -10) (undo-tree-id559 . -10) (undo-tree-id560 . -10) (undo-tree-id561 . -10) (undo-tree-id562 . -10) (undo-tree-id563 . -10) (undo-tree-id564 . -10) (undo-tree-id565 . -10) (undo-tree-id566 . -10) (undo-tree-id567 . -1) (undo-tree-id568 . 9) (8362 . 8370) (#("        " 0 8 (part-side javascript)) . 8363) (undo-tree-id569 . -8) (undo-tree-id570 . -8) (undo-tree-id571 . -8) (undo-tree-id572 . -8) (undo-tree-id573 . -8) (undo-tree-id574 . -8) (undo-tree-id575 . -8) (undo-tree-id576 . -8) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -8) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (undo-tree-id590 . -8) (undo-tree-id591 . -8) (undo-tree-id592 . -8)) (25875 61458 793672 916000) 0 nil])
([nil nil ((8376 . 8378) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -8376) (8371 . 8377)) ((#("print(" 0 5 (part-side javascript face web-mode-function-call-face) 5 6 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 8371) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (8376 . 8377) (#("()" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 8376) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1)) (25875 61458 473101 541000) 0 nil])
([nil nil ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 16 (part-side javascript)) . 8379) (undo-tree-id17 . -14) (undo-tree-id18 . -16) (8378 . 8379) (#("
" 0 1 (part-side javascript)) . 8362) (8363 . 8379) 8377) ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 16 (part-side javascript)) . 8363) (undo-tree-id478 . -14) (undo-tree-id479 . -16) (undo-tree-id480 . -14) (undo-tree-id481 . -14) (undo-tree-id482 . -14) (undo-tree-id483 . -14) (undo-tree-id484 . -14) (undo-tree-id485 . -14) (undo-tree-id486 . -14) (undo-tree-id487 . -14) (undo-tree-id488 . -14) (undo-tree-id489 . -14) (undo-tree-id490 . -14) (undo-tree-id491 . -14) (8362 . 8363) (#("
" 0 1 (part-side javascript)) . 8378) (8379 . 8395)) (25875 61458 18398 561000) 0 nil])
([nil nil ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 16 (part-side javascript)) . 8378) (undo-tree-id14 . -14) (undo-tree-id15 . -16) (8273 . 8378) (#("      if (filtertype == 'aggr' && (this.filters[0].empty || Object.keys(this.filters[0]).length == 0)) {
" 0 6 (part-side javascript) 6 8 (part-side javascript face web-mode-keyword-face) 8 9 (part-side javascript) 9 10 (part-side javascript face (rainbow-delimiters-depth-4-face)) 10 24 (part-side javascript) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 29 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 30 34 (part-side javascript) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face)) 35 39 (part-side javascript face web-mode-constant-face) 39 47 (part-side javascript) 47 48 (part-side javascript face (rainbow-delimiters-depth-6-face)) 48 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-6-face)) 50 67 (part-side javascript) 67 71 (part-side javascript face web-mode-function-call-face) 71 72 (part-side javascript face (rainbow-delimiters-depth-6-face)) 72 76 (part-side javascript face web-mode-constant-face) 76 84 (part-side javascript) 84 85 (part-side javascript face (rainbow-delimiters-depth-7-face)) 85 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-7-face)) 87 88 (part-side javascript face (rainbow-delimiters-depth-6-face)) 88 100 (part-side javascript) 100 101 (part-side javascript face (rainbow-delimiters-depth-5-face)) 101 102 (part-side javascript face (rainbow-delimiters-depth-4-face)) 102 103 (part-side javascript) 103 104 (part-side javascript face (rainbow-delimiters-depth-4-face)) 104 105 (part-side javascript)) . 8257) (undo-tree-id16 . -104) (8362 . 8378) 8376) ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 16 (part-side javascript)) . 8362) (undo-tree-id444 . -14) (undo-tree-id445 . -16) (undo-tree-id446 . -16) (undo-tree-id447 . -16) (undo-tree-id448 . -16) (undo-tree-id449 . -16) (undo-tree-id450 . -16) (undo-tree-id451 . -16) (undo-tree-id452 . -16) (undo-tree-id453 . -16) (undo-tree-id454 . -16) (undo-tree-id455 . -16) (undo-tree-id456 . -16) (undo-tree-id457 . -16) (undo-tree-id458 . -14) (undo-tree-id459 . -14) (undo-tree-id460 . -14) (undo-tree-id461 . -14) (undo-tree-id462 . -14) (undo-tree-id463 . -14) (undo-tree-id464 . -14) (undo-tree-id465 . -14) (8257 . 8362) (#("      if (filtertype == 'aggr' && (this.filters[0].empty || Object.keys(this.filters[0]).length == 0)) {
" 0 6 (part-side javascript) 6 8 (part-side javascript face web-mode-keyword-face) 8 9 (part-side javascript) 9 10 (part-side javascript face (rainbow-delimiters-depth-4-face)) 10 24 (part-side javascript) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 29 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 30 34 (part-side javascript) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face)) 35 39 (part-side javascript face web-mode-constant-face) 39 47 (part-side javascript) 47 48 (part-side javascript face (rainbow-delimiters-depth-6-face)) 48 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-6-face)) 50 67 (part-side javascript) 67 71 (part-side javascript face web-mode-function-call-face) 71 72 (part-side javascript face (rainbow-delimiters-depth-6-face)) 72 76 (part-side javascript face web-mode-constant-face) 76 84 (part-side javascript) 84 85 (part-side javascript face (rainbow-delimiters-depth-7-face)) 85 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-7-face)) 87 88 (part-side javascript face (rainbow-delimiters-depth-6-face)) 88 100 (part-side javascript) 100 101 (part-side javascript face (rainbow-delimiters-depth-5-face)) 101 102 (part-side javascript face (rainbow-delimiters-depth-4-face)) 102 103 (part-side javascript) 103 104 (part-side javascript face (rainbow-delimiters-depth-4-face)) 104 105 (part-side javascript)) . 8273) (undo-tree-id466 . -105) (undo-tree-id467 . -105) (undo-tree-id468 . -105) (undo-tree-id469 . -105) (undo-tree-id470 . -105) (undo-tree-id471 . -105) (undo-tree-id472 . -105) (undo-tree-id473 . -105) (undo-tree-id474 . -105) (undo-tree-id475 . -105) (undo-tree-id476 . -105) (undo-tree-id477 . -105) (8378 . 8394)) (25875 61457 663932 614000) 0 nil])
([nil nil ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 8273) (undo-tree-id12 . -14) (undo-tree-id13 . -16) (8272 . 8273) (#("
" 0 1 (part-side javascript)) . 8256) (8257 . 8273) 8271) ((#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 8257) (undo-tree-id405 . -16) (undo-tree-id406 . -16) (undo-tree-id407 . -16) (undo-tree-id408 . -16) (undo-tree-id409 . -16) (undo-tree-id410 . -16) (undo-tree-id411 . -16) (undo-tree-id412 . -16) (undo-tree-id413 . -16) (undo-tree-id414 . -16) (undo-tree-id415 . -14) (undo-tree-id416 . -16) (undo-tree-id417 . -16) (undo-tree-id418 . -16) (undo-tree-id419 . -16) (undo-tree-id420 . -16) (undo-tree-id421 . -16) (undo-tree-id422 . -16) (undo-tree-id423 . -16) (undo-tree-id424 . -16) (undo-tree-id425 . -16) (undo-tree-id426 . -16) (undo-tree-id427 . -16) (undo-tree-id428 . -14) (undo-tree-id429 . -14) (undo-tree-id430 . -14) (undo-tree-id431 . -14) (undo-tree-id432 . -14) (undo-tree-id433 . -14) (undo-tree-id434 . -14) (undo-tree-id435 . -14) (undo-tree-id436 . -14) (undo-tree-id437 . -14) (undo-tree-id438 . -14) (undo-tree-id439 . -14) (undo-tree-id440 . -14) (undo-tree-id441 . -14) (undo-tree-id442 . -14) (undo-tree-id443 . -14) (8256 . 8257) (#("
" 0 1 (part-side javascript)) . 8272) (8273 . 8289)) (25875 61457 192171 727000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8273) (8257 . 8273) (#("        print()
" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 8256) (undo-tree-id11 . -14) (8272 . 8273) 8270) ((#("
" 0 1 (part-side javascript)) . 8272) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (8256 . 8272) (#("        print()
" 0 6 (part-side javascript) 6 8 (part-side javascript) 8 9 (part-side javascript face web-mode-function-call-face) 9 10 (part-side javascript face web-mode-function-call-face) 10 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face web-mode-function-call-face) 12 13 (part-side javascript face web-mode-function-call-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-4-face)) 14 15 (part-side javascript face (rainbow-delimiters-depth-4-face)) 15 16 (part-side javascript)) . 8257) (undo-tree-id385 . -16) (undo-tree-id386 . -15) (undo-tree-id387 . -15) (undo-tree-id388 . -15) (undo-tree-id389 . -15) (undo-tree-id390 . -15) (undo-tree-id391 . -15) (undo-tree-id392 . -15) (undo-tree-id393 . -15) (undo-tree-id394 . -16) (undo-tree-id395 . -16) (undo-tree-id396 . -16) (undo-tree-id397 . -16) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (8273 . 8274)) (25875 61456 786695 120000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8378) (undo-tree-id10 . -1)) ((8378 . 8379)) (25875 61456 400846 91000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . 8273) (8273 . 8279) (8273 . 8274)) ((#("
" 0 1 (part-side javascript)) . 8273) (undo-tree-id363 . -1) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 8273) (8273 . 8279)) (25875 61455 814673 669000) 0 nil])
([nil nil ((8273 . 8279)) ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . 8273)) (25875 61455 457703 418000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -8263)) ((8263 . 8265)) (25875 61455 17802 24000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript face web-mode-function-call-face)) . 8263) (#("n" 0 1 (part-side javascript face web-mode-function-call-face)) . 8263) (#("i" 0 1 (part-side javascript face web-mode-function-call-face)) . 8263) (#("r" 0 1 (part-side javascript face web-mode-function-call-face)) . 8263) (#("p" 0 1 (part-side javascript face web-mode-function-call-face)) . 8263)) ((8263 . 8264) (8263 . 8264) (8263 . 8264) (8263 . 8264) (8263 . 8264)) (25875 61454 655737 435000) 0 nil])
([nil nil ((8263 . 8271)) ((#("console." 0 8 (part-side javascript)) . 8263) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -8) (undo-tree-id359 . -8) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8)) (25875 61454 320689 912000) 0 nil])
([nil nil ((8271 . 8274)) ((#("log" 0 3 (part-side javascript face web-mode-function-call-face)) . 8271)) (25875 61454 41697 209000) 0 nil])
([nil nil ((8275 . 8277)) ((#("''" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 2 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 8275) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1)) (25875 61453 753074 413000) 0 nil])
([nil nil ((8276 . 8291)) ((#("filter parsing " 0 15 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 8276) (undo-tree-id306 . -15) (undo-tree-id307 . -15) (undo-tree-id308 . -15) (undo-tree-id309 . -15) (undo-tree-id310 . -15) (undo-tree-id311 . -15) (undo-tree-id312 . -15) (undo-tree-id313 . -15) (undo-tree-id314 . -15) (undo-tree-id315 . -15) (undo-tree-id316 . -15) (undo-tree-id317 . -15) (undo-tree-id318 . -15) (undo-tree-id319 . -15) (undo-tree-id320 . -15) (undo-tree-id321 . -15) (undo-tree-id322 . -15)) (25875 61453 466114 298000) 0 nil])
([nil nil ((8291 . 8299)) ((#("started " 0 7 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 7 8 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 8291) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8)) (25875 61453 160070 842000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -8298) (undo-tree-id9 . -1) 8299) ((8298 . 8299)) (25875 61452 887496 825000) 0 nil])
([nil nil ((8298 . 8300)) ((#(": " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1 2 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 8298) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2)) (25875 61452 670454 889000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -8299) (undo-tree-id8 . -1) 8300) ((8299 . 8300)) (25875 61452 461915 97000) 0 nil])
([nil nil ((8300 . 8313)) ((#(", filtertype " 0 12 (part-side javascript) 12 13 (part-side javascript)) . 8300) (undo-tree-id262 . -13) (undo-tree-id263 . -12) (undo-tree-id264 . -12) (undo-tree-id265 . -12) (undo-tree-id266 . -12) (undo-tree-id267 . -12) (undo-tree-id268 . -12) (undo-tree-id269 . -12) (undo-tree-id270 . -12) (undo-tree-id271 . -12) (undo-tree-id272 . -12) (undo-tree-id273 . -12) (undo-tree-id274 . -12) (undo-tree-id275 . -12) (undo-tree-id276 . -12) (undo-tree-id277 . -12) (undo-tree-id278 . -13) (undo-tree-id279 . -13) (undo-tree-id280 . -13) (undo-tree-id281 . -13) (undo-tree-id282 . -13) (undo-tree-id283 . -13) (undo-tree-id284 . -13) (undo-tree-id285 . -13) (undo-tree-id286 . -13) (undo-tree-id287 . -13) (undo-tree-id288 . -13)) (25875 61452 197489 758000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8312) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) 8313) ((8312 . 8313)) (25875 61451 658843 676000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . -8314) 8312) ((8314 . 8320)) (25875 61451 271085 385000) 0 nil])
([nil nil ((10281 . 10290) (t 25875 61047 410492 956000)) ((#("
        " 0 1 (part-side javascript) 1 9 (part-side javascript)) . 10281) (undo-tree-id232 . -9) (undo-tree-id233 . -1) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -9) (undo-tree-id240 . -9) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (undo-tree-id243 . -9) (undo-tree-id244 . -9) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (undo-tree-id247 . -9) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -1) (undo-tree-id251 . -9) (undo-tree-id252 . -9) (undo-tree-id253 . -9) (undo-tree-id254 . -9) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (undo-tree-id257 . -9) (undo-tree-id258 . -9) (undo-tree-id259 . -9) (undo-tree-id260 . -9) (undo-tree-id261 . -9)) (25875 61450 865012 584000) 0 nil] [nil nil ((8313 . 8320) (t 25875 61047 410492 956000)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 8313) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -1) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -1) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7)) (25875 61162 522406 271000) 0 nil])
([nil nil ((10303 . 10307) (nil part-token string 10303 . 10304) (nil font-lock-face web-mode-javascript-string-face 10303 . 10304) (nil part-side javascript 10303 . 10304) (10302 . 10304) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -10302) (10302 . 10303) (10301 . 10303) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -10301) (10290 . 10302)) ((#("console.log(" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-name-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 10290) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (10301 . 10302) (#("()" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 10301) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 10302) (10302 . 10303) (#("\"\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 2 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 10302) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (#("HEYO" 0 4 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 10303)) (25875 61450 555128 363000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8369 . 8370) (nil part-side javascript 8369 . 8370) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil part-side javascript 8357 . 8369) (nil part-side javascript 8356 . 8357) (nil part-token string 8356 . 8357) (nil syntax-table (15) 8356 . 8357) (nil font-lock-face web-mode-javascript-string-face 8356 . 8357) (nil part-side javascript 8355 . 8356) (nil part-token string 8355 . 8356) (nil font-lock-face web-mode-javascript-string-face 8355 . 8356) (nil part-side javascript 8348 . 8355) (nil part-token string 8348 . 8355) (nil font-lock-face web-mode-javascript-string-face 8348 . 8355) (nil part-side javascript 8333 . 8348) (nil part-token string 8333 . 8348) (nil font-lock-face web-mode-javascript-string-face 8333 . 8348) (nil part-side javascript 8332 . 8333) (nil part-token string 8332 . 8333) (nil syntax-table (15) 8332 . 8333) (nil font-lock-face web-mode-javascript-string-face 8332 . 8333) (nil part-side javascript 8331 . 8332) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil part-side javascript 8328 . 8331) (nil face web-mode-function-call-face 8328 . 8331) (nil part-side javascript 8320 . 8328) (8320 . 8370)) ((#("console.log('filter parsing started:', filtertype)" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 49 (part-side javascript) 49 50 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 8320) (undo-tree-id24 . -36) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil syntax-table (15) 8332 . 8333) (nil syntax-table (15) 8356 . 8357) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil rear-nonsticky t 8369 . 8370)) (25875 61162 510329 42000) 0 nil] [nil nil ((nil rear-nonsticky nil 8369 . 8370) (nil part-side javascript 8369 . 8370) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil part-side javascript 8357 . 8369) (nil part-side javascript 8356 . 8357) (nil part-token string 8356 . 8357) (nil syntax-table (15) 8356 . 8357) (nil font-lock-face web-mode-javascript-string-face 8356 . 8357) (nil part-side javascript 8355 . 8356) (nil part-token string 8355 . 8356) (nil font-lock-face web-mode-javascript-string-face 8355 . 8356) (nil part-side javascript 8348 . 8355) (nil part-token string 8348 . 8355) (nil font-lock-face web-mode-javascript-string-face 8348 . 8355) (nil part-side javascript 8333 . 8348) (nil part-token string 8333 . 8348) (nil font-lock-face web-mode-javascript-string-face 8333 . 8348) (nil part-side javascript 8332 . 8333) (nil part-token string 8332 . 8333) (nil syntax-table (15) 8332 . 8333) (nil font-lock-face web-mode-javascript-string-face 8332 . 8333) (nil part-side javascript 8331 . 8332) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil part-side javascript 8328 . 8331) (nil face web-mode-function-call-face 8328 . 8331) (nil part-side javascript 8320 . 8328) (8320 . 8370)) ((#("console.log('filter parsing started:', filtertype)" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 49 (part-side javascript) 49 50 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 8320) (undo-tree-id23 . -50) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil syntax-table (15) 8332 . 8333) (nil syntax-table (15) 8356 . 8357) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil rear-nonsticky t 8369 . 8370)) (25875 61155 118321 103000) 0 nil] [nil nil ((nil rear-nonsticky nil 8369 . 8370) (nil part-side javascript 8369 . 8370) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil part-side javascript 8357 . 8369) (nil part-side javascript 8356 . 8357) (nil part-token string 8356 . 8357) (nil syntax-table (15) 8356 . 8357) (nil font-lock-face web-mode-javascript-string-face 8356 . 8357) (nil part-side javascript 8355 . 8356) (nil part-token string 8355 . 8356) (nil font-lock-face web-mode-javascript-string-face 8355 . 8356) (nil part-side javascript 8348 . 8355) (nil part-token string 8348 . 8355) (nil font-lock-face web-mode-javascript-string-face 8348 . 8355) (nil part-side javascript 8333 . 8348) (nil part-token string 8333 . 8348) (nil font-lock-face web-mode-javascript-string-face 8333 . 8348) (nil part-side javascript 8332 . 8333) (nil part-token string 8332 . 8333) (nil syntax-table (15) 8332 . 8333) (nil font-lock-face web-mode-javascript-string-face 8332 . 8333) (nil part-side javascript 8331 . 8332) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil part-side javascript 8328 . 8331) (nil face web-mode-function-call-face 8328 . 8331) (nil part-side javascript 8320 . 8328) (8320 . 8370)) ((#("console.log('filter parsing started:', filtertype)" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 49 (part-side javascript) 49 50 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 8320) (undo-tree-id22 . -50) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil syntax-table (15) 8332 . 8333) (nil syntax-table (15) 8356 . 8357) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil rear-nonsticky t 8369 . 8370)) (25875 61153 777468 894000) 0 nil] [nil nil ((nil rear-nonsticky nil 8369 . 8370) (nil part-side javascript 8369 . 8370) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil part-side javascript 8357 . 8369) (nil part-side javascript 8356 . 8357) (nil part-token string 8356 . 8357) (nil syntax-table (15) 8356 . 8357) (nil font-lock-face web-mode-javascript-string-face 8356 . 8357) (nil part-side javascript 8355 . 8356) (nil part-token string 8355 . 8356) (nil font-lock-face web-mode-javascript-string-face 8355 . 8356) (nil part-side javascript 8348 . 8355) (nil part-token string 8348 . 8355) (nil font-lock-face web-mode-javascript-string-face 8348 . 8355) (nil part-side javascript 8333 . 8348) (nil part-token string 8333 . 8348) (nil font-lock-face web-mode-javascript-string-face 8333 . 8348) (nil part-side javascript 8332 . 8333) (nil part-token string 8332 . 8333) (nil syntax-table (15) 8332 . 8333) (nil font-lock-face web-mode-javascript-string-face 8332 . 8333) (nil part-side javascript 8331 . 8332) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil part-side javascript 8328 . 8331) (nil face web-mode-function-call-face 8328 . 8331) (nil part-side javascript 8320 . 8328) (8320 . 8370)) ((#("console.log('filter parsing started:', filtertype)" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 49 (part-side javascript) 49 50 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 8320) (undo-tree-id21 . -50) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil syntax-table (15) 8332 . 8333) (nil syntax-table (15) 8356 . 8357) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil rear-nonsticky t 8369 . 8370)) (25875 61146 902998 393000) 0 nil] [nil nil ((nil rear-nonsticky nil 8369 . 8370) (nil part-side javascript 8369 . 8370) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil part-side javascript 8357 . 8369) (nil part-side javascript 8356 . 8357) (nil part-token string 8356 . 8357) (nil syntax-table (15) 8356 . 8357) (nil font-lock-face web-mode-javascript-string-face 8356 . 8357) (nil part-side javascript 8355 . 8356) (nil part-token string 8355 . 8356) (nil font-lock-face web-mode-javascript-string-face 8355 . 8356) (nil part-side javascript 8348 . 8355) (nil part-token string 8348 . 8355) (nil font-lock-face web-mode-javascript-string-face 8348 . 8355) (nil part-side javascript 8333 . 8348) (nil part-token string 8333 . 8348) (nil font-lock-face web-mode-javascript-string-face 8333 . 8348) (nil part-side javascript 8332 . 8333) (nil part-token string 8332 . 8333) (nil syntax-table (15) 8332 . 8333) (nil font-lock-face web-mode-javascript-string-face 8332 . 8333) (nil part-side javascript 8331 . 8332) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil part-side javascript 8328 . 8331) (nil face web-mode-function-call-face 8328 . 8331) (nil part-side javascript 8320 . 8328) (8320 . 8370)) ((#("console.log('filter parsing started:', filtertype)" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 49 (part-side javascript) 49 50 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-4-face))) . 8320) (undo-tree-id20 . -50) (nil face (rainbow-delimiters-depth-4-face) 8331 . 8332) (nil syntax-table (15) 8332 . 8333) (nil syntax-table (15) 8356 . 8357) (nil face (rainbow-delimiters-depth-4-face) 8369 . 8370) (nil rear-nonsticky t 8369 . 8370)) (25875 61144 919704 558000) 0 nil])
([nil nil ((10308 . 10312)) ((#(". si" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 3 (part-side javascript) 3 4 (part-side javascript)) . 10308) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4)) (25875 61450 270371 541000) 0 nil])
nil
nil
nil
nil
nil
([nil nil ((#("." 0 1 (part-side javascript)) . -10308) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(" " 0 1 (part-side javascript)) . -10309) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("s" 0 1 (part-side javascript)) . -10310) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("i" 0 1 (part-side javascript)) . -10311) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 10312) ((10308 . 10312)) (25875 61450 11046 260000) 0 nil])
([nil nil ((10308 . 10310)) ((#(", " 0 2 (part-side javascript)) . 10308) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2)) (25875 61449 788315 901000) 0 nil])
([nil nil ((10307 . 10324)) ((#(" else statemenet " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1 5 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 5 16 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 16 17 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 10307) (undo-tree-id109 . -17) (undo-tree-id110 . -17) (undo-tree-id111 . -17) (undo-tree-id112 . -17) (undo-tree-id113 . -17) (undo-tree-id114 . -17) (undo-tree-id115 . -17) (undo-tree-id116 . -17)) (25875 61449 598746 418000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -10323) (undo-tree-id72 . -1) 10324) ((10323 . 10324)) (25875 61448 168981 168000) 0 nil])
([nil nil ((10326 . 10337)) ((#("filtertype " 0 10 (part-side javascript) 10 11 (part-side javascript)) . 10326) (undo-tree-id85 . -11) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) (undo-tree-id91 . -11) (undo-tree-id92 . -11) (undo-tree-id93 . -11) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . -11) (undo-tree-id98 . -11) (undo-tree-id99 . -11) (undo-tree-id100 . -11) (undo-tree-id101 . -11) (undo-tree-id102 . -11) (undo-tree-id103 . -11) (undo-tree-id104 . -11) (undo-tree-id105 . -11) (undo-tree-id106 . -11) (undo-tree-id107 . -11) (undo-tree-id108 . -11)) (25875 61447 241189 118000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10336) (undo-tree-id64 . -1) (undo-tree-id66 . -1) (undo-tree-id68 . -1) (undo-tree-id70 . -1) 10337) ((10336 . 10337) (t 25875 61235 138895 408000)) (25875 61235 121528 399000) 0 nil])
nil
