(undo-tree-save-format-version . 1)
"e2ae0a650e72182f72f4415f8708a60329cb516f"
[nil nil nil nil (25836 51058 77542 901000) 0 nil]
([nil nil ((26 . 30) (t 25669 33215 395490 39000)) nil (25836 51058 77540 903000) 0 nil])
([nil nil (("W" . 30)) nil (25836 51058 77539 701000) 0 nil])
([nil nil ((30 . 31)) nil (25836 51058 77538 885000) 0 nil])
([nil nil ((133 . 141)) nil (25836 51058 77538 32000) 0 nil])
([nil nil ((422 . 423)) nil (25836 51058 77537 202000) 0 nil])
([nil nil ((#("t" 0 1 (face (whitespace-line))) . 428) (#("n" 0 1 (face (whitespace-line))) . 428) (#("u" 0 1 (face (whitespace-line))) . 428) (#("o" 0 1 (face (whitespace-line))) . 428) (#("m" 0 1 (face (whitespace-line))) . 428) (#("a" 0 1 (face (whitespace-line))) . 428)) nil (25836 51058 77535 721000) 0 nil])
([nil nil ((428 . 434)) nil (25836 51058 77533 668000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . 464) (#("a" 0 1 (face (whitespace-line))) . 464) (#(" " 0 1 (face (whitespace-line))) . 464) (#("t" 0 1 (face (whitespace-line))) . 464) (#("a" 0 1 (face (whitespace-line))) . 464) (#("e" 0 1 (face (whitespace-line))) . 464) (#("r" 0 1 (face (whitespace-line))) . 464) (#("g" 0 1 (face (whitespace-line))) . 464)) nil (25836 51058 77531 906000) 0 nil])
([nil nil ((478 . 487)) nil (25836 51058 77529 487000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . 487) (#("e" 0 1 (face (whitespace-line))) . 487) (#("g" 0 1 (face (whitespace-line))) . 487) (#("a" 0 1 (face (whitespace-line))) . 487) (#("n" 0 1 (face (whitespace-line))) . 487) (#("a" 0 1 (face (whitespace-line))) . 487) (#("m" 0 1 (face (whitespace-line))) . 487)) nil (25836 51058 77527 796000) 0 nil])
([nil nil ((513 . 514)) nil (25836 51058 77525 307000) 0 nil])
([nil nil ((#("<" 0 1 (tag-name "currently" tag-type start tag-beg 1 font-lock-face web-mode-html-tag-bracket-face)) . -501) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("p" 0 1 (tag-name "pcurrently" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -502) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#(">" 0 1 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -503) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 504) nil (25836 51058 77523 722000) 0 nil])
([nil nil ((#(">" 0 1 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -189) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 190) nil (25836 51058 77514 776000) 0 nil])
([nil nil ((#("<" 0 1 (tag-name "finally" tag-type start tag-beg 1 font-lock-face web-mode-html-tag-bracket-face)) . -187) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("p" 0 1 (tag-name "pfinally" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -188) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 189) nil (25836 51058 77510 415000) 0 nil])
([nil nil ((#("<" 0 1 (face (whitespace-line))) . -492) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("/" 0 1 (face (whitespace-line))) . -493) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-unclosed-face face (whitespace-line web-mode-html-tag-unclosed-face))) . -494) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#(">" 0 1 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . -495) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 496) nil (25836 51058 77501 818000) 0 nil])
([nil nil ((#("<" 0 1 (face (whitespace-line))) . -984) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("/" 0 1 (face (whitespace-line))) . -985) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-unclosed-face face (whitespace-line web-mode-html-tag-unclosed-face))) . -986) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#(">" 0 1 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . -987) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 988) nil (25836 51058 77487 495000) 0 nil])
([nil nil (("<" . -1100) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) ("/" . -1101) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -1102) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(">" 0 1 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -1103) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 1104) nil (25836 51058 77475 747000) 0 nil])
([nil nil ((#("<" 0 1 (tag-name "i" tag-type start tag-beg 1 font-lock-face web-mode-html-tag-bracket-face)) . -986) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("p" 0 1 (tag-name "pi" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -987) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#(">" 0 1 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -988) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 989) nil (25836 51058 77452 318000) 0 nil])
([nil nil ((496 . 497) (493 . 497)) nil (25836 51058 77444 160000) 0 nil])
([nil nil ((990 . 992)) nil (25836 51058 77443 62000) 0 nil])
([nil nil ((993 . 994) (992 . 994)) nil (25836 51058 77442 10000) 0 nil])
([nil nil (("," . -555) (undo-tree-id127 . -1) 556) nil (25836 51058 77440 682000) 0 nil])
([nil nil ((555 . 556)) nil (25836 51058 77438 536000) 0 nil])
([nil nil ((580 . 581)) nil (25836 51058 77437 729000) 0 nil])
([nil nil ((583 . 604)) nil (25836 51058 77436 877000) 0 nil])
([nil nil ((604 . 625)) nil (25836 51058 77436 6000) 0 nil])
([nil nil ((625 . 628)) nil (25836 51058 77435 112000) 0 nil])
([nil nil ((628 . 641)) nil (25836 51058 77434 143000) 0 nil])
([nil nil ((" " . -640) (undo-tree-id126 . -1) 641) nil (25836 51058 77432 957000) 0 nil])
([nil nil ((640 . 642)) nil (25836 51058 77430 898000) 0 nil])
([nil nil (("l" . 642) ("l" . 642) ("i" . 642) ("w" . 642) (" " . 642) ("n" . 642) ("o" . 642) ("i" . 642) ("t" . 642) ("c" . 642) ("e" . 642) ("s" . 642) (" " . 642) ("t" . 642) ("s" . 642) ("o" . 642) ("p" . 642) (" " . 642) ("e" . 642) ("h" . 642) ("T" . 642)) nil (25836 51058 77427 757000) 0 nil])
([nil nil (("p" . 642) ("u" . 642) (" " . 642) ("f" . 642) ("o" . 642) (" " . 642) ("y" . 642) ("l" . 642) ("n" . 642) ("i" . 642) ("a" . 642) ("m" . 642) (" " . 642) ("t" . 642) ("s" . 642) ("i" . 642) ("s" . 642) ("n" . 642) ("o" . 642) ("c" . 642) (" " . 642)) nil (25836 51058 77420 275000) 0 nil])
([nil nil (("s" . 642) ("a" . 642) (" " . 642) ("," . 642) ("s" . 642) ("t" . 642) ("s" . 642) ("o" . 642) ("p" . 642) (" " . 642) ("e" . 642) ("t" . 642) ("a" . 642) ("d" . 642)) nil (25836 51058 77413 235000) 0 nil])
([nil nil ((642 . 647)) nil (25836 51058 77408 188000) 0 nil])
([nil nil ((#("c" 0 1 (face (whitespace-line))) . -670) (undo-tree-id118 . -1) (#("o" 0 1 (face (whitespace-line))) . -671) (undo-tree-id119 . -1) (#("n" 0 1 (face (whitespace-line))) . -672) (undo-tree-id120 . -1) (#("s" 0 1 (face (whitespace-line))) . -673) (undo-tree-id121 . -1) (#("i" 0 1 (face (whitespace-line))) . -674) (undo-tree-id122 . -1) (#("s" 0 1 (face (whitespace-line))) . -675) (undo-tree-id123 . -1) (#("t" 0 1 (face (whitespace-line))) . -676) (undo-tree-id124 . -1) (#("s" 0 1 (face (whitespace-line))) . -677) (undo-tree-id125 . -1) 678) nil (25836 51058 77406 30000) 0 nil])
([nil nil ((670 . 673)) nil (25836 51058 77394 737000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -669) (undo-tree-id114 . -1) (#("b" 0 1 (face (whitespace-line))) . -670) (undo-tree-id115 . -1) (#("e" 0 1 (face (whitespace-line))) . -671) (undo-tree-id116 . -1) (#(" " 0 1 (face (whitespace-line))) . -672) (undo-tree-id117 . -1) 673) nil (25836 51058 77392 990000) 0 nil])
([nil nil ((669 . 671)) nil (25836 51058 77387 188000) 0 nil])
([nil nil ((#("r" 0 1 (face (whitespace-line))) . -670) (undo-tree-id113 . -1) 671) nil (25836 51058 77385 998000) 0 nil])
([nil nil ((#("w" 0 1 (face (whitespace-line))) . -665) (undo-tree-id108 . -1) (#("i" 0 1 (face (whitespace-line))) . -666) (undo-tree-id109 . -1) (#("l" 0 1 (face (whitespace-line))) . -667) (undo-tree-id110 . -1) (#("l" 0 1 (face (whitespace-line))) . -668) (undo-tree-id111 . -1) (#(" " 0 1 (face (whitespace-line))) . -669) (undo-tree-id112 . -1) 670) nil (25836 51058 77382 600000) 0 nil])
([nil nil ((665 . 686)) nil (25836 51058 77375 573000) 0 nil])
([nil nil ((686 . 688)) nil (25836 51058 77374 688000) 0 nil])
([nil nil ((#("f" 0 1 (face (whitespace-line))) . 688) (#("o" 0 1 (face (whitespace-line))) . 688) (#(" " 0 1 (face (whitespace-line))) . 688)) nil (25836 51058 77373 438000) 0 nil])
([nil nil ((688 . 692)) nil (25836 51058 77372 29000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -691) (undo-tree-id107 . -1) 692) nil (25836 51058 77370 931000) 0 nil])
([nil nil ((#("d" 0 1 (face (whitespace-line))) . 699) (#("n" 0 1 (face (whitespace-line))) . 699) (#("a" 0 1 (face (whitespace-line))) . 699)) nil (25836 51058 77367 963000) 0 nil])
([nil nil ((699 . 701)) nil (25836 51058 77366 599000) 0 nil])
([nil nil ((709 . 718)) nil (25836 51058 77365 723000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -717) (undo-tree-id106 . -1) 718) nil (25836 51058 77364 510000) 0 nil])
([nil nil ((719 . 731)) nil (25836 51058 77362 112000) 0 nil])
([nil nil ((#("A" 0 1 (face (whitespace-line))) . -719) (undo-tree-id94 . -1) (#("l" 0 1 (face (whitespace-line))) . -720) (undo-tree-id95 . -1) (#("l" 0 1 (face (whitespace-line))) . -721) (undo-tree-id96 . -1) (#(" " 0 1 (face (whitespace-line))) . -722) (undo-tree-id97 . -1) (#("c" 0 1 (face (whitespace-line))) . -723) (undo-tree-id98 . -1) (#("o" 0 1 (face (whitespace-line))) . -724) (undo-tree-id99 . -1) (#("n" 0 1 (face (whitespace-line))) . -725) (undo-tree-id100 . -1) (#("t" 0 1 (face (whitespace-line))) . -726) (undo-tree-id101 . -1) (#("e" 0 1 (face (whitespace-line))) . -727) (undo-tree-id102 . -1) (#("n" 0 1 (face (whitespace-line))) . -728) (undo-tree-id103 . -1) (#("t" 0 1 (face (whitespace-line))) . -729) (undo-tree-id104 . -1) (#(" " 0 1 (face (whitespace-line))) . -730) (undo-tree-id105 . -1) 731) nil (25836 51058 77358 903000) 0 nil])
([nil nil ((719 . 731)) nil (25836 51058 77294 713000) 0 nil])
([nil nil ((#("c" 0 1 (face (whitespace-line))) . -724) (undo-tree-id87 . -1) (#("o" 0 1 (face (whitespace-line))) . -725) (undo-tree-id88 . -1) (#("n" 0 1 (face (whitespace-line))) . -726) (undo-tree-id89 . -1) (#("e" 0 1 (face (whitespace-line))) . -727) (undo-tree-id90 . -1) (#("t" 0 1 (face (whitespace-line))) . -728) (undo-tree-id91 . -1) (#("n" 0 1 (face (whitespace-line))) . -729) (undo-tree-id92 . -1) (#(" " 0 1 (face (whitespace-line))) . -730) (undo-tree-id93 . -1) 731) nil (25836 51058 77292 249000) 0 nil])
([nil nil ((#("t" 0 1 (face (whitespace-line))) . -722) (undo-tree-id85 . -1) (#(" " 0 1 (face (whitespace-line))) . -723) (undo-tree-id86 . -1) 724) nil (25836 51058 77282 377000) 0 nil])
([nil nil ((722 . 738)) nil (25836 51058 77279 53000) 0 nil])
([nil nil ((#("M" 0 1 (face (whitespace-line))) . -719) (undo-tree-id66 . -1) (#("o" 0 1 (face (whitespace-line))) . -720) (undo-tree-id67 . -1) (#("s" 0 1 (face (whitespace-line))) . -721) (undo-tree-id68 . -1) (#("t" 0 1 (face (whitespace-line))) . -722) (undo-tree-id69 . -1) (#(" " 0 1 (face (whitespace-line))) . -723) (undo-tree-id70 . -1) (#("c" 0 1 (face (whitespace-line))) . -724) (undo-tree-id71 . -1) (#("o" 0 1 (face (whitespace-line))) . -725) (undo-tree-id72 . -1) (#("n" 0 1 (face (whitespace-line))) . -726) (undo-tree-id73 . -1) (#("t" 0 1 (face (whitespace-line))) . -727) (undo-tree-id74 . -1) (#("e" 0 1 (face (whitespace-line))) . -728) (undo-tree-id75 . -1) (#("n" 0 1 (face (whitespace-line))) . -729) (undo-tree-id76 . -1) (#("t" 0 1 (face (whitespace-line))) . -730) (undo-tree-id77 . -1) (#(" " 0 1 (face (whitespace-line))) . -731) (undo-tree-id78 . -1) (#("t" 0 1 (face (whitespace-line))) . -732) (undo-tree-id79 . -1) (#("o" 0 1 (face (whitespace-line))) . -733) (undo-tree-id80 . -1) (#("n" 0 1 (face (whitespace-line))) . -734) (undo-tree-id81 . -1) (#(" " 0 1 (face (whitespace-line))) . -735) (undo-tree-id82 . -1) (#("t" 0 1 (face (whitespace-line))) . -736) (undo-tree-id83 . -1) (#("h" 0 1 (face (whitespace-line))) . -737) (undo-tree-id84 . -1) 738) nil (25836 51058 77273 859000) 0 nil])
([nil nil ((719 . 739)) nil (25836 51058 77249 540000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . 745) (#("s" 0 1 (face (whitespace-line))) . 745) (#("e" 0 1 (face (whitespace-line))) . 745) (#("i" 0 1 (face (whitespace-line))) . 745) (#("r" 0 1 (face (whitespace-line))) . 745) (#("o" 0 1 (face (whitespace-line))) . 745) (#("t" 0 1 (face (whitespace-line))) . 745) (#("s" 0 1 (face (whitespace-line))) . 745) (#(" " 0 1 (face (whitespace-line))) . 745) (#("s" 0 1 (face (whitespace-line))) . 745) (#("a" 0 1 (face (whitespace-line))) . 745) (#(" " 0 1 (face (whitespace-line))) . 745) (#("l" 0 1 (face (whitespace-line))) . 745) (#("l" 0 1 (face (whitespace-line))) . 745) (#("e" 0 1 (face (whitespace-line))) . 745) (#("w" 0 1 (face (whitespace-line))) . 745) (#(" " 0 1 (face (whitespace-line))) . 745) (#("s" 0 1 (face (whitespace-line))) . 745) (#("a" 0 1 (face (whitespace-line))) . 745)) nil (25836 51058 77245 920000) 0 nil])
([nil nil (("
I hope this site will provide you with a brief escape from your daily trials, even if only for a minute or two." . 1022) (undo-tree-id59 . -1) (undo-tree-id60 . -112) (undo-tree-id61 . -112) (undo-tree-id62 . -112) (undo-tree-id63 . -1) (undo-tree-id64 . -112) (undo-tree-id65 . -112)) nil (25836 51058 77239 278000) 0 nil])
([nil current (("
" . -1016) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) ("<" . -1017) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("h" 0 1 (tag-name "h" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -1018) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("r" 0 1 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-unclosed-face)) . -1019) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("/" 0 1 (tag-name "hr" tag-type void)) . -1020) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(">" 0 1 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -1021) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 1022) nil (25836 51058 77221 864000) 0 nil])
nil
