(undo-tree-save-format-version . 1)
"e9930a4added7f364f284a22d2674e1156fe0298"
[nil nil nil nil (25901 6217 182545 781000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 66) (undo-tree-id9 . -1) (t 25891 57933 922271 0)) nil (25901 6217 182543 797000) 0 nil])
([nil nil ((66 . 67)) nil (25901 6217 182541 350000) 0 nil])
([nil nil ((#(" Button layout in analysetool popup, like button order in save filter.
- List ordering should be looked through different places in angle." 0 70 (markdown-list-item ((81 152 0 2 "- " nil (81 83 81 81 81 82 82 83))) fontified t) 70 71 (fontified t font-lock-multiline t) 71 72 (markdown-list-item ((153 220 0 2 "- " nil (153 155 153 153 153 154 154 155))) fontified t face markdown-list-face) 72 138 (markdown-list-item ((153 220 0 2 "- " nil (153 155 153 153 153 154 154 155))) fontified t)) . 82) (undo-tree-id3 . -71) (undo-tree-id4 . -138) (undo-tree-id5 . 120) (undo-tree-id6 . -29) (undo-tree-id7 . -138) (undo-tree-id8 . -138)) nil (25901 6217 182539 859000) 0 nil])
([nil nil ((68 . 69)) nil (25901 6217 182531 92000) 0 nil])
([nil nil ((53 . 54)) nil (25901 6217 182530 133000) 0 nil])
([nil nil ((53 . 54)) nil (25901 6217 182529 70000) 0 nil])
([nil nil ((54 . 56)) nil (25901 6217 182527 618000) 0 nil])
([nil nil ((87 . 88)) nil (25901 6217 182525 875000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((86 88 0 2 "- " nil (86 88 86 86 86 87 87 88))))) . -85) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t markdown-list-item ((71 73 0 2 "- " nil (71 73 71 71 71 72 72 73))) face whitespace-trailing)) . -71) (#(" " 0 1 (fontified t markdown-list-item ((54 56 0 2 "- " nil (54 56 54 54 54 55 55 56))) face whitespace-trailing)) . -55) 88) nil (25901 6217 182518 801000) 0 nil])
([nil nil ((55 . 56) (t 25901 6217 226848 232000)) nil (25901 7479 189847 839000) 0 nil])
([nil nil ((72 . 73)) nil (25901 7479 189844 468000) 0 nil])
([nil nil ((87 . 88)) nil (25901 7479 189841 269000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((86 88 0 2 "- " nil (86 88 86 86 86 87 87 88))) face whitespace-trailing)) . -85) (#(" " 0 1 (fontified t markdown-list-item ((71 73 0 2 "- " nil (71 73 71 71 71 72 72 73))) face whitespace-trailing)) . -71) (#(" " 0 1 (fontified t markdown-list-item ((54 56 0 2 "- " nil (54 56 54 54 54 55 55 56))))) . -55) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 56) nil (25901 7479 189813 270000) 0 nil])
([nil nil ((85 . 106) (t 25901 7479 218692 513000)) nil (25901 7509 363594 167000) 0 nil])
([nil nil ((106 . 113)) nil (25901 7509 363590 468000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((84 113 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -112) (undo-tree-id99 . -1) 113) nil (25901 7509 363585 898000) 0 nil])
([nil nil ((112 . 127)) nil (25901 7509 363578 22000) 0 nil])
([nil nil ((127 . 128)) nil (25901 7509 363573 926000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t markdown-list-item ((84 120 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -119) (undo-tree-id90 . -1) (#("k" 0 1 (fontified t markdown-list-item ((84 121 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -120) (undo-tree-id91 . -1) (#("e" 0 1 (fontified t markdown-list-item ((84 122 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -121) (undo-tree-id92 . -1) (#("s" 0 1 (fontified t markdown-list-item ((84 123 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -122) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t markdown-list-item ((84 124 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -123) (undo-tree-id94 . -1) (#("i" 0 1 (fontified t markdown-list-item ((84 125 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -124) (undo-tree-id95 . -1) (#("t" 0 1 (fontified t markdown-list-item ((84 126 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -125) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t markdown-list-item ((84 127 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -126) (undo-tree-id97 . -1) (#("f" 0 1 (fontified defer markdown-list-item ((84 128 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -127) (undo-tree-id98 . -1) 128) nil (25901 7509 363562 724000) 0 nil])
([nil nil ((119 . 121)) nil (25901 7509 363513 681000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t markdown-list-item ((84 119 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -118) (undo-tree-id87 . -1) (#("s" 0 1 (fontified t markdown-list-item ((84 120 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -119) (undo-tree-id88 . -1) (#("e" 0 1 (fontified defer markdown-list-item ((84 121 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -120) (undo-tree-id89 . -1) 121) nil (25901 7509 363504 727000) 0 nil])
([nil nil ((118 . 130)) nil (25901 7509 363482 770000) 0 nil])
([nil nil ((#("w" 0 1 (fontified defer markdown-list-item ((84 128 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -127) (undo-tree-id84 . -1) (#("n" 0 1 (fontified t markdown-list-item ((84 129 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -128) (undo-tree-id85 . -1) (#("s" 0 1 (fontified defer markdown-list-item ((84 130 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -129) (undo-tree-id86 . -1) 130) nil (25901 7509 363472 71000) 0 nil])
([nil nil ((127 . 130)) nil (25901 7509 363446 316000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t markdown-list-item ((84 129 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -128) (undo-tree-id82 . -1) (#("n" 0 1 (fontified defer markdown-list-item ((84 130 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -129) (undo-tree-id83 . -1) 130) nil (25901 7509 363438 251000) 0 nil])
([nil nil ((128 . 141)) nil (25901 7509 363423 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((84 141 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -140) (undo-tree-id81 . -1) 141) nil (25901 7509 363415 994000) 0 nil])
([nil nil ((140 . 143)) nil (25901 7509 363405 910000) 0 nil])
([nil nil ((#("c" 0 1 (fontified defer markdown-list-item ((84 143 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -142) (undo-tree-id80 . -1) 143) nil (25901 7509 363399 548000) 0 nil])
([nil nil ((142 . 146)) nil (25901 7509 363392 91000) 0 nil])
([nil nil ((146 . 151)) nil (25901 7509 363386 722000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t markdown-list-item ((84 147 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -146) (undo-tree-id75 . -1) (#("a" 0 1 (fontified t markdown-list-item ((84 148 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -147) (undo-tree-id76 . -1) (#("r" 0 1 (fontified t markdown-list-item ((84 149 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -148) (undo-tree-id77 . -1) (#("e" 0 1 (fontified t markdown-list-item ((84 150 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -149) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t markdown-list-item ((84 151 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -150) (undo-tree-id79 . -1) 151) nil (25901 7509 363374 525000) 0 nil])
([nil nil ((146 . 163)) nil (25901 7509 363337 464000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer markdown-list-item ((84 155 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -154) (undo-tree-id66 . -1) (#("m" 0 1 (fontified defer markdown-list-item ((84 156 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -155) (undo-tree-id67 . -1) (#("a" 0 1 (fontified defer markdown-list-item ((84 157 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -156) (undo-tree-id68 . -1) (#("c" 0 1 (fontified defer markdown-list-item ((84 158 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -157) (undo-tree-id69 . -1) (#("h" 0 1 (fontified defer markdown-list-item ((84 159 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -158) (undo-tree-id70 . -1) (#("i" 0 1 (fontified defer markdown-list-item ((84 160 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -159) (undo-tree-id71 . -1) (#("e" 0 1 (fontified defer markdown-list-item ((84 161 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -160) (undo-tree-id72 . -1) (#("n" 0 1 (fontified t markdown-list-item ((84 162 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -161) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t markdown-list-item ((84 163 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -162) (undo-tree-id74 . -1) 163) nil (25901 7509 363280 952000) 0 nil])
([nil nil ((154 . 163)) nil (25901 7509 363218 908000) 0 nil])
([nil current ((#(" " 0 1 (fontified t markdown-list-item ((84 163 0 2 "- " nil (84 86 84 84 84 85 85 86))))) . -162) (undo-tree-id65 . -1) 163) nil (25901 7509 363194 122000) 0 nil])
nil
