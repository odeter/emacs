(undo-tree-save-format-version . 1)
"0e82b09722789126171466d261b555d7f7919ad9"
[nil nil nil nil (25845 56896 831696 299000) 0 nil]
([nil nil ((29 . 42) (28 . 30) (#("{" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -28) (28 . 29) (20 . 29) (t 25845 56902 460414 377000)) nil (25902 16977 184331 432000) 0 nil] [nil nil ((#("
    text-align: center;" 0 5 (part-side css) 5 16 (face web-mode-css-property-name-face part-side css) 16 24 (part-side css)) . 4314) (undo-tree-id0 . -1) (undo-tree-id1 . -24) (undo-tree-id2 . -24) (undo-tree-id3 . -24) (t 25810 17512 959758 217000)) ((4314 . 4338) (t 25845 56882 524422 435000)) (25845 56882 517340 698000) 0 nil])
([nil nil ((42 . 52)) nil (25902 16977 184322 110000) 0 nil])
nil
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -51) (undo-tree-id0 . -1) 52) nil (25902 16977 184311 171000) 0 nil])
([nil nil ((#("{" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -28) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 29 (t 25902 16977 250802 510000)) nil (25902 17012 367433 330000) 0 nil])
([nil nil ((#("}" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -50) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 51) nil (25902 17012 367419 654000) 0 nil])
([nil nil ((#("style=\"background-color: red;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 7 29 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . 21) (undo-tree-id11 . -30) (undo-tree-id12 . -7) (undo-tree-id13 . -29) (undo-tree-id14 . -29) (undo-tree-id15 . -30) (undo-tree-id16 . -30) (t 25902 17012 420096 658000)) nil (25902 18780 859705 560000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-app" tag-type start)) . -20) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 21) nil (25902 18780 859695 811000) 0 nil])
([nil nil ((20 . 21)) nil (25902 18780 863440 97000) 0 nil])
([nil nil ((21 . 27)) nil (25902 18790 806117 178000) 0 nil] [nil nil ((nil rear-nonsticky nil 44 . 45) (nil tag-attr t 44 . 45) (nil tag-attr-end 0 44 . 45) (nil tag-name "v-app" 44 . 45) (nil tag-type start 44 . 45) (nil font-lock-face web-mode-html-attr-name-face 44 . 45) (nil tag-attr t 41 . 44) (nil tag-name "v-app" 41 . 44) (nil tag-type start 41 . 44) (nil font-lock-face web-mode-html-attr-name-face 41 . 44) (nil tag-attr-beg 0 40 . 41) (nil tag-attr t 40 . 41) (nil tag-name "v-app" 40 . 41) (nil tag-type start 40 . 41) (nil font-lock-face web-mode-html-attr-name-face 40 . 41) (nil tag-name "v-app" 39 . 40) (nil tag-type start 39 . 40) (nil tag-attr t 38 . 39) (nil tag-attr-end 0 38 . 39) (nil tag-name "v-app" 38 . 39) (nil tag-type start 38 . 39) (nil font-lock-face web-mode-html-attr-name-face 38 . 39) (nil tag-attr t 23 . 38) (nil tag-name "v-app" 23 . 38) (nil tag-type start 23 . 38) (nil font-lock-face web-mode-html-attr-name-face 23 . 38) (nil tag-attr-beg 0 22 . 23) (nil tag-attr t 22 . 23) (nil tag-name "v-app" 22 . 23) (nil tag-type start 22 . 23) (nil font-lock-face web-mode-html-attr-name-face 22 . 23) (nil tag-name "v-app" 21 . 22) (nil tag-type start 21 . 22) (21 . 45)) ((#(" background-color: blue;" 0 1 (tag-name "v-app" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 2 17 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-attr-end 0 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-name "v-app" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 20 23 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (rear-nonsticky nil tag-attr t tag-attr-end 0 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face)) . 21) (undo-tree-id17 . -23) (nil tag-name "v-app" 21 . 22) (nil tag-name "v-app" 22 . 23) (nil tag-name "v-app" 23 . 38) (nil tag-name "v-app" 38 . 39) (nil tag-name "v-app" 39 . 40) (nil tag-name "v-app" 40 . 41) (nil tag-name "v-app" 41 . 44) (nil tag-name "v-app" 44 . 45) (nil rear-nonsticky t 44 . 45)) (25902 18780 859663 143000) 0 nil])
([nil nil ((#("k" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face)) . -24) (undo-tree-id23 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face)) . -25) (undo-tree-id24 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face)) . -26) (undo-tree-id25 . -1) 27) nil (25902 18790 806110 895000) 0 nil])
nil
([nil nil ((24 . 29)) nil (25902 18790 806094 347000) 0 nil])
([nil nil ((nil rear-nonsticky nil 51 . 52) (nil tag-attr t 28 . 52) (nil tag-name "v-app" 28 . 52) (nil tag-type start 28 . 52) (nil font-lock-face web-mode-html-attr-value-face 28 . 52) (28 . 52)) nil (25902 18790 806091 171000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -28) (undo-tree-id22 . -1) 29) nil (25902 18790 806083 143000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -46) (undo-tree-id18 . -1) (#("l" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -47) (undo-tree-id19 . -1) (#("u" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -48) (undo-tree-id20 . -1) (#("e" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . -49) (undo-tree-id21 . -1) 50) nil (25902 18790 806070 864000) 0 nil])
([nil nil ((46 . 51)) nil (25902 19958 979658 820000) 0 nil])
([nil nil ((#(" style=\"background-color: green;\"" 0 1 (tag-name "v-app" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 2 6 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 8 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 8 26 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 27 32 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . 20) (undo-tree-id316 . -33) (undo-tree-id317 . -33) (undo-tree-id318 . -33)) nil (25902 20099 946873 387000) 0 nil] [nil nil ((21 . 30) (t 25902 18790 867209 634000)) ((#("class=\"\" " 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-name "v-app" tag-type start)) . 21) (undo-tree-id302 . -7) (undo-tree-id303 . -7) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7) (undo-tree-id308 . -7) (undo-tree-id309 . -7) (undo-tree-id310 . -7) (undo-tree-id311 . -7) (undo-tree-id312 . -7) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7)) (25902 19958 308165 742000) 0 nil])
([nil nil ((4358 . 4363)) nil (25902 20107 275922 559000) 0 nil] [nil nil ((#("
    margin-top: 60px;" 0 5 (part-side css) 5 16 (part-side css face web-mode-css-property-name-face) 16 22 (part-side css)) . 4358) (undo-tree-id319 . -22) (undo-tree-id320 . -22) (undo-tree-id321 . -1) (undo-tree-id323 . -22) (t 25902 19964 846863 544000)) ((4358 . 4380) (t 25902 20084 82213 780000)) (25902 20084 74475 771000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44 . 45) (nil tag-attr t 41 . 45) (nil tag-name "v-app" 41 . 45) (nil tag-type start 41 . 45) (nil font-lock-face web-mode-html-attr-name-face 41 . 45) (nil tag-attr-beg 0 40 . 41) (nil tag-attr t 40 . 41) (nil tag-name "v-app" 40 . 41) (nil tag-type start 40 . 41) (nil font-lock-face web-mode-html-attr-name-face 40 . 41) (nil tag-name "v-app" 35 . 40) (nil tag-type start 35 . 40) (nil tag-attr t 34 . 35) (nil tag-attr-end 5 34 . 35) (nil tag-name "v-app" 34 . 35) (nil tag-type start 34 . 35) (nil font-lock-face web-mode-html-attr-value-face 34 . 35) (nil tag-attr t 28 . 34) (nil tag-name "v-app" 28 . 34) (nil tag-type start 28 . 34) (nil font-lock-face web-mode-html-attr-value-face 28 . 34) (28 . 45)) ((#("class=\"ma-0 pa-0\"" 0 1 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 7 12 (tag-name "v-app" tag-type start) 12 13 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 13 15 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (rear-nonsticky nil tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face)) . 28) (undo-tree-id164 . -17) (undo-tree-id165 . -16) (undo-tree-id166 . -16) (undo-tree-id167 . -16) (undo-tree-id168 . -16) (undo-tree-id169 . -16) (undo-tree-id170 . -16) (undo-tree-id171 . -16) (undo-tree-id172 . -16) (undo-tree-id173 . -16) (undo-tree-id174 . -16) (undo-tree-id175 . -16) (undo-tree-id176 . -16) (undo-tree-id177 . -16) (undo-tree-id178 . -16) (undo-tree-id179 . -16) (undo-tree-id180 . -16) (undo-tree-id181 . -16) (undo-tree-id182 . -16) (undo-tree-id183 . -16) (undo-tree-id184 . -16) (undo-tree-id185 . -16) (undo-tree-id186 . -16) (undo-tree-id187 . -16) (undo-tree-id188 . -16) (undo-tree-id189 . -16) (undo-tree-id190 . -16) (undo-tree-id191 . -16) (undo-tree-id192 . -16) (undo-tree-id193 . -16) (undo-tree-id194 . -16) (undo-tree-id195 . -16) (undo-tree-id196 . -16) (undo-tree-id197 . -16) (undo-tree-id198 . -16) (undo-tree-id199 . -16) (undo-tree-id200 . -16) (undo-tree-id201 . -16) (undo-tree-id202 . -16) (undo-tree-id203 . -16) (undo-tree-id204 . -16) (undo-tree-id205 . -16) (undo-tree-id206 . -16) (undo-tree-id207 . -16) (undo-tree-id208 . -16) (undo-tree-id209 . -16) (undo-tree-id210 . -16) (undo-tree-id211 . -16) (undo-tree-id212 . -16) (undo-tree-id213 . -16) (undo-tree-id214 . -7) (undo-tree-id215 . -7) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -7) (undo-tree-id227 . -7) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -17) (undo-tree-id241 . -17) (undo-tree-id242 . -17) (undo-tree-id243 . -17) (undo-tree-id244 . -17) (undo-tree-id245 . -17) (undo-tree-id246 . -17) (undo-tree-id247 . -17) (undo-tree-id248 . -17) (undo-tree-id249 . -17) (undo-tree-id250 . -17) (undo-tree-id251 . -17) (undo-tree-id252 . -17) (undo-tree-id253 . -17) (undo-tree-id254 . -17) (undo-tree-id255 . -17) (undo-tree-id256 . -17) (undo-tree-id257 . -17) (undo-tree-id258 . -17) (undo-tree-id259 . -17) (undo-tree-id260 . -17) (undo-tree-id261 . -17) (undo-tree-id262 . -17) (undo-tree-id263 . -17) (undo-tree-id264 . -17) (undo-tree-id265 . -17) (undo-tree-id266 . -17) (undo-tree-id267 . -17) (undo-tree-id268 . -17) (undo-tree-id269 . -17) (undo-tree-id270 . -17) (undo-tree-id271 . -17) (undo-tree-id272 . -17) (undo-tree-id273 . -17) (undo-tree-id274 . -17) (undo-tree-id275 . -17) (undo-tree-id276 . -17) (undo-tree-id277 . -17) (undo-tree-id278 . -17) (undo-tree-id279 . -17) (undo-tree-id280 . -17) (undo-tree-id281 . -17) (undo-tree-id282 . -17) (undo-tree-id283 . -17) (undo-tree-id284 . -17) (undo-tree-id285 . -17) (undo-tree-id286 . -17) (undo-tree-id287 . -17) (undo-tree-id288 . -17) (undo-tree-id289 . -17) (undo-tree-id290 . -17) (undo-tree-id291 . -17) (undo-tree-id292 . -17) (undo-tree-id293 . -17) (undo-tree-id294 . -17) (undo-tree-id295 . -17) (undo-tree-id296 . -17) (undo-tree-id297 . -17) (undo-tree-id298 . -17) (undo-tree-id299 . -17) (undo-tree-id300 . -17) (undo-tree-id301 . -17) (nil tag-name "v-app" 33 . 34) (nil tag-name "v-app" 32 . 33) (nil tag-name "v-app" 31 . 32) (nil tag-name "v-app" 30 . 31) (nil tag-name "v-app" 29 . 30) (nil tag-name "v-app" 28 . 29) (nil tag-name "v-app" 34 . 35) (nil tag-name "v-app" 35 . 40) (nil tag-name "v-app" 40 . 41) (nil tag-name "v-app" 44 . 45) (nil tag-name "v-app" 43 . 44) (nil tag-name "v-app" 41 . 43) (nil rear-nonsticky t 44 . 45)) (25902 19957 237287 357000) 0 nil])
([nil nil ((4363 . 4380)) nil (25902 20107 275915 251000) 0 nil])
nil
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-app" tag-attr-end 0 tag-attr t rear-nonsticky t)) . -44) (#("\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-app" tag-attr-end 0 tag-attr t)) . 45)) ((44 . 46)) (25902 19956 899206 38000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4379) (undo-tree-id343 . -1) 4380) nil (25902 20107 275906 504000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -28) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -29) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -30) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -31) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -32) (#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr t)) . -33) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-app" tag-attr-end 5 tag-attr t)) . -34) 35) ((28 . 35)) (25902 19955 492785 405000) 0 nil])
([nil nil ((4379 . 4386)) nil (25902 20107 275897 518000) 0 nil])
([nil nil ((37 . 38)) ((#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face)) . 37)) (25902 19955 167619 883000) 0 nil])
([nil current ((#(" " 0 1 (part-side css)) . -4385) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) 4386) nil (25902 20107 275869 335000) 0 nil])
([nil nil ((#("    <core-app-bar />" 4 5 (tag-name "core-app-bar" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 5 17 (tag-name "core-app-bar" tag-type void font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "core-app-bar" tag-type void) 18 19 (tag-name "core-app-bar" tag-type void font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "core-app-bar" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 73) (undo-tree-id22 . -20) (undo-tree-id23 . -20) (undo-tree-id24 . -20) (undo-tree-id25 . -20) (t 25902 19214 211790 344000)) ((73 . 93)) (25902 19954 779084 877000) 0 nil])
nil
([nil nil (("
" . -72) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -1) 73) ((72 . 73)) (25902 19954 405801 649000) 0 nil])
([nil nil ((#("    <core-drawer />" 4 5 (tag-name "core-drawer" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 5 16 (tag-name "core-drawer" tag-type void font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "core-drawer" tag-type void) 17 18 (tag-name "core-drawer" tag-type void font-lock-face web-mode-html-tag-bracket-face) 18 19 (tag-name "core-drawer" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 73) (undo-tree-id99 . -19) (undo-tree-id100 . -19) (undo-tree-id101 . -19) (t 25902 19794 726054 430000)) ((73 . 92)) (25902 19953 974612 550000) 0 nil])
([nil nil (("
" . -72) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id37 . -1) (undo-tree-id39 . -1) (undo-tree-id41 . -1) (undo-tree-id43 . -1) (undo-tree-id45 . -1) (undo-tree-id47 . -1) (undo-tree-id49 . -1) (undo-tree-id51 . -1) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (undo-tree-id65 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) (undo-tree-id73 . -1) (undo-tree-id75 . -1) (undo-tree-id77 . -1) (undo-tree-id79 . -1) (undo-tree-id81 . -1) (undo-tree-id83 . -1) (undo-tree-id85 . -1) (undo-tree-id87 . -1) (undo-tree-id89 . -1) (undo-tree-id91 . -1) (undo-tree-id93 . -1) (undo-tree-id95 . -1) (undo-tree-id97 . -1) 73) ((72 . 73)) (25902 19953 375343 852000) 0 nil])
([nil nil ((#("
    <core-translated :dialog=\"translatedChrome\"/>
    <core-browser :dialog=\"supportedBrowser\"/>
    <core-bug-popup :dialog=\"bugReport\"/>" 5 6 (tag-name "core-translated" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 6 21 (tag-name "core-translated" tag-type void font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "core-translated" tag-type void) 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 29 31 (block-side t block-token delimiter-beg tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 32 33 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 33 34 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 34 35 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 35 36 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 36 37 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 37 38 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 38 39 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 39 40 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 40 41 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 41 42 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 42 43 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 43 44 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 44 45 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 45 46 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-name "core-translated" tag-type void face web-mode-variable-name-face) 47 48 (block-side t block-end t block-token delimiter-end tag-name "core-translated" tag-type void font-lock-face web-mode-block-delimiter-face) 48 49 (tag-name "core-translated" tag-type void font-lock-face web-mode-html-tag-bracket-face) 49 50 (tag-name "core-translated" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "core-browser" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 56 68 (tag-name "core-browser" tag-type void font-lock-face web-mode-html-tag-custom-face) 68 69 (tag-name "core-browser" tag-type void) 69 70 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 70 71 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 71 72 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 72 73 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 73 74 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 74 75 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 76 78 (block-side t block-token delimiter-beg tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 78 79 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 79 80 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 80 81 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 81 82 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 82 83 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 83 84 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 84 85 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 85 86 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 86 87 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 87 88 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 88 89 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 89 90 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 90 91 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 91 92 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 92 93 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 93 94 (block-side t tag-name "core-browser" tag-type void face web-mode-variable-name-face) 94 95 (block-side t block-end t block-token delimiter-end tag-name "core-browser" tag-type void font-lock-face web-mode-block-delimiter-face) 95 96 (tag-name "core-browser" tag-type void font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "core-browser" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 102 103 (tag-name "core-bug-popup" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 103 117 (tag-name "core-bug-popup" tag-type void font-lock-face web-mode-html-tag-custom-face) 117 118 (tag-name "core-bug-popup" tag-type void) 118 119 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 119 120 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 121 122 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 122 123 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 124 125 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 125 127 (block-side t block-token delimiter-beg tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 127 128 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 128 129 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 129 130 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 130 131 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 131 132 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 132 133 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 133 134 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 134 135 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 135 136 (block-side t tag-name "core-bug-popup" tag-type void face web-mode-variable-name-face) 136 137 (block-side t block-end t block-token delimiter-end tag-name "core-bug-popup" tag-type void font-lock-face web-mode-block-delimiter-face) 137 138 (tag-name "core-bug-popup" tag-type void font-lock-face web-mode-html-tag-bracket-face) 138 139 (tag-name "core-bug-popup" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 110) (undo-tree-id102 . -1) (undo-tree-id103 . -139) (undo-tree-id104 . -139) (undo-tree-id105 . -139) (t 25902 19809 582123 388000)) ((110 . 249)) (25902 19952 998330 644000) 0 nil])
([nil nil ((#("
    <core-footer />" 5 6 (tag-name "core-footer" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 6 17 (tag-name "core-footer" tag-type void font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "core-footer" tag-type void) 18 19 (tag-name "core-footer" tag-type void font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "core-footer" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 90) (undo-tree-id106 . -1) (undo-tree-id107 . -20) (undo-tree-id108 . -20) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -20) (undo-tree-id112 . -20) (t 25902 19928 322686 504000)) ((90 . 110)) (25902 19952 66697 788000) 0 nil])
([nil nil ((#("  <v-app class=\"ma-0 pa-0\" style=\"background-color: green;\">
    <core-view />
  </v-app>" 2 3 (tag-name "v-app" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 3 8 (tag-name "v-app" tag-type start font-lock-face web-mode-html-tag-custom-face) 8 9 (tag-name "v-app" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 10 14 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-equal-face) 15 25 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "v-app" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 28 32 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-equal-face) 33 58 (tag-attr t tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 58 59 (tag-attr t tag-attr-end 5 tag-name "v-app" tag-type start font-lock-face web-mode-html-attr-value-face) 59 60 (tag-name "v-app" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 65 66 (tag-name "core-view" tag-type void tag-beg 26 font-lock-face web-mode-html-tag-bracket-face) 66 75 (tag-name "core-view" tag-type void font-lock-face web-mode-html-tag-custom-face) 75 76 (tag-name "core-view" tag-type void) 76 77 (tag-name "core-view" tag-type void font-lock-face web-mode-html-tag-bracket-face) 77 78 (tag-name "core-view" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 81 82 (tag-name "v-app" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "v-app" tag-type end font-lock-face web-mode-html-tag-bracket-face) 83 88 (tag-name "v-app" tag-type end font-lock-face web-mode-html-tag-custom-face) 88 89 (tag-name "v-app" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12) (undo-tree-id113 . -61) (undo-tree-id114 . -89) (undo-tree-id115 . -60) (undo-tree-id116 . -60) (undo-tree-id117 . -78) (undo-tree-id118 . -60) (undo-tree-id119 . -60) (undo-tree-id120 . -78) (undo-tree-id121 . -78) (undo-tree-id122 . -78) (undo-tree-id123 . -60) (undo-tree-id124 . -78) (undo-tree-id125 . -78) (undo-tree-id127 . -63) (undo-tree-id129 . -63) (undo-tree-id131 . -63) (undo-tree-id133 . -63) (undo-tree-id135 . -61) (undo-tree-id137 . -61) (undo-tree-id139 . -61) (undo-tree-id141 . -61) (undo-tree-id143 . -61) (undo-tree-id145 . -61) (undo-tree-id147 . -61) (undo-tree-id149 . -61) (undo-tree-id151 . -61) (undo-tree-id153 . -61) (undo-tree-id155 . -61) (undo-tree-id157 . -61) (undo-tree-id159 . -61) (undo-tree-id161 . -89) (undo-tree-id162 . -78) (undo-tree-id163 . -89) (t 25902 19934 974718 624000)) ((12 . 101) (t 25902 19941 562750 490000)) (25902 19941 555831 283000) 0 nil])
nil
