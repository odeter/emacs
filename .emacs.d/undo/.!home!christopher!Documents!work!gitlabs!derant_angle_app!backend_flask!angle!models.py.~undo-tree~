(undo-tree-save-format-version . 1)
"db04f198b1861de69db4694a793135b481fce4ba"
[nil nil nil nil (25869 38425 465850 431000) 0 nil]
([nil nil ((29201 . 29203) (#("[" 0 1 (fontified nil)) . -29201) (29193 . 29202) (t 25845 36862 777513 231000)) nil (25869 38425 465848 637000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -29193) (undo-tree-id76 . -1) (#(":" 0 1 (fontified defer)) . -29194) (undo-tree-id77 . -1) (#("b" 0 1 (fontified defer)) . -29195) (undo-tree-id78 . -1) (#("i" 0 1 (fontified defer)) . -29196) (undo-tree-id79 . -1) (#("g" 0 1 (fontified defer)) . -29197) (undo-tree-id80 . -1) (#("i" 0 1 (fontified defer)) . -29198) (undo-tree-id81 . -1) (#("n" 0 1 (fontified defer)) . -29199) (undo-tree-id82 . -1) (#("t" 0 1 (fontified defer)) . -29200) (undo-tree-id83 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -29201) (undo-tree-id84 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -29202) (undo-tree-id85 . -1) 29203) nil (25869 38979 5848 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13045 . 13046) (nil fontified nil 13045 . 13046) (nil fontified nil 13044 . 13045) (nil fontified nil 13022 . 13044) (nil fontified nil 13021 . 13022) (nil fontified nil 13017 . 13021) (nil fontified nil 13016 . 13017) (nil fontified nil 13014 . 13016) (nil fontified nil 13007 . 13014) (13007 . 13046) (t 25869 38980 233185 398000)) nil (25882 50211 302300 570000) 0 nil] [nil nil ((nil rear-nonsticky nil 29219 . 29220) (nil fontified nil 29184 . 29220) (29184 . 29220) (t 25869 38497 511522 259000)) ((#("cast(Table.cond, sqlalchemy.Integer)" 0 4 (fontified nil) 4 5 (face (rainbow-delimiters-depth-3-face) fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 17 (fontified nil) 17 25 (fontified nil) 25 26 (face (whitespace-line) fontified nil) 26 27 (face (whitespace-line) fontified nil) 27 28 (face (whitespace-line) fontified nil) 28 29 (face (whitespace-line) fontified nil) 29 30 (face (whitespace-line) fontified nil) 30 31 (face (whitespace-line) fontified nil) 31 32 (face (whitespace-line) fontified nil) 32 33 (face (whitespace-line) fontified nil) 33 34 (face (whitespace-line) fontified nil) 34 35 (face (whitespace-line) fontified nil) 35 36 (face (rainbow-delimiters-depth-3-face whitespace-line) fontified nil rear-nonsticky nil)) . 29184) (undo-tree-id671 . -27) (undo-tree-id672 . -17) (undo-tree-id673 . -36) (undo-tree-id674 . -36) (undo-tree-id675 . -5) (undo-tree-id676 . -36) (undo-tree-id677 . -36) (undo-tree-id678 . -36) (undo-tree-id679 . -36) (undo-tree-id680 . -36) (undo-tree-id681 . -36) (undo-tree-id682 . -36) (undo-tree-id683 . -36) (undo-tree-id684 . -36) (undo-tree-id685 . -36) (undo-tree-id686 . -36) (undo-tree-id687 . -36) (undo-tree-id688 . -36) (undo-tree-id689 . -36) (undo-tree-id690 . -36) (undo-tree-id691 . -36) (undo-tree-id692 . -36) (undo-tree-id693 . -36) (undo-tree-id694 . -36) (undo-tree-id695 . -36) (undo-tree-id696 . -36) (nil rear-nonsticky t 29219 . 29220)) (25869 38978 701408 720000) 0 nil] [nil nil ((nil rear-nonsticky nil 29195 . 29196) (nil fontified nil 29184 . 29196) (29184 . 29196)) ((#("map(int, l) " 0 3 (face font-lock-builtin-face fontified nil) 3 4 (face (rainbow-delimiters-depth-3-face) fontified nil) 4 5 (face font-lock-builtin-face fontified nil) 5 6 (face font-lock-builtin-face fontified nil) 6 7 (face font-lock-builtin-face fontified nil) 7 9 (fontified nil) 9 10 (fontified nil) 10 11 (face (rainbow-delimiters-depth-3-face) fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 29184) (undo-tree-id88 . -4) (undo-tree-id89 . -12) (undo-tree-id90 . -4) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (nil rear-nonsticky t 29195 . 29196)) (25869 38495 904069 984000) 0 nil])
([nil nil ((#("desc" 0 4 (fontified t face (whitespace-line))) . 13017) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4)) nil (25882 50211 302297 263000) 0 nil])
([nil nil ((29220 . 29221)) ((#(" " 0 1 (face (whitespace-line) fontified t)) . 29220) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1)) (25869 38978 398394 704000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -29193) (undo-tree-id73 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -29194) (undo-tree-id74 . -1) (#(" " 0 1 (rear-nonsticky t fontified t)) . -29195) (undo-tree-id75 . -1) 29196) ((29193 . 29196)) (25869 38495 584523 582000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . 13017)) nil (25882 50211 302293 215000) 0 nil])
([nil nil ((#("a_id_list" 0 9 (face (whitespace-line) fontified t)) . 29221) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -9)) ((29221 . 29230)) (25869 38978 114967 635000) 0 nil])
([nil nil ((29204 . 29205)) ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 29204)) (25869 38492 904965 6000) 0 nil])
([nil nil ((#("a" 0 1 (fontified defer face (whitespace-line))) . -13019) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t face (whitespace-line))) . -13020) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("s" 0 1 (fontified defer face (whitespace-line))) . -13021) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("M" 0 1 (fontified defer face (whitespace-line))) . -13022) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("o" 0 1 (fontified defer face (whitespace-line))) . -13023) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("d" 0 1 (fontified defer face (whitespace-line))) . -13024) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("e" 0 1 (fontified defer face (whitespace-line))) . -13025) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("l" 0 1 (fontified nil face (whitespace-line))) . -13026) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("." 0 1 (fontified nil face (whitespace-line))) . -13027) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("i" 0 1 (fontified nil face (whitespace-line font-lock-keyword-face))) . -13028) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("n" 0 1 (fontified t face (whitespace-line font-lock-keyword-face))) . -13029) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("s" 0 1 (fontified defer face (whitespace-line))) . -13030) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("e" 0 1 (fontified defer face (whitespace-line))) . -13031) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("r" 0 1 (fontified defer face (whitespace-line))) . -13032) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("t" 0 1 (fontified defer face (whitespace-line))) . -13033) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("_" 0 1 (fontified defer face (whitespace-line))) . -13034) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("d" 0 1 (fontified defer face (whitespace-line))) . -13035) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("a" 0 1 (fontified nil face (whitespace-line))) . -13036) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t face (whitespace-line))) . -13037) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("e" 0 1 (fontified t face (whitespace-line))) . -13038) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face whitespace-line))) . -13039) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 13040) nil (25882 50211 302286 973000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line) fontified t)) . -29220) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 29221) ((29220 . 29221)) (25869 38977 727715 849000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -29188) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -29189) (undo-tree-id34 . -1) (undo-tree-id36 . -1) (undo-tree-id38 . -1) (undo-tree-id40 . -1) (undo-tree-id42 . -1) (undo-tree-id44 . -1) (undo-tree-id46 . -1) (undo-tree-id48 . -1) (undo-tree-id50 . -1) (undo-tree-id52 . -1) (undo-tree-id54 . -1) (undo-tree-id56 . -1) (undo-tree-id58 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -29190) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (undo-tree-id65 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) 29191) ((29188 . 29191)) (25869 38492 357967 539000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face (whitespace-line))) . -13017) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("t" 0 1 (fontified t face (whitespace-line))) . -13018) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 13019) nil (25882 50211 302238 553000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -29189) (undo-tree-id104 . -1) (undo-tree-id106 . -1) (undo-tree-id108 . -1) (undo-tree-id110 . -1) (undo-tree-id112 . -1) (undo-tree-id114 . -1) (undo-tree-id116 . -1) (undo-tree-id118 . -1) (undo-tree-id120 . -1) (undo-tree-id122 . -1) (undo-tree-id124 . -1) (undo-tree-id126 . -1) (undo-tree-id128 . -1) (undo-tree-id130 . -1) (undo-tree-id132 . -1) (undo-tree-id134 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) (undo-tree-id140 . -1) (undo-tree-id142 . -1) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (undo-tree-id148 . -1) (undo-tree-id150 . -1) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id156 . -1) (undo-tree-id158 . -1) (undo-tree-id160 . -1) (undo-tree-id162 . -1) (undo-tree-id164 . -1) (undo-tree-id166 . -1) (undo-tree-id168 . -1) (undo-tree-id170 . -1) (undo-tree-id172 . -1) (#("a" 0 1 (fontified t)) . -29190) (undo-tree-id173 . -1) (undo-tree-id175 . -1) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id189 . -1) (undo-tree-id191 . -1) (undo-tree-id193 . -1) (undo-tree-id195 . -1) (undo-tree-id197 . -1) (undo-tree-id199 . -1) (undo-tree-id201 . -1) (undo-tree-id203 . -1) (undo-tree-id205 . -1) (undo-tree-id207 . -1) (undo-tree-id209 . -1) (undo-tree-id211 . -1) (undo-tree-id213 . -1) (undo-tree-id215 . -1) (undo-tree-id217 . -1) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) (undo-tree-id225 . -1) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) (undo-tree-id233 . -1) (undo-tree-id235 . -1) (undo-tree-id237 . -1) (#("b" 0 1 (fontified t)) . -29191) (undo-tree-id239 . -1) (undo-tree-id241 . -1) (undo-tree-id243 . -1) (undo-tree-id245 . -1) (undo-tree-id247 . -1) (undo-tree-id249 . -1) (undo-tree-id251 . -1) (undo-tree-id253 . -1) (undo-tree-id255 . -1) (undo-tree-id257 . -1) (undo-tree-id259 . -1) (undo-tree-id261 . -1) (undo-tree-id263 . -1) (undo-tree-id265 . -1) (undo-tree-id267 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (undo-tree-id273 . -1) (undo-tree-id275 . -1) (undo-tree-id277 . -1) (undo-tree-id279 . -1) (undo-tree-id281 . -1) (undo-tree-id283 . -1) (undo-tree-id285 . -1) (undo-tree-id287 . -1) (undo-tree-id289 . -1) (undo-tree-id291 . -1) (undo-tree-id293 . -1) (#("l" 0 1 (fontified t)) . -29192) (undo-tree-id294 . -1) (undo-tree-id296 . -1) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (#("e" 0 1 (fontified t)) . -29193) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -1) (undo-tree-id350 . -1) (undo-tree-id352 . -1) (undo-tree-id354 . -1) (undo-tree-id356 . -1) (undo-tree-id358 . -1) (undo-tree-id360 . -1) (undo-tree-id362 . -1) (undo-tree-id364 . -1) (undo-tree-id366 . -1) (undo-tree-id368 . -1) (undo-tree-id370 . -1) (undo-tree-id372 . -1) (undo-tree-id374 . -1) (undo-tree-id376 . -1) (undo-tree-id378 . -1) (undo-tree-id380 . -1) (#("." 0 1 (fontified t)) . -29194) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) (undo-tree-id405 . -1) (undo-tree-id407 . -1) (#("c" 0 1 (fontified t)) . -29195) (undo-tree-id409 . -1) (undo-tree-id411 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) (undo-tree-id419 . -1) (undo-tree-id421 . -1) (undo-tree-id423 . -1) (undo-tree-id425 . -1) (undo-tree-id427 . -1) (undo-tree-id429 . -1) (#("o" 0 1 (fontified defer)) . -29196) (undo-tree-id430 . -1) (undo-tree-id432 . -1) (undo-tree-id434 . -1) (undo-tree-id436 . -1) (undo-tree-id438 . -1) (#("n" 0 1 (fontified t)) . -29197) (undo-tree-id440 . -1) (undo-tree-id442 . -1) (undo-tree-id444 . -1) (undo-tree-id446 . -1) (#("d" 0 1 (fontified t)) . -29198) (undo-tree-id447 . -1) 29199) ((29189 . 29199)) (25869 38976 991945 917000) 0 nil])
([nil nil ((29188 . 29192)) ((#("long" 0 4 (face font-lock-builtin-face fontified t)) . 29188) (undo-tree-id86 . -4) (undo-tree-id87 . -3) (t 25869 38425 471262 703000)) (25869 38425 465709 536000) 0 nil])
([nil nil ((13017 . 13038)) nil (25882 50211 302232 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29197 . 29198) (nil fontified nil 29189 . 29198) (29189 . 29198)) ((#("a_id_list" 0 8 (fontified nil) 8 9 (fontified nil rear-nonsticky nil)) . 29189) (nil rear-nonsticky t 29197 . 29198)) (25869 38976 619994 933000) 0 nil])
nil
([nil nil ((13038 . 13043)) nil (25882 50211 302231 139000) 0 nil])
([nil nil ((351 . 352) (t 25869 38711 156271 756000)) ((#("
" 0 1 (fontified t)) . 351) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) (25869 38976 290974 716000) 0 nil])
([nil current ((#(" " 0 1 (fontified t face (whitespace-line))) . -13042) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 13043) nil (25882 50211 302225 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 393 . 394) (nil fontified nil 352 . 394) (352 . 394)) ((#("from sqlalchemy.sql.expression import cast" 0 4 (face font-lock-keyword-face fontified nil) 4 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 41 (fontified nil) 41 42 (rear-nonsticky nil fontified nil)) . 352) (undo-tree-id597 . -42) (undo-tree-id598 . -42) (undo-tree-id599 . -42) (undo-tree-id600 . -42) (undo-tree-id601 . -42) (undo-tree-id602 . -42) (undo-tree-id603 . -42) (undo-tree-id604 . -42) (undo-tree-id605 . -42) (undo-tree-id606 . -42) (undo-tree-id607 . -42) (undo-tree-id608 . -42) (undo-tree-id609 . -42) (undo-tree-id610 . -42) (undo-tree-id611 . -42) (undo-tree-id612 . -42) (undo-tree-id613 . -42) (undo-tree-id614 . -42) (undo-tree-id615 . -42) (nil rear-nonsticky t 393 . 394)) (25869 38975 905858 601000) 0 nil])
nil
([nil nil ((#("from sqlalchemy.sql.expression import cast
" 0 4 (face font-lock-keyword-face fontified nil) 4 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil)) . 395) (undo-tree-id462 . -42) (undo-tree-id463 . -43) (353 . 395) (#("from sqlalchemy_utils import IntRangeType
" 0 4 (face font-lock-keyword-face fontified t) 4 22 (fontified t) 22 28 (face font-lock-keyword-face fontified t) 28 42 (fontified t)) . 310) (352 . 395) 394) ((#("from sqlalchemy.sql.expression import cast
" 0 4 (face font-lock-keyword-face fontified nil) 4 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil)) . 352) (undo-tree-id581 . -42) (undo-tree-id582 . -43) (undo-tree-id583 . -42) (undo-tree-id584 . -42) (undo-tree-id585 . -42) (undo-tree-id586 . -42) (undo-tree-id587 . -42) (undo-tree-id588 . -42) (undo-tree-id589 . -42) (undo-tree-id590 . -42) (undo-tree-id591 . -42) (undo-tree-id592 . -42) (undo-tree-id593 . -42) (undo-tree-id594 . -42) (undo-tree-id595 . -42) (undo-tree-id596 . -42) (310 . 352) (#("from sqlalchemy_utils import IntRangeType
" 0 4 (face font-lock-keyword-face fontified t) 4 22 (fontified t) 22 28 (face font-lock-keyword-face fontified t) 28 42 (fontified t)) . 353) (395 . 438)) (25869 38975 704968 447000) 0 nil])
([nil nil ((#("from sqlalchemy.sql.expression import cast
" 0 4 (face font-lock-keyword-face fontified nil) 4 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil)) . 353) (undo-tree-id454 . -43) (undo-tree-id455 . -42) (undo-tree-id456 . -43) (undo-tree-id458 . -42) (undo-tree-id460 . -42) (267 . 353) (#("from sqlalchemy import or_, UniqueConstraint, func, desc, asc, CheckConstraint, Index
" 0 4 (face font-lock-keyword-face fontified t) 4 16 (fontified t) 16 22 (face font-lock-keyword-face fontified t) 22 86 (fontified t)) . 224) (310 . 353) 352) ((#("from sqlalchemy.sql.expression import cast
" 0 4 (face font-lock-keyword-face fontified nil) 4 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil)) . 310) (undo-tree-id499 . -43) (undo-tree-id500 . -43) (undo-tree-id501 . -43) (undo-tree-id502 . -43) (undo-tree-id503 . -43) (undo-tree-id504 . -43) (undo-tree-id505 . -43) (undo-tree-id506 . -43) (undo-tree-id507 . -43) (undo-tree-id508 . -43) (undo-tree-id509 . -43) (undo-tree-id510 . -43) (undo-tree-id511 . -43) (undo-tree-id512 . -43) (undo-tree-id513 . -43) (undo-tree-id514 . -43) (undo-tree-id515 . -43) (undo-tree-id516 . -43) (undo-tree-id517 . -43) (undo-tree-id518 . -43) (undo-tree-id519 . -43) (undo-tree-id520 . -43) (undo-tree-id521 . -43) (undo-tree-id522 . -43) (undo-tree-id523 . -43) (undo-tree-id524 . -43) (undo-tree-id525 . -43) (undo-tree-id526 . -43) (undo-tree-id527 . -43) (undo-tree-id528 . -43) (undo-tree-id529 . -43) (undo-tree-id530 . -43) (undo-tree-id531 . -43) (undo-tree-id532 . -43) (undo-tree-id533 . -43) (undo-tree-id534 . -43) (undo-tree-id535 . -43) (undo-tree-id536 . -43) (undo-tree-id537 . -43) (undo-tree-id538 . -43) (undo-tree-id539 . -43) (undo-tree-id540 . -43) (224 . 310) (#("from sqlalchemy import or_, UniqueConstraint, func, desc, asc, CheckConstraint, Index
" 0 4 (face font-lock-keyword-face fontified t) 4 16 (fontified t) 16 22 (face font-lock-keyword-face fontified t) 22 85 (fontified t) 85 86 (fontified t)) . 267) (undo-tree-id541 . -85) (undo-tree-id542 . -86) (undo-tree-id543 . -85) (undo-tree-id544 . -85) (undo-tree-id545 . -85) (undo-tree-id546 . -85) (undo-tree-id547 . -85) (undo-tree-id548 . -85) (undo-tree-id549 . -85) (undo-tree-id550 . -85) (undo-tree-id551 . -85) (undo-tree-id552 . -85) (undo-tree-id553 . -85) (undo-tree-id554 . -85) (undo-tree-id555 . -85) (undo-tree-id556 . -85) (undo-tree-id557 . -85) (undo-tree-id558 . -85) (undo-tree-id559 . -85) (undo-tree-id560 . -85) (undo-tree-id561 . -85) (undo-tree-id562 . -85) (undo-tree-id563 . -85) (undo-tree-id564 . -85) (undo-tree-id565 . -85) (undo-tree-id566 . -85) (undo-tree-id567 . -85) (undo-tree-id568 . -85) (undo-tree-id569 . -85) (undo-tree-id570 . -85) (undo-tree-id571 . -85) (undo-tree-id572 . -85) (undo-tree-id573 . -85) (undo-tree-id574 . -85) (undo-tree-id575 . -85) (undo-tree-id576 . -85) (undo-tree-id577 . -85) (undo-tree-id578 . -85) (undo-tree-id579 . -85) (undo-tree-id580 . -85) (353 . 396)) (25869 38975 480354 371000) 0 nil])
([nil nil ((352 . 362) (t 25869 38750 720407 876000)) ((#(", Integer " 0 9 (fontified t) 9 10 (fontified t)) . 352) (undo-tree-id468 . -10) (undo-tree-id469 . -10) (undo-tree-id470 . -10) (undo-tree-id471 . -10) (undo-tree-id472 . -10) (undo-tree-id473 . -10) (undo-tree-id474 . -9) (undo-tree-id475 . -10) (undo-tree-id476 . -10) (undo-tree-id477 . -10) (undo-tree-id478 . -10) (undo-tree-id479 . -10) (undo-tree-id480 . -10) (undo-tree-id481 . -10) (undo-tree-id482 . -10) (undo-tree-id483 . -10) (undo-tree-id484 . -10) (undo-tree-id485 . -10) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) (undo-tree-id490 . -10) (undo-tree-id491 . -10) (undo-tree-id492 . -10) (undo-tree-id493 . -10) (undo-tree-id494 . -10) (undo-tree-id495 . -10) (undo-tree-id496 . -10) (undo-tree-id497 . -10) (undo-tree-id498 . -10)) (25869 38974 733341 276000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -361) (undo-tree-id467 . -1) 362) ((361 . 362)) (25869 38974 430494 591000) 0 nil])
([nil nil ((#("sqlalchemy" 0 8 (fontified t) 8 9 (fontified t) 9 10 (face (whitespace-line) fontified t)) . 29252) (undo-tree-id465 . -10) (undo-tree-id466 . -10)) ((29252 . 29262)) (25869 38974 106736 33000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 29252)) ((29252 . 29253) (t 25869 38797 868569 189000)) (25869 38797 858188 403000) 0 nil])
nil
