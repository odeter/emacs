(undo-tree-save-format-version . 1)
"eab37aa33c7725c02f43eab85e3c7e0212873156"
[nil nil nil nil (25698 26089 926296 445000) 0 nil]
([nil nil (("New flash story - Dance Hominidae, Dance" . 26) (undo-tree-id86 . -40) (undo-tree-id87 . -40) (undo-tree-id88 . -40) (t 25695 31819 361155 0)) nil (25698 26089 926294 497000) 0 nil])
([nil nil ((26 . 40)) nil (25698 26089 926290 429000) 0 nil])
([nil nil (("d" . -39) (undo-tree-id85 . -1) 40) nil (25698 26089 926289 283000) 0 nil])
([nil nil ((39 . 53)) nil (25698 26089 926287 18000) 0 nil])
([nil nil (("S" . -51) (undo-tree-id81 . -1) (undo-tree-id82 . -1) ("h" . -52) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 53) nil (25698 26089 926285 401000) 0 nil])
([nil nil ((51 . 57)) nil (25698 26089 926279 818000) 0 nil])
([nil nil (("h" . -51) (undo-tree-id75 . -1) ("o" . -52) (undo-tree-id76 . -1) ("s" . -53) (undo-tree-id77 . -1) ("r" . -54) (undo-tree-id78 . -1) ("t" . -55) (undo-tree-id79 . -1) (" " . -56) (undo-tree-id80 . -1) 57) nil (25698 26089 926277 601000) 0 nil])
([nil nil ((51 . 63)) nil (25698 26089 926268 995000) 0 nil])
([nil nil ((" " . -62) (undo-tree-id74 . -1) 63) nil (25698 26089 926267 800000) 0 nil])
([nil nil (("short flash story is added" . 77) (undo-tree-id69 . -26) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -26) (undo-tree-id73 . -26)) nil (25698 26089 926265 53000) 0 nil])
([nil nil ((77 . 96)) nil (25698 26089 926259 116000) 0 nil])
([nil nil (("A" . -75) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (" " . -76) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) ("n" . -77) (undo-tree-id36 . -1) (undo-tree-id37 . -1) ("e" . -78) (undo-tree-id38 . -1) (undo-tree-id39 . -1) ("w" . -79) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (" " . -80) (undo-tree-id42 . -1) (undo-tree-id43 . -1) ("s" . -81) (undo-tree-id44 . -1) (undo-tree-id45 . -1) ("h" . -82) (undo-tree-id46 . -1) (undo-tree-id47 . -1) ("o" . -83) (undo-tree-id48 . -1) (undo-tree-id49 . -1) ("r" . -84) (undo-tree-id50 . -1) (undo-tree-id51 . -1) ("t" . -85) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (" " . -86) (undo-tree-id54 . -1) (undo-tree-id55 . -1) ("s" . -87) (undo-tree-id56 . -1) (undo-tree-id57 . -1) ("t" . -88) (undo-tree-id58 . -1) (undo-tree-id59 . -1) ("o" . -89) (undo-tree-id60 . -1) (undo-tree-id61 . -1) ("r" . -90) (undo-tree-id62 . -1) (undo-tree-id63 . -1) ("y" . -91) (undo-tree-id64 . -1) (" " . -92) (undo-tree-id65 . -1) ("i" . -93) (undo-tree-id66 . -1) ("s" . -94) (undo-tree-id67 . -1) (" " . -95) (undo-tree-id68 . -1) 96) nil (25698 26089 926252 474000) 0 nil])
([nil nil ((75 . 86)) nil (25698 26089 926198 60000) 0 nil])
([nil nil ((86 . 100)) nil (25698 26089 926197 85000) 0 nil])
([nil nil (("b" . -98) (undo-tree-id20 . -1) (undo-tree-id21 . -1) ("e" . -99) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 100) nil (25698 26089 926195 253000) 0 nil])
([nil nil ((98 . 110)) nil (25698 26089 926189 824000) 0 nil])
([nil nil ((" " . -109) (undo-tree-id19 . -1) 110) nil (25698 26089 926188 613000) 0 nil])
([nil nil ((#("The short story 'Dance hominidae, Dance' has been added to the site, Wattpad and inkitt. Read the dreadful story of an unprepared and nervous student fighting for his survival during an examination." 150 198 (face (whitespace-line))) . 142) (undo-tree-id16 . -198) (undo-tree-id17 . -198) (undo-tree-id18 . -198)) nil (25698 26089 926185 900000) 0 nil])
([nil nil ((142 . 150)) nil (25698 26089 926181 706000) 0 nil])
([nil nil ((150 . 164)) nil (25698 26089 926180 566000) 0 nil])
([nil nil ((163 . 173)) nil (25698 26089 926179 650000) 0 nil])
([nil nil (("v" . -167) (undo-tree-id10 . -1) ("o" . -168) (undo-tree-id11 . -1) ("i" . -169) (undo-tree-id12 . -1) ("c" . -170) (undo-tree-id13 . -1) ("e" . -171) (undo-tree-id14 . -1) (" " . -172) (undo-tree-id15 . -1) 173) nil (25698 26089 926177 345000) 0 nil])
([nil nil ((167 . 177)) nil (25698 26089 926168 704000) 0 nil])
([nil nil (("d" . -176) (undo-tree-id9 . -1) 177) nil (25698 26089 926167 413000) 0 nil])
([nil nil ((176 . 182)) nil (25698 26089 926165 132000) 0 nil])
([nil nil ((" " . -181) (undo-tree-id8 . -1) 182) nil (25698 26089 926163 610000) 0 nil])
([nil nil ((182 . 189)) nil (25698 26089 926161 265000) 0 nil])
([nil nil (("e" . -186) (undo-tree-id5 . -1) (" " . -187) (undo-tree-id6 . -1) ("n" . -188) (undo-tree-id7 . -1) 189) nil (25698 26089 926159 759000) 0 nil])
([nil nil ((186 . 194)) nil (25698 26089 926154 564000) 0 nil])
([nil nil ((194 . 209)) nil (25698 26089 926153 735000) 0 nil])
([nil nil ((" " . -208) (undo-tree-id4 . -1) 209) nil (25698 26089 926152 650000) 0 nil])
([nil nil ((208 . 221)) nil (25698 26089 926150 411000) 0 nil])
([nil nil ((221 . 238)) nil (25698 26089 926149 365000) 0 nil])
([nil nil ((" " . -237) (undo-tree-id3 . -1) 238) nil (25698 26089 926148 142000) 0 nil])
([nil nil ((237 . 239)) nil (25698 26089 926145 270000) 0 nil])
([nil nil ((239 . 240) (" " . 238) (undo-tree-id2 . -1) (239 . 240)) nil (25698 26089 926144 123000) 0 nil])
([nil nil ((240 . 248)) nil (25698 26089 926141 369000) 0 nil])
([nil nil ((" " . -247) (undo-tree-id1 . -1) 248) nil (25698 26089 926140 64000) 0 nil])
([nil nil ((247 . 249)) nil (25698 26089 926136 968000) 0 nil])
([nil nil ((" " . -248) (undo-tree-id0 . -1) 249) nil (25698 26089 926135 145000) 0 nil])
([nil nil ((248 . 249)) nil (25698 26089 926120 772000) 0 nil])
([nil nil ((nil rear-nonsticky nil 663 . 664) (nil face (whitespace-line) 399 . 664) (249 . 664)) nil (25698 26089 926118 768000) 0 nil])
([nil nil ((248 . 249)) nil (25698 26089 926111 501000) 0 nil])
([nil nil ((249 . 253) (t 25698 26089 937340 238000)) nil (25698 26116 14465 763000) 0 nil])
([nil nil (("r" . -251) (undo-tree-id104 . -1) (">" . -252) (undo-tree-id105 . -1) 253) nil (25698 26116 14463 485000) 0 nil])
([nil nil (("\\" . -249) (undo-tree-id102 . -1) ("h" . -250) (undo-tree-id103 . -1) 251) nil (25698 26116 14458 840000) 0 nil])
([nil nil ((252 . 253) (249 . 253)) nil (25698 26116 14455 15000) 0 nil])
([nil nil ((240 . 241)) nil (25698 26116 14453 464000) 0 nil])
([nil nil (("h" . -240) (undo-tree-id101 . -1) 241) nil (25698 26116 14452 47000) 0 nil])
([nil nil ((240 . 249)) nil (25698 26116 14449 512000) 0 nil])
([nil nil ((244 . 252)) nil (25698 26116 14448 569000) 0 nil])
([nil nil (("summary:" . 257) (undo-tree-id93 . -2) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8)) nil (25698 26116 14446 801000) 0 nil])
([nil nil ((261 . 265)) nil (25698 26116 14403 937000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-name "hr" tag-type void font-lock-face web-mode-html-attr-name-face)) . -262) (undo-tree-id90 . -1) (#("x" 0 1 (tag-attr t tag-name "hr" tag-type void font-lock-face web-mode-html-attr-name-face)) . -263) (undo-tree-id91 . -1) (#("l" 0 1 (tag-attr t tag-name "hr" tag-type void font-lock-face web-mode-html-attr-name-face)) . -264) (undo-tree-id92 . -1) 265) nil (25698 26116 14401 749000) 0 nil])
([nil nil ((269 . 273) (262 . 271)) nil (25698 26116 14395 212000) 0 nil])
([nil nil ((#("k" 0 1 (tag-attr t tag-name "hr" tag-type void font-lock-face web-mode-html-attr-value-face)) . -272) (undo-tree-id89 . -1) 273) nil (25698 26116 14392 625000) 0 nil])
([nil nil ((272 . 274)) nil (25698 26116 14381 843000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "hr" tag-type void)) . 275)) nil (25698 26116 14373 883000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h3")) . -242) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 243 (t 25698 26116 17330 798000)) nil (25698 26150 835339 814000) 0 nil])
([nil nil ((242 . 243)) nil (25698 26150 835333 813000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h3")) . -255) (undo-tree-id0 . -1) 256) nil (25698 26150 835331 895000) 0 nil])
([nil nil ((255 . 256)) nil (25698 26150 835290 200000) 0 nil])
([nil nil ((242 . 243) (239 . 243)) nil (25698 26150 835282 985000) 0 nil])
([nil nil ((#("<hr/>
<h4>summary:</h4>
<hr class=\"solid\"/>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "hr") 1 3 (font-lock-face web-mode-html-tag-face tag-type void tag-name "hr") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr") 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "hr") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h4") 7 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h4") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h4") 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h4") 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h4") 20 22 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h4") 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h4") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-beg 25 tag-type void tag-name "hr") 25 27 (font-lock-face web-mode-html-tag-face tag-type void tag-name "hr") 27 28 (tag-type void tag-name "hr") 28 29 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "hr" tag-attr t tag-attr-beg 0) 29 33 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "hr" tag-attr t) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "hr" tag-attr t) 34 40 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "hr" tag-attr t) 40 41 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "hr" tag-attr-end 5 tag-attr t) 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr") 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "hr")) . 239) (undo-tree-id4 . -6) (undo-tree-id5 . -43) (undo-tree-id6 . -8) (undo-tree-id7 . -43) (undo-tree-id8 . -8) (undo-tree-id9 . -43) (t 25698 26150 841317 933000)) nil (25698 26168 660594 5000) 0 nil])
([nil nil ((242 . 243) (239 . 243)) nil (25698 26168 660513 431000) 0 nil])
([nil nil ((162 . 164) (t 25698 26168 665311 235000)) nil (25836 52531 520713 448000) 0 nil])
([nil nil (("\\" . -162) (undo-tree-id379 . -1) ("i" . -163) (undo-tree-id380 . -1) 164) nil (25836 52531 520712 34000) 0 nil])
([nil nil ((162 . 169)) nil (25836 52531 520708 860000) 0 nil])
([nil nil ((">" . 165) ("i" . 165) ("/" . 165) (#("<" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face)) . 165)) nil (25836 52531 520707 514000) 0 nil])
([nil nil ((185 . 186)) nil (25836 52531 520705 948000) 0 nil])
([nil nil ((186 . 189)) nil (25836 52531 520705 89000) 0 nil])
([nil nil ((251 . 253)) nil (25836 52531 520704 165000) 0 nil])
([nil nil ((252 . 253)) nil (25836 52531 520703 169000) 0 nil])
([nil nil ((252 . 263)) nil (25836 52531 520702 239000) 0 nil])
([nil nil ((263 . 269)) nil (25836 52531 520701 354000) 0 nil])
([nil nil ((" " . -268) (undo-tree-id378 . -1) 269) nil (25836 52531 520700 244000) 0 nil])
([nil nil ((268 . 271)) nil (25836 52531 520698 241000) 0 nil])
([nil nil ((" " . -258) (undo-tree-id355 . -1) (undo-tree-id356 . -1) ("t" . -259) (undo-tree-id357 . -1) (undo-tree-id358 . -1) ("h" . -260) (undo-tree-id359 . -1) (undo-tree-id360 . -1) ("e" . -261) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (" " . -262) (undo-tree-id363 . -1) (undo-tree-id364 . -1) ("s" . -263) (undo-tree-id365 . -1) (undo-tree-id366 . -1) ("p" . -264) (undo-tree-id367 . -1) (undo-tree-id368 . -1) ("e" . -265) (undo-tree-id369 . -1) (undo-tree-id370 . -1) ("a" . -266) (undo-tree-id371 . -1) (undo-tree-id372 . -1) ("k" . -267) (undo-tree-id373 . -1) (undo-tree-id374 . -1) ("e" . -268) (undo-tree-id375 . -1) ("r" . -269) (undo-tree-id376 . -1) (" " . -270) (undo-tree-id377 . -1) 271) nil (25836 52531 520694 698000) 0 nil])
([nil nil ((258 . 267)) nil (25836 52531 520668 275000) 0 nil])
([nil nil (("e" . -264) (undo-tree-id352 . -1) ("s" . -265) (undo-tree-id353 . -1) (" " . -266) (undo-tree-id354 . -1) 267) nil (25836 52531 520666 970000) 0 nil])
([nil nil ((264 . 266)) nil (25836 52531 520662 593000) 0 nil])
([nil nil ((" " . -265) (undo-tree-id351 . -1) 266) nil (25836 52531 520661 535000) 0 nil])
([nil nil ((265 . 267)) nil (25836 52531 520659 101000) 0 nil])
([nil nil (("m" . -265) (undo-tree-id349 . -1) (" " . -266) (undo-tree-id350 . -1) 267) nil (25836 52531 520657 854000) 0 nil])
([nil nil ((265 . 267)) nil (25836 52531 520654 609000) 0 nil])
([nil nil ((267 . 288)) nil (25836 52531 520653 712000) 0 nil])
([nil nil ((288 . 294)) nil (25836 52531 520652 804000) 0 nil])
([nil nil (("d" . -273) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (" " . -274) (undo-tree-id326 . -1) (undo-tree-id327 . -1) ("m" . -275) (undo-tree-id328 . -1) (undo-tree-id329 . -1) ("a" . -276) (undo-tree-id330 . -1) (undo-tree-id331 . -1) ("g" . -277) (undo-tree-id332 . -1) ("e" . -278) (undo-tree-id333 . -1) (" " . -279) (undo-tree-id334 . -1) ("w" . -280) (undo-tree-id335 . -1) ("h" . -281) (undo-tree-id336 . -1) ("o" . -282) (undo-tree-id337 . -1) (" " . -283) (undo-tree-id338 . -1) ("c" . -284) (undo-tree-id339 . -1) ("a" . -285) (undo-tree-id340 . -1) ("n" . -286) (undo-tree-id341 . -1) (" " . -287) (undo-tree-id342 . -1) ("a" . -288) (undo-tree-id343 . -1) ("l" . -289) (undo-tree-id344 . -1) ("t" . -290) (undo-tree-id345 . -1) ("e" . -291) (undo-tree-id346 . -1) ("r" . -292) (undo-tree-id347 . -1) (" " . -293) (undo-tree-id348 . -1) 294) nil (25836 52531 520648 319000) 0 nil])
([nil nil (("g" . -269) (undo-tree-id316 . -1) (undo-tree-id317 . -1) ("r" . -270) (undo-tree-id318 . -1) (undo-tree-id319 . -1) ("a" . -271) (undo-tree-id320 . -1) (undo-tree-id321 . -1) ("n" . -272) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 273) nil (25836 52531 520605 891000) 0 nil])
([nil nil ((269 . 276)) nil (25836 52531 520596 706000) 0 nil])
([nil nil (("a" . -271) (undo-tree-id311 . -1) ("k" . -272) (undo-tree-id312 . -1) ("e" . -273) (undo-tree-id313 . -1) ("r" . -274) (undo-tree-id314 . -1) (" " . -275) (undo-tree-id315 . -1) 276) nil (25836 52531 520595 57000) 0 nil])
([nil nil ((271 . 277)) nil (25836 52531 520588 557000) 0 nil])
([nil nil ((" " . -276) (undo-tree-id310 . -1) 277) nil (25836 52531 520587 497000) 0 nil])
([nil nil ((276 . 282)) nil (25836 52531 520585 458000) 0 nil])
([nil nil (("," . -265) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (" " . -266) (undo-tree-id285 . -1) (undo-tree-id286 . -1) ("a" . -267) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (" " . -268) (undo-tree-id289 . -1) (undo-tree-id290 . -1) ("s" . -269) (undo-tree-id291 . -1) (undo-tree-id292 . -1) ("p" . -270) (undo-tree-id293 . -1) (undo-tree-id294 . -1) ("e" . -271) (undo-tree-id295 . -1) (undo-tree-id296 . -1) ("a" . -272) (undo-tree-id297 . -1) (undo-tree-id298 . -1) ("k" . -273) (undo-tree-id299 . -1) (undo-tree-id300 . -1) ("e" . -274) (undo-tree-id301 . -1) (undo-tree-id302 . -1) ("r" . -275) (undo-tree-id303 . -1) ("," . -276) (undo-tree-id304 . -1) (" " . -277) (undo-tree-id305 . -1) ("w" . -278) (undo-tree-id306 . -1) ("h" . -279) (undo-tree-id307 . -1) ("o" . -280) (undo-tree-id308 . -1) (" " . -281) (undo-tree-id309 . -1) 282) nil (25836 52531 520580 943000) 0 nil])
([nil nil ((265 . 284)) nil (25836 52531 520547 825000) 0 nil])
([nil nil (("g" . -281) (undo-tree-id280 . -1) ("n" . -282) (undo-tree-id281 . -1) (" " . -283) (undo-tree-id282 . -1) 284) nil (25836 52531 520546 224000) 0 nil])
([nil nil ((281 . 284)) nil (25836 52531 520541 633000) 0 nil])
([nil nil ((#("
Follow Marius an old and aching 

" 32 33 (face whitespace-trailing)) . 251) (undo-tree-id275 . -35) (undo-tree-id276 . -14) (undo-tree-id277 . -1) (undo-tree-id278 . -35) (undo-tree-id279 . -35)) nil (25836 52531 520540 359000) 0 nil])
([nil nil ((251 . 253)) nil (25836 52531 520532 682000) 0 nil])
([nil nil ((252 . 263)) nil (25836 52531 520531 799000) 0 nil])
([nil nil ((263 . 264)) nil (25836 52531 520530 906000) 0 nil])
([nil nil (("c" . -256) (undo-tree-id264 . -1) (undo-tree-id265 . -1) ("i" . -257) (undo-tree-id266 . -1) (undo-tree-id267 . -1) ("t" . -258) (undo-tree-id268 . -1) (undo-tree-id269 . -1) ("y" . -259) (undo-tree-id270 . -1) (" " . -260) (undo-tree-id271 . -1) ("o" . -261) (undo-tree-id272 . -1) ("f" . -262) (undo-tree-id273 . -1) (" " . -263) (undo-tree-id274 . -1) 264) nil (25836 52531 520528 631000) 0 nil])
([nil nil ((256 . 272)) nil (25836 52531 520515 45000) 0 nil])
([nil nil (("e" . -270) (undo-tree-id262 . -1) ("r" . -271) (undo-tree-id263 . -1) 272) nil (25836 52531 520513 815000) 0 nil])
([nil nil ((270 . 277)) nil (25836 52531 520510 647000) 0 nil])
([nil nil (("l" . -274) (undo-tree-id259 . -1) ("a" . -275) (undo-tree-id260 . -1) ("l" . -276) (undo-tree-id261 . -1) 277) nil (25836 52531 520509 255000) 0 nil])
([nil nil ((274 . 279)) nil (25836 52531 520504 834000) 0 nil])
([nil nil ((279 . 289)) nil (25836 52531 520503 891000) 0 nil])
([nil nil (("m" . -282) (undo-tree-id250 . -1) (undo-tree-id251 . -1) ("a" . -283) (undo-tree-id252 . -1) (undo-tree-id253 . -1) ("r" . -284) (undo-tree-id254 . -1) ("i" . -285) (undo-tree-id255 . -1) ("u" . -286) (undo-tree-id256 . -1) ("s" . -287) (undo-tree-id257 . -1) (" " . -288) (undo-tree-id258 . -1) 289) nil (25836 52531 520501 699000) 0 nil])
([nil nil ((282 . 298)) nil (25836 52531 520490 624000) 0 nil])
([nil nil (("c" . -297) (undo-tree-id249 . -1) 298) nil (25836 52531 520489 654000) 0 nil])
([nil nil ((297 . 305)) nil (25836 52531 520487 659000) 0 nil])
([nil nil (("c" . -304) (undo-tree-id248 . -1) 305) nil (25836 52531 520486 677000) 0 nil])
([nil nil ((304 . 309)) nil (25836 52531 520484 638000) 0 nil])
([nil nil (("r" . -308) (undo-tree-id247 . -1) 309) nil (25836 52531 520483 611000) 0 nil])
([nil nil ((308 . 311)) nil (25836 52531 520481 453000) 0 nil])
([nil nil ((311 . 316)) nil (25836 52531 520480 644000) 0 nil])
([nil nil ((316 . 336)) nil (25836 52531 520479 757000) 0 nil])
([nil nil ((336 . 348)) nil (25836 52531 520478 886000) 0 nil])
([nil nil ((348 . 368)) nil (25836 52531 520477 972000) 0 nil])
([nil nil (("m" . -367) (undo-tree-id246 . -1) 368) nil (25836 52531 520476 786000) 0 nil])
([nil nil ((367 . 383)) nil (25836 52531 520473 897000) 0 nil])
([nil nil (("o" . -372) (undo-tree-id235 . -1) ("u" . -373) (undo-tree-id236 . -1) ("t" . -374) (undo-tree-id237 . -1) (" " . -375) (undo-tree-id238 . -1) ("o" . -376) (undo-tree-id239 . -1) ("n" . -377) (undo-tree-id240 . -1) (" " . -378) (undo-tree-id241 . -1) ("t" . -379) (undo-tree-id242 . -1) ("h" . -380) (undo-tree-id243 . -1) ("e" . -381) (undo-tree-id244 . -1) (" " . -382) (undo-tree-id245 . -1) 383) nil (25836 52531 520471 257000) 0 nil])
([nil nil ((372 . 385)) nil (25836 52531 520457 641000) 0 nil])
([nil nil (("t" . -379) (undo-tree-id229 . -1) ("h" . -380) (undo-tree-id230 . -1) ("e" . -381) (undo-tree-id231 . -1) ("r" . -382) (undo-tree-id232 . -1) ("e" . -383) (undo-tree-id233 . -1) (" " . -384) (undo-tree-id234 . -1) 385) nil (25836 52531 520455 785000) 0 nil])
([nil nil ((379 . 388)) nil (25836 52531 520447 817000) 0 nil])
([nil nil ((371 . 372)) nil (25836 52531 520447 7000) 0 nil])
([nil nil ((388 . 389)) nil (25836 52531 520446 70000) 0 nil])
([nil nil ((" " . -347) (undo-tree-id224 . -1) ("c" . -348) (undo-tree-id225 . -1) ("o" . -349) (undo-tree-id226 . -1) ("l" . -350) (undo-tree-id227 . -1) ("d" . -351) (undo-tree-id228 . -1) 352) nil (25836 52531 520444 378000) 0 nil])
([nil nil ((384 . 397)) nil (25836 52531 520436 537000) 0 nil])
([nil nil ((397 . 415)) nil (25836 52531 520435 340000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -414) (undo-tree-id223 . -1) 415) nil (25836 52531 520434 222000) 0 nil])
([nil nil ((414 . 416)) nil (25836 52531 520432 153000) 0 nil])
([nil nil ((416 . 437)) nil (25836 52531 520431 283000) 0 nil])
([nil nil ((437 . 440)) nil (25836 52531 520430 464000) 0 nil])
([nil nil ((#("r" 0 1 (face (whitespace-line))) . -438) (undo-tree-id221 . -1) (#("u" 0 1 (face (whitespace-line))) . -439) (undo-tree-id222 . -1) 440) nil (25836 52531 520429 303000) 0 nil])
([nil nil ((438 . 444)) nil (25836 52531 520426 123000) 0 nil])
([nil nil ((444 . 457)) nil (25836 52531 520425 309000) 0 nil])
([nil nil ((#("r" 0 1 (face (whitespace-line))) . -452) (undo-tree-id216 . -1) (#("o" 0 1 (face (whitespace-line))) . -453) (undo-tree-id217 . -1) (#("e" 0 1 (face (whitespace-line))) . -454) (undo-tree-id218 . -1) (#("r" 0 1 (face (whitespace-line))) . -455) (undo-tree-id219 . -1) (#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -456) (undo-tree-id220 . -1) 457) nil (25836 52531 520423 607000) 0 nil])
([nil nil ((452 . 457)) nil (25836 52531 520410 466000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line))) . -453) (undo-tree-id212 . -1) (#("r" 0 1 (face (whitespace-line))) . -454) (undo-tree-id213 . -1) (#("e" 0 1 (face (whitespace-line))) . -455) (undo-tree-id214 . -1) (#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -456) (undo-tree-id215 . -1) 457) nil (25836 52531 520408 849000) 0 nil])
([nil nil ((453 . 457)) nil (25836 52531 520403 482000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -456) (undo-tree-id211 . -1) 457) nil (25836 52531 520402 406000) 0 nil])
([nil nil ((#("T" 0 1 (face (whitespace-line))) . -416) (undo-tree-id203 . -1) (#("h" 0 1 (face (whitespace-line))) . -417) (undo-tree-id204 . -1) (#("o" 0 1 (face (whitespace-line))) . -418) (undo-tree-id205 . -1) (#("u" 0 1 (face (whitespace-line))) . -419) (undo-tree-id206 . -1) (#("g" 0 1 (face (whitespace-line))) . -420) (undo-tree-id207 . -1) (#("h" 0 1 (face (whitespace-line))) . -421) (undo-tree-id208 . -1) (#(" " 0 1 (face (whitespace-line))) . -422) (undo-tree-id209 . -1) (#("b" 0 1 (face (whitespace-line))) . -423) (undo-tree-id210 . -1) 424) nil (25836 52531 520399 57000) 0 nil])
([nil nil ((416 . 417)) nil (25836 52531 520388 235000) 0 nil])
([nil nil ((449 . 470)) nil (25836 52531 520387 378000) 0 nil])
([nil nil ((470 . 474)) nil (25836 52531 520386 477000) 0 nil])
([nil nil ((474 . 495)) nil (25836 52531 520385 549000) 0 nil])
([nil nil ((495 . 508)) nil (25836 52531 520384 688000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line))) . -503) (undo-tree-id198 . -1) (#("r" 0 1 (face (whitespace-line))) . -504) (undo-tree-id199 . -1) (#("d" 0 1 (face (whitespace-line))) . -505) (undo-tree-id200 . -1) (#("e" 0 1 (face (whitespace-line))) . -506) (undo-tree-id201 . -1) (#("r" 0 1 (face (whitespace-line))) . -507) (undo-tree-id202 . -1) 508) nil (25836 52531 520383 39000) 0 nil])
([nil nil ((503 . 519)) nil (25836 52531 520376 179000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -518) (undo-tree-id197 . -1) 519) nil (25836 52531 520375 154000) 0 nil])
([nil nil ((518 . 537)) nil (25836 52531 520372 843000) 0 nil])
([nil nil ((#("i" 0 1 (face (whitespace-line))) . -532) (undo-tree-id192 . -1) (#("t" 0 1 (face (whitespace-line))) . -533) (undo-tree-id193 . -1) (#("'" 0 1 (face (whitespace-line))) . -534) (undo-tree-id194 . -1) (#("s" 0 1 (face (whitespace-line))) . -535) (undo-tree-id195 . -1) (#(" " 0 1 (face (whitespace-line whitespace-trailing))) . -536) (undo-tree-id196 . -1) 537) nil (25836 52531 520371 126000) 0 nil])
([nil nil ((532 . 553)) nil (25836 52531 520364 269000) 0 nil])
([nil nil ((553 . 574)) nil (25836 52531 520363 482000) 0 nil])
([nil nil ((574 . 576)) nil (25836 52531 520362 701000) 0 nil])
([nil nil ((799 . 800) (#(" " 0 1 (face (whitespace-line))) . 798) (undo-tree-id191 . -1) (799 . 800)) nil (25836 52531 520361 641000) 0 nil])
([nil nil ((798 . 799)) nil (25836 52531 520359 378000) 0 nil])
([nil nil ((nil rear-nonsticky nil 961 . 962) (nil face (whitespace-line) 955 . 962) (nil face (whitespace-line) 949 . 955) (nil face (whitespace-line) 946 . 949) (nil face (whitespace-line) 943 . 946) (nil face (whitespace-line) 935 . 943) (nil face (whitespace-line) 930 . 935) (nil face (whitespace-line) 926 . 930) (nil face (whitespace-line) 921 . 926) (nil face (whitespace-line) 914 . 921) (nil face (whitespace-line) 908 . 914) (nil face (whitespace-line) 902 . 908) (nil face (whitespace-line) 899 . 902) (nil face (whitespace-line) 894 . 899) (nil face (whitespace-line) 890 . 894) (nil face (whitespace-line) 883 . 890) (nil face (whitespace-line) 880 . 883) (nil face (whitespace-line) 875 . 880) (nil face (whitespace-line) 871 . 875) (nil face (whitespace-line) 866 . 871) (nil face (whitespace-line) 863 . 866) (nil face (whitespace-line) 858 . 863) (nil face (whitespace-line) 857 . 858) (nil face (whitespace-line) 850 . 857) (nil face (whitespace-line) 843 . 850) (nil face (whitespace-line) 839 . 843) (nil face (whitespace-line) 835 . 839) (nil face (whitespace-line) 828 . 835) (nil face (whitespace-line) 825 . 828) (nil face (whitespace-line) 819 . 825) (nil face (whitespace-line) 814 . 819) (nil face (whitespace-line) 809 . 814) (nil face (whitespace-line) 802 . 809) (nil face (whitespace-line) 799 . 802) (799 . 962)) nil (25836 52531 520356 672000) 0 nil])
([nil nil ((820 . 841)) nil (25836 52531 520349 42000) 0 nil])
([nil nil ((841 . 857)) nil (25836 52531 520348 132000) 0 nil])
([nil nil ((857 . 863)) nil (25836 52531 520347 268000) 0 nil])
([nil nil ((863 . 865) (#(" " 0 1 (face (whitespace-line))) . 862) (undo-tree-id190 . -1) (863 . 864)) nil (25836 52531 520346 103000) 0 nil])
([nil nil ((799 . 800) (#(" " 0 1 (face (whitespace-line))) . 798) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (799 . 800)) nil (25836 52531 520343 528000) 0 nil])
([nil nil ((798 . 814)) nil (25836 52531 520340 255000) 0 nil])
([nil nil ((#("c" 0 1 (face (whitespace-line))) . -813) (undo-tree-id187 . -1) 814) nil (25836 52531 520339 159000) 0 nil])
([nil nil ((813 . 818)) nil (25836 52531 520336 580000) 0 nil])
([nil nil ((818 . 822)) nil (25836 52531 520335 703000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -821) (undo-tree-id186 . -1) 822) nil (25836 52531 520334 690000) 0 nil])
([nil nil ((821 . 828)) nil (25836 52531 520332 603000) 0 nil])
([nil nil ((#("o" 0 1 (face (whitespace-line))) . -818) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("n" 0 1 (face (whitespace-line))) . -819) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("c" 0 1 (face (whitespace-line))) . -820) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("e" 0 1 (face (whitespace-line))) . -821) (undo-tree-id179 . -1) (#(" " 0 1 (face (whitespace-line))) . -822) (undo-tree-id180 . -1) (#("m" 0 1 (face (whitespace-line))) . -823) (undo-tree-id181 . -1) (#("o" 0 1 (face (whitespace-line))) . -824) (undo-tree-id182 . -1) (#("r" 0 1 (face (whitespace-line))) . -825) (undo-tree-id183 . -1) (#("e" 0 1 (face (whitespace-line))) . -826) (undo-tree-id184 . -1) (#(" " 0 1 (face (whitespace-line))) . -827) (undo-tree-id185 . -1) 828) nil (25836 52531 520329 812000) 0 nil])
([nil nil ((818 . 839)) nil (25836 52531 520313 104000) 0 nil])
([nil nil ((839 . 840)) nil (25836 52531 520312 221000) 0 nil])
([nil nil ((#("c" 0 1 (face (whitespace-line))) . -836) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("o" 0 1 (face (whitespace-line))) . -837) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("l" 0 1 (face (whitespace-line))) . -838) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("d" 0 1 (face (whitespace-line))) . -839) (undo-tree-id172 . -1) 840) nil (25836 52531 520310 475000) 0 nil])
([nil nil ((836 . 846)) nil (25836 52531 520302 47000) 0 nil])
([nil nil ((846 . 865)) nil (25836 52531 520301 246000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -864) (undo-tree-id165 . -1) 865) nil (25836 52531 520300 258000) 0 nil])
([nil nil ((864 . 885)) nil (25836 52531 520298 235000) 0 nil])
([nil nil ((885 . 889)) nil (25836 52531 520297 380000) 0 nil])
([nil nil ((#("t" 0 1 (face (whitespace-line))) . -882) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("r" 0 1 (face (whitespace-line))) . -883) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("u" 0 1 (face (whitespace-line))) . -884) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("s" 0 1 (face (whitespace-line))) . -885) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("t" 0 1 (face (whitespace-line))) . -886) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("y" 0 1 (face (whitespace-line))) . -887) (undo-tree-id163 . -1) (#(" " 0 1 (face (whitespace-line))) . -888) (undo-tree-id164 . -1) 889) nil (25836 52531 520295 26000) 0 nil])
([nil nil ((882 . 889)) nil (25836 52531 520280 691000) 0 nil])
([nil nil ((#("j" 0 1 (face (whitespace-line))) . -882) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("a" 0 1 (face (whitespace-line))) . -883) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("i" 0 1 (face (whitespace-line))) . -884) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("l" 0 1 (face (whitespace-line))) . -885) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("o" 0 1 (face (whitespace-line))) . -886) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("r" 0 1 (face (whitespace-line))) . -887) (undo-tree-id151 . -1) (#(" " 0 1 (face (whitespace-line))) . -888) (undo-tree-id152 . -1) 889) nil (25836 52531 520278 73000) 0 nil])
([nil nil ((882 . 892)) nil (25836 52531 520257 91000) 0 nil])
([nil nil ((#("M" 0 1 (face (whitespace-line))) . -891) (undo-tree-id140 . -1) 892) nil (25836 52531 520255 980000) 0 nil])
([nil nil ((891 . 908)) nil (25836 52531 520253 746000) 0 nil])
([nil nil ((908 . 911)) nil (25836 52531 520252 912000) 0 nil])
([nil nil ((#("a" 0 1 (face (whitespace-line))) . -902) (undo-tree-id131 . -1) (#("r" 0 1 (face (whitespace-line))) . -903) (undo-tree-id132 . -1) (#("e" 0 1 (face (whitespace-line))) . -904) (undo-tree-id133 . -1) (#(" " 0 1 (face (whitespace-line))) . -905) (undo-tree-id134 . -1) (#("s" 0 1 (face (whitespace-line))) . -906) (undo-tree-id135 . -1) (#("e" 0 1 (face (whitespace-line))) . -907) (undo-tree-id136 . -1) (#("n" 0 1 (face (whitespace-line))) . -908) (undo-tree-id137 . -1) (#("t" 0 1 (face (whitespace-line))) . -909) (undo-tree-id138 . -1) (#(" " 0 1 (face (whitespace-line))) . -910) (undo-tree-id139 . -1) 911) nil (25836 52531 520250 602000) 0 nil])
([nil nil ((902 . 921)) nil (25836 52531 520239 249000) 0 nil])
([nil nil ((#("t" 0 1 (face (whitespace-line))) . -917) (undo-tree-id127 . -1) (#("h" 0 1 (face (whitespace-line))) . -918) (undo-tree-id128 . -1) (#("e" 0 1 (face (whitespace-line))) . -919) (undo-tree-id129 . -1) (#(" " 0 1 (face (whitespace-line))) . -920) (undo-tree-id130 . -1) 921) nil (25836 52531 520237 682000) 0 nil])
([nil nil ((917 . 928)) nil (25836 52531 520232 63000) 0 nil])
([nil nil ((928 . 941)) nil (25836 52531 520231 131000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line))) . -920) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("r" 0 1 (face (whitespace-line))) . -921) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("i" 0 1 (face (whitespace-line))) . -922) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("a" 0 1 (face (whitespace-line))) . -923) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("l" 0 1 (face (whitespace-line))) . -924) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#(" " 0 1 (face (whitespace-line))) . -925) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("o" 0 1 (face (whitespace-line))) . -926) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("r" 0 1 (face (whitespace-line))) . -927) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("d" 0 1 (face (whitespace-line))) . -928) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("e" 0 1 (face (whitespace-line))) . -929) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("r" 0 1 (face (whitespace-line))) . -930) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("s" 0 1 (face (whitespace-line))) . -931) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (face (whitespace-line))) . -932) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("a" 0 1 (face (whitespace-line))) . -933) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("s" 0 1 (face (whitespace-line))) . -934) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#(" " 0 1 (face (whitespace-line))) . -935) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("t" 0 1 (face (whitespace-line))) . -936) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("h" 0 1 (face (whitespace-line))) . -937) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("e" 0 1 (face (whitespace-line))) . -938) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("y" 0 1 (face (whitespace-line))) . -939) (undo-tree-id125 . -1) (#(" " 0 1 (face (whitespace-line))) . -940) (undo-tree-id126 . -1) 941) nil (25836 52531 520225 434000) 0 nil])
([nil nil ((#("o" 0 1 (face (whitespace-line))) . -902) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("n" 0 1 (face (whitespace-line))) . -903) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("c" 0 1 (face (whitespace-line))) . -904) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("e" 0 1 (face (whitespace-line))) . -905) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (face (whitespace-line))) . -906) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("m" 0 1 (face (whitespace-line))) . -907) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("o" 0 1 (face (whitespace-line))) . -908) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("r" 0 1 (face (whitespace-line))) . -909) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("e" 0 1 (face (whitespace-line))) . -910) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(" " 0 1 (face (whitespace-line))) . -911) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("h" 0 1 (face (whitespace-line))) . -912) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("e" 0 1 (face (whitespace-line))) . -913) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("e" 0 1 (face (whitespace-line))) . -914) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("d" 0 1 (face (whitespace-line))) . -915) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (face (whitespace-line))) . -916) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("E" 0 1 (face (whitespace-line))) . -917) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("m" 0 1 (face (whitespace-line))) . -918) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("p" 0 1 (face (whitespace-line))) . -919) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 920) nil (25836 52531 520148 667000) 0 nil])
([nil nil ((902 . 904)) nil (25836 52531 520094 814000) 0 nil])
([nil nil ((904 . 925)) nil (25836 52531 520093 974000) 0 nil])
([nil nil ((925 . 933)) nil (25836 52531 520093 158000) 0 nil])
([nil nil ((#("y" 0 1 (face (whitespace-line))) . -930) (undo-tree-id48 . -1) (#("s" 0 1 (face (whitespace-line))) . -931) (undo-tree-id49 . -1) (#(" " 0 1 (face (whitespace-line))) . -932) (undo-tree-id50 . -1) 933) nil (25836 52531 520091 815000) 0 nil])
([nil nil ((930 . 942)) nil (25836 52531 520087 315000) 0 nil])
([nil nil ((#("s" 0 1 (face (whitespace-line))) . -940) (undo-tree-id46 . -1) (#(" " 0 1 (face (whitespace-line))) . -941) (undo-tree-id47 . -1) 942) nil (25836 52531 520086 46000) 0 nil])
([nil nil ((940 . 945)) nil (25836 52531 520082 967000) 0 nil])
([nil nil ((945 . 963)) nil (25836 52531 520082 113000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line))) . -959) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("m" 0 1 (face (whitespace-line))) . -960) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("e" 0 1 (face (whitespace-line))) . -961) (undo-tree-id44 . -1) (#("p" 0 1 (face (whitespace-line))) . -962) (undo-tree-id45 . -1) 963) nil (25836 52531 520080 419000) 0 nil])
([nil nil ((959 . 963)) nil (25836 52531 520073 150000) 0 nil])
([nil nil ((#("o" 0 1 (face (whitespace-line))) . -962) (undo-tree-id39 . -1) 963) nil (25836 52531 520072 39000) 0 nil])
([nil nil ((962 . 968)) nil (25836 52531 520070 1000) 0 nil])
([nil nil ((#("o" 0 1 (face (whitespace-line))) . -963) (undo-tree-id34 . -1) (#("e" 0 1 (face (whitespace-line))) . -964) (undo-tree-id35 . -1) (#("r" 0 1 (face (whitespace-line))) . -965) (undo-tree-id36 . -1) (#("s" 0 1 (face (whitespace-line))) . -966) (undo-tree-id37 . -1) (#(" " 0 1 (face (whitespace-line))) . -967) (undo-tree-id38 . -1) 968) nil (25836 52531 520067 961000) 0 nil])
([nil nil ((963 . 968)) nil (25836 52531 520061 88000) 0 nil])
([nil nil ((#("E" 0 1 (face (whitespace-line))) . -959) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("m" 0 1 (face (whitespace-line))) . -960) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("p" 0 1 (face (whitespace-line))) . -961) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (face (whitespace-line))) . -962) (undo-tree-id28 . -1) (#("r" 0 1 (face (whitespace-line))) . -963) (undo-tree-id29 . -1) (#("o" 0 1 (face (whitespace-line))) . -964) (undo-tree-id30 . -1) (#("r" 0 1 (face (whitespace-line))) . -965) (undo-tree-id31 . -1) (#("s" 0 1 (face (whitespace-line))) . -966) (undo-tree-id32 . -1) (#(" " 0 1 (face (whitespace-line))) . -967) (undo-tree-id33 . -1) 968) nil (25836 52531 520058 375000) 0 nil])
([nil nil ((959 . 964)) nil (25836 52531 520044 16000) 0 nil])
([nil nil ((#("u" 0 1 (face (whitespace-line))) . -963) (undo-tree-id21 . -1) 964) nil (25836 52531 520042 918000) 0 nil])
([nil nil ((963 . 979)) nil (25836 52531 520040 633000) 0 nil])
([nil nil ((#("c" 0 1 (face (whitespace-line))) . -977) (undo-tree-id19 . -1) (#("e" 0 1 (face (whitespace-line))) . -978) (undo-tree-id20 . -1) 979) nil (25836 52531 520039 316000) 0 nil])
([nil nil ((977 . 990)) nil (25836 52531 520035 831000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -989) (undo-tree-id18 . -1) 990) nil (25836 52531 520034 630000) 0 nil])
([nil nil ((989 . 991)) nil (25836 52531 520032 388000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -990) (undo-tree-id17 . -1) 991) nil (25836 52531 520030 956000) 0 nil])
([nil nil ((#("The empire once more calls on Marius and his trusty jailor Marja as they are send to defend the city of Saint Mera, laying near the cold borders to barberic lands. Bound in servitude to the emporer Marius has no choice but to comply with the empires orders once more, as it sends it's trusty speaker under the watchful eyes  

Marius, a speaker, possesses the ability to bind any living creature to his command. Only those versed in the way of the iron heart such as the emperor and his royal Mastas, are able to withstand their compelling words. As barberic forces march against the bordering city of Saint Mera, Mariues and his watchful Masta Mera are hasteful sent to the cities defends as they heed the empirial orders one final time.

The empire once more sends Marius towards it's barberic enemies


calls on Marius and his trusty jailor Marja as they are send to defend the city of Saint Mera, laying near the cold borders to barberic lands.

Born into servitude, Marius must fight the enemies of the empire under the watchful eyes of the Mastas. As he once again heeds the command of the Emperor in the defense of the city of Saint Mera." 150 156 (face (whitespace-line)) 156 163 (face (whitespace-line)) 163 165 (face (whitespace-line)) 165 169 (face (whitespace-line)) 169 172 (face (whitespace-line)) 172 182 (face (whitespace-line)) 182 185 (face (whitespace-line)) 185 189 (face (whitespace-line)) 189 197 (face (whitespace-line)) 197 204 (face (whitespace-line)) 204 208 (face (whitespace-line)) 208 211 (face (whitespace-line)) 211 218 (face (whitespace-line)) 218 222 (face (whitespace-line)) 222 225 (face (whitespace-line)) 225 232 (face (whitespace-line)) 232 237 (face (whitespace-line)) 237 241 (face (whitespace-line)) 241 249 (face (whitespace-line)) 249 256 (face (whitespace-line)) 256 261 (face (whitespace-line)) 261 267 (face (whitespace-line)) 267 270 (face (whitespace-line)) 270 273 (face (whitespace-line)) 273 279 (face (whitespace-line)) 279 284 (face (whitespace-line)) 284 291 (face (whitespace-line)) 291 299 (face (whitespace-line)) 299 305 (face (whitespace-line)) 305 309 (face (whitespace-line)) 309 318 (face (whitespace-line)) 318 323 (face (whitespace-line)) 323 324 (face (whitespace-line whitespace-trailing)) 324 325 (face (whitespace-line whitespace-trailing)) 477 546 (face (whitespace-line)) 546 549 (face (whitespace-line)) 549 558 (face (whitespace-line)) 558 565 (face (whitespace-line)) 565 571 (face (whitespace-line)) 571 579 (face (whitespace-line)) 579 583 (face (whitespace-line)) 583 593 (face (whitespace-line)) 593 598 (face (whitespace-line)) 598 601 (face (whitespace-line)) 601 607 (face (whitespace-line)) 607 613 (face (whitespace-line)) 613 621 (face (whitespace-line)) 621 625 (face (whitespace-line)) 625 629 (face (whitespace-line)) 629 638 (face (whitespace-line)) 638 644 (face (whitespace-line)) 644 649 (face (whitespace-line)) 649 653 (face (whitespace-line)) 653 662 (face (whitespace-line)) 662 667 (face (whitespace-line)) 667 670 (face (whitespace-line)) 670 674 (face (whitespace-line)) 674 681 (face (whitespace-line)) 681 689 (face (whitespace-line)) 689 692 (face (whitespace-line)) 692 697 (face (whitespace-line)) 697 702 (face (whitespace-line)) 702 706 (face (whitespace-line)) 706 715 (face (whitespace-line)) 715 722 (face (whitespace-line)) 722 726 (face (whitespace-line)) 726 732 (face (whitespace-line)) 732 738 (face (whitespace-line)) 947 948 (rear-nonsticky t) 1100 1145 (face (whitespace-line))) . 252) (undo-tree-id0 . -1145) (undo-tree-id1 . -1054) (undo-tree-id2 . -1053) (undo-tree-id3 . -1053) (undo-tree-id4 . -1054) (undo-tree-id5 . -721) (undo-tree-id6 . -326) (undo-tree-id7 . -412) (undo-tree-id8 . -334) (undo-tree-id9 . -334) (undo-tree-id10 . -327) (undo-tree-id11 . -59) (undo-tree-id12 . -163) (undo-tree-id13 . -546) (undo-tree-id14 . -535) (undo-tree-id15 . -738) (undo-tree-id16 . -1145)) nil (25836 52531 520026 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 657 . 658) (nil face (whitespace-line) 402 . 658) (252 . 658)) nil (25836 52531 519989 78000) 0 nil])
([nil current ((#("i" 0 1 (face (whitespace-line))) . -515) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("n" 0 1 (face (whitespace-line))) . -516) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("g" 0 1 (face (whitespace-line))) . -517) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) 518 (t 25836 52531 523379 291000)) nil (25836 52580 35205 805000) 0 nil])
nil
