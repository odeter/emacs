(undo-tree-save-format-version . 1)
"875ce7f6063a6d8277716603437037900d8d782a"
[nil nil nil nil (25782 25153 889745 839000) 0 nil]
([nil nil ((840 . 848) (#("        " 0 8 (fontified nil)) . 839) (undo-tree-id24 . -8) (838 . 848) (t 25642 38060 358165 397000)) nil (25782 25153 889743 586000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 855) (854 . 855) (853 . 855) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -853) (848 . 854)) nil (25782 25153 889740 155000) 0 nil])
([nil nil ((854 . 856)) nil (25782 25153 889738 188000) 0 nil])
([nil nil ((855 . 863)) nil (25782 25153 889736 847000) 0 nil])
([nil nil ((864 . 873)) nil (25782 25153 889735 858000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -872) (undo-tree-id23 . -1) 873) nil (25782 25153 889734 530000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -864) (undo-tree-id22 . -1) 865) nil (25782 25153 889731 845000) 0 nil])
([nil nil ((864 . 865)) nil (25782 25153 889728 680000) 0 nil])
([nil nil ((873 . 882)) nil (25782 25153 889727 614000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 889) (888 . 889) (887 . 889) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -887) (882 . 888)) nil (25782 25153 889725 872000) 0 nil])
([nil nil ((888 . 890)) nil (25782 25153 889723 734000) 0 nil])
([nil nil ((889 . 894)) nil (25782 25153 889722 552000) 0 nil])
([nil nil ((895 . 902)) nil (25782 25153 889720 708000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -901) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 902) nil (25782 25153 889714 480000) 0 nil])
([nil nil ((1413 . 1415) (t 25782 25153 896156 482000)) nil (25782 25281 486618 847000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1429 . 1430) (nil fontified nil 1428 . 1430) (nil fontified nil 1415 . 1428) (1415 . 1430)) nil (25782 25281 486610 628000) 0 nil])
([nil nil ((#("Something went wrong" 0 20 (face font-lock-string-face fontified t)) . 1608) (undo-tree-id52 . -20) (undo-tree-id53 . -20) (undo-tree-id54 . -20) (undo-tree-id55 . -20) (t 25782 25281 492530 766000)) nil (25782 25413 668555 65000) 0 nil])
([nil nil ((1608 . 1618)) nil (25782 25413 668549 315000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -1613) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("l" 0 1 (face font-lock-string-face fontified defer)) . -1614) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1615) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1616) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1617) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1618) nil (25782 25413 668546 144000) 0 nil])
([nil nil ((1613 . 1628)) nil (25782 25413 668528 184000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -1627) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 1628) nil (25782 25413 668521 907000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-string-face fontified t)) . -1647) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -1648) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -1649) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 1650 (t 25782 25413 672875 524000)) nil (25782 25529 887133 792000) 0 nil])
([nil nil ((1647 . 1649)) nil (25782 25529 887109 248000) 0 nil])
([nil nil ((374 . 383) (t 25827 13805 906021 159000)) nil (25828 46614 645931 598000) 0 nil])
([nil nil ((nil rear-nonsticky nil 467 . 468) (nil fontified nil 467 . 468) (nil fontified nil 463 . 467) (nil fontified nil 450 . 463) (nil fontified nil 422 . 450) (nil fontified nil 419 . 422) (nil fontified nil 415 . 419) (nil fontified nil 413 . 415) (nil fontified nil 409 . 413) (nil fontified nil 408 . 409) (nil fontified nil 383 . 408) (383 . 468)) nil (25828 46614 645929 938000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -410) (#("d" 0 1 (fontified t face font-lock-string-face)) . -411) 412) nil (25828 46614 645926 546000) 0 nil])
([nil nil ((410 . 422)) nil (25828 46614 645925 238000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -421) 422) nil (25828 46614 645924 189000) 0 nil])
([nil nil ((apply -4 478 671 undo--wrap-and-run-primitive-undo 478 671 ((582 . 584) (486 . 488)))) nil (25828 46614 645923 68000) 0 nil])
([nil nil ((896 . 904) (#("        " 0 8 (fontified nil)) . 895) (895 . 904) (#("        " 0 8 (fontified nil)) . 894) (894 . 903) (#("        " 0 8 (fontified nil)) . 893) (892 . 902)) nil (25828 46614 645921 527000) 0 nil])
([nil nil ((894 . 903)) nil (25828 46614 645919 285000) 0 nil])
([nil nil ((#("filter_list" 0 11 (fontified t face font-lock-string-face)) . 410) (undo-tree-id71 . -11)) nil (25828 46614 645918 135000) 0 nil])
([nil nil ((410 . 421)) nil (25828 46614 645916 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -420) 421) nil (25828 46614 645915 231000) 0 nil])
([nil nil ((713 . 721) (#("        " 0 8 (fontified nil)) . 712) (711 . 721)) nil (25828 46614 645913 930000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . 740) (739 . 740) (738 . 740) (#("[" 0 1 (fontified nil)) . -738) (721 . 739)) nil (25828 46614 645912 85000) 0 nil])
([nil nil ((739 . 741)) nil (25828 46614 645910 413000) 0 nil])
([nil nil ((740 . 751)) nil (25828 46614 645909 499000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer face font-lock-string-face)) . -750) 751) nil (25828 46614 645908 436000) 0 nil])
([nil nil ((nil rear-nonsticky nil 759 . 760) (nil fontified nil 734 . 760) (734 . 760)) nil (25828 46614 645907 261000) 0 nil])
([nil nil ((#("data['rename_obj']" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-1-face)) 5 17 (fontified t face font-lock-string-face) 17 18 (fontified t face (rainbow-delimiters-depth-1-face))) . 760) (undo-tree-id70 . -18)) nil (25828 46614 645905 718000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -746) (#("a" 0 1 (fontified t)) . -747) (#("t" 0 1 (fontified t)) . -748) (#("a" 0 1 (fontified t)) . -749) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -750) (#("'" 0 1 (fontified t face font-lock-string-face)) . -751) (#("d" 0 1 (fontified t face font-lock-string-face)) . -752) (#("a" 0 1 (fontified t face font-lock-string-face)) . -753) (#("t" 0 1 (fontified t face font-lock-string-face)) . -754) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -755) (#("s" 0 1 (fontified t face font-lock-string-face)) . -756) (#("'" 0 1 (fontified t face font-lock-string-face)) . -757) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -758) 759) nil (25828 46614 645901 511000) 0 nil])
([nil nil ((nil rear-nonsticky nil 763 . 764) (nil fontified nil 763 . 764) (nil fontified nil 751 . 763) (nil fontified nil 750 . 751) (nil fontified nil 746 . 750) (746 . 764)) nil (25828 46614 645897 784000) 0 nil])
([nil nil ((956 . 977)) nil (25828 46614 645895 796000) 0 nil])
([nil nil ((977 . 979) (#("(" 0 1 (fontified nil)) . -977) (977 . 978)) nil (25828 46614 645894 725000) 0 nil])
([nil nil ((981 . 989) (#("        " 0 8 (fontified nil)) . 980) (979 . 989)) nil (25828 46614 645893 258000) 0 nil])
([nil nil ((989 . 1000)) nil (25828 46614 645891 934000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -999) 1000) nil (25828 46614 645890 953000) 0 nil])
([nil nil ((981 . 989) (#("        " 0 8 (fontified nil)) . 980) (979 . 989)) nil (25828 46614 645889 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1031 . 1032) (nil fontified nil 1031 . 1032) (nil fontified nil 1020 . 1031) (nil fontified nil 1019 . 1020) (nil fontified nil 1015 . 1019) (nil fontified nil 995 . 1015) (nil fontified nil 992 . 995) (nil fontified nil 991 . 992) (nil fontified nil 989 . 991) (989 . 1032)) nil (25828 46614 645887 928000) 0 nil])
([nil nil ((979 . 988)) nil (25828 46614 645885 275000) 0 nil])
([nil nil ((988 . 1008)) nil (25828 46614 645884 352000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1007) 1008) nil (25828 46614 645883 214000) 0 nil])
([nil nil ((1013 . 1014) (#(")" 0 1 (fontified nil)) . 1013) (1012 . 1013) (1011 . 1013) (#("(" 0 1 (fontified nil)) . -1011) (1007 . 1012)) nil (25828 46614 645881 517000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1013) 1014) nil (25828 46614 645879 371000) 0 nil])
([nil nil ((1010 . 1013)) nil (25828 46614 645878 262000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1012) 1013) nil (25828 46614 645877 215000) 0 nil])
([nil nil ((1068 . 1069)) nil (25828 46614 645876 89000) 0 nil])
([nil nil ((1071 . 1083) (#("            " 0 12 (fontified nil)) . 1070) (1069 . 1083)) nil (25828 46614 645874 819000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1079) 1083) nil (25828 46614 645873 322000) 0 nil])
([nil nil ((1079 . 1084)) nil (25828 46614 645872 151000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1083) 1084) nil (25828 46614 645871 132000) 0 nil])
([nil nil ((1088 . 1089) (1079 . 1083) (1083 . 1084)) nil (25828 46614 645869 781000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1088) 1089) nil (25828 46614 645868 387000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1079) 1088) nil (25828 46614 645867 83000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1084) (undo-tree-id69 . -1)) nil (25828 46614 645865 791000) 0 nil])
([nil nil ((1093 . 1097) 1098) nil (25828 46614 645863 746000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1140 . 1141) (nil fontified nil 1140 . 1141) (nil fontified nil 1139 . 1140) (nil fontified nil 1135 . 1139) (nil fontified nil 1134 . 1135) (nil fontified nil 1130 . 1134) (nil fontified nil 1129 . 1130) (nil fontified nil 1107 . 1129) (1107 . 1141)) nil (25828 46614 645862 266000) 0 nil])
([nil nil ((#("find_by_id" 0 10 (fontified t)) . 1119) (undo-tree-id68 . -10)) nil (25828 46614 645859 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1129 . 1130) (nil fontified nil 1119 . 1130) (1119 . 1130)) nil (25828 46614 645857 611000) 0 nil])
([nil nil ((#("data[\"id\"]" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 9 (fontified t face font-lock-string-face) 9 10 (fontified t face (rainbow-delimiters-depth-2-face))) . 1131) (undo-tree-id67 . -10)) nil (25828 46614 645856 99000) 0 nil])
([nil nil ((1131 . 1134)) nil (25828 46614 645854 43000) 0 nil])
([nil nil ((1070 . 1082)) nil (25828 46614 645853 132000) 0 nil])
([nil nil ((1082 . 1092)) nil (25828 46614 645852 287000) 0 nil])
([nil nil ((1092 . 1110)) nil (25828 46614 645851 370000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1131 . 1132) (nil fontified nil 1131 . 1132) (nil fontified nil 1128 . 1131) (nil fontified nil 1126 . 1128) (nil fontified nil 1122 . 1126) (nil fontified nil 1121 . 1122) (nil fontified nil 1110 . 1121) (1110 . 1132)) nil (25828 46614 645850 98000) 0 nil])
([nil nil ((#("self," 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 1122) (undo-tree-id65 . -5) (undo-tree-id66 . -5)) nil (25828 46614 645847 506000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1122)) nil (25828 46614 645842 533000) 0 nil])
([nil nil ((1126 . 1139)) nil (25828 46614 645841 677000) 0 nil])
([nil nil ((1139 . 1160)) nil (25828 46614 645840 784000) 0 nil])
([nil nil ((1160 . 1171)) nil (25828 46614 645839 891000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1170) (undo-tree-id64 . -1) 1171) nil (25828 46614 645838 755000) 0 nil])
([nil nil ((1172 . 1173) (#(")" 0 1 (fontified nil)) . 1172) (1171 . 1172) (1170 . 1172) (#("(" 0 1 (fontified nil)) . -1170) (1170 . 1171)) nil (25828 46614 645836 6000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1172) (undo-tree-id63 . -1) 1173) nil (25828 46614 645833 737000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1170) (undo-tree-id61 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1171) (undo-tree-id62 . -1) 1172) nil (25828 46614 645831 218000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1163) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("l" 0 1 (fontified t)) . -1164) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -1165) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -1166) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("g" 0 1 (fontified t)) . -1167) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("t" 0 1 (fontified t)) . -1168) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("h" 0 1 (fontified t)) . -1169) (undo-tree-id60 . -1) 1170) nil (25828 46614 645825 978000) 0 nil])
([nil nil ((1160 . 1162)) nil (25828 46614 645810 121000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1161) (undo-tree-id47 . -1) 1162) nil (25828 46614 645808 926000) 0 nil])
([nil nil ((1161 . 1163)) nil (25828 46614 645806 916000) 0 nil])
([nil nil ((#("æ" 0 1 (fontified t)) . -1160) (undo-tree-id44 . -1) (#("l" 0 1 (fontified t)) . -1161) (undo-tree-id45 . -1) (#("e" 0 1 (fontified t)) . -1162) (undo-tree-id46 . -1) 1163) nil (25828 46614 645805 311000) 0 nil])
([nil nil ((1163 . 1165) (#("(" 0 1 (fontified nil)) . -1163) (1160 . 1164)) nil (25828 46614 645800 658000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1164)) nil (25828 46614 645799 113000) 0 nil])
([nil nil ((1167 . 1168)) nil (25828 46614 645798 226000) 0 nil])
([nil nil ((1145 . 1147) (#("(" 0 1 (fontified nil)) . -1145) (1142 . 1146)) nil (25828 46614 645797 83000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1146)) nil (25828 46614 645795 630000) 0 nil])
([nil nil ((1153 . 1154)) nil (25828 46614 645794 701000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 1154) (#("t" 0 1 (fontified t)) . 1154) (#("g" 0 1 (fontified t)) . 1154) (#("n" 0 1 (fontified t)) . 1154) (#("e" 0 1 (fontified t)) . 1154) (#("l" 0 1 (fontified t)) . 1154) (#("." 0 1 (fontified defer)) . 1154)) nil (25828 46614 645792 653000) 0 nil])
([nil nil ((1166 . 1167)) nil (25828 46614 645790 369000) 0 nil])
([nil nil ((1167 . 1184)) nil (25828 46614 645789 493000) 0 nil])
([nil nil ((1184 . 1191)) nil (25828 46614 645788 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1231 . 1232) (nil fontified nil 1228 . 1232) (nil fontified nil 1227 . 1228) (nil fontified nil 1226 . 1227) (nil fontified nil 1203 . 1226) (nil fontified nil 1201 . 1203) (nil fontified nil 1192 . 1201) (nil fontified nil 1191 . 1192) (1191 . 1232)) nil (25828 46614 645787 149000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1229) (undo-tree-id41 . -1) (#("0" 0 1 (fontified t)) . -1230) (undo-tree-id42 . -1) (#("3" 0 1 (fontified t rear-nonsticky t)) . -1231) (undo-tree-id43 . -1) 1232) nil (25828 46614 645783 998000) 0 nil])
([nil nil ((1229 . 1232)) nil (25828 46614 645779 621000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -1229) (undo-tree-id38 . -1) (#("0" 0 1 (fontified t)) . -1230) (undo-tree-id39 . -1) (#("0" 0 1 (fontified t)) . -1231) (undo-tree-id40 . -1) 1232) nil (25828 46614 645778 31000) 0 nil])
([nil nil ((1229 . 1232)) nil (25828 46614 645773 549000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t face font-lock-string-face)) . -1204) (undo-tree-id17 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1205) (undo-tree-id18 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1206) (undo-tree-id19 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face)) . -1207) (undo-tree-id20 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -1208) (undo-tree-id21 . -1) (#("n" 0 1 (fontified defer face font-lock-string-face)) . -1209) (undo-tree-id22 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -1210) (undo-tree-id23 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face)) . -1211) (undo-tree-id24 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -1212) (undo-tree-id25 . -1) (#("p" 0 1 (fontified defer face font-lock-string-face)) . -1213) (undo-tree-id26 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face)) . -1214) (undo-tree-id27 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -1215) (undo-tree-id28 . -1) (#("p" 0 1 (fontified defer face font-lock-string-face)) . -1216) (undo-tree-id29 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -1217) (undo-tree-id30 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face)) . -1218) (undo-tree-id31 . -1) (#("l" 0 1 (fontified defer face font-lock-string-face)) . -1219) (undo-tree-id32 . -1) (#("y" 0 1 (fontified defer face font-lock-string-face)) . -1220) (undo-tree-id33 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -1221) (undo-tree-id34 . -1) (#("s" 0 1 (fontified defer face font-lock-string-face)) . -1222) (undo-tree-id35 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1223) (undo-tree-id36 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1224) (undo-tree-id37 . -1) 1225) nil (25828 46614 645768 413000) 0 nil])
([nil nil ((1204 . 1205)) nil (25828 46614 645741 460000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t face font-lock-string-face)) . -1204) (undo-tree-id16 . -1) 1205) nil (25828 46614 645740 306000) 0 nil])
([nil nil ((1204 . 1205)) nil (25828 46614 645738 92000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -1204) (undo-tree-id15 . -1) 1205) nil (25828 46614 645736 988000) 0 nil])
([nil nil ((1204 . 1212)) nil (25828 46614 645734 845000) 0 nil])
([nil nil ((1212 . 1224)) nil (25828 46614 645733 953000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1221) (undo-tree-id12 . -1) (#("s" 0 1 (fontified t)) . -1222) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -1223) (undo-tree-id14 . -1) 1224) nil (25828 46614 645732 159000) 0 nil])
([nil nil ((1221 . 1242)) nil (25828 46614 645727 542000) 0 nil])
([nil nil ((1242 . 1251)) nil (25828 46614 645726 702000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1250) (undo-tree-id11 . -1) 1251) nil (25828 46615 935161 13000) 0 nil])
([nil nil ((1332 . 1352)) nil (25828 46785 533356 739000) 0 nil] [nil nil ((1332 . 1349)) ((#("for i in filters " 0 3 (fontified t face font-lock-keyword-face) 3 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 16 (fontified t) 16 17 (fontified t)) . 1332) (undo-tree-id110 . -3) (undo-tree-id111 . -17) (undo-tree-id112 . -16) (undo-tree-id113 . -16) (undo-tree-id114 . -16) (undo-tree-id115 . -16) (undo-tree-id116 . -16) (undo-tree-id117 . -16) (undo-tree-id118 . -16) (undo-tree-id119 . -16) (undo-tree-id120 . -16) (undo-tree-id121 . -16) (undo-tree-id122 . -16) (undo-tree-id123 . -16) (undo-tree-id124 . -16) (undo-tree-id125 . -16) (undo-tree-id126 . -16) (undo-tree-id127 . -16) (undo-tree-id128 . -16) (undo-tree-id129 . -16) (undo-tree-id130 . -16) (undo-tree-id131 . -16) (undo-tree-id132 . -16) (undo-tree-id133 . -16) (undo-tree-id134 . -16) (undo-tree-id135 . -16) (undo-tree-id136 . -16) (undo-tree-id137 . -16) (undo-tree-id138 . -16) (undo-tree-id139 . -16) (undo-tree-id140 . -16) (undo-tree-id141 . -16) (undo-tree-id142 . -16) (undo-tree-id143 . -16) (undo-tree-id144 . -16) (undo-tree-id145 . -16) (undo-tree-id146 . -16) (undo-tree-id147 . -16) (undo-tree-id148 . -16) (undo-tree-id149 . -16) (undo-tree-id150 . -16) (undo-tree-id151 . -16) (undo-tree-id152 . -16) (undo-tree-id153 . -16) (undo-tree-id154 . -16) (undo-tree-id155 . -16) (undo-tree-id156 . -16) (undo-tree-id157 . -17) (undo-tree-id158 . -17) (undo-tree-id159 . -17) (undo-tree-id160 . -16) (undo-tree-id161 . -17) (undo-tree-id162 . -17) (undo-tree-id163 . -17) (undo-tree-id164 . -17) (undo-tree-id165 . -17) (undo-tree-id166 . -17)) (25828 46615 656679 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1351) (undo-tree-id220 . -1) 1352) nil (25828 46785 533355 634000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1348) (undo-tree-id10 . -1) 1349) ((1348 . 1349)) (25828 46615 356732 648000) 0 nil])
([nil nil ((1351 . 1353)) nil (25828 46785 533353 545000) 0 nil])
([nil nil ((1348 . 1350)) ((#(": " 0 1 (fontified t) 1 2 (fontified t)) . 1348) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -1) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2)) (25828 46615 51589 266000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1352) (undo-tree-id219 . -1) 1353) nil (25828 46785 533352 453000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1349) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 1350) ((1349 . 1350)) (25828 46614 646019 284000) 0 nil])
([nil nil ((1352 . 1361)) nil (25828 46785 533350 284000) 0 nil])
([nil nil ((1349 . 1362)) ((#("
            " 0 13 (fontified t)) . 1349) (undo-tree-id72 . -13) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1)) (25828 46614 645679 200000) 0 nil])
([nil nil ((1361 . 1376)) nil (25828 46785 533349 396000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -1375) (undo-tree-id218 . -1) 1376) nil (25828 46785 533348 248000) 0 nil])
([nil nil ((1375 . 1377)) nil (25828 46785 533346 93000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1376) (undo-tree-id217 . -1) 1377) nil (25828 46785 533344 987000) 0 nil])
([nil nil ((1376 . 1389)) nil (25828 46785 533342 862000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1502 . 1503) (nil fontified nil 1497 . 1503) (nil fontified nil 1491 . 1497) (nil fontified nil 1471 . 1491) (nil fontified nil 1469 . 1471) (nil fontified nil 1461 . 1469) (nil fontified nil 1460 . 1461) (nil fontified nil 1459 . 1460) (nil fontified nil 1457 . 1459) (nil fontified nil 1432 . 1457) (nil fontified nil 1428 . 1432) (nil fontified nil 1427 . 1428) (nil fontified nil 1421 . 1427) (nil fontified nil 1420 . 1421) (nil fontified nil 1416 . 1420) (nil fontified nil 1415 . 1416) (nil fontified nil 1404 . 1415) (nil fontified nil 1403 . 1404) (nil fontified nil 1394 . 1403) (nil fontified nil 1389 . 1394) (1389 . 1503)) nil (25828 46785 533340 954000) 0 nil])
([nil nil ((1469 . 1473) 1478) nil (25828 46785 533336 77000) 0 nil])
([nil nil ((1483 . 1499) (#("            " 0 12 (fontified t)) . 1483) 1504) nil (25828 46785 533334 772000) 0 nil])
([nil nil ((#("data[\"name\"]" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 11 (fontified t face font-lock-string-face) 11 12 (fontified t face (rainbow-delimiters-depth-2-face))) . 1416) (undo-tree-id215 . -12) (undo-tree-id216 . -12)) nil (25828 46785 533333 192000) 0 nil])
([nil nil ((1416 . 1417)) nil (25828 46785 533330 309000) 0 nil])
([nil nil ((1502 . 1514) (#("            " 0 12 (fontified nil)) . 1501) (undo-tree-id214 . -12) (1500 . 1514)) nil (25828 46785 533329 22000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1510) (undo-tree-id213 . -4) 1514) nil (25828 46785 533326 429000) 0 nil])
([nil nil ((1510 . 1512)) nil (25828 46785 533324 264000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1511) (undo-tree-id212 . -1) 1512) nil (25828 46785 533323 164000) 0 nil])
([nil nil ((1511 . 1524)) nil (25828 46785 533321 35000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1523) (undo-tree-id211 . -1) 1524) nil (25828 46785 533319 850000) 0 nil])
([nil nil ((1523 . 1532)) nil (25828 46785 533317 826000) 0 nil])
([nil nil ((1532 . 1548)) nil (25828 46785 533316 932000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1547) (undo-tree-id210 . -1) 1548) nil (25828 46785 533315 828000) 0 nil])
([nil nil ((1547 . 1549)) nil (25828 46785 533313 581000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1548) (undo-tree-id209 . -1) 1549) nil (25828 46785 533312 302000) 0 nil])
([nil nil ((1548 . 1561)) nil (25828 46785 533310 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1732 . 1733) (nil fontified nil 1728 . 1733) (nil fontified nil 1727 . 1728) (nil fontified nil 1717 . 1727) (nil fontified nil 1715 . 1717) (nil fontified nil 1707 . 1715) (nil fontified nil 1705 . 1707) (nil fontified nil 1684 . 1705) (nil fontified nil 1682 . 1684) (nil fontified nil 1673 . 1682) (nil fontified nil 1672 . 1673) (nil fontified nil 1671 . 1672) (nil fontified nil 1665 . 1671) (nil fontified nil 1662 . 1665) (nil fontified nil 1653 . 1662) (nil fontified nil 1651 . 1653) (nil fontified nil 1645 . 1651) (nil fontified nil 1642 . 1645) (nil fontified nil 1640 . 1642) (nil fontified nil 1636 . 1640) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1623 . 1634) (nil fontified nil 1617 . 1623) (nil fontified nil 1604 . 1617) (nil fontified nil 1603 . 1604) (nil fontified nil 1597 . 1603) (nil fontified nil 1596 . 1597) (nil fontified nil 1584 . 1596) (nil fontified nil 1578 . 1584) (nil fontified nil 1564 . 1578) (nil fontified nil 1561 . 1564) (1561 . 1733)) nil (25828 46785 533307 690000) 0 nil])
([nil nil ((1566 . 1582) (#("            " 0 12 (fontified t)) . 1566) 1582) nil (25828 46785 533299 761000) 0 nil])
([nil nil ((1609 . 1625) (#("            " 0 12 (fontified t)) . 1609) 1629) nil (25828 46785 533298 201000) 0 nil])
([nil nil ((1653 . 1657) 1660) nil (25828 46785 533296 799000) 0 nil])
([nil nil ((1665 . 1681) (#("            " 0 9 (fontified t) 9 12 (fontified t)) . 1665) 1684) nil (25828 46785 533295 407000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -1582) (undo-tree-id203 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1583) (undo-tree-id204 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -1584) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1585) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1586) (undo-tree-id207 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -1587) (undo-tree-id208 . -1) 1588) nil (25828 46785 533292 533000) 0 nil])
([nil nil ((1582 . 1583)) nil (25828 46785 533283 610000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1620) (#("e" 0 1 (fontified t)) . 1620) (#("t" 0 1 (fontified t)) . 1620) (#("l" 0 1 (fontified t)) . 1620) (#("i" 0 1 (fontified t)) . 1620) (#("f" 0 1 (fontified t face font-lock-builtin-face)) . 1620)) nil (25828 46785 533281 671000) 0 nil])
([nil nil ((1620 . 1621)) nil (25828 46785 533279 712000) 0 nil])
([nil nil ((#("data['name']" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-1-face)) 5 11 (fontified t face font-lock-string-face) 11 12 (fontified t face (rainbow-delimiters-depth-1-face))) . 1591) (undo-tree-id201 . -12) (undo-tree-id202 . -12)) nil (25828 46785 533278 512000) 0 nil])
([nil nil ((1602 . 1604) (1601 . 1603) (#("[" 0 1 (fontified nil)) . -1601) (1591 . 1602)) nil (25828 46785 533275 448000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1603) (undo-tree-id200 . -1) 1604) nil (25828 46785 533273 760000) 0 nil])
([nil nil ((1603 . 1608)) nil (25828 46785 533271 591000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1605) (undo-tree-id197 . -1) (#("d" 0 1 (fontified t)) . -1606) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -1607) (undo-tree-id199 . -1) 1608) nil (25828 46785 533269 986000) 0 nil])
([nil nil ((1605 . 1607)) nil (25828 46785 533265 318000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1606) (undo-tree-id196 . -1) 1607) nil (25828 46785 533264 185000) 0 nil])
([nil nil ((1745 . 1757) (#("            " 0 12 (fontified nil)) . 1744) (undo-tree-id195 . -12) (1743 . 1757)) nil (25828 46785 533261 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1753) (undo-tree-id194 . -4) 1757) nil (25828 46785 533259 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1878 . 1879) (nil fontified nil 1874 . 1879) (nil fontified nil 1873 . 1874) (nil fontified nil 1863 . 1873) (nil fontified nil 1857 . 1863) (nil fontified nil 1855 . 1857) (nil fontified nil 1846 . 1855) (nil fontified nil 1845 . 1846) (nil fontified nil 1844 . 1845) (nil fontified nil 1843 . 1844) (nil fontified nil 1838 . 1843) (nil fontified nil 1830 . 1838) (nil fontified nil 1829 . 1830) (nil fontified nil 1828 . 1829) (nil fontified nil 1827 . 1828) (nil fontified nil 1822 . 1827) (nil fontified nil 1821 . 1822) (nil fontified nil 1820 . 1821) (nil fontified nil 1814 . 1820) (nil fontified nil 1813 . 1814) (nil fontified nil 1798 . 1813) (nil fontified nil 1790 . 1798) (nil fontified nil 1772 . 1790) (nil fontified nil 1769 . 1772) (nil fontified nil 1768 . 1769) (nil fontified nil 1753 . 1768) (1753 . 1879)) nil (25828 46785 533255 542000) 0 nil])
([nil nil ((#("Delete " 0 2 (fontified t face font-lock-string-face) 2 7 (fontified t face font-lock-string-face)) . 1770) (undo-tree-id192 . -7) (undo-tree-id193 . -7)) nil (25828 46785 533249 114000) 0 nil])
([nil nil ((1776 . 1785)) nil (25828 46785 533246 215000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1784) (undo-tree-id191 . -1) 1785) nil (25828 46785 533244 968000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . 1797)) nil (25828 46785 533242 475000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . 1797) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1797) (#("t" 0 1 (fontified t face font-lock-string-face)) . 1797) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1797) (#("l" 0 1 (fontified t face font-lock-string-face)) . 1797) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1797)) nil (25828 46785 533240 766000) 0 nil])
([nil nil ((1797 . 1805)) nil (25828 46785 533238 907000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1804) (undo-tree-id190 . -1) 1805) nil (25828 46785 533237 759000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -1805) (undo-tree-id189 . -1) 1806) nil (25828 46785 533235 489000) 0 nil])
([nil nil ((1805 . 1825)) nil (25828 46785 533233 6000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . 1825) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1825) (#("t" 0 1 (fontified t face font-lock-string-face)) . 1825) (#("l" 0 1 (fontified t face font-lock-string-face)) . 1825) (#("i" 0 1 (fontified t face font-lock-string-face)) . 1825) (#("f" 0 1 (fontified t face font-lock-string-face)) . 1825) (#(" " 0 1 (fontified t face font-lock-string-face)) . 1825)) nil (25828 46785 533231 79000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1824) (undo-tree-id188 . -1) 1825) nil (25828 46785 533228 780000) 0 nil])
([nil nil ((1775 . 1776)) nil (25828 46785 533226 646000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1775) (undo-tree-id187 . -1) 1776) nil (25828 46785 533225 138000) 0 nil])
([nil nil ((1776 . 1777)) nil (25828 46785 533222 937000) 0 nil])
([nil nil ((1877 . 1878)) nil (25828 46785 533222 60000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("t" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("l" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1879) (#("d" 0 1 (fontified t face font-lock-string-face)) . 1879)) nil (25828 46785 533219 994000) 0 nil])
([nil nil ((1879 . 1887)) nil (25828 46785 533217 807000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer face font-lock-string-face)) . -1886) (undo-tree-id186 . -1) 1887) nil (25828 46785 533216 628000) 0 nil])
([nil nil ((apply -36 1895 2936 undo--wrap-and-run-primitive-undo 1895 2936 ((2893 . 2895) (2806 . 2808) (2722 . 2724) (2704 . 2706) (2670 . 2672) (2629 . 2631) (2614 . 2616) (2586 . 2588) (2566 . 2568) (2484 . 2486) (2426 . 2428) (2313 . 2315) (2189 . 2191) (2091 . 2093) (2026 . 2028) (1994 . 1996) (1958 . 1960) (1903 . 1905)))) nil (25828 46785 533214 373000) 0 nil])
([nil nil ((1016 . 1025)) nil (25828 46785 533213 426000) 0 nil])
([nil nil ((1025 . 1039)) nil (25828 46785 533212 495000) 0 nil])
([nil nil ((#("e" 0 1 (fontified defer face font-lock-comment-face)) . -1037) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -1038) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 1039) nil (25828 46785 533210 896000) 0 nil])
([nil nil ((1037 . 1038)) nil (25828 46785 533204 288000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-comment-face)) . -1036) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -1037) (undo-tree-id180 . -1) 1038) nil (25828 46785 533202 481000) 0 nil])
([nil nil ((1036 . 1045)) nil (25828 46785 533195 884000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1044) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 1045) nil (25828 46785 533190 261000) 0 nil])
([nil nil ((254 . 255) (t 25828 46785 538963 774000)) nil (25828 48017 704779 633000) 0 nil])
([nil nil ((255 . 262)) nil (25828 48017 704778 430000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -259) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("r" 0 1 (fontified t)) . -260) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("t" 0 1 (fontified t)) . -261) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 262) nil (25828 48017 704773 299000) 0 nil])
([nil nil ((259 . 267)) nil (25828 48017 704704 921000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -266) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 267) nil (25828 48017 704699 122000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -763) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 764 (t 25828 48017 709431 356000)) nil (25828 48095 565776 929000) 0 nil])
([nil nil ((763 . 765) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -763) (763 . 764)) nil (25828 48095 565770 117000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 764)) nil (25828 48095 565767 329000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -774) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) 775) nil (25828 48095 565762 796000) 0 nil])
([nil nil ((774 . 775)) nil (25828 48095 565720 357000) 0 nil])
([nil nil ((1364 . 1376) (#("            " 0 12 (fontified nil)) . 1363) (undo-tree-id348 . -12) (1362 . 1376) (t 25828 48095 573331 139000)) nil (25828 48385 985703 623000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1372) (undo-tree-id347 . -4) 1376) nil (25828 48385 985700 868000) 0 nil])
([nil nil ((1372 . 1383)) nil (25828 48385 985698 813000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1372) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1373) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#(" " 0 1 (fontified defer)) . -1374) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("f" 0 1 (fontified defer)) . -1375) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("i" 0 1 (fontified defer)) . -1376) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("l" 0 1 (fontified defer)) . -1377) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("t" 0 1 (fontified defer)) . -1378) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#("e" 0 1 (fontified defer)) . -1379) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("r" 0 1 (fontified defer)) . -1380) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("s" 0 1 (fontified t)) . -1381) (undo-tree-id345 . -1) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id346 . -1) 1383) nil (25828 48400 792870 189000) 0 nil])
([nil nil ((1597 . 1598)) nil (25828 48406 416876 590000) 0 nil] [nil nil ((1056 . 1065)) ((#("
        " 0 1 (fontified t face font-lock-comment-face) 1 9 (fontified t)) . 1056) (undo-tree-id476 . -9) (undo-tree-id477 . -1) (undo-tree-id478 . -9) (undo-tree-id479 . -1) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -9) (undo-tree-id507 . -9) (undo-tree-id508 . -9) (undo-tree-id509 . -9) (undo-tree-id510 . -9) (undo-tree-id511 . -9) (undo-tree-id512 . -9) (undo-tree-id513 . -9) (undo-tree-id514 . -9) (undo-tree-id515 . -9) (undo-tree-id516 . -9) (undo-tree-id517 . -9) (undo-tree-id518 . -9) (undo-tree-id519 . -9) (undo-tree-id520 . -9) (undo-tree-id521 . -9) (undo-tree-id522 . -9) (undo-tree-id523 . -9) (undo-tree-id524 . -1) (undo-tree-id525 . -9) (undo-tree-id526 . -9) (undo-tree-id527 . -9) (undo-tree-id528 . -1) (undo-tree-id529 . -9) (undo-tree-id530 . -9) (undo-tree-id531 . -9) (undo-tree-id532 . -9) (undo-tree-id533 . -9) (undo-tree-id534 . -9) (undo-tree-id535 . -9) (undo-tree-id536 . -9) (undo-tree-id537 . -9) (undo-tree-id538 . -9)) (25828 48400 319132 327000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t face whitespace-trailing)) . -1364) 1574) nil (25828 48406 416868 14000) 0 nil])
([nil nil ((1065 . 1073)) ((#("filter s" 0 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 8 (fontified t)) . 1065) (undo-tree-id430 . -6) (undo-tree-id431 . -8) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8)) (25828 48399 991398 354000) 0 nil])
([nil nil ((1029 . 1037) (#("        " 0 8 (fontified nil)) . 1028) (undo-tree-id561 . -8) (1027 . 1037) (t 25828 48406 425231 981000)) nil (25828 48478 694021 414000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1071) (undo-tree-id325 . -1) (#("s" 0 1 (fontified t)) . -1072) (undo-tree-id326 . -1) 1073) ((1071 . 1073)) (25828 48399 502723 486000) 0 nil])
([nil nil ((1043 . 1049) (1042 . 1044) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1042) (1037 . 1043)) nil (25828 48478 694018 226000) 0 nil])
([nil nil ((1075 . 1077) (#("[" 0 1 (fontified nil)) . -1075) (1071 . 1076)) ((#("s = [" 0 1 (fontified nil face font-lock-variable-name-face) 1 4 (fontified nil) 4 5 (fontified nil)) . 1071) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (1075 . 1076) (#("[]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face))) . 1075) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2)) (25828 48386 529251 464000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1042) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1043) (#("n" 0 1 (fontified t)) . -1043) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("a" 0 1 (fontified t)) . -1044) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("m" 0 1 (fontified t)) . -1045) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#("e" 0 1 (fontified t)) . -1046) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("s" 0 1 (fontified t)) . -1047) (undo-tree-id559 . -1) (#(" " 0 1 (fontified t)) . -1048) (undo-tree-id560 . -1) 1049) nil (25828 48478 694014 160000) 0 nil])
([nil nil ((1168 . 1169) (1167 . 1169) (#("(" 0 1 (fontified nil)) . -1167) (1153 . 1168)) ((#("filters.concat(" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil)) . 1153) (undo-tree-id349 . -14) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -14) (undo-tree-id364 . -14) (undo-tree-id365 . -14) (undo-tree-id366 . -14) (undo-tree-id367 . -14) (undo-tree-id368 . -14) (undo-tree-id369 . -14) (undo-tree-id370 . -14) (undo-tree-id371 . -14) (1167 . 1168) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1167) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . 1168) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1)) (25828 48386 251865 31000) 0 nil])
([nil nil ((1043 . 1054) (1042 . 1044) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1042) (1042 . 1043)) nil (25828 48478 693972 264000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1160) (undo-tree-id316 . -1) (#("c" 0 1 (fontified t)) . -1161) (undo-tree-id317 . -1) (#("o" 0 1 (fontified t)) . -1162) (undo-tree-id318 . -1) (#("n" 0 1 (fontified t)) . -1163) (undo-tree-id319 . -1) (#("c" 0 1 (fontified t)) . -1164) (undo-tree-id320 . -1) (#("a" 0 1 (fontified t)) . -1165) (undo-tree-id321 . -1) (#("t" 0 1 (fontified t)) . -1166) (undo-tree-id322 . -1) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1167) (undo-tree-id323 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1168) (#(" " 0 1 (fontified t)) . -1168) (undo-tree-id324 . -1) 1169) ((1168 . 1169) (1160 . 1169)) (25828 48385 985983 582000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1053) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 1054) nil (25828 48478 693965 960000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1153) (undo-tree-id309 . -1) (#("i" 0 1 (fontified t)) . -1154) (undo-tree-id310 . -1) (#("l" 0 1 (fontified t)) . -1155) (undo-tree-id311 . -1) (#("t" 0 1 (fontified t)) . -1156) (undo-tree-id312 . -1) (#("e" 0 1 (fontified t)) . -1157) (undo-tree-id313 . -1) (#("r" 0 1 (fontified t)) . -1158) (undo-tree-id314 . -1) (#("s" 0 1 (fontified t)) . -1159) (undo-tree-id315 . -1) 1160) ((1153 . 1160)) (25828 48385 985641 156000) 0 nil])
([nil nil ((1445 . 1458) (t 25828 48478 701260 43000)) nil (25828 48523 803988 796000) 0 nil])
nil
([nil nil ((1464 . 1469) (1463 . 1465) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1463) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (1458 . 1464)) nil (25828 48523 803986 443000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1468) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 1469) nil (25828 48523 803977 443000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1464) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("a" 0 1 (fontified t)) . -1465) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("m" 0 1 (fontified t)) . -1466) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("e" 0 1 (fontified t)) . -1467) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 1468 (t 25828 48523 809284 861000)) nil (25828 48535 859996 122000) 0 nil])
([nil nil ((1464 . 1465)) nil (25828 48535 859753 654000) 0 nil])
([nil nil ((1561 . 1578) (t 25828 48535 869292 357000)) nil (25828 48624 547523 428000) 0 nil])
([nil nil ((1584 . 1590) (1583 . 1585) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1583) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (1578 . 1584)) nil (25828 48624 547521 1000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1589) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) 1590) nil (25828 48624 547511 891000) 0 nil])
([nil nil ((1584 . 1586) (t 25828 48624 557357 833000)) nil (25828 48645 51410 61000) 0 nil])
([nil nil ((1585 . 1591)) nil (25828 48645 51408 556000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1590) (undo-tree-id733 . -1) 1591) nil (25828 48645 51406 248000) 0 nil])
([nil nil ((1591 . 1593)) nil (25828 48645 51389 948000) 0 nil])
([nil nil ((#("
                print('error', error)" 0 1 (fontified t) 1 17 (fontified t) 17 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 30 (fontified t face font-lock-string-face) 30 32 (fontified t) 32 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face))) . 1561) (undo-tree-id741 . -38) (undo-tree-id742 . -29) (undo-tree-id743 . -1) (undo-tree-id744 . -38) (t 25828 48645 57375 359000)) nil (25828 49141 421820 233000) 0 nil])
([nil nil ((1656 . 1673)) nil (25828 49141 421814 6000) 0 nil])
([nil nil ((1680 . 1691) (1679 . 1681) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1679) (1679 . 1680) (1678 . 1680) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1678) (1673 . 1679)) nil (25828 49141 421812 115000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -1687) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1688) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1689) (undo-tree-id739 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1690) (undo-tree-id740 . -1) 1691) nil (25828 49141 421808 205000) 0 nil])
([nil nil ((1687 . 1692)) nil (25828 49141 421798 622000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1691) (undo-tree-id734 . -1) 1692) nil (25828 49141 421796 314000) 0 nil])
([nil nil ((1692 . 1694)) nil (25828 49141 421785 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1709 . 1710) (nil fontified nil 1709 . 1710) (nil fontified nil 1707 . 1709) (nil fontified nil 1705 . 1707) (nil fontified nil 1704 . 1705) (nil fontified nil 1694 . 1704) (1694 . 1710)) nil (25828 49141 421777 392000) 0 nil])
([nil nil ((#("                print(\"Filter name\", rename_obj[i.id])
" 0 16 (fontified nil) 16 21 (fontified nil face font-lock-keyword-face) 21 22 (fontified nil face (rainbow-delimiters-depth-1-face)) 22 34 (fontified nil face font-lock-string-face) 34 35 (fontified nil face font-lock-string-face) 35 37 (fontified nil) 37 47 (fontified nil) 47 48 (fontified nil face (rainbow-delimiters-depth-2-face)) 48 50 (fontified nil) 50 52 (fontified nil face font-lock-builtin-face) 52 53 (fontified nil rear-nonsticky t face (rainbow-delimiters-depth-2-face)) 53 54 (fontified nil face (rainbow-delimiters-depth-1-face)) 54 55 (fontified nil)) . 1712) (undo-tree-id747 . -37) (undo-tree-id748 . -32) (undo-tree-id749 . -34) (undo-tree-id750 . -53) (undo-tree-id751 . -55) (undo-tree-id752 . -53) (undo-tree-id753 . -53) (undo-tree-id754 . -53) (undo-tree-id755 . -53) (undo-tree-id756 . -53) (undo-tree-id757 . -53) (undo-tree-id758 . -53) (undo-tree-id759 . -53) (undo-tree-id760 . -53) (undo-tree-id761 . -53) (undo-tree-id762 . -53) (undo-tree-id763 . -53) (undo-tree-id764 . -53) (undo-tree-id765 . -53) (undo-tree-id766 . -53) (undo-tree-id767 . -53) (undo-tree-id768 . -53) (undo-tree-id769 . -53) (undo-tree-id770 . -53) (undo-tree-id771 . -53) (undo-tree-id772 . -53) (undo-tree-id773 . -53) (undo-tree-id774 . -53) (undo-tree-id775 . -53) (undo-tree-id776 . -53) (undo-tree-id777 . -53) (undo-tree-id778 . -53) (undo-tree-id779 . -53) (undo-tree-id780 . -53) (undo-tree-id781 . -53) (undo-tree-id782 . -53) (undo-tree-id783 . -53) (undo-tree-id784 . -53) (undo-tree-id785 . -53) (undo-tree-id786 . -53) (undo-tree-id787 . -53) (undo-tree-id788 . -53) (undo-tree-id789 . -53) (undo-tree-id790 . -53) (undo-tree-id791 . -53) (undo-tree-id792 . -53) (undo-tree-id793 . -53) (undo-tree-id794 . -53) (undo-tree-id795 . -53) (undo-tree-id796 . -53) (undo-tree-id797 . -53) (undo-tree-id798 . -53) (undo-tree-id799 . -53) (undo-tree-id800 . -53) (undo-tree-id801 . -53) (undo-tree-id802 . -53) (undo-tree-id803 . -53) (undo-tree-id804 . -53) (undo-tree-id805 . -53) (undo-tree-id806 . -53) (undo-tree-id807 . -53) (undo-tree-id808 . -53) (undo-tree-id809 . -53) (undo-tree-id810 . -53) (1695 . 1712) (#("            try:
" 0 1 (fontified t) 1 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 17 (fontified t)) . 1640) (undo-tree-id811 . -12) (1657 . 1712) 1710 (t 25828 49141 429988 365000)) nil (25828 49178 218935 565000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1652) (undo-tree-id745 . -4) (undo-tree-id746 . -4) 1693) nil (25828 49178 218767 672000) 0 nil])
([nil nil ((1687 . 1689) (#("(" 0 1 (fontified nil)) . -1687) (1684 . 1688) (t 25828 49178 226043 914000)) nil (25828 49208 351120 234000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1688)) nil (25828 49208 351117 519000) 0 nil])
([nil nil ((1692 . 1693) (#(" " 0 1 (fontified nil)) . -1692) (1692 . 1693) (#(")" 0 1 (fontified nil face font-lock-builtin-face)) . -1692) (1692 . 1693)) nil (25828 49208 351109 685000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1752 . 1753) (nil fontified nil 1752 . 1753) (nil fontified nil 1749 . 1752) (1749 . 1753) (t 25828 49208 358090 100000)) nil (25828 49231 842769 320000) 0 nil])
([nil nil ((1757 . 1758) (#(" " 0 1 (fontified nil)) . -1757) (1757 . 1758) (#(")" 0 1 (fontified nil face font-lock-builtin-face)) . -1757) (1757 . 1758)) nil (25828 49231 842766 581000) 0 nil])
([nil nil ((#("
            print(\"Filter name\", rename_obj[str(i.id)])" 0 1 (fontified t) 1 13 (fontified t) 13 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 34 (fontified t) 34 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-2-face)) 45 48 (fontified t face font-lock-builtin-face) 48 49 (fontified t face (rainbow-delimiters-depth-3-face)) 49 51 (fontified t) 51 53 (fontified t face font-lock-builtin-face) 53 54 (fontified t face (rainbow-delimiters-depth-3-face)) 54 55 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-2-face)) 55 56 (fontified t face (rainbow-delimiters-depth-1-face))) . 1639) (undo-tree-id816 . -56) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -49) (undo-tree-id820 . -56)) nil (25828 49231 842763 676000) 0 nil])
([nil nil ((#("
        print(rename_obj)
" 0 1 (fontified t) 1 9 (fontified t) 9 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-1-face)) 26 27 (fontified t)) . 1028) (undo-tree-id812 . -27) (undo-tree-id813 . -27) (undo-tree-id814 . -1) (undo-tree-id815 . -27)) nil (25828 49231 842752 615000) 0 nil])
([nil nil ((#("        # filter = FilterModel.find_by_id(data[\"id\"])

        # print('filter!!', filter)
        # print('DATA ', data)

        # # Verify ownership of filter before rename (or sysadm)
        # if not current_user.check_role(\"sys_admin\") and filter.firm_id != current_user.firm_id:
        #     app.logger.error('Delete filter: user ({0}) tried deleting a filter that he/she does not own'.format(userID))
        #     return {'message': 'Renaming is only possible of filters you created', 'errtag': 'error_39'}, 400

        # # Verify filter name and return error if raised
        # error = verify_filter_name(data[\"name\"], current_user, current_user.id)
        # if error:
        #     return error

        # try:
        #     filter.name = data['name']
        #     filter.save_to_db()
        # except:
        #     return {'message': 'Name already exists', 'errtag': 'error_44'}, 500

        # app.logger.info('Delete filter: user ({0}) deleted a filter'.format(userID))
        # return {'message': 'Filter deleted'}, 200" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 16 (fontified t face font-lock-comment-face) 16 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 46 (fontified t face font-lock-comment-face) 46 47 (fontified t face font-lock-comment-face) 47 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-face) 54 58 (fontified t) 58 63 (fontified t) 63 65 (fontified t face font-lock-comment-delimiter-face) 65 67 (fontified t face font-lock-comment-face) 67 70 (fontified t face font-lock-comment-face) 70 71 (fontified t face font-lock-comment-face) 71 76 (fontified t face font-lock-comment-face) 76 81 (fontified t face font-lock-comment-face) 81 83 (fontified t face font-lock-comment-face) 83 89 (fontified t face font-lock-comment-face) 89 90 (fontified t face font-lock-comment-face) 90 91 (fontified t face font-lock-comment-face) 91 92 (fontified t) 92 99 (fontified t) 99 101 (fontified t face font-lock-comment-delimiter-face) 101 105 (fontified t face font-lock-comment-face) 105 106 (fontified t face font-lock-comment-face) 106 107 (fontified t face font-lock-comment-face) 107 112 (fontified t face font-lock-comment-face) 112 114 (fontified t face font-lock-comment-face) 114 119 (fontified t face font-lock-comment-face) 119 120 (fontified t face font-lock-comment-face) 120 121 (fontified t face font-lock-comment-face) 121 122 (fontified t face font-lock-comment-face) 122 128 (fontified t) 128 129 (fontified t) 129 131 (fontified t) 131 133 (fontified t face font-lock-comment-delimiter-face) 133 135 (fontified t face font-lock-comment-face) 135 138 (fontified t face font-lock-comment-face) 138 145 (fontified t face font-lock-comment-face) 145 149 (fontified t face font-lock-comment-face) 149 153 (fontified t face font-lock-comment-face) 153 154 (fontified t face font-lock-comment-face) 154 171 (fontified t face font-lock-comment-face) 171 188 (fontified t face font-lock-comment-face) 188 196 (fontified t) 196 198 (fontified t face font-lock-comment-delimiter-face) 198 200 (fontified t face font-lock-comment-face) 200 201 (fontified t face font-lock-comment-face) 201 204 (fontified t face font-lock-comment-face) 204 213 (fontified t face font-lock-comment-face) 213 222 (fontified t face font-lock-comment-face) 222 224 (fontified t face font-lock-comment-face) 224 228 (fontified t face font-lock-comment-face) 228 229 (fontified t face font-lock-comment-face) 229 240 (fontified t face font-lock-comment-face) 240 241 (fontified t face font-lock-comment-face) 241 242 (fontified t face font-lock-comment-face) 242 244 (fontified t face font-lock-comment-face) 244 245 (fontified t face font-lock-comment-face) 245 246 (fontified t face font-lock-comment-face) 246 252 (fontified t face font-lock-comment-face) 252 285 (fontified t face font-lock-comment-face) 285 286 (fontified t face font-lock-comment-face) 286 288 (fontified t) 288 294 (fontified t) 294 296 (fontified t face font-lock-comment-delimiter-face) 296 300 (fontified t face font-lock-comment-delimiter-face) 300 310 (fontified t face font-lock-comment-face) 310 316 (fontified t face font-lock-comment-face) 316 317 (fontified t face font-lock-comment-face) 317 332 (fontified t face font-lock-comment-face) 332 335 (fontified t face font-lock-comment-face) 335 337 (fontified t face font-lock-comment-face) 337 343 (fontified t face font-lock-comment-face) 343 349 (fontified t face font-lock-comment-face) 349 354 (fontified t face font-lock-comment-face) 354 356 (fontified t face font-lock-comment-face) 356 363 (fontified t face font-lock-comment-face) 363 364 (fontified t face font-lock-comment-face) 364 372 (fontified t face font-lock-comment-face) 372 375 (fontified t face font-lock-comment-face) 375 390 (fontified t face font-lock-comment-face) 390 391 (fontified t face font-lock-comment-face) 391 392 (fontified t face font-lock-comment-face) 392 393 (fontified t face font-lock-comment-face) 393 394 (fontified t face font-lock-comment-face) 394 395 (fontified t face font-lock-comment-face) 395 399 (fontified t face font-lock-comment-face) 399 400 (fontified t face font-lock-comment-face) 400 401 (fontified t face font-lock-comment-face) 401 403 (fontified t face font-lock-comment-face) 403 406 (fontified t face font-lock-comment-face) 406 407 (fontified t face font-lock-comment-face) 407 408 (fontified t face font-lock-comment-face) 408 409 (fontified t face font-lock-comment-face) 409 410 (fontified t face font-lock-comment-face) 410 412 (fontified t) 412 415 (fontified t) 415 418 (fontified t) 418 420 (fontified t face font-lock-comment-delimiter-face) 420 421 (fontified t face font-lock-comment-delimiter-face) 421 424 (fontified t face font-lock-comment-delimiter-face) 424 428 (fontified t face font-lock-comment-face) 428 430 (fontified t face font-lock-comment-face) 430 431 (fontified t face font-lock-comment-face) 431 432 (fontified t face font-lock-comment-face) 432 436 (fontified t face font-lock-comment-face) 436 438 (fontified t face font-lock-comment-face) 438 441 (fontified t face font-lock-comment-face) 441 443 (fontified t face font-lock-comment-face) 443 448 (fontified t face font-lock-comment-face) 448 462 (fontified t face font-lock-comment-face) 462 463 (fontified t face font-lock-comment-face) 463 469 (fontified t face font-lock-comment-face) 469 470 (fontified t face font-lock-comment-face) 470 473 (fontified t face font-lock-comment-face) 473 476 (fontified t face font-lock-comment-face) 476 481 (fontified t face font-lock-comment-face) 481 483 (fontified t face font-lock-comment-face) 483 484 (fontified t face font-lock-comment-face) 484 487 (fontified t face font-lock-comment-face) 487 489 (fontified t face font-lock-comment-face) 489 493 (fontified t face font-lock-comment-face) 493 494 (fontified t face font-lock-comment-face) 494 495 (fontified t face font-lock-comment-face) 495 499 (fontified t face font-lock-comment-face) 499 500 (fontified t face font-lock-comment-face) 500 501 (fontified t face font-lock-comment-face) 501 502 (fontified t face font-lock-comment-face) 502 503 (fontified t face font-lock-comment-face) 503 505 (fontified t face font-lock-comment-face) 505 513 (fontified t face font-lock-comment-face) 513 515 (fontified t face font-lock-comment-face) 515 516 (fontified t face font-lock-comment-face) 516 522 (fontified t face font-lock-comment-face) 522 531 (fontified t) 531 533 (fontified t face font-lock-comment-delimiter-face) 533 535 (fontified t face font-lock-comment-face) 535 565 (fontified t face font-lock-comment-face) 565 576 (fontified t face font-lock-comment-face) 576 579 (fontified t face font-lock-comment-face) 579 581 (fontified t face font-lock-comment-face) 581 589 (fontified t) 589 590 (fontified t face font-lock-comment-delimiter-face) 590 591 (fontified t face font-lock-comment-delimiter-face) 591 596 (face font-lock-comment-face fontified t) 596 605 (face font-lock-comment-face fontified t) 605 606 (face font-lock-comment-face fontified t) 606 617 (face font-lock-comment-face fontified t) 617 618 (face font-lock-comment-face fontified t) 618 619 (face font-lock-comment-face fontified t) 619 622 (face font-lock-comment-face fontified t) 622 623 (face font-lock-comment-face fontified t) 623 629 (face font-lock-comment-face fontified t) 629 630 (face font-lock-comment-face fontified t) 630 634 (face font-lock-comment-face fontified t) 634 649 (face font-lock-comment-face fontified t) 649 654 (face font-lock-comment-face fontified t) 654 659 (face font-lock-comment-face fontified t) 659 661 (face font-lock-comment-face fontified t) 661 662 (face font-lock-comment-face fontified t) 662 663 (face font-lock-comment-face fontified t) 663 671 (fontified t) 671 673 (fontified t face font-lock-comment-delimiter-face) 673 675 (fontified t face font-lock-comment-face) 675 683 (fontified t face font-lock-comment-face) 683 688 (fontified t) 688 691 (fontified t) 691 693 (fontified t face font-lock-comment-delimiter-face) 693 697 (fontified t face font-lock-comment-delimiter-face) 697 703 (fontified t face font-lock-comment-face) 703 710 (fontified t face font-lock-comment-face) 710 713 (fontified t) 713 719 (fontified t) 719 721 (fontified t face font-lock-comment-delimiter-face) 721 724 (fontified t face font-lock-comment-face) 724 726 (fontified t face font-lock-comment-face) 726 734 (fontified t) 734 736 (fontified t face font-lock-comment-delimiter-face) 736 740 (fontified t face font-lock-comment-delimiter-face) 740 746 (fontified t face font-lock-comment-face) 746 758 (fontified t face font-lock-comment-face) 758 759 (fontified t face font-lock-comment-face) 759 765 (fontified t face font-lock-comment-face) 765 766 (fontified t face font-lock-comment-face) 766 767 (fontified t face font-lock-comment-face) 767 775 (fontified t) 775 777 (fontified t face font-lock-comment-delimiter-face) 777 781 (fontified t face font-lock-comment-delimiter-face) 781 786 (fontified t face font-lock-comment-face) 786 787 (fontified t face font-lock-comment-face) 787 798 (fontified t face font-lock-comment-face) 798 799 (fontified t face font-lock-comment-face) 799 800 (fontified t face font-lock-comment-face) 800 801 (fontified t face font-lock-comment-face) 801 804 (fontified t) 804 806 (fontified t) 806 809 (fontified t) 809 811 (fontified t face font-lock-comment-delimiter-face) 811 817 (fontified t face font-lock-comment-face) 817 819 (fontified t face font-lock-comment-face) 819 827 (fontified t) 827 829 (fontified t face font-lock-comment-delimiter-face) 829 830 (fontified t face font-lock-comment-delimiter-face) 830 833 (fontified t face font-lock-comment-delimiter-face) 833 839 (fontified t face font-lock-comment-face) 839 840 (fontified t face font-lock-comment-face) 840 841 (fontified t face font-lock-comment-face) 841 850 (fontified t face font-lock-comment-face) 850 852 (fontified t face font-lock-comment-face) 852 873 (fontified t face font-lock-comment-face) 873 875 (fontified t face font-lock-comment-face) 875 883 (fontified t face font-lock-comment-face) 883 885 (fontified t face font-lock-comment-face) 885 895 (fontified t face font-lock-comment-face) 895 896 (fontified t face font-lock-comment-face) 896 902 (fontified t face font-lock-comment-face) 902 911 (fontified t) 911 913 (fontified t face font-lock-comment-delimiter-face) 913 928 (fontified t face font-lock-comment-face) 928 929 (fontified t face font-lock-comment-face) 929 932 (fontified t face font-lock-comment-face) 932 950 (fontified t face font-lock-comment-face) 950 958 (fontified t face font-lock-comment-face) 958 973 (fontified t face font-lock-comment-face) 973 974 (fontified t face font-lock-comment-face) 974 980 (fontified t face font-lock-comment-face) 980 981 (fontified t face font-lock-comment-face) 981 982 (fontified t face font-lock-comment-face) 982 983 (fontified t face font-lock-comment-face) 983 987 (fontified t face font-lock-comment-face) 987 988 (fontified t face font-lock-comment-face) 988 989 (fontified t face font-lock-comment-face) 989 990 (fontified t face font-lock-comment-face) 990 998 (fontified t) 998 1000 (fontified t face font-lock-comment-delimiter-face) 1000 1005 (fontified t face font-lock-comment-face) 1005 1006 (fontified t face font-lock-comment-face) 1006 1007 (fontified t face font-lock-comment-face) 1007 1008 (fontified t face font-lock-comment-face) 1008 1017 (fontified t face font-lock-comment-face) 1017 1019 (fontified t face font-lock-comment-face) 1019 1022 (fontified t face font-lock-comment-face) 1022 1025 (fontified t face font-lock-comment-face) 1025 1035 (fontified t face font-lock-comment-face) 1035 1036 (fontified t face font-lock-comment-face) 1036 1041 (fontified t face font-lock-comment-face)) . 1964) (undo-tree-id905 . -1041) (undo-tree-id906 . -1041) (undo-tree-id907 . -1041) (undo-tree-id908 . -1041) (undo-tree-id909 . -54) (undo-tree-id910 . -1041) (undo-tree-id911 . -1041) (t 25828 49231 850126 518000)) nil (25828 50618 885436 150000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1962) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (#("
" 0 1 (fontified t)) . -1963) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) 1964) nil (25828 50618 885425 623000) 0 nil])
([nil nil ((#("
        # filterParser.add_argument('id', help = 'This field cannot be blank', required = True)
        # filterParser.add_argument('name', help = 'This field cannot be blank', required = True)" 0 1 (fontified t) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 41 (fontified t face font-lock-comment-face) 41 43 (fontified t face font-lock-comment-face) 43 47 (fontified t face font-lock-comment-face) 47 50 (fontified t face font-lock-comment-face) 50 78 (fontified t face font-lock-comment-face) 78 91 (fontified t face font-lock-comment-face) 91 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 105 (fontified t) 105 107 (fontified t face font-lock-comment-delimiter-face) 107 131 (fontified t face font-lock-comment-face) 131 132 (fontified t face font-lock-comment-face) 132 133 (fontified t face font-lock-comment-face) 133 139 (fontified t face font-lock-comment-face) 139 141 (fontified t face font-lock-comment-face) 141 145 (fontified t face font-lock-comment-face) 145 148 (fontified t face font-lock-comment-face) 148 176 (fontified t face font-lock-comment-face) 176 189 (fontified t face font-lock-comment-face) 189 193 (fontified t face font-lock-comment-face) 193 194 (fontified t face font-lock-comment-face)) . 488) (undo-tree-id821 . -194) (undo-tree-id822 . -97) (undo-tree-id823 . -10) (undo-tree-id824 . -10) (undo-tree-id825 . -10) (undo-tree-id826 . -114) (undo-tree-id827 . -114) (undo-tree-id828 . -114) (undo-tree-id829 . -120) (undo-tree-id830 . -120) (undo-tree-id831 . -120) (undo-tree-id832 . -125) (undo-tree-id833 . -125) (undo-tree-id834 . -125) (undo-tree-id835 . -125) (undo-tree-id836 . -127) (undo-tree-id837 . -127) (undo-tree-id838 . -127) (undo-tree-id839 . -130) (undo-tree-id840 . -130) (undo-tree-id841 . -130) (undo-tree-id842 . -132) (undo-tree-id843 . -132) (undo-tree-id844 . -132) (undo-tree-id845 . -194) (undo-tree-id846 . -194) (undo-tree-id847 . -194) (undo-tree-id848 . -194) (undo-tree-id849 . -194) (undo-tree-id850 . -194) (undo-tree-id851 . -194) (undo-tree-id852 . -194) (undo-tree-id853 . -194) (undo-tree-id854 . -194) (undo-tree-id855 . -194) (undo-tree-id856 . -193) (undo-tree-id857 . -193) (undo-tree-id858 . -193) (undo-tree-id859 . -193) (undo-tree-id860 . -193) (undo-tree-id861 . -193) (undo-tree-id862 . -193) (undo-tree-id863 . -194) (undo-tree-id864 . -194) (undo-tree-id865 . -194) (undo-tree-id866 . -97) (undo-tree-id867 . -194) (undo-tree-id868 . -194) (undo-tree-id869 . -194) (undo-tree-id870 . -194) (undo-tree-id871 . -194) (undo-tree-id872 . -194) (undo-tree-id873 . -194) (undo-tree-id874 . -194) (undo-tree-id875 . -194) (undo-tree-id876 . -194) (undo-tree-id877 . -194) (undo-tree-id878 . -194) (undo-tree-id879 . -194) (undo-tree-id880 . -194) (undo-tree-id881 . -194) (undo-tree-id882 . -194) (undo-tree-id883 . -194) (undo-tree-id884 . -194) (undo-tree-id885 . -194) (undo-tree-id886 . -194) (undo-tree-id887 . -194) (undo-tree-id888 . -194) 682) nil (25828 50618 885399 660000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (t 25828 50618 896747 898000)) nil (25828 50628 9909 454000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 1168) (undo-tree-id912 . -1) (#("
" 0 1 (fontified t)) . 1168) (undo-tree-id913 . -1)) nil (25828 50628 9900 100000) 0 nil])
nil
