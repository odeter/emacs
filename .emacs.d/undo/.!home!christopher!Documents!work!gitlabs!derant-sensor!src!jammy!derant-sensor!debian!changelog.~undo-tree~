(undo-tree-save-format-version . 1)
"6a7766c17a99acdd101462ea76fb90e28c6e33bc"
[nil current nil nil (25878 38699 280674 205000) 0 nil]
([nil nil ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -178) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -179) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("b" 0 1 (fontified t face font-lock-variable-name-face)) . -180) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 181) ((178 . 181)) (25878 38698 902560 253000) 0 nil] [nil nil ((#("Simon van Beest <svb@derant.com>" 0 15 (fontified t face font-lock-variable-name-face) 15 17 (fontified t) 17 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t)) . 161) (undo-tree-id41 . -32) (undo-tree-id42 . -32) (undo-tree-id43 . -32) (t 25876 3492 654795 961000)) ((161 . 193)) (25878 38597 797270 644000) 0 nil])
([nil nil ((178 . 182)) ((#("info" 0 4 (fontified t face font-lock-variable-name-face)) . 178) (undo-tree-id146 . -4)) (25878 38698 162357 61000) 0 nil])
([nil nil ((nil rear-nonsticky nil 202 . 203) (nil fontified nil 201 . 203) (nil fontified nil 187 . 201) (nil fontified nil 185 . 187) (nil fontified nil 161 . 185) (161 . 203)) ((#("Christopher Mulvad Groot <cmg@derant.com> " 0 24 (fontified nil) 24 26 (fontified nil) 26 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil rear-nonsticky nil)) . 161) (undo-tree-id44 . -42) (undo-tree-id45 . -41) (undo-tree-id46 . -41) (undo-tree-id47 . -41) (undo-tree-id48 . -41) (undo-tree-id49 . -41) (undo-tree-id50 . -42) (undo-tree-id51 . -42) (undo-tree-id52 . -42) (undo-tree-id53 . -42) (undo-tree-id54 . -42) (undo-tree-id55 . -42) (undo-tree-id56 . -42) (undo-tree-id57 . -42) (undo-tree-id58 . -42) (undo-tree-id59 . -42) (undo-tree-id60 . -42) (undo-tree-id61 . -42) (undo-tree-id62 . -42) (undo-tree-id63 . -42) (undo-tree-id64 . -42) (undo-tree-id65 . -42) (undo-tree-id66 . -42) (undo-tree-id67 . -42) (undo-tree-id68 . -42) (undo-tree-id69 . -42) (undo-tree-id70 . -42) (undo-tree-id71 . -42) (undo-tree-id72 . -42) (undo-tree-id73 . -42) (undo-tree-id74 . -42) (nil rear-nonsticky t 202 . 203)) (25878 38597 51224 704000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-variable-name-face)) . -161) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -162) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -163) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("o" 0 1 (fontified defer face font-lock-variable-name-face)) . -164) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("n" 0 1 (fontified nil face font-lock-variable-name-face)) . -165) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t face font-lock-variable-name-face)) . -166) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("v" 0 1 (fontified defer face font-lock-variable-name-face)) . -167) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("a" 0 1 (fontified defer face font-lock-variable-name-face)) . -168) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("n" 0 1 (fontified defer face font-lock-variable-name-face)) . -169) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#(" " 0 1 (fontified defer face font-lock-variable-name-face)) . -170) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("B" 0 1 (fontified defer face font-lock-variable-name-face)) . -171) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("e" 0 1 (fontified defer face font-lock-variable-name-face)) . -172) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("e" 0 1 (fontified defer face font-lock-variable-name-face)) . -173) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -174) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -175) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 176 (t 25878 38601 978316 974000)) ((161 . 176)) (25878 38697 966308 572000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t rear-nonsticky t)) . -202) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (undo-tree-id34 . -1) (undo-tree-id36 . -1) (undo-tree-id38 . -1) (undo-tree-id40 . -1) 203) ((202 . 203) (t 25878 38570 917859 838000)) (25878 38570 912324 210000) 0 nil])
([nil nil ((161 . 168)) ((#("Derant " 0 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t face font-lock-variable-name-face)) . 161) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -7) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7)) (25878 38697 748984 450000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t face font-lock-variable-name-face)) . -167) (undo-tree-id81 . -1) (undo-tree-id83 . -1) (undo-tree-id85 . -1) (undo-tree-id87 . -1) (undo-tree-id89 . -1) 168) ((167 . 168) (t 25878 38669 591303 570000)) (25878 38669 586578 101000) 0 nil])
nil
