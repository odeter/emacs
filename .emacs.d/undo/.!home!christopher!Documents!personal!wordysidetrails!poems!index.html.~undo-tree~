(undo-tree-save-format-version . 1)
"4c45b7ea585fde67e240f7ccdbfb9b44a2d3cda2"
[nil nil nil nil (25819 12579 59233 784000) 0 nil]
([nil nil ((#("limit: 10" 0 5 (face web-mode-variable-name-face block-side t) 5 7 (block-side t) 7 9 (face web-mode-variable-name-face block-side t)) . 130) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9) (t 25672 18207 640280 410000)) nil (25819 12579 59231 349000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -129) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 130) nil (25819 12579 59221 730000) 0 nil])
([nil nil (("    " . -51) (69 . 70) (t 25819 12579 99004 376000)) nil (25819 12980 670877 732000) 0 nil])
([nil nil ((66 . 79)) nil (25819 12980 670876 234000) 0 nil])
([nil nil ((" " . -78) (undo-tree-id10 . -1) 79) nil (25819 12980 670875 205000) 0 nil])
([nil nil ((51 . 55)) nil (25819 12980 670872 719000) 0 nil])
([nil nil ((70 . 74)) nil (25819 12980 670871 691000) 0 nil])
([nil nil (("    " . -70) (86 . 87)) nil (25819 12980 670870 572000) 0 nil])
([nil nil ((83 . 93)) nil (25819 12980 670869 302000) 0 nil])
([nil nil ((" " . -92) (undo-tree-id9 . -1) 93) nil (25819 12980 670867 668000) 0 nil])
([nil nil ((92 . 100)) nil (25819 12980 670864 646000) 0 nil])
([nil nil ((" " . -99) (undo-tree-id8 . -1) 100) nil (25819 12980 670862 249000) 0 nil])
([nil nil ((70 . 74)) nil (25819 12980 670844 826000) 0 nil])
([nil nil ((1212 . 1214) ("  " . 1211) (undo-tree-id11 . -2) (1210 . 1214) (t 25819 12980 711843 355000)) nil (25819 13016 696670 458000) 0 nil])
([nil nil ((1217 . 1221) (1214 . 1221)) nil (25819 13016 696653 855000) 0 nil])
([nil nil ((1212 . 1214) (#("  " 0 2 (face whitespace-trailing)) . 1211) (1211 . 1213) (1211 . 1212) (t 25819 13016 727950 377000)) nil (25819 13055 450397 3000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1253 . 1254) (nil tag-attr t 1253 . 1254) (nil tag-attr-end 0 1253 . 1254) (nil tag-name "pclass" 1253 . 1254) (nil tag-type start 1253 . 1254) (nil font-lock-face web-mode-html-attr-name-face 1253 . 1254) (nil tag-attr t 1243 . 1253) (nil tag-name "pclass" 1243 . 1253) (nil tag-type start 1243 . 1253) (nil font-lock-face web-mode-html-attr-name-face 1243 . 1253) (nil tag-attr-beg 0 1242 . 1243) (nil tag-attr t 1242 . 1243) (nil tag-name "pclass" 1242 . 1243) (nil tag-type start 1242 . 1243) (nil font-lock-face web-mode-html-attr-name-face 1242 . 1243) (nil tag-name "pclass" 1241 . 1242) (nil tag-type start 1241 . 1242) (nil tag-attr t 1240 . 1241) (nil tag-attr-end 0 1240 . 1241) (nil tag-name "pclass" 1240 . 1241) (nil tag-type start 1240 . 1241) (nil font-lock-face web-mode-html-attr-name-face 1240 . 1241) (nil tag-attr t 1231 . 1240) (nil tag-name "pclass" 1231 . 1240) (nil tag-type start 1231 . 1240) (nil font-lock-face web-mode-html-attr-name-face 1231 . 1240) (nil tag-attr-beg 0 1230 . 1231) (nil tag-attr t 1230 . 1231) (nil tag-name "pclass" 1230 . 1231) (nil tag-type start 1230 . 1231) (nil font-lock-face web-mode-html-attr-name-face 1230 . 1231) (nil tag-name "pclass" 1225 . 1230) (nil tag-type start 1225 . 1230) (nil tag-name "pclass" 1224 . 1225) (nil tag-type start 1224 . 1225) (nil tag-name "pclass" 1220 . 1224) (nil tag-type start 1220 . 1224) (nil font-lock-face web-mode-html-tag-face 1220 . 1224) (nil tag-name "pclass" 1219 . 1220) (nil tag-type start 1219 . 1220) (nil font-lock-face web-mode-html-tag-face 1219 . 1220) (1219 . 1254)) nil (25819 13055 450393 174000) 0 nil])
([nil nil ((1219 . 1220)) nil (25819 13055 450383 325000) 0 nil])
([nil nil ((#("right" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 1249) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5)) nil (25819 13055 450382 38000) 0 nil])
([nil nil ((1249 . 1255)) nil (25819 13055 450377 611000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1227) (undo-tree-id12 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1228) (undo-tree-id13 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1229) (undo-tree-id14 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1230) (undo-tree-id15 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1231) (undo-tree-id16 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1232) (undo-tree-id17 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1233) (undo-tree-id18 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1234) (undo-tree-id19 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1235) (undo-tree-id20 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1236) (undo-tree-id21 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1237) (undo-tree-id22 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1238) (undo-tree-id23 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1239) (undo-tree-id24 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1240) (undo-tree-id25 . -1) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1241) (undo-tree-id26 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -1242) (undo-tree-id27 . -1) 1243) nil (25819 13055 450372 886000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing)) . -1212) 1227) nil (25819 13055 450337 158000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1242 . 1243) (nil tag-attr t 1225 . 1243) (nil tag-name "p" 1225 . 1243) (nil tag-type start 1225 . 1243) (nil font-lock-face web-mode-html-attr-value-face 1225 . 1243) (1225 . 1243) (t 25819 13055 484068 452000)) nil (25819 13240 861573 7000) 0 nil])
([nil nil ((1243 . 1244)) nil (25819 13240 861564 891000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p")) . -1216) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 1217 (t 25819 13240 888663 441000)) nil (25819 13248 991428 754000) 0 nil])
([nil nil ((1216 . 1220)) nil (25819 13248 991422 796000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p")) . -1267) (undo-tree-id31 . -1) 1268) nil (25819 13248 991419 946000) 0 nil])
([nil nil ((1267 . 1271)) nil (25819 13248 991342 322000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1247) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1248) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1249) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1250) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1251) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1252) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 1253 (t 25819 13249 20690 382000)) nil (25819 13257 815781 975000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1247) (t 25819 13257 840719 665000)) nil (25819 13293 3664 620000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1246) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 1247) nil (25819 13293 3661 489000) 0 nil])
([nil nil ((1247 . 1256)) nil (25819 13293 3649 938000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1273 . 1274) (nil tag-attr t 1255 . 1274) (nil tag-name "span" 1255 . 1274) (nil tag-type start 1255 . 1274) (nil font-lock-face web-mode-html-attr-value-face 1255 . 1274) (1255 . 1274)) nil (25819 13293 3642 560000) 0 nil])
([nil nil ((#("d-none" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (t 25819 13293 40837 84000)) nil (25819 13304 233894 199000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228)) nil (25819 13304 233875 473000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t rear-nonsticky t)) . 1228) (undo-tree-id52 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . 1228) (t 25819 13304 264874 718000)) nil (25819 13311 395871 686000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "span")) . -1220) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -1221) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr-end 0 tag-attr t)) . -1222) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr-end 0 tag-attr t)) . -1223) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr-end 0 tag-attr t)) . -1224) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr-end 0 tag-attr t)) . -1225) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t)) . -1226) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t)) . -1227) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t rear-nonsticky t)) . -1228) (undo-tree-id93 . -1) 1229 (t 25819 13311 424898 761000)) nil (25819 13319 628521 425000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "s")) . -1216) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "sp")) . -1217) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "spa")) . -1218) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span")) . -1219) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 1220 (t 25819 13319 660926 457000)) nil (25819 13359 698567 320000) 0 nil])
([nil nil ((1216 . 1219)) nil (25819 13359 698520 839000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "s")) . -1254) (undo-tree-id94 . -1) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "sp")) . -1255) (undo-tree-id95 . -1) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "spa")) . -1256) (undo-tree-id96 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span")) . -1257) (undo-tree-id97 . -1) 1258) nil (25819 13359 698517 696000) 0 nil])
([nil nil ((1254 . 1257)) nil (25819 13359 698499 828000) 0 nil])
([nil nil ((1220 . 1229) (t 25819 13359 729061 763000)) nil (25819 13383 200537 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1237 . 1238) (nil tag-attr t 1228 . 1238) (nil tag-name "div" 1228 . 1238) (nil tag-type start 1228 . 1238) (nil font-lock-face web-mode-html-attr-value-face 1228 . 1238) (nil tag-attr t 1227 . 1228) (nil tag-name "div" 1227 . 1228) (nil tag-type start 1227 . 1228) (nil font-lock-face web-mode-html-attr-value-face 1227 . 1228) (1227 . 1238)) nil (25819 13383 200529 426000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1229) (undo-tree-id118 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1230) (undo-tree-id119 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1231) (undo-tree-id120 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1232) (undo-tree-id121 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1233) (undo-tree-id122 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1234) (undo-tree-id123 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1235) (undo-tree-id124 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1236) (undo-tree-id125 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . -1237) (undo-tree-id126 . -1) 1238 (t 25819 13383 229141 528000)) nil (25819 13389 913109 654000) 0 nil])
([nil nil ((1229 . 1233)) nil (25819 13389 913084 497000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1227) (undo-tree-id127 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1228) (undo-tree-id128 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1229) (undo-tree-id129 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1230) (undo-tree-id130 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1231) (undo-tree-id131 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1232) (undo-tree-id132 . -1) 1233 (t 25819 13389 945164 372000)) nil (25819 13393 563239 989000) 0 nil])
([nil nil ((#("  <div class=\"\" style=\"text-align: center;\">heyo</div>" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 6 7 (tag-type start tag-name "div") 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 8 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 15 16 (tag-type start tag-name "div") 16 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 17 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 23 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 33 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 36 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 42 43 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 43 44 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 49 50 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 50 53 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1213) (undo-tree-id167 . -54) (undo-tree-id168 . -18) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -23) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -14) (undo-tree-id176 . -54) (t 25819 13393 593176 789000)) nil (25819 13436 382878 93000) 0 nil])
([nil nil (("
" . -1210) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) ("
" . -1211) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) ("
" . -1212) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 1213) nil (25819 13436 382865 28000) 0 nil])
([nil nil ((1446 . 1448) ("  " . 1445) (undo-tree-id133 . -2) (1445 . 1448) (#("  " 0 2 (face whitespace-trailing)) . 1444) (1444 . 1446) (1444 . 1445)) nil (25819 13436 382782 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1498 . 1499) (nil tag-name "div" 1498 . 1499) (nil tag-type end 1498 . 1499) (nil tag-end t 1498 . 1499) (nil font-lock-face web-mode-html-tag-bracket-face 1498 . 1499) (nil tag-name "div" 1495 . 1498) (nil tag-type end 1495 . 1498) (nil font-lock-face web-mode-html-tag-face 1495 . 1498) (nil tag-name "div" 1494 . 1495) (nil tag-type end 1494 . 1495) (nil font-lock-face web-mode-html-tag-bracket-face 1494 . 1495) (nil tag-name "div" 1493 . 1494) (nil tag-type end 1493 . 1494) (nil tag-beg 20 1493 . 1494) (nil font-lock-face web-mode-html-tag-bracket-face 1493 . 1494) (nil tag-name "div" 1488 . 1489) (nil tag-type start 1488 . 1489) (nil tag-end t 1488 . 1489) (nil font-lock-face web-mode-html-tag-bracket-face 1488 . 1489) (nil tag-attr t 1487 . 1488) (nil tag-attr-end 5 1487 . 1488) (nil tag-name "div" 1487 . 1488) (nil tag-type start 1487 . 1488) (nil font-lock-face web-mode-html-attr-value-face 1487 . 1488) (nil rear-nonsticky t 1486 . 1487) (nil tag-attr t 1486 . 1487) (nil tag-name "div" 1486 . 1487) (nil tag-type start 1486 . 1487) (nil font-lock-face web-mode-html-attr-value-face 1486 . 1487) (nil tag-attr t 1481 . 1486) (nil tag-name "div" 1481 . 1486) (nil tag-type start 1481 . 1486) (nil font-lock-face web-mode-html-attr-value-face 1481 . 1486) (nil tag-attr t 1480 . 1481) (nil tag-name "div" 1480 . 1481) (nil tag-type start 1480 . 1481) (nil font-lock-face web-mode-html-attr-value-face 1480 . 1481) (nil tag-attr t 1479 . 1480) (nil tag-name "div" 1479 . 1480) (nil tag-type start 1479 . 1480) (nil font-lock-face web-mode-html-attr-value-face 1479 . 1480) (nil tag-attr t 1478 . 1479) (nil tag-name "div" 1478 . 1479) (nil tag-type start 1478 . 1479) (nil font-lock-face web-mode-html-attr-value-face 1478 . 1479) (nil tag-attr t 1468 . 1478) (nil tag-name "div" 1468 . 1478) (nil tag-type start 1468 . 1478) (nil font-lock-face web-mode-html-attr-value-face 1468 . 1478) (nil tag-attr t 1467 . 1468) (nil tag-name "div" 1467 . 1468) (nil tag-type start 1467 . 1468) (nil font-lock-face web-mode-html-attr-value-face 1467 . 1468) (nil tag-attr t 1466 . 1467) (nil tag-name "div" 1466 . 1467) (nil tag-type start 1466 . 1467) (nil font-lock-face web-mode-html-attr-equal-face 1466 . 1467) (nil tag-attr t 1465 . 1466) (nil tag-name "div" 1465 . 1466) (nil tag-type start 1465 . 1466) (nil font-lock-face web-mode-html-attr-name-face 1465 . 1466) (nil tag-attr t 1464 . 1465) (nil tag-name "div" 1464 . 1465) (nil tag-type start 1464 . 1465) (nil font-lock-face web-mode-html-attr-name-face 1464 . 1465) (nil tag-attr t 1463 . 1464) (nil tag-name "div" 1463 . 1464) (nil tag-type start 1463 . 1464) (nil font-lock-face web-mode-html-attr-name-face 1463 . 1464) (nil tag-attr t 1462 . 1463) (nil tag-name "div" 1462 . 1463) (nil tag-type start 1462 . 1463) (nil font-lock-face web-mode-html-attr-name-face 1462 . 1463) (nil tag-attr-beg 0 1461 . 1462) (nil tag-attr t 1461 . 1462) (nil tag-name "div" 1461 . 1462) (nil tag-type start 1461 . 1462) (nil font-lock-face web-mode-html-attr-name-face 1461 . 1462) (nil tag-name "div" 1460 . 1461) (nil tag-type start 1460 . 1461) (nil tag-attr t 1459 . 1460) (nil tag-attr-end 5 1459 . 1460) (nil tag-name "div" 1459 . 1460) (nil tag-type start 1459 . 1460) (nil font-lock-face web-mode-html-attr-value-face 1459 . 1460) (nil tag-attr t 1458 . 1459) (nil tag-name "div" 1458 . 1459) (nil tag-type start 1458 . 1459) (nil font-lock-face web-mode-html-attr-value-face 1458 . 1459) (nil tag-attr t 1457 . 1458) (nil tag-name "div" 1457 . 1458) (nil tag-type start 1457 . 1458) (nil font-lock-face web-mode-html-attr-equal-face 1457 . 1458) (nil tag-attr t 1453 . 1457) (nil tag-name "div" 1453 . 1457) (nil tag-type start 1453 . 1457) (nil font-lock-face web-mode-html-attr-name-face 1453 . 1457) (nil tag-attr-beg 0 1452 . 1453) (nil tag-attr t 1452 . 1453) (nil tag-name "div" 1452 . 1453) (nil tag-type start 1452 . 1453) (nil font-lock-face web-mode-html-attr-name-face 1452 . 1453) (nil tag-name "div" 1451 . 1452) (nil tag-type start 1451 . 1452) (nil tag-name "div" 1448 . 1451) (nil tag-type start 1448 . 1451) (nil font-lock-face web-mode-html-tag-face 1448 . 1451) (nil tag-name "div" 1447 . 1448) (nil tag-type start 1447 . 1448) (nil tag-beg 17 1447 . 1448) (nil font-lock-face web-mode-html-tag-bracket-face 1447 . 1448) (1445 . 1499)) nil (25819 13436 382765 303000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing)) . -1500) 1499) nil (25819 13436 382736 210000) 0 nil])
([nil nil ((#("class=\"\" " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 8 9 (tag-type start tag-name "div")) . 1452) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (t 25819 13436 413322 983000)) nil (25819 13461 322551 153000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -1451) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 1452) nil (25819 13461 322547 648000) 0 nil])
([nil nil ((1451 . 1452)) nil (25819 13461 322544 381000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "d")) . -1448) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("i" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "di")) . -1449) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("v" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div")) . -1450) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 1451) nil (25819 13461 322542 594000) 0 nil])
([nil nil ((1448 . 1452)) nil (25819 13461 322534 13000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "d")) . -1487) (undo-tree-id177 . -1) (#("i" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "di")) . -1488) (undo-tree-id178 . -1) (#("v" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div")) . -1489) (undo-tree-id179 . -1) 1490) nil (25819 13461 322530 987000) 0 nil])
([nil nil ((1487 . 1491)) nil (25819 13461 322492 630000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "s")) . -1448) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "sp")) . -1449) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "spa")) . -1450) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span")) . -1451) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 1452 (t 25819 13461 353408 475000)) nil (25819 13473 463372 200000) 0 nil])
([nil nil ((1448 . 1449)) nil (25819 13473 463357 587000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "n")) . 1484) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "an")) . 1484) (undo-tree-id190 . -1) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "pan")) . 1484) (#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span")) . 1484)) nil (25819 13473 463354 637000) 0 nil])
([nil nil ((1484 . 1485)) nil (25819 13473 463338 895000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p")) . -1448) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 1449 (t 25819 13473 493450 173000)) nil (25819 13486 946483 527000) 0 nil])
([nil nil ((1448 . 1451)) nil (25819 13486 946479 599000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p")) . -1486) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 1487) nil (25819 13486 946477 51000) 0 nil])
([nil nil ((1486 . 1489)) nil (25819 13486 946455 593000) 0 nil])
([nil nil (("h" . -1480) (undo-tree-id207 . -1) ("e" . -1481) (undo-tree-id208 . -1) ("y" . -1482) (undo-tree-id209 . -1) ("o" . -1483) (undo-tree-id210 . -1) 1484 (t 25819 13486 981496 556000)) nil (25819 13509 286602 149000) 0 nil])
([nil nil ((1481 . 1483) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -1481) (1481 . 1482) (1480 . 1482) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -1480) (1480 . 1481)) nil (25819 13509 286585 901000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1502 . 1503) (nil block-side t 1492 . 1503) (nil face web-mode-variable-name-face 1492 . 1503) (nil block-side t 1491 . 1492) (nil block-side t 1482 . 1491) (nil face web-mode-variable-name-face 1482 . 1491) (1482 . 1503)) nil (25819 13509 286578 282000) 0 nil])
([nil nil ((1480 . 1482) (t 25819 13509 317573 500000)) nil (25819 13545 847347 633000) 0 nil])
([nil nil ((1480 . 1481)) nil (25819 13545 847346 216000) 0 nil])
([nil nil ((1481 . 1483) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -1481) (1481 . 1482) (1480 . 1482) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -1480) (1480 . 1481)) nil (25819 13545 847343 756000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1495 . 1496) (nil block-side t 1492 . 1496) (nil face web-mode-variable-name-face 1492 . 1496) (nil block-side t 1491 . 1492) (nil block-side t 1482 . 1491) (nil face web-mode-variable-name-face 1482 . 1491) (1482 . 1496)) nil (25819 13545 847335 824000) 0 nil])
([nil nil ((1459 . 1477) (t 25819 13545 893699 795000)) nil (25819 13640 577937 590000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -1472) (undo-tree-id211 . -1) 1473 (t 25819 13640 617926 617000)) nil (25819 13646 353576 307000) 0 nil])
([nil nil ((1472 . 1474)) nil (25819 13646 353561 752000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1015 . 1016) (nil tag-attr t 1009 . 1016) (nil tag-name "a" 1009 . 1016) (nil tag-type start 1009 . 1016) (nil font-lock-face web-mode-html-attr-name-face 1009 . 1016) (nil tag-attr-beg 0 1008 . 1009) (nil tag-attr t 1008 . 1009) (nil tag-name "a" 1008 . 1009) (nil tag-type start 1008 . 1009) (nil font-lock-face web-mode-html-attr-name-face 1008 . 1009) (1008 . 1016) (t 25819 13646 393934 928000)) nil (25819 13773 925847 586000) 0 nil])
([nil nil ((1016 . 1017)) nil (25819 13773 925836 764000) 0 nil])
([nil nil ((#("disabled" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 1 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr-end 0 tag-attr t rear-nonsticky t)) . 1008) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (t 25819 13773 982146 525000)) nil (25819 14111 377120 324000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "a")) . -1007) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 1008) nil (25819 14111 377114 382000) 0 nil])
([nil nil ((1015 . 1024)) nil (25819 14111 377093 41000) 0 nil])
([nil nil ((#("btn-primary" 0 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . 1028) (undo-tree-id250 . -11) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (t 25819 14111 382899 307000)) nil (25819 14178 508665 241000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1027) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 1028) nil (25819 14178 508655 40000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1034 . 1035) (nil tag-attr t 1024 . 1035) (nil tag-name "a" 1024 . 1035) (nil tag-type start 1024 . 1035) (nil font-lock-face web-mode-html-attr-value-face 1024 . 1035) (1024 . 1035) (t 25819 14178 515072 678000)) nil (25819 14350 476905 832000) 0 nil])
([nil nil ((1035 . 1036)) nil (25819 14350 476897 239000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1023) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1024) (undo-tree-id255 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1025) (undo-tree-id256 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1026) (undo-tree-id257 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1027) (undo-tree-id258 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1028) (undo-tree-id259 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1029) (undo-tree-id260 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1030) (undo-tree-id261 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1031) (undo-tree-id262 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1032) (undo-tree-id263 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1033) (undo-tree-id264 . -1) (#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t rear-nonsticky t)) . -1034) (undo-tree-id265 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1035) (undo-tree-id266 . -1) 1036 (t 25819 14350 483541 32000)) nil (25819 14374 859870 327000) 0 nil])
([nil nil ((1023 . 1024)) nil (25819 14374 859840 723000) 0 nil])
([nil nil ((1015 . 1019)) nil (25819 14374 859834 310000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1015) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1016) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1017) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1018) (undo-tree-id292 . -1) 1019 (t 25819 14374 867609 816000)) nil (25819 14786 125152 497000) 0 nil])
([nil nil ((1209 . 1211) ("  " . 1208) (undo-tree-id285 . -2) (1207 . 1211)) nil (25819 14786 125140 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1449 . 1450) (nil block-side t 1449 . 1450) (nil block-end t 1449 . 1450) (nil block-token delimiter-end 1449 . 1450) (nil font-lock-face web-mode-block-delimiter-face 1449 . 1450) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1449 . 1450) (nil block-side t 1448 . 1449) (nil block-token delimiter-end 1448 . 1449) (nil font-lock-face web-mode-block-delimiter-face 1448 . 1449) (nil block-side t 1447 . 1448) (nil block-side t 1442 . 1447) (nil face web-mode-block-control-face 1442 . 1447) (nil block-side t 1441 . 1442) (nil block-side t 1440 . 1441) (nil block-token delimiter-beg 1440 . 1441) (nil font-lock-face web-mode-block-delimiter-face 1440 . 1441) (nil block-beg 0 1439 . 1440) (nil block-controls 0 1439 . 1440) (nil block-side t 1439 . 1440) (nil block-token delimiter-beg 1439 . 1440) (nil font-lock-face web-mode-block-delimiter-face 1439 . 1440) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1439 . 1440) (nil tag-name "a" 1435 . 1436) (nil tag-type end 1435 . 1436) (nil tag-end t 1435 . 1436) (nil font-lock-face web-mode-html-tag-bracket-face 1435 . 1436) (nil tag-name "a" 1434 . 1435) (nil tag-type end 1434 . 1435) (nil font-lock-face web-mode-html-tag-face 1434 . 1435) (nil tag-name "a" 1433 . 1434) (nil tag-type end 1433 . 1434) (nil font-lock-face web-mode-html-tag-bracket-face 1433 . 1434) (nil tag-name "a" 1432 . 1433) (nil tag-type end 1432 . 1433) (nil tag-beg 20 1432 . 1433) (nil font-lock-face web-mode-html-tag-bracket-face 1432 . 1433) (nil tag-name "span" 1431 . 1432) (nil tag-type end 1431 . 1432) (nil tag-end t 1431 . 1432) (nil font-lock-face web-mode-html-tag-bracket-face 1431 . 1432) (nil tag-name "span" 1427 . 1431) (nil tag-type end 1427 . 1431) (nil font-lock-face web-mode-html-tag-face 1427 . 1431) (nil tag-name "span" 1426 . 1427) (nil tag-type end 1426 . 1427) (nil font-lock-face web-mode-html-tag-bracket-face 1426 . 1427) (nil tag-name "span" 1425 . 1426) (nil tag-type end 1425 . 1426) (nil tag-beg 20 1425 . 1426) (nil font-lock-face web-mode-html-tag-bracket-face 1425 . 1426) (nil tag-name "span" 1418 . 1419) (nil tag-type start 1418 . 1419) (nil tag-end t 1418 . 1419) (nil font-lock-face web-mode-html-tag-bracket-face 1418 . 1419) (nil tag-attr t 1417 . 1418) (nil tag-attr-end 5 1417 . 1418) (nil tag-name "span" 1417 . 1418) (nil tag-type start 1417 . 1418) (nil font-lock-face web-mode-html-attr-value-face 1417 . 1418) (nil tag-attr t 1398 . 1417) (nil tag-name "span" 1398 . 1417) (nil tag-type start 1398 . 1417) (nil font-lock-face web-mode-html-attr-value-face 1398 . 1417) (nil tag-attr t 1397 . 1398) (nil tag-name "span" 1397 . 1398) (nil tag-type start 1397 . 1398) (nil font-lock-face web-mode-html-attr-equal-face 1397 . 1398) (nil tag-attr t 1393 . 1397) (nil tag-name "span" 1393 . 1397) (nil tag-type start 1393 . 1397) (nil font-lock-face web-mode-html-attr-name-face 1393 . 1397) (nil tag-attr-beg 0 1392 . 1393) (nil tag-attr t 1392 . 1393) (nil tag-name "span" 1392 . 1393) (nil tag-type start 1392 . 1393) (nil font-lock-face web-mode-html-attr-name-face 1392 . 1393) (nil tag-name "span" 1391 . 1392) (nil tag-type start 1391 . 1392) (nil tag-name "span" 1387 . 1391) (nil tag-type start 1387 . 1391) (nil font-lock-face web-mode-html-tag-face 1387 . 1391) (nil tag-name "span" 1386 . 1387) (nil tag-type start 1386 . 1387) (nil tag-beg 17 1386 . 1387) (nil font-lock-face web-mode-html-tag-bracket-face 1386 . 1387) (nil font-lock-face (web-mode-html-entity-face) 1370 . 1376) (nil tag-name "a" 1369 . 1370) (nil tag-type start 1369 . 1370) (nil tag-end t 1369 . 1370) (nil font-lock-face web-mode-html-tag-bracket-face 1369 . 1370) (nil tag-attr t 1368 . 1369) (nil tag-attr-end 4 1368 . 1369) (nil tag-name "a" 1368 . 1369) (nil tag-type start 1368 . 1369) (nil font-lock-face web-mode-html-attr-value-face 1368 . 1369) (nil block-side t 1367 . 1368) (nil block-end t 1367 . 1368) (nil block-token delimiter-end 1367 . 1368) (nil tag-attr t 1367 . 1368) (nil tag-name "a" 1367 . 1368) (nil tag-type start 1367 . 1368) (nil font-lock-face web-mode-block-delimiter-face 1367 . 1368) (nil block-side t 1366 . 1367) (nil block-token delimiter-end 1366 . 1367) (nil tag-attr t 1366 . 1367) (nil tag-name "a" 1366 . 1367) (nil tag-type start 1366 . 1367) (nil font-lock-face web-mode-block-delimiter-face 1366 . 1367) (nil block-side t 1365 . 1366) (nil tag-attr t 1365 . 1366) (nil tag-name "a" 1365 . 1366) (nil tag-type start 1365 . 1366) (nil block-side t 1362 . 1365) (nil block-token string 1362 . 1365) (nil tag-attr t 1362 . 1365) (nil tag-name "a" 1362 . 1365) (nil tag-type start 1362 . 1365) (nil font-lock-face web-mode-block-string-face 1362 . 1365) (nil block-side t 1360 . 1362) (nil tag-attr t 1360 . 1362) (nil tag-name "a" 1360 . 1362) (nil tag-type start 1360 . 1362) (nil block-side t 1356 . 1360) (nil block-token string 1356 . 1360) (nil tag-attr t 1356 . 1360) (nil tag-name "a" 1356 . 1360) (nil tag-type start 1356 . 1360) (nil font-lock-face web-mode-block-string-face 1356 . 1360) (nil block-side t 1354 . 1356) (nil tag-attr t 1354 . 1356) (nil tag-name "a" 1354 . 1356) (nil tag-type start 1354 . 1356) (nil block-side t 1347 . 1354) (nil tag-attr t 1347 . 1354) (nil tag-name "a" 1347 . 1354) (nil tag-type start 1347 . 1354) (nil face web-mode-filter-face 1347 . 1354) (nil block-side t 1344 . 1347) (nil tag-attr t 1344 . 1347) (nil tag-name "a" 1344 . 1347) (nil tag-type start 1344 . 1347) (nil block-side t 1337 . 1344) (nil tag-attr t 1337 . 1344) (nil tag-name "a" 1337 . 1344) (nil tag-type start 1337 . 1344) (nil face web-mode-variable-name-face 1337 . 1344) (nil block-side t 1336 . 1337) (nil tag-attr t 1336 . 1337) (nil tag-name "a" 1336 . 1337) (nil tag-type start 1336 . 1337) (nil block-side t 1332 . 1336) (nil tag-attr t 1332 . 1336) (nil tag-name "a" 1332 . 1336) (nil tag-type start 1332 . 1336) (nil face web-mode-variable-name-face 1332 . 1336) (nil block-side t 1330 . 1332) (nil tag-attr t 1330 . 1332) (nil tag-name "a" 1330 . 1332) (nil tag-type start 1330 . 1332) (nil block-side t 1323 . 1330) (nil tag-attr t 1323 . 1330) (nil tag-name "a" 1323 . 1330) (nil tag-type start 1323 . 1330) (nil face web-mode-filter-face 1323 . 1330) (nil block-side t 1320 . 1323) (nil tag-attr t 1320 . 1323) (nil tag-name "a" 1320 . 1323) (nil tag-type start 1320 . 1323) (nil block-side t 1302 . 1320) (nil tag-attr t 1302 . 1320) (nil tag-name "a" 1302 . 1320) (nil tag-type start 1302 . 1320) (nil face web-mode-variable-name-face 1302 . 1320) (nil block-side t 1301 . 1302) (nil tag-attr t 1301 . 1302) (nil tag-name "a" 1301 . 1302) (nil tag-type start 1301 . 1302) (nil block-side t 1292 . 1301) (nil tag-attr t 1292 . 1301) (nil tag-name "a" 1292 . 1301) (nil tag-type start 1292 . 1301) (nil face web-mode-variable-name-face 1292 . 1301) (nil block-side t 1291 . 1292) (nil tag-attr t 1291 . 1292) (nil tag-name "a" 1291 . 1292) (nil tag-type start 1291 . 1292) (nil block-side t 1290 . 1291) (nil block-token delimiter-beg 1290 . 1291) (nil tag-attr t 1290 . 1291) (nil tag-name "a" 1290 . 1291) (nil tag-type start 1290 . 1291) (nil font-lock-face web-mode-block-delimiter-face 1290 . 1291) (nil block-beg 0 1289 . 1290) (nil block-controls 0 1289 . 1290) (nil block-side t 1289 . 1290) (nil block-token delimiter-beg 1289 . 1290) (nil tag-attr t 1289 . 1290) (nil tag-name "a" 1289 . 1290) (nil tag-type start 1289 . 1290) (nil font-lock-face web-mode-block-delimiter-face 1289 . 1290) (nil tag-attr t 1288 . 1289) (nil tag-name "a" 1288 . 1289) (nil tag-type start 1288 . 1289) (nil font-lock-face web-mode-html-attr-value-face 1288 . 1289) (nil tag-attr t 1287 . 1288) (nil tag-name "a" 1287 . 1288) (nil tag-type start 1287 . 1288) (nil font-lock-face web-mode-html-attr-equal-face 1287 . 1288) (nil tag-attr t 1284 . 1287) (nil tag-name "a" 1284 . 1287) (nil tag-type start 1284 . 1287) (nil font-lock-face web-mode-html-attr-name-face 1284 . 1287) (nil tag-attr-beg 0 1283 . 1284) (nil tag-attr t 1283 . 1284) (nil tag-name "a" 1283 . 1284) (nil tag-type start 1283 . 1284) (nil font-lock-face web-mode-html-attr-name-face 1283 . 1284) (nil tag-name "a" 1282 . 1283) (nil tag-type start 1282 . 1283) (nil tag-attr t 1281 . 1282) (nil tag-attr-end 5 1281 . 1282) (nil tag-name "a" 1281 . 1282) (nil tag-type start 1281 . 1282) (nil font-lock-face web-mode-html-attr-value-face 1281 . 1282) (nil tag-attr t 1267 . 1281) (nil tag-name "a" 1267 . 1281) (nil tag-type start 1267 . 1281) (nil font-lock-face web-mode-html-attr-value-face 1267 . 1281) (nil tag-attr t 1257 . 1267) (nil tag-name "a" 1257 . 1267) (nil tag-type start 1257 . 1267) (nil font-lock-face web-mode-html-attr-value-face 1257 . 1267) (nil tag-attr t 1256 . 1257) (nil tag-name "a" 1256 . 1257) (nil tag-type start 1256 . 1257) (nil font-lock-face web-mode-html-attr-equal-face 1256 . 1257) (nil tag-attr t 1252 . 1256) (nil tag-name "a" 1252 . 1256) (nil tag-type start 1252 . 1256) (nil font-lock-face web-mode-html-attr-name-face 1252 . 1256) (nil tag-attr-beg 0 1251 . 1252) (nil tag-attr t 1251 . 1252) (nil tag-name "a" 1251 . 1252) (nil tag-type start 1251 . 1252) (nil font-lock-face web-mode-html-attr-name-face 1251 . 1252) (nil tag-name "a" 1250 . 1251) (nil tag-type start 1250 . 1251) (nil tag-name "a" 1249 . 1250) (nil tag-type start 1249 . 1250) (nil font-lock-face web-mode-html-tag-face 1249 . 1250) (nil tag-name "a" 1248 . 1249) (nil tag-type start 1248 . 1249) (nil tag-beg 17 1248 . 1249) (nil font-lock-face web-mode-html-tag-bracket-face 1248 . 1249) (nil block-side t 1244 . 1245) (nil block-end t 1244 . 1245) (nil block-token delimiter-end 1244 . 1245) (nil font-lock-face web-mode-block-delimiter-face 1244 . 1245) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1244 . 1245) (nil block-side t 1243 . 1244) (nil block-token delimiter-end 1243 . 1244) (nil font-lock-face web-mode-block-delimiter-face 1243 . 1244) (nil block-side t 1242 . 1243) (nil block-side t 1219 . 1242) (nil face web-mode-variable-name-face 1219 . 1242) (nil block-side t 1218 . 1219) (nil block-side t 1216 . 1218) (nil face web-mode-block-control-face 1216 . 1218) (nil block-side t 1215 . 1216) (nil block-side t 1214 . 1215) (nil block-token delimiter-beg 1214 . 1215) (nil font-lock-face web-mode-block-delimiter-face 1214 . 1215) (nil block-beg 0 1213 . 1214) (nil block-controls 0 1213 . 1214) (nil block-side t 1213 . 1214) (nil block-token delimiter-beg 1213 . 1214) (nil font-lock-face web-mode-block-delimiter-face 1213 . 1214) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1213 . 1214) (1211 . 1450)) nil (25819 14786 125123 460000) 0 nil])
([nil nil ((1216 . 1221)) nil (25819 14786 125053 420000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("u" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("o" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("v" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("e" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("r" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("p" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("." 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("r" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("o" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("t" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("a" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("n" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("g" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("a" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("p" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#(" " 0 1 (block-side t)) . 1221) (#("f" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 1221)) nil (25819 14786 125049 785000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1221) (#("e" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("g" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("a" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("p" 0 1 (face web-mode-variable-name-face block-side t)) . 1221) (#("_" 0 1 (face web-mode-variable-name-face block-side t)) . 1221)) nil (25819 14786 125043 178000) 0 nil])
([nil nil (("
" . 1208) (undo-tree-id284 . -1)) nil (25819 14786 125040 428000) 0 nil])
([nil nil (("    " . -1208) (undo-tree-id283 . -2)) nil (25819 14786 125037 793000) 0 nil])
([nil nil ((1208 . 1210)) nil (25819 14786 125034 881000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1015) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1016) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1017) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1018) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1019) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1020) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1021) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1022) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 1023) nil (25819 14786 125030 108000) 0 nil])
([nil nil ((1015 . 1026)) nil (25819 14786 124993 398000) 0 nil])
([nil nil ((#("  {% endif %}" 2 3 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 3 4 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 4 5 (block-side t) 5 10 (face web-mode-block-control-face block-side t) 10 11 (block-side t) 11 12 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 12 13 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 1197) (undo-tree-id300 . -13) (undo-tree-id301 . -13) (undo-tree-id302 . -13) (undo-tree-id303 . -13) (undo-tree-id304 . -13) (undo-tree-id305 . -13) (t 25819 14786 128830 730000)) nil (25819 14828 281082 199000) 0 nil])
([nil nil (("
" . -1196) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 1197) nil (25819 14828 281069 667000) 0 nil])
([nil nil ((1636 . 1640) (1449 . 1451) (1633 . 1634) (t 25819 14828 288960 643000)) nil (25819 14879 413953 408000) 0 nil])
([nil nil ((1640 . 1641)) nil (25819 14879 413951 561000) 0 nil])
([nil nil (("¥" . -1640) (undo-tree-id306 . -1) 1641) nil (25819 14879 413950 114000) 0 nil])
([nil nil ((1641 . 1643) (1640 . 1642) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -1640) (1640 . 1641)) nil (25819 14879 413939 550000) 0 nil])
([nil nil ((1643 . 1648) (1642 . 1646)) nil (25819 14879 413937 403000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) block-side t)) . 1648) (#("%" 0 1 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t)) . 1648) (#(" " 0 1 (block-side t)) . 1648)) nil (25819 14879 413935 273000) 0 nil])
([nil nil ((1649 . 1653) ("  " . -1638) (1650 . 1651)) nil (25819 14879 413932 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1836 . 1837) (nil tag-name "a" 1836 . 1837) (nil tag-type end 1836 . 1837) (nil tag-end t 1836 . 1837) (nil font-lock-face web-mode-html-tag-bracket-face 1836 . 1837) (nil tag-name "a" 1835 . 1836) (nil tag-type end 1835 . 1836) (nil font-lock-face web-mode-html-tag-face 1835 . 1836) (nil tag-name "a" 1834 . 1835) (nil tag-type end 1834 . 1835) (nil font-lock-face web-mode-html-tag-bracket-face 1834 . 1835) (nil tag-name "a" 1833 . 1834) (nil tag-type end 1833 . 1834) (nil tag-beg 20 1833 . 1834) (nil font-lock-face web-mode-html-tag-bracket-face 1833 . 1834) (nil font-lock-face (web-mode-html-entity-face) 1827 . 1833) (nil tag-name "span" 1825 . 1826) (nil tag-type end 1825 . 1826) (nil tag-end t 1825 . 1826) (nil font-lock-face web-mode-html-tag-bracket-face 1825 . 1826) (nil tag-name "span" 1821 . 1825) (nil tag-type end 1821 . 1825) (nil font-lock-face web-mode-html-tag-face 1821 . 1825) (nil tag-name "span" 1820 . 1821) (nil tag-type end 1820 . 1821) (nil font-lock-face web-mode-html-tag-bracket-face 1820 . 1821) (nil tag-name "span" 1819 . 1820) (nil tag-type end 1819 . 1820) (nil tag-beg 20 1819 . 1820) (nil font-lock-face web-mode-html-tag-bracket-face 1819 . 1820) (nil tag-name "span" 1812 . 1813) (nil tag-type start 1812 . 1813) (nil tag-end t 1812 . 1813) (nil font-lock-face web-mode-html-tag-bracket-face 1812 . 1813) (nil tag-attr t 1811 . 1812) (nil tag-attr-end 5 1811 . 1812) (nil tag-name "span" 1811 . 1812) (nil tag-type start 1811 . 1812) (nil font-lock-face web-mode-html-attr-value-face 1811 . 1812) (nil tag-attr t 1801 . 1811) (nil tag-name "span" 1801 . 1811) (nil tag-type start 1801 . 1811) (nil font-lock-face web-mode-html-attr-value-face 1801 . 1811) (nil tag-attr t 1792 . 1801) (nil tag-name "span" 1792 . 1801) (nil tag-type start 1792 . 1801) (nil font-lock-face web-mode-html-attr-value-face 1792 . 1801) (nil tag-attr t 1791 . 1792) (nil tag-name "span" 1791 . 1792) (nil tag-type start 1791 . 1792) (nil font-lock-face web-mode-html-attr-equal-face 1791 . 1792) (nil tag-attr t 1787 . 1791) (nil tag-name "span" 1787 . 1791) (nil tag-type start 1787 . 1791) (nil font-lock-face web-mode-html-attr-name-face 1787 . 1791) (nil tag-attr-beg 0 1786 . 1787) (nil tag-attr t 1786 . 1787) (nil tag-name "span" 1786 . 1787) (nil tag-type start 1786 . 1787) (nil font-lock-face web-mode-html-attr-name-face 1786 . 1787) (nil tag-name "span" 1785 . 1786) (nil tag-type start 1785 . 1786) (nil tag-name "span" 1781 . 1785) (nil tag-type start 1781 . 1785) (nil font-lock-face web-mode-html-tag-face 1781 . 1785) (nil tag-name "span" 1780 . 1781) (nil tag-type start 1780 . 1781) (nil tag-beg 17 1780 . 1781) (nil font-lock-face web-mode-html-tag-bracket-face 1780 . 1781) (nil tag-name "a" 1774 . 1775) (nil tag-type start 1774 . 1775) (nil tag-end t 1774 . 1775) (nil font-lock-face web-mode-html-tag-bracket-face 1774 . 1775) (nil tag-attr t 1773 . 1774) (nil tag-attr-end 4 1773 . 1774) (nil tag-name "a" 1773 . 1774) (nil tag-type start 1773 . 1774) (nil font-lock-face web-mode-html-attr-value-face 1773 . 1774) (nil block-side t 1772 . 1773) (nil block-end t 1772 . 1773) (nil block-token delimiter-end 1772 . 1773) (nil tag-attr t 1772 . 1773) (nil tag-name "a" 1772 . 1773) (nil tag-type start 1772 . 1773) (nil font-lock-face web-mode-block-delimiter-face 1772 . 1773) (nil block-side t 1771 . 1772) (nil block-token delimiter-end 1771 . 1772) (nil tag-attr t 1771 . 1772) (nil tag-name "a" 1771 . 1772) (nil tag-type start 1771 . 1772) (nil font-lock-face web-mode-block-delimiter-face 1771 . 1772) (nil block-side t 1770 . 1771) (nil tag-attr t 1770 . 1771) (nil tag-name "a" 1770 . 1771) (nil tag-type start 1770 . 1771) (nil block-side t 1767 . 1770) (nil block-token string 1767 . 1770) (nil tag-attr t 1767 . 1770) (nil tag-name "a" 1767 . 1770) (nil tag-type start 1767 . 1770) (nil font-lock-face web-mode-block-string-face 1767 . 1770) (nil block-side t 1765 . 1767) (nil tag-attr t 1765 . 1767) (nil tag-name "a" 1765 . 1767) (nil tag-type start 1765 . 1767) (nil block-side t 1761 . 1765) (nil block-token string 1761 . 1765) (nil tag-attr t 1761 . 1765) (nil tag-name "a" 1761 . 1765) (nil tag-type start 1761 . 1765) (nil font-lock-face web-mode-block-string-face 1761 . 1765) (nil block-side t 1759 . 1761) (nil tag-attr t 1759 . 1761) (nil tag-name "a" 1759 . 1761) (nil tag-type start 1759 . 1761) (nil block-side t 1752 . 1759) (nil tag-attr t 1752 . 1759) (nil tag-name "a" 1752 . 1759) (nil tag-type start 1752 . 1759) (nil face web-mode-filter-face 1752 . 1759) (nil block-side t 1749 . 1752) (nil tag-attr t 1749 . 1752) (nil tag-name "a" 1749 . 1752) (nil tag-type start 1749 . 1752) (nil block-side t 1742 . 1749) (nil tag-attr t 1742 . 1749) (nil tag-name "a" 1742 . 1749) (nil tag-type start 1742 . 1749) (nil face web-mode-variable-name-face 1742 . 1749) (nil block-side t 1741 . 1742) (nil tag-attr t 1741 . 1742) (nil tag-name "a" 1741 . 1742) (nil tag-type start 1741 . 1742) (nil block-side t 1737 . 1741) (nil tag-attr t 1737 . 1741) (nil tag-name "a" 1737 . 1741) (nil tag-type start 1737 . 1741) (nil face web-mode-variable-name-face 1737 . 1741) (nil block-side t 1735 . 1737) (nil tag-attr t 1735 . 1737) (nil tag-name "a" 1735 . 1737) (nil tag-type start 1735 . 1737) (nil block-side t 1728 . 1735) (nil tag-attr t 1728 . 1735) (nil tag-name "a" 1728 . 1735) (nil tag-type start 1728 . 1735) (nil face web-mode-filter-face 1728 . 1735) (nil block-side t 1725 . 1728) (nil tag-attr t 1725 . 1728) (nil tag-name "a" 1725 . 1728) (nil tag-type start 1725 . 1728) (nil block-side t 1711 . 1725) (nil tag-attr t 1711 . 1725) (nil tag-name "a" 1711 . 1725) (nil tag-type start 1711 . 1725) (nil face web-mode-variable-name-face 1711 . 1725) (nil block-side t 1710 . 1711) (nil tag-attr t 1710 . 1711) (nil tag-name "a" 1710 . 1711) (nil tag-type start 1710 . 1711) (nil block-side t 1701 . 1710) (nil tag-attr t 1701 . 1710) (nil tag-name "a" 1701 . 1710) (nil tag-type start 1701 . 1710) (nil face web-mode-variable-name-face 1701 . 1710) (nil block-side t 1700 . 1701) (nil tag-attr t 1700 . 1701) (nil tag-name "a" 1700 . 1701) (nil tag-type start 1700 . 1701) (nil block-side t 1699 . 1700) (nil block-token delimiter-beg 1699 . 1700) (nil tag-attr t 1699 . 1700) (nil tag-name "a" 1699 . 1700) (nil tag-type start 1699 . 1700) (nil font-lock-face web-mode-block-delimiter-face 1699 . 1700) (nil block-beg 0 1698 . 1699) (nil block-controls 0 1698 . 1699) (nil block-side t 1698 . 1699) (nil block-token delimiter-beg 1698 . 1699) (nil tag-attr t 1698 . 1699) (nil tag-name "a" 1698 . 1699) (nil tag-type start 1698 . 1699) (nil font-lock-face web-mode-block-delimiter-face 1698 . 1699) (nil tag-attr t 1697 . 1698) (nil tag-name "a" 1697 . 1698) (nil tag-type start 1697 . 1698) (nil font-lock-face web-mode-html-attr-value-face 1697 . 1698) (nil tag-attr t 1696 . 1697) (nil tag-name "a" 1696 . 1697) (nil tag-type start 1696 . 1697) (nil font-lock-face web-mode-html-attr-equal-face 1696 . 1697) (nil tag-attr t 1693 . 1696) (nil tag-name "a" 1693 . 1696) (nil tag-type start 1693 . 1696) (nil font-lock-face web-mode-html-attr-name-face 1693 . 1696) (nil tag-attr-beg 0 1692 . 1693) (nil tag-attr t 1692 . 1693) (nil tag-name "a" 1692 . 1693) (nil tag-type start 1692 . 1693) (nil font-lock-face web-mode-html-attr-name-face 1692 . 1693) (nil tag-name "a" 1691 . 1692) (nil tag-type start 1691 . 1692) (nil tag-attr t 1690 . 1691) (nil tag-attr-end 5 1690 . 1691) (nil tag-name "a" 1690 . 1691) (nil tag-type start 1690 . 1691) (nil font-lock-face web-mode-html-attr-value-face 1690 . 1691) (nil tag-attr t 1662 . 1690) (nil tag-name "a" 1662 . 1690) (nil tag-type start 1662 . 1690) (nil font-lock-face web-mode-html-attr-value-face 1662 . 1690) (nil tag-attr t 1661 . 1662) (nil tag-name "a" 1661 . 1662) (nil tag-type start 1661 . 1662) (nil font-lock-face web-mode-html-attr-equal-face 1661 . 1662) (nil tag-attr t 1657 . 1661) (nil tag-name "a" 1657 . 1661) (nil tag-type start 1657 . 1661) (nil font-lock-face web-mode-html-attr-name-face 1657 . 1661) (nil tag-attr-beg 0 1656 . 1657) (nil tag-attr t 1656 . 1657) (nil tag-name "a" 1656 . 1657) (nil tag-type start 1656 . 1657) (nil font-lock-face web-mode-html-attr-name-face 1656 . 1657) (nil tag-name "a" 1655 . 1656) (nil tag-type start 1655 . 1656) (nil tag-name "a" 1654 . 1655) (nil tag-type start 1654 . 1655) (nil font-lock-face web-mode-html-tag-face 1654 . 1655) (nil tag-name "a" 1653 . 1654) (nil tag-type start 1653 . 1654) (nil tag-beg 17 1653 . 1654) (nil font-lock-face web-mode-html-tag-bracket-face 1653 . 1654) (1653 . 1837)) nil (25819 14879 413919 42000) 0 nil])
([nil nil ((1351 . 1353) (1216 . 1218) (1143 . 1145) (1005 . 1007) 968) nil (25819 14879 413855 498000) 0 nil])
([nil nil ((#("btn-primary" 0 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . 1675) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (t 25819 14879 425119 67000)) nil (25819 14901 793209 156000) 0 nil])
([nil nil ((1675 . 1684)) nil (25819 14901 793204 372000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1683) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 1684) nil (25819 14901 793198 853000) 0 nil])
([nil nil ((#("&rarr" 0 5 (font-lock-face (web-mode-html-entity-face))) . 1633) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (t 25819 14901 797188 648000)) nil (25819 15106 659657 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1640 . 1641) (nil font-lock-face (web-mode-html-entity-face) 1633 . 1641) (1633 . 1641)) nil (25819 15106 659652 127000) 0 nil])
([nil nil ((";" . 1641)) nil (25819 15106 659650 26000) 0 nil])
([nil nil ((#("&rarr;" 0 6 (font-lock-face (web-mode-html-entity-face))) . 1834) (undo-tree-id317 . -6) (undo-tree-id318 . -6)) nil (25819 15106 659647 201000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1841 . 1842) (nil font-lock-face (web-mode-html-entity-face) 1834 . 1842) (1834 . 1842)) nil (25819 15106 659558 825000) 0 nil])
([nil nil ((#("&larr" 0 5 (font-lock-face (web-mode-html-entity-face))) . 1340) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (t 25819 15106 665832 177000)) nil (25819 15260 687093 530000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1346 . 1347) (nil font-lock-face (web-mode-html-entity-face) 1340 . 1347) (1340 . 1347)) nil (25819 15260 687089 123000) 0 nil])
([nil nil ((#("&larr" 0 5 (font-lock-face (web-mode-html-entity-face))) . 1132) (undo-tree-id321 . -5) (undo-tree-id322 . -1) (undo-tree-id323 . -5) (undo-tree-id324 . -5)) nil (25819 15260 687086 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1138 . 1139) (nil font-lock-face (web-mode-html-entity-face) 1132 . 1139) (1132 . 1139)) nil (25819 15260 687046 997000) 0 nil])
([nil nil ((1994 . 1995) (t 25819 15260 694321 894000)) nil (25836 54530 937130 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2554 . 2555) (nil tag-name "script" 2554 . 2555) (nil tag-type end 2554 . 2555) (nil tag-end t 2554 . 2555) (nil font-lock-face web-mode-html-tag-bracket-face 2554 . 2555) (nil tag-name "script" 2548 . 2554) (nil tag-type end 2548 . 2554) (nil font-lock-face web-mode-html-tag-face 2548 . 2554) (nil tag-name "script" 2547 . 2548) (nil tag-type end 2547 . 2548) (nil font-lock-face web-mode-html-tag-bracket-face 2547 . 2548) (nil tag-name "script" 2546 . 2547) (nil tag-type end 2546 . 2547) (nil tag-beg 20 2546 . 2547) (nil font-lock-face web-mode-html-tag-bracket-face 2546 . 2547) (nil part-side javascript 2542 . 2546) (nil part-side javascript 2541 . 2542) (nil face (rainbow-delimiters-depth-1-face) 2541 . 2542) (nil part-side javascript 2535 . 2541) (nil part-side javascript 2534 . 2535) (nil face (rainbow-delimiters-depth-2-face) 2534 . 2535) (nil part-side javascript 2527 . 2534) (nil block-side t 2526 . 2527) (nil block-end t 2526 . 2527) (nil block-token delimiter-end 2526 . 2527) (nil part-side javascript 2526 . 2527) (nil font-lock-face web-mode-block-delimiter-face 2526 . 2527) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2526 . 2527) (nil block-side t 2525 . 2526) (nil block-token delimiter-end 2525 . 2526) (nil part-side javascript 2525 . 2526) (nil font-lock-face web-mode-block-delimiter-face 2525 . 2526) (nil block-side t 2524 . 2525) (nil part-side javascript 2524 . 2525) (nil block-side t 2519 . 2524) (nil part-side javascript 2519 . 2524) (nil face web-mode-block-control-face 2519 . 2524) (nil block-side t 2518 . 2519) (nil part-side javascript 2518 . 2519) (nil block-side t 2517 . 2518) (nil block-token delimiter-beg 2517 . 2518) (nil part-side javascript 2517 . 2518) (nil font-lock-face web-mode-block-delimiter-face 2517 . 2518) (nil block-beg 0 2516 . 2517) (nil block-controls 0 2516 . 2517) (nil block-side t 2516 . 2517) (nil block-token delimiter-beg 2516 . 2517) (nil part-side javascript 2516 . 2517) (nil font-lock-face web-mode-block-delimiter-face 2516 . 2517) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2516 . 2517) (nil part-side javascript 2506 . 2516) (nil part-side javascript 2505 . 2506) (nil part-token string 2505 . 2506) (nil syntax-table (15) 2505 . 2506) (nil font-lock-face web-mode-javascript-string-face 2505 . 2506) (nil block-side t 2504 . 2505) (nil block-end t 2504 . 2505) (nil block-token delimiter-end 2504 . 2505) (nil part-side javascript 2504 . 2505) (nil part-token string 2504 . 2505) (nil font-lock-face web-mode-block-delimiter-face 2504 . 2505) (nil block-side t 2503 . 2504) (nil block-token delimiter-end 2503 . 2504) (nil part-side javascript 2503 . 2504) (nil part-token string 2503 . 2504) (nil font-lock-face web-mode-block-delimiter-face 2503 . 2504) (nil block-side t 2502 . 2503) (nil part-side javascript 2502 . 2503) (nil part-token string 2502 . 2503) (nil block-side t 2499 . 2502) (nil block-token string 2499 . 2502) (nil part-side javascript 2499 . 2502) (nil part-token string 2499 . 2502) (nil font-lock-face web-mode-block-string-face 2499 . 2502) (nil block-side t 2497 . 2499) (nil part-side javascript 2497 . 2499) (nil part-token string 2497 . 2499) (nil block-side t 2493 . 2497) (nil block-token string 2493 . 2497) (nil part-side javascript 2493 . 2497) (nil part-token string 2493 . 2497) (nil font-lock-face web-mode-block-string-face 2493 . 2497) (nil block-side t 2491 . 2493) (nil part-side javascript 2491 . 2493) (nil part-token string 2491 . 2493) (nil block-side t 2484 . 2491) (nil part-side javascript 2484 . 2491) (nil part-token string 2484 . 2491) (nil face web-mode-filter-face 2484 . 2491) (nil block-side t 2481 . 2484) (nil part-side javascript 2481 . 2484) (nil part-token string 2481 . 2484) (nil block-side t 2474 . 2481) (nil part-side javascript 2474 . 2481) (nil part-token string 2474 . 2481) (nil face web-mode-variable-name-face 2474 . 2481) (nil block-side t 2473 . 2474) (nil part-side javascript 2473 . 2474) (nil part-token string 2473 . 2474) (nil block-side t 2469 . 2473) (nil part-side javascript 2469 . 2473) (nil part-token string 2469 . 2473) (nil face web-mode-variable-name-face 2469 . 2473) (nil block-side t 2467 . 2469) (nil part-side javascript 2467 . 2469) (nil part-token string 2467 . 2469) (nil block-side t 2460 . 2467) (nil part-side javascript 2460 . 2467) (nil part-token string 2460 . 2467) (nil face web-mode-filter-face 2460 . 2467) (nil block-side t 2457 . 2460) (nil part-side javascript 2457 . 2460) (nil part-token string 2457 . 2460) (nil block-side t 2454 . 2457) (nil part-side javascript 2454 . 2457) (nil part-token string 2454 . 2457) (nil face web-mode-variable-name-face 2454 . 2457) (nil block-side t 2453 . 2454) (nil part-side javascript 2453 . 2454) (nil part-token string 2453 . 2454) (nil block-side t 2449 . 2453) (nil part-side javascript 2449 . 2453) (nil part-token string 2449 . 2453) (nil face web-mode-variable-name-face 2449 . 2453) (nil block-side t 2448 . 2449) (nil part-side javascript 2448 . 2449) (nil part-token string 2448 . 2449) (nil block-side t 2444 . 2448) (nil part-side javascript 2444 . 2448) (nil part-token string 2444 . 2448) (nil face web-mode-variable-name-face 2444 . 2448) (nil block-side t 2443 . 2444) (nil part-side javascript 2443 . 2444) (nil part-token string 2443 . 2444) (nil block-side t 2442 . 2443) (nil block-token delimiter-beg 2442 . 2443) (nil part-side javascript 2442 . 2443) (nil part-token string 2442 . 2443) (nil font-lock-face web-mode-block-delimiter-face 2442 . 2443) (nil block-beg 0 2441 . 2442) (nil block-controls 0 2441 . 2442) (nil block-side t 2441 . 2442) (nil block-token delimiter-beg 2441 . 2442) (nil part-side javascript 2441 . 2442) (nil part-token string 2441 . 2442) (nil font-lock-face web-mode-block-delimiter-face 2441 . 2442) (nil part-side javascript 2440 . 2441) (nil part-token string 2440 . 2441) (nil syntax-table (15) 2440 . 2441) (nil font-lock-face web-mode-javascript-string-face 2440 . 2441) (nil part-side javascript 2408 . 2440) (nil block-side t 2407 . 2408) (nil block-end t 2407 . 2408) (nil block-token delimiter-end 2407 . 2408) (nil part-side javascript 2407 . 2408) (nil font-lock-face web-mode-block-delimiter-face 2407 . 2408) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2407 . 2408) (nil block-side t 2406 . 2407) (nil block-token delimiter-end 2406 . 2407) (nil part-side javascript 2406 . 2407) (nil font-lock-face web-mode-block-delimiter-face 2406 . 2407) (nil block-side t 2405 . 2406) (nil part-side javascript 2405 . 2406) (nil block-side t 2392 . 2405) (nil part-side javascript 2392 . 2405) (nil face web-mode-variable-name-face 2392 . 2405) (nil block-side t 2391 . 2392) (nil part-side javascript 2391 . 2392) (nil block-side t 2389 . 2391) (nil part-side javascript 2389 . 2391) (nil face web-mode-block-control-face 2389 . 2391) (nil block-side t 2388 . 2389) (nil part-side javascript 2388 . 2389) (nil block-side t 2387 . 2388) (nil block-token delimiter-beg 2387 . 2388) (nil part-side javascript 2387 . 2388) (nil font-lock-face web-mode-block-delimiter-face 2387 . 2388) (nil block-beg 0 2386 . 2387) (nil block-controls 0 2386 . 2387) (nil block-side t 2386 . 2387) (nil block-token delimiter-beg 2386 . 2387) (nil part-side javascript 2386 . 2387) (nil font-lock-face web-mode-block-delimiter-face 2386 . 2387) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2386 . 2387) (nil part-side javascript 2378 . 2386) (nil part-side javascript 2377 . 2378) (nil syntax-table (12) 2377 . 2378) (nil part-side javascript 2364 . 2377) (nil part-token comment 2364 . 2377) (nil font-lock-face web-mode-javascript-comment-face 2364 . 2377) (nil part-side javascript 2363 . 2364) (nil part-token comment 2363 . 2364) (nil syntax-table (11) 2363 . 2364) (nil font-lock-face web-mode-javascript-comment-face 2363 . 2364) (nil part-side javascript 2354 . 2363) (nil part-side javascript 2353 . 2354) (nil face (rainbow-delimiters-depth-2-face) 2353 . 2354) (nil part-side javascript 2352 . 2353) (nil part-side javascript 2351 . 2352) (nil face (rainbow-delimiters-depth-2-face) 2351 . 2352) (nil part-side javascript 2350 . 2351) (nil part-token string 2350 . 2351) (nil syntax-table (15) 2350 . 2351) (nil font-lock-face web-mode-javascript-string-face 2350 . 2351) (nil part-side javascript 2348 . 2350) (nil part-token string 2348 . 2350) (nil font-lock-face web-mode-javascript-string-face 2348 . 2350) (nil part-side javascript 2347 . 2348) (nil part-token string 2347 . 2348) (nil syntax-table (15) 2347 . 2348) (nil font-lock-face web-mode-javascript-string-face 2347 . 2348) (nil part-side javascript 2334 . 2347) (nil part-side javascript 2333 . 2334) (nil face (rainbow-delimiters-depth-2-face) 2333 . 2334) (nil part-side javascript 2332 . 2333) (nil part-side javascript 2330 . 2332) (nil face web-mode-keyword-face 2330 . 2332) (nil part-side javascript 2329 . 2330) (nil part-side javascript 2325 . 2329) (nil face web-mode-keyword-face 2325 . 2329) (nil part-side javascript 2318 . 2325) (nil part-side javascript 2317 . 2318) (nil face (rainbow-delimiters-depth-2-face) 2317 . 2318) (nil part-side javascript 2310 . 2317) (nil block-side t 2309 . 2310) (nil block-end t 2309 . 2310) (nil block-token delimiter-end 2309 . 2310) (nil part-side javascript 2309 . 2310) (nil font-lock-face web-mode-block-delimiter-face 2309 . 2310) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2309 . 2310) (nil block-side t 2308 . 2309) (nil block-token delimiter-end 2308 . 2309) (nil part-side javascript 2308 . 2309) (nil font-lock-face web-mode-block-delimiter-face 2308 . 2309) (nil block-side t 2307 . 2308) (nil part-side javascript 2307 . 2308) (nil block-side t 2302 . 2307) (nil part-side javascript 2302 . 2307) (nil face web-mode-block-control-face 2302 . 2307) (nil block-side t 2301 . 2302) (nil part-side javascript 2301 . 2302) (nil block-side t 2300 . 2301) (nil block-token delimiter-beg 2300 . 2301) (nil part-side javascript 2300 . 2301) (nil font-lock-face web-mode-block-delimiter-face 2300 . 2301) (nil block-beg 0 2299 . 2300) (nil block-controls 0 2299 . 2300) (nil block-side t 2299 . 2300) (nil block-token delimiter-beg 2299 . 2300) (nil part-side javascript 2299 . 2300) (nil font-lock-face web-mode-block-delimiter-face 2299 . 2300) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2299 . 2300) (nil part-side javascript 2289 . 2299) (nil part-side javascript 2288 . 2289) (nil part-token string 2288 . 2289) (nil syntax-table (15) 2288 . 2289) (nil font-lock-face web-mode-javascript-string-face 2288 . 2289) (nil block-side t 2287 . 2288) (nil block-end t 2287 . 2288) (nil block-token delimiter-end 2287 . 2288) (nil part-side javascript 2287 . 2288) (nil part-token string 2287 . 2288) (nil font-lock-face web-mode-block-delimiter-face 2287 . 2288) (nil block-side t 2286 . 2287) (nil block-token delimiter-end 2286 . 2287) (nil part-side javascript 2286 . 2287) (nil part-token string 2286 . 2287) (nil font-lock-face web-mode-block-delimiter-face 2286 . 2287) (nil block-side t 2285 . 2286) (nil part-side javascript 2285 . 2286) (nil part-token string 2285 . 2286) (nil block-side t 2282 . 2285) (nil block-token string 2282 . 2285) (nil part-side javascript 2282 . 2285) (nil part-token string 2282 . 2285) (nil font-lock-face web-mode-block-string-face 2282 . 2285) (nil block-side t 2280 . 2282) (nil part-side javascript 2280 . 2282) (nil part-token string 2280 . 2282) (nil block-side t 2276 . 2280) (nil block-token string 2276 . 2280) (nil part-side javascript 2276 . 2280) (nil part-token string 2276 . 2280) (nil font-lock-face web-mode-block-string-face 2276 . 2280) (nil block-side t 2274 . 2276) (nil part-side javascript 2274 . 2276) (nil part-token string 2274 . 2276) (nil block-side t 2267 . 2274) (nil part-side javascript 2267 . 2274) (nil part-token string 2267 . 2274) (nil face web-mode-filter-face 2267 . 2274) (nil block-side t 2264 . 2267) (nil part-side javascript 2264 . 2267) (nil part-token string 2264 . 2267) (nil block-side t 2257 . 2264) (nil part-side javascript 2257 . 2264) (nil part-token string 2257 . 2264) (nil face web-mode-variable-name-face 2257 . 2264) (nil block-side t 2256 . 2257) (nil part-side javascript 2256 . 2257) (nil part-token string 2256 . 2257) (nil block-side t 2252 . 2256) (nil part-side javascript 2252 . 2256) (nil part-token string 2252 . 2256) (nil face web-mode-variable-name-face 2252 . 2256) (nil block-side t 2250 . 2252) (nil part-side javascript 2250 . 2252) (nil part-token string 2250 . 2252) (nil block-side t 2243 . 2250) (nil part-side javascript 2243 . 2250) (nil part-token string 2243 . 2250) (nil face web-mode-filter-face 2243 . 2250) (nil block-side t 2240 . 2243) (nil part-side javascript 2240 . 2243) (nil part-token string 2240 . 2243) (nil block-side t 2237 . 2240) (nil part-side javascript 2237 . 2240) (nil part-token string 2237 . 2240) (nil face web-mode-variable-name-face 2237 . 2240) (nil block-side t 2236 . 2237) (nil part-side javascript 2236 . 2237) (nil part-token string 2236 . 2237) (nil block-side t 2228 . 2236) (nil part-side javascript 2228 . 2236) (nil part-token string 2228 . 2236) (nil face web-mode-variable-name-face 2228 . 2236) (nil block-side t 2227 . 2228) (nil part-side javascript 2227 . 2228) (nil part-token string 2227 . 2228) (nil block-side t 2223 . 2227) (nil part-side javascript 2223 . 2227) (nil part-token string 2223 . 2227) (nil face web-mode-variable-name-face 2223 . 2227) (nil block-side t 2222 . 2223) (nil part-side javascript 2222 . 2223) (nil part-token string 2222 . 2223) (nil block-side t 2221 . 2222) (nil block-token delimiter-beg 2221 . 2222) (nil part-side javascript 2221 . 2222) (nil part-token string 2221 . 2222) (nil font-lock-face web-mode-block-delimiter-face 2221 . 2222) (nil block-beg 0 2220 . 2221) (nil block-controls 0 2220 . 2221) (nil block-side t 2220 . 2221) (nil block-token delimiter-beg 2220 . 2221) (nil part-side javascript 2220 . 2221) (nil part-token string 2220 . 2221) (nil font-lock-face web-mode-block-delimiter-face 2220 . 2221) (nil part-side javascript 2219 . 2220) (nil part-token string 2219 . 2220) (nil syntax-table (15) 2219 . 2220) (nil font-lock-face web-mode-javascript-string-face 2219 . 2220) (nil part-side javascript 2187 . 2219) (nil block-side t 2186 . 2187) (nil block-end t 2186 . 2187) (nil block-token delimiter-end 2186 . 2187) (nil part-side javascript 2186 . 2187) (nil font-lock-face web-mode-block-delimiter-face 2186 . 2187) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2186 . 2187) (nil block-side t 2185 . 2186) (nil block-token delimiter-end 2185 . 2186) (nil part-side javascript 2185 . 2186) (nil font-lock-face web-mode-block-delimiter-face 2185 . 2186) (nil block-side t 2184 . 2185) (nil part-side javascript 2184 . 2185) (nil block-side t 2167 . 2184) (nil part-side javascript 2167 . 2184) (nil face web-mode-variable-name-face 2167 . 2184) (nil block-side t 2166 . 2167) (nil part-side javascript 2166 . 2167) (nil block-side t 2164 . 2166) (nil part-side javascript 2164 . 2166) (nil face web-mode-block-control-face 2164 . 2166) (nil block-side t 2163 . 2164) (nil part-side javascript 2163 . 2164) (nil block-side t 2162 . 2163) (nil block-token delimiter-beg 2162 . 2163) (nil part-side javascript 2162 . 2163) (nil font-lock-face web-mode-block-delimiter-face 2162 . 2163) (nil block-beg 0 2161 . 2162) (nil block-controls 0 2161 . 2162) (nil block-side t 2161 . 2162) (nil block-token delimiter-beg 2161 . 2162) (nil part-side javascript 2161 . 2162) (nil font-lock-face web-mode-block-delimiter-face 2161 . 2162) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2161 . 2162) (nil part-side javascript 2153 . 2161) (nil part-side javascript 2152 . 2153) (nil syntax-table (12) 2152 . 2153) (nil part-side javascript 2140 . 2152) (nil part-token comment 2140 . 2152) (nil font-lock-face web-mode-javascript-comment-face 2140 . 2152) (nil part-side javascript 2139 . 2140) (nil part-token comment 2139 . 2140) (nil syntax-table (11) 2139 . 2140) (nil font-lock-face web-mode-javascript-comment-face 2139 . 2140) (nil part-side javascript 2130 . 2139) (nil part-side javascript 2129 . 2130) (nil face (rainbow-delimiters-depth-2-face) 2129 . 2130) (nil part-side javascript 2128 . 2129) (nil part-side javascript 2127 . 2128) (nil face (rainbow-delimiters-depth-2-face) 2127 . 2128) (nil part-side javascript 2126 . 2127) (nil part-token string 2126 . 2127) (nil syntax-table (15) 2126 . 2127) (nil font-lock-face web-mode-javascript-string-face 2126 . 2127) (nil part-side javascript 2124 . 2126) (nil part-token string 2124 . 2126) (nil font-lock-face web-mode-javascript-string-face 2124 . 2126) (nil part-side javascript 2123 . 2124) (nil part-token string 2123 . 2124) (nil syntax-table (15) 2123 . 2124) (nil font-lock-face web-mode-javascript-string-face 2123 . 2124) (nil part-side javascript 2110 . 2123) (nil part-side javascript 2109 . 2110) (nil face (rainbow-delimiters-depth-2-face) 2109 . 2110) (nil part-side javascript 2108 . 2109) (nil part-side javascript 2106 . 2108) (nil face web-mode-keyword-face 2106 . 2108) (nil part-side javascript 2068 . 2106) (nil part-side javascript 2067 . 2068) (nil face (rainbow-delimiters-depth-1-face) 2067 . 2068) (nil part-side javascript 2066 . 2067) (nil part-side javascript 2065 . 2066) (nil face (rainbow-delimiters-depth-1-face) 2065 . 2066) (nil part-side javascript 2064 . 2065) (nil part-side javascript 2063 . 2064) (nil face (rainbow-delimiters-depth-1-face) 2063 . 2064) (nil part-side javascript 2055 . 2063) (nil face web-mode-function-name-face 2055 . 2063) (nil part-side javascript 2054 . 2055) (nil part-side javascript 2046 . 2054) (nil face web-mode-keyword-face 2046 . 2054) (nil part-side javascript 2005 . 2046) (nil tag-name "script" 2004 . 2005) (nil tag-type start 2004 . 2005) (nil tag-end t 2004 . 2005) (nil font-lock-face web-mode-html-tag-bracket-face 2004 . 2005) (nil tag-name "script" 1998 . 2004) (nil tag-type start 1998 . 2004) (nil font-lock-face web-mode-html-tag-face 1998 . 2004) (nil tag-name "script" 1997 . 1998) (nil tag-type start 1997 . 1998) (nil tag-beg 16 1997 . 1998) (nil font-lock-face web-mode-html-tag-bracket-face 1997 . 1998) (1995 . 2555)) nil (25836 54530 937108 675000) 0 nil])
([nil nil ((#("page.next.url" 0 4 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 4 5 (block-side t part-side javascript part-token string) 5 9 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 9 10 (block-side t part-side javascript part-token string) 10 13 (block-side t part-side javascript part-token string face web-mode-variable-name-face)) . 2444) (undo-tree-id3 . -13) (undo-tree-id4 . -13)) nil (25836 54530 937015 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2467 . 2468) (nil block-side t 2454 . 2468) (nil part-side javascript 2454 . 2468) (nil part-token string 2454 . 2468) (nil face web-mode-variable-name-face 2454 . 2468) (nil block-side t 2453 . 2454) (nil part-side javascript 2453 . 2454) (nil part-token string 2453 . 2454) (nil block-side t 2444 . 2453) (nil part-side javascript 2444 . 2453) (nil part-token string 2444 . 2453) (nil face web-mode-variable-name-face 2444 . 2453) (2444 . 2468)) nil (25836 54530 937012 108000) 0 nil])
([nil nil ((#("page.previous.url" 0 4 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 4 5 (block-side t part-side javascript part-token string) 5 13 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 13 14 (block-side t part-side javascript part-token string) 14 17 (block-side t part-side javascript part-token string face web-mode-variable-name-face)) . 2223) (undo-tree-id1 . -17) (undo-tree-id2 . -17)) nil (25836 54530 937008 408000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2251 . 2252) (nil block-side t 2251 . 2252) (nil part-side javascript 2251 . 2252) (nil part-token string 2251 . 2252) (nil block-side t 2233 . 2251) (nil part-side javascript 2233 . 2251) (nil part-token string 2233 . 2251) (nil face web-mode-variable-name-face 2233 . 2251) (nil block-side t 2232 . 2233) (nil part-side javascript 2232 . 2233) (nil part-token string 2232 . 2233) (nil block-side t 2223 . 2232) (nil part-side javascript 2223 . 2232) (nil part-token string 2223 . 2232) (nil face web-mode-variable-name-face 2223 . 2232) (2223 . 2252)) nil (25836 54530 937003 494000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t part-side javascript block-side t part-token string)) . -2251) (undo-tree-id0 . -1) 2252) nil (25836 54530 936997 710000) 0 nil])
([nil nil ((2577 . 2578) 2251) nil (25836 54530 936978 921000) 0 nil])
([nil nil ((#("page.previous.url" 0 17 (block-side t part-side javascript face web-mode-variable-name-face)) . 2167) (undo-tree-id7 . -17) (undo-tree-id8 . -17) (t 25836 54530 947586 682000)) nil (25836 54574 804602 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2194 . 2195) (nil part-side javascript 2177 . 2195) (nil block-side t 2177 . 2195) (nil face web-mode-variable-name-face 2177 . 2195) (nil part-side javascript 2176 . 2177) (nil block-side t 2176 . 2177) (nil face web-mode-variable-name-face 2176 . 2177) (nil part-side javascript 2167 . 2176) (nil block-side t 2167 . 2176) (nil face web-mode-variable-name-face 2167 . 2176) (2167 . 2195)) nil (25836 54574 804598 424000) 0 nil])
([nil nil ((#("page.next.url" 0 13 (block-side t part-side javascript face web-mode-variable-name-face)) . 2414) (undo-tree-id5 . -13) (undo-tree-id6 . -13)) nil (25836 54574 804593 946000) 0 nil])
([nil current ((nil rear-nonsticky nil 2437 . 2438) (nil rear-nonsticky t 2437 . 2438) (nil part-side javascript 2437 . 2438) (nil block-side t 2437 . 2438) (nil face web-mode-variable-name-face 2437 . 2438) (nil part-side javascript 2424 . 2437) (nil block-side t 2424 . 2437) (nil face web-mode-variable-name-face 2424 . 2437) (nil part-side javascript 2423 . 2424) (nil block-side t 2423 . 2424) (nil face web-mode-variable-name-face 2423 . 2424) (nil part-side javascript 2414 . 2423) (nil block-side t 2414 . 2423) (nil face web-mode-variable-name-face 2414 . 2423) (2414 . 2438)) nil (25836 54574 804575 494000) 0 nil])
nil
