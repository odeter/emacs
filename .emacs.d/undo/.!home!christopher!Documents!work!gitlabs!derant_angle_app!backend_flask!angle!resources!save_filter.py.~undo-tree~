(undo-tree-save-format-version . 1)
"2e710f67ebb5ef2dfbfb31889c14e678de0600d8"
[nil nil nil nil (25753 33341 508660 0) 0 nil]
([nil nil ((#("
        print(overwrite)" 0 9 (fontified t) 9 14 (face font-lock-keyword-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4270) (undo-tree-id0 . -25) (undo-tree-id1 . -25) (undo-tree-id2 . -25) (undo-tree-id3 . -25) (undo-tree-id4 . -1) (undo-tree-id5 . -25) (undo-tree-id6 . -25) (undo-tree-id7 . -25) (t 25753 28001 607467 609000)) nil (25753 33341 508656 431000) 0 nil])
([nil nil ((16577 . 16578) 4270) nil (25753 33341 508623 858000) 0 nil])
([nil nil ((11192 . 11200) (#("        " 0 8 (fontified nil)) . 11191) (undo-tree-id73 . -8) (11190 . 11200) (t 25753 33341 509994 140000)) nil (25753 34320 835290 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11334 . 11335) (nil fontified nil 11334 . 11335) (nil fontified nil 11324 . 11334) (nil fontified nil 11323 . 11324) (nil fontified nil 11287 . 11323) (nil fontified nil 11270 . 11287) (nil fontified nil 11262 . 11270) (nil fontified nil 11251 . 11262) (nil fontified nil 11227 . 11251) (nil fontified nil 11202 . 11227) (nil fontified nil 11200 . 11202) (11200 . 11335)) nil (25753 34320 835286 219000) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified defer)) . -11240) (undo-tree-id52 . -1) (#("u" 0 1 (face font-lock-comment-face fontified defer)) . -11241) (undo-tree-id53 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -11242) (undo-tree-id54 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -11243) (undo-tree-id55 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -11244) (undo-tree-id56 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -11245) (undo-tree-id57 . -1) (#("o" 0 1 (face font-lock-comment-face fontified defer)) . -11246) (undo-tree-id58 . -1) (#("v" 0 1 (face font-lock-comment-face fontified defer)) . -11247) (undo-tree-id59 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -11248) (undo-tree-id60 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -11249) (undo-tree-id61 . -1) (#("w" 0 1 (face font-lock-comment-face fontified defer)) . -11250) (undo-tree-id62 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -11251) (undo-tree-id63 . -1) (#("i" 0 1 (face font-lock-comment-face fontified defer)) . -11252) (undo-tree-id64 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -11253) (undo-tree-id65 . -1) (#("e" 0 1 (face font-lock-comment-face fontified nil)) . -11254) (undo-tree-id66 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -11255) (undo-tree-id67 . -1) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -11256) (undo-tree-id68 . -1) (#("f" 0 1 (face font-lock-comment-face fontified nil)) . -11257) (undo-tree-id69 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -11258) (undo-tree-id70 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -11259) (undo-tree-id71 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -11260) (undo-tree-id72 . -1) 11261) nil (25753 34320 835276 734000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -11232) (undo-tree-id44 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -11233) (undo-tree-id45 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -11234) (undo-tree-id46 . -1) (#("n" 0 1 (face font-lock-comment-face fontified nil)) . -11235) (undo-tree-id47 . -1) (#("d" 0 1 (face font-lock-comment-face fontified nil)) . -11236) (undo-tree-id48 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -11237) (undo-tree-id49 . -1) (#("r" 0 1 (face font-lock-comment-face fontified defer)) . -11238) (undo-tree-id50 . -1) (#("e" 0 1 (face font-lock-comment-face fontified defer)) . -11239) (undo-tree-id51 . -1) 11240) nil (25753 34320 835085 225000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-variable-name-face fontified t)) . -11247) (undo-tree-id33 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -11248) (undo-tree-id34 . -1) (#("O" 0 1 (face font-lock-variable-name-face fontified defer)) . -11249) (undo-tree-id35 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified defer)) . -11250) (undo-tree-id36 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified defer)) . -11251) (undo-tree-id37 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified defer)) . -11252) (undo-tree-id38 . -1) (#("w" 0 1 (face font-lock-variable-name-face fontified defer)) . -11253) (undo-tree-id39 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified defer)) . -11254) (undo-tree-id40 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified nil)) . -11255) (undo-tree-id41 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -11256) (undo-tree-id42 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11257) (undo-tree-id43 . -1) 11258) nil (25753 34320 835071 654000) 0 nil])
([nil nil ((11247 . 11253)) nil (25753 34320 835054 875000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11252) (undo-tree-id32 . -1) 11253) nil (25753 34320 835053 674000) 0 nil])
([nil nil ((#("        # Check if filter already exists
        filterExist = FilterModel.check_existing_filter(new_filter)" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 35 (face font-lock-comment-face fontified t) 35 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 49 (fontified t) 49 60 (face font-lock-variable-name-face fontified t) 60 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 11192) (undo-tree-id27 . -108) (undo-tree-id28 . -41) (undo-tree-id29 . -60) (undo-tree-id30 . -8) (undo-tree-id31 . -108)) nil (25753 34320 835050 802000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11190) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("
" 0 1 (fontified t)) . -11191) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 11192) nil (25753 34320 835043 773000) 0 nil])
([nil nil ((12371 . 12379) (#("        " 0 8 (fontified nil)) . 12370) (undo-tree-id15 . -8) (12370 . 12379) (#("        " 0 8 (fontified nil)) . 12369) (undo-tree-id16 . -8) (12368 . 12378)) nil (25753 34320 835030 788000) 0 nil])
([nil nil ((nil fontified nil 12477 . 12478) (nil fontified nil 12467 . 12477) (nil fontified nil 12466 . 12467) (nil fontified nil 12430 . 12466) (nil fontified nil 12419 . 12430) (nil fontified nil 12411 . 12419) (nil fontified nil 12410 . 12411) (nil fontified nil 12405 . 12410) (nil fontified nil 12380 . 12405) (nil fontified nil 12378 . 12380) (nil fontified nil 12370 . 12378) (12370 . 12478)) nil (25753 34320 835025 506000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12368) (undo-tree-id14 . -1)) nil (25753 34320 835021 912000) 0 nil])
([nil nil ((12477 . 12486)) nil (25753 34320 835019 822000) 0 nil])
([nil nil ((12486 . 12501)) nil (25753 34320 835018 938000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12500) (undo-tree-id13 . -1) 12501) nil (25753 34320 835017 530000) 0 nil])
([nil nil ((12500 . 12502)) nil (25753 34320 835014 954000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12501) (undo-tree-id12 . -1) 12502) nil (25753 34320 835013 684000) 0 nil])
([nil nil ((12501 . 12514)) nil (25753 34320 835011 62000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12664 . 12665) (nil fontified nil 12660 . 12665) (nil fontified nil 12659 . 12660) (nil fontified nil 12648 . 12659) (nil fontified nil 12638 . 12648) (nil fontified nil 12618 . 12638) (nil fontified nil 12606 . 12618) (nil fontified nil 12592 . 12606) (nil fontified nil 12588 . 12592) (nil fontified nil 12586 . 12588) (nil fontified nil 12582 . 12586) (nil fontified nil 12580 . 12582) (nil fontified nil 12563 . 12580) (nil fontified nil 12561 . 12563) (nil fontified nil 12533 . 12561) (nil fontified nil 12531 . 12533) (nil fontified nil 12522 . 12531) (nil fontified nil 12521 . 12522) (nil fontified nil 12520 . 12521) (nil fontified nil 12514 . 12520) (12514 . 12665)) nil (25753 34320 835008 617000) 0 nil])
([nil nil ((#(" 'askConfirmation': True, 'affectedTriggers': triggers, 'affectedSelections': affected_selections" 0 1 (fontified t) 1 18 (face font-lock-string-face fontified t) 18 20 (fontified t) 20 24 (face font-lock-constant-face fontified t) 24 26 (fontified t) 26 30 (face font-lock-string-face fontified t) 30 44 (face font-lock-string-face fontified t) 44 56 (fontified t) 56 76 (face font-lock-string-face fontified t) 76 86 (fontified t) 86 90 (fontified t) 90 97 (face (whitespace-line) fontified t)) . 12562) (undo-tree-id10 . -97) (undo-tree-id11 . -97)) nil (25753 34320 835002 864000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12561) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 12562) nil (25753 34320 834998 492000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 12564)) nil (25753 34320 834987 267000) 0 nil])
([nil nil ((12564 . 12565)) nil (25753 34320 834983 18000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing fontified t)) . -12568) 12566) nil (25753 34320 834953 805000) 0 nil])
([nil nil ((12395 . 12400) (t 25753 34320 837643 972000)) nil (25753 34952 841735 688000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -12395) (undo-tree-id100 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -12396) (undo-tree-id101 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -12397) (undo-tree-id102 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -12398) (undo-tree-id103 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -12399) (undo-tree-id104 . -1) 12400) nil (25753 34952 841732 534000) 0 nil])
([nil nil ((14482 . 14494) (#("            " 0 12 (fontified nil)) . 14481) (undo-tree-id99 . -12) (14480 . 14494)) nil (25753 34952 841391 157000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14490) (undo-tree-id98 . -4) 14494) nil (25753 34952 841388 206000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14486) (undo-tree-id97 . -4) 14490) nil (25753 34952 841385 578000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14482) (undo-tree-id96 . -4) 14486) nil (25753 34952 841383 79000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14480) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("
" 0 1 (fontified t)) . -14481) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 14482) nil (25753 34952 841380 370000) 0 nil])
([nil nil ((16389 . 16401) (#("            " 0 12 (fontified nil)) . 16388) (undo-tree-id91 . -12) (16387 . 16401)) nil (25753 34952 841374 271000) 0 nil])
([nil nil ((16388 . 16400)) nil (25753 34952 841371 880000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16396) (undo-tree-id90 . -4) 16400) nil (25753 34952 841370 727000) 0 nil])
([nil nil ((nil fontified nil 16585 . 16586) (nil fontified nil 16581 . 16585) (nil fontified nil 16580 . 16581) (nil fontified nil 16552 . 16580) (nil fontified nil 16550 . 16552) (nil fontified nil 16541 . 16550) (nil fontified nil 16540 . 16541) (nil fontified nil 16539 . 16540) (nil fontified nil 16533 . 16539) (nil fontified nil 16521 . 16533) (nil fontified nil 16508 . 16521) (nil fontified nil 16507 . 16508) (nil fontified nil 16505 . 16507) (nil fontified nil 16497 . 16505) (nil fontified nil 16496 . 16497) (nil fontified nil 16495 . 16496) (nil fontified nil 16485 . 16495) (nil fontified nil 16484 . 16485) (nil fontified nil 16448 . 16484) (nil fontified nil 16437 . 16448) (nil fontified nil 16429 . 16437) (nil fontified nil 16428 . 16429) (nil fontified nil 16423 . 16428) (nil fontified nil 16398 . 16423) (nil fontified nil 16396 . 16398) (16396 . 16586)) nil (25753 34952 841367 157000) 0 nil])
([nil nil ((#("new_filter" 0 10 (fontified t)) . 16485) (undo-tree-id88 . -10) (undo-tree-id89 . -10)) nil (25753 34952 841360 750000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16495 . 16496) (nil fontified nil 16485 . 16496) (16485 . 16496)) nil (25753 34952 841357 665000) 0 nil])
([nil nil ((16520 . 16538)) nil (25753 34952 841356 274000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16536) (undo-tree-id86 . -1) (#(" " 0 1 (fontified t)) . -16537) (undo-tree-id87 . -1) 16538) nil (25753 34952 841354 859000) 0 nil])
([nil nil ((16536 . 16537)) nil (25753 34952 841351 241000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16536) (undo-tree-id85 . -1) 16537) nil (25753 34952 841350 97000) 0 nil])
([nil nil ((16536 . 16540)) nil (25753 34952 841347 889000) 0 nil])
([nil nil ((16540 . 16546)) nil (25753 34952 841346 797000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -16543) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("d" 0 1 (fontified t)) . -16544) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("i" 0 1 (fontified t)) . -16545) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 16546) nil (25753 34952 841344 698000) 0 nil])
([nil nil ((16543 . 16555)) nil (25753 34952 841336 105000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16554) (undo-tree-id78 . -1) 16555) nil (25753 34952 841334 893000) 0 nil])
([nil nil ((16554 . 16558)) nil (25753 34952 841332 317000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -16555) (undo-tree-id75 . -1) (#("i" 0 1 (fontified t)) . -16556) (undo-tree-id76 . -1) (#(" " 0 1 (fontified t)) . -16557) (undo-tree-id77 . -1) 16558) nil (25753 34952 841330 527000) 0 nil])
([nil nil ((16555 . 16558)) nil (25753 34952 841324 365000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer)) . -16557) (undo-tree-id74 . -1) 16558) nil (25753 34952 841322 301000) 0 nil])
([nil nil ((#("            " 0 12 (face whitespace-trailing fontified t)) . -16625) 16240) nil (25753 34952 841306 833000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -16540) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 16541 (t 25753 34952 844413 509000)) nil (25753 35210 297844 477000) 0 nil])
([nil nil ((16540 . 16541)) nil (25753 35210 297819 224000) 0 nil])
([nil nil ((16497 . 16506) (t 25753 35210 300217 356000)) nil (25753 35295 512471 696000) 0 nil])
([nil nil ((16506 . 16509)) nil (25753 35295 512470 301000) 0 nil])
([nil nil ((16512 . 16514) (16511 . 16513) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -16511) (16509 . 16512)) nil (25753 35295 512469 41000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -16512) (undo-tree-id126 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -16513) (undo-tree-id127 . -1) 16514) nil (25753 35295 512466 824000) 0 nil])
([nil nil ((16512 . 16519)) nil (25753 35295 512463 205000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16518) (undo-tree-id125 . -1) 16519) nil (25753 35295 512462 46000) 0 nil])
([nil nil ((16518 . 16524)) nil (25753 35295 512459 473000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16523) (undo-tree-id124 . -1) 16524) nil (25753 35295 512458 95000) 0 nil])
([nil nil ((16523 . 16527)) nil (25753 35295 512455 453000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16526) (undo-tree-id123 . -1) 16527) nil (25753 35295 512453 976000) 0 nil])
([nil nil ((16527 . 16536)) nil (25753 35295 512451 64000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 16543) (16542 . 16543) (16541 . 16543) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -16541) (16536 . 16542)) nil (25753 35295 512448 733000) 0 nil])
([nil nil ((16542 . 16557)) nil (25753 35295 512445 348000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16556) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 16557) nil (25753 35295 512439 206000) 0 nil])
([nil nil ((14451 . 14453) (t 25753 35295 516171 838000)) nil (25753 35570 834558 721000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -14451) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("/" 0 1 (fontified t)) . -14452) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 14453) nil (25753 35570 834551 821000) 0 nil])
([nil nil ((14451 . 14452)) nil (25753 35570 834362 593000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -14451) (undo-tree-id189 . -1) 14452 (t 25753 35570 840069 21000)) nil (25753 37653 485778 803000) 0 nil])
([nil nil ((#("        if data['name']:
            filterpath = data[\"name\"]
            # Verify filter name and return error if raised
            error = verify_filter_name(filterpath, api.name, api.id, api=True)
            if error:
                return error

            edit_filter.name = filterpath" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 12 (fontified t) 12 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 22 (face font-lock-string-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 37 (fontified t) 37 45 (face font-lock-variable-name-face fontified t) 45 47 (face font-lock-variable-name-face fontified t) 47 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 61 (face font-lock-string-face fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 63 (fontified t) 63 75 (fontified t) 75 77 (face font-lock-comment-delimiter-face fontified t) 77 123 (face font-lock-comment-face fontified t) 123 135 (fontified t) 135 140 (face font-lock-variable-name-face fontified t) 140 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 188 (fontified t) 188 190 (face font-lock-builtin-face fontified t) 190 196 (fontified t) 196 200 (face font-lock-constant-face fontified t) 200 201 (face (rainbow-delimiters-depth-1-face) fontified t) 201 214 (fontified t) 214 216 (face font-lock-keyword-face fontified t) 216 240 (fontified t) 240 246 (face font-lock-keyword-face fontified t) 246 250 (fontified t) 250 254 (fontified t) 254 266 (fontified t) 266 282 (face font-lock-variable-name-face fontified t) 282 293 (fontified t) 293 295 (fontified t)) . 14185) (undo-tree-id204 . -295) (undo-tree-id205 . -295) (undo-tree-id206 . -295) (undo-tree-id207 . -25) (undo-tree-id208 . -252) (undo-tree-id209 . -295) (t 25753 37653 485427 597000)) nil (25753 37764 425183 783000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14183) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("
" 0 1 (fontified t)) . -14184) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 14185) nil (25753 37764 425173 71000) 0 nil])
([nil nil ((16091 . 16103) (#("            " 0 12 (fontified nil)) . 16090) (undo-tree-id191 . -12) (16089 . 16103)) nil (25753 37764 425154 452000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16099) (undo-tree-id190 . -4) 16103) nil (25753 37764 425826 633000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16393 . 16394) (nil fontified nil 16392 . 16394) (nil fontified nil 16381 . 16392) (nil fontified nil 16365 . 16381) (nil fontified nil 16353 . 16365) (nil fontified nil 16349 . 16353) (nil fontified nil 16345 . 16349) (nil fontified nil 16339 . 16345) (nil fontified nil 16315 . 16339) (nil fontified nil 16313 . 16315) (nil fontified nil 16300 . 16313) (nil fontified nil 16299 . 16300) (nil fontified nil 16295 . 16299) (nil fontified nil 16289 . 16295) (nil fontified nil 16287 . 16289) (nil fontified nil 16261 . 16287) (nil fontified nil 16260 . 16261) (nil fontified nil 16239 . 16260) (nil fontified nil 16234 . 16239) (nil fontified nil 16222 . 16234) (nil fontified nil 16176 . 16222) (nil fontified nil 16174 . 16176) (nil fontified nil 16162 . 16174) (nil fontified nil 16161 . 16162) (nil fontified nil 16160 . 16161) (nil fontified nil 16154 . 16160) (nil fontified nil 16153 . 16154) (nil fontified nil 16146 . 16153) (nil fontified nil 16144 . 16146) (nil fontified nil 16136 . 16144) (nil fontified nil 16122 . 16136) (nil fontified nil 16121 . 16122) (nil fontified nil 16115 . 16121) (nil fontified nil 16114 . 16115) (nil fontified nil 16111 . 16114) (nil fontified nil 16109 . 16111) (nil fontified nil 16107 . 16109) (nil fontified nil 16099 . 16107) (16099 . 16394)) nil (25753 37778 987620 503000) 0 nil] [nil nil ((nil rear-nonsticky nil 16393 . 16394) (nil fontified nil 16392 . 16394) (nil fontified nil 16381 . 16392) (nil fontified nil 16365 . 16381) (nil fontified nil 16353 . 16365) (nil fontified nil 16349 . 16353) (nil fontified nil 16345 . 16349) (nil fontified nil 16339 . 16345) (nil fontified nil 16315 . 16339) (nil fontified nil 16313 . 16315) (nil fontified nil 16300 . 16313) (nil fontified nil 16299 . 16300) (nil fontified nil 16295 . 16299) (nil fontified nil 16289 . 16295) (nil fontified nil 16287 . 16289) (nil fontified nil 16261 . 16287) (nil fontified nil 16260 . 16261) (nil fontified nil 16239 . 16260) (nil fontified nil 16234 . 16239) (nil fontified nil 16222 . 16234) (nil fontified nil 16176 . 16222) (nil fontified nil 16174 . 16176) (nil fontified nil 16162 . 16174) (nil fontified nil 16161 . 16162) (nil fontified nil 16160 . 16161) (nil fontified nil 16154 . 16160) (nil fontified nil 16153 . 16154) (nil fontified nil 16146 . 16153) (nil fontified nil 16144 . 16146) (nil fontified nil 16136 . 16144) (nil fontified nil 16122 . 16136) (nil fontified nil 16121 . 16122) (nil fontified nil 16115 . 16121) (nil fontified nil 16114 . 16115) (nil fontified nil 16111 . 16114) (nil fontified nil 16109 . 16111) (nil fontified nil 16107 . 16109) (nil fontified nil 16099 . 16107) (16099 . 16394)) ((#("        if data['name']:
            filterpath = data[\"name\"]
            # Verify filter name and return error if raised
            error = verify_filter_name(filterpath, api.name, api.id, api=True)
            if error:
                return error

            edit_filter.name = filterpath" 0 8 (fontified nil) 8 10 (face font-lock-keyword-face fontified nil) 10 12 (fontified nil) 12 15 (fontified nil) 15 16 (face (rainbow-delimiters-depth-1-face) fontified nil) 16 22 (face font-lock-string-face fontified nil) 22 23 (face (rainbow-delimiters-depth-1-face) fontified nil) 23 25 (fontified nil) 25 37 (fontified nil) 37 45 (face font-lock-variable-name-face fontified nil) 45 47 (face font-lock-variable-name-face fontified nil) 47 54 (fontified nil) 54 55 (face (rainbow-delimiters-depth-1-face) fontified nil) 55 61 (face font-lock-string-face fontified nil) 61 62 (face (rainbow-delimiters-depth-1-face) fontified nil) 62 63 (fontified nil) 63 75 (fontified nil) 75 77 (face font-lock-comment-delimiter-face fontified nil) 77 123 (face font-lock-comment-face fontified nil) 123 135 (fontified nil) 135 140 (face font-lock-variable-name-face fontified nil) 140 161 (fontified nil) 161 162 (face (rainbow-delimiters-depth-1-face) fontified nil) 162 188 (fontified nil) 188 190 (face font-lock-builtin-face fontified nil) 190 196 (fontified nil) 196 200 (face font-lock-constant-face fontified nil) 200 201 (face (rainbow-delimiters-depth-1-face) fontified nil) 201 202 (fontified nil) 202 214 (fontified nil) 214 216 (face font-lock-keyword-face fontified nil) 216 224 (fontified nil) 224 240 (fontified nil) 240 246 (face font-lock-keyword-face fontified nil) 246 250 (fontified nil) 250 254 (fontified nil) 254 266 (fontified nil) 266 282 (face font-lock-variable-name-face fontified nil) 282 293 (fontified nil) 293 294 (fontified nil) 294 295 (rear-nonsticky nil fontified nil)) . 16099) (undo-tree-id210 . -254) (undo-tree-id211 . -295) (undo-tree-id212 . -254) (nil fontified t 16122 . 16124) (nil fontified t 16161 . 16162) (nil fontified t 16176 . 16222) (nil fontified t 16300 . 16301) (nil fontified t 16315 . 16323) (nil fontified t 16349 . 16353) (nil rear-nonsticky t 16393 . 16394)) (25753 37764 425123 295000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16103) 16123) nil (25753 37779 185070 905000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -16099) 16119) nil (25753 37797 785906 791000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -16099) 16119) ((16099 . 16103)) (25753 37778 988001 888000) 0 nil])
([nil nil ((16429 . 16430) (t 25753 37798 689482 994000)) nil (25753 37881 819606 876000) 0 nil] [nil nil ((#("        # Check if filter already exists
        filterExist = FilterModel.check_existing_filter(edit_filter)
        print(filterExist.id)
        print(edit_filter.id)
        if filterExist and filterExist.id != edit_filter.id:
            return {'message': 'Filter name already exists'}, 500" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 35 (face font-lock-comment-face fontified t) 35 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 49 (fontified t) 49 60 (face font-lock-variable-name-face fontified t) 60 93 (fontified t) 93 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 107 (fontified t) 107 108 (fontified t rear-nonsticky t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 109 110 (fontified t) 110 118 (fontified t) 118 123 (face font-lock-keyword-face fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 136 (fontified t) 136 138 (face font-lock-builtin-face fontified t) 138 139 (face (rainbow-delimiters-depth-1-face) fontified t) 139 140 (fontified t) 140 148 (fontified t) 148 153 (face font-lock-keyword-face fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 166 (fontified t) 166 168 (face font-lock-builtin-face fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 170 (fontified t) 170 178 (fontified t) 178 180 (face font-lock-keyword-face fontified t) 180 181 (fontified t) 181 193 (fontified t) 193 196 (face font-lock-keyword-face fontified t) 196 197 (fontified t) 197 209 (fontified t) 209 211 (face font-lock-builtin-face fontified t) 211 226 (fontified t) 226 227 (fontified t) 227 228 (face font-lock-builtin-face fontified t) 228 229 (face font-lock-builtin-face fontified t) 229 231 (fontified t) 231 243 (fontified t) 243 249 (face font-lock-keyword-face fontified t) 249 250 (fontified t) 250 251 (face (rainbow-delimiters-depth-1-face) fontified t) 251 252 (face font-lock-string-face fontified t) 252 259 (face font-lock-string-face fontified t) 259 260 (face font-lock-string-face fontified t) 260 262 (fontified t) 262 263 (face font-lock-string-face fontified t) 263 289 (face font-lock-string-face fontified t) 289 290 (face font-lock-string-face fontified t) 290 291 (face (rainbow-delimiters-depth-1-face) fontified t) 291 295 (fontified t) 295 296 (fontified t rear-nonsticky t)) . 16388) (undo-tree-id237 . -296) (undo-tree-id238 . -131) (undo-tree-id239 . -8) (undo-tree-id240 . -97) (undo-tree-id241 . -97) (undo-tree-id242 . -41) (undo-tree-id243 . -169) (undo-tree-id244 . -296)) ((16388 . 16684)) (25753 37797 386311 466000) 0 nil])
([nil nil ((#("        # Check if filter already exists
        filterExist = FilterModel.check_existing_filter(edit_filter)
        print(filterExist.id)
        print(edit_filter.id)" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 35 (face font-lock-comment-face fontified t) 35 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 49 (fontified t) 49 60 (face font-lock-variable-name-face fontified t) 60 93 (fontified t) 93 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 107 (fontified t) 107 108 (fontified t rear-nonsticky t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 109 110 (fontified t) 110 118 (fontified t) 118 123 (face font-lock-keyword-face fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 136 (fontified t) 136 138 (face font-lock-builtin-face fontified t) 138 139 (face (rainbow-delimiters-depth-1-face) fontified t) 139 140 (fontified t) 140 148 (fontified t) 148 153 (face font-lock-keyword-face fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 166 (fontified t) 166 168 (face font-lock-builtin-face fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16388) (undo-tree-id213 . -169) (undo-tree-id214 . -131) (undo-tree-id215 . -8) (undo-tree-id216 . -97) (undo-tree-id217 . -97) (undo-tree-id218 . -41) (undo-tree-id219 . -169)) ((16388 . 16557)) (25753 37778 987594 834000) 0 nil])
([nil nil ((16429 . 16437)) nil (25753 37881 819602 24000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16386) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("
" 0 1 (fontified t)) . -16387) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 16388) ((16386 . 16388)) (25753 37797 31242 850000) 0 nil])
nil
([nil nil ((16443 . 16445) (#("\"" 0 1 (fontified nil)) . -16443) (16437 . 16444)) nil (25753 37881 819598 686000) 0 nil])
([nil nil ((16388 . 16400) (#("            " 0 12 (fontified nil)) . 16387) (undo-tree-id220 . -12) (16386 . 16400)) ((#("
            
" 0 1 (fontified t) 1 13 (fontified nil) 13 14 (fontified nil)) . 16386) (undo-tree-id320 . -14) (undo-tree-id321 . -14) (undo-tree-id322 . -14) (undo-tree-id323 . -14) (undo-tree-id324 . -14) (undo-tree-id325 . -14) (undo-tree-id326 . -14) (undo-tree-id327 . -14) (undo-tree-id328 . -14) (undo-tree-id329 . -14) (undo-tree-id330 . -14) (undo-tree-id331 . -14) (undo-tree-id332 . -14) (undo-tree-id333 . -14) (undo-tree-id334 . -14) (undo-tree-id335 . -14) (undo-tree-id336 . -14) (undo-tree-id337 . -14) (undo-tree-id338 . -14) (undo-tree-id339 . -14) (undo-tree-id340 . -14) (undo-tree-id341 . -14) (undo-tree-id342 . -14) (undo-tree-id343 . -14) (undo-tree-id344 . -14) (undo-tree-id345 . -14) (undo-tree-id346 . -14) (undo-tree-id347 . -14) (undo-tree-id348 . -14) (undo-tree-id349 . -14) (undo-tree-id350 . -14) (undo-tree-id351 . -14) (undo-tree-id352 . -14) (undo-tree-id353 . -14) (undo-tree-id354 . -14) (undo-tree-id355 . -14) (undo-tree-id356 . -14) (undo-tree-id357 . -14) (undo-tree-id358 . -14) (undo-tree-id359 . -14) (undo-tree-id360 . -14) (undo-tree-id361 . -14) (undo-tree-id362 . -14) (undo-tree-id363 . -14) (undo-tree-id364 . -14) (undo-tree-id365 . -14) (undo-tree-id366 . -14) (undo-tree-id367 . -14) (undo-tree-id368 . -14) (undo-tree-id369 . -14) (undo-tree-id370 . -14) (undo-tree-id371 . -14) (undo-tree-id372 . -14) (undo-tree-id373 . -14) (undo-tree-id374 . -14) (undo-tree-id375 . -14) (undo-tree-id376 . -14) (undo-tree-id377 . -14) (undo-tree-id378 . -14) (undo-tree-id379 . -14) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -14) (undo-tree-id388 . -14) (undo-tree-id389 . -14) (undo-tree-id390 . -14) (undo-tree-id391 . -14) (undo-tree-id392 . -14) (undo-tree-id393 . -14) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -14) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (undo-tree-id406 . -14) (undo-tree-id407 . -14) (undo-tree-id408 . -14) (undo-tree-id409 . -14) (undo-tree-id410 . -14) (undo-tree-id411 . -14) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (16387 . 16399) (#("            " 0 12 (fontified t)) . 16388) (undo-tree-id414 . -12) (undo-tree-id415 . -12) (undo-tree-id416 . -12) (undo-tree-id417 . -12) (undo-tree-id418 . -12) (undo-tree-id419 . -12) (undo-tree-id420 . -12) (undo-tree-id421 . -12) (undo-tree-id422 . -12) (undo-tree-id423 . -12) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -12) (undo-tree-id443 . -12) (undo-tree-id444 . -12) (undo-tree-id445 . -12) (undo-tree-id446 . -12) (undo-tree-id447 . -12) (undo-tree-id448 . -12) (undo-tree-id449 . -12) (undo-tree-id450 . -12) (undo-tree-id451 . -12) (undo-tree-id452 . -12) (undo-tree-id453 . -12) (undo-tree-id454 . -12) (undo-tree-id455 . -12) (undo-tree-id456 . -12) (undo-tree-id457 . -12) (undo-tree-id458 . -12) (undo-tree-id459 . -12) (undo-tree-id460 . -12) (undo-tree-id461 . -12) (undo-tree-id462 . -12) (undo-tree-id463 . -12) (undo-tree-id464 . -12) (undo-tree-id465 . -12) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (undo-tree-id469 . -12) (undo-tree-id470 . -12) (undo-tree-id471 . -12) (undo-tree-id472 . -12) (undo-tree-id473 . -12) (undo-tree-id474 . -12) (undo-tree-id475 . -12) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12)) (25753 37796 589575 800000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -16442) (undo-tree-id511 . -1) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -16443) (undo-tree-id512 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 16444)) nil (25753 37881 819591 612000) 0 nil])
([nil nil ((nil fontified nil 16695 . 16696) (nil fontified nil 16691 . 16695) (nil fontified nil 16690 . 16691) (nil fontified nil 16689 . 16690) (nil fontified nil 16663 . 16689) (nil fontified nil 16662 . 16663) (nil fontified nil 16660 . 16662) (nil fontified nil 16659 . 16660) (nil fontified nil 16652 . 16659) (nil fontified nil 16651 . 16652) (nil fontified nil 16650 . 16651) (nil fontified nil 16649 . 16650) (nil fontified nil 16643 . 16649) (nil fontified nil 16631 . 16643) (nil fontified nil 16629 . 16631) (nil fontified nil 16628 . 16629) (nil fontified nil 16627 . 16628) (nil fontified nil 16626 . 16627) (nil fontified nil 16611 . 16626) (nil fontified nil 16609 . 16611) (nil fontified nil 16597 . 16609) (nil fontified nil 16596 . 16597) (nil fontified nil 16593 . 16596) (nil fontified nil 16581 . 16593) (nil fontified nil 16580 . 16581) (nil fontified nil 16578 . 16580) (nil fontified nil 16570 . 16578) (nil fontified nil 16569 . 16570) (nil fontified nil 16568 . 16569) (nil fontified nil 16566 . 16568) (nil fontified nil 16554 . 16566) (nil fontified nil 16553 . 16554) (nil fontified nil 16548 . 16553) (nil fontified nil 16540 . 16548) (nil fontified nil 16539 . 16540) (nil fontified nil 16538 . 16539) (nil fontified nil 16536 . 16538) (nil fontified nil 16524 . 16536) (nil fontified nil 16523 . 16524) (nil fontified nil 16518 . 16523) (nil fontified nil 16510 . 16518) (nil fontified nil 16509 . 16510) (nil fontified nil 16508 . 16509) (nil fontified nil 16507 . 16508) (nil fontified nil 16497 . 16507) (nil fontified nil 16496 . 16497) (nil fontified nil 16493 . 16496) (nil fontified nil 16460 . 16493) (nil fontified nil 16449 . 16460) (nil fontified nil 16441 . 16449) (nil fontified nil 16440 . 16441) (nil fontified nil 16435 . 16440) (nil fontified nil 16410 . 16435) (nil fontified nil 16408 . 16410) (nil fontified nil 16400 . 16408) (16400 . 16696)) ((#("        # Check if filter already exists
        filterExist = FilterModel.check_existing_filter(edit_filter)
        print(filterExist.id)
        print(edit_filter.id)
        if filterExist and filterExist.id != edit_filter.id:
            return {'message': 'Filter name already exists'}, 500" 0 8 (fontified nil) 8 10 (face font-lock-comment-delimiter-face fontified nil) 10 35 (face font-lock-comment-face fontified nil) 35 40 (face font-lock-comment-face fontified nil) 40 41 (face font-lock-comment-face fontified nil) 41 49 (fontified nil) 49 60 (face font-lock-variable-name-face fontified nil) 60 93 (fontified nil) 93 96 (fontified nil) 96 97 (face (rainbow-delimiters-depth-1-face) fontified nil) 97 107 (fontified nil) 107 108 (fontified nil rear-nonsticky t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 109 110 (fontified nil) 110 118 (fontified nil) 118 123 (face font-lock-keyword-face fontified nil) 123 124 (face (rainbow-delimiters-depth-1-face) fontified nil) 124 136 (fontified nil) 136 138 (face font-lock-builtin-face fontified nil) 138 139 (face (rainbow-delimiters-depth-1-face) fontified nil) 139 140 (fontified nil) 140 148 (fontified nil) 148 153 (face font-lock-keyword-face fontified nil) 153 154 (face (rainbow-delimiters-depth-1-face) fontified nil) 154 166 (fontified nil) 166 168 (face font-lock-builtin-face fontified nil) 168 169 (face (rainbow-delimiters-depth-1-face) fontified nil) 169 170 (fontified nil) 170 178 (fontified nil) 178 180 (face font-lock-keyword-face fontified nil) 180 181 (fontified nil) 181 193 (fontified nil) 193 196 (face font-lock-keyword-face fontified nil) 196 197 (fontified nil) 197 209 (fontified nil) 209 211 (face font-lock-builtin-face fontified nil) 211 226 (fontified nil) 226 227 (fontified nil) 227 228 (face font-lock-builtin-face fontified nil) 228 229 (face font-lock-builtin-face fontified nil) 229 231 (fontified nil) 231 243 (fontified nil) 243 249 (face font-lock-keyword-face fontified nil) 249 250 (fontified nil) 250 251 (face (rainbow-delimiters-depth-1-face) fontified nil) 251 252 (face font-lock-string-face fontified nil) 252 259 (face font-lock-string-face fontified nil) 259 260 (face font-lock-string-face fontified nil) 260 262 (fontified nil) 262 263 (face font-lock-string-face fontified nil) 263 289 (face font-lock-string-face fontified nil) 289 290 (face font-lock-string-face fontified nil) 290 291 (face (rainbow-delimiters-depth-1-face) fontified nil) 291 295 (fontified nil) 295 296 (fontified nil rear-nonsticky t)) . 16400) (undo-tree-id245 . -41) (undo-tree-id246 . -110) (undo-tree-id247 . -106) (undo-tree-id248 . -268) (undo-tree-id249 . -268) (undo-tree-id250 . -268) (undo-tree-id251 . -268) (undo-tree-id252 . -243) (undo-tree-id253 . -243) (undo-tree-id254 . -243) (undo-tree-id255 . -243) (undo-tree-id256 . -268) (undo-tree-id257 . -268) (undo-tree-id258 . -268) (undo-tree-id259 . -268) (undo-tree-id260 . -268) (undo-tree-id261 . -268) (undo-tree-id262 . -203) (undo-tree-id263 . -203) (undo-tree-id264 . -203) (undo-tree-id265 . -203) (undo-tree-id266 . -203) (undo-tree-id267 . -203) (undo-tree-id268 . -203) (undo-tree-id269 . -203) (undo-tree-id270 . -203) (undo-tree-id271 . -169) (undo-tree-id272 . -169) (undo-tree-id273 . -169) (undo-tree-id274 . -169) (undo-tree-id275 . -169) (undo-tree-id276 . -169) (undo-tree-id277 . -169) (undo-tree-id278 . -169) (undo-tree-id279 . -169) (undo-tree-id280 . -139) (undo-tree-id281 . -139) (undo-tree-id282 . -139) (undo-tree-id283 . -139) (undo-tree-id284 . -73) (undo-tree-id285 . -73) (undo-tree-id286 . -73) (undo-tree-id287 . -73) (undo-tree-id288 . -73) (undo-tree-id289 . -73) (undo-tree-id290 . -73) (undo-tree-id291 . -73) (undo-tree-id292 . -73) (undo-tree-id293 . -73) (undo-tree-id294 . -73) (undo-tree-id295 . -73) (undo-tree-id296 . -73) (undo-tree-id297 . -40) (undo-tree-id298 . -40) (undo-tree-id299 . -40) (undo-tree-id300 . -40) (undo-tree-id301 . -40) (undo-tree-id302 . -40) (undo-tree-id303 . -40) (undo-tree-id304 . -40) (undo-tree-id305 . -40) (undo-tree-id306 . -41) (undo-tree-id307 . -106) (undo-tree-id308 . -106) (undo-tree-id309 . -106) (undo-tree-id310 . -106) (undo-tree-id311 . -106) (undo-tree-id312 . -106) (undo-tree-id313 . -106) (undo-tree-id314 . -106) (undo-tree-id315 . -106) (undo-tree-id316 . -106) (undo-tree-id317 . -106) (undo-tree-id318 . -106) (undo-tree-id319 . -106) (nil fontified t 16440 . 16441) (nil fontified t 16509 . 16510) (nil fontified t 16539 . 16540) (nil fontified t 16569 . 16570) (nil fontified t 16629 . 16631) (nil fontified t 16695 . 16696)) (25753 37796 306720 193000) 0 nil])
([nil nil ((16443 . 16445) (#("\"" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -16443) (16442 . 16444)) nil (25753 37881 819580 895000) 0 nil])
([nil nil ((16441 . 16461) (#("        " 0 8 (fontified t)) . 16441) 16506) ((16441 . 16449) (#("                    " 0 12 (fontified t) 12 20 (fontified t)) . 16441)) (25753 37796 43921 948000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -16442) (undo-tree-id509 . -1) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -16443) (undo-tree-id510 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 16444)) nil (25753 37881 819574 491000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -16400) 16440) ((16400 . 16408)) (25753 37795 718513 727000) 0 nil])
([nil nil ((16444 . 16463) (16443 . 16445) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16443) (16443 . 16444) (16442 . 16444) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -16442) (16442 . 16443)) nil (25753 37881 819561 623000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -16445) 16477) ((16445 . 16453)) (25753 37795 586486 553000) 0 nil])
([nil nil ((16463 . 16464)) nil (25753 37881 819555 653000) 0 nil])
([nil nil ((16514 . 16518) 16535) ((#("    " 0 4 (fontified t)) . 16514)) (25753 37795 385683 580000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -16460) (undo-tree-id505 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -16461) (undo-tree-id506 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -16462) (undo-tree-id507 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -16463) (undo-tree-id508 . -1) 16464) nil (25753 37881 819552 618000) 0 nil])
([nil nil ((16548 . 16552) 16569) ((#("    " 0 4 (fontified t)) . 16548)) (25753 37795 184355 819000) 0 nil])
([nil nil ((16460 . 16465)) nil (25753 37881 819538 731000) 0 nil])
([nil nil ((16582 . 16586) 16607) ((#("    " 0 4 (fontified t)) . 16582)) (25753 37795 3750 356000) 0 nil])
([nil nil ((16465 . 16486)) nil (25753 37881 819536 876000) 0 nil])
([nil nil ((16639 . 16655) (#("            " 0 12 (fontified t)) . 16639) 16676) ((16639 . 16651) (#("                " 0 16 (fontified t)) . 16639)) (25753 37795 3376 146000) 0 nil])
([nil nil ((16486 . 16489)) nil (25753 37881 819527 4000) 0 nil])
nil
([nil nil ((16560 . 16569) (t 25753 37881 825513 74000)) nil (25753 37941 498675 680000) 0 nil])
([nil nil ((16577 . 16578) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . 16577) (16576 . 16577) (16575 . 16577) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16575) (16575 . 16576) (16574 . 16576) (#("(" 0 1 (face font-lock-keyword-face fontified nil)) . -16574) (16569 . 16575)) nil (25753 37941 498673 592000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 16577) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 16578) nil (25753 37941 498670 404000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -16576) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 16577) nil (25753 37941 498665 419000) 0 nil])
([nil nil ((16576 . 16577)) nil (25753 37941 498653 816000) 0 nil])
([nil nil ((16576 . 16597)) nil (25753 38435 590933 940000) 0 nil])
([nil nil ((#("            logtype = data[\"logType\"]
" 0 8 (fontified nil) 8 12 (fontified nil) 12 19 (face font-lock-variable-name-face fontified nil) 19 26 (fontified nil) 26 27 (face (rainbow-delimiters-depth-1-face) fontified nil) 27 36 (face font-lock-string-face fontified nil) 36 37 (face (rainbow-delimiters-depth-1-face) fontified nil) 37 38 (fontified nil)) . 14295) (undo-tree-id531 . -37) (undo-tree-id532 . -38) (14223 . 14295) (#("        if data['logType'] != edit_filter.log_type and data['logType']:
" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 25 (face font-lock-string-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 51 (fontified t) 51 54 (face font-lock-keyword-face fontified t) 54 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t) 60 69 (face font-lock-string-face fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 72 (fontified t)) . 14185) (14257 . 14295) 14294) nil (25753 39437 577722 200000) 0 nil] [nil nil ((16597 . 16602)) ((#(" ----" 0 5 (face font-lock-string-face)) . 16597) (undo-tree-id517 . -5) (t 25753 37941 505534 65000)) (25753 38435 230638 450000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14193) 14222) nil (25753 39437 577717 737000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 14678) (t 25753 37941 505534 65000)) ((14678 . 14679)) (25753 38435 230277 89000) 0 nil])
([nil nil ((#("        if data['logType'] != edit_filter.log_type and data['logType']:
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-keyword-face) 10 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 25 (fontified nil face font-lock-string-face) 25 26 (fontified nil face (rainbow-delimiters-depth-1-face)) 26 51 (fontified nil) 51 54 (fontified nil face font-lock-keyword-face) 54 59 (fontified nil) 59 60 (fontified nil face (rainbow-delimiters-depth-1-face)) 60 69 (fontified nil face font-lock-string-face) 69 70 (fontified nil face (rainbow-delimiters-depth-1-face)) 70 72 (fontified nil)) . 14291) (14257 . 14291) (#("        logtype = data[\"logType\"]
" 0 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 32 (face font-lock-string-face fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 34 (fontified t)) . 14185) (undo-tree-id530 . -33) (14219 . 14291) 14218) nil (25753 39437 577715 930000) 0 nil])
nil
([nil nil ((14265 . 14269) 14290) nil (25753 39437 577713 23000) 0 nil])
([nil nil ((13977 . 13986)) nil (25753 39437 577711 827000) 0 nil])
([nil nil ((14001 . 14002) (#(")" 0 1 (fontified nil)) . 14001) (14000 . 14001) (13999 . 14001) (#("(" 0 1 (fontified nil)) . -13999) (13986 . 14000)) nil (25753 39437 577710 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14001) (undo-tree-id529 . -1) 14002) nil (25753 39437 577707 733000) 0 nil])
([nil nil ((13986 . 13988)) nil (25753 39437 577705 468000) 0 nil])
([nil nil ((14931 . 14935)) nil (25753 39437 577703 930000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -14932) (undo-tree-id526 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14933) (undo-tree-id527 . -1) (#(" " 0 1 (fontified t)) . -14934) (undo-tree-id528 . -1) 14935) nil (25753 39437 577702 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14925 . 14926) (nil fontified nil 14925 . 14926) (nil fontified nil 14916 . 14925) (nil fontified nil 14915 . 14916) (nil fontified nil 14911 . 14915) (14911 . 14926)) nil (25753 39437 577696 936000) 0 nil])
([nil nil ((14926 . 14927)) nil (25753 39437 577694 854000) 0 nil])
([nil nil ((apply -18 14860 15462 undo--wrap-and-run-primitive-undo 14860 15462 ((15391 . 15393) (15344 . 15346) (15246 . 15248) (15169 . 15171) (15052 . 15054) (15013 . 15015) (14961 . 14963) (14899 . 14901) (14868 . 14870)))) nil (25753 39437 577693 816000) 0 nil])
([nil nil ((14282 . 14295)) nil (25753 39437 577692 824000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14357 . 14358) (nil fontified nil 14357 . 14358) (nil fontified nil 14356 . 14357) (nil fontified nil 14347 . 14356) (nil fontified nil 14346 . 14347) (nil fontified nil 14341 . 14346) (nil fontified nil 14338 . 14341) (nil fontified nil 14313 . 14338) (nil fontified nil 14312 . 14313) (nil fontified nil 14303 . 14312) (nil fontified nil 14302 . 14303) (nil fontified nil 14297 . 14302) (nil fontified nil 14295 . 14297) (14295 . 14358)) nil (25753 39437 577691 119000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14291) (undo-tree-id525 . -4) 14358) nil (25753 39437 577686 814000) 0 nil])
([nil nil ((#("data['logType'] != edit_filter.log_type and" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t) 5 14 (face font-lock-string-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 40 (fontified t) 40 43 (face font-lock-keyword-face fontified t)) . 14294) (undo-tree-id523 . -43) (undo-tree-id524 . -43)) nil (25753 39437 577684 91000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14293) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 14294) nil (25753 39437 577680 107000) 0 nil])
([nil nil ((14309 . 14313)) nil (25753 39437 577675 521000) 0 nil])
([nil nil ((14318 . 14320) (14317 . 14319) (#("[" 0 1 (fontified nil)) . -14317) (14313 . 14318)) nil (25753 39437 577672 817000) 0 nil])
([nil nil ((14319 . 14325)) nil (25753 39437 577670 423000) 0 nil])
([nil nil ((14366 . 14369)) nil (25753 39437 577668 554000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -14367) (undo-tree-id519 . -1) (#(" " 0 1 (fontified t)) . -14368) (undo-tree-id520 . -1) 14369) nil (25753 39437 577664 471000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer)) . -14366) (undo-tree-id518 . -1) 14367) nil (25753 39437 577657 7000) 0 nil])
([nil nil ((14366 . 14367)) nil (25753 39437 577639 303000) 0 nil])
([nil nil ((14367 . 14368)) nil (25753 39437 577638 397000) 0 nil])
([nil nil ((14368 . 14369)) nil (25753 39437 577637 467000) 0 nil])
([nil nil ((14369 . 14370)) nil (25753 39437 577636 514000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14384 . 14385) (nil fontified nil 14384 . 14385) (nil fontified nil 14375 . 14384) (nil fontified nil 14374 . 14375) (nil fontified nil 14370 . 14374) (14370 . 14385)) nil (25753 39440 67722 709000) 0 nil])
([nil nil ((14370 . 14372) (#("(" 0 1 (fontified nil)) . -14370) (14370 . 14371)) nil (25753 39606 410926 88000) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . 14370) (14371 . 14372) 14370) ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14371) (undo-tree-id545 . -1) (14370 . 14371)) (25753 39440 67540 863000) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . 14370) (14371 . 14372) 14370) ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14371) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (14370 . 14371)) (25753 39437 577865 842000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14371)) nil (25753 39606 410924 600000) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified defer)) . 14371) (14372 . 14373) 14371) ((#("/" 0 1 (fontified nil)) . 14372) (undo-tree-id533 . -1) (14371 . 14372)) (25753 39437 577623 469000) 0 nil])
([nil nil ((14386 . 14387)) nil (25753 39606 410923 587000) 0 nil])
nil
([nil nil ((14386 . 14391)) nil (25753 39606 410922 421000) 0 nil])
([nil nil ((#(" and )" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14386) (undo-tree-id569 . -6) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -6) (undo-tree-id573 . -6)) nil (25753 39606 410920 944000) 0 nil])
([nil nil ((14386 . 14392)) nil (25753 39606 410914 440000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -14388) (undo-tree-id565 . -1) (#("s" 0 1 (fontified t)) . -14389) (undo-tree-id566 . -1) (#("e" 0 1 (fontified t)) . -14390) (undo-tree-id567 . -1) (#(" " 0 1 (fontified t)) . -14391) (undo-tree-id568 . -1) 14392) nil (25753 39606 410912 501000) 0 nil])
([nil nil ((14388 . 14409)) nil (25753 39606 410906 185000) 0 nil])
([nil nil ((14409 . 14413)) nil (25753 39606 410904 857000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14412) (undo-tree-id564 . -1) 14413) nil (25753 39606 410903 563000) 0 nil])
([nil nil ((#("
        if data['logType'] != edit_filter.log_type and data['logType']:" 0 1 (fontified t) 1 9 (fontified t) 9 11 (face font-lock-keyword-face fontified t) 11 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 26 (face font-lock-string-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 52 (fontified t) 52 55 (face font-lock-keyword-face fontified t) 55 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 70 (face font-lock-string-face fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t)) . 14210) (undo-tree-id558 . -72) (undo-tree-id559 . -1) (undo-tree-id560 . -55) (undo-tree-id561 . -72) (undo-tree-id562 . -51) (undo-tree-id563 . -72)) nil (25753 39606 410900 857000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14298) (undo-tree-id557 . -1) 14299) nil (25753 39606 410893 400000) 0 nil])
([nil nil ((#("            n_filter = json.loads(data[\"filter\"])
" 0 12 (fontified nil) 12 20 (face font-lock-variable-name-face fontified nil) 20 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-1-face) fontified nil) 34 38 (fontified nil) 38 39 (face (rainbow-delimiters-depth-2-face) fontified nil) 39 47 (face font-lock-string-face fontified nil) 47 48 (face (rainbow-delimiters-depth-2-face) fontified nil) 48 49 (face (rainbow-delimiters-depth-1-face) fontified nil) 49 50 (fontified nil)) . 14433) (14390 . 14433) (#("            edit_filter.log_type = logtype
" 0 12 (fontified t) 12 18 (face font-lock-variable-name-face fontified t) 18 32 (face font-lock-variable-name-face fontified t) 32 43 (fontified t)) . 14340) (undo-tree-id556 . -42) (14383 . 14433) 14382) nil (25753 39606 410890 259000) 0 nil])
([nil nil ((#("            # validate filter itself
" 0 12 (fontified nil) 12 14 (face font-lock-comment-delimiter-face fontified nil) 14 37 (face font-lock-comment-face fontified nil)) . 14470) (14427 . 14470) (#("            edit_filter.log_type = logtype
" 0 12 (fontified t) 12 18 (face font-lock-variable-name-face fontified t) 18 32 (face font-lock-variable-name-face fontified t) 32 43 (fontified t)) . 14390) (undo-tree-id555 . -42) (14433 . 14470) 14432) nil (25753 39606 410886 983000) 0 nil])
([nil nil ((#("            log_tables = firm.get_log_by_types_all(logtype) if firm else DynamicOverview.get_logs_by_type(logtype)
" 0 12 (fontified nil) 12 22 (face font-lock-variable-name-face fontified nil) 22 26 (fontified nil) 26 28 (fontified nil) 28 29 (fontified nil) 29 43 (fontified nil) 43 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 53 (fontified nil) 53 58 (fontified nil) 58 59 (face (rainbow-delimiters-depth-1-face) fontified nil) 59 60 (fontified nil) 60 62 (face font-lock-keyword-face fontified nil) 62 68 (fontified nil) 68 72 (face font-lock-keyword-face fontified nil) 72 105 (fontified nil) 105 106 (face (rainbow-delimiters-depth-1-face) fontified nil) 106 113 (fontified nil) 113 114 (face (rainbow-delimiters-depth-1-face) fontified nil) 114 115 (fontified nil)) . 14585) (14542 . 14585) (#("            edit_filter.log_type = logtype
" 0 12 (fontified defer) 12 18 (face font-lock-variable-name-face fontified defer) 18 32 (face font-lock-variable-name-face fontified defer) 32 43 (fontified defer)) . 14427) (undo-tree-id554 . -42) (14470 . 14585) 14469) nil (25753 39606 410883 647000) 0 nil])
([nil nil ((#("            log_columns, log_types = get_column_info(log_tables, logtype)
" 0 12 (fontified nil) 12 23 (face font-lock-variable-name-face fontified nil) 23 25 (fontified nil) 25 34 (face font-lock-variable-name-face fontified nil) 34 52 (fontified nil) 52 53 (face (rainbow-delimiters-depth-1-face) fontified nil) 53 72 (fontified nil) 72 73 (face (rainbow-delimiters-depth-1-face) fontified nil) 73 74 (fontified nil)) . 14659) (14616 . 14659) (#("            edit_filter.log_type = logtype
" 0 12 (fontified nil) 12 18 (face font-lock-variable-name-face fontified nil) 18 32 (face font-lock-variable-name-face fontified nil) 32 43 (fontified nil)) . 14542) (14585 . 14659) 14584) nil (25753 39606 410880 375000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 14660) (14617 . 14660) (#("            edit_filter.log_type = logtype
" 0 12 (fontified defer) 12 18 (face font-lock-variable-name-face fontified defer) 18 32 (face font-lock-variable-name-face fontified defer) 32 43 (fontified defer)) . 14616) (undo-tree-id553 . -42) (14659 . 14660) 14658) nil (25753 39606 410878 93000) 0 nil])
([nil nil ((#("            _, _, _, errMsg, statusCode = parseFilter([n_filter], log_columns, None, log_types)
" 0 12 (fontified nil) 12 13 (face font-lock-variable-name-face fontified nil) 13 15 (fontified nil) 15 16 (face font-lock-variable-name-face fontified nil) 16 18 (fontified nil) 18 19 (face font-lock-variable-name-face fontified nil) 19 21 (fontified nil) 21 23 (face font-lock-variable-name-face fontified nil) 23 26 (face font-lock-variable-name-face fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 29 (fontified nil) 29 39 (face font-lock-variable-name-face fontified nil) 39 50 (fontified nil) 50 53 (fontified nil) 53 54 (face (rainbow-delimiters-depth-1-face) fontified nil) 54 55 (face (rainbow-delimiters-depth-2-face) fontified nil) 55 60 (fontified nil) 60 63 (fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 68 (fontified nil) 68 69 (fontified nil) 69 74 (fontified nil) 74 79 (fontified nil) 79 83 (face font-lock-constant-face fontified nil) 83 94 (fontified nil) 94 95 (face (rainbow-delimiters-depth-1-face) fontified nil) 95 96 (fontified nil)) . 14756) (14713 . 14756) (#("            edit_filter.log_type = logtype
" 0 12 (fontified defer) 12 18 (face font-lock-variable-name-face fontified defer) 18 32 (face font-lock-variable-name-face fontified defer) 32 43 (fontified defer)) . 14617) (undo-tree-id552 . -42) (14660 . 14756) 14659) nil (25753 39606 410874 502000) 0 nil])
([nil nil ((#("            if errMsg and statusCode != 200:
" 0 7 (fontified nil) 7 12 (fontified nil) 12 13 (face font-lock-keyword-face fontified nil) 13 14 (face font-lock-keyword-face fontified nil) 14 18 (fontified nil) 18 19 (fontified nil) 19 22 (fontified nil) 22 25 (face font-lock-keyword-face fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 44 (fontified nil) 44 45 (fontified nil)) . 14801) (14758 . 14801) (#("            edit_filter.log_type = logtype
" 0 12 (fontified defer) 12 18 (face font-lock-variable-name-face fontified defer) 18 32 (face font-lock-variable-name-face fontified defer) 32 43 (fontified defer)) . 14713) (undo-tree-id551 . -42) (14756 . 14801) 14755) nil (25753 39606 410870 852000) 0 nil])
([nil nil ((#("                return {'message': \"filter could not be parsed\"}, statusCode
" 0 1 (fontified nil) 1 16 (fontified nil) 16 22 (face font-lock-keyword-face fontified nil) 22 23 (fontified nil) 23 24 (face (rainbow-delimiters-depth-1-face) fontified nil) 24 25 (face font-lock-string-face fontified nil) 25 32 (face font-lock-string-face fontified nil) 32 33 (face font-lock-string-face fontified nil) 33 35 (fontified nil) 35 37 (face font-lock-string-face fontified nil) 37 39 (face font-lock-string-face fontified nil) 39 63 (face font-lock-string-face fontified nil) 63 64 (face (rainbow-delimiters-depth-1-face) fontified nil) 64 77 (fontified nil)) . 14878) (14835 . 14878) (#("            edit_filter.log_type = logtype
" 0 12 (fontified defer) 12 18 (face font-lock-variable-name-face fontified defer) 18 32 (face font-lock-variable-name-face fontified defer) 32 43 (fontified defer)) . 14758) (undo-tree-id550 . -42) (14801 . 14878) 14800) nil (25753 39606 410867 430000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 14879) (undo-tree-id548 . -1) (14836 . 14879) (#("            edit_filter.log_type = logtype
" 0 12 (fontified t) 12 18 (face font-lock-variable-name-face fontified t) 18 32 (face font-lock-variable-name-face fontified t) 32 43 (fontified t)) . 14835) (undo-tree-id549 . -42) (14878 . 14879) 14877) nil (25753 39606 410864 31000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14844) 14878) nil (25753 39606 410859 83000) 0 nil])
([nil nil ((13977 . 13986)) nil (25753 39606 410857 689000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14061 . 14062) (nil fontified nil 14061 . 14062) (nil fontified nil 14052 . 14061) (nil fontified nil 14046 . 14052) (nil fontified nil 14011 . 14046) (nil fontified nil 14010 . 14011) (nil fontified nil 13996 . 14010) (nil fontified nil 13986 . 13996) (13986 . 14062)) nil (25753 39606 410856 465000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14026 . 14027) (nil fontified nil 14022 . 14027) (nil fontified nil 14016 . 14022) (14016 . 14027)) nil (25753 39606 410852 854000) 0 nil])
([nil nil ((14027 . 14028)) nil (25753 39606 410847 918000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14059 . 14060) (nil fontified nil 14055 . 14060) (nil fontified nil 14049 . 14055) (14049 . 14060)) nil (25753 39606 410844 209000) 0 nil])
([nil nil ((14060 . 14061)) nil (25753 39606 410841 283000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14087 . 14088) (nil fontified nil 14083 . 14088) (nil fontified nil 14077 . 14083) (14077 . 14088)) nil (25753 39606 410839 319000) 0 nil])
([nil nil ((14088 . 14089)) nil (25753 39606 410832 834000) 0 nil])
([nil nil ((14064 . 14065)) nil (25753 39606 410824 938000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14090) (undo-tree-id546 . -1) (#("_" 0 1 (fontified t)) . -14091) (undo-tree-id547 . -1) 14092) nil (25753 39606 410822 427000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing fontified t)) . -15086) 14091) nil (25753 39606 410806 716000) 0 nil])
([nil nil ((#("        # new_filter = ()" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 20 (face font-lock-comment-face fontified t) 20 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t)) . 14098) (undo-tree-id629 . -25) (undo-tree-id630 . -25) (t 25753 39606 418324 799000)) nil (25753 39632 312972 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14097) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) 14098) nil (25753 39632 312968 639000) 0 nil])
([nil nil ((14097 . 14106)) nil (25753 39632 312963 989000) 0 nil])
([nil nil ((14939 . 14951) (#("            " 0 12 (fontified nil)) . 14938) (undo-tree-id625 . -12) (14937 . 14951)) nil (25753 39632 312962 605000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14960 . 14961) (nil fontified nil 14951 . 14961) (14951 . 14961)) nil (25753 39632 312959 832000) 0 nil])
([nil nil ((14961 . 14973)) nil (25753 39632 312958 159000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14972) (undo-tree-id624 . -1) 14973) nil (25753 39632 312956 343000) 0 nil])
([nil nil ((14492 . 14496)) nil (25753 39632 522301 112000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14509 . 14510) (nil fontified nil 14509 . 14510) (nil fontified nil 14506 . 14509) (nil fontified nil 14501 . 14506) (nil fontified nil 14500 . 14501) (nil fontified nil 14496 . 14500) (14496 . 14510)) nil (25753 39640 995110 386000) 0 nil] [nil nil ((#("data[\"filter\"]" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t) 5 10 (face font-lock-string-face fontified t) 10 13 (face font-lock-string-face fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t)) . 14477) (undo-tree-id574 . -14) (undo-tree-id575 . -14) (undo-tree-id576 . -14) (undo-tree-id577 . -14) (undo-tree-id578 . -14) (undo-tree-id579 . -14) (undo-tree-id580 . -14) (undo-tree-id581 . -14) (undo-tree-id582 . -13) (undo-tree-id583 . -13) (undo-tree-id584 . -13) (undo-tree-id585 . -13) (undo-tree-id586 . -13) (undo-tree-id587 . -13) (undo-tree-id588 . -13) (undo-tree-id589 . -11) (undo-tree-id590 . -11) (undo-tree-id591 . -11) (undo-tree-id592 . -7) (undo-tree-id593 . -7) (undo-tree-id594 . -7) (undo-tree-id595 . -7) (undo-tree-id596 . -6) (undo-tree-id597 . -6) (undo-tree-id598 . -6) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -14) (undo-tree-id623 . -14)) ((14477 . 14491)) (25753 39632 313148 279000) 0 nil])
([nil nil ((14510 . 14516)) nil (25753 39640 995259 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14486 . 14487) (nil fontified nil 14477 . 14487) (14477 . 14487)) ((#("new_filter" 0 9 (fontified nil) 9 10 (rear-nonsticky nil fontified nil)) . 14477) (undo-tree-id631 . -10) (nil rear-nonsticky t 14486 . 14487)) (25753 39632 312876 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14535 . 14536) (nil fontified nil 14516 . 14536) (14516 . 14536)) nil (25753 40208 485140 662000) 0 nil] [nil nil ((nil rear-nonsticky nil 14529 . 14530) (nil fontified nil 14529 . 14530) (nil fontified nil 14526 . 14529) (nil fontified nil 14521 . 14526) (nil fontified nil 14520 . 14521) (nil fontified nil 14516 . 14520) (14516 . 14530)) ((#("data[\"filter\"]" 0 4 (fontified nil) 4 5 (face (rainbow-delimiters-depth-1-face) fontified nil) 5 10 (face font-lock-string-face fontified nil) 10 13 (face font-lock-string-face fontified nil) 13 14 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 14516) (undo-tree-id632 . -14) (nil rear-nonsticky t 14529 . 14530)) (25753 39640 995077 171000) 0 nil])
nil
([nil nil ((#("l" 0 1 (fontified t)) . -14528) (undo-tree-id691 . -1) (#("o" 0 1 (fontified t)) . -14529) (undo-tree-id692 . -1) (#("g" 0 1 (fontified t)) . -14530) (undo-tree-id693 . -1) (#("_" 0 1 (fontified t)) . -14531) (undo-tree-id694 . -1) (#("t" 0 1 (fontified t)) . -14532) (undo-tree-id695 . -1) (#("y" 0 1 (fontified t)) . -14533) (undo-tree-id696 . -1) (#("p" 0 1 (fontified t)) . -14534) (undo-tree-id697 . -1) (#("e" 0 1 (rear-nonsticky t fontified t)) . -14535) (undo-tree-id698 . -1) 14536) nil (25753 40208 485137 405000) 0 nil])
nil
([nil nil ((14528 . 14534)) nil (25753 40208 485125 321000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15003) (undo-tree-id689 . -1) (#("=" 0 1 (fontified t)) . -15004) (undo-tree-id690 . -1) 15005) nil (25753 40208 485123 810000) 0 nil])
([nil nil ((15003 . 15005)) nil (25753 40208 485120 332000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15004) (undo-tree-id688 . -1) 15005) nil (25753 40208 485119 216000) 0 nil])
([nil nil ((15004 . 15005)) nil (25753 40208 485116 892000) 0 nil])
([nil nil ((15005 . 15011)) nil (25753 40208 485115 878000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -15010) (undo-tree-id687 . -1) 15011) nil (25753 40208 485114 659000) 0 nil])
([nil nil ((15010 . 15013)) nil (25753 40208 485112 358000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15012) (undo-tree-id686 . -1) 15013) nil (25753 40208 485111 114000) 0 nil])
([nil nil ((15021 . 15034)) nil (25753 40208 485108 788000) 0 nil])
([nil nil ((15034 . 15049)) nil (25753 40208 485107 684000) 0 nil])
([nil nil ((15049 . 15056)) nil (25753 40208 485106 557000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -15055) (undo-tree-id685 . -1) 15056) nil (25753 40208 485105 351000) 0 nil])
([nil nil ((15055 . 15064)) nil (25753 40208 485102 942000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15063) (undo-tree-id684 . -1) 15064) nil (25753 40208 485101 559000) 0 nil])
([nil nil ((#("        edit_filter.log_type = logtype" 0 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 17 (face font-lock-variable-name-face fontified t) 17 19 (face font-lock-variable-name-face fontified t) 19 28 (face font-lock-variable-name-face fontified t) 28 38 (fontified t)) . 15065) (undo-tree-id682 . -38) (undo-tree-id683 . -38)) nil (25753 40208 485099 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15064) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) 15065) nil (25753 40208 485095 696000) 0 nil])
([nil nil ((#("edit_filter" 0 11 (face font-lock-variable-name-face fontified t)) . 15853) (undo-tree-id677 . -11) (undo-tree-id678 . -11)) nil (25753 40208 485091 225000) 0 nil])
([nil nil ((nil fontified nil 15862 . 15863) (nil fontified nil 15855 . 15862) (nil fontified nil 15853 . 15855) (15853 . 15863)) nil (25753 40208 485087 622000) 0 nil])
([nil nil ((#("edit_filter" 0 11 (face font-lock-variable-name-face fontified t)) . 15905) (undo-tree-id675 . -11) (undo-tree-id676 . -11)) nil (25753 40208 485085 309000) 0 nil])
([nil nil ((nil fontified nil 15914 . 15915) (nil fontified nil 15907 . 15914) (nil fontified nil 15905 . 15907) (15905 . 15915)) nil (25753 40208 485081 536000) 0 nil])
([nil nil ((#("edit_filter" 0 8 (face font-lock-variable-name-face fontified t) 8 11 (face font-lock-variable-name-face fontified t)) . 16050) (undo-tree-id673 . -11) (undo-tree-id674 . -11)) nil (25753 40208 485075 694000) 0 nil])
([nil nil ((nil fontified nil 16059 . 16060) (nil fontified nil 16052 . 16059) (nil fontified nil 16050 . 16052) (16050 . 16060)) nil (25753 40208 485062 413000) 0 nil])
([nil nil ((#("edit_filter" 0 5 (face font-lock-variable-name-face fontified t) 5 11 (face font-lock-variable-name-face fontified t)) . 16095) (undo-tree-id671 . -11) (undo-tree-id672 . -11)) nil (25753 40208 485057 105000) 0 nil])
([nil nil ((nil fontified nil 16104 . 16105) (nil fontified nil 16097 . 16104) (nil fontified nil 16095 . 16097) (16095 . 16105)) nil (25753 40208 485050 668000) 0 nil])
([nil nil ((14071 . 14104) (#(" " 0 1 (fontified nil)) . 14070) (undo-tree-id670 . -1) (14071 . 14072)) nil (25753 40208 485048 662000) 0 nil])
([nil nil ((14129 . 14131)) nil (25753 40208 485046 162000) 0 nil])
([nil nil ((14131 . 14142)) nil (25753 40208 485045 29000) 0 nil])
([nil nil ((14142 . 14163)) nil (25753 40208 485044 67000) 0 nil])
([nil nil ((14163 . 14164)) nil (25753 40208 485043 143000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -14162) (undo-tree-id668 . -1) (#(" " 0 1 (fontified t)) . -14163) (undo-tree-id669 . -1) 14164) nil (25753 40208 485041 352000) 0 nil])
([nil nil ((14162 . 14181)) nil (25753 40208 485037 654000) 0 nil])
([nil nil ((14181 . 14194)) nil (25753 40208 485036 555000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14193) (undo-tree-id667 . -1) 14194) nil (25753 40208 485035 309000) 0 nil])
([nil nil ((14164 . 14197) (#(" " 0 1 (fontified nil)) . 14163) (undo-tree-id666 . -1) (14164 . 14165)) nil (25753 40208 485032 644000) 0 nil])
([nil nil ((#("filterpath" 0 10 (fontified t)) . 14028) (undo-tree-id664 . -10) (undo-tree-id665 . -10)) nil (25753 40208 485029 852000) 0 nil])
([nil nil ((14028 . 14032)) nil (25753 40208 485026 600000) 0 nil])
([nil nil ((#("edit_filter" 0 4 (face font-lock-variable-name-face fontified t) 4 11 (face font-lock-variable-name-face fontified t)) . 16742) (undo-tree-id662 . -11) (undo-tree-id663 . -11)) nil (25753 40208 485025 302000) 0 nil])
([nil nil ((nil fontified nil 16751 . 16752) (nil fontified nil 16745 . 16751) (nil fontified nil 16744 . 16745) (nil fontified nil 16742 . 16744) (16742 . 16752)) nil (25753 40208 485021 891000) 0 nil])
([nil nil ((#("edit_filter" 0 10 (fontified t) 10 11 (fontified t rear-nonsticky t)) . 16932) (undo-tree-id660 . -11) (undo-tree-id661 . -11)) nil (25753 40208 485019 684000) 0 nil])
([nil nil ((nil fontified nil 16941 . 16942) (nil fontified nil 16935 . 16941) (nil fontified nil 16934 . 16935) (nil fontified nil 16932 . 16934) (16932 . 16942)) nil (25753 40208 485016 568000) 0 nil])
([nil nil ((17183 . 17196)) nil (25753 40208 485014 744000) 0 nil])
([nil nil ((17196 . 17198)) nil (25753 40208 485013 820000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -17197) (undo-tree-id659 . -1) 17198) nil (25753 40208 485012 593000) 0 nil])
([nil nil ((17197 . 17208)) nil (25753 40208 485010 129000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -17207) (undo-tree-id658 . -1) 17208) nil (25753 40208 485008 899000) 0 nil])
([nil nil ((17207 . 17215)) nil (25753 40208 485006 347000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17229 . 17230) (nil fontified nil 17225 . 17230) (nil fontified nil 17224 . 17225) (nil fontified nil 17218 . 17224) (nil fontified nil 17217 . 17218) (nil fontified nil 17215 . 17217) (17215 . 17230)) nil (25753 40208 485004 969000) 0 nil])
([nil nil ((17230 . 17243)) nil (25753 40208 485002 804000) 0 nil])
([nil nil ((17243 . 17264)) nil (25753 40208 485001 916000) 0 nil])
([nil nil ((17264 . 17266)) nil (25753 40208 485000 925000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17284 . 17285) (nil fontified nil 17276 . 17285) (nil fontified nil 17275 . 17276) (nil fontified nil 17268 . 17275) (nil fontified nil 17266 . 17268) (17266 . 17285)) nil (25753 40208 484999 691000) 0 nil])
([nil nil ((17285 . 17298)) nil (25753 40208 484997 629000) 0 nil])
([nil nil ((17298 . 17304)) nil (25753 40208 484996 699000) 0 nil])
([nil nil ((17304 . 17318)) nil (25753 40208 484995 803000) 0 nil])
([nil nil ((17318 . 17320)) nil (25753 40208 484994 849000) 0 nil])
([nil nil ((nil fontified nil 17338 . 17339) (nil fontified nil 17330 . 17338) (nil fontified nil 17329 . 17330) (nil fontified nil 17322 . 17329) (nil fontified nil 17320 . 17322) (17320 . 17339)) nil (25753 40208 484993 594000) 0 nil])
([nil nil ((#("group" 0 5 (fontified t)) . 17331) (undo-tree-id656 . -5) (undo-tree-id657 . -5)) nil (25753 40208 484991 216000) 0 nil])
([nil nil ((17331 . 17335)) nil (25753 40208 484987 967000) 0 nil])
([nil nil ((#("g" 0 1 (fontified defer)) . -17331) (undo-tree-id652 . -1) (#("i" 0 1 (fontified t)) . -17332) (undo-tree-id653 . -1) (#("r" 0 1 (fontified t)) . -17333) (undo-tree-id654 . -1) (#("m" 0 1 (fontified t)) . -17334) (undo-tree-id655 . -1) 17335) nil (25753 40208 484985 741000) 0 nil])
([nil nil ((17331 . 17335)) nil (25753 40208 484979 254000) 0 nil])
([nil nil ((17230 . 17243)) nil (25753 40208 484978 177000) 0 nil])
([nil nil ((nil fontified nil 17276 . 17277) (nil fontified nil 17272 . 17276) (nil fontified nil 17271 . 17272) (nil fontified nil 17265 . 17271) (nil fontified nil 17264 . 17265) (nil fontified nil 17262 . 17264) (nil fontified nil 17261 . 17262) (nil fontified nil 17259 . 17261) (nil fontified nil 17243 . 17259) (17243 . 17277)) nil (25753 40208 484976 710000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -17255) (undo-tree-id648 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified defer)) . -17256) (undo-tree-id649 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -17257) (undo-tree-id650 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -17258) (undo-tree-id651 . -1) 17259) nil (25753 40208 484972 696000) 0 nil])
([nil nil ((17255 . 17264)) nil (25753 40208 484966 531000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -17260) (undo-tree-id644 . -1) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -17261) (undo-tree-id645 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -17262) (undo-tree-id646 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -17263) (undo-tree-id647 . -1) 17264) nil (25753 40208 484964 550000) 0 nil])
([nil nil ((17260 . 17263)) nil (25753 40208 484958 491000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t rear-nonsticky t)) . 17277) (#("m" 0 1 (fontified t)) . 17277) (#("a" 0 1 (fontified t)) . 17277) (#("n" 0 1 (fontified t)) . 17277)) nil (25753 40208 484956 752000) 0 nil])
([nil nil ((17277 . 17286)) nil (25753 40208 484955 113000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -17285) (undo-tree-id643 . -1) 17286) nil (25753 40208 484953 851000) 0 nil])
([nil nil ((17285 . 17298)) nil (25753 40208 484951 514000) 0 nil])
([nil nil ((nil fontified nil 17331 . 17332) (nil fontified nil 17327 . 17331) (nil fontified nil 17326 . 17327) (nil fontified nil 17320 . 17326) (nil fontified nil 17319 . 17320) (nil fontified nil 17317 . 17319) (nil fontified nil 17316 . 17317) (nil fontified nil 17314 . 17316) (nil fontified nil 17298 . 17314) (17298 . 17332)) nil (25753 40208 484949 887000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -17310) (undo-tree-id639 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -17311) (undo-tree-id640 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -17312) (undo-tree-id641 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -17313) (undo-tree-id642 . -1) 17314) nil (25753 40208 484945 665000) 0 nil])
([nil nil ((17310 . 17316)) nil (25753 40208 484939 266000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -17330) (undo-tree-id635 . -1) (#("a" 0 1 (fontified t)) . -17331) (undo-tree-id636 . -1) (#("m" 0 1 (fontified t)) . -17332) (undo-tree-id637 . -1) (#("e" 0 1 (fontified t rear-nonsticky t)) . -17333) (undo-tree-id638 . -1) 17334) nil (25753 40208 484936 944000) 0 nil])
([nil nil ((17330 . 17333)) nil (25753 40208 484930 576000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -17331) (undo-tree-id633 . -1) (#("i" 0 1 (fontified t)) . -17332) (undo-tree-id634 . -1) 17333) nil (25753 40208 484928 716000) 0 nil])
([nil nil ((17331 . 17336)) nil (25753 40208 484918 184000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing fontified t)) . -14222) 17336) nil (25753 40208 484909 850000) 0 nil])
([nil nil ((#("        if filterExist and filterExist.id != edit_filter.id:
" 0 8 (fontified nil) 8 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 15 (fontified nil) 15 23 (fontified nil) 23 26 (face font-lock-keyword-face fontified nil) 26 27 (fontified nil) 27 39 (fontified nil) 39 41 (face font-lock-builtin-face fontified nil) 41 54 (fontified nil) 54 56 (fontified nil) 56 57 (fontified nil) 57 58 (face font-lock-builtin-face fontified nil) 58 59 (face font-lock-builtin-face fontified nil) 59 61 (fontified nil)) . 17096) (17066 . 17096) (#("        print(edit_filter.id)
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 24 (fontified t) 24 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t)) . 17005) (undo-tree-id701 . -29) (17035 . 17096) 17034 (t 25753 40208 494541 431000)) nil (25753 40502 660465 199000) 0 nil])
([nil nil ((17074 . 17078) 17095) nil (25753 40502 660461 322000) 0 nil])
([nil nil ((#("        if filterExist and filterExist.id != edit_filter.id:
" 0 8 (fontified nil) 8 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 15 (fontified nil) 15 23 (fontified nil) 23 26 (face font-lock-keyword-face fontified nil) 26 27 (fontified nil) 27 39 (fontified nil) 39 41 (face font-lock-builtin-face fontified nil) 41 54 (fontified nil) 54 56 (fontified nil) 56 57 (fontified nil) 57 58 (face font-lock-builtin-face fontified nil) 58 59 (face font-lock-builtin-face fontified nil) 59 61 (fontified nil)) . 17066) (17036 . 17066) (#("        print(filterExist.id)
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 25 (fontified t) 25 26 (fontified t) 26 28 (face font-lock-builtin-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t)) . 16975) (undo-tree-id699 . -29) (undo-tree-id700 . -29) (17005 . 17066) 17004) nil (25753 40502 660458 204000) 0 nil])
([nil nil ((17044 . 17048) 17065) nil (25753 40502 660439 931000) 0 nil])
([nil nil ((#("
            print(filterExist.id)
            print(edit_filter.id)" 0 1 (fontified t) 1 13 (fontified t) 13 18 (face font-lock-keyword-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 30 (fontified t) 30 31 (fontified t) 31 33 (face font-lock-builtin-face fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 35 (fontified t) 35 47 (fontified t) 47 52 (face font-lock-keyword-face fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 63 (fontified t) 63 65 (fontified t) 65 67 (face font-lock-builtin-face fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t)) . 17035) (undo-tree-id713 . -68) (undo-tree-id714 . -1) (undo-tree-id715 . -68) (t 25753 40502 670634 816000)) nil (25753 40559 490527 399000) 0 nil])
([nil nil ((#("
        print(\"PRINTING FILTGER INFO\")" 0 1 (fontified t) 1 9 (fontified t) 9 14 (face font-lock-keyword-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 30 (face font-lock-string-face fontified t) 30 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16935) (undo-tree-id710 . -39) (undo-tree-id711 . -1) (undo-tree-id712 . -39)) nil (25753 40559 490517 903000) 0 nil])
([nil nil ((#("
        print(\"--------------- chekcing filter -------------\")" 0 1 (face font-lock-comment-face fontified t) 1 9 (fontified t) 9 14 (face font-lock-keyword-face fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 61 (face font-lock-string-face fontified t) 61 62 (face font-lock-string-face fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16804) (undo-tree-id707 . -63) (undo-tree-id708 . -1) (undo-tree-id709 . -63)) nil (25753 40559 490504 240000) 0 nil])
([nil nil ((#("

        # elif data['filter']:
        #     logtype = data[\"logType\"] edit_filter.log_type
        #     n_filter = json.loads(data[\"filter\"])
        #     # validate filter itself
        #     log_tables = firm.get_log_by_types_all(logtype) if firm else DynamicOverview.get_logs_by_type(logtype)
        #     log_columns, log_types = get_column_info(log_tables, logtype)

        #     _, _, _, errMsg, statusCode = parseFilter([n_filter], log_columns, None, log_types)
        #     if errMsg and statusCode != 200:
        #         return {'message': \"filter could not be parsed\"}, statusCode" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 10 (fontified t) 10 12 (face font-lock-comment-delimiter-face fontified t) 12 16 (face font-lock-comment-face fontified t) 16 17 (face font-lock-comment-face fontified t) 17 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 29 (face font-lock-comment-face fontified t) 29 30 (face font-lock-comment-face fontified t) 30 31 (face font-lock-comment-face fontified t) 31 33 (face font-lock-comment-face fontified t) 33 35 (fontified t) 35 41 (fontified t) 41 43 (face font-lock-comment-delimiter-face fontified t) 43 47 (face font-lock-comment-delimiter-face fontified t) 47 54 (face font-lock-comment-face fontified t) 54 57 (face font-lock-comment-face fontified t) 57 61 (face font-lock-comment-face fontified t) 61 62 (face font-lock-comment-face fontified t) 62 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t rear-nonsticky t) 72 73 (face font-lock-comment-face fontified t) 73 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 102 (fontified t) 102 104 (face font-lock-comment-delimiter-face fontified t) 104 108 (face font-lock-comment-delimiter-face fontified t) 108 116 (face font-lock-comment-face fontified t) 116 124 (face font-lock-comment-face fontified t) 124 129 (face font-lock-comment-face fontified t) 129 130 (face font-lock-comment-face fontified t) 130 131 (face font-lock-comment-face fontified t) 131 134 (face font-lock-comment-face fontified t) 134 135 (face font-lock-comment-face fontified t) 135 143 (face font-lock-comment-face fontified t) 143 144 (face font-lock-comment-face fontified t) 144 145 (face font-lock-comment-face fontified t) 145 146 (face font-lock-comment-face fontified t) 146 154 (fontified t) 154 156 (face font-lock-comment-delimiter-face fontified t) 156 160 (face font-lock-comment-delimiter-face fontified t) 160 162 (face font-lock-comment-face fontified t) 162 168 (face font-lock-comment-face fontified t) 168 169 (face font-lock-comment-face fontified t) 169 170 (face font-lock-comment-face fontified t) 170 185 (face font-lock-comment-face fontified t) 185 193 (fontified t) 193 195 (face font-lock-comment-delimiter-face fontified t) 195 199 (face font-lock-comment-delimiter-face fontified t) 199 209 (face font-lock-comment-face fontified t) 209 234 (face font-lock-comment-face fontified t) 234 237 (face font-lock-comment-face fontified t) 237 238 (face font-lock-comment-face fontified t) 238 245 (face font-lock-comment-face fontified t) 245 246 (face font-lock-comment-face fontified t) 246 247 (face font-lock-comment-face fontified t) 247 249 (face font-lock-comment-face fontified t) 249 255 (face font-lock-comment-face fontified t) 255 259 (face font-lock-comment-face fontified t) 259 292 (face font-lock-comment-face fontified t) 292 293 (face font-lock-comment-face fontified t) 293 300 (face font-lock-comment-face fontified t) 300 301 (face font-lock-comment-face fontified t) 301 302 (face font-lock-comment-face fontified t) 302 309 (fontified t) 309 310 (fontified t) 310 312 (face font-lock-comment-delimiter-face fontified t) 312 316 (face font-lock-comment-delimiter-face fontified t) 316 327 (face font-lock-comment-face fontified t) 327 329 (face font-lock-comment-face fontified t) 329 332 (face font-lock-comment-face fontified t) 332 334 (face font-lock-comment-face fontified t) 334 338 (face font-lock-comment-face fontified t) 338 356 (face font-lock-comment-face fontified t) 356 357 (face font-lock-comment-face fontified t) 357 375 (face font-lock-comment-face fontified t) 375 376 (face font-lock-comment-face fontified t) 376 377 (face font-lock-comment-face fontified t) 377 378 (face font-lock-comment-face fontified t) 378 380 (fontified t) 380 387 (fontified t) 387 389 (face font-lock-comment-delimiter-face fontified t) 389 393 (face font-lock-comment-delimiter-face fontified t) 393 394 (face font-lock-comment-face fontified t) 394 396 (face font-lock-comment-face fontified t) 396 397 (face font-lock-comment-face fontified t) 397 399 (face font-lock-comment-face fontified t) 399 400 (face font-lock-comment-face fontified t) 400 402 (face font-lock-comment-face fontified t) 402 408 (face font-lock-comment-face fontified t) 408 409 (face font-lock-comment-face fontified t) 409 410 (face font-lock-comment-face fontified t) 410 417 (face font-lock-comment-face fontified t) 417 420 (face font-lock-comment-face fontified t) 420 421 (face font-lock-comment-face fontified t) 421 423 (face font-lock-comment-face fontified t) 423 424 (face font-lock-comment-face fontified t) 424 426 (face font-lock-comment-face fontified t) 426 427 (face font-lock-comment-face fontified t) 427 434 (face font-lock-comment-face fontified t) 434 435 (face font-lock-comment-face fontified t) 435 436 (face font-lock-comment-face fontified t) 436 437 (face font-lock-comment-face fontified t) 437 439 (face font-lock-comment-face fontified t) 439 444 (face font-lock-comment-face fontified t) 444 445 (face font-lock-comment-face fontified t) 445 448 (face font-lock-comment-face fontified t) 448 457 (face font-lock-comment-face fontified t) 457 460 (face font-lock-comment-face fontified t) 460 462 (face font-lock-comment-face fontified t) 462 464 (face font-lock-comment-face fontified t) 464 475 (face font-lock-comment-face fontified t) 475 476 (face font-lock-comment-face fontified t) 476 477 (face font-lock-comment-face fontified t) 477 480 (fontified t) 480 482 (fontified t) 482 485 (fontified t) 485 487 (face font-lock-comment-delimiter-face fontified t) 487 491 (face font-lock-comment-delimiter-face fontified t) 491 493 (face font-lock-comment-face fontified t) 493 495 (face font-lock-comment-face fontified t) 495 500 (face font-lock-comment-face fontified t) 500 501 (face font-lock-comment-face fontified t) 501 502 (face font-lock-comment-face fontified t) 502 504 (face font-lock-comment-face fontified t) 504 524 (face font-lock-comment-face fontified t) 524 532 (fontified t) 532 533 (face font-lock-comment-delimiter-face fontified t) 533 534 (face font-lock-comment-delimiter-face fontified t) 534 535 (face font-lock-comment-delimiter-face fontified t) 535 540 (face font-lock-comment-delimiter-face fontified t) 540 542 (face font-lock-comment-delimiter-face fontified t) 542 548 (face font-lock-comment-face fontified t) 548 549 (face font-lock-comment-face fontified t) 549 550 (face font-lock-comment-face fontified t) 550 551 (face font-lock-comment-face fontified t) 551 558 (face font-lock-comment-face fontified t) 558 559 (face font-lock-comment-face fontified t) 559 561 (face font-lock-comment-face fontified t) 561 562 (face font-lock-comment-face fontified t) 562 565 (face font-lock-comment-face fontified t) 565 589 (face font-lock-comment-face fontified t) 589 590 (face font-lock-comment-face fontified t) 590 594 (face font-lock-comment-face fontified t) 594 602 (face font-lock-comment-face fontified t)) . 15179) (undo-tree-id702 . -602) (undo-tree-id703 . -94) (undo-tree-id704 . -2) (undo-tree-id705 . -1) (undo-tree-id706 . -602)) nil (25753 40559 490491 480000) 0 nil])
([nil nil ((9356 . 9373) (t 25762 33016 961797 361000)) nil (25786 21287 472552 549000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9369) (undo-tree-id10 . -4) 9373) nil (25786 21287 472550 919000) 0 nil])
([nil nil ((9369 . 9388)) nil (25786 21287 472548 470000) 0 nil])
([nil nil ((9382 . 9395) (#("append" 0 6 (fontified t)) . -9382) (undo-tree-id8 . -6) (undo-tree-id9 . -6) 9388) nil (25786 21287 472547 118000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 9397) (9396 . 9397) (9395 . 9397) (#("(" 0 1 (fontified nil)) . -9395) (9395 . 9396)) nil (25786 21287 472542 738000) 0 nil])
([nil nil ((9396 . 9399)) nil (25786 21287 472540 821000) 0 nil])
([nil nil ((9399 . 9408)) nil (25786 21287 472539 793000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -9401) (undo-tree-id1 . -1) (#("i" 0 1 (fontified t)) . -9402) (undo-tree-id2 . -1) (#("l" 0 1 (fontified t)) . -9403) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t)) . -9404) (undo-tree-id4 . -1) (#("e" 0 1 (fontified t)) . -9405) (undo-tree-id5 . -1) (#("r" 0 1 (fontified t)) . -9406) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -9407) (undo-tree-id7 . -1) 9408) nil (25786 21287 472537 80000) 0 nil])
([nil nil ((9401 . 9407)) nil (25786 21287 472524 301000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -9406) (undo-tree-id0 . -1) 9407) nil (25786 21287 472519 87000) 0 nil])
nil
