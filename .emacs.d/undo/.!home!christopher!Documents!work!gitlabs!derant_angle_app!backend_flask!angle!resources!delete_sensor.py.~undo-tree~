(undo-tree-save-format-version . 1)
"2f7a6414eb1b9c95c17215a32cfec53edae6bfba"
[nil nil nil nil (25765 18621 409578 164000) 0 nil]
([nil nil ((253 . 254) (t 25762 33016 957797 282000)) nil (25765 18621 409576 258000) 0 nil])
([nil nil ((254 . 275)) nil (25765 18621 409574 734000) 0 nil])
([nil nil ((275 . 285)) nil (25765 18621 409573 410000) 0 nil])
([nil nil ((278 . 288) (#("service" 0 7 (fontified t)) . -278) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -5) 285) nil (25765 18621 409570 787000) 0 nil])
([nil nil ((3037 . 3038) 288) nil (25765 18621 409542 151000) 0 nil])
([nil nil ((285 . 288) (t 25765 18621 417168 883000)) nil (25765 18627 931680 641000) 0 nil])
([nil nil ((897 . 905) (#("        " 0 8 (fontified nil)) . 896) (undo-tree-id78 . -8) (895 . 905) (t 25765 18627 937281 233000)) nil (25765 19148 182489 685000) 0 nil])
([nil nil ((905 . 908)) nil (25765 19148 182486 500000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-comment-face)) . -907) (undo-tree-id77 . -1) 908) nil (25765 19148 182485 156000) 0 nil])
([nil nil ((907 . 915)) nil (25765 19148 182483 47000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-comment-face)) . -907) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("H" 0 1 (fontified defer face font-lock-comment-face)) . -908) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -909) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -910) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -911) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -912) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -913) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -914) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 915) nil (25765 19148 182479 620000) 0 nil])
([nil nil ((907 . 916)) nil (25765 19148 182459 813000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -909) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -910) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -911) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -912) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -913) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -914) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -915) (undo-tree-id60 . -1) 916) nil (25765 19148 182457 11000) 0 nil])
([nil nil ((909 . 923)) nil (25765 19148 182440 458000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -922) (undo-tree-id47 . -1) 923) nil (25765 19148 182439 317000) 0 nil])
([nil nil ((922 . 943)) nil (25765 19148 182437 306000) 0 nil])
([nil nil ((943 . 944)) nil (25765 19148 182436 349000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer face font-lock-comment-face)) . -943) (undo-tree-id46 . -1) 944) nil (25765 19148 182434 894000) 0 nil])
([nil nil ((943 . 952)) nil (25765 19148 182432 831000) 0 nil])
([nil nil ((nil rear-nonsticky nil 971 . 972) (nil fontified nil 952 . 972) (952 . 972)) nil (25765 19148 182431 781000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 974) (973 . 974) (972 . 974) (#("(" 0 1 (fontified nil)) . -972) (972 . 973)) nil (25765 19148 182429 962000) 0 nil])
([nil nil ((973 . 981)) nil (25765 19148 182428 125000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -980) (undo-tree-id45 . -1) 981) nil (25765 19148 182426 703000) 0 nil])
([nil nil ((943 . 952)) nil (25765 19148 182424 306000) 0 nil])
([nil nil ((952 . 956)) nil (25765 19148 182423 384000) 0 nil])
([nil nil ((965 . 969) 969) nil (25765 19148 182422 52000) 0 nil])
([nil nil ((998 . 1011)) nil (25765 19148 182420 705000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1007) (undo-tree-id43 . -4) (undo-tree-id44 . -4) 1011) nil (25765 19148 182419 250000) 0 nil])
([nil nil ((1007 . 1014)) nil (25765 19148 182415 764000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1013) (undo-tree-id42 . -1) 1014) nil (25765 19148 182414 558000) 0 nil])
([nil nil ((1013 . 1015)) nil (25765 19148 182412 376000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1014) (undo-tree-id41 . -1) 1015) nil (25765 19148 182410 990000) 0 nil])
([nil nil ((1014 . 1027)) nil (25765 19148 182408 734000) 0 nil])
([nil nil ((1027 . 1036)) nil (25765 19148 182407 725000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1035) (undo-tree-id40 . -1) 1036) nil (25765 19148 182406 261000) 0 nil])
([nil nil ((1035 . 1037)) nil (25765 19148 182403 995000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1035) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -1036) (undo-tree-id39 . -1) 1037) nil (25765 19148 182402 592000) 0 nil])
([nil nil ((1035 . 1036)) nil (25765 19148 182397 371000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1027) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (fontified t)) . -1028) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("n" 0 1 (fontified t)) . -1029) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("t" 0 1 (fontified defer)) . -1030) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("i" 0 1 (fontified defer)) . -1031) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("n" 0 1 (fontified defer)) . -1032) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("u" 0 1 (fontified t)) . -1033) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1034) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -1035) (undo-tree-id37 . -1) 1036) nil (25765 19148 182393 380000) 0 nil])
([nil nil ((1027 . 1032)) nil (25765 19148 182357 421000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1031) (undo-tree-id12 . -1) 1032) nil (25765 19148 182355 948000) 0 nil])
([nil nil ((969 . 974)) nil (25765 19148 182353 582000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -972) (undo-tree-id10 . -1) (#("i" 0 1 (fontified t)) . -973) (undo-tree-id11 . -1) 974) nil (25765 19148 182351 967000) 0 nil])
([nil nil ((972 . 979)) nil (25765 19148 182348 505000) 0 nil])
([nil nil ((1008 . 1021)) nil (25765 19148 182347 7000) 0 nil])
([nil nil ((1021 . 1023)) nil (25765 19148 182345 929000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1021) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t)) . -1022) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 1023) nil (25765 19148 182344 464000) 0 nil])
([nil nil ((1021 . 1038)) nil (25765 19148 182339 290000) 0 nil])
([nil nil ((1029 . 1042) (#("delete_se" 0 9 (fontified t)) . -1029) (undo-tree-id4 . -9) (undo-tree-id5 . -9) 1038) nil (25765 19148 182337 914000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 1045) (1044 . 1045) (1043 . 1045) (#("(" 0 1 (fontified nil)) . -1043) (1042 . 1044)) nil (25765 19148 182333 612000) 0 nil])
([nil nil ((1045 . 1062) (1044 . 1046) (#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1044) (1044 . 1045)) nil (25765 19148 182331 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1061) (undo-tree-id3 . -1) 1062) nil (25765 19148 182325 247000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 771) (#(" " 0 1 (fontified t)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified defer)) . 771) (#(" " 0 1 (fontified t)) . 771) (#(" " 0 1 (fontified t)) . 771) (#("
" 0 1 (fontified t)) . 771) (undo-tree-id96 . -1) (t 25765 19148 184992 953000)) nil (25765 19297 809864 318000) 0 nil])
([nil nil ((1062 . 1075)) nil (25765 19297 809858 661000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1208 . 1209) (nil fontified nil 1208 . 1209) (nil fontified nil 1207 . 1208) (nil fontified nil 1205 . 1207) (nil fontified nil 1198 . 1205) (nil fontified nil 1197 . 1198) (nil fontified nil 1177 . 1197) (nil fontified nil 1175 . 1177) (nil fontified nil 1173 . 1175) (nil fontified nil 1172 . 1173) (nil fontified nil 1168 . 1172) (nil fontified nil 1166 . 1168) (nil fontified nil 1165 . 1166) (nil fontified nil 1104 . 1165) (nil fontified nil 1092 . 1104) (nil fontified nil 1091 . 1092) (nil fontified nil 1075 . 1091) (1075 . 1209)) nil (25765 19297 809856 903000) 0 nil])
([nil nil ((#("
            pass" 0 1 (fontified t) 1 13 (fontified t) 13 17 (fontified t face font-lock-keyword-face)) . 1209) (undo-tree-id93 . -17) (undo-tree-id94 . -1) (undo-tree-id95 . -17)) nil (25765 19297 809851 552000) 0 nil])
([nil nil ((291 . 293)) nil (25765 19297 809847 617000) 0 nil])
([nil nil ((nil rear-nonsticky nil 308 . 309) (nil fontified nil 293 . 309) (293 . 309)) nil (25765 19297 809846 656000) 0 nil])
([nil nil ((1064 . 1077)) nil (25765 19297 809845 151000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1073) (undo-tree-id92 . -4) 1077) nil (25765 19297 809843 930000) 0 nil])
([nil nil ((1073 . 1080)) nil (25765 19297 809841 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1095 . 1096) (nil fontified nil 1080 . 1096) (1080 . 1096)) nil (25765 19297 809840 736000) 0 nil])
([nil nil ((1096 . 1098)) nil (25765 19297 809839 444000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1097) (undo-tree-id91 . -1) 1098) nil (25765 19297 809838 238000) 0 nil])
([nil nil ((1097 . 1110)) nil (25765 19297 809836 248000) 0 nil])
([nil nil ((1110 . 1112)) nil (25765 19297 809835 277000) 0 nil])
([nil nil ((1112 . 1115)) nil (25765 19297 809834 273000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1114) (undo-tree-id90 . -1) 1115) nil (25765 19297 809833 66000) 0 nil])
([nil nil ((1129 . 1145)) nil (25765 19297 809830 642000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1144) (undo-tree-id89 . -1) 1145) nil (25765 19297 809829 409000) 0 nil])
([nil nil ((1221 . 1239)) nil (25765 19297 809827 156000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1234) (undo-tree-id84 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1235) (undo-tree-id85 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1236) (undo-tree-id86 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1237) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1238) (undo-tree-id88 . -1) 1239) nil (25765 19297 809824 957000) 0 nil])
([nil nil ((1234 . 1238)) nil (25765 19297 809817 733000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -1237) (undo-tree-id83 . -1) 1238) nil (25765 19297 809816 295000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . 1243) (#("d" 0 1 (fontified t face font-lock-string-face)) . 1243) (#(" " 0 1 (fontified t face font-lock-string-face)) . 1243) (#("o" 0 1 (fontified t face font-lock-string-face)) . 1243) (#("t" 0 1 (fontified t face font-lock-string-face)) . 1243) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("v" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("d" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("u" 0 1 (fontified defer face font-lock-string-face)) . 1243) (#("o" 0 1 (fontified t face font-lock-string-face)) . 1243) (#("c" 0 1 (fontified t face font-lock-string-face)) . 1243)) nil (25765 19297 809811 255000) 0 nil])
([nil nil ((1243 . 1247)) nil (25765 19297 809805 915000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -1244) (undo-tree-id80 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1245) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1246) (undo-tree-id82 . -1) 1247) nil (25765 19297 809804 146000) 0 nil])
([nil nil ((1259 . 1261) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -1259) (1244 . 1260)) nil (25765 19297 809798 477000) 0 nil])
([nil nil ((1260 . 1261)) nil (25765 19297 809797 12000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-string-face)) . -1260) (undo-tree-id79 . -1) 1261) nil (25765 19297 809795 268000) 0 nil])
([nil nil ((1260 . 1261)) nil (25765 19297 809785 763000) 0 nil])
([nil nil ((1305 . 1307)) nil (25765 19297 809784 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1313 . 1314) (nil fontified nil 1313 . 1314) (nil fontified nil 1312 . 1313) (nil fontified nil 1311 . 1312) (nil fontified nil 1307 . 1311) (1307 . 1314)) nil (25765 19297 809777 353000) 0 nil])
([nil nil ((#("sensor.sensor_id" 0 16 (fontified t)) . 1046) (undo-tree-id97 . -16) (undo-tree-id98 . -16) (t 25765 19297 813862 697000)) nil (25765 20908 521296 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1054 . 1055) (nil fontified nil 1046 . 1055) (1046 . 1055)) nil (25765 20908 521169 423000) 0 nil])
([nil nil ((#("            service = create_serviceclient(firm.id)
" 0 12 (fontified nil) 12 19 (fontified nil face font-lock-variable-name-face) 19 22 (fontified nil) 22 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil face (rainbow-delimiters-depth-1-face)) 43 48 (fontified nil) 48 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face)) 51 52 (fontified nil)) . 1010) (undo-tree-id122 . -8) (undo-tree-id123 . -47) (undo-tree-id124 . -52) (997 . 1010) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t)) . 945) (958 . 1010) 1005 (t 25765 20908 529505 784000)) nil (25765 20937 411599 820000) 0 nil])
([nil nil ((#("            service = create_serviceclient(firm.id)
" 0 12 (fontified nil) 12 19 (fontified nil face font-lock-variable-name-face) 19 22 (fontified nil) 22 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil face (rainbow-delimiters-depth-1-face)) 43 48 (fontified nil) 48 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face)) 51 52 (fontified nil)) . 997) (undo-tree-id120 . -47) (undo-tree-id121 . -52) (950 . 997) (#("        # Check for servicenow link and update
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 47 (fontified t face font-lock-comment-face)) . 898) (945 . 997) 992) nil (25765 20937 411594 332000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -906) 945) nil (25765 20937 411590 349000) 0 nil])
([nil nil ((#("            service.delete_sensors([sensor_id])
" 0 20 (fontified nil) 20 34 (fontified nil) 34 35 (fontified nil face (rainbow-delimiters-depth-1-face)) 35 36 (fontified nil face (rainbow-delimiters-depth-2-face)) 36 44 (fontified nil) 44 45 (rear-nonsticky t fontified nil) 45 46 (fontified nil face (rainbow-delimiters-depth-2-face)) 46 47 (fontified nil face (rainbow-delimiters-depth-1-face)) 47 48 (fontified nil)) . 1054) (undo-tree-id113 . -36) (undo-tree-id114 . -47) (undo-tree-id115 . -47) (undo-tree-id116 . -36) (undo-tree-id117 . -47) (undo-tree-id118 . -43) (undo-tree-id119 . -48) (1041 . 1054) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t)) . 993) (1006 . 1054) 1049) nil (25765 20937 411588 387000) 0 nil])
([nil nil ((#("            service.delete_sensors([sensor_id])
" 0 20 (fontified nil) 20 34 (fontified nil) 34 35 (fontified nil face (rainbow-delimiters-depth-1-face)) 35 36 (fontified nil face (rainbow-delimiters-depth-2-face)) 36 44 (fontified nil) 44 45 (rear-nonsticky t fontified nil) 45 46 (fontified nil face (rainbow-delimiters-depth-2-face)) 46 47 (fontified nil face (rainbow-delimiters-depth-1-face)) 47 48 (fontified nil)) . 1041) (undo-tree-id110 . -48) (undo-tree-id111 . -43) (undo-tree-id112 . -48) (994 . 1041) (#("        # Check for servicenow link and update
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 47 (fontified t face font-lock-comment-face)) . 946) (993 . 1041) 1036) nil (25765 20937 411577 738000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -954) 989) nil (25765 20937 411572 28000) 0 nil])
([nil nil ((1049 . 1062)) nil (25765 20937 411570 435000) 0 nil])
([nil nil ((1062 . 1067)) nil (25765 20937 411568 792000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1066) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) 1067) nil (25765 20937 411562 873000) 0 nil])
([nil nil ((899 . 907) (#("        " 0 8 (fontified nil)) . 898) (undo-tree-id165 . -8) (897 . 907) (t 25765 20937 418012 67000)) nil (25765 21084 477677 663000) 0 nil])
([nil nil ((898 . 906)) nil (25765 21084 477674 754000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 913) (912 . 913) (911 . 913) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -911) (906 . 912)) nil (25765 21084 477673 245000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 914) (913 . 914) (912 . 914) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -912) (912 . 913)) nil (25765 21084 477670 811000) 0 nil])
([nil nil ((913 . 932)) nil (25765 21084 477668 697000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-string-face)) . -927) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("C" 0 1 (fontified t face font-lock-string-face)) . -928) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#(" " 0 1 (fontified nil face font-lock-string-face)) . -929) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("S" 0 1 (fontified t face font-lock-string-face)) . -930) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("T" 0 1 (fontified t face font-lock-string-face)) . -931) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 932) nil (25765 21084 477666 150000) 0 nil])
([nil nil ((927 . 935)) nil (25765 21084 477606 33000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-string-face)) . -933) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -934) (undo-tree-id154 . -1) 935) nil (25765 21084 477604 480000) 0 nil])
([nil nil ((933 . 936)) nil (25765 21084 477599 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -934) (undo-tree-id151 . -1) (#("F" 0 1 (fontified t face font-lock-string-face)) . -935) (undo-tree-id152 . -1) 936) nil (25765 21084 477597 930000) 0 nil])
([nil nil ((934 . 936)) nil (25765 21084 477593 451000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -935) (undo-tree-id150 . -1) 936) nil (25765 21084 477592 186000) 0 nil])
([nil nil ((994 . 1003)) nil (25765 21084 477589 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1033 . 1034) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1009 . 1032) (nil fontified nil 1008 . 1009) (nil fontified nil 1003 . 1008) (1003 . 1034)) nil (25765 21084 477587 897000) 0 nil])
([nil nil ((#("E" 0 1 (fontified defer face font-lock-string-face)) . -1012) (undo-tree-id129 . -1) (#("A" 0 1 (fontified defer face font-lock-string-face)) . -1013) (undo-tree-id130 . -1) (#("T" 0 1 (fontified nil face font-lock-string-face)) . -1014) (undo-tree-id131 . -1) (#("I" 0 1 (fontified defer face font-lock-string-face)) . -1015) (undo-tree-id132 . -1) (#("N" 0 1 (fontified defer face font-lock-string-face)) . -1016) (undo-tree-id133 . -1) (#("G" 0 1 (fontified defer face font-lock-string-face)) . -1017) (undo-tree-id134 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -1018) (undo-tree-id135 . -1) (#("S" 0 1 (fontified defer face font-lock-string-face)) . -1019) (undo-tree-id136 . -1) (#("E" 0 1 (fontified defer face font-lock-string-face)) . -1020) (undo-tree-id137 . -1) (#("R" 0 1 (fontified defer face font-lock-string-face)) . -1021) (undo-tree-id138 . -1) (#("V" 0 1 (fontified defer face font-lock-string-face)) . -1022) (undo-tree-id139 . -1) (#("I" 0 1 (fontified defer face font-lock-string-face)) . -1023) (undo-tree-id140 . -1) (#("C" 0 1 (fontified defer face font-lock-string-face)) . -1024) (undo-tree-id141 . -1) (#("E" 0 1 (fontified nil face font-lock-string-face)) . -1025) (undo-tree-id142 . -1) (#(" " 0 1 (fontified nil face font-lock-string-face)) . -1026) (undo-tree-id143 . -1) (#("S" 0 1 (fontified nil face font-lock-string-face)) . -1027) (undo-tree-id144 . -1) (#("T" 0 1 (fontified t face font-lock-string-face)) . -1028) (undo-tree-id145 . -1) (#("U" 0 1 (fontified defer face font-lock-string-face)) . -1029) (undo-tree-id146 . -1) (#("F" 0 1 (fontified nil face font-lock-string-face)) . -1030) (undo-tree-id147 . -1) (#("F" 0 1 (fontified t face font-lock-string-face)) . -1031) (undo-tree-id148 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1032) (undo-tree-id149 . -1) 1033) nil (25765 21084 477581 384000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-string-face)) . -1010) (undo-tree-id127 . -1) (#("R" 0 1 (fontified t face font-lock-string-face)) . -1011) (undo-tree-id128 . -1) 1012) nil (25765 21084 477551 221000) 0 nil])
([nil nil ((1010 . 1011)) nil (25765 21084 477547 19000) 0 nil])
([nil nil ((1010 . 1018)) nil (25765 21084 477546 159000) 0 nil])
([nil nil ((1019 . 1029)) nil (25765 21084 477545 205000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1028) (undo-tree-id126 . -1) 1029) nil (25765 21084 477544 24000) 0 nil])
([nil nil ((1038 . 1043)) nil (25765 21084 477541 425000) 0 nil])
([nil nil ((1078 . 1087)) nil (25765 21084 477540 499000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 1094) (undo-tree-id125 . -1) (1093 . 1094) (1092 . 1094) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1092) (1087 . 1093)) nil (25765 21084 477538 730000) 0 nil])
([nil nil ((1093 . 1095)) nil (25765 21084 477528 610000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t face whitespace-trailing)) . -938) 1095) nil (25765 21084 477519 751000) 0 nil])
([nil nil ((#("            return {'message': 'Sensor was deleted'}, 200" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 51 (fontified t face font-lock-string-face) 51 52 (fontified t face (rainbow-delimiters-depth-1-face)) 52 57 (fontified t)) . 605) (undo-tree-id171 . -57) (undo-tree-id172 . -57) (t 25765 21084 484513 388000)) nil (25765 21154 29632 375000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -604) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 605) nil (25765 21154 29627 734000) 0 nil])
([nil nil ((1361 . 1373) (#("            " 0 12 (fontified nil)) . 1360) (undo-tree-id167 . -12) (1359 . 1373)) nil (25765 21154 29622 165000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1369) (undo-tree-id166 . -4) 1373) nil (25765 21154 29618 839000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1425 . 1426) (nil fontified nil 1421 . 1426) (nil fontified nil 1420 . 1421) (nil fontified nil 1400 . 1420) (nil fontified nil 1398 . 1400) (nil fontified nil 1389 . 1398) (nil fontified nil 1388 . 1389) (nil fontified nil 1387 . 1388) (nil fontified nil 1381 . 1387) (nil fontified nil 1369 . 1381) (1369 . 1426)) nil (25765 21154 29609 993000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1373) 1426) nil (25765 21154 29605 697000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1369) 1418) nil (25765 21154 29597 383000) 0 nil])
([nil nil ((309 . 311) (t 25765 21154 37658 548000)) nil (25765 21203 942024 524000) 0 nil])
([nil nil ((nil fontified nil 330 . 331) (nil fontified nil 311 . 330) (311 . 331)) nil (25765 21203 942012 126000) 0 nil])
([nil nil ((#("        print(\"SERVICE \", service)
" 0 8 (fontified nil) 8 13 (fontified nil face font-lock-keyword-face) 13 14 (fontified nil face (rainbow-delimiters-depth-1-face)) 14 24 (fontified nil face font-lock-string-face) 24 33 (fontified nil) 33 34 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-1-face)) 34 35 (fontified nil)) . 986) (undo-tree-id325 . -31) (undo-tree-id326 . -8) (938 . 986) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 903) (undo-tree-id327 . -35) (undo-tree-id328 . -38) (951 . 986) 938 (t 25765 21203 946467 746000)) nil (25765 21219 423108 337000) 0 nil])
([nil nil ((#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-variable-name-face) 10 21 (fontified nil) 21 35 (fontified nil) 35 36 (fontified nil face (rainbow-delimiters-depth-1-face)) 36 37 (fontified nil face (rainbow-delimiters-depth-2-face)) 37 45 (fontified nil) 45 46 (rear-nonsticky t fontified nil) 46 47 (fontified nil face (rainbow-delimiters-depth-2-face)) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 49 (fontified nil)) . 1035) (undo-tree-id322 . -48) (undo-tree-id323 . -48) (987 . 1035) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 938) (undo-tree-id324 . -35) (986 . 1035) 973) nil (25765 21219 423101 206000) 0 nil])
([nil nil ((#("        print(dd)
" 0 8 (fontified nil) 8 13 (fontified nil face font-lock-keyword-face) 13 14 (fontified nil face (rainbow-delimiters-depth-1-face)) 14 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-depth-1-face)) 17 18 (fontified nil)) . 1053) (undo-tree-id320 . -13) (1005 . 1053) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 987) (undo-tree-id321 . -35) (1035 . 1053) 1022) nil (25765 21219 423095 236000) 0 nil])
([nil nil ((#("        # Check for servicenow link and update
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 47 (fontified nil face font-lock-comment-face)) . 1100) (1052 . 1100) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 1005) (undo-tree-id319 . -35) (1053 . 1100) 1040) nil (25765 21219 423090 928000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 1113) (1065 . 1113) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 1052) (undo-tree-id318 . -35) (1100 . 1113) 1087) nil (25765 21219 423087 477000) 0 nil])
([nil nil ((#("            pass
" 0 12 (fontified nil) 12 14 (fontified nil face font-lock-keyword-face) 14 16 (fontified nil face font-lock-keyword-face) 16 17 (fontified nil)) . 1130) (undo-tree-id314 . -17) (undo-tree-id315 . -17) (undo-tree-id316 . -17) (1082 . 1130) (#("        service = create_serviceclient(firm.id)
" 0 8 (fontified t) 8 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 37 (fontified t) 37 38 (rear-nonsticky t fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t) 44 46 (fontified t face font-lock-builtin-face) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t)) . 1065) (undo-tree-id317 . -35) (1113 . 1130) 1100) nil (25765 21219 423083 807000) 0 nil])
([nil nil ((#("        service = create_serviceclient(firm.id)
" 0 8 (fontified nil) 8 15 (fontified nil face font-lock-variable-name-face) 15 18 (fontified nil) 18 37 (fontified nil) 37 38 (rear-nonsticky t fontified nil) 38 39 (fontified nil face (rainbow-delimiters-depth-1-face)) 39 44 (fontified nil) 44 46 (fontified nil face font-lock-builtin-face) 46 47 (fontified nil face (rainbow-delimiters-depth-1-face)) 47 48 (fontified nil)) . 1130) (undo-tree-id309 . -48) (undo-tree-id310 . -48) (undo-tree-id311 . -35) (undo-tree-id312 . -48) (undo-tree-id313 . -48) (1113 . 1130) (#("            pass
" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t)) . 1065) (1082 . 1130) 1117) nil (25765 21219 423077 366000) 0 nil])
([nil nil ((1073 . 1077) 1100) nil (25765 21219 423070 158000) 0 nil])
([nil nil ((#("        print(dd)
" 0 8 (fontified nil) 8 13 (fontified nil face font-lock-keyword-face) 13 14 (fontified nil face (rainbow-delimiters-depth-1-face)) 14 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-depth-1-face)) 17 18 (fontified nil)) . 1005) (undo-tree-id306 . -18) (undo-tree-id307 . -18) (956 . 1005) (#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 938) (undo-tree-id308 . -39) (987 . 1005) 977) nil (25765 21219 423068 279000) 0 nil])
([nil nil ((#("        # Check for servicenow link and update
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 47 (fontified nil face font-lock-comment-face)) . 1052) (undo-tree-id304 . -47) (1003 . 1052) (#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 956) (undo-tree-id305 . -39) (1005 . 1052) 995) nil (25765 21219 423062 527000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 1065) (1016 . 1065) (#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 1003) (undo-tree-id303 . -39) (1052 . 1065) 1042) nil (25765 21219 423048 368000) 0 nil])
([nil nil ((#("            service = create_serviceclient(firm.id)
" 0 12 (fontified nil) 12 19 (fontified nil face font-lock-variable-name-face) 19 22 (fontified nil) 22 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil face (rainbow-delimiters-depth-1-face)) 43 48 (fontified nil) 48 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face)) 51 52 (fontified nil)) . 1117) (1068 . 1117) (#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 1016) (undo-tree-id302 . -39) (1065 . 1117) 1055) nil (25765 21219 423042 360000) 0 nil])
([nil nil ((#("            pass
" 0 12 (fontified nil) 12 14 (fontified nil face font-lock-keyword-face) 14 16 (fontified nil face font-lock-keyword-face) 16 17 (fontified nil)) . 1134) (undo-tree-id298 . -17) (undo-tree-id299 . -17) (undo-tree-id300 . -17) (1085 . 1134) (#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified t) 8 10 (fontified t face font-lock-variable-name-face) 10 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 45 (fontified t) 45 46 (rear-nonsticky t fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 1068) (undo-tree-id301 . -39) (1117 . 1134) 1107) nil (25765 21219 423035 35000) 0 nil])
([nil nil ((#("        dd = service.delete_sensors([sensor_id])
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-variable-name-face) 10 21 (fontified nil) 21 35 (fontified nil) 35 36 (fontified nil face (rainbow-delimiters-depth-1-face)) 36 37 (fontified nil face (rainbow-delimiters-depth-2-face)) 37 45 (fontified nil) 45 46 (rear-nonsticky t fontified nil) 46 47 (fontified nil face (rainbow-delimiters-depth-2-face)) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 49 (fontified nil)) . 1134) (undo-tree-id293 . -49) (undo-tree-id294 . -49) (undo-tree-id295 . -39) (undo-tree-id296 . -49) (undo-tree-id297 . -49) (1117 . 1134) (#("            pass
" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t)) . 1068) (1085 . 1134) 1124) nil (25765 21219 423019 848000) 0 nil])
([nil nil ((1076 . 1080) 1107) nil (25765 21219 423002 697000) 0 nil])
([nil nil ((#("        # Check for servicenow link and update
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 47 (fontified nil face font-lock-comment-face)) . 1003) (undo-tree-id289 . -47) (undo-tree-id290 . -47) (985 . 1003) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 938) (undo-tree-id291 . -17) (undo-tree-id292 . -17) (956 . 1003) 955) nil (25765 21219 422996 79000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 1016) (undo-tree-id287 . -13) (998 . 1016) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 985) (undo-tree-id288 . -17) (1003 . 1016) 1002) nil (25765 21219 422988 880000) 0 nil])
([nil nil ((#("            service = create_serviceclient(firm.id)
" 0 12 (fontified nil) 12 19 (fontified nil face font-lock-variable-name-face) 19 22 (fontified nil) 22 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil face (rainbow-delimiters-depth-1-face)) 43 48 (fontified nil) 48 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face)) 51 52 (fontified nil)) . 1068) (1050 . 1068) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 998) (undo-tree-id286 . -17) (1016 . 1068) 1015) nil (25765 21219 422984 108000) 0 nil])
([nil nil ((#("            dd = service.delete_sensors([sensor_id])
" 0 12 (fontified nil) 12 14 (fontified nil face font-lock-variable-name-face) 14 25 (fontified nil) 25 39 (fontified nil) 39 40 (fontified nil face (rainbow-delimiters-depth-1-face)) 40 41 (fontified nil face (rainbow-delimiters-depth-2-face)) 41 49 (fontified nil) 49 50 (rear-nonsticky t fontified nil) 50 51 (fontified nil face (rainbow-delimiters-depth-2-face)) 51 52 (fontified nil face (rainbow-delimiters-depth-1-face)) 52 53 (fontified nil)) . 1121) (1103 . 1121) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 1050) (undo-tree-id283 . -17) (undo-tree-id284 . -8) (undo-tree-id285 . -17) (1068 . 1121) 1067) nil (25765 21219 422980 457000) 0 nil])
([nil nil ((1111 . 1115) 1120) nil (25765 21219 422975 250000) 0 nil])
([nil nil ((#("
        print(\"SERVICE \", service)" 0 1 (fontified t) 1 9 (fontified t) 9 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 25 (fontified t face font-lock-string-face) 25 34 (fontified t) 34 35 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face))) . 902) (undo-tree-id274 . -35) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -26) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -35) (undo-tree-id282 . -35)) nil (25765 21219 422973 257000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -901) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) 902) nil (25765 21219 422958 717000) 0 nil])
([nil nil ((901 . 910)) nil (25765 21219 422837 689000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -902) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (undo-tree-id183 . -8) (undo-tree-id184 . -8) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -8) (undo-tree-id192 . -8) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (undo-tree-id195 . -8) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . -8) (undo-tree-id203 . -8) (undo-tree-id204 . -8) (undo-tree-id205 . -8) (undo-tree-id206 . -8) (undo-tree-id207 . -8) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (undo-tree-id219 . -8) 910) nil (25765 21239 533503 47000) 0 nil])
([nil nil ((#("        print(\"CREATING SERVICE STUFF\")

        # Check for servicenow link and update
        try:
            service = create_serviceclient(firm.id)
            dd = service.delete_sensors([sensor_id])
            print(dd)
            pass
        except NoServicenowCred:
            pass
        except Exception as e:
            app.logger.error(log_start + '{0} - {1} tried deleting a sensor from serviceNow, but got excpetion - {2}'.format(current_user.name, current_user.id, repr(e)))" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 40 (fontified t) 40 41 (fontified t) 41 49 (fontified t) 49 51 (fontified t face font-lock-comment-delimiter-face) 51 88 (fontified t face font-lock-comment-face) 88 96 (fontified t) 96 99 (fontified t face font-lock-keyword-face) 99 101 (fontified t) 101 113 (fontified t) 113 120 (fontified t face font-lock-variable-name-face) 120 123 (fontified t) 123 142 (fontified t) 142 143 (rear-nonsticky t fontified t) 143 144 (fontified t face (rainbow-delimiters-depth-1-face)) 144 149 (fontified t) 149 151 (fontified t face font-lock-builtin-face) 151 152 (fontified t face (rainbow-delimiters-depth-1-face)) 152 153 (fontified t) 153 165 (fontified t) 165 167 (fontified t face font-lock-variable-name-face) 167 178 (fontified t) 178 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-1-face)) 193 194 (fontified t face (rainbow-delimiters-depth-2-face)) 194 202 (fontified t) 202 203 (rear-nonsticky t fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-2-face)) 204 205 (fontified t face (rainbow-delimiters-depth-1-face)) 205 206 (fontified t) 206 218 (fontified t) 218 223 (fontified t face font-lock-keyword-face) 223 224 (fontified t face (rainbow-delimiters-depth-1-face)) 224 226 (fontified t) 226 227 (fontified t face (rainbow-delimiters-depth-1-face)) 227 228 (fontified t) 228 240 (fontified t) 240 242 (fontified t face font-lock-keyword-face) 242 244 (fontified t face font-lock-keyword-face) 244 245 (fontified t) 245 253 (fontified t) 253 259 (fontified t face font-lock-keyword-face) 259 260 (fontified t) 260 275 (fontified t) 275 276 (rear-nonsticky t fontified t) 276 278 (fontified t) 278 290 (fontified t) 290 294 (fontified t face font-lock-keyword-face) 294 295 (fontified t) 295 303 (fontified t) 303 309 (fontified t face font-lock-keyword-face) 309 310 (fontified t) 310 319 (fontified t face font-lock-type-face) 319 320 (fontified t) 320 322 (fontified t face font-lock-keyword-face) 322 324 (fontified t) 324 326 (fontified t) 326 338 (fontified t) 338 354 (fontified t) 354 355 (fontified t face (rainbow-delimiters-depth-1-face)) 355 367 (fontified t) 367 439 (fontified t face font-lock-string-face) 439 441 (fontified t face font-lock-string-face) 441 442 (fontified t face font-lock-string-face) 442 443 (fontified t face font-lock-string-face) 443 444 (fontified t) 444 446 (fontified t face font-lock-builtin-face) 446 447 (fontified t face font-lock-builtin-face) 447 450 (fontified t face font-lock-builtin-face) 450 451 (fontified t face (rainbow-delimiters-depth-2-face)) 451 453 (fontified t) 453 455 (fontified t) 455 473 (fontified t) 473 474 (fontified t) 474 475 (fontified t) 475 476 (fontified t) 476 477 (fontified t face (whitespace-line)) 477 478 (fontified t face (whitespace-line)) 478 479 (fontified t face (whitespace-line)) 479 480 (fontified t face (whitespace-line)) 480 481 (fontified t face (whitespace-line)) 481 482 (fontified t face (whitespace-line)) 482 483 (fontified t face (whitespace-line)) 483 484 (fontified t face (whitespace-line font-lock-builtin-face)) 484 485 (fontified t face (whitespace-line font-lock-builtin-face)) 485 487 (fontified t face (whitespace-line)) 487 491 (fontified t face (whitespace-line font-lock-builtin-face)) 491 492 (fontified t face (rainbow-delimiters-depth-3-face whitespace-line)) 492 493 (fontified t face (whitespace-line)) 493 494 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face whitespace-line)) 494 495 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 495 496 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face whitespace-line))) . 862) (undo-tree-id492 . -496) (undo-tree-id493 . -88) (undo-tree-id494 . -401) (undo-tree-id495 . -487) (undo-tree-id496 . -245) (undo-tree-id497 . -245) (undo-tree-id498 . -153) (undo-tree-id499 . -101) (undo-tree-id500 . -101) (undo-tree-id501 . -245) (undo-tree-id502 . -39) (undo-tree-id503 . -40) (undo-tree-id504 . -88) (undo-tree-id505 . -39) (undo-tree-id506 . -39) (undo-tree-id507 . -496) (undo-tree-id508 . -496) (t 25765 21219 426716 780000)) nil (25765 21269 498612 738000) 0 nil] [nil nil ((#("        # Check for servicenow link and update
        try:
            service = create_serviceclient(firm.id)
            dd = service.delete_sensors([sensor_id])
            print(dd)
            pass
        except NoServicenowCred:
            pass
        except Exception as e:
            app.logger.error(log_start + '{0} - {1} tried deleting a sensor from serviceNow, but got excpetion - {2}'.format(current_user.name, current_user.id, repr(e)))" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 47 (fontified t face font-lock-comment-face) 47 55 (fontified t) 55 58 (fontified t face font-lock-keyword-face) 58 60 (fontified t) 60 72 (fontified t) 72 79 (fontified t face font-lock-variable-name-face) 79 82 (fontified t) 82 101 (fontified t) 101 102 (rear-nonsticky t fontified t) 102 103 (fontified t face (rainbow-delimiters-depth-1-face)) 103 108 (fontified t) 108 110 (fontified t face font-lock-builtin-face) 110 111 (fontified t face (rainbow-delimiters-depth-1-face)) 111 112 (fontified t) 112 124 (fontified t) 124 126 (fontified t face font-lock-variable-name-face) 126 137 (fontified t) 137 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-1-face)) 152 153 (fontified t face (rainbow-delimiters-depth-2-face)) 153 161 (fontified t) 161 162 (rear-nonsticky t fontified t) 162 163 (fontified t face (rainbow-delimiters-depth-2-face)) 163 164 (fontified t face (rainbow-delimiters-depth-1-face)) 164 165 (fontified t) 165 177 (fontified t) 177 182 (fontified t face font-lock-keyword-face) 182 183 (fontified t face (rainbow-delimiters-depth-1-face)) 183 185 (fontified t) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 199 (fontified t) 199 201 (fontified t face font-lock-keyword-face) 201 203 (fontified t face font-lock-keyword-face) 203 204 (fontified t) 204 212 (fontified t) 212 218 (fontified t face font-lock-keyword-face) 218 219 (fontified t) 219 234 (fontified t) 234 235 (rear-nonsticky t fontified t) 235 237 (fontified t) 237 249 (fontified t) 249 253 (fontified t face font-lock-keyword-face) 253 254 (fontified t) 254 262 (fontified t) 262 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 278 (fontified t face font-lock-type-face) 278 279 (fontified t) 279 281 (fontified t face font-lock-keyword-face) 281 283 (fontified t) 283 285 (fontified t) 285 297 (fontified t) 297 313 (fontified t) 313 314 (fontified t face (rainbow-delimiters-depth-1-face)) 314 326 (fontified t) 326 398 (fontified t face font-lock-string-face) 398 400 (fontified t face font-lock-string-face) 400 401 (fontified t face font-lock-string-face) 401 402 (fontified t face font-lock-string-face) 402 403 (fontified t) 403 405 (fontified t face font-lock-builtin-face) 405 406 (fontified t face font-lock-builtin-face) 406 409 (fontified t face font-lock-builtin-face) 409 410 (fontified t face (rainbow-delimiters-depth-2-face)) 410 412 (fontified t) 412 414 (fontified t) 414 432 (fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t face (whitespace-line)) 436 437 (fontified t face (whitespace-line)) 437 438 (fontified t face (whitespace-line)) 438 439 (fontified t face (whitespace-line)) 439 440 (fontified t face (whitespace-line)) 440 441 (fontified t face (whitespace-line)) 441 442 (fontified t face (whitespace-line)) 442 443 (fontified t face (whitespace-line font-lock-builtin-face)) 443 444 (fontified t face (whitespace-line font-lock-builtin-face)) 444 446 (fontified t face (whitespace-line)) 446 450 (fontified t face (whitespace-line font-lock-builtin-face)) 450 451 (fontified t face (rainbow-delimiters-depth-3-face whitespace-line)) 451 452 (fontified t face (whitespace-line)) 452 453 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face whitespace-line)) 453 454 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 454 455 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face whitespace-line))) . 903) (undo-tree-id381 . -455) (undo-tree-id382 . -47) (undo-tree-id383 . -455) (undo-tree-id384 . -219) (undo-tree-id385 . -360) (undo-tree-id386 . -446) (undo-tree-id387 . -204) (undo-tree-id388 . -204) (undo-tree-id389 . -112) (undo-tree-id390 . -60) (undo-tree-id391 . -60) (undo-tree-id392 . -204) (undo-tree-id393 . -47) (undo-tree-id394 . -47) (undo-tree-id395 . -455) (t 25765 21219 426716 780000)) ((903 . 1358)) (25765 21239 193438 655000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -860) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("
" 0 1 (fontified t)) . -861) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 862) nil (25765 21269 498592 316000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -901) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("
" 0 1 (fontified t)) . -902) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 903) ((901 . 903)) (25765 21239 193168 259000) 0 nil])
([nil nil ((469 . 477) (#("        " 0 8 (fontified nil)) . 468) (undo-tree-id455 . -8) (468 . 477) (#("        " 0 8 (fontified nil)) . 467) (undo-tree-id456 . -8) (467 . 476) (#("        " 0 8 (fontified nil)) . 466) (undo-tree-id457 . -8) (465 . 475)) nil (25765 21269 498487 148000) 0 nil])
nil
([nil nil ((nil fontified nil 962 . 963) (nil fontified nil 961 . 962) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 954 . 958) (nil fontified nil 952 . 954) (nil fontified nil 951 . 952) (nil fontified nil 950 . 951) (nil fontified nil 949 . 950) (nil fontified nil 948 . 949) (nil fontified nil 947 . 948) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 943 . 944) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 922 . 940) (nil fontified nil 920 . 922) (nil fontified nil 918 . 920) (nil fontified nil 917 . 918) (nil fontified nil 914 . 917) (nil fontified nil 913 . 914) (nil fontified nil 911 . 913) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 906 . 908) (nil fontified nil 834 . 906) (nil fontified nil 822 . 834) (nil fontified nil 821 . 822) (nil fontified nil 805 . 821) (nil fontified nil 793 . 805) (nil fontified nil 791 . 793) (nil fontified nil 789 . 791) (nil fontified nil 787 . 789) (nil fontified nil 786 . 787) (nil fontified nil 777 . 786) (nil fontified nil 776 . 777) (nil fontified nil 770 . 776) (nil fontified nil 762 . 770) (nil fontified nil 761 . 762) (nil fontified nil 757 . 761) (nil fontified nil 745 . 757) (nil fontified nil 743 . 745) (nil fontified nil 742 . 743) (nil fontified nil 727 . 742) (nil fontified nil 726 . 727) (nil fontified nil 720 . 726) (nil fontified nil 712 . 720) (nil fontified nil 711 . 712) (nil fontified nil 709 . 711) (nil fontified nil 707 . 709) (nil fontified nil 695 . 707) (nil fontified nil 694 . 695) (nil fontified nil 693 . 694) (nil fontified nil 691 . 693) (nil fontified nil 690 . 691) (nil fontified nil 685 . 690) (nil fontified nil 673 . 685) (nil fontified nil 672 . 673) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil fontified nil 661 . 669) (nil fontified nil 660 . 661) (nil fontified nil 659 . 660) (nil fontified nil 645 . 659) (nil fontified nil 634 . 645) (nil fontified nil 632 . 634) (nil fontified nil 620 . 632) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 616 . 618) (nil fontified nil 611 . 616) (nil fontified nil 610 . 611) (nil fontified nil 609 . 610) (nil fontified nil 590 . 609) (nil fontified nil 587 . 590) (nil fontified nil 580 . 587) (nil fontified nil 568 . 580) (nil fontified nil 566 . 568) (nil fontified nil 563 . 566) (nil fontified nil 555 . 563) (nil fontified nil 518 . 555) (nil fontified nil 516 . 518) (nil fontified nil 508 . 516) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 481 . 504) (nil fontified nil 480 . 481) (nil fontified nil 475 . 480) (nil fontified nil 467 . 475) (467 . 963)) nil (25765 21269 498476 788000) 0 nil])
([nil nil ((661 . 668)) nil (25765 21269 498455 240000) 0 nil])
([nil nil ((#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 25 (fontified nil face font-lock-string-face) 25 27 (fontified nil) 27 42 (fontified nil face font-lock-string-face) 42 43 (fontified nil face font-lock-string-face) 43 47 (fontified nil face font-lock-string-face) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 52 (fontified nil) 52 53 (rear-nonsticky t fontified nil) 53 54 (fontified nil)) . 1431) (undo-tree-id452 . -48) (undo-tree-id453 . -54) (undo-tree-id454 . -8) (1430 . 1431) (#("
" 0 1 (fontified t)) . 1376) (1377 . 1431) 1425) nil (25765 21269 498453 853000) 0 nil])
([nil nil ((#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 25 (fontified nil face font-lock-string-face) 25 27 (fontified nil) 27 42 (fontified nil face font-lock-string-face) 42 43 (fontified nil face font-lock-string-face) 43 47 (fontified nil face font-lock-string-face) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 52 (fontified nil) 52 53 (rear-nonsticky t fontified nil) 53 54 (fontified nil)) . 1430) (undo-tree-id435 . -48) (undo-tree-id436 . -54) (1359 . 1430) (#("            return {'message': 'Something went wrong internally'}, 500
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 40 (fontified t face font-lock-string-face) 40 42 (fontified t face font-lock-string-face) 42 64 (fontified t face font-lock-string-face) 64 65 (fontified t face (rainbow-delimiters-depth-1-face)) 65 70 (fontified t) 70 71 (fontified t)) . 1305) (undo-tree-id437 . -70) (undo-tree-id438 . -70) (undo-tree-id439 . -70) (undo-tree-id440 . -70) (undo-tree-id441 . -70) (undo-tree-id442 . -70) (undo-tree-id443 . -70) (undo-tree-id444 . -70) (undo-tree-id445 . -70) (undo-tree-id446 . -70) (undo-tree-id447 . -70) (undo-tree-id448 . -70) (undo-tree-id449 . -70) (undo-tree-id450 . -70) (undo-tree-id451 . -70) (1376 . 1430) 1424) nil (25765 21269 498447 965000) 0 nil])
([nil nil ((#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 25 (fontified nil face font-lock-string-face) 25 27 (fontified nil) 27 42 (fontified nil face font-lock-string-face) 42 43 (fontified nil face font-lock-string-face) 43 47 (fontified nil face font-lock-string-face) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 52 (fontified nil) 52 53 (rear-nonsticky t fontified nil) 53 54 (fontified nil)) . 1359) (undo-tree-id433 . -48) (undo-tree-id434 . -54) (1212 . 1359) (#("            app.logger.error(log_start + '{0} - {1} tried deleting a sensor, but could not save to db'.format(current_user.name, current_user.id))
" 0 22 (fontified t) 22 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 41 (fontified t) 41 75 (fontified t face font-lock-string-face) 75 91 (fontified t face font-lock-string-face) 91 102 (fontified t face font-lock-string-face) 102 103 (fontified t) 103 105 (fontified t face font-lock-builtin-face) 105 109 (fontified t face font-lock-builtin-face) 109 110 (fontified t face (rainbow-delimiters-depth-2-face)) 110 112 (fontified t) 112 114 (fontified t) 114 131 (fontified t) 131 134 (fontified t) 134 135 (fontified t) 135 142 (fontified t) 142 144 (fontified t face font-lock-builtin-face) 144 145 (fontified t face (rainbow-delimiters-depth-2-face)) 145 146 (fontified t face (rainbow-delimiters-depth-1-face)) 146 147 (fontified t)) . 1158) (1305 . 1359) 1353) nil (25765 21269 498427 194000) 0 nil])
([nil nil ((#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 25 (fontified nil face font-lock-string-face) 25 27 (fontified nil) 27 42 (fontified nil face font-lock-string-face) 42 43 (fontified nil face font-lock-string-face) 43 47 (fontified nil face font-lock-string-face) 47 48 (fontified nil face (rainbow-delimiters-depth-1-face)) 48 52 (fontified nil) 52 53 (rear-nonsticky t fontified nil) 53 54 (fontified nil)) . 1212) (undo-tree-id416 . -54) (undo-tree-id417 . -54) (undo-tree-id418 . -54) (undo-tree-id419 . -54) (undo-tree-id420 . -54) (undo-tree-id421 . -54) (undo-tree-id422 . -48) (undo-tree-id423 . -54) (undo-tree-id424 . -54) (undo-tree-id425 . -54) (undo-tree-id426 . -54) (undo-tree-id427 . -54) (undo-tree-id428 . -54) (undo-tree-id429 . -54) (undo-tree-id430 . -54) (undo-tree-id431 . -54) (undo-tree-id432 . -54) (1196 . 1212) (#("        except:
" 0 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 16 (fontified t)) . 1142) (1158 . 1212) 1206) nil (25765 21269 498421 963000) 0 nil])
([nil nil ((#("        except:
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 16 (fontified nil)) . 1212) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (undo-tree-id405 . -16) (undo-tree-id406 . -16) (undo-tree-id407 . -16) (undo-tree-id408 . -16) (undo-tree-id409 . -16) (undo-tree-id410 . -16) (undo-tree-id411 . -16) (undo-tree-id412 . -16) (undo-tree-id413 . -16) (undo-tree-id414 . -16) (1158 . 1212) (#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t)) . 1142) (undo-tree-id415 . -48) (1196 . 1212) 1190) nil (25765 21269 498399 886000) 0 nil])
([nil nil ((#("            app.logger.error(log_start + '{0} - {1} tried deleting a sensor, but could not save to db'.format(current_user.name, current_user.id))
" 0 22 (fontified nil) 22 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-1-face)) 29 41 (fontified nil) 41 75 (fontified nil face font-lock-string-face) 75 91 (fontified nil face font-lock-string-face) 91 102 (fontified nil face font-lock-string-face) 102 103 (fontified nil) 103 105 (fontified nil face font-lock-builtin-face) 105 109 (fontified nil face font-lock-builtin-face) 109 110 (fontified nil face (rainbow-delimiters-depth-2-face)) 110 112 (fontified nil) 112 114 (fontified nil) 114 131 (fontified nil) 131 134 (fontified nil) 134 135 (fontified nil) 135 142 (fontified nil) 142 144 (fontified nil face font-lock-builtin-face) 144 145 (fontified nil face (rainbow-delimiters-depth-2-face)) 145 146 (fontified nil face (rainbow-delimiters-depth-1-face)) 146 147 (fontified nil)) . 1359) (1305 . 1359) (#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t)) . 1158) (undo-tree-id399 . -48) (1212 . 1359) 1206) nil (25765 21269 498380 208000) 0 nil])
([nil nil ((#("            return {'message': 'Something went wrong internally'}, 500
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 40 (fontified nil face font-lock-string-face) 40 42 (fontified nil face font-lock-string-face) 42 64 (fontified nil face font-lock-string-face) 64 65 (fontified nil face (rainbow-delimiters-depth-1-face)) 65 70 (fontified nil) 70 71 (fontified nil)) . 1430) (1376 . 1430) (#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t)) . 1305) (undo-tree-id398 . -48) (1359 . 1430) 1353) nil (25765 21269 498376 428000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 1431) (undo-tree-id396 . -1) (1377 . 1431) (#("        return {'message': 'Sensor was deleted'}, 200
" 0 8 (fontified t) 8 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t)) . 1376) (undo-tree-id397 . -48) (1430 . 1431) 1424) nil (25765 21269 498371 998000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t face whitespace-trailing)) . -972) 971) nil (25765 21269 498355 180000) 0 nil])
([nil nil ((#("            service = create_serviceclient(firm.id)
" 0 12 (fontified nil) 12 19 (fontified nil face font-lock-variable-name-face) 19 22 (fontified nil) 22 41 (fontified nil) 41 42 (rear-nonsticky t fontified nil) 42 43 (fontified nil face (rainbow-delimiters-depth-1-face)) 43 48 (fontified nil) 48 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-1-face)) 51 52 (fontified nil)) . 620) (undo-tree-id511 . -52) (607 . 620) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 555) (568 . 620) (t 25765 21269 503516 533000)) nil (25765 21395 272224 280000) 0 nil])
([nil nil ((#("            dd = service.delete_sensors([sensor.sensor_id])
" 0 12 (fontified nil) 12 14 (fontified nil face font-lock-variable-name-face) 14 25 (fontified nil) 25 39 (fontified nil) 39 40 (fontified nil face (rainbow-delimiters-depth-1-face)) 40 41 (fontified nil face (rainbow-delimiters-depth-2-face)) 41 48 (fontified nil) 48 56 (fontified nil) 56 57 (rear-nonsticky t fontified nil) 57 58 (fontified nil face (rainbow-delimiters-depth-2-face)) 58 59 (fontified nil face (rainbow-delimiters-depth-1-face)) 59 60 (fontified nil)) . 680) (undo-tree-id509 . -60) (undo-tree-id510 . -60) (667 . 680) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 607) (620 . 680)) nil (25765 21395 272219 592000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -563) 555) nil (25765 21395 272208 303000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -611)) nil (25765 21395 272200 471000) 0 nil])
([nil nil ((#("            print(dd)
" 0 12 (fontified nil) 12 17 (fontified nil face font-lock-keyword-face) 17 18 (fontified nil face (rainbow-delimiters-depth-1-face)) 18 20 (fontified nil) 20 21 (fontified nil face (rainbow-delimiters-depth-1-face)) 21 22 (fontified nil)) . 694) (undo-tree-id512 . -22) (681 . 694) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 659) (672 . 694) (t 25765 21395 281490 340000)) nil (25765 21397 712181 642000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -667) 659) nil (25765 21397 712164 85000) 0 nil])
([nil nil ((554 . 563) (t 25765 21397 721528 191000)) nil (25765 21626 645775 113000) 0 nil])
([nil nil ((563 . 571)) nil (25765 21626 645773 730000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -563) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("d" 0 1 (fontified t face font-lock-builtin-face)) . -564) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("_" 0 1 (fontified t)) . -565) (undo-tree-id540 . -1) (#("l" 0 1 (fontified t)) . -566) (undo-tree-id541 . -1) (#("i" 0 1 (fontified t)) . -567) (undo-tree-id542 . -1) (#("s" 0 1 (fontified t)) . -568) (undo-tree-id543 . -1) (#("t" 0 1 (fontified t)) . -569) (undo-tree-id544 . -1) (#(" " 0 1 (fontified t)) . -570) (undo-tree-id545 . -1) 571) nil (25765 21626 645771 8000) 0 nil])
([nil nil ((563 . 569)) nil (25765 21626 645758 281000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -563) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("e" 0 1 (fontified defer)) . -564) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("n" 0 1 (fontified t)) . -565) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("s" 0 1 (fontified t)) . -566) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#("o" 0 1 (fontified defer)) . -567) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("r" 0 1 (fontified t)) . -568) (undo-tree-id534 . -1) (undo-tree-id535 . -1) 569) nil (25765 21626 645755 697000) 0 nil])
([nil nil ((563 . 574)) nil (25765 21626 645740 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 592 . 593) (nil fontified nil 574 . 593) (574 . 593)) nil (25765 21626 645739 194000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -592) (undo-tree-id523 . -1) 593) nil (25765 21626 645737 537000) 0 nil])
([nil nil ((593 . 595) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -593) (592 . 594)) nil (25765 21626 645734 805000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face font-lock-string-face)) . -592) (undo-tree-id521 . -1) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -593) (undo-tree-id522 . -1) (#("]" 0 1 (fontified t face font-lock-string-face)) . 594)) nil (25765 21626 645732 876000) 0 nil])
([nil nil ((592 . 593)) nil (25765 21626 645728 916000) 0 nil])
([nil nil ((574 . 576) (#("{" 0 1 (fontified nil)) . -574) (574 . 575)) nil (25765 21626 645727 279000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 575)) nil (25765 21626 645725 444000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -588) (undo-tree-id516 . -1) (#("8" 0 1 (fontified t face font-lock-string-face)) . -589) (undo-tree-id517 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -590) (undo-tree-id518 . -1) (#("3" 0 1 (fontified t face font-lock-string-face)) . -591) (undo-tree-id519 . -1) (#("]" 0 1 (fontified t face font-lock-string-face)) . -592) (undo-tree-id520 . -1) 593) nil (25765 21626 645723 362000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -585) (undo-tree-id513 . -1) (#("[" 0 1 (fontified t face font-lock-string-face)) . -586) (undo-tree-id514 . -1) (#("6" 0 1 (fontified t face font-lock-string-face)) . -587) (undo-tree-id515 . -1) 588) nil (25765 21626 645713 940000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . 588) (587 . 588) (586 . 588) (#("[" 0 1 (fontified nil)) . -586) (585 . 587)) nil (25765 21626 645906 469000) 0 nil])
([nil nil ((nil fontified nil 602 . 603) (nil fontified nil 594 . 602) (nil fontified nil 587 . 594) (587 . 603)) nil (25765 21646 174886 115000) 0 nil] [nil nil ((nil fontified nil 601 . 602) (nil fontified nil 593 . 601) (nil fontified nil 586 . 593) (586 . 602)) ((#("sensor.sensor_id" 0 7 (fontified nil) 7 15 (fontified nil) 15 16 (rear-nonsticky t fontified nil)) . 586) (undo-tree-id546 . -16) (nil fontified t 601 . 602)) (25765 21626 645692 351000) 0 nil])
([nil nil ((#("[sensor.sensor_id]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 8 (fontified t) 8 16 (fontified t) 16 17 (rear-nonsticky t fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face))) . 690) (undo-tree-id583 . -18) (undo-tree-id584 . -17) (undo-tree-id585 . -18)) nil (25765 21646 174884 268000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 697 . 698) (nil fontified nil 690 . 698) (690 . 698)) nil (25765 21646 174880 111000) 0 nil])
([nil nil ((#("        delete_j = {\"id_list\": [sensor.sensor_id]}
        service = create_serviceclient(firm.id)
        dd = service.delete_sensors(delete_j)" 0 8 (fontified t) 8 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 39 (fontified t) 39 47 (fontified t) 47 48 (rear-nonsticky t fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t) 51 59 (fontified t) 59 66 (fontified t face font-lock-variable-name-face) 66 69 (fontified t) 69 88 (fontified t) 88 89 (rear-nonsticky t fontified t) 89 90 (fontified t face (rainbow-delimiters-depth-1-face)) 90 95 (fontified t) 95 97 (fontified t face font-lock-builtin-face) 97 98 (fontified t face (rainbow-delimiters-depth-1-face)) 98 99 (fontified t) 99 107 (fontified t) 107 109 (fontified t face font-lock-variable-name-face) 109 120 (fontified t) 120 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-1-face)) 135 142 (fontified t) 142 143 (fontified t rear-nonsticky t) 143 144 (fontified t face (rainbow-delimiters-depth-1-face))) . 555) (undo-tree-id570 . -144) (undo-tree-id571 . -13) (undo-tree-id572 . -15) (undo-tree-id573 . -51) (undo-tree-id574 . -98) (undo-tree-id575 . -19) (undo-tree-id576 . -135) (undo-tree-id577 . -31) (undo-tree-id578 . -32) (undo-tree-id579 . -16) (undo-tree-id580 . -135) (undo-tree-id581 . -135) (undo-tree-id582 . -144)) nil (25765 21646 174877 890000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -554) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 555) nil (25765 21646 174861 307000) 0 nil])
([nil nil ((585 . 598)) nil (25765 21646 174846 558000) 0 nil])
([nil nil ((nil rear-nonsticky nil 741 . 742) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 733 . 740) (nil fontified nil 732 . 733) (nil fontified nil 718 . 732) (nil fontified nil 707 . 718) (nil fontified nil 705 . 707) (nil fontified nil 697 . 705) (nil fontified nil 696 . 697) (nil fontified nil 695 . 696) (nil fontified nil 693 . 695) (nil fontified nil 688 . 693) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 667 . 686) (nil fontified nil 664 . 667) (nil fontified nil 657 . 664) (nil fontified nil 649 . 657) (nil fontified nil 648 . 649) (nil fontified nil 647 . 648) (nil fontified nil 646 . 647) (nil fontified nil 645 . 646) (nil fontified nil 637 . 645) (nil fontified nil 630 . 637) (nil fontified nil 629 . 630) (nil fontified nil 627 . 629) (nil fontified nil 618 . 627) (nil fontified nil 617 . 618) (nil fontified nil 614 . 617) (nil fontified nil 606 . 614) (nil fontified nil 598 . 606) (598 . 742)) nil (25765 21646 174843 989000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 586) (568 . 586) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 555) (undo-tree-id555 . -17) (undo-tree-id556 . -17) (573 . 586) 572) nil (25765 21646 174835 833000) 0 nil])
([nil nil ((#("                    delete_j = {\"id_list\": [sensor.sensor_id]}
" 0 12 (fontified nil) 12 20 (fontified nil) 20 28 (fontified nil face font-lock-variable-name-face) 28 31 (fontified nil) 31 32 (fontified nil face (rainbow-delimiters-depth-1-face)) 32 41 (fontified nil face font-lock-string-face) 41 43 (fontified nil) 43 44 (fontified nil face (rainbow-delimiters-depth-2-face)) 44 51 (fontified nil) 51 59 (fontified nil) 59 60 (rear-nonsticky t fontified nil) 60 61 (fontified nil face (rainbow-delimiters-depth-2-face)) 61 62 (fontified nil face (rainbow-delimiters-depth-1-face)) 62 63 (fontified nil)) . 649) (undo-tree-id553 . -12) (631 . 649) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 568) (undo-tree-id554 . -17) (586 . 649) 585) nil (25765 21646 174831 358000) 0 nil])
([nil nil ((#("        service = create_serviceclient(firm.id)
" 0 8 (fontified nil) 8 15 (fontified nil face font-lock-variable-name-face) 15 18 (fontified nil) 18 37 (fontified nil) 37 38 (rear-nonsticky t fontified nil) 38 39 (fontified nil face (rainbow-delimiters-depth-1-face)) 39 44 (fontified nil) 44 46 (fontified nil face font-lock-builtin-face) 46 47 (fontified nil face (rainbow-delimiters-depth-1-face)) 47 48 (fontified nil)) . 697) (679 . 697) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 631) (undo-tree-id552 . -17) (649 . 697) 648) nil (25765 21646 174826 399000) 0 nil])
([nil nil ((#("        dd = service.delete_sensors(delete_j)
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-variable-name-face) 10 21 (fontified nil) 21 35 (fontified nil) 35 36 (fontified nil face (rainbow-delimiters-depth-1-face)) 36 43 (fontified nil) 43 44 (rear-nonsticky t fontified nil) 44 45 (fontified nil rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 45 46 (fontified nil)) . 743) (725 . 743) (#("        print(dd)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 679) (undo-tree-id551 . -17) (697 . 743) 696) nil (25765 21646 174822 723000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -580) (undo-tree-id550 . -5) 585) nil (25765 21646 174818 958000) 0 nil])
([nil nil ((631 . 635) 635) nil (25765 21646 174816 128000) 0 nil])
([nil nil ((683 . 687) 691) nil (25765 21646 174814 819000) 0 nil])
([nil nil ((733 . 737) 742) nil (25765 21646 174812 680000) 0 nil])
([nil nil ((#("
            pass" 0 1 (fontified t) 1 13 (fontified t) 13 15 (fontified t face font-lock-keyword-face) 15 17 (fontified t face font-lock-keyword-face)) . 746) (undo-tree-id547 . -17) (undo-tree-id548 . -1) (undo-tree-id549 . -17)) nil (25765 21646 174807 661000) 0 nil])
([nil nil ((622 . 635) (t 25765 21646 185313 684000)) nil (25765 21959 540563 62000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 642) (641 . 642) (640 . 642) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -640) (635 . 641)) nil (25765 21959 540559 353000) 0 nil])
([nil nil ((641 . 649)) nil (25765 21959 540547 604000) 0 nil])
([nil nil ((331 . 332) (t 25765 21959 545950 811000)) nil (25765 22327 830156 479000) 0 nil])
([nil nil ((nil rear-nonsticky nil 342 . 343) (nil fontified nil 338 . 343) (nil fontified nil 332 . 338) (332 . 343)) nil (25765 22327 830155 4000) 0 nil])
([nil nil ((615 . 626)) nil (25765 22327 830153 453000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -622) (undo-tree-id602 . -1) (#("m" 0 1 (fontified t)) . -623) (undo-tree-id603 . -1) (#("p" 0 1 (fontified t)) . -624) (undo-tree-id604 . -1) (#("s" 0 1 (fontified t)) . -625) (undo-tree-id605 . -1) 626) nil (25765 22327 830151 606000) 0 nil])
([nil nil ((625 . 627) (#("(" 0 1 (fontified nil)) . -625) (622 . 626)) nil (25765 22327 830145 247000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 626)) nil (25765 22327 830143 713000) 0 nil])
([nil nil ((644 . 645) (#(" " 0 1 (fontified nil)) . -644) (644 . 645) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -644) (644 . 645)) nil (25765 22327 830142 217000) 0 nil])
([nil nil ((#("delete_j" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t)) . 767) (undo-tree-id600 . -8) (undo-tree-id601 . -8)) nil (25765 22327 830140 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 784 . 785) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 775 . 783) (nil fontified nil 768 . 775) (nil fontified nil 767 . 768) (767 . 785)) nil (25765 22327 830136 453000) 0 nil])
([nil nil ((#("
            delete_j = {\"id_list\": json.dumps([sensor.sensor_id])}" 0 1 (fontified t) 1 13 (fontified t) 13 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 34 (fontified t face font-lock-string-face) 34 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-3-face)) 48 55 (fontified t) 55 63 (fontified t) 63 64 (rear-nonsticky t fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-3-face)) 65 66 (fontified t face (rainbow-delimiters-depth-2-face)) 66 67 (fontified t face (rainbow-delimiters-depth-1-face))) . 579) (undo-tree-id590 . -67) (undo-tree-id591 . -24) (undo-tree-id592 . -36) (undo-tree-id593 . -35) (undo-tree-id594 . -67) (undo-tree-id595 . -65) (undo-tree-id596 . -1) (undo-tree-id597 . -67) (undo-tree-id598 . -65) (undo-tree-id599 . -67)) nil (25765 22327 830132 572000) 0 nil])
([nil nil ((#("
            print(delete_j)" 0 1 (fontified t) 1 13 (fontified t) 13 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face))) . 579) (undo-tree-id586 . -28) (undo-tree-id587 . -23) (undo-tree-id588 . -1) (undo-tree-id589 . -28)) nil (25765 22327 830116 547000) 0 nil])
([nil nil ((#("
        print(\"CREATING SERVICE STUFF\")
" 0 1 (fontified t) 1 9 (fontified t) 9 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 41 (fontified t)) . 478) (undo-tree-id622 . -41) (undo-tree-id623 . -1) (undo-tree-id624 . -41) (undo-tree-id625 . -41) (t 25765 22327 843292 993000)) nil (25765 22553 549433 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 478) (undo-tree-id621 . -1)) nil (25765 22553 549427 159000) 0 nil])
([nil current ((#("
            print(dd)" 0 1 (fontified t) 1 13 (fontified t) 13 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face))) . 649) (undo-tree-id606 . -22) (undo-tree-id607 . -22) (undo-tree-id608 . -1) (undo-tree-id609 . -22) (undo-tree-id610 . -22) (undo-tree-id611 . -22) (undo-tree-id612 . -22) (undo-tree-id613 . -22) (undo-tree-id614 . -22) (undo-tree-id615 . -22) (undo-tree-id616 . -22) (undo-tree-id617 . -22) (undo-tree-id618 . -22) (undo-tree-id619 . -22) (undo-tree-id620 . -22)) nil (25765 22553 549419 990000) 0 nil])
nil
