(undo-tree-save-format-version . 1)
"a76a2ed536586ed2e076fca49c6eb21661c09a50"
[nil nil nil nil (25699 56263 183784 619000) 0 nil]
([nil nil ((#("{% include ga.js %}
        {% include chatbutton.js %}" 0 1 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t) 2 3 (part-side javascript block-side t) 3 10 (face web-mode-block-control-face part-side javascript block-side t) 10 11 (part-side javascript block-side t) 11 16 (face web-mode-variable-name-face part-side javascript block-side t) 16 17 (part-side javascript block-side t) 17 18 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-side t) 18 19 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t) 19 28 (part-side javascript) 28 29 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t block-controls 0 block-beg 0) 29 30 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-beg block-side t) 30 31 (part-side javascript block-side t) 31 38 (face web-mode-block-control-face part-side javascript block-side t) 38 39 (part-side javascript block-side t) 39 52 (face web-mode-variable-name-face part-side javascript block-side t) 52 53 (part-side javascript block-side t) 53 54 (font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-side t) 54 55 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face part-side javascript block-token delimiter-end block-end t block-side t)) . 1586) (undo-tree-id0 . -55) (undo-tree-id1 . -20) (undo-tree-id2 . -55) (undo-tree-id3 . -55) (undo-tree-id4 . -55) (t 25699 55834 8603 43000)) nil (25699 56263 183781 642000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1620 . 1621) (nil block-side t 1620 . 1621) (nil block-end t 1620 . 1621) (nil block-token delimiter-end 1620 . 1621) (nil part-side javascript 1620 . 1621) (nil font-lock-face web-mode-block-delimiter-face 1620 . 1621) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1620 . 1621) (nil block-side t 1619 . 1620) (nil block-token delimiter-end 1619 . 1620) (nil part-side javascript 1619 . 1620) (nil font-lock-face web-mode-block-delimiter-face 1619 . 1620) (nil block-side t 1618 . 1619) (nil part-side javascript 1618 . 1619) (nil block-side t 1604 . 1618) (nil part-side javascript 1604 . 1618) (nil face web-mode-variable-name-face 1604 . 1618) (nil block-side t 1603 . 1604) (nil part-side javascript 1603 . 1604) (nil block-side t 1597 . 1603) (nil part-side javascript 1597 . 1603) (nil face web-mode-variable-name-face 1597 . 1603) (nil block-side t 1596 . 1597) (nil part-side javascript 1596 . 1597) (nil block-side t 1589 . 1596) (nil part-side javascript 1589 . 1596) (nil face web-mode-block-control-face 1589 . 1596) (nil block-side t 1588 . 1589) (nil part-side javascript 1588 . 1589) (nil block-side t 1587 . 1588) (nil block-token delimiter-beg 1587 . 1588) (nil part-side javascript 1587 . 1588) (nil font-lock-face web-mode-block-delimiter-face 1587 . 1588) (nil block-beg 0 1586 . 1587) (nil block-controls 0 1586 . 1587) (nil block-side t 1586 . 1587) (nil block-token delimiter-beg 1586 . 1587) (nil part-side javascript 1586 . 1587) (nil font-lock-face web-mode-block-delimiter-face 1586 . 1587) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1586 . 1587) (1586 . 1621)) nil (25699 56263 183750 325000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1584) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) 1621 (t 25699 56263 183950 684000)) nil (25699 56330 602346 12000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1524) 1563) nil (25699 56330 602339 273000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1580) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) 1615) nil (25699 56330 602336 857000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1618) 1628) nil (25699 56330 602321 81000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1830) (#("    " 0 4 (part-side javascript)) . -1809) (#("    " 0 4 (part-side javascript)) . -1740) (#("    " 0 4 (part-side javascript)) . -1685) (#("  " 0 2 (part-side javascript)) . -1595) (#("  " 0 2 (part-side javascript)) . -1591) (#("    " 0 4 (part-side javascript)) . -1523) (#("  " 0 2 (part-side javascript)) . -1411) (#("    " 0 4 (part-side javascript)) . -1383) (#("  " 0 2 (part-side javascript)) . -1350) (#("  " 0 2 (part-side javascript)) . -1346) (#("    " 0 4 (part-side javascript)) . -1331) (#("    " 0 4 (part-side javascript)) . -1325) (#("      " 0 6 (part-side javascript)) . -1249) (#("      " 0 6 (part-side javascript)) . -1189) (#("      " 0 6 (part-side javascript)) . -1168) (#("    " 0 4 (part-side javascript)) . -1129) (#("    " 0 4 (part-side javascript)) . -1088) (#("    " 0 4 (part-side javascript)) . -1059) (#("  " 0 2 (part-side javascript)) . -1027) (#("  " 0 2 (part-side javascript)) . -1023) (#("    " 0 4 (part-side javascript)) . -960) (#("    " 0 4 (part-side javascript)) . -954) (#("      " 0 6 (part-side javascript)) . -905) (#("      " 0 6 (part-side javascript)) . -846) (#("      " 0 6 (part-side javascript)) . -817) (#("    " 0 4 (part-side javascript)) . -799) (#("    " 0 4 (part-side javascript)) . -777) (#("  " 0 2 (part-side javascript)) . -732) (#("  " 0 2 (part-side css)) . -434) (#("      " 0 6 (part-side css)) . -380) (#("      " 0 6 (part-side css)) . -301) (#("  " 0 2 (part-side css)) . -271) (#("  " 0 2 (part-side css)) . -189) (#("  " 0 2 (part-side css)) . -11) 1) nil (25699 56330 602306 108000) 0 nil])
([nil nil ((469 . 472) (t 25699 56330 607847 606000)) nil (25699 56530 424879 194000) 0 nil])
([nil nil ((583 . 586)) nil (25699 56530 424873 965000) 0 nil])
([nil nil ((657 . 660)) nil (25699 56530 424869 794000) 0 nil])
([nil nil ((723 . 724)) nil (25699 56530 424855 838000) 0 nil])
([nil nil ((444 . 446) (t 25699 56530 424269 41000)) nil (25699 57440 818007 637000) 0 nil])
([nil nil ((nil rear-nonsticky nil 972 . 973) (nil tag-name "div" 972 . 973) (nil tag-type end 972 . 973) (nil tag-end t 972 . 973) (nil font-lock-face web-mode-html-tag-bracket-face 972 . 973) (nil tag-name "div" 969 . 972) (nil tag-type end 969 . 972) (nil font-lock-face web-mode-html-tag-face 969 . 972) (nil tag-name "div" 968 . 969) (nil tag-type end 968 . 969) (nil font-lock-face web-mode-html-tag-bracket-face 968 . 969) (nil tag-name "div" 967 . 968) (nil tag-type end 967 . 968) (nil tag-beg 20 967 . 968) (nil font-lock-face web-mode-html-tag-bracket-face 967 . 968) (nil tag-name "div" 961 . 962) (nil tag-type end 961 . 962) (nil tag-end t 961 . 962) (nil font-lock-face web-mode-html-tag-bracket-face 961 . 962) (nil tag-name "div" 958 . 961) (nil tag-type end 958 . 961) (nil font-lock-face web-mode-html-tag-face 958 . 961) (nil tag-name "div" 957 . 958) (nil tag-type end 957 . 958) (nil font-lock-face web-mode-html-tag-bracket-face 957 . 958) (nil tag-name "div" 956 . 957) (nil tag-type end 956 . 957) (nil tag-beg 20 956 . 957) (nil font-lock-face web-mode-html-tag-bracket-face 956 . 957) (nil tag-name "button" 946 . 947) (nil tag-type end 946 . 947) (nil tag-end t 946 . 947) (nil font-lock-face web-mode-html-tag-bracket-face 946 . 947) (nil tag-name "button" 940 . 946) (nil tag-type end 940 . 946) (nil font-lock-face web-mode-html-tag-face 940 . 946) (nil tag-name "button" 939 . 940) (nil tag-type end 939 . 940) (nil font-lock-face web-mode-html-tag-bracket-face 939 . 940) (nil tag-name "button" 938 . 939) (nil tag-type end 938 . 939) (nil tag-beg 20 938 . 939) (nil font-lock-face web-mode-html-tag-bracket-face 938 . 939) (nil tag-name "button" 933 . 934) (nil tag-type start 933 . 934) (nil tag-end t 933 . 934) (nil font-lock-face web-mode-html-tag-bracket-face 933 . 934) (nil tag-attr t 932 . 933) (nil tag-attr-end 4 932 . 933) (nil tag-name "button" 932 . 933) (nil tag-type start 932 . 933) (nil font-lock-face web-mode-html-attr-value-face 932 . 933) (nil tag-attr t 925 . 932) (nil tag-name "button" 925 . 932) (nil tag-type start 925 . 932) (nil font-lock-face web-mode-html-attr-value-face 925 . 932) (nil tag-attr t 924 . 925) (nil tag-name "button" 924 . 925) (nil tag-type start 924 . 925) (nil font-lock-face web-mode-html-attr-equal-face 924 . 925) (nil tag-attr t 921 . 924) (nil tag-name "button" 921 . 924) (nil tag-type start 921 . 924) (nil font-lock-face web-mode-html-attr-name-face 921 . 924) (nil tag-attr-beg 0 920 . 921) (nil tag-attr t 920 . 921) (nil tag-name "button" 920 . 921) (nil tag-type start 920 . 921) (nil font-lock-face web-mode-html-attr-name-face 920 . 921) (nil tag-name "button" 919 . 920) (nil tag-type start 919 . 920) (nil tag-attr t 918 . 919) (nil tag-attr-end 5 918 . 919) (nil tag-name "button" 918 . 919) (nil tag-type start 918 . 919) (nil font-lock-face web-mode-html-attr-value-face 918 . 919) (nil tag-attr t 895 . 918) (nil tag-name "button" 895 . 918) (nil tag-type start 895 . 918) (nil font-lock-face web-mode-html-attr-value-face 895 . 918) (nil tag-attr t 894 . 895) (nil tag-name "button" 894 . 895) (nil tag-type start 894 . 895) (nil font-lock-face web-mode-html-attr-equal-face 894 . 895) (nil tag-attr t 890 . 894) (nil tag-name "button" 890 . 894) (nil tag-type start 890 . 894) (nil font-lock-face web-mode-html-attr-name-face 890 . 894) (nil tag-attr-beg 0 889 . 890) (nil tag-attr t 889 . 890) (nil tag-name "button" 889 . 890) (nil tag-type start 889 . 890) (nil font-lock-face web-mode-html-attr-name-face 889 . 890) (nil tag-name "button" 872 . 889) (nil tag-type start 872 . 889) (nil tag-name "button" 866 . 872) (nil tag-type start 866 . 872) (nil font-lock-face web-mode-html-tag-face 866 . 872) (nil tag-name "button" 865 . 866) (nil tag-type start 865 . 866) (nil tag-beg 17 865 . 866) (nil font-lock-face web-mode-html-tag-bracket-face 865 . 866) (nil tag-name "a" 851 . 852) (nil tag-type end 851 . 852) (nil tag-end t 851 . 852) (nil font-lock-face web-mode-html-tag-bracket-face 851 . 852) (nil face (whitespace-line web-mode-html-tag-bracket-face) 851 . 852) (nil tag-name "a" 850 . 851) (nil tag-type end 850 . 851) (nil font-lock-face web-mode-html-tag-face 850 . 851) (nil face (whitespace-line web-mode-html-tag-face) 850 . 851) (nil tag-name "a" 849 . 850) (nil tag-type end 849 . 850) (nil font-lock-face web-mode-html-tag-bracket-face 849 . 850) (nil face (whitespace-line web-mode-html-tag-bracket-face) 849 . 850) (nil tag-name "a" 848 . 849) (nil tag-type end 848 . 849) (nil tag-beg 20 848 . 849) (nil font-lock-face web-mode-html-tag-bracket-face 848 . 849) (nil face (whitespace-line web-mode-html-tag-bracket-face) 848 . 849) (nil tag-name "i" 847 . 848) (nil tag-type end 847 . 848) (nil tag-end t 847 . 848) (nil font-lock-face web-mode-html-tag-bracket-face 847 . 848) (nil face (whitespace-line web-mode-html-tag-bracket-face) 847 . 848) (nil tag-name "i" 846 . 847) (nil tag-type end 846 . 847) (nil font-lock-face web-mode-html-tag-face 846 . 847) (nil face (whitespace-line web-mode-html-tag-face) 846 . 847) (nil tag-name "i" 845 . 846) (nil tag-type end 845 . 846) (nil font-lock-face web-mode-html-tag-bracket-face 845 . 846) (nil face (whitespace-line web-mode-html-tag-bracket-face) 845 . 846) (nil tag-name "i" 844 . 845) (nil tag-type end 844 . 845) (nil tag-beg 20 844 . 845) (nil font-lock-face web-mode-html-tag-bracket-face 844 . 845) (nil face (whitespace-line web-mode-html-tag-bracket-face) 844 . 845) (nil tag-name "i" 843 . 844) (nil tag-type start 843 . 844) (nil tag-end t 843 . 844) (nil font-lock-face web-mode-html-tag-bracket-face 843 . 844) (nil face (whitespace-line web-mode-html-tag-bracket-face) 843 . 844) (nil tag-attr t 842 . 843) (nil tag-attr-end 5 842 . 843) (nil tag-name "i" 842 . 843) (nil tag-type start 842 . 843) (nil font-lock-face web-mode-html-attr-value-face 842 . 843) (nil face (whitespace-line web-mode-html-attr-value-face) 842 . 843) (nil tag-attr t 819 . 842) (nil tag-name "i" 819 . 842) (nil tag-type start 819 . 842) (nil font-lock-face web-mode-html-attr-value-face 819 . 842) (nil face (whitespace-line web-mode-html-attr-value-face) 819 . 842) (nil tag-attr t 818 . 819) (nil tag-name "i" 818 . 819) (nil tag-type start 818 . 819) (nil font-lock-face web-mode-html-attr-equal-face 818 . 819) (nil face (whitespace-line web-mode-html-attr-equal-face) 818 . 819) (nil tag-attr t 814 . 818) (nil tag-name "i" 814 . 818) (nil tag-type start 814 . 818) (nil font-lock-face web-mode-html-attr-name-face 814 . 818) (nil face (whitespace-line web-mode-html-attr-name-face) 814 . 818) (nil tag-attr-beg 0 813 . 814) (nil tag-attr t 813 . 814) (nil tag-name "i" 813 . 814) (nil tag-type start 813 . 814) (nil font-lock-face web-mode-html-attr-name-face 813 . 814) (nil face (whitespace-line web-mode-html-attr-name-face) 813 . 814) (nil tag-name "i" 812 . 813) (nil tag-type start 812 . 813) (nil face (whitespace-line) 812 . 813) (nil tag-name "i" 811 . 812) (nil tag-type start 811 . 812) (nil font-lock-face web-mode-html-tag-face 811 . 812) (nil face (whitespace-line web-mode-html-tag-face) 811 . 812) (nil tag-name "i" 810 . 811) (nil tag-type start 810 . 811) (nil tag-beg 17 810 . 811) (nil font-lock-face web-mode-html-tag-bracket-face 810 . 811) (nil face (whitespace-line web-mode-html-tag-bracket-face) 810 . 811) (nil face (whitespace-line) 800 . 810) (nil tag-name "a" 799 . 800) (nil tag-type start 799 . 800) (nil tag-end t 799 . 800) (nil font-lock-face web-mode-html-tag-bracket-face 799 . 800) (nil face (whitespace-line web-mode-html-tag-bracket-face) 799 . 800) (nil tag-attr t 798 . 799) (nil tag-attr-end 4 798 . 799) (nil tag-name "a" 798 . 799) (nil tag-type start 798 . 799) (nil font-lock-face web-mode-html-attr-value-face 798 . 799) (nil face (whitespace-line web-mode-html-attr-value-face) 798 . 799) (nil tag-attr t 796 . 798) (nil tag-name "a" 796 . 798) (nil tag-type start 796 . 798) (nil font-lock-face web-mode-html-attr-value-face 796 . 798) (nil face (whitespace-line web-mode-html-attr-value-face) 796 . 798) (nil tag-attr t 795 . 796) (nil tag-name "a" 795 . 796) (nil tag-type start 795 . 796) (nil font-lock-face web-mode-html-attr-equal-face 795 . 796) (nil face (whitespace-line web-mode-html-attr-equal-face) 795 . 796) (nil tag-attr t 792 . 795) (nil tag-name "a" 792 . 795) (nil tag-type start 792 . 795) (nil font-lock-face web-mode-html-attr-name-face 792 . 795) (nil face (whitespace-line web-mode-html-attr-name-face) 792 . 795) (nil tag-attr-beg 0 791 . 792) (nil tag-attr t 791 . 792) (nil tag-name "a" 791 . 792) (nil tag-type start 791 . 792) (nil font-lock-face web-mode-html-attr-name-face 791 . 792) (nil face (whitespace-line web-mode-html-attr-name-face) 791 . 792) (nil tag-name "a" 790 . 791) (nil tag-type start 790 . 791) (nil face (whitespace-line) 790 . 791) (nil tag-attr t 789 . 790) (nil tag-attr-end 5 789 . 790) (nil tag-name "a" 789 . 790) (nil tag-type start 789 . 790) (nil font-lock-face web-mode-html-attr-value-face 789 . 790) (nil face (whitespace-line web-mode-html-attr-value-face) 789 . 790) (nil tag-attr t 763 . 789) (nil tag-name "a" 763 . 789) (nil tag-type start 763 . 789) (nil font-lock-face web-mode-html-attr-value-face 763 . 789) (nil face (whitespace-line web-mode-html-attr-value-face) 763 . 789) (nil tag-attr t 762 . 763) (nil tag-name "a" 762 . 763) (nil tag-type start 762 . 763) (nil font-lock-face web-mode-html-attr-equal-face 762 . 763) (nil face (whitespace-line web-mode-html-attr-equal-face) 762 . 763) (nil tag-attr t 758 . 762) (nil tag-name "a" 758 . 762) (nil tag-type start 758 . 762) (nil font-lock-face web-mode-html-attr-name-face 758 . 762) (nil face (whitespace-line web-mode-html-attr-name-face) 758 . 762) (nil tag-attr-beg 0 757 . 758) (nil tag-attr t 757 . 758) (nil tag-name "a" 757 . 758) (nil tag-type start 757 . 758) (nil font-lock-face web-mode-html-attr-name-face 757 . 758) (nil face (whitespace-line web-mode-html-attr-name-face) 757 . 758) (nil tag-name "a" 756 . 757) (nil tag-type start 756 . 757) (nil face (whitespace-line) 756 . 757) (nil tag-name "a" 755 . 756) (nil tag-type start 755 . 756) (nil font-lock-face web-mode-html-tag-face 755 . 756) (nil face (whitespace-line web-mode-html-tag-face) 755 . 756) (nil tag-name "a" 754 . 755) (nil tag-type start 754 . 755) (nil tag-beg 17 754 . 755) (nil font-lock-face web-mode-html-tag-bracket-face 754 . 755) (nil face (whitespace-line web-mode-html-tag-bracket-face) 754 . 755) (nil tag-name "span" 753 . 754) (nil tag-type end 753 . 754) (nil tag-end t 753 . 754) (nil font-lock-face web-mode-html-tag-bracket-face 753 . 754) (nil face (whitespace-line web-mode-html-tag-bracket-face) 753 . 754) (nil tag-name "span" 749 . 753) (nil tag-type end 749 . 753) (nil font-lock-face web-mode-html-tag-face 749 . 753) (nil face (whitespace-line web-mode-html-tag-face) 749 . 753) (nil tag-name "span" 748 . 749) (nil tag-type end 748 . 749) (nil font-lock-face web-mode-html-tag-bracket-face 748 . 749) (nil face (whitespace-line web-mode-html-tag-bracket-face) 748 . 749) (nil tag-name "span" 747 . 748) (nil tag-type end 747 . 748) (nil tag-beg 20 747 . 748) (nil font-lock-face web-mode-html-tag-bracket-face 747 . 748) (nil face (whitespace-line web-mode-html-tag-bracket-face) 747 . 748) (nil face (whitespace-line) 667 . 747) (nil tag-name "span" 666 . 667) (nil tag-type start 666 . 667) (nil tag-end t 666 . 667) (nil font-lock-face web-mode-html-tag-bracket-face 666 . 667) (nil face (whitespace-line web-mode-html-tag-bracket-face) 666 . 667) (nil tag-attr t 665 . 666) (nil tag-attr-end 5 665 . 666) (nil tag-name "span" 665 . 666) (nil tag-type start 665 . 666) (nil font-lock-face web-mode-html-attr-value-face 665 . 666) (nil face (whitespace-line web-mode-html-attr-value-face) 665 . 666) (nil tag-attr t 660 . 665) (nil tag-name "span" 660 . 665) (nil tag-type start 660 . 665) (nil font-lock-face web-mode-html-attr-value-face 660 . 665) (nil face (whitespace-line web-mode-html-attr-value-face) 660 . 665) (nil tag-attr t 659 . 660) (nil tag-name "span" 659 . 660) (nil tag-type start 659 . 660) (nil font-lock-face web-mode-html-attr-equal-face 659 . 660) (nil face (whitespace-line web-mode-html-attr-equal-face) 659 . 660) (nil tag-attr t 655 . 659) (nil tag-name "span" 655 . 659) (nil tag-type start 655 . 659) (nil font-lock-face web-mode-html-attr-name-face 655 . 659) (nil face (whitespace-line web-mode-html-attr-name-face) 655 . 659) (nil tag-attr-beg 0 654 . 655) (nil tag-attr t 654 . 655) (nil tag-name "span" 654 . 655) (nil tag-type start 654 . 655) (nil font-lock-face web-mode-html-attr-name-face 654 . 655) (nil face (whitespace-line web-mode-html-attr-name-face) 654 . 655) (nil tag-name "span" 653 . 654) (nil tag-type start 653 . 654) (nil face (whitespace-line) 653 . 654) (nil tag-name "span" 650 . 653) (nil tag-type start 650 . 653) (nil font-lock-face web-mode-html-tag-face 650 . 653) (nil face (whitespace-line web-mode-html-tag-face) 650 . 653) (nil tag-name "span" 649 . 650) (nil tag-type start 649 . 650) (nil font-lock-face web-mode-html-tag-face 649 . 650) (nil tag-name "span" 648 . 649) (nil tag-type start 648 . 649) (nil tag-beg 17 648 . 649) (nil font-lock-face web-mode-html-tag-bracket-face 648 . 649) (nil tag-name "img" 647 . 648) (nil tag-type void 647 . 648) (nil tag-end t 647 . 648) (nil font-lock-face web-mode-html-tag-bracket-face 647 . 648) (nil tag-attr t 646 . 647) (nil tag-attr-end 5 646 . 647) (nil tag-name "img" 646 . 647) (nil tag-type void 646 . 647) (nil font-lock-face web-mode-html-attr-value-face 646 . 647) (nil tag-attr t 643 . 646) (nil tag-name "img" 643 . 646) (nil tag-type void 643 . 646) (nil font-lock-face web-mode-html-attr-value-face 643 . 646) (nil tag-attr t 642 . 643) (nil tag-name "img" 642 . 643) (nil tag-type void 642 . 643) (nil font-lock-face web-mode-html-attr-equal-face 642 . 643) (nil tag-attr t 638 . 642) (nil tag-name "img" 638 . 642) (nil tag-type void 638 . 642) (nil font-lock-face web-mode-html-attr-name-face 638 . 642) (nil tag-attr-beg 0 637 . 638) (nil tag-attr t 637 . 638) (nil tag-name "img" 637 . 638) (nil tag-type void 637 . 638) (nil font-lock-face web-mode-html-attr-name-face 637 . 638) (nil tag-name "img" 636 . 637) (nil tag-type void 636 . 637) (nil tag-attr t 635 . 636) (nil tag-attr-end 3 635 . 636) (nil tag-name "img" 635 . 636) (nil tag-type void 635 . 636) (nil font-lock-face web-mode-html-attr-value-face 635 . 636) (nil tag-attr t 603 . 635) (nil tag-name "img" 603 . 635) (nil tag-type void 603 . 635) (nil font-lock-face web-mode-html-attr-value-face 603 . 635) (nil tag-attr t 602 . 603) (nil tag-name "img" 602 . 603) (nil tag-type void 602 . 603) (nil font-lock-face web-mode-html-attr-equal-face 602 . 603) (nil tag-attr t 600 . 602) (nil tag-name "img" 600 . 602) (nil tag-type void 600 . 602) (nil font-lock-face web-mode-html-attr-name-face 600 . 602) (nil tag-attr-beg 0 599 . 600) (nil tag-attr t 599 . 600) (nil tag-name "img" 599 . 600) (nil tag-type void 599 . 600) (nil font-lock-face web-mode-html-attr-name-face 599 . 600) (nil tag-name "img" 598 . 599) (nil tag-type void 598 . 599) (nil tag-name "img" 595 . 598) (nil tag-type void 595 . 598) (nil font-lock-face web-mode-html-tag-face 595 . 598) (nil tag-name "img" 594 . 595) (nil tag-type void 594 . 595) (nil tag-beg 17 594 . 595) (nil font-lock-face web-mode-html-tag-bracket-face 594 . 595) (nil tag-name "div" 593 . 594) (nil tag-type start 593 . 594) (nil tag-end t 593 . 594) (nil font-lock-face web-mode-html-tag-bracket-face 593 . 594) (nil tag-attr t 592 . 593) (nil tag-attr-end 5 592 . 593) (nil tag-name "div" 592 . 593) (nil tag-type start 592 . 593) (nil font-lock-face web-mode-html-attr-value-face 592 . 593) (nil tag-attr t 519 . 592) (nil tag-name "div" 519 . 592) (nil tag-type start 519 . 592) (nil font-lock-face web-mode-html-attr-value-face 519 . 592) (nil tag-attr t 518 . 519) (nil tag-name "div" 518 . 519) (nil tag-type start 518 . 519) (nil font-lock-face web-mode-html-attr-equal-face 518 . 519) (nil tag-attr t 514 . 518) (nil tag-name "div" 514 . 518) (nil tag-type start 514 . 518) (nil font-lock-face web-mode-html-attr-name-face 514 . 518) (nil tag-attr-beg 0 513 . 514) (nil tag-attr t 513 . 514) (nil tag-name "div" 513 . 514) (nil tag-type start 513 . 514) (nil font-lock-face web-mode-html-attr-name-face 513 . 514) (nil tag-name "div" 512 . 513) (nil tag-type start 512 . 513) (nil tag-name "div" 509 . 512) (nil tag-type start 509 . 512) (nil font-lock-face web-mode-html-tag-face 509 . 512) (nil tag-name "div" 508 . 509) (nil tag-type start 508 . 509) (nil tag-beg 17 508 . 509) (nil font-lock-face web-mode-html-tag-bracket-face 508 . 509) (nil tag-name "div" 498 . 499) (nil tag-type start 498 . 499) (nil tag-end t 498 . 499) (nil font-lock-face web-mode-html-tag-bracket-face 498 . 499) (nil tag-attr t 497 . 498) (nil tag-attr-end 5 497 . 498) (nil tag-name "div" 497 . 498) (nil tag-type start 497 . 498) (nil font-lock-face web-mode-html-attr-value-face 497 . 498) (nil tag-attr t 456 . 497) (nil tag-name "div" 456 . 497) (nil tag-type start 456 . 497) (nil font-lock-face web-mode-html-attr-value-face 456 . 497) (nil tag-attr t 455 . 456) (nil tag-name "div" 455 . 456) (nil tag-type start 455 . 456) (nil font-lock-face web-mode-html-attr-equal-face 455 . 456) (nil tag-attr t 451 . 455) (nil tag-name "div" 451 . 455) (nil tag-type start 451 . 455) (nil font-lock-face web-mode-html-attr-name-face 451 . 455) (nil tag-attr-beg 0 450 . 451) (nil tag-attr t 450 . 451) (nil tag-name "div" 450 . 451) (nil tag-type start 450 . 451) (nil font-lock-face web-mode-html-attr-name-face 450 . 451) (nil tag-name "div" 449 . 450) (nil tag-type start 449 . 450) (nil tag-name "div" 446 . 449) (nil tag-type start 446 . 449) (nil font-lock-face web-mode-html-tag-face 446 . 449) (nil tag-name "div" 445 . 446) (nil tag-type start 445 . 446) (nil tag-beg 17 445 . 446) (nil font-lock-face web-mode-html-tag-bracket-face 445 . 446) (445 . 973)) nil (25699 57440 817965 888000) 0 nil])
([nil nil (("    " . -933) ("      " . -926) (#("          " 0 10 (tag-type start tag-name "button")) . -865) ("        " . -851) ("      " . -502) 445) nil (25699 57440 817663 557000) 0 nil])
([nil nil ((858 . 865)) nil (25699 57440 817658 839000) 0 nil])
([nil nil ((nil rear-nonsticky nil 889 . 890) (nil tag-attr t 889 . 890) (nil tag-attr-end 2 889 . 890) (nil tag-name "button" 889 . 890) (nil tag-type start 889 . 890) (nil font-lock-face web-mode-html-attr-value-face 889 . 890) (nil tag-attr t 877 . 889) (nil tag-name "button" 877 . 889) (nil tag-type start 877 . 889) (nil font-lock-face web-mode-html-attr-value-face 877 . 889) (nil tag-attr t 868 . 877) (nil tag-name "button" 868 . 877) (nil tag-type start 868 . 877) (nil font-lock-face web-mode-html-attr-value-face 868 . 877) (nil tag-attr t 867 . 868) (nil tag-name "button" 867 . 868) (nil tag-type start 867 . 868) (nil font-lock-face web-mode-html-attr-equal-face 867 . 868) (nil tag-attr t 866 . 867) (nil tag-name "button" 866 . 867) (nil tag-type start 866 . 867) (nil font-lock-face web-mode-html-attr-name-face 866 . 867) (nil tag-attr-beg 0 865 . 866) (nil tag-attr t 865 . 866) (nil tag-name "button" 865 . 866) (nil tag-type start 865 . 866) (nil font-lock-face web-mode-html-attr-name-face 865 . 866) (865 . 890)) nil (25699 57440 817654 238000) 0 nil])
([nil nil ((942 . 949)) nil (25699 57440 817635 133000) 0 nil])
([nil nil ((953 . 958)) nil (25699 57440 817632 194000) 0 nil])
([nil nil ((588 . 593)) nil (25699 57440 817629 670000) 0 nil])
([nil nil ((647 . 652)) nil (25699 57440 817627 227000) 0 nil])
([nil nil ((758 . 763)) nil (25699 57440 817623 914000) 0 nil])
([nil nil ((#("  #cookie-notice {padding: 0.5rem 1rem; display: none; text-align: center; position: fixed; bottom: 0; width: calc(100% - 2rem); background: #222; color: rgba(255,255,255,0.8);}
  #cookie-notice a {display: inline-block; cursor: pointer; margin-left: 0.5rem;}
  @media (max-width: 767px) {
  #cookie-notice span {display: block; padding-top: 3px; margin-bottom: 1rem;}
  #cookie-notice a {position: relative; bottom: 4px;}
  }" 0 2 (part-side css) 2 17 (face web-mode-css-selector-tag-face part-side css) 17 18 (face (rainbow-delimiters-depth-1-face) part-side css) 18 26 (face web-mode-css-property-name-face part-side css) 26 40 (part-side css) 40 48 (face web-mode-css-property-name-face part-side css) 48 55 (part-side css) 55 66 (face web-mode-css-property-name-face part-side css) 66 75 (part-side css) 75 84 (face web-mode-css-property-name-face part-side css) 84 92 (part-side css) 92 99 (face web-mode-css-property-name-face part-side css) 99 103 (part-side css) 103 109 (face web-mode-css-property-name-face part-side css) 109 110 (part-side css) 110 114 (face web-mode-css-function-face part-side css) 114 115 (face (rainbow-delimiters-depth-2-face) part-side css) 115 126 (part-side css) 126 127 (face (rainbow-delimiters-depth-2-face) part-side css) 127 129 (part-side css) 129 140 (face web-mode-css-property-name-face part-side css) 140 141 (part-side css) 141 145 (face web-mode-css-color-face part-side css) 145 147 (part-side css) 147 148 (face web-mode-css-property-name-face part-side css) 148 150 (face web-mode-css-property-name-face part-side css) 150 153 (face (whitespace-line web-mode-css-property-name-face) part-side css) 153 154 (face (whitespace-line) part-side css) 154 158 (face (whitespace-line web-mode-css-function-face) part-side css) 158 159 (face (rainbow-delimiters-depth-2-face whitespace-line) part-side css) 159 174 (face (whitespace-line) part-side css) 174 175 (face (rainbow-delimiters-depth-2-face whitespace-line) part-side css) 175 176 (face (whitespace-line) part-side css) 176 177 (face (rainbow-delimiters-depth-1-face whitespace-line) part-side css) 177 178 (part-side css) 178 180 (part-side css) 180 197 (face web-mode-css-selector-tag-face part-side css) 197 198 (face (rainbow-delimiters-depth-1-face) part-side css) 198 206 (face web-mode-css-property-name-face part-side css) 206 221 (part-side css) 221 228 (face web-mode-css-property-name-face part-side css) 228 238 (part-side css) 238 250 (face web-mode-css-property-name-face part-side css) 250 258 (part-side css) 258 259 (face (rainbow-delimiters-depth-1-face) part-side css) 259 260 (part-side css) 260 262 (part-side css) 262 268 (face web-mode-css-at-rule-face part-side css) 268 269 (part-side css) 269 270 (face (rainbow-delimiters-depth-1-face) part-side css) 270 286 (part-side css) 286 287 (face (rainbow-delimiters-depth-1-face) part-side css) 287 288 (part-side css) 288 289 (face (rainbow-delimiters-depth-1-face) part-side css) 289 292 (part-side css) 292 312 (face web-mode-css-selector-tag-face part-side css) 312 313 (face (rainbow-delimiters-depth-2-face) part-side css) 313 321 (face web-mode-css-property-name-face part-side css) 321 329 (part-side css) 329 341 (face web-mode-css-property-name-face part-side css) 341 347 (part-side css) 347 361 (face web-mode-css-property-name-face part-side css) 361 367 (part-side css) 367 368 (face (rainbow-delimiters-depth-2-face) part-side css) 368 369 (part-side css) 369 371 (part-side css) 371 388 (face web-mode-css-selector-tag-face part-side css) 388 389 (face (rainbow-delimiters-depth-2-face) part-side css) 389 398 (face web-mode-css-property-name-face part-side css) 398 409 (part-side css) 409 416 (face web-mode-css-property-name-face part-side css) 416 421 (part-side css) 421 422 (face (rainbow-delimiters-depth-2-face) part-side css) 422 423 (part-side css) 423 425 (part-side css) 425 426 (face (rainbow-delimiters-depth-1-face) part-side css)) . 9) (undo-tree-id34 . -426) (undo-tree-id35 . -178) (undo-tree-id36 . -426)) nil (25699 57440 817593 767000) 0 nil])
([nil nil ((nil rear-nonsticky nil 564 . 565) (nil part-side css 564 . 565) (nil face (rainbow-delimiters-depth-1-face) 564 . 565) (nil part-side css 558 . 564) (nil part-side css 547 . 558) (nil face web-mode-css-property-name-face 547 . 558) (nil part-side css 538 . 547) (nil part-side css 532 . 538) (nil face web-mode-css-property-name-face 532 . 538) (nil part-side css 523 . 532) (nil part-side css 507 . 523) (nil face web-mode-css-property-name-face 507 . 523) (nil part-side css 504 . 507) (nil part-side css 503 . 504) (nil face (rainbow-delimiters-depth-1-face) 503 . 504) (nil part-side css 496 . 503) (nil face web-mode-css-pseudo-class-face 496 . 503) (nil part-side css 494 . 496) (nil part-side css 486 . 494) (nil face web-mode-css-selector-class-face 486 . 494) (nil part-side css 484 . 486) (nil part-side css 483 . 484) (nil face (rainbow-delimiters-depth-1-face) 483 . 484) (nil part-side css 477 . 483) (nil part-side css 466 . 477) (nil face web-mode-css-property-name-face 466 . 477) (nil part-side css 462 . 466) (nil part-side css 458 . 462) (nil face web-mode-css-color-face 458 . 462) (nil part-side css 457 . 458) (nil part-side css 451 . 457) (nil face web-mode-css-property-name-face 451 . 457) (nil part-side css 442 . 451) (nil part-side css 426 . 442) (nil face web-mode-css-property-name-face 426 . 442) (nil part-side css 423 . 426) (nil part-side css 422 . 423) (nil face (rainbow-delimiters-depth-1-face) 422 . 423) (nil part-side css 419 . 422) (nil part-side css 411 . 419) (nil face web-mode-css-selector-class-face 411 . 419) (nil part-side css 409 . 411) (nil part-side css 408 . 409) (nil face (rainbow-delimiters-depth-1-face) 408 . 409) (nil part-side css 406 . 408) (nil part-side css 405 . 406) (nil face (rainbow-delimiters-depth-2-face) 405 . 406) (nil part-side css 392 . 405) (nil part-side css 391 . 392) (nil face (rainbow-delimiters-depth-2-face) 391 . 392) (nil part-side css 388 . 391) (nil face web-mode-css-function-face 388 . 391) (nil part-side css 371 . 388) (nil part-side css 360 . 371) (nil face web-mode-css-property-name-face 360 . 371) (nil part-side css 356 . 360) (nil part-side css 355 . 356) (nil face (rainbow-delimiters-depth-2-face) 355 . 356) (nil part-side css 339 . 355) (nil part-side css 338 . 339) (nil face (rainbow-delimiters-depth-2-face) 338 . 339) (nil part-side css 334 . 338) (nil face web-mode-css-function-face 334 . 338) (nil part-side css 317 . 334) (nil part-side css 301 . 317) (nil face web-mode-css-property-name-face 301 . 317) (nil part-side css 297 . 301) (nil part-side css 296 . 297) (nil face (rainbow-delimiters-depth-2-face) 296 . 297) (nil part-side css 283 . 296) (nil part-side css 282 . 283) (nil face (rainbow-delimiters-depth-2-face) 282 . 283) (nil part-side css 279 . 282) (nil face web-mode-css-function-face 279 . 282) (nil part-side css 262 . 279) (nil part-side css 243 . 262) (nil face web-mode-css-property-name-face 243 . 262) (nil part-side css 235 . 243) (nil part-side css 221 . 235) (nil face web-mode-css-property-name-face 221 . 235) (nil part-side css 217 . 221) (nil part-side css 210 . 217) (nil face web-mode-css-color-face 210 . 217) (nil part-side css 199 . 210) (nil part-side css 192 . 199) (nil face web-mode-css-property-name-face 192 . 199) (nil part-side css 177 . 192) (nil part-side css 161 . 177) (nil face web-mode-css-property-name-face 161 . 177) (nil part-side css 157 . 161) (nil part-side css 153 . 157) (nil face web-mode-css-color-face 153 . 157) (nil part-side css 152 . 153) (nil part-side css 135 . 152) (nil face web-mode-css-property-name-face 135 . 152) (nil part-side css 120 . 135) (nil part-side css 110 . 120) (nil face web-mode-css-property-name-face 110 . 120) (nil part-side css 104 . 110) (nil part-side css 94 . 104) (nil face web-mode-css-property-name-face 94 . 104) (nil part-side css 83 . 94) (nil part-side css 68 . 83) (nil face web-mode-css-property-name-face 68 . 83) (nil part-side css 58 . 68) (nil part-side css 52 . 58) (nil face web-mode-css-property-name-face 52 . 58) (nil part-side css 49 . 52) (nil part-side css 48 . 49) (nil face (rainbow-delimiters-depth-1-face) 48 . 49) (nil part-side css 47 . 48) (nil part-side css 42 . 47) (nil face web-mode-css-selector-class-face 42 . 47) (nil part-side css 40 . 42) (nil part-side css 39 . 40) (nil face (rainbow-delimiters-depth-1-face) 39 . 40) (nil part-side css 37 . 39) (nil part-side css 30 . 37) (nil face web-mode-css-color-face 30 . 37) (nil part-side css 29 . 30) (nil part-side css 18 . 29) (nil face web-mode-css-property-name-face 18 . 29) (nil part-side css 15 . 18) (nil part-side css 14 . 15) (nil face (rainbow-delimiters-depth-1-face) 14 . 15) (nil part-side css 9 . 14) (nil face web-mode-css-selector-tag-face 9 . 14) (9 . 565)) nil (25699 57440 817552 529000) 0 nil])
([nil nil ((614 . 616) (595 . 597) (578 . 580) (551 . 553) (528 . 530) (523 . 525) (504 . 506) (487 . 489) (460 . 462) (443 . 445) (438 . 440) (388 . 390) (327 . 329) (267 . 269) (243 . 245) (212 . 214) (179 . 181) (151 . 153) (124 . 126) (106 . 108) (78 . 80) (60 . 62) (48 . 50) (43 . 45) (20 . 22) (9 . 11) 1) nil (25699 57440 817448 865000) 0 nil])
([nil nil ((1467 . 1468)) nil (25699 57440 817417 688000) 0 nil])
([nil nil (("We use third party cookies to personalize content, ads and analyze site traffic." . 853) (undo-tree-id31 . -80) (undo-tree-id32 . -79) (undo-tree-id33 . -80)) nil (25699 57440 817410 975000) 0 nil])
([nil nil ((853 . 951)) nil (25699 57440 817396 251000) 0 nil])
([nil nil ((#("<div id=\"cookie-notice\">
  <span>We would like to use third party cookies and scripts to improve the functionality of this website.</span>
  <a id=\"cookie-notice-accept\" class=\"btn btn-primary btn-sm\">Approve</a>
  <a href=\"/privacy\" class=\"btn btn-primary btn-sm\">More info</a>
</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 8 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "span") 28 32 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 131 132 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 132 133 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 133 137 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 142 143 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 143 144 (tag-type start tag-name "a") 144 145 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 145 146 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 146 147 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 147 156 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 156 168 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 168 169 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 2 tag-attr t) 169 170 (tag-type start tag-name "a") 170 171 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 171 175 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 175 176 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 176 178 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 178 180 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 180 199 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 199 200 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 200 201 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 208 209 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 209 210 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 210 211 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 211 212 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 215 216 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 216 217 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 217 218 (tag-type start tag-name "a") 218 219 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 219 222 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 222 223 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 223 232 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 232 233 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 233 234 (tag-type start tag-name "a") 234 235 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 235 239 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 239 240 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 240 263 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 263 264 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 274 275 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 275 276 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 276 277 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 277 278 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 279 280 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 280 281 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 281 284 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 284 285 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1200) (undo-tree-id25 . -285) (undo-tree-id26 . -25) (undo-tree-id27 . -169) (undo-tree-id28 . -131) (undo-tree-id29 . -285) (undo-tree-id30 . -285)) nil (25699 57440 817389 816000) 0 nil])
([nil nil (("
" . -1198) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) ("
" . -1199) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 1200) nil (25699 57440 817358 194000) 0 nil])
([nil nil ((626 . 627) (t 25699 57440 824748 71000)) nil (25699 58458 802716 445000) 0 nil])
([nil nil ((1200 . 1205)) nil (25699 58458 802715 260000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1765 . 1766) (nil tag-name "div" 1765 . 1766) (nil tag-type end 1765 . 1766) (nil tag-end t 1765 . 1766) (nil font-lock-face web-mode-html-tag-bracket-face 1765 . 1766) (nil tag-name "div" 1762 . 1765) (nil tag-type end 1762 . 1765) (nil font-lock-face web-mode-html-tag-face 1762 . 1765) (nil tag-name "div" 1761 . 1762) (nil tag-type end 1761 . 1762) (nil font-lock-face web-mode-html-tag-bracket-face 1761 . 1762) (nil tag-name "div" 1760 . 1761) (nil tag-type end 1760 . 1761) (nil tag-beg 20 1760 . 1761) (nil font-lock-face web-mode-html-tag-bracket-face 1760 . 1761) (nil tag-name "div" 1758 . 1759) (nil tag-type end 1758 . 1759) (nil tag-end t 1758 . 1759) (nil font-lock-face web-mode-html-tag-bracket-face 1758 . 1759) (nil tag-name "div" 1755 . 1758) (nil tag-type end 1755 . 1758) (nil font-lock-face web-mode-html-tag-face 1755 . 1758) (nil tag-name "div" 1754 . 1755) (nil tag-type end 1754 . 1755) (nil font-lock-face web-mode-html-tag-bracket-face 1754 . 1755) (nil tag-name "div" 1753 . 1754) (nil tag-type end 1753 . 1754) (nil tag-beg 20 1753 . 1754) (nil font-lock-face web-mode-html-tag-bracket-face 1753 . 1754) (nil tag-name "div" 1748 . 1749) (nil tag-type end 1748 . 1749) (nil tag-end t 1748 . 1749) (nil font-lock-face web-mode-html-tag-bracket-face 1748 . 1749) (nil tag-name "div" 1745 . 1748) (nil tag-type end 1745 . 1748) (nil font-lock-face web-mode-html-tag-face 1745 . 1748) (nil tag-name "div" 1744 . 1745) (nil tag-type end 1744 . 1745) (nil font-lock-face web-mode-html-tag-bracket-face 1744 . 1745) (nil tag-name "div" 1743 . 1744) (nil tag-type end 1743 . 1744) (nil tag-beg 20 1743 . 1744) (nil font-lock-face web-mode-html-tag-bracket-face 1743 . 1744) (nil tag-name "div" 1737 . 1738) (nil tag-type end 1737 . 1738) (nil tag-end t 1737 . 1738) (nil font-lock-face web-mode-html-tag-bracket-face 1737 . 1738) (nil tag-name "div" 1734 . 1737) (nil tag-type end 1734 . 1737) (nil font-lock-face web-mode-html-tag-face 1734 . 1737) (nil tag-name "div" 1733 . 1734) (nil tag-type end 1733 . 1734) (nil font-lock-face web-mode-html-tag-bracket-face 1733 . 1734) (nil tag-name "div" 1732 . 1733) (nil tag-type end 1732 . 1733) (nil tag-beg 20 1732 . 1733) (nil font-lock-face web-mode-html-tag-bracket-face 1732 . 1733) (nil tag-name "button" 1724 . 1725) (nil tag-type end 1724 . 1725) (nil tag-end t 1724 . 1725) (nil font-lock-face web-mode-html-tag-bracket-face 1724 . 1725) (nil tag-name "button" 1718 . 1724) (nil tag-type end 1718 . 1724) (nil font-lock-face web-mode-html-tag-face 1718 . 1724) (nil tag-name "button" 1717 . 1718) (nil tag-type end 1717 . 1718) (nil font-lock-face web-mode-html-tag-bracket-face 1717 . 1718) (nil tag-name "button" 1716 . 1717) (nil tag-type end 1716 . 1717) (nil tag-beg 20 1716 . 1717) (nil font-lock-face web-mode-html-tag-bracket-face 1716 . 1717) (nil tag-name "button" 1710 . 1711) (nil tag-type start 1710 . 1711) (nil tag-end t 1710 . 1711) (nil font-lock-face web-mode-html-tag-bracket-face 1710 . 1711) (nil tag-attr t 1709 . 1710) (nil tag-attr-end 12 1709 . 1710) (nil tag-name "button" 1709 . 1710) (nil tag-type start 1709 . 1710) (nil font-lock-face web-mode-html-attr-value-face 1709 . 1710) (nil tag-attr t 1703 . 1709) (nil tag-name "button" 1703 . 1709) (nil tag-type start 1703 . 1709) (nil font-lock-face web-mode-html-attr-value-face 1703 . 1709) (nil tag-attr t 1702 . 1703) (nil tag-name "button" 1702 . 1703) (nil tag-type start 1702 . 1703) (nil font-lock-face web-mode-html-attr-equal-face 1702 . 1703) (nil tag-attr t 1691 . 1702) (nil tag-name "button" 1691 . 1702) (nil tag-type start 1691 . 1702) (nil font-lock-face web-mode-html-attr-custom-face 1691 . 1702) (nil tag-attr-beg 1 1690 . 1691) (nil tag-attr t 1690 . 1691) (nil tag-name "button" 1690 . 1691) (nil tag-type start 1690 . 1691) (nil font-lock-face web-mode-html-attr-custom-face 1690 . 1691) (nil tag-name "button" 1689 . 1690) (nil tag-type start 1689 . 1690) (nil tag-attr t 1688 . 1689) (nil tag-attr-end 5 1688 . 1689) (nil tag-name "button" 1688 . 1689) (nil tag-type start 1688 . 1689) (nil font-lock-face web-mode-html-attr-value-face 1688 . 1689) (nil tag-attr t 1672 . 1688) (nil tag-name "button" 1672 . 1688) (nil tag-type start 1672 . 1688) (nil font-lock-face web-mode-html-attr-value-face 1672 . 1688) (nil tag-attr t 1671 . 1672) (nil tag-name "button" 1671 . 1672) (nil tag-type start 1671 . 1672) (nil font-lock-face web-mode-html-attr-equal-face 1671 . 1672) (nil tag-attr t 1667 . 1671) (nil tag-name "button" 1667 . 1671) (nil tag-type start 1667 . 1671) (nil font-lock-face web-mode-html-attr-name-face 1667 . 1671) (nil tag-attr-beg 0 1666 . 1667) (nil tag-attr t 1666 . 1667) (nil tag-name "button" 1666 . 1667) (nil tag-type start 1666 . 1667) (nil font-lock-face web-mode-html-attr-name-face 1666 . 1667) (nil tag-name "button" 1665 . 1666) (nil tag-type start 1665 . 1666) (nil tag-attr t 1664 . 1665) (nil tag-attr-end 4 1664 . 1665) (nil tag-name "button" 1664 . 1665) (nil tag-type start 1664 . 1665) (nil font-lock-face web-mode-html-attr-value-face 1664 . 1665) (nil tag-attr t 1657 . 1664) (nil tag-name "button" 1657 . 1664) (nil tag-type start 1657 . 1664) (nil font-lock-face web-mode-html-attr-value-face 1657 . 1664) (nil tag-attr t 1656 . 1657) (nil tag-name "button" 1656 . 1657) (nil tag-type start 1656 . 1657) (nil font-lock-face web-mode-html-attr-equal-face 1656 . 1657) (nil tag-attr t 1653 . 1656) (nil tag-name "button" 1653 . 1656) (nil tag-type start 1653 . 1656) (nil font-lock-face web-mode-html-attr-name-face 1653 . 1656) (nil tag-attr-beg 0 1652 . 1653) (nil tag-attr t 1652 . 1653) (nil tag-name "button" 1652 . 1653) (nil tag-type start 1652 . 1653) (nil font-lock-face web-mode-html-attr-name-face 1652 . 1653) (nil tag-name "button" 1651 . 1652) (nil tag-type start 1651 . 1652) (nil tag-name "button" 1645 . 1651) (nil tag-type start 1645 . 1651) (nil font-lock-face web-mode-html-tag-face 1645 . 1651) (nil tag-name "button" 1644 . 1645) (nil tag-type start 1644 . 1645) (nil tag-beg 17 1644 . 1645) (nil font-lock-face web-mode-html-tag-bracket-face 1644 . 1645) (nil tag-name "div" 1634 . 1635) (nil tag-type start 1634 . 1635) (nil tag-end t 1634 . 1635) (nil font-lock-face web-mode-html-tag-bracket-face 1634 . 1635) (nil tag-attr t 1633 . 1634) (nil tag-attr-end 5 1633 . 1634) (nil tag-name "div" 1633 . 1634) (nil tag-type start 1633 . 1634) (nil font-lock-face web-mode-html-attr-value-face 1633 . 1634) (nil tag-attr t 1620 . 1633) (nil tag-name "div" 1620 . 1633) (nil tag-type start 1620 . 1633) (nil font-lock-face web-mode-html-attr-value-face 1620 . 1633) (nil tag-attr t 1619 . 1620) (nil tag-name "div" 1619 . 1620) (nil tag-type start 1619 . 1620) (nil font-lock-face web-mode-html-attr-equal-face 1619 . 1620) (nil tag-attr t 1615 . 1619) (nil tag-name "div" 1615 . 1619) (nil tag-type start 1615 . 1619) (nil font-lock-face web-mode-html-attr-name-face 1615 . 1619) (nil tag-attr-beg 0 1614 . 1615) (nil tag-attr t 1614 . 1615) (nil tag-name "div" 1614 . 1615) (nil tag-type start 1614 . 1615) (nil font-lock-face web-mode-html-attr-name-face 1614 . 1615) (nil tag-name "div" 1613 . 1614) (nil tag-type start 1613 . 1614) (nil tag-name "div" 1610 . 1613) (nil tag-type start 1610 . 1613) (nil font-lock-face web-mode-html-tag-face 1610 . 1613) (nil tag-name "div" 1609 . 1610) (nil tag-type start 1609 . 1610) (nil tag-beg 17 1609 . 1610) (nil font-lock-face web-mode-html-tag-bracket-face 1609 . 1610) (nil tag-name "div" 1601 . 1602) (nil tag-type end 1601 . 1602) (nil tag-end t 1601 . 1602) (nil font-lock-face web-mode-html-tag-bracket-face 1601 . 1602) (nil tag-name "div" 1598 . 1601) (nil tag-type end 1598 . 1601) (nil font-lock-face web-mode-html-tag-face 1598 . 1601) (nil tag-name "div" 1597 . 1598) (nil tag-type end 1597 . 1598) (nil font-lock-face web-mode-html-tag-bracket-face 1597 . 1598) (nil tag-name "div" 1596 . 1597) (nil tag-type end 1596 . 1597) (nil tag-beg 20 1596 . 1597) (nil font-lock-face web-mode-html-tag-bracket-face 1596 . 1597) (nil tag-name "p" 1588 . 1589) (nil tag-type end 1588 . 1589) (nil tag-end t 1588 . 1589) (nil font-lock-face web-mode-html-tag-bracket-face 1588 . 1589) (nil tag-name "p" 1587 . 1588) (nil tag-type end 1587 . 1588) (nil font-lock-face web-mode-html-tag-face 1587 . 1588) (nil tag-name "p" 1586 . 1587) (nil tag-type end 1586 . 1587) (nil font-lock-face web-mode-html-tag-bracket-face 1586 . 1587) (nil tag-name "p" 1585 . 1586) (nil tag-type end 1585 . 1586) (nil tag-beg 20 1585 . 1586) (nil font-lock-face web-mode-html-tag-bracket-face 1585 . 1586) (nil tag-name "p" 1561 . 1562) (nil tag-type start 1561 . 1562) (nil tag-end t 1561 . 1562) (nil font-lock-face web-mode-html-tag-bracket-face 1561 . 1562) (nil tag-name "p" 1560 . 1561) (nil tag-type start 1560 . 1561) (nil font-lock-face web-mode-html-tag-face 1560 . 1561) (nil tag-name "p" 1559 . 1560) (nil tag-type start 1559 . 1560) (nil tag-beg 16 1559 . 1560) (nil font-lock-face web-mode-html-tag-bracket-face 1559 . 1560) (nil tag-name "div" 1549 . 1550) (nil tag-type start 1549 . 1550) (nil tag-end t 1549 . 1550) (nil font-lock-face web-mode-html-tag-bracket-face 1549 . 1550) (nil tag-attr t 1548 . 1549) (nil tag-attr-end 5 1548 . 1549) (nil tag-name "div" 1548 . 1549) (nil tag-type start 1548 . 1549) (nil font-lock-face web-mode-html-attr-value-face 1548 . 1549) (nil tag-attr t 1537 . 1548) (nil tag-name "div" 1537 . 1548) (nil tag-type start 1537 . 1548) (nil font-lock-face web-mode-html-attr-value-face 1537 . 1548) (nil tag-attr t 1536 . 1537) (nil tag-name "div" 1536 . 1537) (nil tag-type start 1536 . 1537) (nil font-lock-face web-mode-html-attr-equal-face 1536 . 1537) (nil tag-attr t 1532 . 1536) (nil tag-name "div" 1532 . 1536) (nil tag-type start 1532 . 1536) (nil font-lock-face web-mode-html-attr-name-face 1532 . 1536) (nil tag-attr-beg 0 1531 . 1532) (nil tag-attr t 1531 . 1532) (nil tag-name "div" 1531 . 1532) (nil tag-type start 1531 . 1532) (nil font-lock-face web-mode-html-attr-name-face 1531 . 1532) (nil tag-name "div" 1530 . 1531) (nil tag-type start 1530 . 1531) (nil tag-name "div" 1527 . 1530) (nil tag-type start 1527 . 1530) (nil font-lock-face web-mode-html-tag-face 1527 . 1530) (nil tag-name "div" 1526 . 1527) (nil tag-type start 1526 . 1527) (nil tag-beg 17 1526 . 1527) (nil font-lock-face web-mode-html-tag-bracket-face 1526 . 1527) (nil tag-name "div" 1518 . 1519) (nil tag-type end 1518 . 1519) (nil tag-end t 1518 . 1519) (nil font-lock-face web-mode-html-tag-bracket-face 1518 . 1519) (nil tag-name "div" 1515 . 1518) (nil tag-type end 1515 . 1518) (nil font-lock-face web-mode-html-tag-face 1515 . 1518) (nil tag-name "div" 1514 . 1515) (nil tag-type end 1514 . 1515) (nil font-lock-face web-mode-html-tag-bracket-face 1514 . 1515) (nil tag-name "div" 1513 . 1514) (nil tag-type end 1513 . 1514) (nil tag-beg 20 1513 . 1514) (nil font-lock-face web-mode-html-tag-bracket-face 1513 . 1514) (nil tag-name "h4" 1505 . 1506) (nil tag-type end 1505 . 1506) (nil tag-end t 1505 . 1506) (nil font-lock-face web-mode-html-tag-bracket-face 1505 . 1506) (nil tag-name "h4" 1503 . 1505) (nil tag-type end 1503 . 1505) (nil font-lock-face web-mode-html-tag-face 1503 . 1505) (nil tag-name "h4" 1502 . 1503) (nil tag-type end 1502 . 1503) (nil font-lock-face web-mode-html-tag-bracket-face 1502 . 1503) (nil tag-name "h4" 1501 . 1502) (nil tag-type end 1501 . 1502) (nil tag-beg 20 1501 . 1502) (nil font-lock-face web-mode-html-tag-bracket-face 1501 . 1502) (nil tag-name "h4" 1488 . 1489) (nil tag-type start 1488 . 1489) (nil tag-end t 1488 . 1489) (nil font-lock-face web-mode-html-tag-bracket-face 1488 . 1489) (nil tag-attr t 1487 . 1488) (nil tag-attr-end 5 1487 . 1488) (nil tag-name "h4" 1487 . 1488) (nil tag-type start 1487 . 1488) (nil font-lock-face web-mode-html-attr-value-face 1487 . 1488) (nil tag-attr t 1475 . 1487) (nil tag-name "h4" 1475 . 1487) (nil tag-type start 1475 . 1487) (nil font-lock-face web-mode-html-attr-value-face 1475 . 1487) (nil tag-attr t 1474 . 1475) (nil tag-name "h4" 1474 . 1475) (nil tag-type start 1474 . 1475) (nil font-lock-face web-mode-html-attr-equal-face 1474 . 1475) (nil tag-attr t 1470 . 1474) (nil tag-name "h4" 1470 . 1474) (nil tag-type start 1470 . 1474) (nil font-lock-face web-mode-html-attr-name-face 1470 . 1474) (nil tag-attr-beg 0 1469 . 1470) (nil tag-attr t 1469 . 1470) (nil tag-name "h4" 1469 . 1470) (nil tag-type start 1469 . 1470) (nil font-lock-face web-mode-html-attr-name-face 1469 . 1470) (nil tag-name "h4" 1468 . 1469) (nil tag-type start 1468 . 1469) (nil tag-name "h4" 1466 . 1468) (nil tag-type start 1466 . 1468) (nil font-lock-face web-mode-html-tag-face 1466 . 1468) (nil tag-name "h4" 1465 . 1466) (nil tag-type start 1465 . 1466) (nil tag-beg 17 1465 . 1466) (nil font-lock-face web-mode-html-tag-bracket-face 1465 . 1466) (nil tag-name "button" 1455 . 1456) (nil tag-type end 1455 . 1456) (nil tag-end t 1455 . 1456) (nil font-lock-face web-mode-html-tag-bracket-face 1455 . 1456) (nil tag-name "button" 1449 . 1455) (nil tag-type end 1449 . 1455) (nil font-lock-face web-mode-html-tag-face 1449 . 1455) (nil tag-name "button" 1448 . 1449) (nil tag-type end 1448 . 1449) (nil font-lock-face web-mode-html-tag-bracket-face 1448 . 1449) (nil tag-name "button" 1447 . 1448) (nil tag-type end 1447 . 1448) (nil tag-beg 20 1447 . 1448) (nil font-lock-face web-mode-html-tag-bracket-face 1447 . 1448) (nil font-lock-face (web-mode-html-entity-face) 1440 . 1447) (nil tag-name "button" 1439 . 1440) (nil tag-type start 1439 . 1440) (nil tag-end t 1439 . 1440) (nil font-lock-face web-mode-html-tag-bracket-face 1439 . 1440) (nil tag-attr t 1438 . 1439) (nil tag-attr-end 12 1438 . 1439) (nil tag-name "button" 1438 . 1439) (nil tag-type start 1438 . 1439) (nil font-lock-face web-mode-html-attr-value-face 1438 . 1439) (nil tag-attr t 1432 . 1438) (nil tag-name "button" 1432 . 1438) (nil tag-type start 1432 . 1438) (nil font-lock-face web-mode-html-attr-value-face 1432 . 1438) (nil tag-attr t 1431 . 1432) (nil tag-name "button" 1431 . 1432) (nil tag-type start 1431 . 1432) (nil font-lock-face web-mode-html-attr-equal-face 1431 . 1432) (nil tag-attr t 1420 . 1431) (nil tag-name "button" 1420 . 1431) (nil tag-type start 1420 . 1431) (nil font-lock-face web-mode-html-attr-custom-face 1420 . 1431) (nil tag-attr-beg 1 1419 . 1420) (nil tag-attr t 1419 . 1420) (nil tag-name "button" 1419 . 1420) (nil tag-type start 1419 . 1420) (nil font-lock-face web-mode-html-attr-custom-face 1419 . 1420) (nil tag-name "button" 1418 . 1419) (nil tag-type start 1418 . 1419) (nil tag-attr t 1417 . 1418) (nil tag-attr-end 5 1417 . 1418) (nil tag-name "button" 1417 . 1418) (nil tag-type start 1417 . 1418) (nil font-lock-face web-mode-html-attr-value-face 1417 . 1418) (nil tag-attr t 1411 . 1417) (nil tag-name "button" 1411 . 1417) (nil tag-type start 1411 . 1417) (nil font-lock-face web-mode-html-attr-value-face 1411 . 1417) (nil tag-attr t 1410 . 1411) (nil tag-name "button" 1410 . 1411) (nil tag-type start 1410 . 1411) (nil font-lock-face web-mode-html-attr-equal-face 1410 . 1411) (nil tag-attr t 1406 . 1410) (nil tag-name "button" 1406 . 1410) (nil tag-type start 1406 . 1410) (nil font-lock-face web-mode-html-attr-name-face 1406 . 1410) (nil tag-attr-beg 0 1405 . 1406) (nil tag-attr t 1405 . 1406) (nil tag-name "button" 1405 . 1406) (nil tag-type start 1405 . 1406) (nil font-lock-face web-mode-html-attr-name-face 1405 . 1406) (nil tag-name "button" 1404 . 1405) (nil tag-type start 1404 . 1405) (nil tag-attr t 1403 . 1404) (nil tag-attr-end 4 1403 . 1404) (nil tag-name "button" 1403 . 1404) (nil tag-type start 1403 . 1404) (nil font-lock-face web-mode-html-attr-value-face 1403 . 1404) (nil tag-attr t 1396 . 1403) (nil tag-name "button" 1396 . 1403) (nil tag-type start 1396 . 1403) (nil font-lock-face web-mode-html-attr-value-face 1396 . 1403) (nil tag-attr t 1395 . 1396) (nil tag-name "button" 1395 . 1396) (nil tag-type start 1395 . 1396) (nil font-lock-face web-mode-html-attr-equal-face 1395 . 1396) (nil tag-attr t 1392 . 1395) (nil tag-name "button" 1392 . 1395) (nil tag-type start 1392 . 1395) (nil font-lock-face web-mode-html-attr-name-face 1392 . 1395) (nil tag-attr-beg 0 1391 . 1392) (nil tag-attr t 1391 . 1392) (nil tag-name "button" 1391 . 1392) (nil tag-type start 1391 . 1392) (nil font-lock-face web-mode-html-attr-name-face 1391 . 1392) (nil tag-name "button" 1390 . 1391) (nil tag-type start 1390 . 1391) (nil tag-name "button" 1384 . 1390) (nil tag-type start 1384 . 1390) (nil font-lock-face web-mode-html-tag-face 1384 . 1390) (nil tag-name "button" 1383 . 1384) (nil tag-type start 1383 . 1384) (nil tag-beg 17 1383 . 1384) (nil font-lock-face web-mode-html-tag-bracket-face 1383 . 1384) (nil tag-name "div" 1373 . 1374) (nil tag-type start 1373 . 1374) (nil tag-end t 1373 . 1374) (nil font-lock-face web-mode-html-tag-bracket-face 1373 . 1374) (nil tag-attr t 1372 . 1373) (nil tag-attr-end 5 1372 . 1373) (nil tag-name "div" 1372 . 1373) (nil tag-type start 1372 . 1373) (nil font-lock-face web-mode-html-attr-value-face 1372 . 1373) (nil tag-attr t 1359 . 1372) (nil tag-name "div" 1359 . 1372) (nil tag-type start 1359 . 1372) (nil font-lock-face web-mode-html-attr-value-face 1359 . 1372) (nil tag-attr t 1358 . 1359) (nil tag-name "div" 1358 . 1359) (nil tag-type start 1358 . 1359) (nil font-lock-face web-mode-html-attr-equal-face 1358 . 1359) (nil tag-attr t 1354 . 1358) (nil tag-name "div" 1354 . 1358) (nil tag-type start 1354 . 1358) (nil font-lock-face web-mode-html-attr-name-face 1354 . 1358) (nil tag-attr-beg 0 1353 . 1354) (nil tag-attr t 1353 . 1354) (nil tag-name "div" 1353 . 1354) (nil tag-type start 1353 . 1354) (nil font-lock-face web-mode-html-attr-name-face 1353 . 1354) (nil tag-name "div" 1352 . 1353) (nil tag-type start 1352 . 1353) (nil tag-name "div" 1349 . 1352) (nil tag-type start 1349 . 1352) (nil font-lock-face web-mode-html-tag-face 1349 . 1352) (nil tag-name "div" 1348 . 1349) (nil tag-type start 1348 . 1349) (nil tag-beg 17 1348 . 1349) (nil font-lock-face web-mode-html-tag-bracket-face 1348 . 1349) (nil tag-name "div" 1340 . 1341) (nil tag-type start 1340 . 1341) (nil tag-end t 1340 . 1341) (nil font-lock-face web-mode-html-tag-bracket-face 1340 . 1341) (nil tag-attr t 1339 . 1340) (nil tag-attr-end 5 1339 . 1340) (nil tag-name "div" 1339 . 1340) (nil tag-type start 1339 . 1340) (nil font-lock-face web-mode-html-attr-value-face 1339 . 1340) (nil tag-attr t 1325 . 1339) (nil tag-name "div" 1325 . 1339) (nil tag-type start 1325 . 1339) (nil font-lock-face web-mode-html-attr-value-face 1325 . 1339) (nil tag-attr t 1324 . 1325) (nil tag-name "div" 1324 . 1325) (nil tag-type start 1324 . 1325) (nil font-lock-face web-mode-html-attr-equal-face 1324 . 1325) (nil tag-attr t 1320 . 1324) (nil tag-name "div" 1320 . 1324) (nil tag-type start 1320 . 1324) (nil font-lock-face web-mode-html-attr-name-face 1320 . 1324) (nil tag-attr-beg 0 1319 . 1320) (nil tag-attr t 1319 . 1320) (nil tag-name "div" 1319 . 1320) (nil tag-type start 1319 . 1320) (nil font-lock-face web-mode-html-attr-name-face 1319 . 1320) (nil tag-name "div" 1318 . 1319) (nil tag-type start 1318 . 1319) (nil tag-name "div" 1315 . 1318) (nil tag-type start 1315 . 1318) (nil font-lock-face web-mode-html-tag-face 1315 . 1318) (nil tag-name "div" 1314 . 1315) (nil tag-type start 1314 . 1315) (nil tag-beg 17 1314 . 1315) (nil font-lock-face web-mode-html-tag-bracket-face 1314 . 1315) (nil tag-type comment 1308 . 1309) (nil tag-end t 1308 . 1309) (nil font-lock-face web-mode-comment-face 1308 . 1309) (nil tag-type comment 1289 . 1308) (nil font-lock-face web-mode-comment-face 1289 . 1308) (nil tag-type comment 1288 . 1289) (nil tag-beg 0 1288 . 1289) (nil font-lock-face web-mode-comment-face 1288 . 1289) (nil tag-name "div" 1281 . 1282) (nil tag-type start 1281 . 1282) (nil tag-end t 1281 . 1282) (nil font-lock-face web-mode-html-tag-bracket-face 1281 . 1282) (nil tag-attr t 1280 . 1281) (nil tag-attr-end 5 1280 . 1281) (nil tag-name "div" 1280 . 1281) (nil tag-type start 1280 . 1281) (nil font-lock-face web-mode-html-attr-value-face 1280 . 1281) (nil tag-attr t 1267 . 1280) (nil tag-name "div" 1267 . 1280) (nil tag-type start 1267 . 1280) (nil font-lock-face web-mode-html-attr-value-face 1267 . 1280) (nil tag-attr t 1266 . 1267) (nil tag-name "div" 1266 . 1267) (nil tag-type start 1266 . 1267) (nil font-lock-face web-mode-html-attr-equal-face 1266 . 1267) (nil tag-attr t 1262 . 1266) (nil tag-name "div" 1262 . 1266) (nil tag-type start 1262 . 1266) (nil font-lock-face web-mode-html-attr-name-face 1262 . 1266) (nil tag-attr-beg 0 1261 . 1262) (nil tag-attr t 1261 . 1262) (nil tag-name "div" 1261 . 1262) (nil tag-type start 1261 . 1262) (nil font-lock-face web-mode-html-attr-name-face 1261 . 1262) (nil tag-name "div" 1260 . 1261) (nil tag-type start 1260 . 1261) (nil tag-name "div" 1257 . 1260) (nil tag-type start 1257 . 1260) (nil font-lock-face web-mode-html-tag-face 1257 . 1260) (nil tag-name "div" 1256 . 1257) (nil tag-type start 1256 . 1257) (nil tag-beg 17 1256 . 1257) (nil font-lock-face web-mode-html-tag-bracket-face 1256 . 1257) (nil tag-name "div" 1252 . 1253) (nil tag-type start 1252 . 1253) (nil tag-end t 1252 . 1253) (nil font-lock-face web-mode-html-tag-bracket-face 1252 . 1253) (nil tag-attr t 1251 . 1252) (nil tag-attr-end 4 1251 . 1252) (nil tag-name "div" 1251 . 1252) (nil tag-type start 1251 . 1252) (nil font-lock-face web-mode-html-attr-value-face 1251 . 1252) (nil tag-attr t 1244 . 1251) (nil tag-name "div" 1244 . 1251) (nil tag-type start 1244 . 1251) (nil font-lock-face web-mode-html-attr-value-face 1244 . 1251) (nil tag-attr t 1243 . 1244) (nil tag-name "div" 1243 . 1244) (nil tag-type start 1243 . 1244) (nil font-lock-face web-mode-html-attr-equal-face 1243 . 1244) (nil tag-attr t 1240 . 1243) (nil tag-name "div" 1240 . 1243) (nil tag-type start 1240 . 1243) (nil font-lock-face web-mode-html-attr-name-face 1240 . 1243) (nil tag-attr-beg 0 1239 . 1240) (nil tag-attr t 1239 . 1240) (nil tag-name "div" 1239 . 1240) (nil tag-type start 1239 . 1240) (nil font-lock-face web-mode-html-attr-name-face 1239 . 1240) (nil tag-name "div" 1238 . 1239) (nil tag-type start 1238 . 1239) (nil tag-attr t 1237 . 1238) (nil tag-attr-end 5 1237 . 1238) (nil tag-name "div" 1237 . 1238) (nil tag-type start 1237 . 1238) (nil font-lock-face web-mode-html-attr-value-face 1237 . 1238) (nil tag-attr t 1226 . 1237) (nil tag-name "div" 1226 . 1237) (nil tag-type start 1226 . 1237) (nil font-lock-face web-mode-html-attr-value-face 1226 . 1237) (nil tag-attr t 1225 . 1226) (nil tag-name "div" 1225 . 1226) (nil tag-type start 1225 . 1226) (nil font-lock-face web-mode-html-attr-equal-face 1225 . 1226) (nil tag-attr t 1221 . 1225) (nil tag-name "div" 1221 . 1225) (nil tag-type start 1221 . 1225) (nil font-lock-face web-mode-html-attr-name-face 1221 . 1225) (nil tag-attr-beg 0 1220 . 1221) (nil tag-attr t 1220 . 1221) (nil tag-name "div" 1220 . 1221) (nil tag-type start 1220 . 1221) (nil font-lock-face web-mode-html-attr-name-face 1220 . 1221) (nil tag-name "div" 1219 . 1220) (nil tag-type start 1219 . 1220) (nil tag-attr t 1218 . 1219) (nil tag-attr-end 2 1218 . 1219) (nil tag-name "div" 1218 . 1219) (nil tag-type start 1218 . 1219) (nil font-lock-face web-mode-html-attr-value-face 1218 . 1219) (nil tag-attr t 1210 . 1218) (nil tag-name "div" 1210 . 1218) (nil tag-type start 1210 . 1218) (nil font-lock-face web-mode-html-attr-value-face 1210 . 1218) (nil tag-attr t 1209 . 1210) (nil tag-name "div" 1209 . 1210) (nil tag-type start 1209 . 1210) (nil font-lock-face web-mode-html-attr-equal-face 1209 . 1210) (nil tag-attr t 1208 . 1209) (nil tag-name "div" 1208 . 1209) (nil tag-type start 1208 . 1209) (nil font-lock-face web-mode-html-attr-name-face 1208 . 1209) (nil tag-attr-beg 0 1207 . 1208) (nil tag-attr t 1207 . 1208) (nil tag-name "div" 1207 . 1208) (nil tag-type start 1207 . 1208) (nil font-lock-face web-mode-html-attr-name-face 1207 . 1208) (nil tag-name "div" 1206 . 1207) (nil tag-type start 1206 . 1207) (nil tag-name "div" 1203 . 1206) (nil tag-type start 1203 . 1206) (nil font-lock-face web-mode-html-tag-face 1203 . 1206) (nil tag-name "div" 1202 . 1203) (nil tag-type start 1202 . 1203) (nil tag-beg 17 1202 . 1203) (nil font-lock-face web-mode-html-tag-bracket-face 1202 . 1203) (1202 . 1766)) nil (25699 58458 802683 149000) 0 nil])
([nil nil (("Some text in the modal." . 1562) (undo-tree-id103 . -23) (undo-tree-id104 . -23)) nil (25699 58458 802551 523000) 0 nil])
([nil nil ((1562 . 1660)) nil (25699 58458 802548 530000) 0 nil])
([nil nil ((#("  body {
    background: #BCBCCC;
  }

  .card {
    width: 350px;
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
    background-color: #fff;
    background-clip: border-box;
    border: 1px solid #d2d2dc;
    border-radius: 6px;
    -webkit-box-shadow: 0px 0px 5px 0px rgb(249, 249, 250);
    -moz-box-shadow: 0px 0px 5px 0px rgba(212, 182, 212, 1);
    box-shadow: 0px 0px 5px 0px rgb(161, 163, 164);
  }

  .cookies a {
    text-decoration: none;
    color: #000;
    margin-top: 8px;
  }

  .cookies a:hover {
    text-decoration: none;
    color: blue;
    margin-top: 8px;
  }" 0 2 (part-side css) 2 7 (face web-mode-css-selector-tag-face part-side css) 7 8 (face (rainbow-delimiters-depth-1-face) part-side css) 8 13 (part-side css) 13 24 (face web-mode-css-property-name-face part-side css) 24 25 (part-side css) 25 32 (face web-mode-css-color-face part-side css) 32 36 (part-side css) 36 37 (face (rainbow-delimiters-depth-1-face) part-side css) 37 38 (part-side css) 38 41 (part-side css) 41 46 (face web-mode-css-selector-class-face part-side css) 46 47 (part-side css) 47 48 (face (rainbow-delimiters-depth-1-face) part-side css) 48 53 (part-side css) 53 59 (face web-mode-css-property-name-face part-side css) 59 71 (part-side css) 71 86 (face web-mode-css-property-name-face part-side css) 86 99 (part-side css) 99 109 (face web-mode-css-property-name-face part-side css) 109 117 (part-side css) 117 127 (face web-mode-css-property-name-face part-side css) 127 144 (part-side css) 144 161 (face web-mode-css-property-name-face part-side css) 161 162 (part-side css) 162 166 (face web-mode-css-color-face part-side css) 166 172 (part-side css) 172 188 (face web-mode-css-property-name-face part-side css) 188 205 (part-side css) 205 212 (face web-mode-css-property-name-face part-side css) 212 223 (part-side css) 223 230 (face web-mode-css-color-face part-side css) 230 236 (part-side css) 236 250 (face web-mode-css-property-name-face part-side css) 250 260 (part-side css) 260 279 (face web-mode-css-property-name-face part-side css) 279 296 (part-side css) 296 299 (face web-mode-css-function-face part-side css) 299 300 (face (rainbow-delimiters-depth-2-face) part-side css) 300 313 (part-side css) 313 314 (face (rainbow-delimiters-depth-2-face) part-side css) 314 320 (part-side css) 320 336 (face web-mode-css-property-name-face part-side css) 336 353 (part-side css) 353 357 (face web-mode-css-function-face part-side css) 357 358 (face (rainbow-delimiters-depth-2-face) part-side css) 358 374 (part-side css) 374 375 (face (rainbow-delimiters-depth-2-face) part-side css) 375 381 (part-side css) 381 392 (face web-mode-css-property-name-face part-side css) 392 409 (part-side css) 409 412 (face web-mode-css-function-face part-side css) 412 413 (face (rainbow-delimiters-depth-2-face) part-side css) 413 426 (part-side css) 426 427 (face (rainbow-delimiters-depth-2-face) part-side css) 427 431 (part-side css) 431 432 (face (rainbow-delimiters-depth-1-face) part-side css) 432 433 (part-side css) 433 436 (part-side css) 436 444 (face web-mode-css-selector-class-face part-side css) 444 447 (part-side css) 447 448 (face (rainbow-delimiters-depth-1-face) part-side css) 448 453 (part-side css) 453 469 (face web-mode-css-property-name-face part-side css) 469 480 (part-side css) 480 486 (face web-mode-css-property-name-face part-side css) 486 487 (part-side css) 487 491 (face web-mode-css-color-face part-side css) 491 497 (part-side css) 497 508 (face web-mode-css-property-name-face part-side css) 508 516 (part-side css) 516 517 (face (rainbow-delimiters-depth-1-face) part-side css) 517 518 (part-side css) 518 521 (part-side css) 521 529 (face web-mode-css-selector-class-face part-side css) 529 531 (part-side css) 531 538 (face web-mode-css-pseudo-class-face part-side css) 538 539 (face (rainbow-delimiters-depth-1-face) part-side css) 539 544 (part-side css) 544 560 (face web-mode-css-property-name-face part-side css) 560 571 (part-side css) 571 577 (face web-mode-css-property-name-face part-side css) 577 588 (part-side css) 588 599 (face web-mode-css-property-name-face part-side css) 599 607 (part-side css) 607 608 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 9) (undo-tree-id98 . -608) (undo-tree-id99 . -112) (undo-tree-id100 . -112) (undo-tree-id101 . -9) (undo-tree-id102 . -608)) nil (25699 58458 802547 186000) 0 nil])
([nil nil ((nil rear-nonsticky nil 212 . 213) (nil part-side css 212 . 213) (nil face (rainbow-delimiters-depth-1-face) 212 . 213) (nil part-side css 211 . 212) (nil part-side css 210 . 211) (nil face (rainbow-delimiters-depth-2-face) 210 . 211) (nil part-side css 207 . 210) (nil part-side css 206 . 207) (nil face (rainbow-delimiters-depth-3-face) 206 . 207) (nil part-side css 193 . 206) (nil part-side css 186 . 193) (nil face web-mode-css-property-name-face 186 . 193) (nil part-side css 179 . 186) (nil part-side css 178 . 179) (nil face (rainbow-delimiters-depth-3-face) 178 . 179) (nil part-side css 168 . 178) (nil part-side css 167 . 168) (nil face (rainbow-delimiters-depth-2-face) 167 . 168) (nil part-side css 155 . 167) (nil part-side css 153 . 155) (nil face whitespace-trailing 153 . 155) (nil part-side css 152 . 153) (nil part-side css 151 . 152) (nil face (rainbow-delimiters-depth-2-face) 151 . 152) (nil part-side css 142 . 151) (nil part-side css 128 . 142) (nil face web-mode-css-property-name-face 128 . 142) (nil part-side css 123 . 128) (nil part-side css 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil part-side css 104 . 122) (nil part-side css 102 . 104) (nil face whitespace-trailing 102 . 104) (nil part-side css 95 . 102) (nil part-side css 85 . 95) (nil face web-mode-css-property-name-face 85 . 95) (nil part-side css 76 . 85) (nil part-side css 65 . 76) (nil face web-mode-css-property-name-face 65 . 76) (nil part-side css 62 . 65) (nil part-side css 61 . 62) (nil face (rainbow-delimiters-depth-1-face) 61 . 62) (nil part-side css 60 . 61) (nil part-side css 47 . 60) (nil face web-mode-css-selector-class-face 47 . 60) (nil part-side css 45 . 47) (nil part-side css 44 . 45) (nil face (rainbow-delimiters-depth-1-face) 44 . 45) (nil part-side css 32 . 44) (nil part-side css 24 . 32) (nil face web-mode-css-property-name-face 24 . 32) (nil part-side css 21 . 24) (nil part-side css 20 . 21) (nil face (rainbow-delimiters-depth-1-face) 20 . 21) (nil part-side css 19 . 20) (nil part-side css 9 . 19) (nil face web-mode-css-selector-class-face 9 . 19) (9 . 213)) nil (25699 58458 802537 402000) 0 nil])
([nil nil ((244 . 246) (240 . 242) (234 . 236) (206 . 214) (#("      " 0 6 (part-side css)) . 206) (197 . 199) (180 . 182) (175 . 177) (169 . 171) (144 . 146) (121 . 123) (116 . 118) (95 . 97) (73 . 75) (53 . 55) (48 . 50) (26 . 28) (9 . 11)) nil (25699 58458 802522 958000) 0 nil])
([nil nil ((1471 . 1473)) nil (25699 58458 802518 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2255 . 2256) (nil tag-name "div" 2255 . 2256) (nil tag-type end 2255 . 2256) (nil tag-end t 2255 . 2256) (nil font-lock-face web-mode-html-tag-bracket-face 2255 . 2256) (nil tag-name "div" 2252 . 2255) (nil tag-type end 2252 . 2255) (nil font-lock-face web-mode-html-tag-face 2252 . 2255) (nil tag-name "div" 2251 . 2252) (nil tag-type end 2251 . 2252) (nil font-lock-face web-mode-html-tag-bracket-face 2251 . 2252) (nil tag-name "div" 2250 . 2251) (nil tag-type end 2250 . 2251) (nil tag-beg 20 2250 . 2251) (nil font-lock-face web-mode-html-tag-bracket-face 2250 . 2251) (nil tag-name "div" 2248 . 2249) (nil tag-type end 2248 . 2249) (nil tag-end t 2248 . 2249) (nil font-lock-face web-mode-html-tag-bracket-face 2248 . 2249) (nil tag-name "div" 2245 . 2248) (nil tag-type end 2245 . 2248) (nil font-lock-face web-mode-html-tag-face 2245 . 2248) (nil tag-name "div" 2244 . 2245) (nil tag-type end 2244 . 2245) (nil font-lock-face web-mode-html-tag-bracket-face 2244 . 2245) (nil tag-name "div" 2243 . 2244) (nil tag-type end 2243 . 2244) (nil tag-beg 20 2243 . 2244) (nil font-lock-face web-mode-html-tag-bracket-face 2243 . 2244) (nil tag-name "div" 2239 . 2240) (nil tag-type end 2239 . 2240) (nil tag-end t 2239 . 2240) (nil font-lock-face web-mode-html-tag-bracket-face 2239 . 2240) (nil tag-name "div" 2236 . 2239) (nil tag-type end 2236 . 2239) (nil font-lock-face web-mode-html-tag-face 2236 . 2239) (nil tag-name "div" 2235 . 2236) (nil tag-type end 2235 . 2236) (nil font-lock-face web-mode-html-tag-bracket-face 2235 . 2236) (nil tag-name "div" 2234 . 2235) (nil tag-type end 2234 . 2235) (nil tag-beg 20 2234 . 2235) (nil font-lock-face web-mode-html-tag-bracket-face 2234 . 2235) (nil tag-name "div" 2228 . 2229) (nil tag-type end 2228 . 2229) (nil tag-end t 2228 . 2229) (nil font-lock-face web-mode-html-tag-bracket-face 2228 . 2229) (nil tag-name "div" 2225 . 2228) (nil tag-type end 2225 . 2228) (nil font-lock-face web-mode-html-tag-face 2225 . 2228) (nil tag-name "div" 2224 . 2225) (nil tag-type end 2224 . 2225) (nil font-lock-face web-mode-html-tag-bracket-face 2224 . 2225) (nil tag-name "div" 2223 . 2224) (nil tag-type end 2223 . 2224) (nil tag-beg 20 2223 . 2224) (nil font-lock-face web-mode-html-tag-bracket-face 2223 . 2224) (nil tag-name "div" 2215 . 2216) (nil tag-type end 2215 . 2216) (nil tag-end t 2215 . 2216) (nil font-lock-face web-mode-html-tag-bracket-face 2215 . 2216) (nil tag-name "div" 2212 . 2215) (nil tag-type end 2212 . 2215) (nil font-lock-face web-mode-html-tag-face 2212 . 2215) (nil tag-name "div" 2211 . 2212) (nil tag-type end 2211 . 2212) (nil font-lock-face web-mode-html-tag-bracket-face 2211 . 2212) (nil tag-name "div" 2210 . 2211) (nil tag-type end 2210 . 2211) (nil tag-beg 20 2210 . 2211) (nil font-lock-face web-mode-html-tag-bracket-face 2210 . 2211) (nil tag-name "div" 2200 . 2201) (nil tag-type end 2200 . 2201) (nil tag-end t 2200 . 2201) (nil font-lock-face web-mode-html-tag-bracket-face 2200 . 2201) (nil tag-name "div" 2197 . 2200) (nil tag-type end 2197 . 2200) (nil font-lock-face web-mode-html-tag-face 2197 . 2200) (nil tag-name "div" 2196 . 2197) (nil tag-type end 2196 . 2197) (nil font-lock-face web-mode-html-tag-bracket-face 2196 . 2197) (nil tag-name "div" 2195 . 2196) (nil tag-type end 2195 . 2196) (nil tag-beg 20 2195 . 2196) (nil font-lock-face web-mode-html-tag-bracket-face 2195 . 2196) (nil tag-name "a" 2183 . 2184) (nil tag-type end 2183 . 2184) (nil tag-end t 2183 . 2184) (nil font-lock-face web-mode-html-tag-bracket-face 2183 . 2184) (nil tag-name "a" 2182 . 2183) (nil tag-type end 2182 . 2183) (nil font-lock-face web-mode-html-tag-face 2182 . 2183) (nil tag-name "a" 2181 . 2182) (nil tag-type end 2181 . 2182) (nil font-lock-face web-mode-html-tag-bracket-face 2181 . 2182) (nil tag-name "a" 2180 . 2181) (nil tag-type end 2180 . 2181) (nil tag-beg 20 2180 . 2181) (nil font-lock-face web-mode-html-tag-bracket-face 2180 . 2181) (nil tag-name "a" 2169 . 2170) (nil tag-type start 2169 . 2170) (nil tag-end t 2169 . 2170) (nil font-lock-face web-mode-html-tag-bracket-face 2169 . 2170) (nil tag-attr t 2168 . 2169) (nil tag-attr-end 12 2168 . 2169) (nil tag-name "a" 2168 . 2169) (nil tag-type start 2168 . 2169) (nil font-lock-face web-mode-html-attr-value-face 2168 . 2169) (nil tag-attr t 2162 . 2168) (nil tag-name "a" 2162 . 2168) (nil tag-type start 2162 . 2168) (nil font-lock-face web-mode-html-attr-value-face 2162 . 2168) (nil tag-attr t 2161 . 2162) (nil tag-name "a" 2161 . 2162) (nil tag-type start 2161 . 2162) (nil font-lock-face web-mode-html-attr-equal-face 2161 . 2162) (nil tag-attr t 2150 . 2161) (nil tag-name "a" 2150 . 2161) (nil tag-type start 2150 . 2161) (nil font-lock-face web-mode-html-attr-custom-face 2150 . 2161) (nil tag-attr-beg 1 2149 . 2150) (nil tag-attr t 2149 . 2150) (nil tag-name "a" 2149 . 2150) (nil tag-type start 2149 . 2150) (nil font-lock-face web-mode-html-attr-custom-face 2149 . 2150) (nil tag-name "a" 2148 . 2149) (nil tag-type start 2148 . 2149) (nil tag-attr t 2147 . 2148) (nil tag-attr-end 5 2147 . 2148) (nil tag-name "a" 2147 . 2148) (nil tag-type start 2147 . 2148) (nil font-lock-face web-mode-html-attr-value-face 2147 . 2148) (nil tag-attr t 2122 . 2147) (nil tag-name "a" 2122 . 2147) (nil tag-type start 2122 . 2147) (nil font-lock-face web-mode-html-attr-value-face 2122 . 2147) (nil tag-attr t 2121 . 2122) (nil tag-name "a" 2121 . 2122) (nil tag-type start 2121 . 2122) (nil font-lock-face web-mode-html-attr-equal-face 2121 . 2122) (nil tag-attr t 2117 . 2121) (nil tag-name "a" 2117 . 2121) (nil tag-type start 2117 . 2121) (nil font-lock-face web-mode-html-attr-name-face 2117 . 2121) (nil tag-attr-beg 0 2116 . 2117) (nil tag-attr t 2116 . 2117) (nil tag-name "a" 2116 . 2117) (nil tag-type start 2116 . 2117) (nil font-lock-face web-mode-html-attr-name-face 2116 . 2117) (nil tag-name "a" 2115 . 2116) (nil tag-type start 2115 . 2116) (nil tag-attr t 2114 . 2115) (nil tag-attr-end 4 2114 . 2115) (nil tag-name "a" 2114 . 2115) (nil tag-type start 2114 . 2115) (nil font-lock-face web-mode-html-attr-value-face 2114 . 2115) (nil tag-attr t 2111 . 2114) (nil tag-name "a" 2111 . 2114) (nil tag-type start 2111 . 2114) (nil font-lock-face web-mode-html-attr-value-face 2111 . 2114) (nil tag-attr t 2110 . 2111) (nil tag-name "a" 2110 . 2111) (nil tag-type start 2110 . 2111) (nil font-lock-face web-mode-html-attr-equal-face 2110 . 2111) (nil tag-attr t 2107 . 2110) (nil tag-name "a" 2107 . 2110) (nil tag-type start 2107 . 2110) (nil font-lock-face web-mode-html-attr-name-face 2107 . 2110) (nil tag-attr-beg 0 2106 . 2107) (nil tag-attr t 2106 . 2107) (nil tag-name "a" 2106 . 2107) (nil tag-type start 2106 . 2107) (nil font-lock-face web-mode-html-attr-name-face 2106 . 2107) (nil tag-name "a" 2105 . 2106) (nil tag-type start 2105 . 2106) (nil tag-name "a" 2104 . 2105) (nil tag-type start 2104 . 2105) (nil font-lock-face web-mode-html-tag-face 2104 . 2105) (nil tag-name "a" 2103 . 2104) (nil tag-type start 2103 . 2104) (nil tag-beg 17 2103 . 2104) (nil font-lock-face web-mode-html-tag-bracket-face 2103 . 2104) (nil tag-name "a" 2089 . 2090) (nil tag-type end 2089 . 2090) (nil tag-end t 2089 . 2090) (nil font-lock-face web-mode-html-tag-bracket-face 2089 . 2090) (nil tag-name "a" 2088 . 2089) (nil tag-type end 2088 . 2089) (nil font-lock-face web-mode-html-tag-face 2088 . 2089) (nil tag-name "a" 2087 . 2088) (nil tag-type end 2087 . 2088) (nil font-lock-face web-mode-html-tag-bracket-face 2087 . 2088) (nil tag-name "a" 2086 . 2087) (nil tag-type end 2086 . 2087) (nil tag-beg 20 2086 . 2087) (nil font-lock-face web-mode-html-tag-bracket-face 2086 . 2087) (nil tag-name "a" 2077 . 2078) (nil tag-type start 2077 . 2078) (nil tag-end t 2077 . 2078) (nil font-lock-face web-mode-html-tag-bracket-face 2077 . 2078) (nil tag-attr t 2076 . 2077) (nil tag-attr-end 12 2076 . 2077) (nil tag-name "a" 2076 . 2077) (nil tag-type start 2076 . 2077) (nil font-lock-face web-mode-html-attr-value-face 2076 . 2077) (nil tag-attr t 2070 . 2076) (nil tag-name "a" 2070 . 2076) (nil tag-type start 2070 . 2076) (nil font-lock-face web-mode-html-attr-value-face 2070 . 2076) (nil tag-attr t 2069 . 2070) (nil tag-name "a" 2069 . 2070) (nil tag-type start 2069 . 2070) (nil font-lock-face web-mode-html-attr-equal-face 2069 . 2070) (nil tag-attr t 2058 . 2069) (nil tag-name "a" 2058 . 2069) (nil tag-type start 2058 . 2069) (nil font-lock-face web-mode-html-attr-custom-face 2058 . 2069) (nil tag-attr-beg 1 2057 . 2058) (nil tag-attr t 2057 . 2058) (nil tag-name "a" 2057 . 2058) (nil tag-type start 2057 . 2058) (nil font-lock-face web-mode-html-attr-custom-face 2057 . 2058) (nil tag-name "a" 2056 . 2057) (nil tag-type start 2056 . 2057) (nil tag-attr t 2055 . 2056) (nil tag-attr-end 5 2055 . 2056) (nil tag-name "a" 2055 . 2056) (nil tag-type start 2055 . 2056) (nil font-lock-face web-mode-html-attr-value-face 2055 . 2056) (nil tag-attr t 2032 . 2055) (nil tag-name "a" 2032 . 2055) (nil tag-type start 2032 . 2055) (nil font-lock-face web-mode-html-attr-value-face 2032 . 2055) (nil tag-attr t 2031 . 2032) (nil tag-name "a" 2031 . 2032) (nil tag-type start 2031 . 2032) (nil font-lock-face web-mode-html-attr-equal-face 2031 . 2032) (nil tag-attr t 2027 . 2031) (nil tag-name "a" 2027 . 2031) (nil tag-type start 2027 . 2031) (nil font-lock-face web-mode-html-attr-name-face 2027 . 2031) (nil tag-attr-beg 0 2026 . 2027) (nil tag-attr t 2026 . 2027) (nil tag-name "a" 2026 . 2027) (nil tag-type start 2026 . 2027) (nil font-lock-face web-mode-html-attr-name-face 2026 . 2027) (nil tag-name "a" 2025 . 2026) (nil tag-type start 2025 . 2026) (nil tag-attr t 2024 . 2025) (nil tag-attr-end 4 2024 . 2025) (nil tag-name "a" 2024 . 2025) (nil tag-type start 2024 . 2025) (nil font-lock-face web-mode-html-attr-value-face 2024 . 2025) (nil tag-attr t 2021 . 2024) (nil tag-name "a" 2021 . 2024) (nil tag-type start 2021 . 2024) (nil font-lock-face web-mode-html-attr-value-face 2021 . 2024) (nil tag-attr t 2020 . 2021) (nil tag-name "a" 2020 . 2021) (nil tag-type start 2020 . 2021) (nil font-lock-face web-mode-html-attr-equal-face 2020 . 2021) (nil tag-attr t 2017 . 2020) (nil tag-name "a" 2017 . 2020) (nil tag-type start 2017 . 2020) (nil font-lock-face web-mode-html-attr-name-face 2017 . 2020) (nil tag-attr-beg 0 2016 . 2017) (nil tag-attr t 2016 . 2017) (nil tag-name "a" 2016 . 2017) (nil tag-type start 2016 . 2017) (nil font-lock-face web-mode-html-attr-name-face 2016 . 2017) (nil tag-name "a" 2015 . 2016) (nil tag-type start 2015 . 2016) (nil tag-name "a" 2014 . 2015) (nil tag-type start 2014 . 2015) (nil font-lock-face web-mode-html-tag-face 2014 . 2015) (nil tag-name "a" 2013 . 2014) (nil tag-type start 2013 . 2014) (nil tag-beg 17 2013 . 2014) (nil font-lock-face web-mode-html-tag-bracket-face 2013 . 2014) (nil tag-name "div" 1999 . 2000) (nil tag-type start 1999 . 2000) (nil tag-end t 1999 . 2000) (nil font-lock-face web-mode-html-tag-bracket-face 1999 . 2000) (nil tag-attr t 1998 . 1999) (nil tag-attr-end 5 1998 . 1999) (nil tag-name "div" 1998 . 1999) (nil tag-type start 1998 . 1999) (nil font-lock-face web-mode-html-attr-value-face 1998 . 1999) (nil tag-attr t 1959 . 1998) (nil tag-name "div" 1959 . 1998) (nil tag-type start 1959 . 1998) (nil font-lock-face web-mode-html-attr-value-face 1959 . 1998) (nil tag-attr t 1958 . 1959) (nil tag-name "div" 1958 . 1959) (nil tag-type start 1958 . 1959) (nil font-lock-face web-mode-html-attr-equal-face 1958 . 1959) (nil tag-attr t 1954 . 1958) (nil tag-name "div" 1954 . 1958) (nil tag-type start 1954 . 1958) (nil font-lock-face web-mode-html-attr-name-face 1954 . 1958) (nil tag-attr-beg 0 1953 . 1954) (nil tag-attr t 1953 . 1954) (nil tag-name "div" 1953 . 1954) (nil tag-type start 1953 . 1954) (nil font-lock-face web-mode-html-attr-name-face 1953 . 1954) (nil tag-name "div" 1952 . 1953) (nil tag-type start 1952 . 1953) (nil tag-name "div" 1949 . 1952) (nil tag-type start 1949 . 1952) (nil font-lock-face web-mode-html-tag-face 1949 . 1952) (nil tag-name "div" 1948 . 1949) (nil tag-type start 1948 . 1949) (nil tag-beg 17 1948 . 1949) (nil font-lock-face web-mode-html-tag-bracket-face 1948 . 1949) (nil tag-name "div" 1936 . 1937) (nil tag-type end 1936 . 1937) (nil tag-end t 1936 . 1937) (nil font-lock-face web-mode-html-tag-bracket-face 1936 . 1937) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1936 . 1937) (nil tag-name "div" 1935 . 1936) (nil tag-type end 1935 . 1936) (nil font-lock-face web-mode-html-tag-face 1935 . 1936) (nil face (whitespace-line web-mode-html-tag-face) 1935 . 1936) (nil tag-name "div" 1933 . 1935) (nil tag-type end 1933 . 1935) (nil font-lock-face web-mode-html-tag-face 1933 . 1935) (nil tag-name "div" 1932 . 1933) (nil tag-type end 1932 . 1933) (nil font-lock-face web-mode-html-tag-bracket-face 1932 . 1933) (nil tag-name "div" 1931 . 1932) (nil tag-type end 1931 . 1932) (nil tag-beg 20 1931 . 1932) (nil font-lock-face web-mode-html-tag-bracket-face 1931 . 1932) (nil tag-name "div" 1819 . 1820) (nil tag-type start 1819 . 1820) (nil tag-end t 1819 . 1820) (nil font-lock-face web-mode-html-tag-bracket-face 1819 . 1820) (nil tag-attr t 1818 . 1819) (nil tag-attr-end 5 1818 . 1819) (nil tag-name "div" 1818 . 1819) (nil tag-type start 1818 . 1819) (nil font-lock-face web-mode-html-attr-value-face 1818 . 1819) (nil tag-attr t 1806 . 1818) (nil tag-name "div" 1806 . 1818) (nil tag-type start 1806 . 1818) (nil font-lock-face web-mode-html-attr-value-face 1806 . 1818) (nil tag-attr t 1805 . 1806) (nil tag-name "div" 1805 . 1806) (nil tag-type start 1805 . 1806) (nil font-lock-face web-mode-html-attr-equal-face 1805 . 1806) (nil tag-attr t 1801 . 1805) (nil tag-name "div" 1801 . 1805) (nil tag-type start 1801 . 1805) (nil font-lock-face web-mode-html-attr-name-face 1801 . 1805) (nil tag-attr-beg 0 1800 . 1801) (nil tag-attr t 1800 . 1801) (nil tag-name "div" 1800 . 1801) (nil tag-type start 1800 . 1801) (nil font-lock-face web-mode-html-attr-name-face 1800 . 1801) (nil tag-name "div" 1799 . 1800) (nil tag-type start 1799 . 1800) (nil tag-name "div" 1796 . 1799) (nil tag-type start 1796 . 1799) (nil font-lock-face web-mode-html-tag-face 1796 . 1799) (nil tag-name "div" 1795 . 1796) (nil tag-type start 1795 . 1796) (nil tag-beg 17 1795 . 1796) (nil font-lock-face web-mode-html-tag-bracket-face 1795 . 1796) (nil tag-name "div" 1783 . 1784) (nil tag-type start 1783 . 1784) (nil tag-end t 1783 . 1784) (nil font-lock-face web-mode-html-tag-bracket-face 1783 . 1784) (nil tag-attr t 1782 . 1783) (nil tag-attr-end 5 1782 . 1783) (nil tag-name "div" 1782 . 1783) (nil tag-type start 1782 . 1783) (nil font-lock-face web-mode-html-attr-value-face 1782 . 1783) (nil tag-attr t 1725 . 1782) (nil tag-name "div" 1725 . 1782) (nil tag-type start 1725 . 1782) (nil font-lock-face web-mode-html-attr-value-face 1725 . 1782) (nil tag-attr t 1724 . 1725) (nil tag-name "div" 1724 . 1725) (nil tag-type start 1724 . 1725) (nil font-lock-face web-mode-html-attr-equal-face 1724 . 1725) (nil tag-attr t 1720 . 1724) (nil tag-name "div" 1720 . 1724) (nil tag-type start 1720 . 1724) (nil font-lock-face web-mode-html-attr-name-face 1720 . 1724) (nil tag-attr-beg 0 1719 . 1720) (nil tag-attr t 1719 . 1720) (nil tag-name "div" 1719 . 1720) (nil tag-type start 1719 . 1720) (nil font-lock-face web-mode-html-attr-name-face 1719 . 1720) (nil tag-name "div" 1718 . 1719) (nil tag-type start 1718 . 1719) (nil tag-name "div" 1715 . 1718) (nil tag-type start 1715 . 1718) (nil font-lock-face web-mode-html-tag-face 1715 . 1718) (nil tag-name "div" 1714 . 1715) (nil tag-type start 1714 . 1715) (nil tag-beg 17 1714 . 1715) (nil font-lock-face web-mode-html-tag-bracket-face 1714 . 1715) (nil tag-name "div" 1704 . 1705) (nil tag-type start 1704 . 1705) (nil tag-end t 1704 . 1705) (nil font-lock-face web-mode-html-tag-bracket-face 1704 . 1705) (nil tag-attr t 1703 . 1704) (nil tag-attr-end 5 1703 . 1704) (nil tag-name "div" 1703 . 1704) (nil tag-type start 1703 . 1704) (nil font-lock-face web-mode-html-attr-value-face 1703 . 1704) (nil tag-attr t 1692 . 1703) (nil tag-name "div" 1692 . 1703) (nil tag-type start 1692 . 1703) (nil font-lock-face web-mode-html-attr-value-face 1692 . 1703) (nil tag-attr t 1691 . 1692) (nil tag-name "div" 1691 . 1692) (nil tag-type start 1691 . 1692) (nil font-lock-face web-mode-html-attr-equal-face 1691 . 1692) (nil tag-attr t 1687 . 1691) (nil tag-name "div" 1687 . 1691) (nil tag-type start 1687 . 1691) (nil font-lock-face web-mode-html-attr-name-face 1687 . 1691) (nil tag-attr-beg 0 1686 . 1687) (nil tag-attr t 1686 . 1687) (nil tag-name "div" 1686 . 1687) (nil tag-type start 1686 . 1687) (nil font-lock-face web-mode-html-attr-name-face 1686 . 1687) (nil tag-name "div" 1685 . 1686) (nil tag-type start 1685 . 1686) (nil tag-name "div" 1682 . 1685) (nil tag-type start 1682 . 1685) (nil font-lock-face web-mode-html-tag-face 1682 . 1685) (nil tag-name "div" 1681 . 1682) (nil tag-type start 1681 . 1682) (nil tag-beg 17 1681 . 1682) (nil font-lock-face web-mode-html-tag-bracket-face 1681 . 1682) (nil tag-name "div" 1673 . 1674) (nil tag-type start 1673 . 1674) (nil tag-end t 1673 . 1674) (nil font-lock-face web-mode-html-tag-bracket-face 1673 . 1674) (nil tag-attr t 1672 . 1673) (nil tag-attr-end 5 1672 . 1673) (nil tag-name "div" 1672 . 1673) (nil tag-type start 1672 . 1673) (nil font-lock-face web-mode-html-attr-value-face 1672 . 1673) (nil tag-attr t 1658 . 1672) (nil tag-name "div" 1658 . 1672) (nil tag-type start 1658 . 1672) (nil font-lock-face web-mode-html-attr-value-face 1658 . 1672) (nil tag-attr t 1657 . 1658) (nil tag-name "div" 1657 . 1658) (nil tag-type start 1657 . 1658) (nil font-lock-face web-mode-html-attr-equal-face 1657 . 1658) (nil tag-attr t 1653 . 1657) (nil tag-name "div" 1653 . 1657) (nil tag-type start 1653 . 1657) (nil font-lock-face web-mode-html-attr-name-face 1653 . 1657) (nil tag-attr-beg 0 1652 . 1653) (nil tag-attr t 1652 . 1653) (nil tag-name "div" 1652 . 1653) (nil tag-type start 1652 . 1653) (nil font-lock-face web-mode-html-attr-name-face 1652 . 1653) (nil tag-name "div" 1651 . 1652) (nil tag-type start 1651 . 1652) (nil tag-name "div" 1648 . 1651) (nil tag-type start 1648 . 1651) (nil font-lock-face web-mode-html-tag-face 1648 . 1651) (nil tag-name "div" 1647 . 1648) (nil tag-type start 1647 . 1648) (nil tag-beg 17 1647 . 1648) (nil font-lock-face web-mode-html-tag-bracket-face 1647 . 1648) (nil tag-name "div" 1641 . 1642) (nil tag-type start 1641 . 1642) (nil tag-end t 1641 . 1642) (nil font-lock-face web-mode-html-tag-bracket-face 1641 . 1642) (nil tag-attr t 1640 . 1641) (nil tag-attr-end 4 1640 . 1641) (nil tag-name "div" 1640 . 1641) (nil tag-type start 1640 . 1641) (nil font-lock-face web-mode-html-attr-value-face 1640 . 1641) (nil tag-attr t 1631 . 1640) (nil tag-name "div" 1631 . 1640) (nil tag-type start 1631 . 1640) (nil font-lock-face web-mode-html-attr-value-face 1631 . 1640) (nil tag-attr t 1630 . 1631) (nil tag-name "div" 1630 . 1631) (nil tag-type start 1630 . 1631) (nil font-lock-face web-mode-html-attr-equal-face 1630 . 1631) (nil tag-attr t 1627 . 1630) (nil tag-name "div" 1627 . 1630) (nil tag-type start 1627 . 1630) (nil font-lock-face web-mode-html-attr-name-face 1627 . 1630) (nil tag-attr-beg 0 1626 . 1627) (nil tag-attr t 1626 . 1627) (nil tag-name "div" 1626 . 1627) (nil tag-type start 1626 . 1627) (nil font-lock-face web-mode-html-attr-name-face 1626 . 1627) (nil tag-name "div" 1625 . 1626) (nil tag-type start 1625 . 1626) (nil tag-attr t 1624 . 1625) (nil tag-attr-end 5 1624 . 1625) (nil tag-name "div" 1624 . 1625) (nil tag-type start 1624 . 1625) (nil font-lock-face web-mode-html-attr-value-face 1624 . 1625) (nil tag-attr t 1611 . 1624) (nil tag-name "div" 1611 . 1624) (nil tag-type start 1611 . 1624) (nil font-lock-face web-mode-html-attr-value-face 1611 . 1624) (nil tag-attr t 1610 . 1611) (nil tag-name "div" 1610 . 1611) (nil tag-type start 1610 . 1611) (nil font-lock-face web-mode-html-attr-equal-face 1610 . 1611) (nil tag-attr t 1606 . 1610) (nil tag-name "div" 1606 . 1610) (nil tag-type start 1606 . 1610) (nil font-lock-face web-mode-html-attr-name-face 1606 . 1610) (nil tag-attr-beg 0 1605 . 1606) (nil tag-attr t 1605 . 1606) (nil tag-name "div" 1605 . 1606) (nil tag-type start 1605 . 1606) (nil font-lock-face web-mode-html-attr-name-face 1605 . 1606) (nil tag-name "div" 1604 . 1605) (nil tag-type start 1604 . 1605) (nil tag-name "div" 1601 . 1604) (nil tag-type start 1601 . 1604) (nil font-lock-face web-mode-html-tag-face 1601 . 1604) (nil tag-name "div" 1600 . 1601) (nil tag-type start 1600 . 1601) (nil tag-beg 17 1600 . 1601) (nil font-lock-face web-mode-html-tag-bracket-face 1600 . 1601) (nil tag-name "div" 1596 . 1597) (nil tag-type start 1596 . 1597) (nil tag-end t 1596 . 1597) (nil font-lock-face web-mode-html-tag-bracket-face 1596 . 1597) (nil tag-attr t 1595 . 1596) (nil tag-attr-end 11 1595 . 1596) (nil tag-name "div" 1595 . 1596) (nil tag-type start 1595 . 1596) (nil font-lock-face web-mode-html-attr-value-face 1595 . 1596) (nil tag-attr t 1590 . 1595) (nil tag-name "div" 1590 . 1595) (nil tag-type start 1590 . 1595) (nil font-lock-face web-mode-html-attr-value-face 1590 . 1595) (nil tag-attr t 1589 . 1590) (nil tag-name "div" 1589 . 1590) (nil tag-type start 1589 . 1590) (nil font-lock-face web-mode-html-attr-equal-face 1589 . 1590) (nil tag-attr t 1579 . 1589) (nil tag-name "div" 1579 . 1589) (nil tag-type start 1579 . 1589) (nil font-lock-face web-mode-html-attr-name-face 1579 . 1589) (nil tag-attr-beg 0 1578 . 1579) (nil tag-attr t 1578 . 1579) (nil tag-name "div" 1578 . 1579) (nil tag-type start 1578 . 1579) (nil font-lock-face web-mode-html-attr-name-face 1578 . 1579) (nil tag-name "div" 1577 . 1578) (nil tag-type start 1577 . 1578) (nil tag-attr t 1576 . 1577) (nil tag-attr-end 15 1576 . 1577) (nil tag-name "div" 1576 . 1577) (nil tag-type start 1576 . 1577) (nil font-lock-face web-mode-html-attr-value-face 1576 . 1577) (nil tag-attr t 1558 . 1576) (nil tag-name "div" 1558 . 1576) (nil tag-type start 1558 . 1576) (nil font-lock-face web-mode-html-attr-value-face 1558 . 1576) (nil tag-attr t 1557 . 1558) (nil tag-name "div" 1557 . 1558) (nil tag-type start 1557 . 1558) (nil font-lock-face web-mode-html-attr-equal-face 1557 . 1558) (nil tag-attr t 1543 . 1557) (nil tag-name "div" 1543 . 1557) (nil tag-type start 1543 . 1557) (nil font-lock-face web-mode-html-attr-name-face 1543 . 1557) (nil tag-attr-beg 0 1542 . 1543) (nil tag-attr t 1542 . 1543) (nil tag-name "div" 1542 . 1543) (nil tag-type start 1542 . 1543) (nil font-lock-face web-mode-html-attr-name-face 1542 . 1543) (nil tag-name "div" 1541 . 1542) (nil tag-type start 1541 . 1542) (nil tag-attr t 1540 . 1541) (nil tag-attr-end 4 1540 . 1541) (nil tag-name "div" 1540 . 1541) (nil tag-type start 1540 . 1541) (nil font-lock-face web-mode-html-attr-value-face 1540 . 1541) (nil tag-attr t 1533 . 1540) (nil tag-name "div" 1533 . 1540) (nil tag-type start 1533 . 1540) (nil font-lock-face web-mode-html-attr-value-face 1533 . 1540) (nil tag-attr t 1532 . 1533) (nil tag-name "div" 1532 . 1533) (nil tag-type start 1532 . 1533) (nil font-lock-face web-mode-html-attr-equal-face 1532 . 1533) (nil tag-attr t 1529 . 1532) (nil tag-name "div" 1529 . 1532) (nil tag-type start 1529 . 1532) (nil font-lock-face web-mode-html-attr-name-face 1529 . 1532) (nil tag-attr-beg 0 1528 . 1529) (nil tag-attr t 1528 . 1529) (nil tag-name "div" 1528 . 1529) (nil tag-type start 1528 . 1529) (nil font-lock-face web-mode-html-attr-name-face 1528 . 1529) (nil tag-name "div" 1527 . 1528) (nil tag-type start 1527 . 1528) (nil tag-attr t 1526 . 1527) (nil tag-attr-end 8 1526 . 1527) (nil tag-name "div" 1526 . 1527) (nil tag-type start 1526 . 1527) (nil font-lock-face web-mode-html-attr-value-face 1526 . 1527) (nil tag-attr t 1523 . 1526) (nil tag-name "div" 1523 . 1526) (nil tag-type start 1523 . 1526) (nil font-lock-face web-mode-html-attr-value-face 1523 . 1526) (nil tag-attr t 1522 . 1523) (nil tag-name "div" 1522 . 1523) (nil tag-type start 1522 . 1523) (nil font-lock-face web-mode-html-attr-equal-face 1522 . 1523) (nil tag-attr t 1515 . 1522) (nil tag-name "div" 1515 . 1522) (nil tag-type start 1515 . 1522) (nil font-lock-face web-mode-html-attr-name-face 1515 . 1522) (nil tag-attr-beg 0 1514 . 1515) (nil tag-attr t 1514 . 1515) (nil tag-name "div" 1514 . 1515) (nil tag-type start 1514 . 1515) (nil font-lock-face web-mode-html-attr-name-face 1514 . 1515) (nil tag-name "div" 1513 . 1514) (nil tag-type start 1513 . 1514) (nil tag-attr t 1512 . 1513) (nil tag-attr-end 2 1512 . 1513) (nil tag-name "div" 1512 . 1513) (nil tag-type start 1512 . 1513) (nil font-lock-face web-mode-html-attr-value-face 1512 . 1513) (nil tag-attr t 1500 . 1512) (nil tag-name "div" 1500 . 1512) (nil tag-type start 1500 . 1512) (nil font-lock-face web-mode-html-attr-value-face 1500 . 1512) (nil tag-attr t 1499 . 1500) (nil tag-name "div" 1499 . 1500) (nil tag-type start 1499 . 1500) (nil font-lock-face web-mode-html-attr-equal-face 1499 . 1500) (nil tag-attr t 1498 . 1499) (nil tag-name "div" 1498 . 1499) (nil tag-type start 1498 . 1499) (nil font-lock-face web-mode-html-attr-name-face 1498 . 1499) (nil tag-attr-beg 0 1497 . 1498) (nil tag-attr t 1497 . 1498) (nil tag-name "div" 1497 . 1498) (nil tag-type start 1497 . 1498) (nil font-lock-face web-mode-html-attr-name-face 1497 . 1498) (nil tag-name "div" 1496 . 1497) (nil tag-type start 1496 . 1497) (nil tag-attr t 1495 . 1496) (nil tag-attr-end 5 1495 . 1496) (nil tag-name "div" 1495 . 1496) (nil tag-type start 1495 . 1496) (nil font-lock-face web-mode-html-attr-value-face 1495 . 1496) (nil tag-attr t 1484 . 1495) (nil tag-name "div" 1484 . 1495) (nil tag-type start 1484 . 1495) (nil font-lock-face web-mode-html-attr-value-face 1484 . 1495) (nil tag-attr t 1483 . 1484) (nil tag-name "div" 1483 . 1484) (nil tag-type start 1483 . 1484) (nil font-lock-face web-mode-html-attr-equal-face 1483 . 1484) (nil tag-attr t 1479 . 1483) (nil tag-name "div" 1479 . 1483) (nil tag-type start 1479 . 1483) (nil font-lock-face web-mode-html-attr-name-face 1479 . 1483) (nil tag-attr-beg 0 1478 . 1479) (nil tag-attr t 1478 . 1479) (nil tag-name "div" 1478 . 1479) (nil tag-type start 1478 . 1479) (nil font-lock-face web-mode-html-attr-name-face 1478 . 1479) (nil tag-name "div" 1477 . 1478) (nil tag-type start 1477 . 1478) (nil tag-name "div" 1474 . 1477) (nil tag-type start 1474 . 1477) (nil font-lock-face web-mode-html-tag-face 1474 . 1477) (nil tag-name "div" 1473 . 1474) (nil tag-type start 1473 . 1474) (nil tag-beg 17 1473 . 1474) (nil font-lock-face web-mode-html-tag-bracket-face 1473 . 1474) (1473 . 2256)) nil (25699 58458 802482 536000) 0 nil])
([nil nil ((#("<div id=\"myModal\" class=\"modal fade\" role=\"dialog\">
  <div class=\"modal-dialog\">

    <!-- Modal content-->
    <div class=\"modal-content\">
      <div class=\"modal-header\">
        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>
        <h4 class=\"modal-title\">Modal Header</h4>
      </div>
      <div class=\"modal-body\">
        <p>We would like to use third party cookies and scripts to improve the functionality of this website.</p>
      </div>
      <div class=\"modal-footer\">
        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>
      </div>
    </div>

  </div>
</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 8 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 17 18 (tag-type start tag-name "div") 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 19 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 24 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 36 37 (tag-type start tag-name "div") 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 38 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 41 42 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 42 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 54 55 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 55 58 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 58 59 (tag-type start tag-name "div") 59 60 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 60 64 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 64 65 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 65 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 79 80 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 86 87 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 87 106 (font-lock-face web-mode-comment-face tag-type comment) 106 107 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 113 116 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 116 117 (tag-type start tag-name "div") 117 118 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 118 122 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 122 123 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 123 137 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 137 138 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 138 139 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 147 150 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 150 151 (tag-type start tag-name "div") 151 152 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 152 156 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 156 157 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 157 170 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 170 171 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 181 182 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 182 188 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 188 189 (tag-type start tag-name "button") 189 190 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 190 193 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 193 194 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 194 201 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 201 202 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 202 203 (tag-type start tag-name "button") 203 204 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 204 208 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 208 209 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 209 215 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 215 216 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 216 217 (tag-type start tag-name "button") 217 218 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 218 229 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 229 230 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 230 236 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 236 237 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 237 238 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 238 245 (font-lock-face (web-mode-html-entity-face)) 245 246 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 247 253 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 253 254 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h4") 264 266 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h4") 266 267 (tag-type start tag-name "h4") 267 268 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h4" tag-attr t tag-attr-beg 0) 268 272 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h4" tag-attr t) 272 273 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h4" tag-attr t) 273 285 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h4" tag-attr t) 285 286 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h4" tag-attr-end 5 tag-attr t) 286 287 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h4") 299 300 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h4") 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h4") 301 303 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h4") 303 304 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h4") 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 312 313 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 313 316 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 316 317 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 324 325 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 325 328 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 328 329 (tag-type start tag-name "div") 329 330 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 330 334 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 334 335 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 335 346 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 346 347 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 347 348 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 357 358 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 358 359 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 359 360 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 458 459 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 459 460 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 460 461 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 461 462 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 469 470 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 470 471 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 471 474 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 474 475 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 482 483 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 483 486 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 486 487 (tag-type start tag-name "div") 487 488 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 488 492 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 492 493 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 493 506 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 506 507 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 507 508 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 517 518 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 518 524 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 524 525 (tag-type start tag-name "button") 525 526 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 526 529 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 529 530 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 530 537 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 537 538 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 538 539 (tag-type start tag-name "button") 539 540 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 540 544 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 544 545 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 545 561 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 561 562 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 562 563 (tag-type start tag-name "button") 563 564 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 564 575 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 575 576 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 576 582 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 582 583 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 583 584 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 589 590 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 590 591 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 591 597 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 597 598 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 605 606 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 606 607 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 607 610 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 610 611 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 616 617 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 617 618 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 618 621 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 621 622 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 626 627 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 627 628 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 628 631 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 631 632 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 633 634 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 634 635 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 635 638 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 638 639 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 832) (undo-tree-id93 . -639) (undo-tree-id94 . -52) (undo-tree-id95 . -360) (undo-tree-id96 . -360) (undo-tree-id97 . -639)) nil (25699 58458 802314 455000) 0 nil])
([nil nil (("
" . -830) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) ("
" . -831) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 832) nil (25699 58458 802307 75000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1399 . 1400) (nil rear-nonsticky t 1399 . 1400) (nil tag-attr t 1399 . 1400) (nil tag-attr-end 2 1399 . 1400) (nil tag-name "a" 1399 . 1400) (nil tag-type start 1399 . 1400) (nil font-lock-face web-mode-html-attr-value-face 1399 . 1400) (nil tag-attr t 1378 . 1399) (nil tag-name "a" 1378 . 1399) (nil tag-type start 1378 . 1399) (nil font-lock-face web-mode-html-attr-value-face 1378 . 1399) (nil tag-attr t 1377 . 1378) (nil tag-name "a" 1377 . 1378) (nil tag-type start 1377 . 1378) (nil font-lock-face web-mode-html-attr-equal-face 1377 . 1378) (nil tag-attr t 1376 . 1377) (nil tag-name "a" 1376 . 1377) (nil tag-type start 1376 . 1377) (nil font-lock-face web-mode-html-attr-name-face 1376 . 1377) (nil tag-attr-beg 0 1375 . 1376) (nil tag-attr t 1375 . 1376) (nil tag-name "a" 1375 . 1376) (nil tag-type start 1375 . 1376) (nil font-lock-face web-mode-html-attr-name-face 1375 . 1376) (1375 . 1400)) nil (25699 58458 802292 719000) 0 nil])
([nil nil ((1400 . 1401)) nil (25699 58458 802285 788000) 0 nil])
([nil nil ((#("href=\"#a\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 1 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 5 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t)) . 1401) (undo-tree-id81 . -9) (undo-tree-id82 . -9)) nil (25699 58458 802284 416000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "a")) . -1400) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 1401) nil (25699 58458 802280 840000) 0 nil])
([nil nil ((2502 . 2507)) nil (25699 58458 802275 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2577 . 2578) (nil part-side javascript 2577 . 2578) (nil part-side javascript 2576 . 2577) (nil face (rainbow-delimiters-depth-2-face) 2576 . 2577) (nil part-side javascript 2575 . 2576) (nil face (rainbow-delimiters-depth-3-face) 2575 . 2576) (nil part-side javascript 2573 . 2575) (nil part-side javascript 2572 . 2573) (nil face (rainbow-delimiters-depth-4-face) 2572 . 2573) (nil part-side javascript 2571 . 2572) (nil part-token string 2571 . 2572) (nil syntax-table (15) 2571 . 2572) (nil font-lock-face web-mode-javascript-string-face 2571 . 2572) (nil part-side javascript 2567 . 2571) (nil part-token string 2567 . 2571) (nil font-lock-face web-mode-javascript-string-face 2567 . 2571) (nil part-side javascript 2566 . 2567) (nil part-token string 2566 . 2567) (nil syntax-table (15) 2566 . 2567) (nil font-lock-face web-mode-javascript-string-face 2566 . 2567) (nil part-side javascript 2565 . 2566) (nil face (rainbow-delimiters-depth-4-face) 2565 . 2566) (nil part-side javascript 2560 . 2565) (nil face web-mode-function-call-face 2560 . 2565) (nil part-side javascript 2559 . 2560) (nil part-side javascript 2558 . 2559) (nil face (rainbow-delimiters-depth-4-face) 2558 . 2559) (nil part-side javascript 2557 . 2558) (nil part-token string 2557 . 2558) (nil syntax-table (15) 2557 . 2558) (nil font-lock-face web-mode-javascript-string-face 2557 . 2558) (nil part-side javascript 2545 . 2557) (nil part-token string 2545 . 2557) (nil font-lock-face web-mode-javascript-string-face 2545 . 2557) (nil part-side javascript 2544 . 2545) (nil part-token string 2544 . 2545) (nil syntax-table (15) 2544 . 2545) (nil font-lock-face web-mode-javascript-string-face 2544 . 2545) (nil part-side javascript 2543 . 2544) (nil face (rainbow-delimiters-depth-4-face) 2543 . 2544) (nil part-side javascript 2542 . 2543) (nil face web-mode-type-face 2542 . 2543) (nil part-side javascript 2539 . 2542) (nil part-side javascript 2537 . 2539) (nil face whitespace-trailing 2537 . 2539) (nil part-side javascript 2536 . 2537) (nil face (rainbow-delimiters-depth-3-face) 2536 . 2537) (nil part-side javascript 2535 . 2536) (nil part-side javascript 2534 . 2535) (nil face (rainbow-delimiters-depth-3-face) 2534 . 2535) (nil part-side javascript 2533 . 2534) (nil face (rainbow-delimiters-depth-3-face) 2533 . 2534) (nil part-side javascript 2525 . 2533) (nil face web-mode-keyword-face 2525 . 2533) (nil part-side javascript 2524 . 2525) (nil face (rainbow-delimiters-depth-2-face) 2524 . 2525) (nil part-side javascript 2519 . 2524) (nil face web-mode-function-name-face 2519 . 2524) (nil part-side javascript 2518 . 2519) (nil part-side javascript 2517 . 2518) (nil face (rainbow-delimiters-depth-2-face) 2517 . 2518) (nil part-side javascript 2509 . 2517) (nil part-side javascript 2508 . 2509) (nil face (rainbow-delimiters-depth-2-face) 2508 . 2509) (nil part-side javascript 2507 . 2508) (nil face web-mode-type-face 2507 . 2508) (2507 . 2578)) nil (25699 58458 802270 973000) 0 nil])
([nil nil ((2542 . 2546) 2544) nil (25699 58458 802253 441000) 0 nil])
([nil nil ((2579 . 2583) 2582) nil (25699 58458 802251 976000) 0 nil])
([nil nil ((2737 . 2738)) nil (25699 58458 802250 293000) 0 nil])
([nil nil ((#("#" 0 1 (part-side javascript)) . -2737) (undo-tree-id78 . -1) 2738) nil (25699 58458 802248 932000) 0 nil])
([nil nil ((2737 . 2739)) nil (25699 58458 802246 407000) 0 nil])
([nil nil ((2737 . 2738)) nil (25699 58458 802245 261000) 0 nil])
([nil nil ((#("<div class=\"d-flex justify-content-center mt-5 h-100\">
  <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\">
    <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
    <span class=\"mt-2\">We would like to use third party cookies and scripts to improve the functionality of this website.</span>
    <a class=\"d-flex align-items-center\" href=\"#\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
    <button
      id=\"cookie-notice-accept\"
      class=\"btn btn-dark mt-3 px-4\" type=\"button\">
      Okay
    </button>
  </div>
</div>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 57 58 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 58 61 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 61 62 (tag-type start tag-name "div") 62 63 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 63 67 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 67 68 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 68 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 141 142 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 148 149 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 149 152 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 152 153 (tag-type void tag-name "img") 153 154 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 154 156 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 156 157 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 157 189 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 189 190 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 190 191 (tag-type void tag-name "img") 191 192 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 192 196 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 196 197 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 197 200 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 200 201 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 207 208 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 208 209 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 209 212 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 212 213 (tag-type start tag-name "span") 213 214 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 214 215 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 215 218 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 218 219 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 219 224 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 224 225 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 324 325 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 325 326 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 326 330 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 330 331 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 337 338 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 338 339 (tag-type start tag-name "a") 339 340 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 340 344 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 344 345 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 345 371 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 371 372 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 372 373 (tag-type start tag-name "a") 373 374 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 374 376 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 376 377 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 377 378 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 378 380 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 380 381 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 381 382 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 392 393 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 393 394 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 394 395 (tag-type start tag-name "i") 395 396 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 396 400 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 400 401 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 401 424 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 424 425 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 425 426 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 426 427 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 427 428 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 428 429 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 429 430 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 430 431 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 431 432 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 432 433 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 433 434 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 439 440 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 440 446 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 446 447 (tag-type start tag-name "button") 447 453 (tag-type start tag-name "button") 453 454 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 454 455 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 455 456 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 456 477 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 477 478 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 2 tag-attr t rear-nonsticky t) 478 485 (tag-type start tag-name "button") 485 486 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 486 490 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 490 491 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 491 514 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 514 515 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 515 516 (tag-type start tag-name "button") 516 517 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 517 520 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 520 521 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 521 528 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 528 529 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 529 530 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 546 547 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 547 548 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 548 554 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 554 555 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 558 559 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 559 560 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 560 563 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 563 564 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 565 566 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 566 567 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 567 570 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 570 571 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 258) (undo-tree-id69 . -572) (undo-tree-id70 . -55) (undo-tree-id71 . -572) (undo-tree-id72 . -324) (undo-tree-id73 . -572) (undo-tree-id74 . -572) (undo-tree-id75 . -572) (undo-tree-id76 . -478) (undo-tree-id77 . -572)) nil (25699 58458 802243 441000) 0 nil])
([nil nil (("
" . -256) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) ("
" . -257) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 258) nil (25699 58458 802229 908000) 0 nil])
([nil nil ((#("    });" 0 4 (part-side javascript) 4 5 (face (rainbow-delimiters-depth-3-face) part-side javascript) 5 6 (face (rainbow-delimiters-depth-2-face) part-side javascript) 6 7 (part-side javascript rear-nonsticky t)) . 2005) (undo-tree-id49 . -7) (undo-tree-id50 . -7)) nil (25699 58458 802208 516000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2004) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 2005) nil (25699 58458 802204 639000) 0 nil])
([nil nil ((#("    $(document).ready(function() {  " 0 4 (part-side javascript) 4 5 (face web-mode-type-face part-side javascript) 5 6 (face (rainbow-delimiters-depth-2-face) part-side javascript) 6 14 (part-side javascript) 14 15 (face (rainbow-delimiters-depth-2-face) part-side javascript) 15 16 (part-side javascript) 16 21 (face web-mode-function-name-face part-side javascript) 21 22 (face (rainbow-delimiters-depth-2-face) part-side javascript) 22 30 (face web-mode-keyword-face part-side javascript) 30 31 (face (rainbow-delimiters-depth-3-face) part-side javascript) 31 32 (face (rainbow-delimiters-depth-3-face) part-side javascript) 32 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-3-face) part-side javascript) 34 36 (part-side javascript)) . 1929) (undo-tree-id42 . -36) (undo-tree-id43 . -4) (undo-tree-id44 . -7) (undo-tree-id45 . -36)) nil (25699 58458 802199 318000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -1928) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 1929) nil (25699 58458 802192 887000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1933) 1967) nil (25699 58458 802176 886000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing part-side css)) . -169) (#("    " 0 4 (face whitespace-trailing part-side css)) . -114) 1965) nil (25699 58458 802167 902000) 0 nil])
([nil nil ((#("<style>
  .container {
    padding: 2rem 0rem;
  }

  .modal-dialog {
    margin-top: 0rem;
    max-width: 100%;

    .modal-content {
      border-radius: 0rem;
    }

    .buttons {
      .btn {
        margin: 0.2rem;
      }
    }
  }
</style>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "style") 1 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "style") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "style") 7 8 (part-side css) 8 10 (part-side css) 10 20 (face web-mode-css-selector-class-face part-side css) 20 21 (part-side css) 21 22 (face (rainbow-delimiters-depth-1-face) part-side css) 22 27 (part-side css) 27 35 (face web-mode-css-property-name-face part-side css) 35 49 (part-side css) 49 50 (face (rainbow-delimiters-depth-1-face) part-side css) 50 51 (part-side css) 51 54 (part-side css) 54 67 (face web-mode-css-selector-class-face part-side css) 67 68 (part-side css) 68 69 (face (rainbow-delimiters-depth-1-face) part-side css) 69 74 (part-side css) 74 85 (face web-mode-css-property-name-face part-side css) 85 96 (part-side css) 96 106 (face web-mode-css-property-name-face part-side css) 106 113 (part-side css) 113 118 (part-side css) 118 132 (part-side css) 132 133 (part-side css) 133 134 (face (rainbow-delimiters-depth-2-face) part-side css) 134 141 (part-side css) 141 155 (face web-mode-css-property-name-face part-side css) 155 166 (part-side css) 166 167 (face (rainbow-delimiters-depth-2-face) part-side css) 167 168 (part-side css) 168 173 (part-side css) 173 181 (face web-mode-css-selector-class-face part-side css) 181 182 (part-side css) 182 183 (face (rainbow-delimiters-depth-2-face) part-side css) 183 184 (face web-mode-css-selector-face part-side css) 184 190 (face web-mode-css-selector-face part-side css) 190 194 (face web-mode-css-selector-face part-side css) 194 195 (part-side css) 195 196 (face (rainbow-delimiters-depth-3-face) part-side css) 196 205 (part-side css) 205 212 (face web-mode-css-property-name-face part-side css) 212 227 (part-side css) 227 228 (face (rainbow-delimiters-depth-3-face) part-side css) 228 229 (part-side css) 229 233 (part-side css) 233 234 (face (rainbow-delimiters-depth-2-face) part-side css) 234 235 (part-side css) 235 237 (part-side css) 237 238 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t) 238 239 (part-side css) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "style") 240 241 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "style") 241 246 (font-lock-face web-mode-html-tag-face tag-type end tag-name "style") 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "style")) . 1) (undo-tree-id109 . -247) (undo-tree-id110 . -8) (undo-tree-id111 . -247) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -247) (undo-tree-id115 . -247) (undo-tree-id116 . -247) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -238) (undo-tree-id120 . -247) (undo-tree-id121 . -247) (undo-tree-id122 . -247) (undo-tree-id123 . -247) (t 25699 58458 807988 685000)) nil (25699 58490 12097 36000) 0 nil])
([nil nil (("
" . 1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) ("
" . 1) (undo-tree-id108 . -1)) nil (25699 58490 11985 965000) 0 nil])
([nil nil ((803 . 805)) nil (25699 58490 11968 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1050 . 1051) (nil tag-name "style" 1050 . 1051) (nil tag-type end 1050 . 1051) (nil tag-end t 1050 . 1051) (nil font-lock-face web-mode-html-tag-bracket-face 1050 . 1051) (nil tag-name "style" 1045 . 1050) (nil tag-type end 1045 . 1050) (nil font-lock-face web-mode-html-tag-face 1045 . 1050) (nil tag-name "style" 1044 . 1045) (nil tag-type end 1044 . 1045) (nil font-lock-face web-mode-html-tag-bracket-face 1044 . 1045) (nil tag-name "style" 1043 . 1044) (nil tag-type end 1043 . 1044) (nil tag-beg 20 1043 . 1044) (nil font-lock-face web-mode-html-tag-bracket-face 1043 . 1044) (nil part-side css 1042 . 1043) (nil rear-nonsticky t 1041 . 1042) (nil part-side css 1041 . 1042) (nil face (rainbow-delimiters-depth-1-face) 1041 . 1042) (nil part-side css 1039 . 1041) (nil part-side css 1038 . 1039) (nil part-side css 1037 . 1038) (nil face (rainbow-delimiters-depth-2-face) 1037 . 1038) (nil part-side css 1033 . 1037) (nil part-side css 1032 . 1033) (nil part-side css 1031 . 1032) (nil face (rainbow-delimiters-depth-3-face) 1031 . 1032) (nil part-side css 1016 . 1031) (nil part-side css 1009 . 1016) (nil face web-mode-css-property-name-face 1009 . 1016) (nil part-side css 1000 . 1009) (nil part-side css 999 . 1000) (nil face (rainbow-delimiters-depth-3-face) 999 . 1000) (nil part-side css 998 . 999) (nil part-side css 994 . 998) (nil part-side css 988 . 994) (nil part-side css 987 . 988) (nil part-side css 986 . 987) (nil face (rainbow-delimiters-depth-2-face) 986 . 987) (nil part-side css 985 . 986) (nil part-side css 977 . 985) (nil part-side css 972 . 977) (nil part-side css 971 . 972) (nil part-side css 970 . 971) (nil face (rainbow-delimiters-depth-2-face) 970 . 971) (nil part-side css 959 . 970) (nil part-side css 945 . 959) (nil face web-mode-css-property-name-face 945 . 959) (nil part-side css 938 . 945) (nil part-side css 937 . 938) (nil face (rainbow-delimiters-depth-2-face) 937 . 938) (nil part-side css 936 . 937) (nil part-side css 922 . 936) (nil part-side css 917 . 922) (nil part-side css 910 . 917) (nil part-side css 900 . 910) (nil face web-mode-css-property-name-face 900 . 910) (nil part-side css 889 . 900) (nil part-side css 878 . 889) (nil face web-mode-css-property-name-face 878 . 889) (nil part-side css 873 . 878) (nil part-side css 872 . 873) (nil face (rainbow-delimiters-depth-1-face) 872 . 873) (nil part-side css 871 . 872) (nil part-side css 858 . 871) (nil face web-mode-css-selector-class-face 858 . 871) (nil part-side css 855 . 858) (nil part-side css 854 . 855) (nil part-side css 853 . 854) (nil face (rainbow-delimiters-depth-1-face) 853 . 854) (nil part-side css 839 . 853) (nil part-side css 831 . 839) (nil face web-mode-css-property-name-face 831 . 839) (nil part-side css 826 . 831) (nil part-side css 825 . 826) (nil face (rainbow-delimiters-depth-1-face) 825 . 826) (nil part-side css 824 . 825) (nil part-side css 814 . 824) (nil face web-mode-css-selector-class-face 814 . 824) (nil part-side css 812 . 814) (nil part-side css 811 . 812) (nil tag-name "style" 810 . 811) (nil tag-type start 810 . 811) (nil tag-end t 810 . 811) (nil font-lock-face web-mode-html-tag-bracket-face 810 . 811) (nil tag-name "style" 805 . 810) (nil tag-type start 805 . 810) (nil font-lock-face web-mode-html-tag-face 805 . 810) (nil tag-name "style" 804 . 805) (nil tag-type start 804 . 805) (nil tag-beg 16 804 . 805) (nil font-lock-face web-mode-html-tag-bracket-face 804 . 805) (804 . 1051)) nil (25699 58490 11954 491000) 0 nil])
([nil nil (("
" . 1051) (undo-tree-id105 . -1)) nil (25699 58490 11844 732000) 0 nil])
([nil nil (("
" . 801) (undo-tree-id127 . -1) ("
" . 801) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (t 25699 58490 19961 198000)) nil (25699 58642 399214 494000) 0 nil])
([nil nil ((1958 . 1961)) nil (25699 58642 399204 913000) 0 nil])
([nil nil ((1741 . 1744)) nil (25699 58642 399203 425000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1775 . 1776) (nil part-side javascript 1774 . 1776) (nil face whitespace-trailing 1774 . 1776) (nil part-side javascript 1773 . 1774) (nil face (rainbow-delimiters-depth-2-face) 1773 . 1774) (nil part-side javascript 1772 . 1773) (nil part-side javascript 1771 . 1772) (nil face (rainbow-delimiters-depth-2-face) 1771 . 1772) (nil part-side javascript 1770 . 1771) (nil face (rainbow-delimiters-depth-2-face) 1770 . 1771) (nil part-side javascript 1762 . 1770) (nil face web-mode-keyword-face 1762 . 1770) (nil part-side javascript 1761 . 1762) (nil face (rainbow-delimiters-depth-1-face) 1761 . 1762) (nil part-side javascript 1756 . 1761) (nil face web-mode-function-name-face 1756 . 1761) (nil part-side javascript 1755 . 1756) (nil part-side javascript 1754 . 1755) (nil face (rainbow-delimiters-depth-1-face) 1754 . 1755) (nil part-side javascript 1746 . 1754) (nil part-side javascript 1745 . 1746) (nil face (rainbow-delimiters-depth-1-face) 1745 . 1746) (nil part-side javascript 1744 . 1745) (nil face web-mode-type-face 1744 . 1745) (1744 . 1776)) nil (25699 58642 399200 4000) 0 nil])
([nil nil ((1993 . 1998)) nil (25699 58642 399188 303000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1996) (1998 . 1999)) nil (25699 58642 399185 709000) 0 nil])
([nil nil ((2002 . 2004) (1965 . 1967) (1893 . 1895) (1878 . 1880) (1838 . 1840) (1780 . 1782) 1742) nil (25699 58642 399183 79000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript rear-nonsticky t)) . 1774) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . 1774) (undo-tree-id126 . -1)) nil (25699 58642 401278 378000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1774) (undo-tree-id131 . -1)) nil (25699 58643 677101 243000) 0 nil] [nil nil ((#("
" 0 1 (part-side javascript)) . 1774) (undo-tree-id124 . -1) (#("
" 0 1 (part-side javascript)) . 1774) (undo-tree-id125 . -1)) ((1774 . 1775) (1774 . 1775)) (25699 58642 399152 735000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing part-side javascript)) . -2007) 1774) nil (25699 58643 677072 921000) 0 nil])
nil
([nil nil ((1892 . 1895) (t 25699 58643 691823 614000)) nil (25699 58716 73565 957000) 0 nil])
([nil nil ((2008 . 2009) (#(" " 0 1 (part-side javascript)) . -2008) (2008 . 2009) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . -2008) (2008 . 2009) (t 25699 58716 87757 654000)) nil (25699 58766 405749 353000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . -2008) (undo-tree-id132 . -1) 2009) nil (25699 58766 405737 679000) 0 nil])
([nil nil ((2009 . 2010)) nil (25699 58766 405712 368000) 0 nil])
([nil nil ((#("<style>
  .container {
    padding: 2rem 0rem;
  }

  .modal-dialog {
    margin-top: 0rem;
    max-width: 100%;

    .modal-content {
      border-radius: 0rem;
    }

    .buttons {
      .btn {
        margin: 0.2rem;
      }
    }
  }
</style>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "style") 1 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "style") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "style") 7 10 (part-side css) 10 20 (face web-mode-css-selector-class-face part-side css) 20 21 (part-side css) 21 22 (face (rainbow-delimiters-depth-1-face) part-side css) 22 27 (part-side css) 27 35 (face web-mode-css-property-name-face part-side css) 35 49 (part-side css) 49 50 (face (rainbow-delimiters-depth-1-face) part-side css) 50 54 (part-side css) 54 67 (face web-mode-css-selector-class-face part-side css) 67 68 (part-side css) 68 69 (face (rainbow-delimiters-depth-1-face) part-side css) 69 74 (part-side css) 74 85 (face web-mode-css-property-name-face part-side css) 85 96 (part-side css) 96 106 (face web-mode-css-property-name-face part-side css) 106 133 (part-side css) 133 134 (face (rainbow-delimiters-depth-2-face) part-side css) 134 141 (part-side css) 141 155 (face web-mode-css-property-name-face part-side css) 155 166 (part-side css) 166 167 (face (rainbow-delimiters-depth-2-face) part-side css) 167 182 (part-side css) 182 183 (face (rainbow-delimiters-depth-2-face) part-side css) 183 195 (part-side css) 195 196 (face (rainbow-delimiters-depth-3-face) part-side css) 196 205 (part-side css) 205 212 (face web-mode-css-property-name-face part-side css) 212 227 (part-side css) 227 228 (face (rainbow-delimiters-depth-3-face) part-side css) 228 233 (part-side css) 233 234 (face (rainbow-delimiters-depth-2-face) part-side css) 234 237 (part-side css) 237 238 (face (rainbow-delimiters-depth-1-face) part-side css) 238 239 (part-side css) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "style") 240 241 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "style") 241 246 (font-lock-face web-mode-html-tag-face tag-type end tag-name "style") 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "style" rear-nonsticky t)) . 802) (undo-tree-id143 . -247) (undo-tree-id144 . -8) (undo-tree-id145 . -247) (t 25699 58766 419711 453000)) nil (25699 58831 799903 575000) 0 nil])
([nil nil (("
" . -800) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) ("
" . -801) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 802) nil (25699 58831 799896 601000) 0 nil])
([nil nil ((1 . 3)) nil (25699 58831 799872 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 247 . 248) (nil rear-nonsticky t 247 . 248) (nil tag-name "style" 247 . 248) (nil tag-type end 247 . 248) (nil tag-end t 247 . 248) (nil font-lock-face web-mode-html-tag-bracket-face 247 . 248) (nil tag-name "style" 242 . 247) (nil tag-type end 242 . 247) (nil font-lock-face web-mode-html-tag-face 242 . 247) (nil tag-name "style" 241 . 242) (nil tag-type end 241 . 242) (nil font-lock-face web-mode-html-tag-bracket-face 241 . 242) (nil tag-name "style" 240 . 241) (nil tag-type end 240 . 241) (nil tag-beg 20 240 . 241) (nil font-lock-face web-mode-html-tag-bracket-face 240 . 241) (nil part-side css 239 . 240) (nil part-side css 238 . 239) (nil face (rainbow-delimiters-depth-1-face) 238 . 239) (nil part-side css 235 . 238) (nil part-side css 234 . 235) (nil face (rainbow-delimiters-depth-2-face) 234 . 235) (nil part-side css 229 . 234) (nil part-side css 228 . 229) (nil face (rainbow-delimiters-depth-3-face) 228 . 229) (nil part-side css 213 . 228) (nil part-side css 206 . 213) (nil face web-mode-css-property-name-face 206 . 213) (nil part-side css 197 . 206) (nil part-side css 196 . 197) (nil face (rainbow-delimiters-depth-3-face) 196 . 197) (nil part-side css 184 . 196) (nil part-side css 183 . 184) (nil face (rainbow-delimiters-depth-2-face) 183 . 184) (nil part-side css 168 . 183) (nil part-side css 167 . 168) (nil face (rainbow-delimiters-depth-2-face) 167 . 168) (nil part-side css 156 . 167) (nil part-side css 142 . 156) (nil face web-mode-css-property-name-face 142 . 156) (nil part-side css 135 . 142) (nil part-side css 134 . 135) (nil face (rainbow-delimiters-depth-2-face) 134 . 135) (nil part-side css 107 . 134) (nil part-side css 97 . 107) (nil face web-mode-css-property-name-face 97 . 107) (nil part-side css 86 . 97) (nil part-side css 75 . 86) (nil face web-mode-css-property-name-face 75 . 86) (nil part-side css 70 . 75) (nil part-side css 69 . 70) (nil face (rainbow-delimiters-depth-1-face) 69 . 70) (nil part-side css 68 . 69) (nil part-side css 55 . 68) (nil face web-mode-css-selector-class-face 55 . 68) (nil part-side css 51 . 55) (nil part-side css 50 . 51) (nil face (rainbow-delimiters-depth-1-face) 50 . 51) (nil part-side css 36 . 50) (nil part-side css 28 . 36) (nil face web-mode-css-property-name-face 28 . 36) (nil part-side css 23 . 28) (nil part-side css 22 . 23) (nil face (rainbow-delimiters-depth-1-face) 22 . 23) (nil part-side css 21 . 22) (nil part-side css 11 . 21) (nil face web-mode-css-selector-class-face 11 . 21) (nil part-side css 8 . 11) (nil tag-name "style" 7 . 8) (nil tag-type start 7 . 8) (nil tag-end t 7 . 8) (nil font-lock-face web-mode-html-tag-bracket-face 7 . 8) (nil tag-name "style" 2 . 7) (nil tag-type start 2 . 7) (nil font-lock-face web-mode-html-tag-face 2 . 7) (nil tag-name "style" 1 . 2) (nil tag-type start 1 . 2) (nil tag-beg 16 1 . 2) (nil font-lock-face web-mode-html-tag-bracket-face 1 . 2) (1 . 248)) nil (25699 58831 799859 779000) 0 nil])
([nil nil ((53 . 55) (#("  " 0 2 (face whitespace-trailing part-side css)) . 52) (52 . 54) (52 . 53) (t 25699 58831 811651 54000)) nil (25699 58973 905831 743000) 0 nil])
([nil nil ((53 . 55) (#("  " 0 2 (face whitespace-trailing part-side css)) . 52) (52 . 54) (52 . 53)) nil (25699 58973 905829 420000) 0 nil])
([nil nil ((63 . 65) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -63) (55 . 64)) nil (25699 58973 905827 215000) 0 nil])
([nil nil ((66 . 68) (#("    " 0 4 (face whitespace-trailing part-side css)) . 65) (undo-tree-id155 . -2) (undo-tree-id156 . 4) (67 . 69) (64 . 68)) nil (25699 58973 905824 972000) 0 nil])
([nil nil ((65 . 69)) nil (25699 58973 905819 591000) 0 nil])
([nil nil ((69 . 80)) nil (25699 58973 905815 398000) 0 nil])
([nil nil ((#(":" 0 1 (face web-mode-css-property-name-face part-side css)) . -79) (undo-tree-id154 . -1) 80) nil (25699 58973 905806 531000) 0 nil])
([nil nil ((79 . 89)) nil (25699 58973 905802 872000) 0 nil])
([nil nil ((89 . 92)) nil (25699 58973 905801 466000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -91) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 92) nil (25699 58973 905798 453000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing part-side css)) . -96) 91) nil (25699 58973 905773 207000) 0 nil])
([nil nil ((#("notice" 0 6 (face web-mode-css-selector-class-face part-side css)) . 56) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (t 25699 58973 919518 568000)) nil (25699 59009 919986 356000) 0 nil])
([nil nil ((56 . 62)) nil (25699 59009 919982 335000) 0 nil])
([nil nil ((#("k" 0 1 (face web-mode-css-selector-class-face part-side css)) . -58) (undo-tree-id157 . -1) (#("k" 0 1 (face web-mode-css-selector-class-face part-side css)) . -59) (undo-tree-id158 . -1) (#("i" 0 1 (face web-mode-css-selector-class-face part-side css)) . -60) (undo-tree-id159 . -1) (#("e" 0 1 (face web-mode-css-selector-class-face part-side css)) . -61) (undo-tree-id160 . -1) 62) nil (25699 59009 919979 615000) 0 nil])
([nil nil ((58 . 62)) nil (25699 59009 919961 670000) 0 nil])
([nil nil ((492 . 493)) nil (25699 59009 919959 753000) 0 nil])
([nil nil ((nil rear-nonsticky nil 498 . 499) (nil tag-attr t 493 . 499) (nil tag-name "div" 493 . 499) (nil tag-type start 493 . 499) (nil font-lock-face web-mode-html-attr-value-face 493 . 499) (493 . 499)) nil (25699 59009 919952 531000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 499) (undo-tree-id163 . -1) (t 25699 59009 931484 766000)) nil (25699 59023 890200 283000) 0 nil])
([nil nil ((#("red" 0 3 (part-side css)) . 87) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (t 25699 59023 907471 626000)) nil (25699 59059 435059 764000) 0 nil])
([nil nil ((87 . 92)) nil (25699 59059 435025 409000) 0 nil])
([nil nil ((#("black" 0 5 (part-side css)) . 87) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (t 25699 59059 451438 156000)) nil (25699 59159 379604 122000) 0 nil])
([nil nil ((nil rear-nonsticky nil 108 . 109) (nil part-side css 108 . 109) (nil part-side css 107 . 108) (nil face (rainbow-delimiters-depth-2-face) 107 . 108) (nil part-side css 92 . 107) (nil part-side css 91 . 92) (nil face (rainbow-delimiters-depth-2-face) 91 . 92) (nil part-side css 87 . 91) (nil face web-mode-css-function-face 87 . 91) (87 . 109)) nil (25699 59159 379582 555000) 0 nil])
([nil nil ((#("255" 0 3 (part-side css)) . 92) (undo-tree-id166 . -3) (undo-tree-id167 . -3)) nil (25699 59159 379562 51000) 0 nil])
([nil nil ((92 . 93)) nil (25699 59159 379525 350000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . 94) (#("5" 0 1 (part-side css)) . 94) (#("2" 0 1 (part-side css)) . 94)) nil (25699 59159 379519 292000) 0 nil])
([nil nil ((94 . 95)) nil (25699 59159 379513 59000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . 96) (#("5" 0 1 (part-side css)) . 96) (#("2" 0 1 (part-side css)) . 96)) nil (25699 59159 379503 315000) 0 nil])
([nil nil ((96 . 97)) nil (25699 59159 379476 134000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -100) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 101 (t 25699 59159 399343 674000)) nil (25699 59167 233325 405000) 0 nil])
([nil nil ((100 . 101)) nil (25699 59167 233295 330000) 0 nil])
([nil nil ((#("7" 0 1 (part-side css)) . -100) (undo-tree-id174 . -1) 101 (t 25699 59167 247336 235000)) nil (25699 59180 638531 201000) 0 nil])
([nil nil ((100 . 101)) nil (25699 59180 638527 480000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -100) (undo-tree-id173 . -1) 101) nil (25699 59180 638525 502000) 0 nil])
([nil nil ((100 . 101)) nil (25699 59180 638521 903000) 0 nil])
([nil nil ((#("+" 0 1 (part-side css)) . -100) (undo-tree-id172 . -1) 101) nil (25699 59180 638518 640000) 0 nil])
([nil nil ((100 . 101)) nil (25699 59180 638502 88000) 0 nil])
([nil nil ((#(";" 0 1 (part-side css rear-nonsticky t)) . 102) (t 25699 59180 667323 506000)) nil (25699 59182 448070 38000) 0 nil])
([nil nil ((#("9" 0 1 (part-side css)) . -100) (undo-tree-id175 . -1) 101 (t 25699 59182 459321 806000)) nil (25699 59191 262124 208000) 0 nil])
([nil nil ((100 . 101)) nil (25699 59191 262105 300000) 0 nil])
([nil nil ((276 . 288) (t 25699 59191 279313 436000)) nil (25699 59351 812869 818000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -287) (undo-tree-id176 . -1) 288) nil (25699 59351 812859 49000) 0 nil])
([nil nil (("I accept" . 944) (undo-tree-id177 . -8) (undo-tree-id178 . -6) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (t 25699 59351 831160 538000)) nil (25699 59370 879213 42000) 0 nil])
([nil nil ((944 . 948)) nil (25699 59370 879172 323000) 0 nil])
([nil nil ((#("#" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -974) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -975) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 976 (t 25699 59370 891142 326000)) nil (25699 59376 361503 287000) 0 nil])
([nil nil ((974 . 984)) nil (25699 59376 361481 501000) 0 nil])
([nil nil ((555 . 564) (t 25699 59376 375137 85000)) nil (25699 59515 819726 781000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1091 . 1092) (nil tag-name "div" 1091 . 1092) (nil tag-type end 1091 . 1092) (nil tag-end t 1091 . 1092) (nil font-lock-face web-mode-html-tag-bracket-face 1091 . 1092) (nil tag-name "div" 1088 . 1091) (nil tag-type end 1088 . 1091) (nil font-lock-face web-mode-html-tag-face 1088 . 1091) (nil tag-name "div" 1087 . 1088) (nil tag-type end 1087 . 1088) (nil font-lock-face web-mode-html-tag-bracket-face 1087 . 1088) (nil tag-name "div" 1086 . 1087) (nil tag-type end 1086 . 1087) (nil tag-beg 20 1086 . 1087) (nil font-lock-face web-mode-html-tag-bracket-face 1086 . 1087) (nil tag-name "div" 1080 . 1081) (nil tag-type end 1080 . 1081) (nil tag-end t 1080 . 1081) (nil font-lock-face web-mode-html-tag-bracket-face 1080 . 1081) (nil tag-name "div" 1077 . 1080) (nil tag-type end 1077 . 1080) (nil font-lock-face web-mode-html-tag-face 1077 . 1080) (nil tag-name "div" 1076 . 1077) (nil tag-type end 1076 . 1077) (nil font-lock-face web-mode-html-tag-bracket-face 1076 . 1077) (nil tag-name "div" 1075 . 1076) (nil tag-type end 1075 . 1076) (nil tag-beg 20 1075 . 1076) (nil font-lock-face web-mode-html-tag-bracket-face 1075 . 1076) (nil tag-name "button" 1065 . 1066) (nil tag-type end 1065 . 1066) (nil tag-end t 1065 . 1066) (nil font-lock-face web-mode-html-tag-bracket-face 1065 . 1066) (nil tag-name "button" 1059 . 1065) (nil tag-type end 1059 . 1065) (nil font-lock-face web-mode-html-tag-face 1059 . 1065) (nil tag-name "button" 1058 . 1059) (nil tag-type end 1058 . 1059) (nil font-lock-face web-mode-html-tag-bracket-face 1058 . 1059) (nil tag-name "button" 1057 . 1058) (nil tag-type end 1057 . 1058) (nil tag-beg 20 1057 . 1058) (nil font-lock-face web-mode-html-tag-bracket-face 1057 . 1058) (nil tag-name "button" 1052 . 1053) (nil tag-type start 1052 . 1053) (nil tag-end t 1052 . 1053) (nil font-lock-face web-mode-html-tag-bracket-face 1052 . 1053) (nil tag-attr t 1051 . 1052) (nil tag-attr-end 4 1051 . 1052) (nil tag-name "button" 1051 . 1052) (nil tag-type start 1051 . 1052) (nil font-lock-face web-mode-html-attr-value-face 1051 . 1052) (nil tag-attr t 1044 . 1051) (nil tag-name "button" 1044 . 1051) (nil tag-type start 1044 . 1051) (nil font-lock-face web-mode-html-attr-value-face 1044 . 1051) (nil tag-attr t 1043 . 1044) (nil tag-name "button" 1043 . 1044) (nil tag-type start 1043 . 1044) (nil font-lock-face web-mode-html-attr-equal-face 1043 . 1044) (nil tag-attr t 1040 . 1043) (nil tag-name "button" 1040 . 1043) (nil tag-type start 1040 . 1043) (nil font-lock-face web-mode-html-attr-name-face 1040 . 1043) (nil tag-attr-beg 0 1039 . 1040) (nil tag-attr t 1039 . 1040) (nil tag-name "button" 1039 . 1040) (nil tag-type start 1039 . 1040) (nil font-lock-face web-mode-html-attr-name-face 1039 . 1040) (nil tag-name "button" 1038 . 1039) (nil tag-type start 1038 . 1039) (nil tag-attr t 1037 . 1038) (nil tag-attr-end 5 1037 . 1038) (nil tag-name "button" 1037 . 1038) (nil tag-type start 1037 . 1038) (nil font-lock-face web-mode-html-attr-value-face 1037 . 1038) (nil tag-attr t 1014 . 1037) (nil tag-name "button" 1014 . 1037) (nil tag-type start 1014 . 1037) (nil font-lock-face web-mode-html-attr-value-face 1014 . 1037) (nil tag-attr t 1013 . 1014) (nil tag-name "button" 1013 . 1014) (nil tag-type start 1013 . 1014) (nil font-lock-face web-mode-html-attr-equal-face 1013 . 1014) (nil tag-attr t 1009 . 1013) (nil tag-name "button" 1009 . 1013) (nil tag-type start 1009 . 1013) (nil font-lock-face web-mode-html-attr-name-face 1009 . 1013) (nil tag-attr-beg 0 1008 . 1009) (nil tag-attr t 1008 . 1009) (nil tag-name "button" 1008 . 1009) (nil tag-type start 1008 . 1009) (nil font-lock-face web-mode-html-attr-name-face 1008 . 1009) (nil tag-name "button" 991 . 1008) (nil tag-type start 991 . 1008) (nil tag-name "button" 985 . 991) (nil tag-type start 985 . 991) (nil font-lock-face web-mode-html-tag-face 985 . 991) (nil tag-name "button" 984 . 985) (nil tag-type start 984 . 985) (nil tag-beg 17 984 . 985) (nil font-lock-face web-mode-html-tag-bracket-face 984 . 985) (nil tag-name "a" 970 . 971) (nil tag-type end 970 . 971) (nil tag-end t 970 . 971) (nil font-lock-face web-mode-html-tag-bracket-face 970 . 971) (nil face (whitespace-line web-mode-html-tag-bracket-face) 970 . 971) (nil tag-name "a" 969 . 970) (nil tag-type end 969 . 970) (nil font-lock-face web-mode-html-tag-face 969 . 970) (nil face (whitespace-line web-mode-html-tag-face) 969 . 970) (nil tag-name "a" 968 . 969) (nil tag-type end 968 . 969) (nil font-lock-face web-mode-html-tag-bracket-face 968 . 969) (nil face (whitespace-line web-mode-html-tag-bracket-face) 968 . 969) (nil tag-name "a" 967 . 968) (nil tag-type end 967 . 968) (nil tag-beg 20 967 . 968) (nil font-lock-face web-mode-html-tag-bracket-face 967 . 968) (nil face (whitespace-line web-mode-html-tag-bracket-face) 967 . 968) (nil tag-name "i" 966 . 967) (nil tag-type end 966 . 967) (nil tag-end t 966 . 967) (nil font-lock-face web-mode-html-tag-bracket-face 966 . 967) (nil face (whitespace-line web-mode-html-tag-bracket-face) 966 . 967) (nil tag-name "i" 965 . 966) (nil tag-type end 965 . 966) (nil font-lock-face web-mode-html-tag-face 965 . 966) (nil face (whitespace-line web-mode-html-tag-face) 965 . 966) (nil tag-name "i" 964 . 965) (nil tag-type end 964 . 965) (nil font-lock-face web-mode-html-tag-bracket-face 964 . 965) (nil face (whitespace-line web-mode-html-tag-bracket-face) 964 . 965) (nil tag-name "i" 963 . 964) (nil tag-type end 963 . 964) (nil tag-beg 20 963 . 964) (nil font-lock-face web-mode-html-tag-bracket-face 963 . 964) (nil face (whitespace-line web-mode-html-tag-bracket-face) 963 . 964) (nil tag-name "i" 962 . 963) (nil tag-type start 962 . 963) (nil tag-end t 962 . 963) (nil font-lock-face web-mode-html-tag-bracket-face 962 . 963) (nil face (whitespace-line web-mode-html-tag-bracket-face) 962 . 963) (nil tag-attr t 961 . 962) (nil tag-attr-end 5 961 . 962) (nil tag-name "i" 961 . 962) (nil tag-type start 961 . 962) (nil font-lock-face web-mode-html-attr-value-face 961 . 962) (nil face (whitespace-line web-mode-html-attr-value-face) 961 . 962) (nil tag-attr t 938 . 961) (nil tag-name "i" 938 . 961) (nil tag-type start 938 . 961) (nil font-lock-face web-mode-html-attr-value-face 938 . 961) (nil face (whitespace-line web-mode-html-attr-value-face) 938 . 961) (nil tag-attr t 937 . 938) (nil tag-name "i" 937 . 938) (nil tag-type start 937 . 938) (nil font-lock-face web-mode-html-attr-equal-face 937 . 938) (nil face (whitespace-line web-mode-html-attr-equal-face) 937 . 938) (nil tag-attr t 933 . 937) (nil tag-name "i" 933 . 937) (nil tag-type start 933 . 937) (nil font-lock-face web-mode-html-attr-name-face 933 . 937) (nil face (whitespace-line web-mode-html-attr-name-face) 933 . 937) (nil tag-attr-beg 0 932 . 933) (nil tag-attr t 932 . 933) (nil tag-name "i" 932 . 933) (nil tag-type start 932 . 933) (nil font-lock-face web-mode-html-attr-name-face 932 . 933) (nil face (whitespace-line web-mode-html-attr-name-face) 932 . 933) (nil tag-name "i" 931 . 932) (nil tag-type start 931 . 932) (nil face (whitespace-line) 931 . 932) (nil tag-name "i" 930 . 931) (nil tag-type start 930 . 931) (nil font-lock-face web-mode-html-tag-face 930 . 931) (nil face (whitespace-line web-mode-html-tag-face) 930 . 931) (nil tag-name "i" 929 . 930) (nil tag-type start 929 . 930) (nil tag-beg 17 929 . 930) (nil font-lock-face web-mode-html-tag-bracket-face 929 . 930) (nil face (whitespace-line web-mode-html-tag-bracket-face) 929 . 930) (nil face (whitespace-line) 919 . 929) (nil tag-name "a" 918 . 919) (nil tag-type start 918 . 919) (nil tag-end t 918 . 919) (nil font-lock-face web-mode-html-tag-bracket-face 918 . 919) (nil face (whitespace-line web-mode-html-tag-bracket-face) 918 . 919) (nil tag-attr t 917 . 918) (nil tag-attr-end 4 917 . 918) (nil tag-name "a" 917 . 918) (nil tag-type start 917 . 918) (nil font-lock-face web-mode-html-attr-value-face 917 . 918) (nil face (whitespace-line web-mode-html-attr-value-face) 917 . 918) (nil tag-attr t 915 . 917) (nil tag-name "a" 915 . 917) (nil tag-type start 915 . 917) (nil font-lock-face web-mode-html-attr-value-face 915 . 917) (nil face (whitespace-line web-mode-html-attr-value-face) 915 . 917) (nil tag-attr t 914 . 915) (nil tag-name "a" 914 . 915) (nil tag-type start 914 . 915) (nil font-lock-face web-mode-html-attr-equal-face 914 . 915) (nil face (whitespace-line web-mode-html-attr-equal-face) 914 . 915) (nil tag-attr t 911 . 914) (nil tag-name "a" 911 . 914) (nil tag-type start 911 . 914) (nil font-lock-face web-mode-html-attr-name-face 911 . 914) (nil face (whitespace-line web-mode-html-attr-name-face) 911 . 914) (nil tag-attr-beg 0 910 . 911) (nil tag-attr t 910 . 911) (nil tag-name "a" 910 . 911) (nil tag-type start 910 . 911) (nil font-lock-face web-mode-html-attr-name-face 910 . 911) (nil face (whitespace-line web-mode-html-attr-name-face) 910 . 911) (nil tag-name "a" 909 . 910) (nil tag-type start 909 . 910) (nil face (whitespace-line) 909 . 910) (nil tag-attr t 908 . 909) (nil tag-attr-end 5 908 . 909) (nil tag-name "a" 908 . 909) (nil tag-type start 908 . 909) (nil font-lock-face web-mode-html-attr-value-face 908 . 909) (nil face (whitespace-line web-mode-html-attr-value-face) 908 . 909) (nil tag-attr t 882 . 908) (nil tag-name "a" 882 . 908) (nil tag-type start 882 . 908) (nil font-lock-face web-mode-html-attr-value-face 882 . 908) (nil face (whitespace-line web-mode-html-attr-value-face) 882 . 908) (nil tag-attr t 881 . 882) (nil tag-name "a" 881 . 882) (nil tag-type start 881 . 882) (nil font-lock-face web-mode-html-attr-equal-face 881 . 882) (nil face (whitespace-line web-mode-html-attr-equal-face) 881 . 882) (nil tag-attr t 877 . 881) (nil tag-name "a" 877 . 881) (nil tag-type start 877 . 881) (nil font-lock-face web-mode-html-attr-name-face 877 . 881) (nil face (whitespace-line web-mode-html-attr-name-face) 877 . 881) (nil tag-attr-beg 0 876 . 877) (nil tag-attr t 876 . 877) (nil tag-name "a" 876 . 877) (nil tag-type start 876 . 877) (nil font-lock-face web-mode-html-attr-name-face 876 . 877) (nil face (whitespace-line web-mode-html-attr-name-face) 876 . 877) (nil tag-name "a" 875 . 876) (nil tag-type start 875 . 876) (nil face (whitespace-line) 875 . 876) (nil tag-name "a" 874 . 875) (nil tag-type start 874 . 875) (nil font-lock-face web-mode-html-tag-face 874 . 875) (nil face (whitespace-line web-mode-html-tag-face) 874 . 875) (nil tag-name "a" 873 . 874) (nil tag-type start 873 . 874) (nil tag-beg 17 873 . 874) (nil font-lock-face web-mode-html-tag-bracket-face 873 . 874) (nil face (whitespace-line web-mode-html-tag-bracket-face) 873 . 874) (nil tag-name "span" 872 . 873) (nil tag-type end 872 . 873) (nil tag-end t 872 . 873) (nil font-lock-face web-mode-html-tag-bracket-face 872 . 873) (nil face (whitespace-line web-mode-html-tag-bracket-face) 872 . 873) (nil tag-name "span" 868 . 872) (nil tag-type end 868 . 872) (nil font-lock-face web-mode-html-tag-face 868 . 872) (nil face (whitespace-line web-mode-html-tag-face) 868 . 872) (nil tag-name "span" 867 . 868) (nil tag-type end 867 . 868) (nil font-lock-face web-mode-html-tag-bracket-face 867 . 868) (nil face (whitespace-line web-mode-html-tag-bracket-face) 867 . 868) (nil tag-name "span" 866 . 867) (nil tag-type end 866 . 867) (nil tag-beg 20 866 . 867) (nil font-lock-face web-mode-html-tag-bracket-face 866 . 867) (nil face (whitespace-line web-mode-html-tag-bracket-face) 866 . 867) (nil face (whitespace-line) 786 . 866) (nil tag-name "span" 785 . 786) (nil tag-type start 785 . 786) (nil tag-end t 785 . 786) (nil font-lock-face web-mode-html-tag-bracket-face 785 . 786) (nil face (whitespace-line web-mode-html-tag-bracket-face) 785 . 786) (nil tag-attr t 784 . 785) (nil tag-attr-end 5 784 . 785) (nil tag-name "span" 784 . 785) (nil tag-type start 784 . 785) (nil font-lock-face web-mode-html-attr-value-face 784 . 785) (nil face (whitespace-line web-mode-html-attr-value-face) 784 . 785) (nil tag-attr t 779 . 784) (nil tag-name "span" 779 . 784) (nil tag-type start 779 . 784) (nil font-lock-face web-mode-html-attr-value-face 779 . 784) (nil face (whitespace-line web-mode-html-attr-value-face) 779 . 784) (nil tag-attr t 778 . 779) (nil tag-name "span" 778 . 779) (nil tag-type start 778 . 779) (nil font-lock-face web-mode-html-attr-equal-face 778 . 779) (nil face (whitespace-line web-mode-html-attr-equal-face) 778 . 779) (nil tag-attr t 774 . 778) (nil tag-name "span" 774 . 778) (nil tag-type start 774 . 778) (nil font-lock-face web-mode-html-attr-name-face 774 . 778) (nil face (whitespace-line web-mode-html-attr-name-face) 774 . 778) (nil tag-attr-beg 0 773 . 774) (nil tag-attr t 773 . 774) (nil tag-name "span" 773 . 774) (nil tag-type start 773 . 774) (nil font-lock-face web-mode-html-attr-name-face 773 . 774) (nil face (whitespace-line web-mode-html-attr-name-face) 773 . 774) (nil tag-name "span" 772 . 773) (nil tag-type start 772 . 773) (nil face (whitespace-line) 772 . 773) (nil tag-name "span" 769 . 772) (nil tag-type start 769 . 772) (nil font-lock-face web-mode-html-tag-face 769 . 772) (nil face (whitespace-line web-mode-html-tag-face) 769 . 772) (nil tag-name "span" 768 . 769) (nil tag-type start 768 . 769) (nil font-lock-face web-mode-html-tag-face 768 . 769) (nil tag-name "span" 767 . 768) (nil tag-type start 767 . 768) (nil tag-beg 17 767 . 768) (nil font-lock-face web-mode-html-tag-bracket-face 767 . 768) (nil tag-name "img" 766 . 767) (nil tag-type void 766 . 767) (nil tag-end t 766 . 767) (nil font-lock-face web-mode-html-tag-bracket-face 766 . 767) (nil tag-attr t 765 . 766) (nil tag-attr-end 5 765 . 766) (nil tag-name "img" 765 . 766) (nil tag-type void 765 . 766) (nil font-lock-face web-mode-html-attr-value-face 765 . 766) (nil tag-attr t 762 . 765) (nil tag-name "img" 762 . 765) (nil tag-type void 762 . 765) (nil font-lock-face web-mode-html-attr-value-face 762 . 765) (nil tag-attr t 761 . 762) (nil tag-name "img" 761 . 762) (nil tag-type void 761 . 762) (nil font-lock-face web-mode-html-attr-equal-face 761 . 762) (nil tag-attr t 757 . 761) (nil tag-name "img" 757 . 761) (nil tag-type void 757 . 761) (nil font-lock-face web-mode-html-attr-name-face 757 . 761) (nil tag-attr-beg 0 756 . 757) (nil tag-attr t 756 . 757) (nil tag-name "img" 756 . 757) (nil tag-type void 756 . 757) (nil font-lock-face web-mode-html-attr-name-face 756 . 757) (nil tag-name "img" 755 . 756) (nil tag-type void 755 . 756) (nil tag-attr t 754 . 755) (nil tag-attr-end 3 754 . 755) (nil tag-name "img" 754 . 755) (nil tag-type void 754 . 755) (nil font-lock-face web-mode-html-attr-value-face 754 . 755) (nil tag-attr t 722 . 754) (nil tag-name "img" 722 . 754) (nil tag-type void 722 . 754) (nil font-lock-face web-mode-html-attr-value-face 722 . 754) (nil tag-attr t 721 . 722) (nil tag-name "img" 721 . 722) (nil tag-type void 721 . 722) (nil font-lock-face web-mode-html-attr-equal-face 721 . 722) (nil tag-attr t 719 . 721) (nil tag-name "img" 719 . 721) (nil tag-type void 719 . 721) (nil font-lock-face web-mode-html-attr-name-face 719 . 721) (nil tag-attr-beg 0 718 . 719) (nil tag-attr t 718 . 719) (nil tag-name "img" 718 . 719) (nil tag-type void 718 . 719) (nil font-lock-face web-mode-html-attr-name-face 718 . 719) (nil tag-name "img" 717 . 718) (nil tag-type void 717 . 718) (nil tag-name "img" 714 . 717) (nil tag-type void 714 . 717) (nil font-lock-face web-mode-html-tag-face 714 . 717) (nil tag-name "img" 713 . 714) (nil tag-type void 713 . 714) (nil tag-beg 17 713 . 714) (nil font-lock-face web-mode-html-tag-bracket-face 713 . 714) (nil tag-name "div" 712 . 713) (nil tag-type start 712 . 713) (nil tag-end t 712 . 713) (nil font-lock-face web-mode-html-tag-bracket-face 712 . 713) (nil tag-attr t 711 . 712) (nil tag-attr-end 5 711 . 712) (nil tag-name "div" 711 . 712) (nil tag-type start 711 . 712) (nil font-lock-face web-mode-html-attr-value-face 711 . 712) (nil tag-attr t 638 . 711) (nil tag-name "div" 638 . 711) (nil tag-type start 638 . 711) (nil font-lock-face web-mode-html-attr-value-face 638 . 711) (nil tag-attr t 637 . 638) (nil tag-name "div" 637 . 638) (nil tag-type start 637 . 638) (nil font-lock-face web-mode-html-attr-equal-face 637 . 638) (nil tag-attr t 633 . 637) (nil tag-name "div" 633 . 637) (nil tag-type start 633 . 637) (nil font-lock-face web-mode-html-attr-name-face 633 . 637) (nil tag-attr-beg 0 632 . 633) (nil tag-attr t 632 . 633) (nil tag-name "div" 632 . 633) (nil tag-type start 632 . 633) (nil font-lock-face web-mode-html-attr-name-face 632 . 633) (nil tag-name "div" 631 . 632) (nil tag-type start 631 . 632) (nil tag-name "div" 628 . 631) (nil tag-type start 628 . 631) (nil font-lock-face web-mode-html-tag-face 628 . 631) (nil tag-name "div" 627 . 628) (nil tag-type start 627 . 628) (nil tag-beg 17 627 . 628) (nil font-lock-face web-mode-html-tag-bracket-face 627 . 628) (nil tag-name "div" 617 . 618) (nil tag-type start 617 . 618) (nil tag-end t 617 . 618) (nil font-lock-face web-mode-html-tag-bracket-face 617 . 618) (nil tag-attr t 616 . 617) (nil tag-attr-end 5 616 . 617) (nil tag-name "div" 616 . 617) (nil tag-type start 616 . 617) (nil font-lock-face web-mode-html-attr-value-face 616 . 617) (nil tag-attr t 575 . 616) (nil tag-name "div" 575 . 616) (nil tag-type start 575 . 616) (nil font-lock-face web-mode-html-attr-value-face 575 . 616) (nil tag-attr t 574 . 575) (nil tag-name "div" 574 . 575) (nil tag-type start 574 . 575) (nil font-lock-face web-mode-html-attr-equal-face 574 . 575) (nil tag-attr t 570 . 574) (nil tag-name "div" 570 . 574) (nil tag-type start 570 . 574) (nil font-lock-face web-mode-html-attr-name-face 570 . 574) (nil tag-attr-beg 0 569 . 570) (nil tag-attr t 569 . 570) (nil tag-name "div" 569 . 570) (nil tag-type start 569 . 570) (nil font-lock-face web-mode-html-attr-name-face 569 . 570) (nil tag-name "div" 568 . 569) (nil tag-type start 568 . 569) (nil tag-name "div" 565 . 568) (nil tag-type start 565 . 568) (nil font-lock-face web-mode-html-tag-face 565 . 568) (nil tag-name "div" 564 . 565) (nil tag-type start 564 . 565) (nil tag-beg 17 564 . 565) (nil font-lock-face web-mode-html-tag-bracket-face 564 . 565) (564 . 1092)) nil (25699 59515 819703 463000) 0 nil])
([nil nil ((1097 . 1105) (1082 . 1090) ("    " . 1082) (1092 . 1093)) nil (25699 59515 819604 60000) 0 nil])
([nil nil ((1075 . 1077) (#("  " 0 2 (tag-type start tag-name "button")) . -1008) (627 . 629) 556) nil (25699 59515 819601 858000) 0 nil])
([nil nil ((993 . 1008)) nil (25699 59515 819599 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1032 . 1033) (nil rear-nonsticky t 1032 . 1033) (nil tag-attr t 1032 . 1033) (nil tag-attr-end 2 1032 . 1033) (nil tag-name "button" 1032 . 1033) (nil tag-type start 1032 . 1033) (nil font-lock-face web-mode-html-attr-value-face 1032 . 1033) (nil tag-attr t 1011 . 1032) (nil tag-name "button" 1011 . 1032) (nil tag-type start 1011 . 1032) (nil font-lock-face web-mode-html-attr-value-face 1011 . 1032) (nil tag-attr t 1010 . 1011) (nil tag-name "button" 1010 . 1011) (nil tag-type start 1010 . 1011) (nil font-lock-face web-mode-html-attr-equal-face 1010 . 1011) (nil tag-attr t 1009 . 1010) (nil tag-name "button" 1009 . 1010) (nil tag-type start 1009 . 1010) (nil font-lock-face web-mode-html-attr-name-face 1009 . 1010) (nil tag-attr-beg 0 1008 . 1009) (nil tag-attr t 1008 . 1009) (nil tag-name "button" 1008 . 1009) (nil tag-type start 1008 . 1009) (nil font-lock-face web-mode-html-attr-name-face 1008 . 1009) (1008 . 1033)) nil (25699 59515 819597 121000) 0 nil])
([nil nil ((1693 . 1699) ("      " . 1692) (undo-tree-id233 . -6) (1691 . 1699)) nil (25699 59515 819590 130000) 0 nil])
([nil nil ((#("        <div class=\"notice d-flex justify-content-between align-items-center\">
          <div class=\"cookie-text\">This website uses cookies to personalize content and analyse traffic in order to offer you a better experience.</div>
          <div class=\"buttons d-flex flex-column flex-lg-row\">
            <a id=\"cookie-notice-accept\" class=\"btn btn-success btn-sm\" data-dismiss=\"modal\">Okay</a>
            <a href=\"google.com\" class=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Learn More</a>
          </div>
        </div>
      </div>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 12 13 (tag-type start tag-name "div") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 14 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 19 76 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 76 77 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 90 93 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 93 94 (tag-type start tag-name "div") 94 95 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 95 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 99 100 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 100 112 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 112 113 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 225 226 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 227 229 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 229 230 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 230 231 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 242 243 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 243 246 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 246 247 (tag-type start tag-name "div") 247 248 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 248 252 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 252 253 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 253 292 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 292 293 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 293 294 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 307 308 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 308 309 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 309 310 (tag-type start tag-name "a") 310 311 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 311 312 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 312 313 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 313 334 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 334 335 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 2 tag-attr t rear-nonsticky t) 335 336 (tag-type start tag-name "a") 336 337 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 337 341 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 341 342 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 342 365 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 365 366 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 366 367 (tag-type start tag-name "a") 367 368 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "a" tag-attr t tag-attr-beg 1) 368 379 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "a" tag-attr t) 379 380 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 380 386 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 386 387 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 12 tag-attr t) 387 388 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 392 393 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 394 395 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 395 396 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 409 410 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 410 411 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 411 412 (tag-type start tag-name "a") 412 413 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 413 416 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 416 417 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 417 428 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 428 429 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 429 430 (tag-type start tag-name "a") 430 431 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 431 435 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 435 436 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 436 461 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 461 462 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 462 463 (tag-type start tag-name "a") 463 464 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "a" tag-attr t tag-attr-beg 1) 464 475 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "a" tag-attr t) 475 476 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 476 482 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 482 483 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 12 tag-attr t) 483 484 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 494 495 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 495 496 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 496 497 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 497 498 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 509 510 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 510 511 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 511 514 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 514 515 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 524 525 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 525 526 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 526 529 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 529 530 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 537 538 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 538 539 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 539 542 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 542 543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1148) (undo-tree-id227 . -543) (undo-tree-id228 . -428) (undo-tree-id229 . -79) (undo-tree-id230 . -388) (undo-tree-id231 . -335) (undo-tree-id232 . -543)) nil (25699 59515 819586 811000) 0 nil])
([nil nil ((" " . -1146) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) ("
" . -1147) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 1148) nil (25699 59515 819576 981000) 0 nil])
([nil nil (("      " . -1141) ("       " . -1139) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -7) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (undo-tree-id210 . -7) (undo-tree-id211 . -7) (undo-tree-id212 . -7) (undo-tree-id213 . -7) (undo-tree-id214 . -7) (undo-tree-id215 . -7) 1147) nil (25699 59515 819487 318000) 0 nil])
([nil nil ((616 . 623) (t 25699 59515 831003 510000)) nil (25699 59561 307627 636000) 0 nil])
([nil nil ((#("  .container {
    padding: 2rem 0rem;
  }

  .cookie {
    background-color: rgba(0,0,0,0.8);
  }

  .modal-dialog {
    margin-top: 0rem;
    max-width: 100%;

    .modal-content {
      border-radius: 0rem;
    }

    .buttons {
      .btn {
        margin: 0.2rem !important;
      }
    }
  }" 0 2 (part-side css) 2 12 (face web-mode-css-selector-class-face part-side css) 12 13 (part-side css) 13 14 (face (rainbow-delimiters-depth-1-face) part-side css) 14 19 (part-side css) 19 27 (face web-mode-css-property-name-face part-side css) 27 41 (part-side css) 41 42 (face (rainbow-delimiters-depth-1-face) part-side css) 42 43 (part-side css) 43 44 (part-side css) 44 46 (part-side css) 46 53 (face web-mode-css-selector-class-face part-side css) 53 54 (part-side css) 54 55 (face (rainbow-delimiters-depth-1-face) part-side css) 55 56 (part-side css) 56 60 (part-side css) 60 77 (face web-mode-css-property-name-face part-side css) 77 78 (part-side css) 78 82 (face web-mode-css-function-face part-side css) 82 83 (face (rainbow-delimiters-depth-2-face) part-side css) 83 84 (part-side css) 84 92 (part-side css) 92 93 (face (rainbow-delimiters-depth-2-face) part-side css) 93 94 (part-side css) 94 97 (part-side css) 97 98 (face (rainbow-delimiters-depth-1-face) part-side css) 98 99 (part-side css) 99 102 (part-side css) 102 115 (face web-mode-css-selector-class-face part-side css) 115 116 (part-side css) 116 117 (face (rainbow-delimiters-depth-1-face) part-side css) 117 122 (part-side css) 122 133 (face web-mode-css-property-name-face part-side css) 133 144 (part-side css) 144 154 (face web-mode-css-property-name-face part-side css) 154 181 (part-side css) 181 182 (face (rainbow-delimiters-depth-2-face) part-side css) 182 189 (part-side css) 189 203 (face web-mode-css-property-name-face part-side css) 203 214 (part-side css) 214 215 (face (rainbow-delimiters-depth-2-face) part-side css) 215 230 (part-side css) 230 231 (face (rainbow-delimiters-depth-2-face) part-side css) 231 232 (part-side css) 232 238 (part-side css) 238 242 (face web-mode-css-selector-class-face part-side css) 242 243 (part-side css) 243 244 (face (rainbow-delimiters-depth-3-face) part-side css) 244 253 (part-side css) 253 260 (face web-mode-css-property-name-face part-side css) 260 268 (part-side css) 268 278 (face web-mode-css-priority-face part-side css) 278 286 (part-side css) 286 287 (face (rainbow-delimiters-depth-3-face) part-side css) 287 292 (part-side css) 292 293 (face (rainbow-delimiters-depth-2-face) part-side css) 293 296 (part-side css) 296 297 (face (rainbow-delimiters-depth-1-face) part-side css)) . 9) (undo-tree-id234 . -297) (undo-tree-id235 . -15) (undo-tree-id236 . -53) (undo-tree-id237 . -78) (undo-tree-id238 . -78) (undo-tree-id239 . -78) (undo-tree-id240 . -83) (undo-tree-id241 . -267) (undo-tree-id242 . -293) (undo-tree-id243 . -297) (t 25699 59561 318959 839000)) nil (25699 59599 563301 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 531 . 532) (nil part-side css 531 . 532) (nil face (rainbow-delimiters-depth-1-face) 531 . 532) (nil part-side css 525 . 531) (nil part-side css 514 . 525) (nil face web-mode-css-property-name-face 514 . 525) (nil part-side css 505 . 514) (nil part-side css 499 . 505) (nil face web-mode-css-property-name-face 499 . 505) (nil part-side css 490 . 499) (nil part-side css 474 . 490) (nil face web-mode-css-property-name-face 474 . 490) (nil part-side css 471 . 474) (nil part-side css 470 . 471) (nil face (rainbow-delimiters-depth-1-face) 470 . 471) (nil part-side css 463 . 470) (nil face web-mode-css-pseudo-class-face 463 . 470) (nil part-side css 461 . 463) (nil part-side css 453 . 461) (nil face web-mode-css-selector-class-face 453 . 461) (nil part-side css 451 . 453) (nil part-side css 450 . 451) (nil face (rainbow-delimiters-depth-1-face) 450 . 451) (nil part-side css 444 . 450) (nil part-side css 433 . 444) (nil face web-mode-css-property-name-face 433 . 444) (nil part-side css 429 . 433) (nil part-side css 425 . 429) (nil face web-mode-css-color-face 425 . 429) (nil part-side css 424 . 425) (nil part-side css 418 . 424) (nil face web-mode-css-property-name-face 418 . 424) (nil part-side css 409 . 418) (nil part-side css 393 . 409) (nil face web-mode-css-property-name-face 393 . 409) (nil part-side css 390 . 393) (nil part-side css 389 . 390) (nil face (rainbow-delimiters-depth-1-face) 389 . 390) (nil part-side css 386 . 389) (nil part-side css 378 . 386) (nil face web-mode-css-selector-class-face 378 . 386) (nil part-side css 376 . 378) (nil part-side css 375 . 376) (nil face (rainbow-delimiters-depth-1-face) 375 . 376) (nil part-side css 373 . 375) (nil part-side css 372 . 373) (nil face (rainbow-delimiters-depth-2-face) 372 . 373) (nil part-side css 359 . 372) (nil part-side css 358 . 359) (nil face (rainbow-delimiters-depth-2-face) 358 . 359) (nil part-side css 355 . 358) (nil face web-mode-css-function-face 355 . 358) (nil part-side css 338 . 355) (nil part-side css 327 . 338) (nil face web-mode-css-property-name-face 327 . 338) (nil part-side css 323 . 327) (nil part-side css 322 . 323) (nil face (rainbow-delimiters-depth-2-face) 322 . 323) (nil part-side css 306 . 322) (nil part-side css 305 . 306) (nil face (rainbow-delimiters-depth-2-face) 305 . 306) (nil part-side css 301 . 305) (nil face web-mode-css-function-face 301 . 305) (nil part-side css 284 . 301) (nil part-side css 268 . 284) (nil face web-mode-css-property-name-face 268 . 284) (nil part-side css 264 . 268) (nil part-side css 263 . 264) (nil face (rainbow-delimiters-depth-2-face) 263 . 264) (nil part-side css 250 . 263) (nil part-side css 249 . 250) (nil face (rainbow-delimiters-depth-2-face) 249 . 250) (nil part-side css 246 . 249) (nil face web-mode-css-function-face 246 . 249) (nil part-side css 229 . 246) (nil part-side css 210 . 229) (nil face web-mode-css-property-name-face 210 . 229) (nil part-side css 202 . 210) (nil part-side css 188 . 202) (nil face web-mode-css-property-name-face 188 . 202) (nil part-side css 184 . 188) (nil part-side css 177 . 184) (nil face web-mode-css-color-face 177 . 184) (nil part-side css 166 . 177) (nil part-side css 159 . 166) (nil face web-mode-css-property-name-face 159 . 166) (nil part-side css 144 . 159) (nil part-side css 128 . 144) (nil face web-mode-css-property-name-face 128 . 144) (nil part-side css 124 . 128) (nil part-side css 120 . 124) (nil face web-mode-css-color-face 120 . 124) (nil part-side css 119 . 120) (nil part-side css 102 . 119) (nil face web-mode-css-property-name-face 102 . 119) (nil part-side css 87 . 102) (nil part-side css 77 . 87) (nil face web-mode-css-property-name-face 77 . 87) (nil part-side css 71 . 77) (nil part-side css 61 . 71) (nil face web-mode-css-property-name-face 61 . 71) (nil part-side css 50 . 61) (nil part-side css 35 . 50) (nil face web-mode-css-property-name-face 35 . 50) (nil part-side css 25 . 35) (nil part-side css 19 . 25) (nil face web-mode-css-property-name-face 19 . 25) (nil part-side css 16 . 19) (nil part-side css 15 . 16) (nil face (rainbow-delimiters-depth-1-face) 15 . 16) (nil part-side css 14 . 15) (nil part-side css 9 . 14) (nil face web-mode-css-selector-class-face 9 . 14) (9 . 532)) nil (25699 59599 563277 318000) 0 nil])
([nil nil ((575 . 577) (556 . 558) (539 . 541) (512 . 514) (489 . 491) (484 . 486) (465 . 467) (448 . 450) (421 . 423) (404 . 406) (399 . 401) (349 . 351) (288 . 290) (228 . 230) (204 . 206) (173 . 175) (140 . 142) (112 . 114) (85 . 87) (67 . 69) (39 . 41) (21 . 23) (9 . 11)) nil (25699 59599 563247 107000) 0 nil])
([nil nil ((#("#fff" 0 4 (face web-mode-css-color-face part-side css)) . 132) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (t 25699 59599 570923 78000)) nil (25699 59643 866418 779000) 0 nil])
([nil nil ((nil rear-nonsticky nil 153 . 154) (nil part-side css 153 . 154) (nil face (rainbow-delimiters-depth-2-face) 153 . 154) (nil part-side css 137 . 153) (nil part-side css 136 . 137) (nil face (rainbow-delimiters-depth-2-face) 136 . 137) (nil part-side css 132 . 136) (nil face web-mode-css-function-face 132 . 136) (132 . 154)) nil (25699 59643 866413 233000) 0 nil])
([nil nil ((#("212" 0 3 (part-side css)) . 137) (undo-tree-id244 . -3) (undo-tree-id245 . -3)) nil (25699 59643 866409 569000) 0 nil])
([nil nil ((137 . 138)) nil (25699 59643 866398 260000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . 140) (#("8" 0 1 (part-side css)) . 140) (#("1" 0 1 (part-side css)) . 140)) nil (25699 59643 866396 673000) 0 nil])
([nil nil ((140 . 141)) nil (25699 59643 866394 880000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . 143) (#("1" 0 1 (part-side css)) . 143) (#("2" 0 1 (part-side css)) . 143)) nil (25699 59643 866393 40000) 0 nil])
([nil nil ((143 . 144)) nil (25699 59643 866390 930000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . 146)) nil (25699 59643 866388 638000) 0 nil])
([nil nil ((146 . 149)) nil (25699 59643 866381 639000) 0 nil])
([nil nil ((#("
    width: 350px;" 0 5 (part-side css) 5 11 (face web-mode-css-property-name-face part-side css) 11 18 (part-side css)) . 18) (undo-tree-id249 . -18) (undo-tree-id250 . -1) (undo-tree-id251 . -18) (t 25699 59643 878880 462000)) nil (25699 59653 928331 810000) 0 nil])
([nil nil ((#("#d2d2dc" 0 7 (face web-mode-css-color-face part-side css)) . 189) (undo-tree-id258 . -7) (undo-tree-id259 . -7) (t 25699 59653 942870 776000)) nil (25699 59688 208492 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 206 . 207) (nil rear-nonsticky t 206 . 207) (nil part-side css 206 . 207) (nil face (rainbow-delimiters-depth-2-face) 206 . 207) (nil part-side css 195 . 206) (nil part-side css 194 . 195) (nil part-side css 193 . 194) (nil face (rainbow-delimiters-depth-2-face) 193 . 194) (nil part-side css 189 . 193) (nil face web-mode-css-function-face 189 . 193) (189 . 207)) nil (25699 59688 208488 240000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -205) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 206) nil (25699 59688 208479 935000) 0 nil])
([nil nil ((205 . 206)) nil (25699 59688 208441 482000) 0 nil])
([nil nil ((#("tabindex=\"-1\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 9 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t)) . 637) (undo-tree-id263 . -13) (undo-tree-id264 . -13) (t 25699 59688 222837 777000)) nil (25699 59742 346284 952000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -636) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 637) nil (25699 59742 346277 217000) 0 nil])
([nil nil ((18 . 23) (t 25699 59742 358785 626000)) nil (25699 59762 853148 260000) 0 nil])
([nil nil ((23 . 26)) nil (25699 59762 853146 952000) 0 nil])
([nil nil ((#("<" 0 1 (part-side css)) . -23) (undo-tree-id266 . -1) (#("-" 0 1 (part-side css)) . -24) (undo-tree-id267 . -1) (#("d" 0 1 (part-side css)) . -25) (undo-tree-id268 . -1) 26) nil (25699 59762 853145 208000) 0 nil])
([nil nil ((23 . 26)) nil (25699 59762 853138 938000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css)) . -25) (undo-tree-id265 . -1) 26) nil (25699 59762 853136 402000) 0 nil])
([nil nil ((25 . 34)) nil (25699 59762 853122 552000) 0 nil])
([nil nil ((#("
    -webkit-box-shadow: 0px 0px 5px 0px rgb(249, 249, 250);
    -moz-box-shadow: 0px 0px 5px 0px rgba(212, 182, 212, 1);
    box-shadow: 0px 0px 5px 0px rgb(161, 163, 164);" 0 5 (part-side css) 5 24 (face web-mode-css-property-name-face part-side css) 24 41 (part-side css) 41 44 (face web-mode-css-function-face part-side css) 44 45 (face (rainbow-delimiters-depth-2-face) part-side css) 45 58 (part-side css) 58 59 (face (rainbow-delimiters-depth-2-face) part-side css) 59 65 (part-side css) 65 81 (face web-mode-css-property-name-face part-side css) 81 98 (part-side css) 98 102 (face web-mode-css-function-face part-side css) 102 103 (face (rainbow-delimiters-depth-2-face) part-side css) 103 119 (part-side css) 119 120 (face (rainbow-delimiters-depth-2-face) part-side css) 120 126 (part-side css) 126 137 (face web-mode-css-property-name-face part-side css) 137 154 (part-side css) 154 157 (face web-mode-css-function-face part-side css) 157 158 (face (rainbow-delimiters-depth-2-face) part-side css) 158 171 (part-side css) 171 172 (face (rainbow-delimiters-depth-2-face) part-side css) 172 173 (part-side css)) . 248) (undo-tree-id269 . -173) (undo-tree-id270 . -1) (undo-tree-id271 . -120) (undo-tree-id272 . -173) (t 25699 59762 870765 852000)) nil (25699 59779 47936 523000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -210) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 211 (t 25699 59779 62750 240000)) nil (25699 59802 159699 350000) 0 nil])
([nil nil ((210 . 213)) nil (25699 59802 159694 871000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -215) (undo-tree-id274 . -1) 216) nil (25699 59802 159693 231000) 0 nil])
([nil nil ((215 . 218)) nil (25699 59802 159689 592000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -220) (undo-tree-id273 . -1) 221) nil (25699 59802 159686 591000) 0 nil])
([nil nil ((220 . 223)) nil (25699 59802 159655 949000) 0 nil])
([nil nil ((#("aria-hidden=\"true\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 11 tag-attr t)) . 536) (undo-tree-id286 . -18) (undo-tree-id287 . -18) (t 25699 59802 170727 952000)) nil (25699 59866 539141 927000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -535) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 536) nil (25699 59866 539128 300000) 0 nil])
([nil nil ((2181 . 2188) (t 25699 59866 554665 818000)) nil (25699 59944 382959 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2254 . 2255) (nil part-side javascript 2254 . 2255) (nil part-side javascript 2253 . 2254) (nil face (rainbow-delimiters-depth-4-face) 2253 . 2254) (nil part-side javascript 2252 . 2253) (nil face (rainbow-delimiters-depth-5-face) 2252 . 2253) (nil part-side javascript 2248 . 2252) (nil face web-mode-constant-face 2248 . 2252) (nil part-side javascript 2247 . 2248) (nil part-side javascript 2243 . 2247) (nil face web-mode-variable-name-face 2243 . 2247) (nil part-side javascript 2241 . 2243) (nil part-side javascript 2236 . 2241) (nil face web-mode-constant-face 2236 . 2241) (nil part-side javascript 2235 . 2236) (nil part-side javascript 2227 . 2235) (nil face web-mode-variable-name-face 2227 . 2235) (nil part-side javascript 2226 . 2227) (nil part-side javascript 2225 . 2226) (nil part-token string 2225 . 2226) (nil syntax-table (15) 2225 . 2226) (nil font-lock-face web-mode-javascript-string-face 2225 . 2226) (nil part-side javascript 2219 . 2225) (nil part-token string 2219 . 2225) (nil font-lock-face web-mode-javascript-string-face 2219 . 2225) (nil part-side javascript 2218 . 2219) (nil part-token string 2218 . 2219) (nil syntax-table (15) 2218 . 2219) (nil font-lock-face web-mode-javascript-string-face 2218 . 2219) (nil part-side javascript 2217 . 2218) (nil part-side javascript 2209 . 2217) (nil face web-mode-variable-name-face 2209 . 2217) (nil part-side javascript 2208 . 2209) (nil face (rainbow-delimiters-depth-5-face) 2208 . 2209) (nil part-side javascript 2207 . 2208) (nil face (rainbow-delimiters-depth-4-face) 2207 . 2208) (nil part-side javascript 2202 . 2207) (nil face web-mode-function-call-face 2202 . 2207) (nil part-side javascript 2201 . 2202) (nil part-side javascript 2200 . 2201) (nil face (rainbow-delimiters-depth-4-face) 2200 . 2201) (nil part-side javascript 2199 . 2200) (nil part-token string 2199 . 2200) (nil syntax-table (15) 2199 . 2200) (nil font-lock-face web-mode-javascript-string-face 2199 . 2200) (nil part-side javascript 2191 . 2199) (nil part-token string 2191 . 2199) (nil font-lock-face web-mode-javascript-string-face 2191 . 2199) (nil part-side javascript 2190 . 2191) (nil part-token string 2190 . 2191) (nil syntax-table (15) 2190 . 2191) (nil font-lock-face web-mode-javascript-string-face 2190 . 2191) (nil part-side javascript 2189 . 2190) (nil face (rainbow-delimiters-depth-4-face) 2189 . 2190) (nil part-side javascript 2188 . 2189) (nil face web-mode-type-face 2188 . 2189) (2188 . 2255)) nil (25699 59944 382955 496000) 0 nil])
([nil nil ((#("myModal" 0 7 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 2192) (undo-tree-id297 . -7) (undo-tree-id298 . -7)) nil (25699 59944 382940 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2202 . 2203) (nil part-side javascript 2192 . 2203) (nil part-token string 2192 . 2203) (nil font-lock-face web-mode-javascript-string-face 2192 . 2203) (2192 . 2203)) nil (25699 59944 382936 786000) 0 nil])
([nil nil ((2266 . 2269)) nil (25699 59944 382934 28000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2268) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 2269) nil (25699 59944 382928 839000) 0 nil])
([nil nil ((2313 . 2315) (#("  " 0 2 (part-side javascript)) . 2312) (undo-tree-id304 . -2) (2311 . 2315) (t 25699 59944 394590 639000)) nil (25699 60097 868240 753000) 0 nil])
([nil nil ((1095 . 1110)) nil (25699 60097 868237 710000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1128 . 1129) (nil tag-attr t 1128 . 1129) (nil tag-attr-end 7 1128 . 1129) (nil tag-name "button" 1128 . 1129) (nil tag-type start 1128 . 1129) (nil font-lock-face web-mode-html-attr-value-face 1128 . 1129) (nil tag-attr t 1118 . 1128) (nil tag-name "button" 1118 . 1128) (nil tag-type start 1118 . 1128) (nil font-lock-face web-mode-html-attr-value-face 1118 . 1128) (nil tag-attr t 1117 . 1118) (nil tag-name "button" 1117 . 1118) (nil tag-type start 1117 . 1118) (nil font-lock-face web-mode-html-attr-equal-face 1117 . 1118) (nil tag-attr t 1111 . 1117) (nil tag-name "button" 1111 . 1117) (nil tag-type start 1111 . 1117) (nil font-lock-face web-mode-html-attr-name-face 1111 . 1117) (nil tag-attr-beg 8 1110 . 1111) (nil tag-attr t 1110 . 1111) (nil tag-name "button" 1110 . 1111) (nil tag-type start 1110 . 1111) (nil font-lock-face web-mode-html-attr-name-face 1110 . 1111) (1110 . 1129)) nil (25699 60097 868234 890000) 0 nil])
([nil nil ((2349 . 2363)) nil (25699 60097 868227 968000) 0 nil])
([nil nil ((2363 . 2368)) nil (25699 60097 868226 748000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2367) (undo-tree-id303 . -1) 2368) nil (25699 60097 868225 254000) 0 nil])
([nil nil ((2370 . 2372) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side javascript)) . -2370) (2369 . 2371) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) part-side javascript)) . 2369) (2368 . 2369) (2367 . 2369) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) part-side javascript)) . -2367) (2367 . 2368)) nil (25699 60097 868222 44000) 0 nil])
([nil nil ((2373 . 2375) (#("    " 0 4 (face whitespace-trailing part-side javascript)) . 2372) (undo-tree-id301 . -2) (undo-tree-id302 . 4) (2374 . 2376) (2371 . 2375)) nil (25699 60097 868218 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2516 . 2517) (nil part-side javascript 2516 . 2517) (nil part-side javascript 2515 . 2516) (nil face (rainbow-delimiters-depth-2-face) 2515 . 2516) (nil part-side javascript 2514 . 2515) (nil face (rainbow-delimiters-depth-2-face) 2514 . 2515) (nil part-side javascript 2508 . 2514) (nil face web-mode-function-call-face 2508 . 2514) (nil part-side javascript 2495 . 2508) (nil part-side javascript 2494 . 2495) (nil syntax-table (12) 2494 . 2495) (nil part-side javascript 2493 . 2494) (nil part-token comment 2493 . 2494) (nil font-lock-face web-mode-javascript-comment-face 2493 . 2494) (nil part-side javascript 2492 . 2493) (nil part-token comment 2492 . 2493) (nil font-lock-face web-mode-javascript-comment-face 2492 . 2493) (nil part-side javascript 2488 . 2492) (nil part-token comment 2488 . 2492) (nil font-lock-face web-mode-javascript-comment-face 2488 . 2492) (nil part-side javascript 2487 . 2488) (nil part-token comment 2487 . 2488) (nil font-lock-face web-mode-javascript-comment-face 2487 . 2488) (nil part-side javascript 2470 . 2487) (nil part-token comment 2470 . 2487) (nil font-lock-face web-mode-javascript-comment-face 2470 . 2487) (nil part-side javascript 2469 . 2470) (nil part-token comment 2469 . 2470) (nil font-lock-face web-mode-javascript-comment-face 2469 . 2470) (nil part-side javascript 2468 . 2469) (nil part-token comment 2468 . 2469) (nil font-lock-face web-mode-javascript-comment-face 2468 . 2469) (nil part-side javascript 2455 . 2468) (nil part-token comment 2455 . 2468) (nil font-lock-face web-mode-javascript-comment-face 2455 . 2468) (nil part-side javascript 2454 . 2455) (nil part-token comment 2454 . 2455) (nil font-lock-face web-mode-javascript-comment-face 2454 . 2455) (nil part-side javascript 2453 . 2454) (nil part-token comment 2453 . 2454) (nil font-lock-face web-mode-javascript-comment-face 2453 . 2454) (nil part-side javascript 2439 . 2453) (nil part-token comment 2439 . 2453) (nil font-lock-face web-mode-javascript-comment-face 2439 . 2453) (nil part-side javascript 2428 . 2439) (nil part-token comment 2428 . 2439) (nil font-lock-face web-mode-javascript-comment-face 2428 . 2439) (nil part-side javascript 2427 . 2428) (nil part-token comment 2427 . 2428) (nil syntax-table (11) 2427 . 2428) (nil font-lock-face web-mode-javascript-comment-face 2427 . 2428) (nil part-side javascript 2423 . 2427) (nil part-side javascript 2421 . 2423) (nil part-side javascript 2420 . 2421) (nil face (rainbow-delimiters-depth-2-face) 2420 . 2421) (nil part-side javascript 2417 . 2420) (nil part-side javascript 2416 . 2417) (nil part-token string 2416 . 2417) (nil syntax-table (15) 2416 . 2417) (nil font-lock-face web-mode-javascript-string-face 2416 . 2417) (nil part-side javascript 2412 . 2416) (nil part-token string 2412 . 2416) (nil font-lock-face web-mode-javascript-string-face 2412 . 2416) (nil part-side javascript 2411 . 2412) (nil part-token string 2411 . 2412) (nil syntax-table (15) 2411 . 2412) (nil font-lock-face web-mode-javascript-string-face 2411 . 2412) (nil part-side javascript 2410 . 2411) (nil part-side javascript 2409 . 2410) (nil part-token string 2409 . 2410) (nil syntax-table (15) 2409 . 2410) (nil font-lock-face web-mode-javascript-string-face 2409 . 2410) (nil part-side javascript 2386 . 2409) (nil part-token string 2386 . 2409) (nil font-lock-face web-mode-javascript-string-face 2386 . 2409) (nil part-side javascript 2385 . 2386) (nil part-token string 2385 . 2386) (nil syntax-table (15) 2385 . 2386) (nil font-lock-face web-mode-javascript-string-face 2385 . 2386) (nil part-side javascript 2384 . 2385) (nil face (rainbow-delimiters-depth-2-face) 2384 . 2385) (nil part-side javascript 2372 . 2384) (nil face web-mode-function-call-face 2372 . 2384) (2372 . 2517)) nil (25699 60097 868209 957000) 0 nil])
([nil nil ((2372 . 2376)) nil (25699 60097 868188 770000) 0 nil])
([nil nil ((#("myFunc()" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1119) (undo-tree-id299 . -8) (undo-tree-id300 . -8)) nil (25699 60097 868187 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1127 . 1128) (nil tag-attr t 1119 . 1128) (nil tag-name "button" 1119 . 1128) (nil tag-type start 1119 . 1128) (nil font-lock-face web-mode-html-attr-value-face 1119 . 1128) (1119 . 1128)) nil (25699 60097 868176 756000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1130) (1129 . 1130) (1128 . 1130) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1128) (1128 . 1129)) nil (25699 60097 868167 835000) 0 nil])
([nil nil (("
" . 1277) (undo-tree-id305 . -1) ("
" . 1277) (undo-tree-id306 . -1) ("
" . 1277) (undo-tree-id307 . -1) (t 25699 60097 882442 226000)) nil (25699 60166 970923 424000) 0 nil])
([nil nil ((1282 . 1284) 1288) nil (25699 60166 970909 903000) 0 nil])
([nil nil ((1309 . 1311) (1300 . 1302) (1306 . 1307)) nil (25699 60166 970907 976000) 0 nil])
([nil nil ((1293 . 1295) 445) nil (25699 60166 970905 877000) 0 nil])
([nil nil ((1310 . 1313)) nil (25699 60166 970904 299000) 0 nil])
([nil nil (("  " . -1311) (1313 . 1319)) nil (25699 60166 970902 61000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing)) . -1318) 751) nil (25699 60166 970894 174000) 0 nil])
([nil nil ((972 . 982) (#("            " 0 12 (face whitespace-trailing)) . 971) (undo-tree-id313 . -10) (undo-tree-id314 . 12) (981 . 983) (970 . 982) (t 25699 60166 982375 352000)) nil (25699 60236 789599 968000) 0 nil])
([nil nil ((#("aria-labelledby=\"exampleModalLabel\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 16 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 15 tag-attr t)) . 500) (undo-tree-id490 . -35) (undo-tree-id491 . -35)) nil (25699 60283 999473 201000) 0 nil] [nil nil ((1304 . 1308) (#("      " 0 6 (face whitespace-trailing)) . 1303) (undo-tree-id311 . -4) (undo-tree-id312 . 6) (1307 . 1309) (1307 . 1308)) (("
" . 1307) (undo-tree-id484 . -1) (#("  " 0 2 (face whitespace-trailing)) . 1307) (1303 . 1309) ("    " . 1304)) (25699 60236 352853 87000) 0 nil])
([nil nil ((nil rear-nonsticky nil 513 . 514) (nil tag-name "div" 513 . 514) (nil tag-type start 513 . 514) (nil tag-attr t 512 . 513) (nil tag-attr-end 8 512 . 513) (nil tag-name "div" 512 . 513) (nil tag-type start 512 . 513) (nil font-lock-face web-mode-html-attr-value-face 512 . 513) (nil tag-attr t 509 . 512) (nil tag-name "div" 509 . 512) (nil tag-type start 509 . 512) (nil font-lock-face web-mode-html-attr-value-face 509 . 512) (nil tag-attr t 508 . 509) (nil tag-name "div" 508 . 509) (nil tag-type start 508 . 509) (nil font-lock-face web-mode-html-attr-equal-face 508 . 509) (nil tag-attr t 501 . 508) (nil tag-name "div" 501 . 508) (nil tag-type start 501 . 508) (nil font-lock-face web-mode-html-attr-name-face 501 . 508) (nil tag-attr-beg 0 500 . 501) (nil tag-attr t 500 . 501) (nil tag-name "div" 500 . 501) (nil tag-type start 500 . 501) (nil font-lock-face web-mode-html-attr-name-face 500 . 501) (500 . 514)) nil (25699 60283 999467 997000) 0 nil])
([nil nil ((1303 . 1309)) (("      " . 1303) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -6) (undo-tree-id469 . -6) (undo-tree-id470 . -6) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6) (undo-tree-id475 . -6) (undo-tree-id476 . -6) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6)) (25699 60236 25847 4000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div" rear-nonsticky t)) . -513) (undo-tree-id489 . -1) 514) nil (25699 60283 999460 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (nil tag-name "div" 1334 . 1335) (nil tag-type start 1334 . 1335) (nil tag-end t 1334 . 1335) (nil font-lock-face web-mode-html-tag-bracket-face 1334 . 1335) (nil tag-attr t 1333 . 1334) (nil tag-attr-end 5 1333 . 1334) (nil tag-name "div" 1333 . 1334) (nil tag-type start 1333 . 1334) (nil font-lock-face web-mode-html-attr-value-face 1333 . 1334) (nil tag-attr t 1320 . 1333) (nil tag-name "div" 1320 . 1333) (nil tag-type start 1320 . 1333) (nil font-lock-face web-mode-html-attr-value-face 1320 . 1333) (nil tag-attr t 1319 . 1320) (nil tag-name "div" 1319 . 1320) (nil tag-type start 1319 . 1320) (nil font-lock-face web-mode-html-attr-equal-face 1319 . 1320) (nil tag-attr t 1315 . 1319) (nil tag-name "div" 1315 . 1319) (nil tag-type start 1315 . 1319) (nil font-lock-face web-mode-html-attr-name-face 1315 . 1319) (nil tag-attr-beg 0 1314 . 1315) (nil tag-attr t 1314 . 1315) (nil tag-name "div" 1314 . 1315) (nil tag-type start 1314 . 1315) (nil font-lock-face web-mode-html-attr-name-face 1314 . 1315) (nil tag-name "div" 1313 . 1314) (nil tag-type start 1313 . 1314) (nil tag-name "div" 1310 . 1313) (nil tag-type start 1310 . 1313) (nil font-lock-face web-mode-html-tag-face 1310 . 1313) (nil tag-name "div" 1309 . 1310) (nil tag-type start 1309 . 1310) (nil tag-beg 17 1309 . 1310) (nil font-lock-face web-mode-html-tag-bracket-face 1309 . 1310) (1309 . 1335)) ((#("<div class=\"modal-footer\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky nil)) . 1309) (undo-tree-id410 . -26) (undo-tree-id411 . -26) (undo-tree-id412 . -26) (undo-tree-id413 . -26) (undo-tree-id414 . -26) (undo-tree-id415 . -26) (undo-tree-id416 . -26) (undo-tree-id417 . -26) (undo-tree-id418 . -26) (undo-tree-id419 . -26) (undo-tree-id420 . -26) (undo-tree-id421 . -26) (undo-tree-id422 . -26) (undo-tree-id423 . -26) (undo-tree-id424 . -26) (undo-tree-id425 . -26) (undo-tree-id426 . -26) (undo-tree-id427 . -26) (undo-tree-id428 . -26) (undo-tree-id429 . -26) (undo-tree-id430 . -26) (undo-tree-id431 . -26) (undo-tree-id432 . -26) (undo-tree-id433 . -26) (undo-tree-id434 . -26) (undo-tree-id435 . -26) (undo-tree-id436 . -26) (undo-tree-id437 . -26) (undo-tree-id438 . -26) (undo-tree-id439 . -26) (undo-tree-id440 . -26) (nil tag-name "div" 1309 . 1310) (nil tag-name "div" 1310 . 1313) (nil tag-name "div" 1313 . 1314) (nil tag-name "div" 1314 . 1315) (nil tag-name "div" 1315 . 1319) (nil tag-name "div" 1319 . 1320) (nil tag-name "div" 1320 . 1333) (nil tag-name "div" 1333 . 1334) (nil tag-name "div" 1334 . 1335) (nil rear-nonsticky t 1334 . 1335)) (25699 60235 706174 544000) 0 nil])
([nil nil ((#("cookie" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 589) (undo-tree-id487 . -6) (undo-tree-id488 . -6)) nil (25699 60283 999456 169000) 0 nil])
([nil nil ((1335 . 1344)) (("
        " . 1335) (undo-tree-id385 . -9) (undo-tree-id386 . -1) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -9) (undo-tree-id391 . -9) (undo-tree-id392 . -9) (undo-tree-id393 . -9) (undo-tree-id394 . -9) (undo-tree-id395 . -9) (undo-tree-id396 . -9) (undo-tree-id397 . -9) (undo-tree-id398 . -1) (undo-tree-id399 . -9) (undo-tree-id400 . -9) (undo-tree-id401 . -9) (undo-tree-id402 . -9) (undo-tree-id403 . -9) (undo-tree-id404 . -9) (undo-tree-id405 . -9) (undo-tree-id406 . -9) (undo-tree-id407 . -9) (undo-tree-id408 . -9) (undo-tree-id409 . -9)) (25699 60235 366110 587000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -588) (undo-tree-id485 . -1) (undo-tree-id486 . -1) 589) nil (25699 60283 999448 487000) 0 nil])
([nil nil (("  " . -1342) (1344 . 1350)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1344) (undo-tree-id373 . -6) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (1342 . 1344)) (25699 60235 6030 614000) 0 nil])
([nil nil ((513 . 514) (t 25699 60284 14262 18000)) nil (25699 60372 793417 745000) 0 nil])
([nil nil ((1348 . 1355)) (("
      " . 1348) (undo-tree-id352 . -7) (undo-tree-id353 . -1) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7)) (25699 60234 662568 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 534 . 535) (nil tag-attr t 534 . 535) (nil tag-attr-end 13 534 . 535) (nil tag-name "div" 534 . 535) (nil tag-type start 534 . 535) (nil font-lock-face web-mode-html-attr-value-face 534 . 535) (nil tag-attr t 528 . 534) (nil tag-name "div" 528 . 534) (nil tag-type start 528 . 534) (nil font-lock-face web-mode-html-attr-value-face 528 . 534) (nil tag-attr t 527 . 528) (nil tag-name "div" 527 . 528) (nil tag-type start 527 . 528) (nil font-lock-face web-mode-html-attr-equal-face 527 . 528) (nil tag-attr t 515 . 527) (nil tag-name "div" 515 . 527) (nil tag-type start 515 . 527) (nil font-lock-face web-mode-html-attr-custom-face 515 . 527) (nil tag-attr-beg 1 514 . 515) (nil tag-attr t 514 . 515) (nil tag-name "div" 514 . 515) (nil tag-type start 514 . 515) (nil font-lock-face web-mode-html-attr-custom-face 514 . 515) (514 . 535)) nil (25699 60372 793409 65000) 0 nil])
([nil nil (("
" . 1355) (undo-tree-id309 . -1) (undo-tree-id310 . 1)) ((1355 . 1356)) (25699 60234 340018 899000) 0 nil])
([nil nil ((18 . 23) (t 25699 60372 806175 984000)) nil (25699 60529 433402 383000) 0 nil])
([nil nil (("      " . -1353) (undo-tree-id308 . -2) 1355) ((1353 . 1359)) (25699 60234 43891 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35 . 36) (nil part-side css 31 . 36) (nil part-side css 23 . 31) (nil face web-mode-css-property-name-face 23 . 31) (23 . 36)) nil (25699 60529 433400 872000) 0 nil])
([nil nil ((1335 . 1344)) (("
        " . 1335) (undo-tree-id329 . -9) (undo-tree-id330 . -9) (undo-tree-id331 . -1) (undo-tree-id332 . -9) (undo-tree-id333 . -9) (undo-tree-id334 . -9) (undo-tree-id335 . -9) (undo-tree-id336 . -9) (undo-tree-id337 . -9) (undo-tree-id338 . -9) (undo-tree-id339 . -9) (undo-tree-id340 . -9) (undo-tree-id341 . -9) (undo-tree-id342 . -9) (undo-tree-id343 . -9) (undo-tree-id344 . -1) (undo-tree-id345 . -9) (undo-tree-id346 . -9) (undo-tree-id347 . -9) (undo-tree-id348 . -9) (undo-tree-id349 . -9) (undo-tree-id350 . -9) (undo-tree-id351 . -9)) (25699 60233 807654 247000) 0 nil])
([nil nil ((#("
    z-index: 4;" 0 1 (part-side css) 1 5 (part-side css) 5 13 (face web-mode-css-property-name-face part-side css) 13 16 (part-side css)) . 36) (undo-tree-id492 . -16) (undo-tree-id493 . -1) (undo-tree-id494 . -16)) nil (25699 60529 433397 628000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1502 . 1503) (nil tag-name "button" 1502 . 1503) (nil tag-type end 1502 . 1503) (nil tag-end t 1502 . 1503) (nil font-lock-face web-mode-html-tag-bracket-face 1502 . 1503) (nil tag-name "button" 1496 . 1502) (nil tag-type end 1496 . 1502) (nil font-lock-face web-mode-html-tag-face 1496 . 1502) (nil tag-name "button" 1495 . 1496) (nil tag-type end 1495 . 1496) (nil font-lock-face web-mode-html-tag-bracket-face 1495 . 1496) (nil tag-name "button" 1494 . 1495) (nil tag-type end 1494 . 1495) (nil tag-beg 20 1494 . 1495) (nil font-lock-face web-mode-html-tag-bracket-face 1494 . 1495) (nil tag-name "button" 1481 . 1482) (nil tag-type start 1481 . 1482) (nil tag-end t 1481 . 1482) (nil font-lock-face web-mode-html-tag-bracket-face 1481 . 1482) (nil tag-attr t 1480 . 1481) (nil tag-attr-end 5 1480 . 1481) (nil tag-name "button" 1480 . 1481) (nil tag-type start 1480 . 1481) (nil font-lock-face web-mode-html-attr-value-face 1480 . 1481) (nil tag-attr t 1464 . 1480) (nil tag-name "button" 1464 . 1480) (nil tag-type start 1464 . 1480) (nil font-lock-face web-mode-html-attr-value-face 1464 . 1480) (nil tag-attr t 1463 . 1464) (nil tag-name "button" 1463 . 1464) (nil tag-type start 1463 . 1464) (nil font-lock-face web-mode-html-attr-equal-face 1463 . 1464) (nil tag-attr t 1459 . 1463) (nil tag-name "button" 1459 . 1463) (nil tag-type start 1459 . 1463) (nil font-lock-face web-mode-html-attr-name-face 1459 . 1463) (nil tag-attr-beg 0 1458 . 1459) (nil tag-attr t 1458 . 1459) (nil tag-name "button" 1458 . 1459) (nil tag-type start 1458 . 1459) (nil font-lock-face web-mode-html-attr-name-face 1458 . 1459) (nil tag-name "button" 1457 . 1458) (nil tag-type start 1457 . 1458) (nil tag-attr t 1456 . 1457) (nil tag-attr-end 4 1456 . 1457) (nil tag-name "button" 1456 . 1457) (nil tag-type start 1456 . 1457) (nil font-lock-face web-mode-html-attr-value-face 1456 . 1457) (nil tag-attr t 1449 . 1456) (nil tag-name "button" 1449 . 1456) (nil tag-type start 1449 . 1456) (nil font-lock-face web-mode-html-attr-value-face 1449 . 1456) (nil tag-attr t 1448 . 1449) (nil tag-name "button" 1448 . 1449) (nil tag-type start 1448 . 1449) (nil font-lock-face web-mode-html-attr-equal-face 1448 . 1449) (nil tag-attr t 1445 . 1448) (nil tag-name "button" 1445 . 1448) (nil tag-type start 1445 . 1448) (nil font-lock-face web-mode-html-attr-name-face 1445 . 1448) (nil tag-attr-beg 0 1444 . 1445) (nil tag-attr t 1444 . 1445) (nil tag-name "button" 1444 . 1445) (nil tag-type start 1444 . 1445) (nil font-lock-face web-mode-html-attr-name-face 1444 . 1445) (nil tag-name "button" 1443 . 1444) (nil tag-type start 1443 . 1444) (nil tag-name "button" 1437 . 1443) (nil tag-type start 1437 . 1443) (nil font-lock-face web-mode-html-tag-face 1437 . 1443) (nil tag-name "button" 1436 . 1437) (nil tag-type start 1436 . 1437) (nil tag-beg 17 1436 . 1437) (nil font-lock-face web-mode-html-tag-bracket-face 1436 . 1437) (nil tag-name "button" 1426 . 1427) (nil tag-type end 1426 . 1427) (nil tag-end t 1426 . 1427) (nil font-lock-face web-mode-html-tag-bracket-face 1426 . 1427) (nil tag-name "button" 1420 . 1426) (nil tag-type end 1420 . 1426) (nil font-lock-face web-mode-html-tag-face 1420 . 1426) (nil tag-name "button" 1419 . 1420) (nil tag-type end 1419 . 1420) (nil font-lock-face web-mode-html-tag-bracket-face 1419 . 1420) (nil tag-name "button" 1418 . 1419) (nil tag-type end 1418 . 1419) (nil tag-beg 20 1418 . 1419) (nil font-lock-face web-mode-html-tag-bracket-face 1418 . 1419) (nil tag-name "button" 1412 . 1413) (nil tag-type start 1412 . 1413) (nil tag-end t 1412 . 1413) (nil font-lock-face web-mode-html-tag-bracket-face 1412 . 1413) (nil tag-attr t 1411 . 1412) (nil tag-attr-end 12 1411 . 1412) (nil tag-name "button" 1411 . 1412) (nil tag-type start 1411 . 1412) (nil font-lock-face web-mode-html-attr-value-face 1411 . 1412) (nil tag-attr t 1405 . 1411) (nil tag-name "button" 1405 . 1411) (nil tag-type start 1405 . 1411) (nil font-lock-face web-mode-html-attr-value-face 1405 . 1411) (nil tag-attr t 1404 . 1405) (nil tag-name "button" 1404 . 1405) (nil tag-type start 1404 . 1405) (nil font-lock-face web-mode-html-attr-equal-face 1404 . 1405) (nil tag-attr t 1393 . 1404) (nil tag-name "button" 1393 . 1404) (nil tag-type start 1393 . 1404) (nil font-lock-face web-mode-html-attr-custom-face 1393 . 1404) (nil tag-attr-beg 1 1392 . 1393) (nil tag-attr t 1392 . 1393) (nil tag-name "button" 1392 . 1393) (nil tag-type start 1392 . 1393) (nil font-lock-face web-mode-html-attr-custom-face 1392 . 1393) (nil tag-name "button" 1391 . 1392) (nil tag-type start 1391 . 1392) (nil tag-attr t 1390 . 1391) (nil tag-attr-end 5 1390 . 1391) (nil tag-name "button" 1390 . 1391) (nil tag-type start 1390 . 1391) (nil font-lock-face web-mode-html-attr-value-face 1390 . 1391) (nil tag-attr t 1372 . 1390) (nil tag-name "button" 1372 . 1390) (nil tag-type start 1372 . 1390) (nil font-lock-face web-mode-html-attr-value-face 1372 . 1390) (nil tag-attr t 1371 . 1372) (nil tag-name "button" 1371 . 1372) (nil tag-type start 1371 . 1372) (nil font-lock-face web-mode-html-attr-equal-face 1371 . 1372) (nil tag-attr t 1367 . 1371) (nil tag-name "button" 1367 . 1371) (nil tag-type start 1367 . 1371) (nil font-lock-face web-mode-html-attr-name-face 1367 . 1371) (nil tag-attr-beg 0 1366 . 1367) (nil tag-attr t 1366 . 1367) (nil tag-name "button" 1366 . 1367) (nil tag-type start 1366 . 1367) (nil font-lock-face web-mode-html-attr-name-face 1366 . 1367) (nil tag-name "button" 1365 . 1366) (nil tag-type start 1365 . 1366) (nil tag-attr t 1364 . 1365) (nil tag-attr-end 4 1364 . 1365) (nil tag-name "button" 1364 . 1365) (nil tag-type start 1364 . 1365) (nil font-lock-face web-mode-html-attr-value-face 1364 . 1365) (nil tag-attr t 1357 . 1364) (nil tag-name "button" 1357 . 1364) (nil tag-type start 1357 . 1364) (nil font-lock-face web-mode-html-attr-value-face 1357 . 1364) (nil tag-attr t 1356 . 1357) (nil tag-name "button" 1356 . 1357) (nil tag-type start 1356 . 1357) (nil font-lock-face web-mode-html-attr-equal-face 1356 . 1357) (nil tag-attr t 1353 . 1356) (nil tag-name "button" 1353 . 1356) (nil tag-type start 1353 . 1356) (nil font-lock-face web-mode-html-attr-name-face 1353 . 1356) (nil tag-attr-beg 0 1352 . 1353) (nil tag-attr t 1352 . 1353) (nil tag-name "button" 1352 . 1353) (nil tag-type start 1352 . 1353) (nil font-lock-face web-mode-html-attr-name-face 1352 . 1353) (nil tag-name "button" 1351 . 1352) (nil tag-type start 1351 . 1352) (nil tag-name "button" 1345 . 1351) (nil tag-type start 1345 . 1351) (nil font-lock-face web-mode-html-tag-face 1345 . 1351) (nil tag-name "button" 1344 . 1345) (nil tag-type start 1344 . 1345) (nil tag-beg 17 1344 . 1345) (nil font-lock-face web-mode-html-tag-bracket-face 1344 . 1345) (1344 . 1503)) ((#("<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>
        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 1 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 7 8 (tag-type start tag-name "button") 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 9 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 13 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 21 22 (tag-type start tag-name "button") 22 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 23 27 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 28 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 46 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 47 48 (tag-type start tag-name "button") 48 49 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 49 60 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 61 67 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 67 68 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 68 69 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 76 82 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 82 83 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 93 99 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 99 100 (tag-type start tag-name "button") 100 101 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 101 104 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 104 105 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 105 112 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 112 113 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 113 114 (tag-type start tag-name "button") 114 115 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 115 119 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 119 120 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 120 136 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 136 137 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 137 138 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 150 151 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 151 152 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 152 158 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 158 159 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" rear-nonsticky nil)) . 1344) (undo-tree-id315 . -159) (undo-tree-id316 . -84) (undo-tree-id317 . -159) (undo-tree-id318 . -159) (undo-tree-id319 . -159) (undo-tree-id320 . -159) (undo-tree-id321 . -159) (undo-tree-id322 . -159) (undo-tree-id323 . -159) (undo-tree-id324 . -159) (undo-tree-id325 . -159) (undo-tree-id326 . -159) (undo-tree-id327 . -159) (undo-tree-id328 . -159) (nil tag-name "button" 1344 . 1345) (nil tag-name "button" 1345 . 1351) (nil tag-name "button" 1351 . 1352) (nil tag-name "button" 1352 . 1353) (nil tag-name "button" 1353 . 1356) (nil tag-name "button" 1356 . 1357) (nil tag-name "button" 1357 . 1364) (nil tag-name "button" 1364 . 1365) (nil tag-name "button" 1365 . 1366) (nil tag-name "button" 1366 . 1367) (nil tag-name "button" 1367 . 1371) (nil tag-name "button" 1371 . 1372) (nil tag-name "button" 1372 . 1390) (nil tag-name "button" 1390 . 1391) (nil tag-name "button" 1391 . 1392) (nil tag-name "button" 1392 . 1393) (nil tag-name "button" 1393 . 1404) (nil tag-name "button" 1404 . 1405) (nil tag-name "button" 1405 . 1411) (nil tag-name "button" 1411 . 1412) (nil tag-name "button" 1412 . 1413) (nil tag-name "button" 1418 . 1419) (nil tag-name "button" 1419 . 1420) (nil tag-name "button" 1420 . 1426) (nil tag-name "button" 1426 . 1427) (nil tag-name "button" 1436 . 1437) (nil tag-name "button" 1437 . 1443) (nil tag-name "button" 1443 . 1444) (nil tag-name "button" 1444 . 1445) (nil tag-name "button" 1445 . 1448) (nil tag-name "button" 1448 . 1449) (nil tag-name "button" 1449 . 1456) (nil tag-name "button" 1456 . 1457) (nil tag-name "button" 1457 . 1458) (nil tag-name "button" 1458 . 1459) (nil tag-name "button" 1459 . 1463) (nil tag-name "button" 1463 . 1464) (nil tag-name "button" 1464 . 1480) (nil tag-name "button" 1480 . 1481) (nil tag-name "button" 1481 . 1482) (nil tag-name "button" 1494 . 1495) (nil tag-name "button" 1495 . 1496) (nil tag-name "button" 1496 . 1502) (nil tag-name "button" 1502 . 1503) (nil rear-nonsticky t 1502 . 1503) (t 25699 60218 510325 463000)) (25699 60218 496819 375000) 0 nil])
([nil nil ((36 . 37)) nil (25699 60529 433359 946000) 0 nil])
nil
([nil nil ((460 . 465) (t 25699 60529 449909 646000)) nil (25699 60564 916442 237000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -463) (undo-tree-id513 . -1) (#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -464) (undo-tree-id514 . -1) 465) nil (25699 60564 916440 432000) 0 nil])
([nil nil ((463 . 470)) nil (25699 60564 916436 379000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -467) (undo-tree-id510 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -468) (undo-tree-id511 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -469) (undo-tree-id512 . -1) 470) nil (25699 60564 916434 481000) 0 nil])
([nil nil ((467 . 473)) nil (25699 60564 916427 640000) 0 nil])
([nil nil ((8 . 11)) nil (25699 60564 916426 293000) 0 nil])
([nil nil ((11 . 13)) nil (25699 60564 916425 167000) 0 nil])
([nil nil ((#("-" 0 1 (face web-mode-css-selector-class-face part-side css)) . -12) (undo-tree-id509 . -1) 13) nil (25699 60564 916423 599000) 0 nil])
([nil nil ((12 . 16)) nil (25699 60564 916421 481000) 0 nil])
([nil nil ((16 . 25)) nil (25699 60564 916420 519000) 0 nil])
([nil nil ((#(":" 0 1 (face web-mode-css-selector-class-face part-side css)) . -24) (undo-tree-id508 . -1) 25) nil (25699 60564 916419 364000) 0 nil])
([nil nil ((25 . 27) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -25) (24 . 26)) nil (25699 60564 916416 904000) 0 nil])
([nil nil ((28 . 30) (#("    " 0 4 (face whitespace-trailing part-side css)) . 27) (undo-tree-id506 . -2) (undo-tree-id507 . 4) (29 . 31) (26 . 30)) nil (25699 60564 916415 87000) 0 nil])
([nil nil ((#("    z-index: 9999;
" 0 4 (part-side css) 4 12 (face web-mode-css-property-name-face part-side css) 12 16 (part-side css) 16 17 (part-side css rear-nonsticky t) 17 18 (part-side css) 18 19 (part-side css)) . 61) (undo-tree-id500 . -18) (undo-tree-id501 . -2) (undo-tree-id502 . -19) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -17) (51 . 61) (#("  .card {
" 0 2 (part-side css) 2 7 (face web-mode-css-selector-class-face part-side css) 7 8 (part-side css) 8 9 (face (rainbow-delimiters-depth-1-face) part-side css) 9 10 (part-side css)) . 32) (42 . 61) 44) nil (25699 60592 228033 589000) 0 nil])
([nil nil ((#("
  .cookiesmodal {

  }
    z-index: 9999;" 0 1 (part-side css) 1 3 (part-side css) 3 16 (face web-mode-css-selector-class-face part-side css) 16 17 (part-side css) 17 18 (face (rainbow-delimiters-depth-1-face) part-side css) 18 19 (part-side css) 19 20 (part-side css) 20 22 (part-side css) 22 23 (face (rainbow-delimiters-depth-1-face) part-side css) 23 24 (part-side css) 24 28 (part-side css) 28 36 (face web-mode-css-selector-tag-face part-side css) 36 40 (face web-mode-css-selector-tag-face part-side css) 40 41 (face web-mode-css-selector-tag-face part-side css rear-nonsticky t) 41 42 (part-side css)) . 8) (undo-tree-id542 . -42) (undo-tree-id543 . -10) (undo-tree-id544 . -1) (undo-tree-id545 . -42)) nil (25699 60598 153179 248000) 0 nil] [nil nil ((#("    z-index: 9999;
" 0 4 (part-side css) 4 12 (face web-mode-css-selector-tag-face part-side css) 12 16 (face web-mode-css-selector-tag-face part-side css) 16 17 (face web-mode-css-selector-tag-face part-side css rear-nonsticky t) 17 18 (part-side css) 18 19 (part-side css)) . 51) (undo-tree-id498 . -2) (undo-tree-id499 . -19) (47 . 51) (#("  }
" 0 2 (part-side css) 2 3 (face (rainbow-delimiters-depth-1-face) part-side css) 3 4 (part-side css)) . 28) (32 . 51) 34) ((#("    z-index: 9999;
" 0 4 (part-side css) 4 12 (face web-mode-css-selector-tag-face part-side css) 12 16 (face web-mode-css-selector-tag-face part-side css) 16 17 (face web-mode-css-selector-tag-face part-side css rear-nonsticky t) 17 18 (part-side css) 18 19 (part-side css)) . 32) (undo-tree-id522 . -2) (undo-tree-id523 . -19) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (28 . 32) (#("  }
" 0 2 (part-side css) 2 3 (face (rainbow-delimiters-depth-1-face) part-side css) 3 4 (part-side css)) . 47) (51 . 70)) (25699 60591 554263 518000) 0 nil])
([nil nil ((#("cookiesmodal " 0 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 441) (undo-tree-id540 . -13) (undo-tree-id541 . -13)) nil (25699 60598 153139 74000) 0 nil])
([nil nil ((#("    z-index: 9999;
" 0 4 (part-side css) 4 12 (face web-mode-css-property-name-face part-side css) 12 16 (part-side css) 16 17 (part-side css rear-nonsticky t) 17 18 (part-side css) 18 19 (part-side css)) . 47) (undo-tree-id496 . -2) (undo-tree-id497 . -19) (46 . 47) (#("
" 0 1 (part-side css)) . 27) (28 . 47) 30) ((#("    z-index: 9999;
" 0 4 (part-side css) 4 12 (face web-mode-css-property-name-face part-side css) 12 16 (part-side css) 16 17 (part-side css rear-nonsticky t) 17 18 (part-side css) 18 19 (part-side css)) . 28) (undo-tree-id515 . -19) (undo-tree-id516 . -19) (undo-tree-id517 . -19) (undo-tree-id518 . -19) (undo-tree-id519 . -19) (undo-tree-id520 . -19) (undo-tree-id521 . -19) (27 . 28) (#("
" 0 1 (part-side css)) . 46) (47 . 66)) (25699 60589 265802 220000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button")) . -1083) (undo-tree-id551 . -1) 1084 (t 25699 60598 165742 384000)) nil (25699 60614 23020 97000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 46) (undo-tree-id495 . -1)) ((46 . 47) (t 25699 60564 933821 812000)) (25699 60564 916387 43000) 0 nil])
([nil nil ((#("          </span><a class=\"d-flex align-items-center\" href=\"#\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 53 54 (tag-type start tag-name "a") 54 55 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 55 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 59 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 74 75 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 75 76 (tag-type start tag-name "i") 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 77 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 82 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 105 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 113 114 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1065) (undo-tree-id553 . -116) (undo-tree-id554 . -115) (undo-tree-id555 . -115) (1064 . 1065) ("
" . 948) (949 . 1065)) nil (25699 60622 598181 761000) 0 nil] [nil nil ((#("
          </span><a class=\"d-flex align-items-center\" href=\"#\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>" 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 13 17 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 19 20 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 20 21 (tag-type start tag-name "a") 21 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 22 26 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 26 27 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 27 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 54 55 (tag-type start tag-name "a") 55 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 56 59 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 60 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 75 76 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 76 77 (tag-type start tag-name "i") 77 78 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 78 82 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 82 83 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 83 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 106 107 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 110 111 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 114 115 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 948) (undo-tree-id546 . -116) (undo-tree-id547 . -1) (undo-tree-id548 . -116) (undo-tree-id549 . -116) (undo-tree-id550 . -116)) ((948 . 1064)) (25699 60613 692594 743000) 0 nil])
nil
([nil nil ((#("          </span><a class=\"d-flex align-items-center\" href=\"#\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 53 54 (tag-type start tag-name "a") 54 55 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 55 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 59 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 74 75 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 75 76 (tag-type start tag-name "i") 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 77 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 82 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 105 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 113 114 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1064) (undo-tree-id552 . -116) (814 . 1064) (#("          <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 11 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 14 15 (tag-type start tag-name "div") 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 16 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 21 94 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 97 100 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 100 101 (tag-type void tag-name "img") 101 102 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 102 104 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 104 105 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 105 137 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 137 138 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 138 139 (tag-type void tag-name "img") 139 140 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 140 144 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 144 145 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 145 148 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 148 149 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 150 151 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 151 152 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 152 155 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 155 156 (tag-type start tag-name "span") 156 157 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 157 161 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 161 162 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 162 167 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 167 168 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 168 169 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span")) . 698) (948 . 1064)) nil (25699 60622 598174 366000) 0 nil])
([nil nil ((948 . 960)) ((#("            " 0 12 (face whitespace-trailing)) . 948)) (25699 60613 691833 443000) 0 nil])
([nil nil ((#("          <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 11 14 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 14 15 (tag-type start tag-name "div") 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 16 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 21 94 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 96 97 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 97 100 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 100 101 (tag-type void tag-name "img") 101 102 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 102 104 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 104 105 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 105 137 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 137 138 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 138 139 (tag-type void tag-name "img") 139 140 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 140 144 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 144 145 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 145 148 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 148 149 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 150 151 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 151 152 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 152 155 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 155 156 (face (whitespace-line) tag-type start tag-name "span") 156 157 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 157 161 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 161 162 (face (whitespace-line web-mode-html-attr-equal-face) font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 162 167 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 167 168 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 168 169 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 169 249 (face (whitespace-line))) . 1064) (948 . 1064) (#("          </span><a class=\"d-flex align-items-center\" href=\"#\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 52 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 53 54 (tag-type start tag-name "a") 54 55 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 55 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 59 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 74 75 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 75 76 (tag-type start tag-name "i") 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 77 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 81 82 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 82 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 105 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 106 107 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 111 112 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 113 114 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 698) (814 . 1064) 698) nil (25699 60622 598156 960000) 0 nil])
nil
([nil nil ((#("
              id=\"cookie-notice-accept\"" 0 1 (tag-type start tag-name "butto") 1 15 (tag-type start tag-name "butto") 15 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "butto" tag-attr t tag-attr-beg 0) 16 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "butto" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "butto" tag-attr t) 18 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "butto" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "butto" tag-attr-end 2 tag-attr t rear-nonsticky t)) . 1120) (undo-tree-id556 . -40) (undo-tree-id557 . -1) (undo-tree-id558 . -40) (undo-tree-id559 . -40) (t 25699 60622 613685 598000)) nil (25699 60624 908859 193000) 0 nil])
([nil nil ((1083 . 1084) (t 25699 60624 933680 278000)) nil (25699 60636 507606 778000) 0 nil])
([nil nil ((#("cookie" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 689) (undo-tree-id562 . -6) (undo-tree-id563 . -6) (t 25699 60636 521653 885000)) nil (25699 60705 794596 529000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -688) (undo-tree-id560 . -1) (undo-tree-id561 . -1) 689) nil (25699 60705 794586 888000) 0 nil])
([nil nil ((#("  " 0 2 (tag-type start tag-name "button")) . -1123) (#("  " 0 2 (tag-type start tag-name "button")) . -1088) ("  " . -1068) 429 (t 25699 60705 817501 861000)) nil (25699 60727 309527 295000) 0 nil])
([nil nil ((2727 . 2730) (2701 . 2704) (2626 . 2629) (2568 . 2571) (2479 . 2726) (#("document.getElementById('cookie-notice-accept').addEventListener(\"click\",function() {
    createCookie('cookie-notice-dismissed','true',31);
    // document.getElementById('cookie-notice').style.display = 'none';
    location.reload();
  });" 0 9 (part-side javascript) 9 23 (face web-mode-function-call-face part-side javascript) 23 24 (face (rainbow-delimiters-depth-1-face) part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 25 45 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 45 46 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 46 47 (face (rainbow-delimiters-depth-1-face) part-side javascript) 47 48 (part-side javascript) 48 64 (face web-mode-function-name-face part-side javascript) 64 65 (face (rainbow-delimiters-depth-1-face) part-side javascript) 65 66 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 66 71 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 71 72 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 72 73 (part-side javascript) 73 81 (face web-mode-function-call-face part-side javascript) 81 82 (face (rainbow-delimiters-depth-2-face) part-side javascript) 82 83 (face (rainbow-delimiters-depth-2-face) part-side javascript) 83 84 (part-side javascript) 84 85 (face (rainbow-delimiters-depth-2-face) part-side javascript) 85 86 (part-side javascript) 86 90 (part-side javascript) 90 102 (face web-mode-function-call-face part-side javascript) 102 103 (face (rainbow-delimiters-depth-3-face) part-side javascript) 103 104 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 104 127 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 127 128 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 128 129 (part-side javascript) 129 130 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 130 134 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 134 135 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 135 138 (part-side javascript) 138 139 (face (rainbow-delimiters-depth-3-face) part-side javascript) 139 141 (part-side javascript) 141 145 (part-side javascript) 145 146 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 146 157 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 157 171 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 171 172 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 172 173 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 173 186 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 186 187 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 187 188 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 188 205 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 205 206 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 206 210 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 210 211 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 211 212 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 212 213 (syntax-table (12) part-side javascript) 213 226 (part-side javascript) 226 232 (face web-mode-function-call-face part-side javascript) 232 233 (face (rainbow-delimiters-depth-3-face) part-side javascript) 233 234 (face (rainbow-delimiters-depth-3-face) part-side javascript) 234 236 (part-side javascript) 236 238 (part-side javascript) 238 239 (face (rainbow-delimiters-depth-2-face) part-side javascript) 239 240 (face (rainbow-delimiters-depth-1-face) part-side javascript) 240 241 (part-side javascript)) . 2479) (undo-tree-id564 . -241) (undo-tree-id565 . -86) (undo-tree-id566 . -241) (undo-tree-id567 . -241)) nil (25699 60801 360727 312000) 0 nil])
([nil nil ((#("fade" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 447) (undo-tree-id631 . -4) (undo-tree-id632 . -4)) nil (25699 60809 238130 16000) 0 nil] [nil nil ((#("tabindex=\"-1\" data-backdrop=\"false\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 9 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 13 14 (tag-type start tag-name "div") 14 15 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t tag-attr-beg 1) 15 27 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 28 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 13 tag-attr t rear-nonsticky t)) . 484) (undo-tree-id570 . -35) (undo-tree-id571 . -35) (t 25699 60727 325456 570000)) ((484 . 519)) (25699 60800 943064 840000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -446) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) 447) nil (25699 60809 238121 552000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -483) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 484) ((483 . 484)) (25699 60800 575445 726000) 0 nil])
([nil nil ((551 . 565) (543 . 552) (t 25699 60809 249291 394000)) nil (25699 60871 482790 717000) 0 nil])
([nil nil ((528 . 529)) ((#(" " 0 1 (tag-type start tag-name "div")) . 528) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1)) (25699 60800 221188 358000) 0 nil])
([nil nil ((#("data-backdrop=\"false\"" 0 1 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t tag-attr-beg 1) 1 13 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 14 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 13 tag-attr t rear-nonsticky t)) . 493) (undo-tree-id683 . -21) (undo-tree-id684 . -2) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -21) (undo-tree-id697 . -21) (t 25699 60871 497172 867000)) nil (25699 60929 698080 981000) 0 nil])
([nil nil ((nil rear-nonsticky nil 563 . 564) (nil rear-nonsticky t 563 . 564) (nil tag-attr t 563 . 564) (nil tag-attr-end 13 563 . 564) (nil tag-name "div" 563 . 564) (nil tag-type start 563 . 564) (nil font-lock-face web-mode-html-attr-value-face 563 . 564) (nil tag-attr t 557 . 563) (nil tag-name "div" 557 . 563) (nil tag-type start 557 . 563) (nil font-lock-face web-mode-html-attr-value-face 557 . 563) (nil tag-attr t 556 . 557) (nil tag-name "div" 556 . 557) (nil tag-type start 556 . 557) (nil font-lock-face web-mode-html-attr-equal-face 556 . 557) (nil tag-attr t 544 . 556) (nil tag-name "div" 544 . 556) (nil tag-type start 544 . 556) (nil font-lock-face web-mode-html-attr-custom-face 544 . 556) (nil tag-attr-beg 1 543 . 544) (nil tag-attr t 543 . 544) (nil tag-name "div" 543 . 544) (nil tag-type start 543 . 544) (nil font-lock-face web-mode-html-attr-custom-face 543 . 544) (nil tag-name "div" 542 . 543) (nil tag-type start 542 . 543) (nil tag-attr t 541 . 542) (nil tag-attr-end 8 541 . 542) (nil tag-name "div" 541 . 542) (nil tag-type start 541 . 542) (nil font-lock-face web-mode-html-attr-value-face 541 . 542) (nil tag-attr t 538 . 541) (nil tag-name "div" 538 . 541) (nil tag-type start 538 . 541) (nil font-lock-face web-mode-html-attr-value-face 538 . 541) (nil tag-attr t 537 . 538) (nil tag-name "div" 537 . 538) (nil tag-type start 537 . 538) (nil font-lock-face web-mode-html-attr-equal-face 537 . 538) (nil tag-attr t 530 . 537) (nil tag-name "div" 530 . 537) (nil tag-type start 530 . 537) (nil font-lock-face web-mode-html-attr-name-face 530 . 537) (nil tag-attr-beg 0 529 . 530) (nil tag-attr t 529 . 530) (nil tag-name "div" 529 . 530) (nil tag-type start 529 . 530) (nil font-lock-face web-mode-html-attr-name-face 529 . 530) (529 . 564)) ((#("tabindex=\"-1\" data-backdrop=\"false\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 9 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 13 14 (tag-type start tag-name "div") 14 15 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t tag-attr-beg 1) 15 27 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 28 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 13 tag-attr t rear-nonsticky t)) . 529) (undo-tree-id572 . -35) (undo-tree-id573 . -35) (undo-tree-id574 . -35) (undo-tree-id575 . -35) (undo-tree-id576 . -35) (undo-tree-id577 . -35) (undo-tree-id578 . -35) (undo-tree-id579 . -35) (undo-tree-id580 . -35) (undo-tree-id581 . -35) (undo-tree-id582 . -35) (undo-tree-id583 . -35) (undo-tree-id584 . -35) (undo-tree-id585 . -35) (undo-tree-id586 . -35) (undo-tree-id587 . -35) (undo-tree-id588 . -35) (nil tag-name "div" 529 . 530) (nil tag-name "div" 530 . 537) (nil tag-name "div" 537 . 538) (nil tag-name "div" 538 . 541) (nil tag-name "div" 541 . 542) (nil tag-name "div" 542 . 543) (nil tag-name "div" 543 . 544) (nil tag-name "div" 544 . 556) (nil tag-name "div" 556 . 557) (nil tag-name "div" 557 . 563) (nil tag-name "div" 563 . 564) (nil rear-nonsticky nil 563 . 564) (nil rear-nonsticky t 563 . 564) (t 25699 60772 605363 901000)) (25699 60772 588714 798000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -492) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) 493) nil (25699 60929 697960 795000) 0 nil])
nil
([nil nil ((329 . 331) (#("  " 0 2 (part-side css)) . 328) (undo-tree-id698 . -2) (327 . 331) (t 25699 60929 713066 803000)) nil (25699 60994 617483 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 364 . 365) (nil part-side css 364 . 365) (nil face (rainbow-delimiters-depth-1-face) 364 . 365) (nil part-side css 359 . 364) (nil part-side css 351 . 359) (nil face web-mode-css-property-name-face 351 . 359) (nil part-side css 348 . 351) (nil part-side css 347 . 348) (nil face (rainbow-delimiters-depth-1-face) 347 . 348) (nil part-side css 346 . 347) (nil part-side css 331 . 346) (nil face web-mode-css-selector-class-face 331 . 346) (331 . 365)) nil (25699 61232 502833 304000) 0 nil])
([nil nil ((#("  .modal-backdrop {
  z-index: -1;
}" 0 2 (part-side css) 2 17 (face web-mode-css-selector-class-face part-side css) 17 18 (part-side css) 18 19 (face (rainbow-delimiters-depth-1-face) part-side css) 19 22 (part-side css) 22 30 (face web-mode-css-property-name-face part-side css) 30 35 (part-side css) 35 36 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 329) (undo-tree-id762 . -36) (undo-tree-id763 . -20) (undo-tree-id764 . -2) (undo-tree-id765 . -36)) nil (25699 61242 321256 909000) 0 nil] [nil nil ((366 . 368) (351 . 353) 329) ((#("  " 0 2 (part-side css)) . 351) (#("  " 0 2 (part-side css)) . 366)) (25699 61229 234005 43000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -327) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#("
" 0 1 (part-side css)) . -328) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) 329) nil (25699 61257 407664 899000) 0 nil])
([nil nil ((#("#" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1039) (undo-tree-id726 . -1) (undo-tree-id727 . -1) 1040) ((1039 . 1040)) (25699 61228 818871 131000) 0 nil] [nil nil ((#("style=\"z-index: 9999;\" role=\"document\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 22 23 (tag-type start tag-name "div") 23 24 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 24 27 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 28 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 564) (undo-tree-id722 . -38) (undo-tree-id723 . -14) (undo-tree-id724 . -38) (undo-tree-id725 . -38) (t 25699 60994 632953 353000)) ((564 . 602)) (25699 61148 811832 732000) 0 nil])
([nil nil ((421 . 423) (#("  " 0 2 (part-side css)) . 420) (undo-tree-id809 . -2) (420 . 423) (#("  " 0 2 (part-side css)) . 419) (undo-tree-id810 . -2) (418 . 422) (t 25699 61258 452533 359000)) nil (25699 61337 19428 878000) 0 nil] [nil nil ((#("id=\"cookieModal\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t)) . 448) (undo-tree-id800 . -16) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -16) (t 25699 61242 340557 474000)) ((448 . 464)) (25699 61257 15345 227000) 0 nil])
([nil nil ((1039 . 1049)) ((#("google.com" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . 1039) (undo-tree-id728 . -10) (undo-tree-id729 . -10) (undo-tree-id730 . -10) (undo-tree-id731 . -10) (undo-tree-id732 . -10) (undo-tree-id733 . -10) (undo-tree-id734 . -10) (undo-tree-id735 . -10) (undo-tree-id736 . -10) (undo-tree-id737 . -10) (undo-tree-id738 . -10) (undo-tree-id739 . -10) (undo-tree-id740 . -10) (undo-tree-id741 . -10) (undo-tree-id742 . -10) (undo-tree-id743 . -10) (undo-tree-id744 . -10) (undo-tree-id745 . -10) (undo-tree-id746 . -10) (undo-tree-id747 . -10) (undo-tree-id748 . -10) (undo-tree-id749 . -10) (undo-tree-id750 . -10) (undo-tree-id751 . -10) (undo-tree-id752 . -10) (undo-tree-id753 . -10) (t 25699 61196 944626 349000)) (25699 61196 931246 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 607 . 608) (nil tag-attr t 607 . 608) (nil tag-attr-end 8 607 . 608) (nil tag-name "div" 607 . 608) (nil tag-type start 607 . 608) (nil font-lock-face web-mode-html-attr-value-face 607 . 608) (nil tag-attr t 604 . 607) (nil tag-name "div" 604 . 607) (nil tag-type start 604 . 607) (nil font-lock-face web-mode-html-attr-value-face 604 . 607) (nil tag-attr t 603 . 604) (nil tag-name "div" 603 . 604) (nil tag-type start 603 . 604) (nil font-lock-face web-mode-html-attr-equal-face 603 . 604) (nil tag-attr t 596 . 603) (nil tag-name "div" 596 . 603) (nil tag-type start 596 . 603) (nil font-lock-face web-mode-html-attr-name-face 596 . 603) (nil tag-attr-beg 0 595 . 596) (nil tag-attr t 595 . 596) (nil tag-name "div" 595 . 596) (nil tag-type start 595 . 596) (nil font-lock-face web-mode-html-attr-name-face 595 . 596) (nil tag-name "div" 594 . 595) (nil tag-type start 594 . 595) (nil tag-attr t 593 . 594) (nil tag-attr-end 4 593 . 594) (nil tag-name "div" 593 . 594) (nil tag-type start 593 . 594) (nil font-lock-face web-mode-html-attr-value-face 593 . 594) (nil tag-attr t 586 . 593) (nil tag-name "div" 586 . 593) (nil tag-type start 586 . 593) (nil font-lock-face web-mode-html-attr-value-face 586 . 593) (nil tag-attr t 585 . 586) (nil tag-name "div" 585 . 586) (nil tag-type start 585 . 586) (nil font-lock-face web-mode-html-attr-equal-face 585 . 586) (nil tag-attr t 582 . 585) (nil tag-name "div" 582 . 585) (nil tag-type start 582 . 585) (nil font-lock-face web-mode-html-attr-name-face 582 . 585) (nil tag-attr-beg 0 581 . 582) (nil tag-attr t 581 . 582) (nil tag-name "div" 581 . 582) (nil tag-type start 581 . 582) (nil font-lock-face web-mode-html-attr-name-face 581 . 582) (nil tag-name "div" 580 . 581) (nil tag-type start 580 . 581) (nil tag-attr t 579 . 580) (nil tag-attr-end 2 579 . 580) (nil tag-name "div" 579 . 580) (nil tag-type start 579 . 580) (nil font-lock-face web-mode-html-attr-value-face 579 . 580) (nil tag-attr t 567 . 579) (nil tag-name "div" 567 . 579) (nil tag-type start 567 . 579) (nil font-lock-face web-mode-html-attr-value-face 567 . 579) (nil tag-attr t 566 . 567) (nil tag-name "div" 566 . 567) (nil tag-type start 566 . 567) (nil font-lock-face web-mode-html-attr-equal-face 566 . 567) (nil tag-attr t 565 . 566) (nil tag-name "div" 565 . 566) (nil tag-type start 565 . 566) (nil font-lock-face web-mode-html-attr-name-face 565 . 566) (nil tag-attr-beg 0 564 . 565) (nil tag-attr t 564 . 565) (nil tag-name "div" 564 . 565) (nil tag-type start 564 . 565) (nil font-lock-face web-mode-html-attr-name-face 564 . 565) (564 . 608)) ((#("id=\"cookieModal\" role=\"dialog\" tabindex=\"-1\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 16 17 (tag-type start tag-name "div") 17 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 18 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 22 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 30 31 (tag-type start tag-name "div") 31 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 32 39 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 40 43 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 43 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t rear-nonsticky nil)) . 564) (nil tag-name "div" 564 . 565) (nil tag-name "div" 565 . 566) (nil tag-name "div" 566 . 567) (nil tag-name "div" 567 . 579) (nil tag-name "div" 579 . 580) (nil tag-name "div" 580 . 581) (nil tag-name "div" 581 . 582) (nil tag-name "div" 582 . 585) (nil tag-name "div" 585 . 586) (nil tag-name "div" 586 . 593) (nil tag-name "div" 593 . 594) (nil tag-name "div" 594 . 595) (nil tag-name "div" 595 . 596) (nil tag-name "div" 596 . 603) (nil tag-name "div" 603 . 604) (nil tag-name "div" 604 . 607) (nil tag-name "div" 607 . 608) (nil rear-nonsticky t 607 . 608)) (25699 61148 305376 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 467 . 468) (nil part-side css 467 . 468) (nil face (rainbow-delimiters-depth-1-face) 467 . 468) (nil part-side css 463 . 467) (nil part-side css 455 . 463) (nil face web-mode-css-property-name-face 455 . 463) (nil part-side css 450 . 455) (nil part-side css 449 . 450) (nil face (rainbow-delimiters-depth-1-face) 449 . 450) (nil part-side css 448 . 449) (nil part-side css 433 . 448) (nil face web-mode-css-selector-class-face 433 . 448) (nil part-side css 429 . 433) (nil part-side css 423 . 429) (nil face web-mode-css-selector-class-face 423 . 429) (nil part-side css 420 . 423) (420 . 468)) nil (25699 61337 19411 88000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -447) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) 448) ((447 . 448) (t 25699 61246 944550 564000)) (25699 61246 891794 5000) 0 nil])
nil
([nil nil ((#("
<div class=\"modal\" id=\"cookieModal\" role=\"dialog\" tabindex=\"-1\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 19 20 (tag-type start tag-name "div") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 21 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 23 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 35 36 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 36 37 (tag-type start tag-name "div") 37 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 38 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 41 42 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 42 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 50 51 (tag-type start tag-name "div") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 52 59 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 60 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 63 64 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 64 65 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 470) (undo-tree-id714 . -65) (undo-tree-id715 . -1) (undo-tree-id716 . -50) (undo-tree-id717 . -19) (undo-tree-id718 . -18) (undo-tree-id719 . -64) (undo-tree-id720 . -64) (undo-tree-id721 . -65)) ((470 . 535)) (25699 61147 926377 111000) 0 nil])
([nil nil ((469 . 471) (420 . 422)) nil (25699 61337 19394 835000) 0 nil])
nil
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1225) (undo-tree-id699 . -7) (undo-tree-id700 . -1) (undo-tree-id701 . -7) (undo-tree-id703 . -7) (undo-tree-id705 . -7) (undo-tree-id707 . -7) (undo-tree-id709 . -7) (undo-tree-id711 . -7) (undo-tree-id713 . -7)) ((1225 . 1232) (t 25699 61124 268739 750000)) (25699 61124 251278 139000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -473) (undo-tree-id807 . -2) (undo-tree-id808 . -2) 420) nil (25699 61337 19386 985000) 0 nil])
nil
([nil nil ((#("style=\"z-index: 9999;\" " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 22 23 (tag-type start tag-name "div")) . 577) (undo-tree-id811 . -23) (undo-tree-id812 . -23) (t 25699 61337 36418 30000)) nil (25699 61423 724933 529000) 0 nil])
([nil nil ((#("#" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1029) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 1030 (t 25699 61423 744294 683000)) nil (25699 61573 349185 579000) 0 nil])
([nil nil ((1029 . 1039)) nil (25699 61573 349167 687000) 0 nil])
([nil nil ((996 . 1001) (989 . 998) (t 25699 61573 364089 820000)) nil (25699 61608 991807 3000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -996) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -997) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -998) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -999) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1000) (undo-tree-id834 . -1) 1001) nil (25699 61608 991803 627000) 0 nil])
([nil nil ((996 . 1014)) nil (25699 61608 991786 276000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1013) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) 1014) nil (25699 61608 991780 792000) 0 nil])
([nil nil ((#("tabindex=\"-1\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 9 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t)) . 534) (undo-tree-id887 . -13) (undo-tree-id888 . -13) (undo-tree-id889 . -13) (undo-tree-id890 . -13) (undo-tree-id891 . -13) (undo-tree-id892 . -6) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -2) (undo-tree-id901 . -2) (undo-tree-id902 . -2) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -13) (undo-tree-id911 . -13) (t 25699 61609 8042 216000)) nil (25699 61673 632858 175000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -533) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) 534) nil (25699 61673 632824 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 537 . 538) (nil tag-attr t 537 . 538) (nil tag-attr-end 8 537 . 538) (nil tag-name "div" 537 . 538) (nil tag-type start 537 . 538) (nil font-lock-face web-mode-html-attr-value-face 537 . 538) (nil tag-attr t 534 . 537) (nil tag-name "div" 534 . 537) (nil tag-type start 534 . 537) (nil font-lock-face web-mode-html-attr-value-face 534 . 537) (nil tag-attr t 533 . 534) (nil tag-name "div" 533 . 534) (nil tag-type start 533 . 534) (nil font-lock-face web-mode-html-attr-equal-face 533 . 534) (nil tag-attr t 526 . 533) (nil tag-name "div" 526 . 533) (nil tag-type start 526 . 533) (nil font-lock-face web-mode-html-attr-name-face 526 . 533) (nil tag-attr-beg 0 525 . 526) (nil tag-attr t 525 . 526) (nil tag-name "div" 525 . 526) (nil tag-type start 525 . 526) (nil font-lock-face web-mode-html-attr-name-face 525 . 526) (nil tag-name "div" 524 . 525) (nil tag-type start 524 . 525) (nil tag-attr t 523 . 524) (nil tag-attr-end 13 523 . 524) (nil tag-name "div" 523 . 524) (nil tag-type start 523 . 524) (nil font-lock-face web-mode-html-attr-value-face 523 . 524) (nil tag-attr t 517 . 523) (nil tag-name "div" 517 . 523) (nil tag-type start 517 . 523) (nil font-lock-face web-mode-html-attr-value-face 517 . 523) (nil tag-attr t 516 . 517) (nil tag-name "div" 516 . 517) (nil tag-type start 516 . 517) (nil font-lock-face web-mode-html-attr-equal-face 516 . 517) (nil tag-attr t 504 . 516) (nil tag-name "div" 504 . 516) (nil tag-type start 504 . 516) (nil font-lock-face web-mode-html-attr-custom-face 504 . 516) (nil tag-attr-beg 1 503 . 504) (nil tag-attr t 503 . 504) (nil tag-name "div" 503 . 504) (nil tag-type start 503 . 504) (nil font-lock-face web-mode-html-attr-custom-face 503 . 504) (503 . 538) (t 25699 61673 647956 878000)) nil (25699 61728 685216 961000) 0 nil])
([nil nil ((538 . 539)) nil (25699 61728 685205 885000) 0 nil])
([nil nil ((#("role=\"document\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 5 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 599) (undo-tree-id960 . -15) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -15) (undo-tree-id965 . -15)) nil (25699 61728 685203 735000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -598) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) 599) nil (25699 62099 366680 666000) 0 nil])
([nil nil ((628 . 629) (t 25699 62103 659413 645000)) nil (25699 62114 874768 276000) 0 nil] [nil nil ((1287 . 1292) (1277 . 1280) (1267 . 1268) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -1256) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . -1244) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . -1232) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1168) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1140) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . -1127) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . -980) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . -735) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . -675) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -645) (612 . 613) (578 . 581) (484 . 1331) (#("<div class=\"modal\" data-backdrop=\"false\" tabindex=\"-1\" id=\"cookieModal\" role=\"dialog\">
  <div class=\"modal-dialog\">
    <div class=\"modal-conten\">
      <div class=\"modal-body\">
        <div class=\"d-flex justify-content-center mt-5 h-100\">
          <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

          <button
            onclick=\"setcookie();\"
            class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 18 19 (tag-type start tag-name "div") 19 20 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t tag-attr-beg 1) 20 32 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 33 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 13 tag-attr t) 40 41 (tag-type start tag-name "div") 41 42 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 42 49 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 50 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t rear-nonsticky t) 54 55 (tag-type start tag-name "div") 55 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 56 57 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 57 58 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 58 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 71 72 (tag-type start tag-name "div") 72 73 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 73 76 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 76 77 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 77 84 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 85 86 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 89 90 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 90 93 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 93 94 (tag-type start tag-name "div") 94 95 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 95 99 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 99 100 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 100 113 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 113 114 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 120 121 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 121 124 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 124 125 (tag-type start tag-name "div") 125 126 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 126 130 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 130 131 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 131 144 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 144 145 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 153 154 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 154 157 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 157 158 (tag-type start tag-name "div") 158 159 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 159 163 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 163 164 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 164 175 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 175 176 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 176 177 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 187 190 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 190 191 (tag-type start tag-name "div") 191 192 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 192 196 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 196 197 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 197 238 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 238 239 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 251 252 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 252 255 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 255 256 (tag-type start tag-name "div") 256 257 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 257 261 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 261 262 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 262 335 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 335 336 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 337 338 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 338 341 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 341 342 (tag-type void tag-name "img") 342 343 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 343 345 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 345 346 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 346 378 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 378 379 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 379 380 (tag-type void tag-name "img") 380 381 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 381 385 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 385 386 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 386 389 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 389 390 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 390 391 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 391 392 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 392 393 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 393 396 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 396 397 (tag-type start tag-name "span") 397 398 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 398 402 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 402 403 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 403 408 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 408 409 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 409 410 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 501 502 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 502 503 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 503 507 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 507 508 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 508 509 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 509 510 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 510 511 (tag-type start tag-name "a") 511 512 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 512 516 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 516 517 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 517 535 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 535 536 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 536 537 (tag-type start tag-name "a") 537 538 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 538 542 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 542 543 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 543 549 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 549 550 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 550 551 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 551 552 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 552 569 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 569 570 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 570 571 (tag-type start tag-name "a") 571 572 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 572 575 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 575 576 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 576 587 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 587 588 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 588 589 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 599 600 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 600 601 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 601 602 (tag-type start tag-name "i") 602 603 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 603 607 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 607 608 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 608 631 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 631 632 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 632 633 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 633 634 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 634 635 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 635 636 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 636 637 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 637 638 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 638 639 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 639 640 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 640 641 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 653 654 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 654 660 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 660 661 (tag-type start tag-name "button") 661 673 (tag-type start tag-name "button") 673 674 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8) 674 680 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 680 681 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 681 682 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 682 690 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 690 691 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t rear-nonsticky t) 691 693 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 693 694 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 694 695 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 7 tag-attr t rear-nonsticky t) 695 708 (tag-type start tag-name "button") 708 709 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 709 713 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 713 714 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 714 737 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 737 738 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 738 739 (tag-type start tag-name "button") 739 740 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 740 743 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 743 744 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 744 751 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 751 752 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 752 753 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 757 758 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 758 759 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 759 765 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 765 766 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 777 778 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 778 779 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 779 782 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 782 783 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 792 793 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 793 794 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 794 797 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 797 798 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t) 805 806 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 806 807 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 807 810 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 810 811 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 816 817 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 817 818 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 818 821 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 821 822 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 825 826 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 826 827 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 827 830 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 830 831 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t) 832 833 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 833 834 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 834 837 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 837 838 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 484) (undo-tree-id968 . -838) (undo-tree-id969 . -526) (undo-tree-id971 . -114) (undo-tree-id973 . -85) (undo-tree-id975 . -87) (undo-tree-id977 . -114) (undo-tree-id979 . -19) (undo-tree-id981 . -838) (t 25699 61728 699885 139000)) ((484 . 1322) (#("<!-- <div class=\"modal\" data-backdrop=\"false\" tabindex=\"-1\" id=\"cookieModal\" role=\"dialog\">
  <div class=\"modal-dialog\">
    <div class=\"modal-conten\">
      <div class=\"modal-body\">
        <div class=\"d-flex justify-content-center mt-5 h-100\">
          <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

          <button
            onclick=\"setcookie();\"
            class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 157 (font-lock-face web-mode-comment-face tag-type comment) 157 158 (font-lock-face web-mode-comment-face tag-type comment) 158 188 (font-lock-face web-mode-comment-face tag-type comment) 188 191 (font-lock-face web-mode-comment-face tag-type comment) 191 251 (font-lock-face web-mode-comment-face tag-type comment) 251 256 (font-lock-face web-mode-comment-face tag-type comment) 256 396 (font-lock-face web-mode-comment-face tag-type comment) 396 401 (face (whitespace-line web-mode-comment-face) font-lock-face web-mode-comment-face tag-type comment) 401 495 (face (whitespace-line web-mode-comment-face) font-lock-face web-mode-comment-face tag-type comment) 495 501 (font-lock-face web-mode-comment-face tag-type comment) 501 506 (font-lock-face web-mode-comment-face tag-type comment) 506 653 (font-lock-face web-mode-comment-face tag-type comment) 653 658 (font-lock-face web-mode-comment-face tag-type comment) 658 671 (font-lock-face web-mode-comment-face tag-type comment) 671 678 (font-lock-face web-mode-comment-face tag-type comment) 678 706 (font-lock-face web-mode-comment-face tag-type comment) 706 713 (font-lock-face web-mode-comment-face tag-type comment) 713 777 (font-lock-face web-mode-comment-face tag-type comment) 777 782 (font-lock-face web-mode-comment-face tag-type comment) 782 794 (font-lock-face web-mode-comment-face tag-type comment) 794 797 (font-lock-face web-mode-comment-face tag-type comment) 797 809 (font-lock-face web-mode-comment-face tag-type comment) 809 810 (font-lock-face web-mode-comment-face tag-type comment) 810 846 (font-lock-face web-mode-comment-face tag-type comment) 846 847 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 484) (undo-tree-id1341 . -847) (undo-tree-id1342 . -837) (undo-tree-id1343 . -847) (undo-tree-id1344 . -847) (undo-tree-id1345 . -771) (undo-tree-id1346 . -847) (undo-tree-id1347 . -847) (undo-tree-id1348 . -847) (undo-tree-id1349 . -847) (undo-tree-id1350 . -847) (undo-tree-id1351 . -847) (undo-tree-id1352 . -847) (undo-tree-id1353 . -847) (undo-tree-id1354 . -847) (undo-tree-id1355 . -847) (undo-tree-id1356 . -847) (undo-tree-id1357 . -847) (undo-tree-id1358 . -847) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 578) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 612) (645 . 646) (675 . 678) (735 . 740) (980 . 985) (1127 . 1132) (1140 . 1147) (1168 . 1175) (1232 . 1237) (1244 . 1247) (1256 . 1257) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 1267) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 1277) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1287)) (25699 62098 743077 63000) 0 nil])
([nil nil ((598 . 599) (t 25699 62114 899399 853000)) nil (25699 62127 195024 291000) 0 nil])
([nil nil ((1302 . 1306)) (("



" . 1302) (undo-tree-id1301 . -4) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) (undo-tree-id1311 . -3) (undo-tree-id1312 . -3) (undo-tree-id1313 . -4) (undo-tree-id1314 . -3) (undo-tree-id1315 . -3) (undo-tree-id1316 . -3) (undo-tree-id1317 . -3) (undo-tree-id1318 . -3) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3) (undo-tree-id1323 . -3) (undo-tree-id1324 . -3) (undo-tree-id1325 . -3) (undo-tree-id1326 . -3) (undo-tree-id1327 . -3) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -4) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -4)) (25699 62098 601293 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 611 . 612) (nil tag-attr t 611 . 612) (nil tag-attr-end 4 611 . 612) (nil tag-name "div" 611 . 612) (nil tag-type start 611 . 612) (nil font-lock-face web-mode-html-attr-value-face 611 . 612) (nil tag-attr t 604 . 611) (nil tag-name "div" 604 . 611) (nil tag-type start 604 . 611) (nil font-lock-face web-mode-html-attr-value-face 604 . 611) (nil tag-attr t 603 . 604) (nil tag-name "div" 603 . 604) (nil tag-type start 603 . 604) (nil font-lock-face web-mode-html-attr-equal-face 603 . 604) (nil tag-attr t 600 . 603) (nil tag-name "div" 600 . 603) (nil tag-type start 600 . 603) (nil font-lock-face web-mode-html-attr-name-face 600 . 603) (nil tag-attr-beg 0 599 . 600) (nil tag-attr t 599 . 600) (nil tag-name "div" 599 . 600) (nil tag-type start 599 . 600) (nil font-lock-face web-mode-html-attr-name-face 599 . 600) (599 . 612)) nil (25699 62127 195021 677000) 0 nil])
([nil nil (("
" . -1305) (undo-tree-id966 . -1) (undo-tree-id967 . -1) 1306) ((1305 . 1306)) (25699 62098 536569 707000) 0 nil])
([nil nil ((#("dialog" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 605) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6)) nil (25699 62127 195013 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2003 . 2004) (nil tag-name "div" 2003 . 2004) (nil tag-type end 2003 . 2004) (nil tag-end t 2003 . 2004) (nil font-lock-face web-mode-html-tag-bracket-face 2003 . 2004) (nil tag-name "div" 2000 . 2003) (nil tag-type end 2000 . 2003) (nil font-lock-face web-mode-html-tag-face 2000 . 2003) (nil tag-name "div" 1999 . 2000) (nil tag-type end 1999 . 2000) (nil font-lock-face web-mode-html-tag-bracket-face 1999 . 2000) (nil tag-name "div" 1998 . 1999) (nil tag-type end 1998 . 1999) (nil tag-beg 20 1998 . 1999) (nil font-lock-face web-mode-html-tag-bracket-face 1998 . 1999) (nil tag-name "div" 1996 . 1997) (nil tag-type end 1996 . 1997) (nil tag-end t 1996 . 1997) (nil font-lock-face web-mode-html-tag-bracket-face 1996 . 1997) (nil tag-name "div" 1993 . 1996) (nil tag-type end 1993 . 1996) (nil font-lock-face web-mode-html-tag-face 1993 . 1996) (nil tag-name "div" 1992 . 1993) (nil tag-type end 1992 . 1993) (nil font-lock-face web-mode-html-tag-bracket-face 1992 . 1993) (nil tag-name "div" 1991 . 1992) (nil tag-type end 1991 . 1992) (nil tag-beg 20 1991 . 1992) (nil font-lock-face web-mode-html-tag-bracket-face 1991 . 1992) (nil tag-name "div" 1987 . 1988) (nil tag-type end 1987 . 1988) (nil tag-end t 1987 . 1988) (nil font-lock-face web-mode-html-tag-bracket-face 1987 . 1988) (nil tag-name "div" 1984 . 1987) (nil tag-type end 1984 . 1987) (nil font-lock-face web-mode-html-tag-face 1984 . 1987) (nil tag-name "div" 1983 . 1984) (nil tag-type end 1983 . 1984) (nil font-lock-face web-mode-html-tag-bracket-face 1983 . 1984) (nil tag-name "div" 1982 . 1983) (nil tag-type end 1982 . 1983) (nil tag-beg 20 1982 . 1983) (nil font-lock-face web-mode-html-tag-bracket-face 1982 . 1983) (nil tag-name "div" 1976 . 1977) (nil tag-type end 1976 . 1977) (nil tag-end t 1976 . 1977) (nil font-lock-face web-mode-html-tag-bracket-face 1976 . 1977) (nil tag-name "div" 1973 . 1976) (nil tag-type end 1973 . 1976) (nil font-lock-face web-mode-html-tag-face 1973 . 1976) (nil tag-name "div" 1972 . 1973) (nil tag-type end 1972 . 1973) (nil font-lock-face web-mode-html-tag-bracket-face 1972 . 1973) (nil tag-name "div" 1971 . 1972) (nil tag-type end 1971 . 1972) (nil tag-beg 20 1971 . 1972) (nil font-lock-face web-mode-html-tag-bracket-face 1971 . 1972) (nil tag-name "button" 1963 . 1964) (nil tag-type end 1963 . 1964) (nil tag-end t 1963 . 1964) (nil font-lock-face web-mode-html-tag-bracket-face 1963 . 1964) (nil tag-name "button" 1957 . 1963) (nil tag-type end 1957 . 1963) (nil font-lock-face web-mode-html-tag-face 1957 . 1963) (nil tag-name "button" 1956 . 1957) (nil tag-type end 1956 . 1957) (nil font-lock-face web-mode-html-tag-bracket-face 1956 . 1957) (nil tag-name "button" 1955 . 1956) (nil tag-type end 1955 . 1956) (nil tag-beg 20 1955 . 1956) (nil font-lock-face web-mode-html-tag-bracket-face 1955 . 1956) (nil tag-name "button" 1949 . 1950) (nil tag-type start 1949 . 1950) (nil tag-end t 1949 . 1950) (nil font-lock-face web-mode-html-tag-bracket-face 1949 . 1950) (nil tag-attr t 1948 . 1949) (nil tag-attr-end 12 1948 . 1949) (nil tag-name "button" 1948 . 1949) (nil tag-type start 1948 . 1949) (nil font-lock-face web-mode-html-attr-value-face 1948 . 1949) (nil tag-attr t 1942 . 1948) (nil tag-name "button" 1942 . 1948) (nil tag-type start 1942 . 1948) (nil font-lock-face web-mode-html-attr-value-face 1942 . 1948) (nil tag-attr t 1941 . 1942) (nil tag-name "button" 1941 . 1942) (nil tag-type start 1941 . 1942) (nil font-lock-face web-mode-html-attr-equal-face 1941 . 1942) (nil tag-attr t 1930 . 1941) (nil tag-name "button" 1930 . 1941) (nil tag-type start 1930 . 1941) (nil font-lock-face web-mode-html-attr-custom-face 1930 . 1941) (nil tag-attr-beg 1 1929 . 1930) (nil tag-attr t 1929 . 1930) (nil tag-name "button" 1929 . 1930) (nil tag-type start 1929 . 1930) (nil font-lock-face web-mode-html-attr-custom-face 1929 . 1930) (nil tag-name "button" 1928 . 1929) (nil tag-type start 1928 . 1929) (nil tag-attr t 1927 . 1928) (nil tag-attr-end 5 1927 . 1928) (nil tag-name "button" 1927 . 1928) (nil tag-type start 1927 . 1928) (nil font-lock-face web-mode-html-attr-value-face 1927 . 1928) (nil tag-attr t 1909 . 1927) (nil tag-name "button" 1909 . 1927) (nil tag-type start 1909 . 1927) (nil font-lock-face web-mode-html-attr-value-face 1909 . 1927) (nil tag-attr t 1908 . 1909) (nil tag-name "button" 1908 . 1909) (nil tag-type start 1908 . 1909) (nil font-lock-face web-mode-html-attr-equal-face 1908 . 1909) (nil tag-attr t 1904 . 1908) (nil tag-name "button" 1904 . 1908) (nil tag-type start 1904 . 1908) (nil font-lock-face web-mode-html-attr-name-face 1904 . 1908) (nil tag-attr-beg 0 1903 . 1904) (nil tag-attr t 1903 . 1904) (nil tag-name "button" 1903 . 1904) (nil tag-type start 1903 . 1904) (nil font-lock-face web-mode-html-attr-name-face 1903 . 1904) (nil tag-name "button" 1902 . 1903) (nil tag-type start 1902 . 1903) (nil tag-attr t 1901 . 1902) (nil tag-attr-end 4 1901 . 1902) (nil tag-name "button" 1901 . 1902) (nil tag-type start 1901 . 1902) (nil font-lock-face web-mode-html-attr-value-face 1901 . 1902) (nil tag-attr t 1894 . 1901) (nil tag-name "button" 1894 . 1901) (nil tag-type start 1894 . 1901) (nil font-lock-face web-mode-html-attr-value-face 1894 . 1901) (nil tag-attr t 1893 . 1894) (nil tag-name "button" 1893 . 1894) (nil tag-type start 1893 . 1894) (nil font-lock-face web-mode-html-attr-equal-face 1893 . 1894) (nil tag-attr t 1890 . 1893) (nil tag-name "button" 1890 . 1893) (nil tag-type start 1890 . 1893) (nil font-lock-face web-mode-html-attr-name-face 1890 . 1893) (nil tag-attr-beg 0 1889 . 1890) (nil tag-attr t 1889 . 1890) (nil tag-name "button" 1889 . 1890) (nil tag-type start 1889 . 1890) (nil font-lock-face web-mode-html-attr-name-face 1889 . 1890) (nil tag-name "button" 1888 . 1889) (nil tag-type start 1888 . 1889) (nil tag-name "button" 1882 . 1888) (nil tag-type start 1882 . 1888) (nil font-lock-face web-mode-html-tag-face 1882 . 1888) (nil tag-name "button" 1881 . 1882) (nil tag-type start 1881 . 1882) (nil tag-beg 17 1881 . 1882) (nil font-lock-face web-mode-html-tag-bracket-face 1881 . 1882) (nil tag-name "button" 1871 . 1872) (nil tag-type end 1871 . 1872) (nil tag-end t 1871 . 1872) (nil font-lock-face web-mode-html-tag-bracket-face 1871 . 1872) (nil tag-name "button" 1865 . 1871) (nil tag-type end 1865 . 1871) (nil font-lock-face web-mode-html-tag-face 1865 . 1871) (nil tag-name "button" 1864 . 1865) (nil tag-type end 1864 . 1865) (nil font-lock-face web-mode-html-tag-bracket-face 1864 . 1865) (nil tag-name "button" 1863 . 1864) (nil tag-type end 1863 . 1864) (nil tag-beg 20 1863 . 1864) (nil font-lock-face web-mode-html-tag-bracket-face 1863 . 1864) (nil tag-name "button" 1850 . 1851) (nil tag-type start 1850 . 1851) (nil tag-end t 1850 . 1851) (nil font-lock-face web-mode-html-tag-bracket-face 1850 . 1851) (nil tag-attr t 1849 . 1850) (nil tag-attr-end 5 1849 . 1850) (nil tag-name "button" 1849 . 1850) (nil tag-type start 1849 . 1850) (nil font-lock-face web-mode-html-attr-value-face 1849 . 1850) (nil tag-attr t 1833 . 1849) (nil tag-name "button" 1833 . 1849) (nil tag-type start 1833 . 1849) (nil font-lock-face web-mode-html-attr-value-face 1833 . 1849) (nil tag-attr t 1832 . 1833) (nil tag-name "button" 1832 . 1833) (nil tag-type start 1832 . 1833) (nil font-lock-face web-mode-html-attr-equal-face 1832 . 1833) (nil tag-attr t 1828 . 1832) (nil tag-name "button" 1828 . 1832) (nil tag-type start 1828 . 1832) (nil font-lock-face web-mode-html-attr-name-face 1828 . 1832) (nil tag-attr-beg 0 1827 . 1828) (nil tag-attr t 1827 . 1828) (nil tag-name "button" 1827 . 1828) (nil tag-type start 1827 . 1828) (nil font-lock-face web-mode-html-attr-name-face 1827 . 1828) (nil tag-name "button" 1826 . 1827) (nil tag-type start 1826 . 1827) (nil tag-attr t 1825 . 1826) (nil tag-attr-end 4 1825 . 1826) (nil tag-name "button" 1825 . 1826) (nil tag-type start 1825 . 1826) (nil font-lock-face web-mode-html-attr-value-face 1825 . 1826) (nil tag-attr t 1818 . 1825) (nil tag-name "button" 1818 . 1825) (nil tag-type start 1818 . 1825) (nil font-lock-face web-mode-html-attr-value-face 1818 . 1825) (nil tag-attr t 1817 . 1818) (nil tag-name "button" 1817 . 1818) (nil tag-type start 1817 . 1818) (nil font-lock-face web-mode-html-attr-equal-face 1817 . 1818) (nil tag-attr t 1814 . 1817) (nil tag-name "button" 1814 . 1817) (nil tag-type start 1814 . 1817) (nil font-lock-face web-mode-html-attr-name-face 1814 . 1817) (nil tag-attr-beg 0 1813 . 1814) (nil tag-attr t 1813 . 1814) (nil tag-name "button" 1813 . 1814) (nil tag-type start 1813 . 1814) (nil font-lock-face web-mode-html-attr-name-face 1813 . 1814) (nil tag-name "button" 1812 . 1813) (nil tag-type start 1812 . 1813) (nil tag-name "button" 1806 . 1812) (nil tag-type start 1806 . 1812) (nil font-lock-face web-mode-html-tag-face 1806 . 1812) (nil tag-name "button" 1805 . 1806) (nil tag-type start 1805 . 1806) (nil tag-beg 17 1805 . 1806) (nil font-lock-face web-mode-html-tag-bracket-face 1805 . 1806) (nil tag-name "div" 1795 . 1796) (nil tag-type start 1795 . 1796) (nil tag-end t 1795 . 1796) (nil font-lock-face web-mode-html-tag-bracket-face 1795 . 1796) (nil tag-attr t 1794 . 1795) (nil tag-attr-end 5 1794 . 1795) (nil tag-name "div" 1794 . 1795) (nil tag-type start 1794 . 1795) (nil font-lock-face web-mode-html-attr-value-face 1794 . 1795) (nil tag-attr t 1781 . 1794) (nil tag-name "div" 1781 . 1794) (nil tag-type start 1781 . 1794) (nil font-lock-face web-mode-html-attr-value-face 1781 . 1794) (nil tag-attr t 1780 . 1781) (nil tag-name "div" 1780 . 1781) (nil tag-type start 1780 . 1781) (nil font-lock-face web-mode-html-attr-equal-face 1780 . 1781) (nil tag-attr t 1776 . 1780) (nil tag-name "div" 1776 . 1780) (nil tag-type start 1776 . 1780) (nil font-lock-face web-mode-html-attr-name-face 1776 . 1780) (nil tag-attr-beg 0 1775 . 1776) (nil tag-attr t 1775 . 1776) (nil tag-name "div" 1775 . 1776) (nil tag-type start 1775 . 1776) (nil font-lock-face web-mode-html-attr-name-face 1775 . 1776) (nil tag-name "div" 1774 . 1775) (nil tag-type start 1774 . 1775) (nil tag-name "div" 1771 . 1774) (nil tag-type start 1771 . 1774) (nil font-lock-face web-mode-html-tag-face 1771 . 1774) (nil tag-name "div" 1770 . 1771) (nil tag-type start 1770 . 1771) (nil tag-beg 17 1770 . 1771) (nil font-lock-face web-mode-html-tag-bracket-face 1770 . 1771) (nil tag-name "div" 1762 . 1763) (nil tag-type end 1762 . 1763) (nil tag-end t 1762 . 1763) (nil font-lock-face web-mode-html-tag-bracket-face 1762 . 1763) (nil tag-name "div" 1759 . 1762) (nil tag-type end 1759 . 1762) (nil font-lock-face web-mode-html-tag-face 1759 . 1762) (nil tag-name "div" 1758 . 1759) (nil tag-type end 1758 . 1759) (nil font-lock-face web-mode-html-tag-bracket-face 1758 . 1759) (nil tag-name "div" 1757 . 1758) (nil tag-type end 1757 . 1758) (nil tag-beg 20 1757 . 1758) (nil font-lock-face web-mode-html-tag-bracket-face 1757 . 1758) (nil tag-name "p" 1749 . 1750) (nil tag-type end 1749 . 1750) (nil tag-end t 1749 . 1750) (nil font-lock-face web-mode-html-tag-bracket-face 1749 . 1750) (nil tag-name "p" 1748 . 1749) (nil tag-type end 1748 . 1749) (nil font-lock-face web-mode-html-tag-face 1748 . 1749) (nil tag-name "p" 1747 . 1748) (nil tag-type end 1747 . 1748) (nil font-lock-face web-mode-html-tag-bracket-face 1747 . 1748) (nil tag-name "p" 1746 . 1747) (nil tag-type end 1746 . 1747) (nil tag-beg 20 1746 . 1747) (nil font-lock-face web-mode-html-tag-bracket-face 1746 . 1747) (nil tag-name "p" 1719 . 1720) (nil tag-type start 1719 . 1720) (nil tag-end t 1719 . 1720) (nil font-lock-face web-mode-html-tag-bracket-face 1719 . 1720) (nil tag-name "p" 1718 . 1719) (nil tag-type start 1718 . 1719) (nil font-lock-face web-mode-html-tag-face 1718 . 1719) (nil tag-name "p" 1717 . 1718) (nil tag-type start 1717 . 1718) (nil tag-beg 16 1717 . 1718) (nil font-lock-face web-mode-html-tag-bracket-face 1717 . 1718) (nil tag-name "div" 1707 . 1708) (nil tag-type start 1707 . 1708) (nil tag-end t 1707 . 1708) (nil font-lock-face web-mode-html-tag-bracket-face 1707 . 1708) (nil tag-attr t 1706 . 1707) (nil tag-attr-end 5 1706 . 1707) (nil tag-name "div" 1706 . 1707) (nil tag-type start 1706 . 1707) (nil font-lock-face web-mode-html-attr-value-face 1706 . 1707) (nil tag-attr t 1695 . 1706) (nil tag-name "div" 1695 . 1706) (nil tag-type start 1695 . 1706) (nil font-lock-face web-mode-html-attr-value-face 1695 . 1706) (nil tag-attr t 1694 . 1695) (nil tag-name "div" 1694 . 1695) (nil tag-type start 1694 . 1695) (nil font-lock-face web-mode-html-attr-equal-face 1694 . 1695) (nil tag-attr t 1690 . 1694) (nil tag-name "div" 1690 . 1694) (nil tag-type start 1690 . 1694) (nil font-lock-face web-mode-html-attr-name-face 1690 . 1694) (nil tag-attr-beg 0 1689 . 1690) (nil tag-attr t 1689 . 1690) (nil tag-name "div" 1689 . 1690) (nil tag-type start 1689 . 1690) (nil font-lock-face web-mode-html-attr-name-face 1689 . 1690) (nil tag-name "div" 1688 . 1689) (nil tag-type start 1688 . 1689) (nil tag-name "div" 1685 . 1688) (nil tag-type start 1685 . 1688) (nil font-lock-face web-mode-html-tag-face 1685 . 1688) (nil tag-name "div" 1684 . 1685) (nil tag-type start 1684 . 1685) (nil tag-beg 17 1684 . 1685) (nil font-lock-face web-mode-html-tag-bracket-face 1684 . 1685) (nil tag-name "div" 1676 . 1677) (nil tag-type end 1676 . 1677) (nil tag-end t 1676 . 1677) (nil font-lock-face web-mode-html-tag-bracket-face 1676 . 1677) (nil tag-name "div" 1673 . 1676) (nil tag-type end 1673 . 1676) (nil font-lock-face web-mode-html-tag-face 1673 . 1676) (nil tag-name "div" 1672 . 1673) (nil tag-type end 1672 . 1673) (nil font-lock-face web-mode-html-tag-bracket-face 1672 . 1673) (nil tag-name "div" 1671 . 1672) (nil tag-type end 1671 . 1672) (nil tag-beg 20 1671 . 1672) (nil font-lock-face web-mode-html-tag-bracket-face 1671 . 1672) (nil tag-name "button" 1663 . 1664) (nil tag-type end 1663 . 1664) (nil tag-end t 1663 . 1664) (nil font-lock-face web-mode-html-tag-bracket-face 1663 . 1664) (nil tag-name "button" 1657 . 1663) (nil tag-type end 1657 . 1663) (nil font-lock-face web-mode-html-tag-face 1657 . 1663) (nil tag-name "button" 1656 . 1657) (nil tag-type end 1656 . 1657) (nil font-lock-face web-mode-html-tag-bracket-face 1656 . 1657) (nil tag-name "button" 1655 . 1656) (nil tag-type end 1655 . 1656) (nil tag-beg 20 1655 . 1656) (nil font-lock-face web-mode-html-tag-bracket-face 1655 . 1656) (nil tag-name "span" 1645 . 1646) (nil tag-type end 1645 . 1646) (nil tag-end t 1645 . 1646) (nil font-lock-face web-mode-html-tag-bracket-face 1645 . 1646) (nil tag-name "span" 1641 . 1645) (nil tag-type end 1641 . 1645) (nil font-lock-face web-mode-html-tag-face 1641 . 1645) (nil tag-name "span" 1640 . 1641) (nil tag-type end 1640 . 1641) (nil font-lock-face web-mode-html-tag-bracket-face 1640 . 1641) (nil tag-name "span" 1639 . 1640) (nil tag-type end 1639 . 1640) (nil tag-beg 20 1639 . 1640) (nil font-lock-face web-mode-html-tag-bracket-face 1639 . 1640) (nil font-lock-face (web-mode-html-entity-face) 1632 . 1639) (nil tag-name "span" 1631 . 1632) (nil tag-type start 1631 . 1632) (nil tag-end t 1631 . 1632) (nil font-lock-face web-mode-html-tag-bracket-face 1631 . 1632) (nil tag-attr t 1630 . 1631) (nil tag-attr-end 11 1630 . 1631) (nil tag-name "span" 1630 . 1631) (nil tag-type start 1630 . 1631) (nil font-lock-face web-mode-html-attr-value-face 1630 . 1631) (nil tag-attr t 1625 . 1630) (nil tag-name "span" 1625 . 1630) (nil tag-type start 1625 . 1630) (nil font-lock-face web-mode-html-attr-value-face 1625 . 1630) (nil tag-attr t 1624 . 1625) (nil tag-name "span" 1624 . 1625) (nil tag-type start 1624 . 1625) (nil font-lock-face web-mode-html-attr-equal-face 1624 . 1625) (nil tag-attr t 1614 . 1624) (nil tag-name "span" 1614 . 1624) (nil tag-type start 1614 . 1624) (nil font-lock-face web-mode-html-attr-name-face 1614 . 1624) (nil tag-attr-beg 0 1613 . 1614) (nil tag-attr t 1613 . 1614) (nil tag-name "span" 1613 . 1614) (nil tag-type start 1613 . 1614) (nil font-lock-face web-mode-html-attr-name-face 1613 . 1614) (nil tag-name "span" 1612 . 1613) (nil tag-type start 1612 . 1613) (nil tag-name "span" 1608 . 1612) (nil tag-type start 1608 . 1612) (nil font-lock-face web-mode-html-tag-face 1608 . 1612) (nil tag-name "span" 1607 . 1608) (nil tag-type start 1607 . 1608) (nil tag-beg 17 1607 . 1608) (nil font-lock-face web-mode-html-tag-bracket-face 1607 . 1608) (nil tag-name "button" 1595 . 1596) (nil tag-type start 1595 . 1596) (nil tag-end t 1595 . 1596) (nil font-lock-face web-mode-html-tag-bracket-face 1595 . 1596) (nil tag-attr t 1594 . 1595) (nil tag-attr-end 10 1594 . 1595) (nil tag-name "button" 1594 . 1595) (nil tag-type start 1594 . 1595) (nil font-lock-face web-mode-html-attr-value-face 1594 . 1595) (nil tag-attr t 1588 . 1594) (nil tag-name "button" 1588 . 1594) (nil tag-type start 1588 . 1594) (nil font-lock-face web-mode-html-attr-value-face 1588 . 1594) (nil tag-attr t 1587 . 1588) (nil tag-name "button" 1587 . 1588) (nil tag-type start 1587 . 1588) (nil font-lock-face web-mode-html-attr-equal-face 1587 . 1588) (nil tag-attr t 1578 . 1587) (nil tag-name "button" 1578 . 1587) (nil tag-type start 1578 . 1587) (nil font-lock-face web-mode-html-attr-name-face 1578 . 1587) (nil tag-attr-beg 0 1577 . 1578) (nil tag-attr t 1577 . 1578) (nil tag-name "button" 1577 . 1578) (nil tag-type start 1577 . 1578) (nil font-lock-face web-mode-html-attr-name-face 1577 . 1578) (nil tag-name "button" 1576 . 1577) (nil tag-type start 1576 . 1577) (nil tag-attr t 1575 . 1576) (nil tag-attr-end 12 1575 . 1576) (nil tag-name "button" 1575 . 1576) (nil tag-type start 1575 . 1576) (nil font-lock-face web-mode-html-attr-value-face 1575 . 1576) (nil tag-attr t 1569 . 1575) (nil tag-name "button" 1569 . 1575) (nil tag-type start 1569 . 1575) (nil font-lock-face web-mode-html-attr-value-face 1569 . 1575) (nil tag-attr t 1568 . 1569) (nil tag-name "button" 1568 . 1569) (nil tag-type start 1568 . 1569) (nil font-lock-face web-mode-html-attr-equal-face 1568 . 1569) (nil tag-attr t 1557 . 1568) (nil tag-name "button" 1557 . 1568) (nil tag-type start 1557 . 1568) (nil font-lock-face web-mode-html-attr-custom-face 1557 . 1568) (nil tag-attr-beg 1 1556 . 1557) (nil tag-attr t 1556 . 1557) (nil tag-name "button" 1556 . 1557) (nil tag-type start 1556 . 1557) (nil font-lock-face web-mode-html-attr-custom-face 1556 . 1557) (nil tag-name "button" 1555 . 1556) (nil tag-type start 1555 . 1556) (nil tag-attr t 1554 . 1555) (nil tag-attr-end 5 1554 . 1555) (nil tag-name "button" 1554 . 1555) (nil tag-type start 1554 . 1555) (nil font-lock-face web-mode-html-attr-value-face 1554 . 1555) (nil tag-attr t 1548 . 1554) (nil tag-name "button" 1548 . 1554) (nil tag-type start 1548 . 1554) (nil font-lock-face web-mode-html-attr-value-face 1548 . 1554) (nil tag-attr t 1547 . 1548) (nil tag-name "button" 1547 . 1548) (nil tag-type start 1547 . 1548) (nil font-lock-face web-mode-html-attr-equal-face 1547 . 1548) (nil tag-attr t 1543 . 1547) (nil tag-name "button" 1543 . 1547) (nil tag-type start 1543 . 1547) (nil font-lock-face web-mode-html-attr-name-face 1543 . 1547) (nil tag-attr-beg 0 1542 . 1543) (nil tag-attr t 1542 . 1543) (nil tag-name "button" 1542 . 1543) (nil tag-type start 1542 . 1543) (nil font-lock-face web-mode-html-attr-name-face 1542 . 1543) (nil tag-name "button" 1541 . 1542) (nil tag-type start 1541 . 1542) (nil tag-attr t 1540 . 1541) (nil tag-attr-end 4 1540 . 1541) (nil tag-name "button" 1540 . 1541) (nil tag-type start 1540 . 1541) (nil font-lock-face web-mode-html-attr-value-face 1540 . 1541) (nil tag-attr t 1533 . 1540) (nil tag-name "button" 1533 . 1540) (nil tag-type start 1533 . 1540) (nil font-lock-face web-mode-html-attr-value-face 1533 . 1540) (nil tag-attr t 1532 . 1533) (nil tag-name "button" 1532 . 1533) (nil tag-type start 1532 . 1533) (nil font-lock-face web-mode-html-attr-equal-face 1532 . 1533) (nil tag-attr t 1529 . 1532) (nil tag-name "button" 1529 . 1532) (nil tag-type start 1529 . 1532) (nil font-lock-face web-mode-html-attr-name-face 1529 . 1532) (nil tag-attr-beg 0 1528 . 1529) (nil tag-attr t 1528 . 1529) (nil tag-name "button" 1528 . 1529) (nil tag-type start 1528 . 1529) (nil font-lock-face web-mode-html-attr-name-face 1528 . 1529) (nil tag-name "button" 1527 . 1528) (nil tag-type start 1527 . 1528) (nil tag-name "button" 1521 . 1527) (nil tag-type start 1521 . 1527) (nil font-lock-face web-mode-html-tag-face 1521 . 1527) (nil tag-name "button" 1520 . 1521) (nil tag-type start 1520 . 1521) (nil tag-beg 17 1520 . 1521) (nil font-lock-face web-mode-html-tag-bracket-face 1520 . 1521) (nil tag-name "h5" 1510 . 1511) (nil tag-type end 1510 . 1511) (nil tag-end t 1510 . 1511) (nil font-lock-face web-mode-html-tag-bracket-face 1510 . 1511) (nil tag-name "h5" 1508 . 1510) (nil tag-type end 1508 . 1510) (nil font-lock-face web-mode-html-tag-face 1508 . 1510) (nil tag-name "h5" 1507 . 1508) (nil tag-type end 1507 . 1508) (nil font-lock-face web-mode-html-tag-bracket-face 1507 . 1508) (nil tag-name "h5" 1506 . 1507) (nil tag-type end 1506 . 1507) (nil tag-beg 20 1506 . 1507) (nil font-lock-face web-mode-html-tag-bracket-face 1506 . 1507) (nil tag-name "h5" 1494 . 1495) (nil tag-type start 1494 . 1495) (nil tag-end t 1494 . 1495) (nil font-lock-face web-mode-html-tag-bracket-face 1494 . 1495) (nil tag-attr t 1493 . 1494) (nil tag-attr-end 5 1493 . 1494) (nil tag-name "h5" 1493 . 1494) (nil tag-type start 1493 . 1494) (nil font-lock-face web-mode-html-attr-value-face 1493 . 1494) (nil tag-attr t 1481 . 1493) (nil tag-name "h5" 1481 . 1493) (nil tag-type start 1481 . 1493) (nil font-lock-face web-mode-html-attr-value-face 1481 . 1493) (nil tag-attr t 1480 . 1481) (nil tag-name "h5" 1480 . 1481) (nil tag-type start 1480 . 1481) (nil font-lock-face web-mode-html-attr-equal-face 1480 . 1481) (nil tag-attr t 1476 . 1480) (nil tag-name "h5" 1476 . 1480) (nil tag-type start 1476 . 1480) (nil font-lock-face web-mode-html-attr-name-face 1476 . 1480) (nil tag-attr-beg 0 1475 . 1476) (nil tag-attr t 1475 . 1476) (nil tag-name "h5" 1475 . 1476) (nil tag-type start 1475 . 1476) (nil font-lock-face web-mode-html-attr-name-face 1475 . 1476) (nil tag-name "h5" 1474 . 1475) (nil tag-type start 1474 . 1475) (nil tag-name "h5" 1472 . 1474) (nil tag-type start 1472 . 1474) (nil font-lock-face web-mode-html-tag-face 1472 . 1474) (nil tag-name "h5" 1471 . 1472) (nil tag-type start 1471 . 1472) (nil tag-beg 17 1471 . 1472) (nil font-lock-face web-mode-html-tag-bracket-face 1471 . 1472) (nil tag-name "div" 1461 . 1462) (nil tag-type start 1461 . 1462) (nil tag-end t 1461 . 1462) (nil font-lock-face web-mode-html-tag-bracket-face 1461 . 1462) (nil tag-attr t 1460 . 1461) (nil tag-attr-end 5 1460 . 1461) (nil tag-name "div" 1460 . 1461) (nil tag-type start 1460 . 1461) (nil font-lock-face web-mode-html-attr-value-face 1460 . 1461) (nil tag-attr t 1447 . 1460) (nil tag-name "div" 1447 . 1460) (nil tag-type start 1447 . 1460) (nil font-lock-face web-mode-html-attr-value-face 1447 . 1460) (nil tag-attr t 1446 . 1447) (nil tag-name "div" 1446 . 1447) (nil tag-type start 1446 . 1447) (nil font-lock-face web-mode-html-attr-equal-face 1446 . 1447) (nil tag-attr t 1442 . 1446) (nil tag-name "div" 1442 . 1446) (nil tag-type start 1442 . 1446) (nil font-lock-face web-mode-html-attr-name-face 1442 . 1446) (nil tag-attr-beg 0 1441 . 1442) (nil tag-attr t 1441 . 1442) (nil tag-name "div" 1441 . 1442) (nil tag-type start 1441 . 1442) (nil font-lock-face web-mode-html-attr-name-face 1441 . 1442) (nil tag-name "div" 1440 . 1441) (nil tag-type start 1440 . 1441) (nil tag-name "div" 1437 . 1440) (nil tag-type start 1437 . 1440) (nil font-lock-face web-mode-html-tag-face 1437 . 1440) (nil tag-name "div" 1436 . 1437) (nil tag-type start 1436 . 1437) (nil tag-beg 17 1436 . 1437) (nil font-lock-face web-mode-html-tag-bracket-face 1436 . 1437) (nil tag-name "div" 1428 . 1429) (nil tag-type start 1428 . 1429) (nil tag-end t 1428 . 1429) (nil font-lock-face web-mode-html-tag-bracket-face 1428 . 1429) (nil tag-attr t 1427 . 1428) (nil tag-attr-end 5 1427 . 1428) (nil tag-name "div" 1427 . 1428) (nil tag-type start 1427 . 1428) (nil font-lock-face web-mode-html-attr-value-face 1427 . 1428) (nil tag-attr t 1413 . 1427) (nil tag-name "div" 1413 . 1427) (nil tag-type start 1413 . 1427) (nil font-lock-face web-mode-html-attr-value-face 1413 . 1427) (nil tag-attr t 1412 . 1413) (nil tag-name "div" 1412 . 1413) (nil tag-type start 1412 . 1413) (nil font-lock-face web-mode-html-attr-equal-face 1412 . 1413) (nil tag-attr t 1408 . 1412) (nil tag-name "div" 1408 . 1412) (nil tag-type start 1408 . 1412) (nil font-lock-face web-mode-html-attr-name-face 1408 . 1412) (nil tag-attr-beg 0 1407 . 1408) (nil tag-attr t 1407 . 1408) (nil tag-name "div" 1407 . 1408) (nil tag-type start 1407 . 1408) (nil font-lock-face web-mode-html-attr-name-face 1407 . 1408) (nil tag-name "div" 1406 . 1407) (nil tag-type start 1406 . 1407) (nil tag-name "div" 1403 . 1406) (nil tag-type start 1403 . 1406) (nil font-lock-face web-mode-html-tag-face 1403 . 1406) (nil tag-name "div" 1402 . 1403) (nil tag-type start 1402 . 1403) (nil tag-beg 17 1402 . 1403) (nil font-lock-face web-mode-html-tag-bracket-face 1402 . 1403) (nil tag-name "div" 1396 . 1397) (nil tag-type start 1396 . 1397) (nil tag-end t 1396 . 1397) (nil font-lock-face web-mode-html-tag-bracket-face 1396 . 1397) (nil tag-attr t 1395 . 1396) (nil tag-attr-end 4 1395 . 1396) (nil tag-name "div" 1395 . 1396) (nil tag-type start 1395 . 1396) (nil font-lock-face web-mode-html-attr-value-face 1395 . 1396) (nil tag-attr t 1386 . 1395) (nil tag-name "div" 1386 . 1395) (nil tag-type start 1386 . 1395) (nil font-lock-face web-mode-html-attr-value-face 1386 . 1395) (nil tag-attr t 1385 . 1386) (nil tag-name "div" 1385 . 1386) (nil tag-type start 1385 . 1386) (nil font-lock-face web-mode-html-attr-equal-face 1385 . 1386) (nil tag-attr t 1382 . 1385) (nil tag-name "div" 1382 . 1385) (nil tag-type start 1382 . 1385) (nil font-lock-face web-mode-html-attr-name-face 1382 . 1385) (nil tag-attr-beg 0 1381 . 1382) (nil tag-attr t 1381 . 1382) (nil tag-name "div" 1381 . 1382) (nil tag-type start 1381 . 1382) (nil font-lock-face web-mode-html-attr-name-face 1381 . 1382) (nil tag-name "div" 1380 . 1381) (nil tag-type start 1380 . 1381) (nil tag-attr t 1379 . 1380) (nil tag-attr-end 5 1379 . 1380) (nil tag-name "div" 1379 . 1380) (nil tag-type start 1379 . 1380) (nil font-lock-face web-mode-html-attr-value-face 1379 . 1380) (nil tag-attr t 1366 . 1379) (nil tag-name "div" 1366 . 1379) (nil tag-type start 1366 . 1379) (nil font-lock-face web-mode-html-attr-value-face 1366 . 1379) (nil tag-attr t 1365 . 1366) (nil tag-name "div" 1365 . 1366) (nil tag-type start 1365 . 1366) (nil font-lock-face web-mode-html-attr-equal-face 1365 . 1366) (nil tag-attr t 1361 . 1365) (nil tag-name "div" 1361 . 1365) (nil tag-type start 1361 . 1365) (nil font-lock-face web-mode-html-attr-name-face 1361 . 1365) (nil tag-attr-beg 0 1360 . 1361) (nil tag-attr t 1360 . 1361) (nil tag-name "div" 1360 . 1361) (nil tag-type start 1360 . 1361) (nil font-lock-face web-mode-html-attr-name-face 1360 . 1361) (nil tag-name "div" 1359 . 1360) (nil tag-type start 1359 . 1360) (nil tag-name "div" 1356 . 1359) (nil tag-type start 1356 . 1359) (nil font-lock-face web-mode-html-tag-face 1356 . 1359) (nil tag-name "div" 1355 . 1356) (nil tag-type start 1355 . 1356) (nil tag-beg 17 1355 . 1356) (nil font-lock-face web-mode-html-tag-bracket-face 1355 . 1356) (nil tag-name "div" 1351 . 1352) (nil tag-type start 1351 . 1352) (nil tag-end t 1351 . 1352) (nil font-lock-face web-mode-html-tag-bracket-face 1351 . 1352) (nil tag-attr t 1350 . 1351) (nil tag-attr-end 4 1350 . 1351) (nil tag-name "div" 1350 . 1351) (nil tag-type start 1350 . 1351) (nil font-lock-face web-mode-html-attr-value-face 1350 . 1351) (nil tag-attr t 1343 . 1350) (nil tag-name "div" 1343 . 1350) (nil tag-type start 1343 . 1350) (nil font-lock-face web-mode-html-attr-value-face 1343 . 1350) (nil tag-attr t 1342 . 1343) (nil tag-name "div" 1342 . 1343) (nil tag-type start 1342 . 1343) (nil font-lock-face web-mode-html-attr-equal-face 1342 . 1343) (nil tag-attr t 1339 . 1342) (nil tag-name "div" 1339 . 1342) (nil tag-type start 1339 . 1342) (nil font-lock-face web-mode-html-attr-name-face 1339 . 1342) (nil tag-attr-beg 0 1338 . 1339) (nil tag-attr t 1338 . 1339) (nil tag-name "div" 1338 . 1339) (nil tag-type start 1338 . 1339) (nil font-lock-face web-mode-html-attr-name-face 1338 . 1339) (nil tag-name "div" 1337 . 1338) (nil tag-type start 1337 . 1338) (nil tag-attr t 1336 . 1337) (nil tag-attr-end 8 1336 . 1337) (nil tag-name "div" 1336 . 1337) (nil tag-type start 1336 . 1337) (nil font-lock-face web-mode-html-attr-value-face 1336 . 1337) (nil tag-attr t 1333 . 1336) (nil tag-name "div" 1333 . 1336) (nil tag-type start 1333 . 1336) (nil font-lock-face web-mode-html-attr-value-face 1333 . 1336) (nil tag-attr t 1332 . 1333) (nil tag-name "div" 1332 . 1333) (nil tag-type start 1332 . 1333) (nil font-lock-face web-mode-html-attr-equal-face 1332 . 1333) (nil tag-attr t 1325 . 1332) (nil tag-name "div" 1325 . 1332) (nil tag-type start 1325 . 1332) (nil font-lock-face web-mode-html-attr-name-face 1325 . 1332) (nil tag-attr-beg 0 1324 . 1325) (nil tag-attr t 1324 . 1325) (nil tag-name "div" 1324 . 1325) (nil tag-type start 1324 . 1325) (nil font-lock-face web-mode-html-attr-name-face 1324 . 1325) (nil tag-name "div" 1323 . 1324) (nil tag-type start 1323 . 1324) (nil tag-attr t 1322 . 1323) (nil tag-attr-end 5 1322 . 1323) (nil tag-name "div" 1322 . 1323) (nil tag-type start 1322 . 1323) (nil font-lock-face web-mode-html-attr-value-face 1322 . 1323) (nil tag-attr t 1316 . 1322) (nil tag-name "div" 1316 . 1322) (nil tag-type start 1316 . 1322) (nil font-lock-face web-mode-html-attr-value-face 1316 . 1322) (nil tag-attr t 1315 . 1316) (nil tag-name "div" 1315 . 1316) (nil tag-type start 1315 . 1316) (nil font-lock-face web-mode-html-attr-equal-face 1315 . 1316) (nil tag-attr t 1311 . 1315) (nil tag-name "div" 1311 . 1315) (nil tag-type start 1311 . 1315) (nil font-lock-face web-mode-html-attr-name-face 1311 . 1315) (nil tag-attr-beg 0 1310 . 1311) (nil tag-attr t 1310 . 1311) (nil tag-name "div" 1310 . 1311) (nil tag-type start 1310 . 1311) (nil font-lock-face web-mode-html-attr-name-face 1310 . 1311) (nil tag-name "div" 1309 . 1310) (nil tag-type start 1309 . 1310) (nil tag-name "div" 1306 . 1309) (nil tag-type start 1306 . 1309) (nil font-lock-face web-mode-html-tag-face 1306 . 1309) (nil tag-name "div" 1305 . 1306) (nil tag-type start 1305 . 1306) (nil tag-beg 17 1305 . 1306) (nil font-lock-face web-mode-html-tag-bracket-face 1305 . 1306) (1305 . 2004)) ((#("<div class=\"modal\" tabindex=\"-1\" role=\"dialog\">
  <div class=\"modal-dialog\" role=\"document\">
    <div class=\"modal-content\">
      <div class=\"modal-header\">
        <h5 class=\"modal-title\">Modal title</h5>
        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">
          <span aria-hidden=\"true\">&times;</span>
        </button>
      </div>
      <div class=\"modal-body\">
        <p>Modal body text goes here.</p>
      </div>
      <div class=\"modal-footer\">
        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>
        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>
      </div>
    </div>
  </div>
</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 18 19 (tag-type start tag-name "div") 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 20 27 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 27 28 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 28 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 32 33 (tag-type start tag-name "div") 33 34 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 34 37 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 38 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 45 46 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 46 47 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 51 54 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 54 55 (tag-type start tag-name "div") 55 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 56 60 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 61 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 74 75 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 75 76 (tag-type start tag-name "div") 76 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 77 80 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 80 81 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 81 90 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 90 91 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 98 101 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 101 102 (tag-type start tag-name "div") 102 103 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 103 107 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 107 108 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 108 122 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 122 123 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 131 132 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 132 135 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 135 136 (tag-type start tag-name "div") 136 137 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 137 141 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 141 142 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 142 155 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 155 156 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 156 157 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 166 167 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h5") 167 169 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h5") 169 170 (tag-type start tag-name "h5") 170 171 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t tag-attr-beg 0) 171 175 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t) 175 176 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h5" tag-attr t) 176 188 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr t) 188 189 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr-end 5 tag-attr t) 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h5") 201 202 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h5") 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h5") 203 205 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h5") 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h5") 215 216 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 216 222 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 222 223 (tag-type start tag-name "button") 223 224 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 224 227 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 227 228 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 228 235 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 235 236 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 236 237 (tag-type start tag-name "button") 237 238 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 238 242 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 242 243 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 243 249 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 249 250 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 250 251 (tag-type start tag-name "button") 251 252 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 252 263 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 263 264 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 264 270 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 270 271 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 271 272 (tag-type start tag-name "button") 272 273 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 273 282 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 282 283 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 283 289 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 289 290 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 10 tag-attr t) 290 291 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 302 303 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 303 307 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 307 308 (tag-type start tag-name "span") 308 309 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 309 319 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 319 320 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 320 325 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 325 326 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 11 tag-attr t) 326 327 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 327 334 (font-lock-face (web-mode-html-entity-face)) 334 335 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 335 336 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 336 340 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 340 341 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 351 352 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 352 358 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 358 359 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 366 367 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 367 368 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 368 371 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 379 380 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 380 383 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 383 384 (tag-type start tag-name "div") 384 385 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 385 389 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 389 390 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 390 401 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 401 402 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 402 403 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 412 413 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 413 414 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 414 415 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 441 442 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 442 443 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 443 444 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 444 445 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 452 453 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 453 454 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 454 457 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 457 458 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 465 466 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 466 469 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 469 470 (tag-type start tag-name "div") 470 471 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 471 475 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 475 476 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 476 489 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 489 490 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 490 491 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 500 501 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 501 507 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 507 508 (tag-type start tag-name "button") 508 509 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 509 512 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 512 513 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 513 520 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 520 521 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 521 522 (tag-type start tag-name "button") 522 523 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 523 527 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 527 528 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 528 544 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 544 545 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 545 546 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 558 559 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 559 560 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 560 566 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 566 567 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 576 577 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 577 583 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 583 584 (tag-type start tag-name "button") 584 585 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 585 588 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 588 589 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 589 596 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 596 597 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 597 598 (tag-type start tag-name "button") 598 599 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 599 603 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 603 604 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 604 622 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 622 623 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 623 624 (tag-type start tag-name "button") 624 625 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 625 636 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 636 637 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 637 643 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 643 644 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 644 645 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 650 651 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 651 652 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 652 658 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 658 659 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 666 667 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 667 668 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 668 671 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 671 672 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 677 678 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 678 679 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 679 682 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 682 683 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 686 687 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 687 688 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 688 691 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 691 692 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 693 694 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 694 695 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 695 698 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 698 699 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky nil)) . 1305) (undo-tree-id1274 . -48) (undo-tree-id1275 . -19) (undo-tree-id1276 . -124) (undo-tree-id1277 . -403) (undo-tree-id1278 . -403) (undo-tree-id1279 . -403) (undo-tree-id1280 . -403) (undo-tree-id1281 . -403) (undo-tree-id1282 . -401) (undo-tree-id1283 . -403) (undo-tree-id1284 . -403) (undo-tree-id1285 . -19) (undo-tree-id1286 . -124) (undo-tree-id1287 . -124) (undo-tree-id1288 . -124) (undo-tree-id1289 . -124) (undo-tree-id1290 . -124) (undo-tree-id1291 . -19) (undo-tree-id1292 . -19) (undo-tree-id1293 . -19) (undo-tree-id1294 . -19) (undo-tree-id1295 . -19) (undo-tree-id1296 . -19) (undo-tree-id1297 . -19) (undo-tree-id1298 . -19) (undo-tree-id1299 . -19) (undo-tree-id1300 . -19) (nil tag-name "div" 1305 . 1306) (nil tag-name "div" 1306 . 1309) (nil tag-name "div" 1309 . 1310) (nil tag-name "div" 1310 . 1311) (nil tag-name "div" 1311 . 1315) (nil tag-name "div" 1315 . 1316) (nil tag-name "div" 1316 . 1322) (nil tag-name "div" 1322 . 1323) (nil tag-name "div" 1323 . 1324) (nil tag-name "div" 1324 . 1325) (nil tag-name "div" 1325 . 1332) (nil tag-name "div" 1332 . 1333) (nil tag-name "div" 1333 . 1336) (nil tag-name "div" 1336 . 1337) (nil tag-name "div" 1337 . 1338) (nil tag-name "div" 1338 . 1339) (nil tag-name "div" 1339 . 1342) (nil tag-name "div" 1342 . 1343) (nil tag-name "div" 1343 . 1350) (nil tag-name "div" 1350 . 1351) (nil tag-name "div" 1351 . 1352) (nil tag-name "div" 1355 . 1356) (nil tag-name "div" 1356 . 1359) (nil tag-name "div" 1359 . 1360) (nil tag-name "div" 1360 . 1361) (nil tag-name "div" 1361 . 1365) (nil tag-name "div" 1365 . 1366) (nil tag-name "div" 1366 . 1379) (nil tag-name "div" 1379 . 1380) (nil tag-name "div" 1380 . 1381) (nil tag-name "div" 1381 . 1382) (nil tag-name "div" 1382 . 1385) (nil tag-name "div" 1385 . 1386) (nil tag-name "div" 1386 . 1395) (nil tag-name "div" 1395 . 1396) (nil tag-name "div" 1396 . 1397) (nil tag-name "div" 1402 . 1403) (nil tag-name "div" 1403 . 1406) (nil tag-name "div" 1406 . 1407) (nil tag-name "div" 1407 . 1408) (nil tag-name "div" 1408 . 1412) (nil tag-name "div" 1412 . 1413) (nil tag-name "div" 1413 . 1427) (nil tag-name "div" 1427 . 1428) (nil tag-name "div" 1428 . 1429) (nil tag-name "div" 1436 . 1437) (nil tag-name "div" 1437 . 1440) (nil tag-name "div" 1440 . 1441) (nil tag-name "div" 1441 . 1442) (nil tag-name "div" 1442 . 1446) (nil tag-name "div" 1446 . 1447) (nil tag-name "div" 1447 . 1460) (nil tag-name "div" 1460 . 1461) (nil tag-name "div" 1461 . 1462) (nil tag-name "h5" 1471 . 1472) (nil tag-name "h5" 1472 . 1474) (nil tag-name "h5" 1474 . 1475) (nil tag-name "h5" 1475 . 1476) (nil tag-name "h5" 1476 . 1480) (nil tag-name "h5" 1480 . 1481) (nil tag-name "h5" 1481 . 1493) (nil tag-name "h5" 1493 . 1494) (nil tag-name "h5" 1494 . 1495) (nil tag-name "h5" 1506 . 1507) (nil tag-name "h5" 1507 . 1508) (nil tag-name "h5" 1508 . 1510) (nil tag-name "h5" 1510 . 1511) (nil tag-name "button" 1520 . 1521) (nil tag-name "button" 1521 . 1527) (nil tag-name "button" 1527 . 1528) (nil tag-name "button" 1528 . 1529) (nil tag-name "button" 1529 . 1532) (nil tag-name "button" 1532 . 1533) (nil tag-name "button" 1533 . 1540) (nil tag-name "button" 1540 . 1541) (nil tag-name "button" 1541 . 1542) (nil tag-name "button" 1542 . 1543) (nil tag-name "button" 1543 . 1547) (nil tag-name "button" 1547 . 1548) (nil tag-name "button" 1548 . 1554) (nil tag-name "button" 1554 . 1555) (nil tag-name "button" 1555 . 1556) (nil tag-name "button" 1556 . 1557) (nil tag-name "button" 1557 . 1568) (nil tag-name "button" 1568 . 1569) (nil tag-name "button" 1569 . 1575) (nil tag-name "button" 1575 . 1576) (nil tag-name "button" 1576 . 1577) (nil tag-name "button" 1577 . 1578) (nil tag-name "button" 1578 . 1587) (nil tag-name "button" 1587 . 1588) (nil tag-name "button" 1588 . 1594) (nil tag-name "button" 1594 . 1595) (nil tag-name "button" 1595 . 1596) (nil tag-name "span" 1607 . 1608) (nil tag-name "span" 1608 . 1612) (nil tag-name "span" 1612 . 1613) (nil tag-name "span" 1613 . 1614) (nil tag-name "span" 1614 . 1624) (nil tag-name "span" 1624 . 1625) (nil tag-name "span" 1625 . 1630) (nil tag-name "span" 1630 . 1631) (nil tag-name "span" 1631 . 1632) (nil font-lock-face (web-mode-html-entity-face) 1632 . 1639) (nil tag-name "span" 1639 . 1640) (nil tag-name "span" 1640 . 1641) (nil tag-name "span" 1641 . 1645) (nil tag-name "span" 1645 . 1646) (nil tag-name "button" 1655 . 1656) (nil tag-name "button" 1656 . 1657) (nil tag-name "button" 1657 . 1663) (nil tag-name "button" 1663 . 1664) (nil tag-name "div" 1671 . 1672) (nil tag-name "div" 1672 . 1673) (nil tag-name "div" 1673 . 1676) (nil tag-name "div" 1676 . 1677) (nil tag-name "div" 1684 . 1685) (nil tag-name "div" 1685 . 1688) (nil tag-name "div" 1688 . 1689) (nil tag-name "div" 1689 . 1690) (nil tag-name "div" 1690 . 1694) (nil tag-name "div" 1694 . 1695) (nil tag-name "div" 1695 . 1706) (nil tag-name "div" 1706 . 1707) (nil tag-name "div" 1707 . 1708) (nil tag-name "p" 1717 . 1718) (nil tag-name "p" 1718 . 1719) (nil tag-name "p" 1719 . 1720) (nil tag-name "p" 1746 . 1747) (nil tag-name "p" 1747 . 1748) (nil tag-name "p" 1748 . 1749) (nil tag-name "p" 1749 . 1750) (nil tag-name "div" 1757 . 1758) (nil tag-name "div" 1758 . 1759) (nil tag-name "div" 1759 . 1762) (nil tag-name "div" 1762 . 1763) (nil tag-name "div" 1770 . 1771) (nil tag-name "div" 1771 . 1774) (nil tag-name "div" 1774 . 1775) (nil tag-name "div" 1775 . 1776) (nil tag-name "div" 1776 . 1780) (nil tag-name "div" 1780 . 1781) (nil tag-name "div" 1781 . 1794) (nil tag-name "div" 1794 . 1795) (nil tag-name "div" 1795 . 1796) (nil tag-name "button" 1805 . 1806) (nil tag-name "button" 1806 . 1812) (nil tag-name "button" 1812 . 1813) (nil tag-name "button" 1813 . 1814) (nil tag-name "button" 1814 . 1817) (nil tag-name "button" 1817 . 1818) (nil tag-name "button" 1818 . 1825) (nil tag-name "button" 1825 . 1826) (nil tag-name "button" 1826 . 1827) (nil tag-name "button" 1827 . 1828) (nil tag-name "button" 1828 . 1832) (nil tag-name "button" 1832 . 1833) (nil tag-name "button" 1833 . 1849) (nil tag-name "button" 1849 . 1850) (nil tag-name "button" 1850 . 1851) (nil tag-name "button" 1863 . 1864) (nil tag-name "button" 1864 . 1865) (nil tag-name "button" 1865 . 1871) (nil tag-name "button" 1871 . 1872) (nil tag-name "button" 1881 . 1882) (nil tag-name "button" 1882 . 1888) (nil tag-name "button" 1888 . 1889) (nil tag-name "button" 1889 . 1890) (nil tag-name "button" 1890 . 1893) (nil tag-name "button" 1893 . 1894) (nil tag-name "button" 1894 . 1901) (nil tag-name "button" 1901 . 1902) (nil tag-name "button" 1902 . 1903) (nil tag-name "button" 1903 . 1904) (nil tag-name "button" 1904 . 1908) (nil tag-name "button" 1908 . 1909) (nil tag-name "button" 1909 . 1927) (nil tag-name "button" 1927 . 1928) (nil tag-name "button" 1928 . 1929) (nil tag-name "button" 1929 . 1930) (nil tag-name "button" 1930 . 1941) (nil tag-name "button" 1941 . 1942) (nil tag-name "button" 1942 . 1948) (nil tag-name "button" 1948 . 1949) (nil tag-name "button" 1949 . 1950) (nil tag-name "button" 1955 . 1956) (nil tag-name "button" 1956 . 1957) (nil tag-name "button" 1957 . 1963) (nil tag-name "button" 1963 . 1964) (nil tag-name "div" 1971 . 1972) (nil tag-name "div" 1972 . 1973) (nil tag-name "div" 1973 . 1976) (nil tag-name "div" 1976 . 1977) (nil tag-name "div" 1982 . 1983) (nil tag-name "div" 1983 . 1984) (nil tag-name "div" 1984 . 1987) (nil tag-name "div" 1987 . 1988) (nil tag-name "div" 1991 . 1992) (nil tag-name "div" 1992 . 1993) (nil tag-name "div" 1993 . 1996) (nil tag-name "div" 1996 . 1997) (nil tag-name "div" 1998 . 1999) (nil tag-name "div" 1999 . 2000) (nil tag-name "div" 2000 . 2003) (nil tag-name "div" 2003 . 2004) (nil rear-nonsticky t 2003 . 2004)) (25699 62098 309989 915000) 0 nil])
([nil nil ((605 . 613)) nil (25699 62127 194969 405000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1339 . 1340) (nil tag-attr t 1339 . 1340) (nil tag-attr-end 2 1339 . 1340) (nil tag-name "div" 1339 . 1340) (nil tag-type start 1339 . 1340) (nil font-lock-face web-mode-html-attr-value-face 1339 . 1340) (nil tag-attr t 1327 . 1339) (nil tag-name "div" 1327 . 1339) (nil tag-type start 1327 . 1339) (nil font-lock-face web-mode-html-attr-value-face 1327 . 1339) (nil tag-attr t 1326 . 1327) (nil tag-name "div" 1326 . 1327) (nil tag-type start 1326 . 1327) (nil font-lock-face web-mode-html-attr-equal-face 1326 . 1327) (nil tag-attr t 1325 . 1326) (nil tag-name "div" 1325 . 1326) (nil tag-type start 1325 . 1326) (nil font-lock-face web-mode-html-attr-name-face 1325 . 1326) (nil tag-attr-beg 0 1324 . 1325) (nil tag-attr t 1324 . 1325) (nil tag-name "div" 1324 . 1325) (nil tag-type start 1324 . 1325) (nil font-lock-face web-mode-html-attr-name-face 1324 . 1325) (1324 . 1340) (t 25699 61825 587760 757000)) ((#("id=\"cookieModal\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 3 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t rear-nonsticky nil)) . 1324) (undo-tree-id1266 . -16) (undo-tree-id1267 . -16) (undo-tree-id1268 . -16) (undo-tree-id1269 . -16) (undo-tree-id1270 . -16) (undo-tree-id1271 . -16) (undo-tree-id1272 . -16) (undo-tree-id1273 . -16) (nil tag-name "div" 1324 . 1325) (nil tag-name "div" 1325 . 1326) (nil tag-name "div" 1326 . 1327) (nil tag-name "div" 1327 . 1339) (nil tag-name "div" 1339 . 1340) (nil rear-nonsticky t 1339 . 1340)) (25699 62098 159109 351000) 0 nil])
([nil nil ((#("card" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 808) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (t 25699 62127 223384 748000)) nil (25699 62177 479768 204000) 0 nil])
([nil nil ((1340 . 1341)) ((#(" " 0 1 (tag-type start tag-name "div")) . 1340)) (25699 62098 15112 713000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -807) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) 808) nil (25699 62177 479762 504000) 0 nil])
([nil nil ((#("
      <div class=\"modal-header\">
        <h5 class=\"modal-title\">Modal title</h5>
        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">
          <span aria-hidden=\"true\">&times;</span>
        </button>
      </div>" 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 8 11 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 11 12 (tag-type start tag-name "div") 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 13 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 18 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h5") 43 45 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h5") 45 46 (tag-type start tag-name "h5") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h5" tag-attr t) 52 64 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr t) 64 65 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr-end 5 tag-attr t) 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h5") 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h5") 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h5") 79 81 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h5") 81 82 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h5") 91 92 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 92 98 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 98 99 (tag-type start tag-name "button") 99 100 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 100 103 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 103 104 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 104 111 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 111 112 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 112 113 (tag-type start tag-name "button") 113 114 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 114 118 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 118 119 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 119 125 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 125 126 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 126 127 (tag-type start tag-name "button") 127 128 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 128 139 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 139 140 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 140 146 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 146 147 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 147 148 (tag-type start tag-name "button") 148 149 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 149 158 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 159 165 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 165 166 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 10 tag-attr t) 166 167 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 178 179 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 179 183 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 183 184 (tag-type start tag-name "span") 184 185 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 185 195 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 195 196 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 196 201 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 201 202 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 11 tag-attr t) 202 203 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 203 210 (font-lock-face (web-mode-html-entity-face)) 210 211 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 211 212 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 212 216 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 216 217 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 227 228 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 228 234 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 242 243 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 244 247 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 247 248 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1446) (undo-tree-id982 . -248) (undo-tree-id983 . -1) (undo-tree-id984 . -248) (t 25699 61851 263728 142000)) ((1446 . 1694)) (25699 62097 859282 695000) 0 nil])
([nil nil ((645 . 646)) nil (25699 62177 479749 547000) 0 nil])
([nil nil ((1477 . 1486) (t 25699 61905 391659 813000)) (("
        " . 1477) (undo-tree-id1226 . -1) (undo-tree-id1227 . -9) (undo-tree-id1228 . -9) (undo-tree-id1229 . -9) (undo-tree-id1230 . -9) (undo-tree-id1231 . -9) (undo-tree-id1232 . -9) (undo-tree-id1233 . -9) (undo-tree-id1234 . -9) (undo-tree-id1235 . -9) (undo-tree-id1236 . -9) (undo-tree-id1237 . -9) (undo-tree-id1238 . -9) (undo-tree-id1239 . -9) (undo-tree-id1240 . -9) (undo-tree-id1241 . -9) (undo-tree-id1242 . -9) (undo-tree-id1243 . -9) (undo-tree-id1244 . -9) (undo-tree-id1245 . -9) (undo-tree-id1246 . -9) (undo-tree-id1247 . -9) (undo-tree-id1248 . -9) (undo-tree-id1249 . -9) (undo-tree-id1250 . -9) (undo-tree-id1251 . -9) (undo-tree-id1252 . -9) (undo-tree-id1253 . -9) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -9) (undo-tree-id1263 . -9) (undo-tree-id1264 . -9) (undo-tree-id1265 . -9)) (25699 62097 749574 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 649 . 650) (nil tag-attr t 646 . 650) (nil tag-name "div" 646 . 650) (nil tag-type start 646 . 650) (nil font-lock-face web-mode-html-attr-value-face 646 . 650) (646 . 650)) nil (25699 62177 479742 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2041 . 2042) (nil tag-name "button" 2041 . 2042) (nil tag-type end 2041 . 2042) (nil tag-end t 2041 . 2042) (nil font-lock-face web-mode-html-tag-bracket-face 2041 . 2042) (nil tag-name "button" 2035 . 2041) (nil tag-type end 2035 . 2041) (nil font-lock-face web-mode-html-tag-face 2035 . 2041) (nil tag-name "button" 2034 . 2035) (nil tag-type end 2034 . 2035) (nil font-lock-face web-mode-html-tag-bracket-face 2034 . 2035) (nil tag-name "button" 2033 . 2034) (nil tag-type end 2033 . 2034) (nil tag-beg 20 2033 . 2034) (nil font-lock-face web-mode-html-tag-bracket-face 2033 . 2034) (nil tag-name "button" 2028 . 2029) (nil tag-type start 2028 . 2029) (nil tag-end t 2028 . 2029) (nil font-lock-face web-mode-html-tag-bracket-face 2028 . 2029) (nil tag-attr t 2027 . 2028) (nil tag-attr-end 4 2027 . 2028) (nil tag-name "button" 2027 . 2028) (nil tag-type start 2027 . 2028) (nil font-lock-face web-mode-html-attr-value-face 2027 . 2028) (nil tag-attr t 2020 . 2027) (nil tag-name "button" 2020 . 2027) (nil tag-type start 2020 . 2027) (nil font-lock-face web-mode-html-attr-value-face 2020 . 2027) (nil tag-attr t 2019 . 2020) (nil tag-name "button" 2019 . 2020) (nil tag-type start 2019 . 2020) (nil font-lock-face web-mode-html-attr-equal-face 2019 . 2020) (nil tag-attr t 2016 . 2019) (nil tag-name "button" 2016 . 2019) (nil tag-type start 2016 . 2019) (nil font-lock-face web-mode-html-attr-name-face 2016 . 2019) (nil tag-attr-beg 0 2015 . 2016) (nil tag-attr t 2015 . 2016) (nil tag-name "button" 2015 . 2016) (nil tag-type start 2015 . 2016) (nil font-lock-face web-mode-html-attr-name-face 2015 . 2016) (nil tag-name "button" 2014 . 2015) (nil tag-type start 2014 . 2015) (nil tag-attr t 2013 . 2014) (nil tag-attr-end 5 2013 . 2014) (nil tag-name "button" 2013 . 2014) (nil tag-type start 2013 . 2014) (nil font-lock-face web-mode-html-attr-value-face 2013 . 2014) (nil tag-attr t 1990 . 2013) (nil tag-name "button" 1990 . 2013) (nil tag-type start 1990 . 2013) (nil font-lock-face web-mode-html-attr-value-face 1990 . 2013) (nil tag-attr t 1989 . 1990) (nil tag-name "button" 1989 . 1990) (nil tag-type start 1989 . 1990) (nil font-lock-face web-mode-html-attr-equal-face 1989 . 1990) (nil tag-attr t 1985 . 1989) (nil tag-name "button" 1985 . 1989) (nil tag-type start 1985 . 1989) (nil font-lock-face web-mode-html-attr-name-face 1985 . 1989) (nil tag-attr-beg 0 1984 . 1985) (nil tag-attr t 1984 . 1985) (nil tag-name "button" 1984 . 1985) (nil tag-type start 1984 . 1985) (nil font-lock-face web-mode-html-attr-name-face 1984 . 1985) (nil tag-name "button" 1978 . 1984) (nil tag-type start 1978 . 1984) (nil tag-attr t 1977 . 1978) (nil tag-attr-end 7 1977 . 1978) (nil tag-name "button" 1977 . 1978) (nil tag-type start 1977 . 1978) (nil font-lock-face web-mode-html-attr-value-face 1977 . 1978) (nil tag-attr t 1964 . 1977) (nil tag-name "button" 1964 . 1977) (nil tag-type start 1964 . 1977) (nil font-lock-face web-mode-html-attr-value-face 1964 . 1977) (nil tag-attr t 1963 . 1964) (nil tag-name "button" 1963 . 1964) (nil tag-type start 1963 . 1964) (nil font-lock-face web-mode-html-attr-equal-face 1963 . 1964) (nil tag-attr t 1957 . 1963) (nil tag-name "button" 1957 . 1963) (nil tag-type start 1957 . 1963) (nil font-lock-face web-mode-html-attr-name-face 1957 . 1963) (nil tag-attr-beg 8 1956 . 1957) (nil tag-attr t 1956 . 1957) (nil tag-name "button" 1956 . 1957) (nil tag-type start 1956 . 1957) (nil font-lock-face web-mode-html-attr-name-face 1956 . 1957) (nil tag-name "button" 1950 . 1956) (nil tag-type start 1950 . 1956) (nil tag-name "button" 1944 . 1950) (nil tag-type start 1944 . 1950) (nil font-lock-face web-mode-html-tag-face 1944 . 1950) (nil tag-name "button" 1943 . 1944) (nil tag-type start 1943 . 1944) (nil tag-beg 17 1943 . 1944) (nil font-lock-face web-mode-html-tag-bracket-face 1943 . 1944) (nil tag-name "a" 1935 . 1936) (nil tag-type end 1935 . 1936) (nil tag-end t 1935 . 1936) (nil font-lock-face web-mode-html-tag-bracket-face 1935 . 1936) (nil tag-name "a" 1934 . 1935) (nil tag-type end 1934 . 1935) (nil font-lock-face web-mode-html-tag-face 1934 . 1935) (nil tag-name "a" 1933 . 1934) (nil tag-type end 1933 . 1934) (nil font-lock-face web-mode-html-tag-bracket-face 1933 . 1934) (nil tag-name "a" 1932 . 1933) (nil tag-type end 1932 . 1933) (nil tag-beg 20 1932 . 1933) (nil font-lock-face web-mode-html-tag-bracket-face 1932 . 1933) (nil tag-name "i" 1931 . 1932) (nil tag-type end 1931 . 1932) (nil tag-end t 1931 . 1932) (nil font-lock-face web-mode-html-tag-bracket-face 1931 . 1932) (nil tag-name "i" 1930 . 1931) (nil tag-type end 1930 . 1931) (nil font-lock-face web-mode-html-tag-face 1930 . 1931) (nil tag-name "i" 1929 . 1930) (nil tag-type end 1929 . 1930) (nil font-lock-face web-mode-html-tag-bracket-face 1929 . 1930) (nil tag-name "i" 1928 . 1929) (nil tag-type end 1928 . 1929) (nil tag-beg 20 1928 . 1929) (nil font-lock-face web-mode-html-tag-bracket-face 1928 . 1929) (nil tag-name "i" 1927 . 1928) (nil tag-type start 1927 . 1928) (nil tag-end t 1927 . 1928) (nil font-lock-face web-mode-html-tag-bracket-face 1927 . 1928) (nil tag-attr t 1926 . 1927) (nil tag-attr-end 5 1926 . 1927) (nil tag-name "i" 1926 . 1927) (nil tag-type start 1926 . 1927) (nil font-lock-face web-mode-html-attr-value-face 1926 . 1927) (nil tag-attr t 1903 . 1926) (nil tag-name "i" 1903 . 1926) (nil tag-type start 1903 . 1926) (nil font-lock-face web-mode-html-attr-value-face 1903 . 1926) (nil tag-attr t 1902 . 1903) (nil tag-name "i" 1902 . 1903) (nil tag-type start 1902 . 1903) (nil font-lock-face web-mode-html-attr-equal-face 1902 . 1903) (nil tag-attr t 1898 . 1902) (nil tag-name "i" 1898 . 1902) (nil tag-type start 1898 . 1902) (nil font-lock-face web-mode-html-attr-name-face 1898 . 1902) (nil tag-attr-beg 0 1897 . 1898) (nil tag-attr t 1897 . 1898) (nil tag-name "i" 1897 . 1898) (nil tag-type start 1897 . 1898) (nil font-lock-face web-mode-html-attr-name-face 1897 . 1898) (nil tag-name "i" 1896 . 1897) (nil tag-type start 1896 . 1897) (nil tag-name "i" 1895 . 1896) (nil tag-type start 1895 . 1896) (nil font-lock-face web-mode-html-tag-face 1895 . 1896) (nil tag-name "i" 1894 . 1895) (nil tag-type start 1894 . 1895) (nil tag-beg 17 1894 . 1895) (nil font-lock-face web-mode-html-tag-bracket-face 1894 . 1895) (nil tag-name "a" 1883 . 1884) (nil tag-type start 1883 . 1884) (nil tag-end t 1883 . 1884) (nil font-lock-face web-mode-html-tag-bracket-face 1883 . 1884) (nil tag-attr t 1882 . 1883) (nil tag-attr-end 4 1882 . 1883) (nil tag-name "a" 1882 . 1883) (nil tag-type start 1882 . 1883) (nil font-lock-face web-mode-html-attr-value-face 1882 . 1883) (nil tag-attr t 1871 . 1882) (nil tag-name "a" 1871 . 1882) (nil tag-type start 1871 . 1882) (nil font-lock-face web-mode-html-attr-value-face 1871 . 1882) (nil tag-attr t 1870 . 1871) (nil tag-name "a" 1870 . 1871) (nil tag-type start 1870 . 1871) (nil font-lock-face web-mode-html-attr-equal-face 1870 . 1871) (nil tag-attr t 1867 . 1870) (nil tag-name "a" 1867 . 1870) (nil tag-type start 1867 . 1870) (nil font-lock-face web-mode-html-attr-name-face 1867 . 1870) (nil tag-attr-beg 0 1866 . 1867) (nil tag-attr t 1866 . 1867) (nil tag-name "a" 1866 . 1867) (nil tag-type start 1866 . 1867) (nil font-lock-face web-mode-html-attr-name-face 1866 . 1867) (nil tag-name "a" 1865 . 1866) (nil tag-type start 1865 . 1866) (nil tag-attr t 1864 . 1865) (nil tag-attr-end 5 1864 . 1865) (nil tag-name "a" 1864 . 1865) (nil tag-type start 1864 . 1865) (nil font-lock-face web-mode-html-attr-value-face 1864 . 1865) (nil tag-attr t 1838 . 1864) (nil tag-name "a" 1838 . 1864) (nil tag-type start 1838 . 1864) (nil font-lock-face web-mode-html-attr-value-face 1838 . 1864) (nil tag-attr t 1837 . 1838) (nil tag-name "a" 1837 . 1838) (nil tag-type start 1837 . 1838) (nil font-lock-face web-mode-html-attr-equal-face 1837 . 1838) (nil tag-attr t 1833 . 1837) (nil tag-name "a" 1833 . 1837) (nil tag-type start 1833 . 1837) (nil font-lock-face web-mode-html-attr-name-face 1833 . 1837) (nil tag-attr-beg 0 1832 . 1833) (nil tag-attr t 1832 . 1833) (nil tag-name "a" 1832 . 1833) (nil tag-type start 1832 . 1833) (nil font-lock-face web-mode-html-attr-name-face 1832 . 1833) (nil tag-name "a" 1831 . 1832) (nil tag-type start 1831 . 1832) (nil tag-attr t 1830 . 1831) (nil tag-attr-end 5 1830 . 1831) (nil tag-name "a" 1830 . 1831) (nil tag-type start 1830 . 1831) (nil font-lock-face web-mode-html-attr-value-face 1830 . 1831) (nil tag-attr t 1812 . 1830) (nil tag-name "a" 1812 . 1830) (nil tag-type start 1812 . 1830) (nil font-lock-face web-mode-html-attr-value-face 1812 . 1830) (nil tag-attr t 1811 . 1812) (nil tag-name "a" 1811 . 1812) (nil tag-type start 1811 . 1812) (nil font-lock-face web-mode-html-attr-equal-face 1811 . 1812) (nil tag-attr t 1807 . 1811) (nil tag-name "a" 1807 . 1811) (nil tag-type start 1807 . 1811) (nil font-lock-face web-mode-html-attr-name-face 1807 . 1811) (nil tag-attr-beg 0 1806 . 1807) (nil tag-attr t 1806 . 1807) (nil tag-name "a" 1806 . 1807) (nil tag-type start 1806 . 1807) (nil font-lock-face web-mode-html-attr-name-face 1806 . 1807) (nil tag-name "a" 1805 . 1806) (nil tag-type start 1805 . 1806) (nil tag-name "a" 1804 . 1805) (nil tag-type start 1804 . 1805) (nil font-lock-face web-mode-html-tag-face 1804 . 1805) (nil tag-name "a" 1803 . 1804) (nil tag-type start 1803 . 1804) (nil tag-beg 17 1803 . 1804) (nil font-lock-face web-mode-html-tag-bracket-face 1803 . 1804) (nil tag-name "span" 1802 . 1803) (nil tag-type end 1802 . 1803) (nil tag-end t 1802 . 1803) (nil font-lock-face web-mode-html-tag-bracket-face 1802 . 1803) (nil tag-name "span" 1798 . 1802) (nil tag-type end 1798 . 1802) (nil font-lock-face web-mode-html-tag-face 1798 . 1802) (nil tag-name "span" 1797 . 1798) (nil tag-type end 1797 . 1798) (nil font-lock-face web-mode-html-tag-bracket-face 1797 . 1798) (nil tag-name "span" 1796 . 1797) (nil tag-type end 1796 . 1797) (nil tag-beg 20 1796 . 1797) (nil font-lock-face web-mode-html-tag-bracket-face 1796 . 1797) (nil face (whitespace-line) 1710 . 1790) (nil tag-name "span" 1709 . 1710) (nil tag-type start 1709 . 1710) (nil tag-end t 1709 . 1710) (nil font-lock-face web-mode-html-tag-bracket-face 1709 . 1710) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1709 . 1710) (nil tag-attr t 1708 . 1709) (nil tag-attr-end 5 1708 . 1709) (nil tag-name "span" 1708 . 1709) (nil tag-type start 1708 . 1709) (nil font-lock-face web-mode-html-attr-value-face 1708 . 1709) (nil face (whitespace-line web-mode-html-attr-value-face) 1708 . 1709) (nil tag-attr t 1703 . 1708) (nil tag-name "span" 1703 . 1708) (nil tag-type start 1703 . 1708) (nil font-lock-face web-mode-html-attr-value-face 1703 . 1708) (nil face (whitespace-line web-mode-html-attr-value-face) 1703 . 1708) (nil tag-attr t 1702 . 1703) (nil tag-name "span" 1702 . 1703) (nil tag-type start 1702 . 1703) (nil font-lock-face web-mode-html-attr-equal-face 1702 . 1703) (nil face (whitespace-line web-mode-html-attr-equal-face) 1702 . 1703) (nil tag-attr t 1698 . 1702) (nil tag-name "span" 1698 . 1702) (nil tag-type start 1698 . 1702) (nil font-lock-face web-mode-html-attr-name-face 1698 . 1702) (nil face (whitespace-line web-mode-html-attr-name-face) 1698 . 1702) (nil tag-attr-beg 0 1697 . 1698) (nil tag-attr t 1697 . 1698) (nil tag-name "span" 1697 . 1698) (nil tag-type start 1697 . 1698) (nil font-lock-face web-mode-html-attr-name-face 1697 . 1698) (nil face (whitespace-line web-mode-html-attr-name-face) 1697 . 1698) (nil tag-name "span" 1696 . 1697) (nil tag-type start 1696 . 1697) (nil face (whitespace-line) 1696 . 1697) (nil tag-name "span" 1692 . 1696) (nil tag-type start 1692 . 1696) (nil font-lock-face web-mode-html-tag-face 1692 . 1696) (nil tag-name "span" 1691 . 1692) (nil tag-type start 1691 . 1692) (nil tag-beg 17 1691 . 1692) (nil font-lock-face web-mode-html-tag-bracket-face 1691 . 1692) (nil tag-name "img" 1690 . 1691) (nil tag-type void 1690 . 1691) (nil tag-end t 1690 . 1691) (nil font-lock-face web-mode-html-tag-bracket-face 1690 . 1691) (nil tag-attr t 1689 . 1690) (nil tag-attr-end 5 1689 . 1690) (nil tag-name "img" 1689 . 1690) (nil tag-type void 1689 . 1690) (nil font-lock-face web-mode-html-attr-value-face 1689 . 1690) (nil tag-attr t 1686 . 1689) (nil tag-name "img" 1686 . 1689) (nil tag-type void 1686 . 1689) (nil font-lock-face web-mode-html-attr-value-face 1686 . 1689) (nil tag-attr t 1685 . 1686) (nil tag-name "img" 1685 . 1686) (nil tag-type void 1685 . 1686) (nil font-lock-face web-mode-html-attr-equal-face 1685 . 1686) (nil tag-attr t 1681 . 1685) (nil tag-name "img" 1681 . 1685) (nil tag-type void 1681 . 1685) (nil font-lock-face web-mode-html-attr-name-face 1681 . 1685) (nil tag-attr-beg 0 1680 . 1681) (nil tag-attr t 1680 . 1681) (nil tag-name "img" 1680 . 1681) (nil tag-type void 1680 . 1681) (nil font-lock-face web-mode-html-attr-name-face 1680 . 1681) (nil tag-name "img" 1679 . 1680) (nil tag-type void 1679 . 1680) (nil tag-attr t 1678 . 1679) (nil tag-attr-end 3 1678 . 1679) (nil tag-name "img" 1678 . 1679) (nil tag-type void 1678 . 1679) (nil font-lock-face web-mode-html-attr-value-face 1678 . 1679) (nil tag-attr t 1646 . 1678) (nil tag-name "img" 1646 . 1678) (nil tag-type void 1646 . 1678) (nil font-lock-face web-mode-html-attr-value-face 1646 . 1678) (nil tag-attr t 1645 . 1646) (nil tag-name "img" 1645 . 1646) (nil tag-type void 1645 . 1646) (nil font-lock-face web-mode-html-attr-equal-face 1645 . 1646) (nil tag-attr t 1643 . 1645) (nil tag-name "img" 1643 . 1645) (nil tag-type void 1643 . 1645) (nil font-lock-face web-mode-html-attr-name-face 1643 . 1645) (nil tag-attr-beg 0 1642 . 1643) (nil tag-attr t 1642 . 1643) (nil tag-name "img" 1642 . 1643) (nil tag-type void 1642 . 1643) (nil font-lock-face web-mode-html-attr-name-face 1642 . 1643) (nil tag-name "img" 1641 . 1642) (nil tag-type void 1641 . 1642) (nil tag-name "img" 1638 . 1641) (nil tag-type void 1638 . 1641) (nil font-lock-face web-mode-html-tag-face 1638 . 1641) (nil tag-name "img" 1637 . 1638) (nil tag-type void 1637 . 1638) (nil tag-beg 17 1637 . 1638) (nil font-lock-face web-mode-html-tag-bracket-face 1637 . 1638) (nil tag-name "div" 1636 . 1637) (nil tag-type start 1636 . 1637) (nil tag-end t 1636 . 1637) (nil font-lock-face web-mode-html-tag-bracket-face 1636 . 1637) (nil tag-attr t 1635 . 1636) (nil tag-attr-end 5 1635 . 1636) (nil tag-name "div" 1635 . 1636) (nil tag-type start 1635 . 1636) (nil font-lock-face web-mode-html-attr-value-face 1635 . 1636) (nil tag-attr t 1562 . 1635) (nil tag-name "div" 1562 . 1635) (nil tag-type start 1562 . 1635) (nil font-lock-face web-mode-html-attr-value-face 1562 . 1635) (nil tag-attr t 1561 . 1562) (nil tag-name "div" 1561 . 1562) (nil tag-type start 1561 . 1562) (nil font-lock-face web-mode-html-attr-equal-face 1561 . 1562) (nil tag-attr t 1557 . 1561) (nil tag-name "div" 1557 . 1561) (nil tag-type start 1557 . 1561) (nil font-lock-face web-mode-html-attr-name-face 1557 . 1561) (nil tag-attr-beg 0 1556 . 1557) (nil tag-attr t 1556 . 1557) (nil tag-name "div" 1556 . 1557) (nil tag-type start 1556 . 1557) (nil font-lock-face web-mode-html-attr-name-face 1556 . 1557) (nil tag-name "div" 1555 . 1556) (nil tag-type start 1555 . 1556) (nil tag-name "div" 1552 . 1555) (nil tag-type start 1552 . 1555) (nil font-lock-face web-mode-html-tag-face 1552 . 1555) (nil tag-name "div" 1551 . 1552) (nil tag-type start 1551 . 1552) (nil tag-beg 17 1551 . 1552) (nil font-lock-face web-mode-html-tag-bracket-face 1551 . 1552) (nil tag-name "div" 1544 . 1545) (nil tag-type start 1544 . 1545) (nil tag-end t 1544 . 1545) (nil font-lock-face web-mode-html-tag-bracket-face 1544 . 1545) (nil tag-attr t 1543 . 1544) (nil tag-attr-end 5 1543 . 1544) (nil tag-name "div" 1543 . 1544) (nil tag-type start 1543 . 1544) (nil font-lock-face web-mode-html-attr-value-face 1543 . 1544) (nil tag-attr t 1502 . 1543) (nil tag-name "div" 1502 . 1543) (nil tag-type start 1502 . 1543) (nil font-lock-face web-mode-html-attr-value-face 1502 . 1543) (nil tag-attr t 1501 . 1502) (nil tag-name "div" 1501 . 1502) (nil tag-type start 1501 . 1502) (nil font-lock-face web-mode-html-attr-equal-face 1501 . 1502) (nil tag-attr t 1497 . 1501) (nil tag-name "div" 1497 . 1501) (nil tag-type start 1497 . 1501) (nil font-lock-face web-mode-html-attr-name-face 1497 . 1501) (nil tag-attr-beg 0 1496 . 1497) (nil tag-attr t 1496 . 1497) (nil tag-name "div" 1496 . 1497) (nil tag-type start 1496 . 1497) (nil font-lock-face web-mode-html-attr-name-face 1496 . 1497) (nil tag-name "div" 1495 . 1496) (nil tag-type start 1495 . 1496) (nil tag-name "div" 1492 . 1495) (nil tag-type start 1492 . 1495) (nil font-lock-face web-mode-html-tag-face 1492 . 1495) (nil tag-name "div" 1491 . 1492) (nil tag-type start 1491 . 1492) (nil tag-beg 17 1491 . 1492) (nil font-lock-face web-mode-html-tag-bracket-face 1491 . 1492) (1486 . 2042)) ((#("     <div class=\"d-flex justify-content-center mt-5 h-100\">
     <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
     </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

     <button
     onclick=\"setcookie();\"
     class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>" 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 9 10 (tag-type start tag-name "div") 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 11 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 16 57 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 57 58 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 58 59 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 65 66 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 66 69 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 69 70 (tag-type start tag-name "div") 70 71 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 71 75 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 75 76 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 76 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 149 150 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 150 151 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 151 152 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 152 155 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 155 156 (tag-type void tag-name "img") 156 157 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 157 159 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 159 160 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 160 192 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 192 193 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 193 194 (tag-type void tag-name "img") 194 195 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 195 199 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 199 200 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 200 203 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 203 204 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 204 205 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 206 210 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 210 211 (face (whitespace-line) tag-type start tag-name "span") 211 212 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 212 215 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 215 216 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 216 217 (face (whitespace-line web-mode-html-attr-equal-face) font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 217 222 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 222 223 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 223 224 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 224 289 (face (whitespace-line)) 289 301 (face (whitespace-line)) 301 304 (face (whitespace-line)) 310 311 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 312 316 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 316 317 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 317 318 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 318 319 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 319 320 (tag-type start tag-name "a") 320 321 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 321 325 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 325 326 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 326 344 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 344 345 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 345 346 (tag-type start tag-name "a") 346 347 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 347 351 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 351 352 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 352 378 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 378 379 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 379 380 (tag-type start tag-name "a") 380 381 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 381 384 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 384 385 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 385 396 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 396 397 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 397 398 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 408 409 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 409 410 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 410 411 (tag-type start tag-name "i") 411 412 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 412 416 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 416 417 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 417 440 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 440 441 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 441 442 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 442 443 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 443 444 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 444 445 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 445 446 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 446 447 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 447 448 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 448 449 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 449 450 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 457 458 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 458 464 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 464 465 (tag-type start tag-name "button") 465 470 (tag-type start tag-name "button") 470 471 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8) 471 477 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 477 478 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 478 491 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 491 492 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 7 tag-attr t) 492 493 (tag-type start tag-name "button") 493 498 (tag-type start tag-name "button") 498 499 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 499 503 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 503 504 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 504 527 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 527 528 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 528 529 (tag-type start tag-name "button") 529 530 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 530 533 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 533 534 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 534 541 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 541 542 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 542 543 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 547 548 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 548 549 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 549 555 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 555 556 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" rear-nonsticky nil)) . 1486) (undo-tree-id1200 . -60) (undo-tree-id1201 . -556) (undo-tree-id1202 . -556) (undo-tree-id1203 . -59) (undo-tree-id1204 . -149) (undo-tree-id1205 . -556) (undo-tree-id1206 . -556) (undo-tree-id1207 . -556) (undo-tree-id1208 . -556) (undo-tree-id1209 . -556) (undo-tree-id1210 . -556) (undo-tree-id1211 . -556) (undo-tree-id1212 . -556) (undo-tree-id1213 . -556) (undo-tree-id1214 . -556) (undo-tree-id1215 . -556) (undo-tree-id1216 . -556) (undo-tree-id1217 . -556) (undo-tree-id1218 . -556) (undo-tree-id1219 . -556) (undo-tree-id1220 . -556) (undo-tree-id1221 . -556) (undo-tree-id1222 . -556) (undo-tree-id1223 . -556) (undo-tree-id1224 . -556) (undo-tree-id1225 . -556) (nil tag-name "div" 1491 . 1492) (nil tag-name "div" 1492 . 1495) (nil tag-name "div" 1495 . 1496) (nil tag-name "div" 1496 . 1497) (nil tag-name "div" 1497 . 1501) (nil tag-name "div" 1501 . 1502) (nil tag-name "div" 1502 . 1543) (nil tag-name "div" 1543 . 1544) (nil tag-name "div" 1544 . 1545) (nil tag-name "div" 1551 . 1552) (nil tag-name "div" 1552 . 1555) (nil tag-name "div" 1555 . 1556) (nil tag-name "div" 1556 . 1557) (nil tag-name "div" 1557 . 1561) (nil tag-name "div" 1561 . 1562) (nil tag-name "div" 1562 . 1635) (nil tag-name "div" 1635 . 1636) (nil tag-name "div" 1636 . 1637) (nil tag-name "img" 1637 . 1638) (nil tag-name "img" 1638 . 1641) (nil tag-name "img" 1641 . 1642) (nil tag-name "img" 1642 . 1643) (nil tag-name "img" 1643 . 1645) (nil tag-name "img" 1645 . 1646) (nil tag-name "img" 1646 . 1678) (nil tag-name "img" 1678 . 1679) (nil tag-name "img" 1679 . 1680) (nil tag-name "img" 1680 . 1681) (nil tag-name "img" 1681 . 1685) (nil tag-name "img" 1685 . 1686) (nil tag-name "img" 1686 . 1689) (nil tag-name "img" 1689 . 1690) (nil tag-name "img" 1690 . 1691) (nil tag-name "span" 1691 . 1692) (nil tag-name "span" 1692 . 1696) (nil face nil 1696 . 1697) (nil tag-name "span" 1696 . 1697) (nil face nil 1697 . 1698) (nil tag-name "span" 1697 . 1698) (nil face nil 1701 . 1702) (nil face nil 1698 . 1701) (nil tag-name "span" 1701 . 1702) (nil tag-name "span" 1698 . 1701) (nil face nil 1702 . 1703) (nil tag-name "span" 1702 . 1703) (nil face nil 1703 . 1708) (nil tag-name "span" 1703 . 1708) (nil face nil 1708 . 1709) (nil tag-name "span" 1708 . 1709) (nil face nil 1709 . 1710) (nil tag-name "span" 1709 . 1710) (nil face nil 1787 . 1790) (nil face nil 1775 . 1787) (nil face nil 1710 . 1775) (nil tag-name "span" 1796 . 1797) (nil tag-name "span" 1797 . 1798) (nil tag-name "span" 1798 . 1802) (nil tag-name "span" 1802 . 1803) (nil tag-name "a" 1803 . 1804) (nil tag-name "a" 1804 . 1805) (nil tag-name "a" 1805 . 1806) (nil tag-name "a" 1806 . 1807) (nil tag-name "a" 1807 . 1811) (nil tag-name "a" 1811 . 1812) (nil tag-name "a" 1812 . 1830) (nil tag-name "a" 1830 . 1831) (nil tag-name "a" 1831 . 1832) (nil tag-name "a" 1832 . 1833) (nil tag-name "a" 1833 . 1837) (nil tag-name "a" 1837 . 1838) (nil tag-name "a" 1838 . 1864) (nil tag-name "a" 1864 . 1865) (nil tag-name "a" 1865 . 1866) (nil tag-name "a" 1866 . 1867) (nil tag-name "a" 1867 . 1870) (nil tag-name "a" 1870 . 1871) (nil tag-name "a" 1871 . 1882) (nil tag-name "a" 1882 . 1883) (nil tag-name "a" 1883 . 1884) (nil tag-name "i" 1894 . 1895) (nil tag-name "i" 1895 . 1896) (nil tag-name "i" 1896 . 1897) (nil tag-name "i" 1897 . 1898) (nil tag-name "i" 1898 . 1902) (nil tag-name "i" 1902 . 1903) (nil tag-name "i" 1903 . 1926) (nil tag-name "i" 1926 . 1927) (nil tag-name "i" 1927 . 1928) (nil tag-name "i" 1928 . 1929) (nil tag-name "i" 1929 . 1930) (nil tag-name "i" 1930 . 1931) (nil tag-name "i" 1931 . 1932) (nil tag-name "a" 1932 . 1933) (nil tag-name "a" 1933 . 1934) (nil tag-name "a" 1934 . 1935) (nil tag-name "a" 1935 . 1936) (nil tag-name "button" 1943 . 1944) (nil tag-name "button" 1944 . 1950) (nil tag-name "button" 1951 . 1956) (nil tag-name "button" 1950 . 1951) (nil tag-name "button" 1956 . 1957) (nil tag-name "button" 1957 . 1963) (nil tag-name "button" 1963 . 1964) (nil tag-name "button" 1964 . 1977) (nil tag-name "button" 1977 . 1978) (nil tag-name "button" 1979 . 1984) (nil tag-name "button" 1978 . 1979) (nil tag-name "button" 1984 . 1985) (nil tag-name "button" 1985 . 1989) (nil tag-name "button" 1989 . 1990) (nil tag-name "button" 1990 . 2013) (nil tag-name "button" 2013 . 2014) (nil tag-name "button" 2014 . 2015) (nil tag-name "button" 2015 . 2016) (nil tag-name "button" 2016 . 2019) (nil tag-name "button" 2019 . 2020) (nil tag-name "button" 2020 . 2027) (nil tag-name "button" 2027 . 2028) (nil tag-name "button" 2028 . 2029) (nil tag-name "button" 2033 . 2034) (nil tag-name "button" 2034 . 2035) (nil tag-name "button" 2035 . 2041) (nil tag-name "button" 2041 . 2042) (nil rear-nonsticky t 2041 . 2042)) (25699 62097 545098 922000) 0 nil])
([nil nil ((683 . 692) (t 25699 62177 503323 302000)) nil (25699 62258 147623 789000) 0 nil])
([nil nil ((1996 . 2008) (#("     " 0 5 (tag-type start tag-name "button")) . 1996) (1961 . 1973) (#("     " 0 5 (tag-type start tag-name "button")) . 1961) (1943 . 1953) ("     " . 1943) (1791 . 1801) ("     " . 1791) (1541 . 1551) ("     " . 1541) ("     " . -1486) 1478) ((1486 . 1491) (1541 . 1546) ("          " . 1541) (1791 . 1796) ("          " . 1791) (1943 . 1948) ("          " . 1943) (1961 . 1966) (#("            " 0 12 (tag-type start tag-name "button")) . 1961) (1996 . 2001) (#("            " 0 12 (tag-type start tag-name "button")) . 1996)) (25699 62097 366979 194000) 0 nil])
([nil nil ((nil rear-nonsticky nil 932 . 933) (nil tag-name "div" 932 . 933) (nil tag-type end 932 . 933) (nil tag-end t 932 . 933) (nil font-lock-face web-mode-html-tag-bracket-face 932 . 933) (nil tag-name "div" 929 . 932) (nil tag-type end 929 . 932) (nil font-lock-face web-mode-html-tag-face 929 . 932) (nil tag-name "div" 928 . 929) (nil tag-type end 928 . 929) (nil font-lock-face web-mode-html-tag-bracket-face 928 . 929) (nil tag-name "div" 927 . 928) (nil tag-type end 927 . 928) (nil tag-beg 20 927 . 928) (nil font-lock-face web-mode-html-tag-bracket-face 927 . 928) (nil tag-name "button" 919 . 920) (nil tag-type end 919 . 920) (nil tag-end t 919 . 920) (nil font-lock-face web-mode-html-tag-bracket-face 919 . 920) (nil tag-name "button" 913 . 919) (nil tag-type end 913 . 919) (nil font-lock-face web-mode-html-tag-face 913 . 919) (nil tag-name "button" 912 . 913) (nil tag-type end 912 . 913) (nil font-lock-face web-mode-html-tag-bracket-face 912 . 913) (nil tag-name "button" 911 . 912) (nil tag-type end 911 . 912) (nil tag-beg 20 911 . 912) (nil font-lock-face web-mode-html-tag-bracket-face 911 . 912) (nil tag-name "span" 901 . 902) (nil tag-type end 901 . 902) (nil tag-end t 901 . 902) (nil font-lock-face web-mode-html-tag-bracket-face 901 . 902) (nil tag-name "span" 897 . 901) (nil tag-type end 897 . 901) (nil font-lock-face web-mode-html-tag-face 897 . 901) (nil tag-name "span" 896 . 897) (nil tag-type end 896 . 897) (nil font-lock-face web-mode-html-tag-bracket-face 896 . 897) (nil tag-name "span" 895 . 896) (nil tag-type end 895 . 896) (nil tag-beg 20 895 . 896) (nil font-lock-face web-mode-html-tag-bracket-face 895 . 896) (nil font-lock-face (web-mode-html-entity-face) 888 . 895) (nil tag-name "span" 887 . 888) (nil tag-type start 887 . 888) (nil tag-end t 887 . 888) (nil font-lock-face web-mode-html-tag-bracket-face 887 . 888) (nil tag-attr t 886 . 887) (nil tag-attr-end 11 886 . 887) (nil tag-name "span" 886 . 887) (nil tag-type start 886 . 887) (nil font-lock-face web-mode-html-attr-value-face 886 . 887) (nil tag-attr t 881 . 886) (nil tag-name "span" 881 . 886) (nil tag-type start 881 . 886) (nil font-lock-face web-mode-html-attr-value-face 881 . 886) (nil tag-attr t 880 . 881) (nil tag-name "span" 880 . 881) (nil tag-type start 880 . 881) (nil font-lock-face web-mode-html-attr-equal-face 880 . 881) (nil tag-attr t 870 . 880) (nil tag-name "span" 870 . 880) (nil tag-type start 870 . 880) (nil font-lock-face web-mode-html-attr-name-face 870 . 880) (nil tag-attr-beg 0 869 . 870) (nil tag-attr t 869 . 870) (nil tag-name "span" 869 . 870) (nil tag-type start 869 . 870) (nil font-lock-face web-mode-html-attr-name-face 869 . 870) (nil tag-name "span" 868 . 869) (nil tag-type start 868 . 869) (nil tag-name "span" 864 . 868) (nil tag-type start 864 . 868) (nil font-lock-face web-mode-html-tag-face 864 . 868) (nil tag-name "span" 863 . 864) (nil tag-type start 863 . 864) (nil tag-beg 17 863 . 864) (nil font-lock-face web-mode-html-tag-bracket-face 863 . 864) (nil tag-name "button" 851 . 852) (nil tag-type start 851 . 852) (nil tag-end t 851 . 852) (nil font-lock-face web-mode-html-tag-bracket-face 851 . 852) (nil tag-attr t 850 . 851) (nil tag-attr-end 10 850 . 851) (nil tag-name "button" 850 . 851) (nil tag-type start 850 . 851) (nil font-lock-face web-mode-html-attr-value-face 850 . 851) (nil tag-attr t 844 . 850) (nil tag-name "button" 844 . 850) (nil tag-type start 844 . 850) (nil font-lock-face web-mode-html-attr-value-face 844 . 850) (nil tag-attr t 843 . 844) (nil tag-name "button" 843 . 844) (nil tag-type start 843 . 844) (nil font-lock-face web-mode-html-attr-equal-face 843 . 844) (nil tag-attr t 834 . 843) (nil tag-name "button" 834 . 843) (nil tag-type start 834 . 843) (nil font-lock-face web-mode-html-attr-name-face 834 . 843) (nil tag-attr-beg 0 833 . 834) (nil tag-attr t 833 . 834) (nil tag-name "button" 833 . 834) (nil tag-type start 833 . 834) (nil font-lock-face web-mode-html-attr-name-face 833 . 834) (nil tag-name "button" 832 . 833) (nil tag-type start 832 . 833) (nil tag-attr t 831 . 832) (nil tag-attr-end 12 831 . 832) (nil tag-name "button" 831 . 832) (nil tag-type start 831 . 832) (nil font-lock-face web-mode-html-attr-value-face 831 . 832) (nil tag-attr t 825 . 831) (nil tag-name "button" 825 . 831) (nil tag-type start 825 . 831) (nil font-lock-face web-mode-html-attr-value-face 825 . 831) (nil tag-attr t 824 . 825) (nil tag-name "button" 824 . 825) (nil tag-type start 824 . 825) (nil font-lock-face web-mode-html-attr-equal-face 824 . 825) (nil tag-attr t 813 . 824) (nil tag-name "button" 813 . 824) (nil tag-type start 813 . 824) (nil font-lock-face web-mode-html-attr-custom-face 813 . 824) (nil tag-attr-beg 1 812 . 813) (nil tag-attr t 812 . 813) (nil tag-name "button" 812 . 813) (nil tag-type start 812 . 813) (nil font-lock-face web-mode-html-attr-custom-face 812 . 813) (nil tag-name "button" 811 . 812) (nil tag-type start 811 . 812) (nil tag-attr t 810 . 811) (nil tag-attr-end 5 810 . 811) (nil tag-name "button" 810 . 811) (nil tag-type start 810 . 811) (nil font-lock-face web-mode-html-attr-value-face 810 . 811) (nil tag-attr t 804 . 810) (nil tag-name "button" 804 . 810) (nil tag-type start 804 . 810) (nil font-lock-face web-mode-html-attr-value-face 804 . 810) (nil tag-attr t 803 . 804) (nil tag-name "button" 803 . 804) (nil tag-type start 803 . 804) (nil font-lock-face web-mode-html-attr-equal-face 803 . 804) (nil tag-attr t 799 . 803) (nil tag-name "button" 799 . 803) (nil tag-type start 799 . 803) (nil font-lock-face web-mode-html-attr-name-face 799 . 803) (nil tag-attr-beg 0 798 . 799) (nil tag-attr t 798 . 799) (nil tag-name "button" 798 . 799) (nil tag-type start 798 . 799) (nil font-lock-face web-mode-html-attr-name-face 798 . 799) (nil tag-name "button" 797 . 798) (nil tag-type start 797 . 798) (nil tag-attr t 796 . 797) (nil tag-attr-end 4 796 . 797) (nil tag-name "button" 796 . 797) (nil tag-type start 796 . 797) (nil font-lock-face web-mode-html-attr-value-face 796 . 797) (nil tag-attr t 789 . 796) (nil tag-name "button" 789 . 796) (nil tag-type start 789 . 796) (nil font-lock-face web-mode-html-attr-value-face 789 . 796) (nil tag-attr t 788 . 789) (nil tag-name "button" 788 . 789) (nil tag-type start 788 . 789) (nil font-lock-face web-mode-html-attr-equal-face 788 . 789) (nil tag-attr t 785 . 788) (nil tag-name "button" 785 . 788) (nil tag-type start 785 . 788) (nil font-lock-face web-mode-html-attr-name-face 785 . 788) (nil tag-attr-beg 0 784 . 785) (nil tag-attr t 784 . 785) (nil tag-name "button" 784 . 785) (nil tag-type start 784 . 785) (nil font-lock-face web-mode-html-attr-name-face 784 . 785) (nil tag-name "button" 783 . 784) (nil tag-type start 783 . 784) (nil tag-name "button" 777 . 783) (nil tag-type start 777 . 783) (nil font-lock-face web-mode-html-tag-face 777 . 783) (nil tag-name "button" 776 . 777) (nil tag-type start 776 . 777) (nil tag-beg 17 776 . 777) (nil font-lock-face web-mode-html-tag-bracket-face 776 . 777) (nil tag-name "h5" 766 . 767) (nil tag-type end 766 . 767) (nil tag-end t 766 . 767) (nil font-lock-face web-mode-html-tag-bracket-face 766 . 767) (nil tag-name "h5" 764 . 766) (nil tag-type end 764 . 766) (nil font-lock-face web-mode-html-tag-face 764 . 766) (nil tag-name "h5" 763 . 764) (nil tag-type end 763 . 764) (nil font-lock-face web-mode-html-tag-bracket-face 763 . 764) (nil tag-name "h5" 762 . 763) (nil tag-type end 762 . 763) (nil tag-beg 20 762 . 763) (nil font-lock-face web-mode-html-tag-bracket-face 762 . 763) (nil tag-name "h5" 750 . 751) (nil tag-type start 750 . 751) (nil tag-end t 750 . 751) (nil font-lock-face web-mode-html-tag-bracket-face 750 . 751) (nil tag-attr t 749 . 750) (nil tag-attr-end 5 749 . 750) (nil tag-name "h5" 749 . 750) (nil tag-type start 749 . 750) (nil font-lock-face web-mode-html-attr-value-face 749 . 750) (nil tag-attr t 737 . 749) (nil tag-name "h5" 737 . 749) (nil tag-type start 737 . 749) (nil font-lock-face web-mode-html-attr-value-face 737 . 749) (nil tag-attr t 736 . 737) (nil tag-name "h5" 736 . 737) (nil tag-type start 736 . 737) (nil font-lock-face web-mode-html-attr-equal-face 736 . 737) (nil tag-attr t 732 . 736) (nil tag-name "h5" 732 . 736) (nil tag-type start 732 . 736) (nil font-lock-face web-mode-html-attr-name-face 732 . 736) (nil tag-attr-beg 0 731 . 732) (nil tag-attr t 731 . 732) (nil tag-name "h5" 731 . 732) (nil tag-type start 731 . 732) (nil font-lock-face web-mode-html-attr-name-face 731 . 732) (nil tag-name "h5" 730 . 731) (nil tag-type start 730 . 731) (nil tag-name "h5" 728 . 730) (nil tag-type start 728 . 730) (nil font-lock-face web-mode-html-tag-face 728 . 730) (nil tag-name "h5" 727 . 728) (nil tag-type start 727 . 728) (nil tag-beg 17 727 . 728) (nil font-lock-face web-mode-html-tag-bracket-face 727 . 728) (nil tag-name "div" 717 . 718) (nil tag-type start 717 . 718) (nil tag-end t 717 . 718) (nil font-lock-face web-mode-html-tag-bracket-face 717 . 718) (nil tag-attr t 716 . 717) (nil tag-attr-end 5 716 . 717) (nil tag-name "div" 716 . 717) (nil tag-type start 716 . 717) (nil font-lock-face web-mode-html-attr-value-face 716 . 717) (nil tag-attr t 703 . 716) (nil tag-name "div" 703 . 716) (nil tag-type start 703 . 716) (nil font-lock-face web-mode-html-attr-value-face 703 . 716) (nil tag-attr t 702 . 703) (nil tag-name "div" 702 . 703) (nil tag-type start 702 . 703) (nil font-lock-face web-mode-html-attr-equal-face 702 . 703) (nil tag-attr t 698 . 702) (nil tag-name "div" 698 . 702) (nil tag-type start 698 . 702) (nil font-lock-face web-mode-html-attr-name-face 698 . 702) (nil tag-attr-beg 0 697 . 698) (nil tag-attr t 697 . 698) (nil tag-name "div" 697 . 698) (nil tag-type start 697 . 698) (nil font-lock-face web-mode-html-attr-name-face 697 . 698) (nil tag-name "div" 696 . 697) (nil tag-type start 696 . 697) (nil tag-name "div" 693 . 696) (nil tag-type start 693 . 696) (nil font-lock-face web-mode-html-tag-face 693 . 696) (nil tag-name "div" 692 . 693) (nil tag-type start 692 . 693) (nil tag-beg 17 692 . 693) (nil font-lock-face web-mode-html-tag-bracket-face 692 . 693) (692 . 933)) nil (25699 62258 147609 863000) 0 nil])
([nil nil ((#("
        <p>Modal body text goes here.</p>" 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 10 11 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 40 41 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 2066) (undo-tree-id985 . -42) (undo-tree-id986 . -1) (undo-tree-id988 . -42)) ((2066 . 2108)) (25699 62097 198812 360000) 0 nil])
([nil nil ((929 . 937) ("      " . 929) (917 . 919) (867 . 869) (778 . 780) (727 . 729) 684) nil (25699 62258 147553 39000) 0 nil])
([nil nil ((2066 . 2077) (t 25699 61940 391615 915000)) (("
          " . 2066) (undo-tree-id1192 . -1) (undo-tree-id1193 . -11) (undo-tree-id1194 . -1) (undo-tree-id1195 . -11) (undo-tree-id1196 . -11) (undo-tree-id1197 . -11) (undo-tree-id1198 . -11) (undo-tree-id1199 . -11)) (25699 62097 36448 494000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1092 . 1093) (nil tag-attr t 1089 . 1093) (nil tag-name "div" 1089 . 1093) (nil tag-type start 1089 . 1093) (nil font-lock-face web-mode-html-attr-value-face 1089 . 1093) (1089 . 1093)) nil (25699 62258 147550 616000) 0 nil])
([nil nil ((2077 . 2083)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 2077) (undo-tree-id1181 . -6) (undo-tree-id1182 . -6) (undo-tree-id1183 . -6) (undo-tree-id1184 . -6) (undo-tree-id1185 . -6) (undo-tree-id1186 . -6) (undo-tree-id1187 . -6) (undo-tree-id1188 . -6) (undo-tree-id1189 . -6) (undo-tree-id1190 . -6) (undo-tree-id1191 . -6)) (25699 62096 893918 759000) 0 nil])
([nil nil ((1093 . 1094)) nil (25699 62258 147548 594000) 0 nil])
([nil nil ((2083 . 2094)) (("
          " . 2083) (undo-tree-id1171 . -1) (undo-tree-id1172 . -11) (undo-tree-id1173 . -1) (undo-tree-id1174 . -11) (undo-tree-id1175 . -11) (undo-tree-id1176 . -11) (undo-tree-id1177 . -11) (undo-tree-id1178 . -11) (undo-tree-id1179 . -11) (undo-tree-id1180 . -11)) (25699 62096 696454 565000) 0 nil])
([nil nil ((#("<h5 class=\"modal-title\">Modal title</h5>
          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">
            <span aria-hidden=\"true\">&times;</span>
          </button>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h5") 1 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h5") 3 4 (tag-type start tag-name "h5") 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t tag-attr-beg 0) 5 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h5" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h5" tag-attr t) 10 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h5" tag-attr-end 5 tag-attr t) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h5") 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h5") 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h5") 37 39 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h5") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h5") 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 52 58 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 58 59 (tag-type start tag-name "button") 59 60 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 60 63 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 63 64 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 64 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 71 72 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 72 73 (tag-type start tag-name "button") 73 74 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 74 78 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 79 85 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 85 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 86 87 (tag-type start tag-name "button") 87 88 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 88 99 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 99 100 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 100 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 106 107 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 107 108 (tag-type start tag-name "button") 108 109 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 109 118 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 118 119 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 119 125 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 125 126 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 10 tag-attr t) 126 127 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 140 141 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 141 145 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 145 146 (tag-type start tag-name "span") 146 147 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 147 157 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 157 158 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 158 163 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 163 164 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 11 tag-attr t) 164 165 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 165 172 (font-lock-face (web-mode-html-entity-face)) 172 173 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 174 178 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 178 179 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 191 192 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 192 198 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 198 199 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button")) . 729) (undo-tree-id1372 . -199) (undo-tree-id1373 . -41) (undo-tree-id1374 . -199)) nil (25699 62258 147547 143000) 0 nil])
([nil nil (("  " . -2092) (2094 . 2100)) ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 2094) (2092 . 2094)) (25699 62096 504079 129000) 0 nil])
([nil nil ((nil rear-nonsticky nil 782 . 783) (nil tag-name "img" 782 . 783) (nil tag-type void 782 . 783) (nil tag-end t 782 . 783) (nil font-lock-face web-mode-html-tag-bracket-face 782 . 783) (nil tag-attr t 781 . 782) (nil tag-attr-end 5 781 . 782) (nil tag-name "img" 781 . 782) (nil tag-type void 781 . 782) (nil font-lock-face web-mode-html-attr-value-face 781 . 782) (nil tag-attr t 778 . 781) (nil tag-name "img" 778 . 781) (nil tag-type void 778 . 781) (nil font-lock-face web-mode-html-attr-value-face 778 . 781) (nil tag-attr t 777 . 778) (nil tag-name "img" 777 . 778) (nil tag-type void 777 . 778) (nil font-lock-face web-mode-html-attr-equal-face 777 . 778) (nil tag-attr t 773 . 777) (nil tag-name "img" 773 . 777) (nil tag-type void 773 . 777) (nil font-lock-face web-mode-html-attr-name-face 773 . 777) (nil tag-attr-beg 0 772 . 773) (nil tag-attr t 772 . 773) (nil tag-name "img" 772 . 773) (nil tag-type void 772 . 773) (nil font-lock-face web-mode-html-attr-name-face 772 . 773) (nil tag-name "img" 771 . 772) (nil tag-type void 771 . 772) (nil tag-attr t 770 . 771) (nil tag-attr-end 3 770 . 771) (nil tag-name "img" 770 . 771) (nil tag-type void 770 . 771) (nil font-lock-face web-mode-html-attr-value-face 770 . 771) (nil tag-attr t 738 . 770) (nil tag-name "img" 738 . 770) (nil tag-type void 738 . 770) (nil font-lock-face web-mode-html-attr-value-face 738 . 770) (nil tag-attr t 737 . 738) (nil tag-name "img" 737 . 738) (nil tag-type void 737 . 738) (nil font-lock-face web-mode-html-attr-equal-face 737 . 738) (nil tag-attr t 735 . 737) (nil tag-name "img" 735 . 737) (nil tag-type void 735 . 737) (nil font-lock-face web-mode-html-attr-name-face 735 . 737) (nil tag-attr-beg 0 734 . 735) (nil tag-attr t 734 . 735) (nil tag-name "img" 734 . 735) (nil tag-type void 734 . 735) (nil font-lock-face web-mode-html-attr-name-face 734 . 735) (nil tag-name "img" 733 . 734) (nil tag-type void 733 . 734) (nil tag-name "img" 730 . 733) (nil tag-type void 730 . 733) (nil font-lock-face web-mode-html-tag-face 730 . 733) (nil tag-name "img" 729 . 730) (nil tag-type void 729 . 730) (nil tag-beg 17 729 . 730) (nil font-lock-face web-mode-html-tag-bracket-face 729 . 730) (729 . 783)) nil (25699 62276 504346 56000) 0 nil])
([nil nil ((1637 . 1650) (t 25699 61973 435574 659000)) (("
            " . 1637) (undo-tree-id1170 . -1)) (25699 62096 311450 63000) 0 nil])
([nil nil ((#("        <div class=\"modal-header\">
          <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
        </div>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 12 13 (tag-type start tag-name "div") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 14 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 19 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 46 49 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 49 50 (tag-type void tag-name "img") 50 51 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 51 53 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 54 86 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 87 88 (tag-type void tag-name "img") 88 89 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 89 93 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 93 94 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 94 97 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img" rear-nonsticky t) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 110 113 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 684) (undo-tree-id1397 . -114) (undo-tree-id1398 . -35) (undo-tree-id1399 . -8) (undo-tree-id1400 . -114) (undo-tree-id1401 . -45) (undo-tree-id1402 . -45) (undo-tree-id1403 . -114) (undo-tree-id1404 . -114)) nil (25699 62289 355997 602000) 0 nil] [nil nil ((#("        <div class=\"modal-header\">
          <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
        </div>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 12 13 (tag-type start tag-name "div") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 14 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 19 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 46 49 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 49 50 (tag-type void tag-name "img") 50 51 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 51 53 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 54 86 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 87 88 (tag-type void tag-name "img") 88 89 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 89 93 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 93 94 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 94 97 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img" rear-nonsticky t) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 110 113 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 684) (undo-tree-id1382 . -114) (undo-tree-id1383 . -35) (undo-tree-id1384 . -8) (undo-tree-id1385 . -114) (undo-tree-id1386 . -45) (undo-tree-id1387 . -45) (undo-tree-id1388 . -114)) ((684 . 798)) (25699 62274 870096 218000) 0 nil] [nil nil ((#("<img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 1 4 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 4 5 (tag-type void tag-name "img") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 6 8 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 9 41 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 42 43 (tag-type void tag-name "img") 43 44 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 44 48 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 48 49 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 49 52 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 52 53 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 53 54 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img")) . 958) (undo-tree-id1367 . -54) (undo-tree-id1368 . -54) (undo-tree-id1370 . -54) (undo-tree-id1371 . -54)) ((958 . 1012) (t 25699 62258 175225 262000)) (25699 62258 147522 289000) 0 nil])
([nil nil ((1704 . 1717)) (("
            " . 1704) (undo-tree-id1169 . -1)) (25699 62096 118926 494000) 0 nil])
([nil nil (("
" . -683) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) 684) nil (25699 62295 526972 452000) 0 nil])
([nil nil (("
" . -683) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) 684) ((683 . 684)) (25699 62274 869705 756000) 0 nil])
nil
([nil nil ((1736 . 1751)) (("
              " . 1736)) (25699 62095 929814 840000) 0 nil])
([nil nil ((#("
      <div class=\"modal-body\">" 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 8 11 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 11 12 (tag-type start tag-name "div") 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 13 17 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 18 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 30 31 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 652) (undo-tree-id1465 . -31) (undo-tree-id1466 . -1) (undo-tree-id1467 . -31) (undo-tree-id1468 . -31) (undo-tree-id1469 . -31) (undo-tree-id1470 . -31) (undo-tree-id1471 . -31) (undo-tree-id1472 . -31) (undo-tree-id1473 . -31) (t 25699 62296 323179 114000)) nil (25699 62321 197888 61000) 0 nil] [nil nil ((652 . 659)) (("
      " . 652) (undo-tree-id1407 . -7) (undo-tree-id1408 . -1) (undo-tree-id1409 . -7) (undo-tree-id1410 . -7) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -7) (undo-tree-id1444 . -7) (undo-tree-id1445 . -7) (undo-tree-id1446 . -7) (undo-tree-id1447 . -7) (undo-tree-id1448 . -7) (undo-tree-id1449 . -7) (undo-tree-id1450 . -7) (undo-tree-id1451 . -7) (undo-tree-id1452 . -7) (undo-tree-id1453 . -7) (undo-tree-id1454 . -7) (undo-tree-id1455 . -7) (undo-tree-id1456 . -7) (undo-tree-id1457 . -7) (undo-tree-id1458 . -7) (undo-tree-id1459 . -7) (undo-tree-id1460 . -7) (undo-tree-id1461 . -7)) (25699 62294 955482 124000) 0 nil])
nil
([nil nil ((1842 . 1844) 1846) (("  " . 1842)) (25699 62095 733949 181000) 0 nil])
([nil nil ((#("
        </div>" 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 11 14 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 1258) (undo-tree-id1462 . -15) (undo-tree-id1463 . -1) (undo-tree-id1464 . -15)) nil (25699 62321 197871 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 772 . 773) (nil rear-nonsticky t 772 . 773) (nil tag-name "div" 772 . 773) (nil tag-type end 772 . 773) (nil tag-end t 772 . 773) (nil font-lock-face web-mode-html-tag-bracket-face 772 . 773) (nil tag-name "div" 769 . 772) (nil tag-type end 769 . 772) (nil font-lock-face web-mode-html-tag-face 769 . 772) (nil tag-name "div" 768 . 769) (nil tag-type end 768 . 769) (nil font-lock-face web-mode-html-tag-bracket-face 768 . 769) (nil tag-name "div" 767 . 768) (nil tag-type end 767 . 768) (nil tag-beg 20 767 . 768) (nil font-lock-face web-mode-html-tag-bracket-face 767 . 768) (nil rear-nonsticky t 757 . 758) (nil tag-name "img" 757 . 758) (nil tag-type void 757 . 758) (nil tag-end t 757 . 758) (nil font-lock-face web-mode-html-tag-bracket-face 757 . 758) (nil tag-attr t 756 . 757) (nil tag-attr-end 5 756 . 757) (nil tag-name "img" 756 . 757) (nil tag-type void 756 . 757) (nil font-lock-face web-mode-html-attr-value-face 756 . 757) (nil tag-attr t 753 . 756) (nil tag-name "img" 753 . 756) (nil tag-type void 753 . 756) (nil font-lock-face web-mode-html-attr-value-face 753 . 756) (nil tag-attr t 752 . 753) (nil tag-name "img" 752 . 753) (nil tag-type void 752 . 753) (nil font-lock-face web-mode-html-attr-equal-face 752 . 753) (nil tag-attr t 748 . 752) (nil tag-name "img" 748 . 752) (nil tag-type void 748 . 752) (nil font-lock-face web-mode-html-attr-name-face 748 . 752) (nil tag-attr-beg 0 747 . 748) (nil tag-attr t 747 . 748) (nil tag-name "img" 747 . 748) (nil tag-type void 747 . 748) (nil font-lock-face web-mode-html-attr-name-face 747 . 748) (nil tag-name "img" 746 . 747) (nil tag-type void 746 . 747) (nil tag-attr t 745 . 746) (nil tag-attr-end 3 745 . 746) (nil tag-name "img" 745 . 746) (nil tag-type void 745 . 746) (nil font-lock-face web-mode-html-attr-value-face 745 . 746) (nil tag-attr t 713 . 745) (nil tag-name "img" 713 . 745) (nil tag-type void 713 . 745) (nil font-lock-face web-mode-html-attr-value-face 713 . 745) (nil tag-attr t 712 . 713) (nil tag-name "img" 712 . 713) (nil tag-type void 712 . 713) (nil font-lock-face web-mode-html-attr-equal-face 712 . 713) (nil tag-attr t 710 . 712) (nil tag-name "img" 710 . 712) (nil tag-type void 710 . 712) (nil font-lock-face web-mode-html-attr-name-face 710 . 712) (nil tag-attr-beg 0 709 . 710) (nil tag-attr t 709 . 710) (nil tag-name "img" 709 . 710) (nil tag-type void 709 . 710) (nil font-lock-face web-mode-html-attr-name-face 709 . 710) (nil tag-name "img" 708 . 709) (nil tag-type void 708 . 709) (nil tag-name "img" 705 . 708) (nil tag-type void 705 . 708) (nil font-lock-face web-mode-html-tag-face 705 . 708) (nil tag-name "img" 704 . 705) (nil tag-type void 704 . 705) (nil tag-beg 17 704 . 705) (nil font-lock-face web-mode-html-tag-bracket-face 704 . 705) (nil tag-name "div" 692 . 693) (nil tag-type start 692 . 693) (nil tag-end t 692 . 693) (nil font-lock-face web-mode-html-tag-bracket-face 692 . 693) (nil tag-attr t 691 . 692) (nil tag-attr-end 5 691 . 692) (nil tag-name "div" 691 . 692) (nil tag-type start 691 . 692) (nil font-lock-face web-mode-html-attr-value-face 691 . 692) (nil tag-attr t 678 . 691) (nil tag-name "div" 678 . 691) (nil tag-type start 678 . 691) (nil font-lock-face web-mode-html-attr-value-face 678 . 691) (nil tag-attr t 677 . 678) (nil tag-name "div" 677 . 678) (nil tag-type start 677 . 678) (nil font-lock-face web-mode-html-attr-equal-face 677 . 678) (nil tag-attr t 673 . 677) (nil tag-name "div" 673 . 677) (nil tag-type start 673 . 677) (nil font-lock-face web-mode-html-attr-name-face 673 . 677) (nil tag-attr-beg 0 672 . 673) (nil tag-attr t 672 . 673) (nil tag-name "div" 672 . 673) (nil tag-type start 672 . 673) (nil font-lock-face web-mode-html-attr-name-face 672 . 673) (nil tag-name "div" 671 . 672) (nil tag-type start 671 . 672) (nil tag-name "div" 668 . 671) (nil tag-type start 668 . 671) (nil font-lock-face web-mode-html-tag-face 668 . 671) (nil tag-name "div" 667 . 668) (nil tag-type start 667 . 668) (nil tag-beg 17 667 . 668) (nil font-lock-face web-mode-html-tag-bracket-face 667 . 668) (659 . 773)) ((#("        <div class=\"modal-header\">
          <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
        </div>" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 9 12 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 12 13 (tag-type start tag-name "div") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 14 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 19 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 33 34 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 45 46 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 46 49 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 49 50 (tag-type void tag-name "img") 50 51 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 51 53 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 54 86 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 87 88 (tag-type void tag-name "img") 88 89 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 89 93 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 93 94 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 94 97 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 98 99 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img" rear-nonsticky t) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 110 113 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 659) (undo-tree-id1405 . -114) (undo-tree-id1406 . -35) (nil tag-name "div" 667 . 668) (nil tag-name "div" 668 . 671) (nil tag-name "div" 671 . 672) (nil tag-name "div" 672 . 673) (nil tag-name "div" 673 . 677) (nil tag-name "div" 677 . 678) (nil tag-name "div" 678 . 691) (nil tag-name "div" 691 . 692) (nil tag-name "div" 692 . 693) (nil tag-name "img" 704 . 705) (nil tag-name "img" 705 . 708) (nil tag-name "img" 708 . 709) (nil tag-name "img" 709 . 710) (nil tag-name "img" 710 . 712) (nil tag-name "img" 712 . 713) (nil tag-name "img" 713 . 745) (nil tag-name "img" 745 . 746) (nil tag-name "img" 746 . 747) (nil tag-name "img" 747 . 748) (nil tag-name "img" 748 . 752) (nil tag-name "img" 752 . 753) (nil tag-name "img" 753 . 756) (nil tag-name "img" 756 . 757) (nil tag-name "img" 757 . 758) (nil rear-nonsticky nil 757 . 758) (nil tag-name "div" 767 . 768) (nil tag-name "div" 768 . 769) (nil tag-name "div" 769 . 772) (nil tag-name "div" 772 . 773) (nil rear-nonsticky nil 772 . 773) (nil rear-nonsticky t 772 . 773)) (25699 62294 564966 931000) 0 nil])
([nil nil ((1851 . 1864)) (("
            " . 1851)) (25699 62095 534484 495000) 0 nil])
([nil nil ((244 . 246) (#("  " 0 2 (part-side css)) . 243) (undo-tree-id1492 . -2) (242 . 246) (t 25699 62321 227149 51000)) nil (25699 62367 423642 705000) 0 nil])
([nil nil (("  " . -755) ("  " . -694) ("        " . -659) 653) ((659 . 667) (694 . 696) (755 . 757) (t 25699 62289 383187 500000)) (25699 62289 355896 735000) 0 nil])
([nil nil ((1475 . 1476)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 1475) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1)) (25699 62095 342418 198000) 0 nil])
([nil nil ((246 . 253)) nil (25699 62367 423637 655000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1482 . 1483) (nil tag-attr t 1476 . 1483) (nil tag-name "div" 1476 . 1483) (nil tag-type start 1476 . 1483) (nil font-lock-face web-mode-html-attr-value-face 1476 . 1483) (1476 . 1483)) ((#("cookies" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky nil)) . 1476) (nil tag-name "div" 1482 . 1483) (nil tag-name "div" 1476 . 1482) (nil rear-nonsticky t 1482 . 1483)) (25699 62095 152219 34000) 0 nil])
([nil nil ((#("b" 0 1 (face web-mode-css-selector-class-face part-side css)) . -247) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -248) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (#("t" 0 1 (face web-mode-css-selector-class-face part-side css)) . -249) (undo-tree-id1488 . -1) (#("t" 0 1 (face web-mode-css-selector-class-face part-side css)) . -250) (undo-tree-id1489 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -251) (undo-tree-id1490 . -1) (#("m" 0 1 (face web-mode-css-selector-class-face part-side css)) . -252) (undo-tree-id1491 . -1) 253) nil (25699 62367 423633 547000) 0 nil])
([nil nil ((#("
        <div class=\"d-flex justify-content-center mt-5 h-100\">
          <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\">" 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 13 14 (tag-type start tag-name "div") 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 15 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 20 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 61 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 62 63 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 75 78 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 78 79 (tag-type start tag-name "div") 79 80 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 80 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 85 158 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 159 160 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 1485) (undo-tree-id995 . -160) (undo-tree-id996 . -1) (undo-tree-id997 . -9) (undo-tree-id998 . -63) (undo-tree-id999 . -158) (undo-tree-id1000 . -160)) ((1485 . 1645)) (25699 62094 897526 957000) 0 nil])
([nil nil ((247 . 248)) nil (25699 62367 423612 743000) 0 nil])
([nil nil ((#("          </div>
        </div>" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 12 15 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 15 16 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 27 30 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 30 31 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1971) (undo-tree-id992 . -31) (undo-tree-id993 . -17) (undo-tree-id994 . -31)) ((1971 . 2002)) (25699 62094 655191 534000) 0 nil])
([nil nil ((#("c" 0 1 (face web-mode-css-selector-class-face part-side css)) . -247) (undo-tree-id1483 . -1) 248) nil (25699 62367 423610 403000) 0 nil])
([nil nil (("
" . -1970) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 1971) ((1970 . 1971)) (25699 62094 242759 225000) 0 nil])
([nil nil ((247 . 253)) nil (25699 62367 423605 855000) 0 nil])
([nil nil ((2165 . 2170) (2155 . 2158) (2145 . 2146) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -2134) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . -2045) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . -1972) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -1940) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -1928) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1864) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1836) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . -1823) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1683) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1670) (#("         " 0 9 (font-lock-face web-mode-comment-face tag-type comment)) . -1584) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1559) (#("       " 0 7 (font-lock-face web-mode-comment-face tag-type comment)) . -1499) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -1461) (1427 . 1428) (1377 . 1380) (1305 . 2233) (#("<div class=\"modal\" id=\"cookieModal\" tabindex=\"-1\" role=\"dialog\">
  <div class=\"modal-dialog\" role=\"document\">
    <div class=\"modal-content\">
      <div class=\"modal-body cookies\">
            <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
            <span class=\"mt-2\">
              We use third party cookies to personalize content, ads and analyze site traffic.
            </span>
            <a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

          <button
            onclick=\"setcookie();\"
            class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
      </div>
      <div class=\"modal-footer\">
        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>
        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>
      </div>
    </div>
  </div>
</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 18 19 (tag-type start tag-name "div") 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 22 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t rear-nonsticky t) 35 36 (tag-type start tag-name "div") 36 37 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 37 44 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 45 48 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 49 50 (tag-type start tag-name "div") 50 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 51 54 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 54 55 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 55 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 67 68 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 68 71 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 71 72 (tag-type start tag-name "div") 72 73 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 73 77 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 77 78 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 78 91 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 91 92 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 92 93 (tag-type start tag-name "div") 93 94 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 94 97 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 97 98 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 98 107 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 107 108 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 114 115 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 115 118 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 118 119 (tag-type start tag-name "div") 119 120 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 120 124 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 124 125 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 125 139 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 139 140 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 140 141 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 148 149 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 149 152 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 152 153 (tag-type start tag-name "div") 153 154 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 154 158 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 158 159 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 159 171 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 171 177 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 177 178 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 179 180 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 194 197 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 197 198 (tag-type void tag-name "img") 198 199 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 199 201 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 201 202 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 202 234 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 234 235 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 235 236 (tag-type void tag-name "img") 236 237 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 237 241 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 241 242 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 242 245 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 245 246 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 260 261 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 261 265 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 265 266 (tag-type start tag-name "span") 266 267 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 267 270 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 270 271 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 271 272 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 272 277 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 277 278 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 278 279 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 387 388 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 388 389 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 389 393 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 393 394 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 407 408 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 408 409 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 409 410 (tag-type start tag-name "a") 410 411 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 411 415 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 415 416 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 416 434 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 434 435 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 435 436 (tag-type start tag-name "a") 436 437 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 437 441 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 441 442 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 442 468 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 468 469 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 469 470 (tag-type start tag-name "a") 470 471 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 471 474 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 474 475 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 475 486 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 486 487 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 487 488 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 498 499 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 499 500 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 500 501 (tag-type start tag-name "i") 501 502 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 502 506 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 506 507 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 507 530 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 530 531 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 531 532 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 532 533 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 533 534 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 534 535 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 535 536 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 536 537 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 537 538 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 538 539 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 539 540 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 552 553 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 553 559 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 559 572 (tag-type start tag-name "button") 572 573 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8) 573 579 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 579 580 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 580 593 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 593 594 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 7 tag-attr t) 594 607 (tag-type start tag-name "button") 607 608 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 608 612 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 612 613 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 613 636 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 636 637 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 637 638 (tag-type start tag-name "button") 638 639 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 639 642 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 642 643 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 643 650 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 650 651 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 651 652 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 656 657 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 657 658 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 658 664 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 664 665 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button" rear-nonsticky t) 672 673 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 673 674 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 674 677 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 677 678 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 685 686 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 686 689 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 689 690 (tag-type start tag-name "div") 690 691 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 691 695 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 695 696 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 696 709 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 709 710 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 710 711 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 720 721 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 721 727 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 727 728 (tag-type start tag-name "button") 728 729 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 729 732 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 732 733 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 733 740 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 740 741 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 741 742 (tag-type start tag-name "button") 742 743 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 743 747 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 747 748 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 748 764 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 764 765 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 765 766 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 778 779 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 779 780 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 780 786 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 786 787 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 796 797 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 797 803 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 803 804 (tag-type start tag-name "button") 804 805 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 805 808 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 808 809 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 809 816 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 816 817 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 817 818 (tag-type start tag-name "button") 818 819 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 819 823 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 823 824 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 824 842 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 842 843 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 843 844 (tag-type start tag-name "button") 844 845 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t tag-attr-beg 1) 845 856 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "button" tag-attr t) 856 857 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 857 863 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 863 864 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 12 tag-attr t) 864 865 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 870 871 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 871 872 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 872 878 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 878 879 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 886 887 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 887 888 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 888 891 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 891 892 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 897 898 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 898 899 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 899 902 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 902 903 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 906 907 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 907 908 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 908 911 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 911 912 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 913 914 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 914 915 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 915 918 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 918 919 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 1305) (undo-tree-id1007 . -919) (undo-tree-id1008 . -65) (undo-tree-id1009 . -19) (undo-tree-id1010 . -141) (undo-tree-id1011 . -180) (undo-tree-id1012 . -665) (undo-tree-id1013 . -665) (undo-tree-id1014 . -180) (undo-tree-id1015 . -180) (undo-tree-id1016 . -171) (undo-tree-id1017 . -180) (undo-tree-id1018 . -665) (undo-tree-id1019 . -919) (t 25699 62029 467505 90000)) ((1305 . 2224) (#("<!-- <div class=\"modal\" id=\"cookieModal\" tabindex=\"-1\" role=\"dialog\">
  <div class=\"modal-dialog\" role=\"document\">
    <div class=\"modal-content\">
      <div class=\"modal-body cookies\">
            <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
            <span class=\"mt-2\">
              We use third party cookies to personalize content, ads and analyze site traffic.
            </span>
            <a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

          <button
            onclick=\"setcookie();\"
            class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
      </div>
      <div class=\"modal-footer\">
        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>
        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>
      </div>
    </div>
  </div>
</div> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 152 (font-lock-face web-mode-comment-face tag-type comment) 152 153 (font-lock-face web-mode-comment-face tag-type comment) 153 191 (font-lock-face web-mode-comment-face tag-type comment) 191 198 (font-lock-face web-mode-comment-face tag-type comment) 198 258 (font-lock-face web-mode-comment-face tag-type comment) 258 265 (font-lock-face web-mode-comment-face tag-type comment) 265 290 (font-lock-face web-mode-comment-face tag-type comment) 290 299 (font-lock-face web-mode-comment-face tag-type comment) 299 385 (font-lock-face web-mode-comment-face tag-type comment) 385 392 (font-lock-face web-mode-comment-face tag-type comment) 392 405 (font-lock-face web-mode-comment-face tag-type comment) 405 412 (font-lock-face web-mode-comment-face tag-type comment) 412 552 (font-lock-face web-mode-comment-face tag-type comment) 552 557 (font-lock-face web-mode-comment-face tag-type comment) 557 570 (font-lock-face web-mode-comment-face tag-type comment) 570 577 (font-lock-face web-mode-comment-face tag-type comment) 577 605 (font-lock-face web-mode-comment-face tag-type comment) 605 612 (font-lock-face web-mode-comment-face tag-type comment) 612 676 (font-lock-face web-mode-comment-face tag-type comment) 676 677 (font-lock-face web-mode-comment-face tag-type comment) 677 689 (font-lock-face web-mode-comment-face tag-type comment) 689 690 (font-lock-face web-mode-comment-face tag-type comment) 690 722 (font-lock-face web-mode-comment-face tag-type comment) 722 725 (font-lock-face web-mode-comment-face tag-type comment) 725 798 (font-lock-face web-mode-comment-face tag-type comment) 798 801 (font-lock-face web-mode-comment-face tag-type comment) 801 890 (font-lock-face web-mode-comment-face tag-type comment) 890 891 (font-lock-face web-mode-comment-face tag-type comment) 891 927 (font-lock-face web-mode-comment-face tag-type comment) 927 928 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 1305) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 1377) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 1427) (1461 . 1462) (1499 . 1506) (1559 . 1566) (1584 . 1593) (1670 . 1677) (1683 . 1690) (1823 . 1828) (1836 . 1843) (1864 . 1871) (1928 . 1929) (1940 . 1941) (1972 . 1975) (2045 . 2048) (2134 . 2135) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 2145) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 2155) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 2165)) (25699 62094 29121 239000) 0 nil])
([nil nil ((259 . 261) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -259) (253 . 260)) nil (25699 62367 423603 797000) 0 nil])
([nil nil (("     " . -1316) ("   " . -1309) (" " . -1300) (1288 . 1289) (1268 . 1276) ("     " . 1268) (1251 . 1261) ("     " . 1251) (1180 . 1192) (#("     " 0 5 (tag-type start tag-name "button")) . 1180) (1145 . 1157) (#("     " 0 5 (tag-type start tag-name "button")) . 1145) (1127 . 1137) ("     " . 1127) (975 . 985) ("     " . 975) (725 . 735) ("     " . 725) (662 . 670) ("     " . 662) (636 . 637) (" " . -604) ("   " . -573) (484 . 1294) (#("<!-- <div class=\"modal\" data-backdrop=\"false\" tabindex=\"-1\" id=\"cookieModal\" role=\"dialog\">
     <div class=\"modal-dialog\">
     <div class=\"modal-conten\">
     <div class=\"modal-body\">
     <div class=\"d-flex justify-content-center mt-5 h-100\">
     <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
     </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

     <button
     onclick=\"setcookie();\"
     class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
     </div>
     </div>
     </div>
     </div>
     </div>
     </div> -->
" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 391 (font-lock-face web-mode-comment-face tag-type comment) 391 396 (font-lock-face web-mode-comment-face tag-type comment) 396 490 (face (whitespace-line web-mode-comment-face) font-lock-face web-mode-comment-face tag-type comment) 490 817 (font-lock-face web-mode-comment-face tag-type comment) 817 818 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 484) (undo-tree-id1002 . -818) (undo-tree-id1003 . -92) (undo-tree-id1005 . -742) (undo-tree-id1006 . -818)) ((484 . 1303) (#("<div class=\"modal\" data-backdrop=\"false\" tabindex=\"-1\" id=\"cookieModal\" role=\"dialog\">
     <div class=\"modal-dialog\">
     <div class=\"modal-conten\">
     <div class=\"modal-body\">
     <div class=\"d-flex justify-content-center mt-5 h-100\">
     <div class=\"d-flex align-items-center align-self-center card p-3 text-center cookies\"><img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\"><span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
     </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>

     <button
     onclick=\"setcookie();\"
     class=\"btn btn-dark mt-3 px-4\" type=\"button\">Okay</button>
     </div>
     </div>
     </div>
     </div>
     </div>
     </div>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 18 19 (tag-type start tag-name "div") 19 20 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t tag-attr-beg 1) 20 32 (font-lock-face web-mode-html-attr-custom-face tag-type start tag-name "div" tag-attr t) 32 33 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 33 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 39 40 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 13 tag-attr t) 40 41 (tag-type start tag-name "div") 41 42 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 42 49 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 50 53 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 53 54 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 8 tag-attr t) 54 55 (tag-type start tag-name "div") 55 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 56 57 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 57 58 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 58 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 2 tag-attr t) 71 72 (tag-type start tag-name "div") 72 73 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 73 76 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 76 77 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 77 84 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 85 86 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 92 93 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 93 96 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 96 97 (tag-type start tag-name "div") 97 98 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 98 102 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 102 103 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 103 116 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 117 118 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 125 128 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 128 129 (tag-type start tag-name "div") 129 130 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 130 134 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 134 135 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 135 148 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 148 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 156 157 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 157 160 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 160 161 (tag-type start tag-name "div") 161 162 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 162 166 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 166 167 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 167 178 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 178 179 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 179 180 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 186 187 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 187 190 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 190 191 (tag-type start tag-name "div") 191 192 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 192 196 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 196 197 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 197 238 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 238 239 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 239 240 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 246 247 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 247 250 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 250 251 (tag-type start tag-name "div") 251 252 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 252 256 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 256 257 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 257 330 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 330 331 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 332 333 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 333 336 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 336 337 (tag-type void tag-name "img") 337 338 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 338 340 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 340 341 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 341 373 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 373 374 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 374 375 (tag-type void tag-name "img") 375 376 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 376 380 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 380 381 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 381 384 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 384 385 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 385 386 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img") 386 387 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 387 391 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 391 392 (face (whitespace-line) tag-type start tag-name "span") 392 393 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 393 396 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 396 397 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 397 398 (face (whitespace-line web-mode-html-attr-equal-face) font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 398 403 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 403 404 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 404 405 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 405 485 (face (whitespace-line)) 491 492 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 492 493 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 493 497 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 497 498 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 498 499 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 499 500 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 500 501 (tag-type start tag-name "a") 501 502 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 502 506 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 506 507 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 507 525 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 525 526 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 526 527 (tag-type start tag-name "a") 527 528 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 528 532 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 532 533 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 533 559 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 559 560 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 560 561 (tag-type start tag-name "a") 561 562 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 562 565 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 565 566 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 566 577 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 577 578 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 578 579 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 589 590 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 590 591 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 591 592 (tag-type start tag-name "i") 592 593 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 593 597 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 597 598 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 598 621 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 621 622 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 622 623 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 623 624 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 624 625 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 625 626 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 626 627 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 627 628 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 628 629 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 629 630 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 630 631 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 638 639 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "button") 639 645 (font-lock-face web-mode-html-tag-face tag-type start tag-name "button") 645 646 (tag-type start tag-name "button") 646 651 (tag-type start tag-name "button") 651 652 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 8) 652 658 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 658 659 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 659 672 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 672 673 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 7 tag-attr t) 673 674 (tag-type start tag-name "button") 674 679 (tag-type start tag-name "button") 679 680 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 680 684 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 684 685 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 685 708 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 708 709 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t) 709 710 (tag-type start tag-name "button") 710 711 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 711 714 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 714 715 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 715 722 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 722 723 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 4 tag-attr t) 723 724 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "button") 728 729 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "button") 729 730 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "button") 730 736 (font-lock-face web-mode-html-tag-face tag-type end tag-name "button") 736 737 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "button") 743 744 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 744 745 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 745 748 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 748 749 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 755 756 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 756 757 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 757 760 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 760 761 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 767 768 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 768 769 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 769 772 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 772 773 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 779 780 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 780 781 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 781 784 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 784 785 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 791 792 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 792 793 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 793 796 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 796 797 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 803 804 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 804 805 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 805 808 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 808 809 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 484) (undo-tree-id1137 . -117) (undo-tree-id1138 . -119) (undo-tree-id1139 . -151) (undo-tree-id1140 . -117) (undo-tree-id1141 . -148) (undo-tree-id1142 . -85) (undo-tree-id1143 . -117) (undo-tree-id1144 . -645) (undo-tree-id1145 . -148) (undo-tree-id1146 . -148) (undo-tree-id1147 . -148) (undo-tree-id1148 . -148) (undo-tree-id1149 . -148) (undo-tree-id1150 . -148) (undo-tree-id1151 . -148) (undo-tree-id1152 . -148) (undo-tree-id1153 . -148) (undo-tree-id1154 . -148) (undo-tree-id1155 . -148) (undo-tree-id1156 . -148) (undo-tree-id1157 . -148) (undo-tree-id1158 . -148) (undo-tree-id1159 . -148) (573 . 576) (604 . 605) (" " . 636) (662 . 667) ("        " . 662) (725 . 730) ("          " . 725) (975 . 980) ("          " . 975) (1127 . 1132) ("          " . 1127) (1145 . 1150) (#("            " 0 12 (tag-type start tag-name "button")) . 1145) (1180 . 1185) (#("            " 0 12 (tag-type start tag-name "button")) . 1180) (1251 . 1256) ("          " . 1251) (1268 . 1273) ("        " . 1268) (" " . 1288) (1300 . 1301) (1309 . 1312) (1316 . 1321)) (25699 62093 804856 724000) 0 nil])
([nil nil ((262 . 264) (#("    " 0 4 (face whitespace-trailing part-side css)) . 261) (undo-tree-id1481 . -2) (undo-tree-id1482 . 4) (263 . 265) (260 . 264)) nil (25699 62367 423600 573000) 0 nil])
([nil nil ((628 . 629)) ((#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 628) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1)) (25699 62093 629152 345000) 0 nil])
([nil nil ((#("
    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;" 0 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 23 (part-side css) 23 27 (face web-mode-css-function-face part-side css) 27 28 (face (rainbow-delimiters-depth-2-face) part-side css) 28 29 (part-side css) 29 40 (part-side css) 40 41 (face (rainbow-delimiters-depth-2-face) part-side css rear-nonsticky t) 41 47 (part-side css) 47 63 (face web-mode-css-property-name-face part-side css) 63 80 (part-side css) 80 87 (face web-mode-css-property-name-face part-side css) 87 98 (part-side css) 98 102 (face web-mode-css-function-face part-side css) 102 103 (face (rainbow-delimiters-depth-2-face) part-side css) 103 106 (part-side css) 106 121 (part-side css) 121 122 (face (rainbow-delimiters-depth-2-face) part-side css rear-nonsticky t) 122 128 (part-side css) 128 142 (face web-mode-css-property-name-face part-side css) 142 147 (part-side css)) . 91) (undo-tree-id1477 . -147) (undo-tree-id1478 . -1) (undo-tree-id1479 . -123) (undo-tree-id1480 . -147)) nil (25699 62367 423592 393000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -628) (undo-tree-id1001 . -1) 629) ((628 . 629)) (25699 62093 453636 768000) 0 nil])
([nil nil ((nil rear-nonsticky nil 260 . 261) (nil part-side css 256 . 261) (nil part-side css 242 . 256) (nil face web-mode-css-property-name-face 242 . 256) (nil part-side css 236 . 242) (nil rear-nonsticky t 235 . 236) (nil part-side css 235 . 236) (nil face (rainbow-delimiters-depth-2-face) 235 . 236) (nil part-side css 220 . 235) (nil part-side css 217 . 220) (nil part-side css 216 . 217) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil part-side css 212 . 216) (nil face web-mode-css-function-face 212 . 216) (nil part-side css 201 . 212) (nil part-side css 194 . 201) (nil face web-mode-css-property-name-face 194 . 201) (nil part-side css 177 . 194) (nil part-side css 161 . 177) (nil face web-mode-css-property-name-face 161 . 177) (nil part-side css 155 . 161) (nil rear-nonsticky t 154 . 155) (nil part-side css 154 . 155) (nil face (rainbow-delimiters-depth-2-face) 154 . 155) (nil part-side css 143 . 154) (nil part-side css 142 . 143) (nil part-side css 141 . 142) (nil face (rainbow-delimiters-depth-2-face) 141 . 142) (nil part-side css 137 . 141) (nil face web-mode-css-function-face 137 . 141) (nil part-side css 136 . 137) (nil part-side css 119 . 136) (nil face web-mode-css-property-name-face 119 . 136) (nil part-side css 114 . 119) (114 . 261)) nil (25699 62367 423579 62000) 0 nil])
([nil nil ((628 . 629)) ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 628)) (25699 62093 303664 19000) 0 nil])
([nil nil ((115 . 119) (#("    " 0 4 (face whitespace-trailing part-side css)) . 114) (114 . 118) (114 . 115)) nil (25699 62367 423561 992000) 0 nil])
([nil nil ((598 . 599) (t 25699 62055 975472 334000)) ((#(" " 0 1 (tag-type start tag-name "div")) . 598) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1)) (25699 62093 153360 722000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 114) (undo-tree-id1476 . -1)) nil (25699 62367 423558 554000) 0 nil])
([nil nil ((nil rear-nonsticky nil 611 . 612) (nil tag-attr t 611 . 612) (nil tag-attr-end 4 611 . 612) (nil tag-name "div" 611 . 612) (nil tag-type start 611 . 612) (nil font-lock-face web-mode-html-attr-value-face 611 . 612) (nil tag-attr t 604 . 611) (nil tag-name "div" 604 . 611) (nil tag-type start 604 . 611) (nil font-lock-face web-mode-html-attr-value-face 604 . 611) (nil tag-attr t 603 . 604) (nil tag-name "div" 603 . 604) (nil tag-type start 603 . 604) (nil font-lock-face web-mode-html-attr-equal-face 603 . 604) (nil tag-attr t 600 . 603) (nil tag-name "div" 600 . 603) (nil tag-type start 600 . 603) (nil font-lock-face web-mode-html-attr-name-face 600 . 603) (nil tag-attr-beg 0 599 . 600) (nil tag-attr t 599 . 600) (nil tag-name "div" 599 . 600) (nil tag-type start 599 . 600) (nil font-lock-face web-mode-html-attr-name-face 599 . 600) (599 . 612)) ((#("role=\"dialog\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 6 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t rear-nonsticky nil)) . 599) (undo-tree-id1053 . -12) (undo-tree-id1054 . -6) (undo-tree-id1055 . -6) (undo-tree-id1056 . -6) (undo-tree-id1057 . -6) (undo-tree-id1058 . -6) (undo-tree-id1059 . -6) (undo-tree-id1060 . -6) (undo-tree-id1061 . -6) (undo-tree-id1062 . -6) (undo-tree-id1063 . -6) (undo-tree-id1064 . -6) (undo-tree-id1065 . -6) (undo-tree-id1066 . -6) (undo-tree-id1067 . -6) (undo-tree-id1068 . -6) (undo-tree-id1069 . -6) (undo-tree-id1070 . -6) (undo-tree-id1071 . -6) (undo-tree-id1072 . -6) (undo-tree-id1073 . -6) (undo-tree-id1074 . -6) (undo-tree-id1075 . -6) (undo-tree-id1076 . -6) (undo-tree-id1077 . -6) (undo-tree-id1078 . -6) (undo-tree-id1079 . -6) (undo-tree-id1080 . -6) (undo-tree-id1081 . -6) (undo-tree-id1082 . -6) (undo-tree-id1083 . -6) (undo-tree-id1084 . -6) (undo-tree-id1085 . -6) (undo-tree-id1086 . -6) (nil tag-name "div" 599 . 600) (nil tag-name "div" 600 . 603) (nil tag-name "div" 603 . 604) (nil tag-name "div" 605 . 611) (nil tag-name "div" 604 . 605) (nil tag-name "div" 611 . 612) (nil rear-nonsticky t 611 . 612)) (25699 62092 984211 576000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 118) (undo-tree-id1474 . -1) (undo-tree-id1475 . 1)) nil (25699 62367 423553 293000) 0 nil])
([nil nil ((#("dialog" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 605) (undo-tree-id1022 . -6) (undo-tree-id1023 . -6)) ((605 . 611)) (25699 62092 829233 271000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -118)) nil (25699 62402 188510 933000) 0 nil])
([nil nil ((605 . 611)) ((#("docuim" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 605) (undo-tree-id1033 . -4) (undo-tree-id1034 . -6) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -6) (undo-tree-id1051 . -6) (undo-tree-id1052 . -6)) (25699 62092 698415 448000) 0 nil])
([nil nil ((#(" card" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 667) (undo-tree-id1572 . -5) (undo-tree-id1573 . -5) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -5)) nil (25699 62483 49201 399000) 0 nil] [nil nil ((#("card" 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 668) (undo-tree-id1493 . -4) (undo-tree-id1495 . -1) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) (undo-tree-id1499 . -4) (t 25699 62367 451093 383000)) ((668 . 672)) (25699 62400 657300 780000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -609) (undo-tree-id1020 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -610) (undo-tree-id1021 . -1) 611) ((609 . 611)) (25699 62092 496923 182000) 0 nil])
([nil nil ((91 . 96) (t 25699 62484 586952 980000)) nil (25699 62494 358519 249000) 0 nil] [nil nil ((#(" role=\"document\"" 0 1 (tag-type start tag-name "div") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 2 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t rear-nonsticky t)) . 620) (undo-tree-id1545 . -16) (undo-tree-id1547 . -6) (undo-tree-id1549 . -6) (undo-tree-id1551 . -5) (undo-tree-id1553 . -5) (undo-tree-id1555 . -4) (undo-tree-id1557 . -3) (undo-tree-id1559 . -3) (undo-tree-id1561 . -2) (undo-tree-id1563 . -1) (undo-tree-id1565 . -1) (undo-tree-id1567 . -1) (undo-tree-id1569 . -1) (undo-tree-id1571 . -16)) ((620 . 636)) (25699 62480 27815 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 678 . 679) (nil tag-attr t 668 . 679) (nil tag-name "div" 668 . 679) (nil tag-type start 668 . 679) (nil font-lock-face web-mode-html-attr-value-face 668 . 679) (668 . 679)) ((#("modal_cover" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky nil)) . 668) (nil tag-name "div" 678 . 679) (nil tag-name "div" 668 . 678) (nil rear-nonsticky t 678 . 679)) (25699 62399 860799 468000) 0 nil])
([nil nil ((609 . 613)) ((#("ment" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 609) (undo-tree-id1024 . -3) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (t 25699 62078 175444 974000)) (25699 62078 151714 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 241 . 242) (nil rear-nonsticky t 241 . 242) (nil part-side css 241 . 242) (nil part-side css 237 . 241) (nil part-side css 223 . 237) (nil face web-mode-css-property-name-face 223 . 237) (nil part-side css 217 . 223) (nil part-side css 216 . 217) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil part-side css 198 . 216) (nil part-side css 197 . 198) (nil face (rainbow-delimiters-depth-2-face) 197 . 198) (nil part-side css 193 . 197) (nil face web-mode-css-function-face 193 . 197) (nil part-side css 182 . 193) (nil part-side css 175 . 182) (nil face web-mode-css-property-name-face 175 . 182) (nil part-side css 158 . 175) (nil part-side css 142 . 158) (nil face web-mode-css-property-name-face 142 . 158) (nil part-side css 136 . 142) (nil part-side css 135 . 136) (nil face (rainbow-delimiters-depth-2-face) 135 . 136) (nil part-side css 123 . 135) (nil part-side css 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil part-side css 118 . 122) (nil face web-mode-css-function-face 118 . 122) (nil part-side css 117 . 118) (nil part-side css 100 . 117) (nil face web-mode-css-property-name-face 100 . 117) (nil part-side css 96 . 100) (96 . 242)) nil (25699 62494 358515 714000) 0 nil])
([nil nil ((#("
    <div class=\"modal-content\">" 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 6 9 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 9 10 (tag-type start tag-name "div") 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 11 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 16 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 30 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 31 32 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 621) (undo-tree-id1632 . -32) (undo-tree-id1633 . -1) (undo-tree-id1634 . -32) (undo-tree-id1635 . -30) (undo-tree-id1636 . -30) (undo-tree-id1637 . -30) (undo-tree-id1638 . -30) (undo-tree-id1639 . -32) (t 25699 62407 463045 322000)) ((621 . 653)) (25699 62479 374900 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 712 . 713) (nil tag-attr t 702 . 713) (nil tag-name "div" 702 . 713) (nil tag-type start 702 . 713) (nil font-lock-face web-mode-html-attr-value-face 702 . 713) (702 . 713) (t 25699 62377 211081 650000)) ((#("modal_cover" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky nil)) . 702) (undo-tree-id1517 . -11) (undo-tree-id1518 . -11) (undo-tree-id1519 . -11) (undo-tree-id1520 . -11) (undo-tree-id1521 . -11) (undo-tree-id1522 . -11) (undo-tree-id1523 . -11) (undo-tree-id1524 . -11) (undo-tree-id1525 . -11) (undo-tree-id1526 . -11) (undo-tree-id1527 . -11) (undo-tree-id1528 . -11) (undo-tree-id1529 . -11) (undo-tree-id1530 . -11) (undo-tree-id1531 . -11) (undo-tree-id1532 . -11) (undo-tree-id1533 . -11) (undo-tree-id1534 . -11) (undo-tree-id1535 . -11) (undo-tree-id1536 . -11) (undo-tree-id1537 . -11) (undo-tree-id1538 . -11) (undo-tree-id1539 . -11) (undo-tree-id1540 . -11) (undo-tree-id1541 . -11) (undo-tree-id1542 . -11) (undo-tree-id1543 . -11) (undo-tree-id1544 . -11) (nil tag-name "div" 712 . 713) (nil tag-name "div" 702 . 712) (nil rear-nonsticky t 712 . 713)) (25699 62399 405850 900000) 0 nil])
nil
([nil nil ((#("    " 0 4 (part-side css)) . -96) 92) nil (25699 62494 358501 578000) 0 nil])
([nil nil ((#("
    </div>" 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1240) (undo-tree-id1629 . -11) (undo-tree-id1630 . -1) (undo-tree-id1631 . -11)) ((1240 . 1251)) (25699 62478 902360 605000) 0 nil])
([nil nil ((713 . 714)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 713) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (t 25699 62389 715066 626000)) (25699 62389 688749 46000) 0 nil])
([nil nil ((#("
    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 23 (part-side css) 23 27 (face web-mode-css-function-face part-side css) 27 28 (face (rainbow-delimiters-depth-2-face) part-side css) 28 40 (part-side css) 40 41 (face (rainbow-delimiters-depth-2-face) part-side css) 41 47 (part-side css) 47 63 (face web-mode-css-property-name-face part-side css) 63 80 (part-side css) 80 87 (face web-mode-css-property-name-face part-side css) 87 98 (part-side css) 98 102 (face web-mode-css-function-face part-side css) 102 103 (face (rainbow-delimiters-depth-2-face) part-side css) 103 121 (part-side css) 121 122 (face (rainbow-delimiters-depth-2-face) part-side css) 122 128 (part-side css) 128 142 (face web-mode-css-property-name-face part-side css) 142 146 (part-side css) 146 147 (part-side css rear-nonsticky t)) . 91) (undo-tree-id1715 . -147) (undo-tree-id1716 . -1) (undo-tree-id1717 . -5) (undo-tree-id1718 . -147) (undo-tree-id1719 . -147) (t 25699 62494 386941 273000)) nil (25699 62537 205548 581000) 0 nil])
([nil nil ((91 . 96)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 91) (undo-tree-id1640 . -1) (undo-tree-id1641 . -5) (undo-tree-id1642 . -5) (undo-tree-id1643 . -1) (undo-tree-id1644 . -5) (undo-tree-id1645 . -5) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) (undo-tree-id1648 . -5) (undo-tree-id1649 . -5) (undo-tree-id1650 . -5) (undo-tree-id1651 . -5) (undo-tree-id1652 . -5) (undo-tree-id1653 . -5) (undo-tree-id1654 . -5) (undo-tree-id1655 . -5)) (25699 62478 475227 579000) 0 nil])
nil
([nil nil ((#("  .cookies a {
    text-decoration: none;
    color: #000;
    margin-top: 8px;
  }

  .cookies a:hover {
    text-decoration: none;
    color: blue;
    margin-top: 8px;
  }" 0 2 (part-side css) 2 10 (face web-mode-css-selector-class-face part-side css) 10 13 (part-side css) 13 14 (face (rainbow-delimiters-depth-1-face) part-side css) 14 19 (part-side css) 19 35 (face web-mode-css-property-name-face part-side css) 35 46 (part-side css) 46 52 (face web-mode-css-property-name-face part-side css) 52 53 (part-side css) 53 57 (face web-mode-css-color-face part-side css) 57 63 (part-side css) 63 74 (face web-mode-css-property-name-face part-side css) 74 82 (part-side css) 82 83 (face (rainbow-delimiters-depth-1-face) part-side css) 83 84 (part-side css) 84 87 (part-side css) 87 95 (face web-mode-css-selector-class-face part-side css) 95 96 (part-side css) 96 97 (part-side css) 97 98 (face web-mode-css-pseudo-class-face part-side css) 98 104 (face web-mode-css-pseudo-class-face part-side css) 104 105 (face (rainbow-delimiters-depth-1-face) part-side css) 105 110 (part-side css) 110 126 (face web-mode-css-property-name-face part-side css) 126 137 (part-side css) 137 143 (face web-mode-css-property-name-face part-side css) 143 154 (part-side css) 154 165 (face web-mode-css-property-name-face part-side css) 165 173 (part-side css) 173 174 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 266) (undo-tree-id1712 . -174) (undo-tree-id1713 . -15) (undo-tree-id1714 . -174)) nil (25699 62537 205540 755000) 0 nil])
([nil nil ((nil rear-nonsticky nil 241 . 242) (nil rear-nonsticky t 241 . 242) (nil part-side css 241 . 242) (nil part-side css 237 . 241) (nil part-side css 223 . 237) (nil face web-mode-css-property-name-face 223 . 237) (nil part-side css 217 . 223) (nil part-side css 216 . 217) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil part-side css 198 . 216) (nil part-side css 197 . 198) (nil face (rainbow-delimiters-depth-2-face) 197 . 198) (nil part-side css 193 . 197) (nil face web-mode-css-function-face 193 . 197) (nil part-side css 182 . 193) (nil part-side css 175 . 182) (nil face web-mode-css-property-name-face 175 . 182) (nil part-side css 158 . 175) (nil part-side css 142 . 158) (nil face web-mode-css-property-name-face 142 . 158) (nil part-side css 136 . 142) (nil part-side css 135 . 136) (nil face (rainbow-delimiters-depth-2-face) 135 . 136) (nil part-side css 123 . 135) (nil part-side css 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil part-side css 118 . 122) (nil face web-mode-css-function-face 118 . 122) (nil part-side css 117 . 118) (nil part-side css 100 . 117) (nil face web-mode-css-property-name-face 100 . 117) (nil part-side css 96 . 100) (96 . 242)) ((#("    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;" 0 4 (part-side css) 4 21 (face web-mode-css-property-name-face part-side css) 21 22 (part-side css) 22 26 (face web-mode-css-function-face part-side css) 26 27 (face (rainbow-delimiters-depth-2-face) part-side css) 27 39 (part-side css) 39 40 (face (rainbow-delimiters-depth-2-face) part-side css) 40 46 (part-side css) 46 62 (face web-mode-css-property-name-face part-side css) 62 79 (part-side css) 79 86 (face web-mode-css-property-name-face part-side css) 86 97 (part-side css) 97 101 (face web-mode-css-function-face part-side css) 101 102 (face (rainbow-delimiters-depth-2-face) part-side css) 102 120 (part-side css) 120 121 (face (rainbow-delimiters-depth-2-face) part-side css) 121 127 (part-side css) 127 141 (face web-mode-css-property-name-face part-side css) 141 145 (part-side css) 145 146 (part-side css rear-nonsticky t)) . 96) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 135 . 136) (nil face (rainbow-delimiters-depth-2-face) 197 . 198) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil rear-nonsticky nil 241 . 242) (nil rear-nonsticky t 241 . 242)) (25699 62477 918867 44000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -264) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#("
" 0 1 (part-side css)) . -265) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) 266) nil (25699 62599 310838 629000) 0 nil])
([nil nil ((#("  .modal_cover {
    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;
  }" 0 2 (part-side css) 2 14 (face web-mode-css-selector-class-face part-side css) 14 15 (part-side css) 15 16 (face (rainbow-delimiters-depth-1-face) part-side css) 16 17 (part-side css) 17 21 (part-side css) 21 38 (face web-mode-css-property-name-face part-side css) 38 39 (part-side css) 39 43 (face web-mode-css-function-face part-side css) 43 44 (face (rainbow-delimiters-depth-2-face) part-side css) 44 56 (part-side css) 56 57 (face (rainbow-delimiters-depth-2-face) part-side css) 57 63 (part-side css) 63 79 (face web-mode-css-property-name-face part-side css) 79 96 (part-side css) 96 103 (face web-mode-css-property-name-face part-side css) 103 114 (part-side css) 114 118 (face web-mode-css-function-face part-side css) 118 119 (face (rainbow-delimiters-depth-2-face) part-side css) 119 137 (part-side css) 137 138 (face (rainbow-delimiters-depth-2-face) part-side css) 138 144 (part-side css) 144 158 (face web-mode-css-property-name-face part-side css) 158 162 (part-side css) 162 163 (part-side css rear-nonsticky t) 163 166 (part-side css) 166 167 (face (rainbow-delimiters-depth-1-face) part-side css)) . 248) (undo-tree-id1618 . -167) (undo-tree-id1619 . -17) (undo-tree-id1620 . -8) (undo-tree-id1621 . -17) (undo-tree-id1622 . -14) (undo-tree-id1623 . -163) (undo-tree-id1625 . -17) (undo-tree-id1627 . -167) (undo-tree-id1628 . -167)) ((248 . 415)) (25699 62477 535046 739000) 0 nil])
([nil nil ((443 . 444)) nil (25699 62606 300180 186000) 0 nil] [nil nil ((266 . 268) (#("  " 0 2 (part-side css)) . 265) (undo-tree-id1775 . -2) (264 . 268)) ((#("
  
" 0 1 (part-side css) 1 3 (face whitespace-trailing part-side css) 3 4 (part-side css)) . 264) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (undo-tree-id1982 . -4) (undo-tree-id1983 . -4) (undo-tree-id1984 . -4) (undo-tree-id1985 . -4) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (undo-tree-id1988 . -4) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) (undo-tree-id1995 . -4) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (undo-tree-id2000 . -4) (undo-tree-id2001 . -4) (undo-tree-id2002 . -4) (undo-tree-id2003 . -4) (undo-tree-id2004 . -4) (undo-tree-id2005 . -4) (undo-tree-id2006 . -4) (undo-tree-id2007 . -4) (undo-tree-id2008 . -4) (undo-tree-id2009 . -4) (undo-tree-id2010 . -4) (undo-tree-id2011 . -4) (undo-tree-id2012 . -4) (undo-tree-id2013 . -4) (undo-tree-id2014 . -4) (undo-tree-id2015 . -4) (undo-tree-id2016 . -4) (undo-tree-id2017 . -4) (undo-tree-id2018 . -1) (undo-tree-id2019 . 3) (265 . 267) (#("  " 0 2 (part-side css)) . 266) (undo-tree-id2020 . -2) (undo-tree-id2021 . -2) (undo-tree-id2022 . -2) (undo-tree-id2023 . -2) (undo-tree-id2024 . -2) (undo-tree-id2025 . -2) (undo-tree-id2026 . -2) (undo-tree-id2027 . -2) (undo-tree-id2028 . -2) (undo-tree-id2029 . -2) (undo-tree-id2030 . -2) (undo-tree-id2031 . -2) (undo-tree-id2032 . -2) (undo-tree-id2033 . -2) (undo-tree-id2034 . -2) (undo-tree-id2035 . -2) (undo-tree-id2036 . -2) (undo-tree-id2037 . -2) (undo-tree-id2038 . -2) (undo-tree-id2039 . -2) (undo-tree-id2040 . -2) (undo-tree-id2041 . -2) (undo-tree-id2042 . -2) (undo-tree-id2043 . -2) (undo-tree-id2044 . -2) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (undo-tree-id2054 . -2) (undo-tree-id2055 . -2) (undo-tree-id2056 . -2) (undo-tree-id2057 . -2) (undo-tree-id2058 . -2)) (25699 62598 945983 491000) 0 nil] [nil nil ((91 . 96) (t 25699 62537 234885 892000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 91) (undo-tree-id1739 . -5) (undo-tree-id1740 . -1) (undo-tree-id1741 . -5) (undo-tree-id1742 . -5) (undo-tree-id1743 . -5) (undo-tree-id1744 . -5) (undo-tree-id1745 . -5) (undo-tree-id1746 . -5) (undo-tree-id1747 . -5) (undo-tree-id1748 . -5) (undo-tree-id1749 . -5) (undo-tree-id1750 . -5) (undo-tree-id1751 . -5) (undo-tree-id1752 . -5) (undo-tree-id1753 . -5) (undo-tree-id1754 . -5) (undo-tree-id1755 . -5) (undo-tree-id1756 . -5) (undo-tree-id1757 . -5) (undo-tree-id1758 . -5) (undo-tree-id1759 . -1) (undo-tree-id1760 . -5) (undo-tree-id1761 . -5) (undo-tree-id1762 . -5) (undo-tree-id1763 . -5) (undo-tree-id1764 . -5) (undo-tree-id1765 . -5) (undo-tree-id1766 . -5) (undo-tree-id1767 . -5) (undo-tree-id1768 . -5) (undo-tree-id1769 . -5) (undo-tree-id1770 . -5) (undo-tree-id1771 . -5)) (25699 62576 483377 613000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -247) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1585 . -1) (undo-tree-id1587 . -1) (undo-tree-id1589 . -1) (undo-tree-id1591 . -1) (undo-tree-id1593 . -1) (undo-tree-id1595 . -1) (undo-tree-id1597 . -1) (undo-tree-id1599 . -1) (undo-tree-id1601 . -1) (undo-tree-id1603 . -1) (undo-tree-id1605 . -1) (undo-tree-id1607 . -1) (undo-tree-id1609 . -1) (undo-tree-id1611 . -1) (undo-tree-id1613 . -1) (undo-tree-id1615 . -1) (undo-tree-id1617 . -1) 248) ((247 . 248) (t 25699 62465 194976 162000)) (25699 62465 157461 710000) 0 nil])
([nil nil ((nil rear-nonsticky nil 454 . 455) (nil tag-attr t 444 . 455) (nil tag-name "div" 444 . 455) (nil tag-type start 444 . 455) (nil font-lock-face web-mode-html-attr-value-face 444 . 455) (444 . 455)) nil (25699 62606 300173 186000) 0 nil])
([nil nil ((268 . 272)) ((#("div." 0 3 (part-side css) 3 4 (face web-mode-css-selector-class-face part-side css)) . 268) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (undo-tree-id1955 . -4) (undo-tree-id1956 . -4) (undo-tree-id1957 . -4) (undo-tree-id1958 . -4) (undo-tree-id1959 . -4) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4) (undo-tree-id1962 . -4) (undo-tree-id1963 . -4) (undo-tree-id1964 . -4) (undo-tree-id1965 . -4) (undo-tree-id1966 . -4) (undo-tree-id1967 . -4) (undo-tree-id1968 . -4) (undo-tree-id1969 . -4) (undo-tree-id1970 . -4) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4)) (25699 62598 574566 486000) 0 nil])
([nil nil ((nil rear-nonsticky nil 241 . 242) (nil rear-nonsticky t 241 . 242) (nil part-side css 241 . 242) (nil part-side css 237 . 241) (nil part-side css 223 . 237) (nil face web-mode-css-property-name-face 223 . 237) (nil part-side css 217 . 223) (nil part-side css 216 . 217) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil part-side css 198 . 216) (nil part-side css 197 . 198) (nil face (rainbow-delimiters-depth-2-face) 197 . 198) (nil part-side css 193 . 197) (nil face web-mode-css-function-face 193 . 197) (nil part-side css 182 . 193) (nil part-side css 175 . 182) (nil face web-mode-css-property-name-face 175 . 182) (nil part-side css 158 . 175) (nil part-side css 142 . 158) (nil face web-mode-css-property-name-face 142 . 158) (nil part-side css 136 . 142) (nil part-side css 135 . 136) (nil face (rainbow-delimiters-depth-2-face) 135 . 136) (nil part-side css 123 . 135) (nil part-side css 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil part-side css 118 . 122) (nil face web-mode-css-function-face 118 . 122) (nil part-side css 117 . 118) (nil part-side css 100 . 117) (nil face web-mode-css-property-name-face 100 . 117) (nil part-side css 96 . 100) (96 . 242)) ((#("    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;" 0 4 (part-side css) 4 21 (face web-mode-css-property-name-face part-side css) 21 22 (part-side css) 22 26 (face web-mode-css-function-face part-side css) 26 27 (face (rainbow-delimiters-depth-2-face) part-side css) 27 39 (part-side css) 39 40 (face (rainbow-delimiters-depth-2-face) part-side css) 40 46 (part-side css) 46 62 (face web-mode-css-property-name-face part-side css) 62 79 (part-side css) 79 86 (face web-mode-css-property-name-face part-side css) 86 97 (part-side css) 97 101 (face web-mode-css-function-face part-side css) 101 102 (face (rainbow-delimiters-depth-2-face) part-side css) 102 120 (part-side css) 120 121 (face (rainbow-delimiters-depth-2-face) part-side css) 121 127 (part-side css) 127 141 (face web-mode-css-property-name-face part-side css) 141 145 (part-side css) 145 146 (part-side css rear-nonsticky t)) . 96) (undo-tree-id1720 . -42) (undo-tree-id1721 . -19) (undo-tree-id1722 . -19) (undo-tree-id1723 . -19) (undo-tree-id1724 . -19) (undo-tree-id1725 . -19) (undo-tree-id1726 . -19) (undo-tree-id1727 . -19) (undo-tree-id1728 . -19) (undo-tree-id1729 . -19) (undo-tree-id1730 . -19) (undo-tree-id1731 . -19) (undo-tree-id1732 . -19) (undo-tree-id1733 . -19) (undo-tree-id1734 . -19) (undo-tree-id1735 . -19) (undo-tree-id1736 . -19) (undo-tree-id1737 . -19) (undo-tree-id1738 . -19) (nil face (rainbow-delimiters-depth-2-face) 122 . 123) (nil face (rainbow-delimiters-depth-2-face) 135 . 136) (nil face (rainbow-delimiters-depth-2-face) 197 . 198) (nil face (rainbow-delimiters-depth-2-face) 216 . 217) (nil rear-nonsticky nil 241 . 242) (nil rear-nonsticky t 241 . 242)) (25699 62575 983320 845000) 0 nil])
nil
([nil nil ((503 . 504) (t 25699 62606 326794 50000)) nil (25699 62610 632831 499000) 0 nil])
([nil nil ((279 . 281) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) part-side css)) . -279) (279 . 280) (278 . 280) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -278) (272 . 279)) ((#("modal {" 0 5 (face web-mode-css-selector-class-face part-side css) 5 6 (part-side css) 6 7 (face (rainbow-delimiters-depth-1-face) part-side css)) . 272) (undo-tree-id1905 . -6) (undo-tree-id1906 . -5) (undo-tree-id1907 . -6) (undo-tree-id1908 . -6) (undo-tree-id1909 . -6) (undo-tree-id1910 . -6) (undo-tree-id1911 . -6) (undo-tree-id1912 . -6) (undo-tree-id1913 . -6) (undo-tree-id1914 . -6) (undo-tree-id1915 . -6) (undo-tree-id1916 . -6) (undo-tree-id1917 . -6) (undo-tree-id1918 . -6) (undo-tree-id1919 . -6) (undo-tree-id1920 . -6) (undo-tree-id1921 . -6) (278 . 279) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css) 1 2 (face (rainbow-delimiters-depth-1-face) part-side css)) . 278) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) part-side css)) . 279) (279 . 280) (#("[]" 0 1 (face (rainbow-delimiters-depth-2-face) part-side css) 1 2 (face (rainbow-delimiters-depth-2-face) part-side css)) . 279) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1)) (25699 62598 264769 950000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -96) 115) ((96 . 100) (t 25699 62556 202860 552000)) (25699 62556 175078 573000) 0 nil])
([nil nil ((nil rear-nonsticky nil 514 . 515) (nil tag-attr t 504 . 515) (nil tag-name "div" 504 . 515) (nil tag-type start 504 . 515) (nil font-lock-face web-mode-html-attr-value-face 504 . 515) (504 . 515)) nil (25699 62610 632824 166000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) part-side css)) . -279) (undo-tree-id1774 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) part-side css)) . 280)) ((279 . 281)) (25699 62597 946246 406000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 548 . 549) (nil tag-attr t 538 . 549) (nil tag-name "div" 538 . 549) (nil tag-type start 538 . 549) (nil font-lock-face web-mode-html-attr-value-face 538 . 549) (538 . 549) (t 25699 62610 658788 333000)) nil (25699 62615 913972 287000) 0 nil])
([nil nil ((281 . 283) (#("    " 0 4 (face whitespace-trailing part-side css)) . 280) (undo-tree-id1772 . -2) (undo-tree-id1773 . 4) (282 . 284) (279 . 283)) ((#("
  
" 0 1 (part-side css) 1 3 (face whitespace-trailing part-side css) 3 4 (part-side css)) . 279) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -4) (undo-tree-id1837 . -3) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (#("  " 0 2 (face whitespace-trailing part-side css)) . 282) (280 . 284) (#("  " 0 2 (part-side css)) . 281)) (25699 62597 623939 569000) 0 nil])
([nil nil ((549 . 550)) nil (25699 62667 39646 545000) 0 nil])
([nil nil ((nil rear-nonsticky nil 425 . 426) (nil rear-nonsticky t 425 . 426) (nil part-side css 425 . 426) (nil part-side css 421 . 425) (nil part-side css 407 . 421) (nil face web-mode-css-property-name-face 407 . 421) (nil part-side css 401 . 407) (nil part-side css 400 . 401) (nil face (rainbow-delimiters-depth-2-face) 400 . 401) (nil part-side css 382 . 400) (nil part-side css 381 . 382) (nil face (rainbow-delimiters-depth-2-face) 381 . 382) (nil part-side css 377 . 381) (nil face web-mode-css-function-face 377 . 381) (nil part-side css 366 . 377) (nil part-side css 359 . 366) (nil face web-mode-css-property-name-face 359 . 366) (nil part-side css 342 . 359) (nil part-side css 326 . 342) (nil face web-mode-css-property-name-face 326 . 342) (nil part-side css 320 . 326) (nil part-side css 319 . 320) (nil face (rainbow-delimiters-depth-2-face) 319 . 320) (nil part-side css 307 . 319) (nil part-side css 306 . 307) (nil face (rainbow-delimiters-depth-2-face) 306 . 307) (nil part-side css 302 . 306) (nil face web-mode-css-function-face 302 . 306) (nil part-side css 301 . 302) (nil part-side css 284 . 301) (nil face web-mode-css-property-name-face 284 . 301) (nil part-side css 280 . 284) (280 . 426)) ((#("    background-color: rgba(0, 0, 0, 0.8);
    background-clip: border-box;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 6px;" 0 4 (part-side css) 4 21 (face web-mode-css-property-name-face part-side css) 21 22 (part-side css) 22 26 (face web-mode-css-function-face part-side css) 26 27 (face (rainbow-delimiters-depth-2-face) part-side css) 27 39 (part-side css) 39 40 (face (rainbow-delimiters-depth-2-face) part-side css) 40 46 (part-side css) 46 62 (face web-mode-css-property-name-face part-side css) 62 79 (part-side css) 79 86 (face web-mode-css-property-name-face part-side css) 86 97 (part-side css) 97 101 (face web-mode-css-function-face part-side css) 101 102 (face (rainbow-delimiters-depth-2-face) part-side css) 102 120 (part-side css) 120 121 (face (rainbow-delimiters-depth-2-face) part-side css) 121 127 (part-side css) 127 141 (face web-mode-css-property-name-face part-side css) 141 145 (part-side css) 145 146 (part-side css rear-nonsticky t)) . 280) (undo-tree-id1776 . -123) (undo-tree-id1777 . -146) (undo-tree-id1778 . -146) (undo-tree-id1779 . -146) (undo-tree-id1780 . -146) (undo-tree-id1781 . -146) (undo-tree-id1782 . -146) (undo-tree-id1783 . -146) (undo-tree-id1784 . -146) (undo-tree-id1785 . -146) (undo-tree-id1786 . -146) (undo-tree-id1787 . -146) (undo-tree-id1788 . -146) (undo-tree-id1789 . -146) (undo-tree-id1790 . -146) (undo-tree-id1791 . -146) (undo-tree-id1792 . -146) (undo-tree-id1793 . -146) (undo-tree-id1794 . -146) (undo-tree-id1795 . -146) (undo-tree-id1796 . -146) (undo-tree-id1797 . -146) (undo-tree-id1798 . -146) (undo-tree-id1799 . -146) (undo-tree-id1800 . -146) (undo-tree-id1801 . -146) (undo-tree-id1802 . -146) (undo-tree-id1803 . -146) (undo-tree-id1804 . -146) (undo-tree-id1805 . -146) (undo-tree-id1806 . -146) (undo-tree-id1807 . -146) (undo-tree-id1808 . -146) (undo-tree-id1809 . -146) (undo-tree-id1810 . -146) (undo-tree-id1811 . -146) (undo-tree-id1812 . -146) (undo-tree-id1813 . -146) (undo-tree-id1814 . -146) (undo-tree-id1815 . -146) (undo-tree-id1816 . -146) (undo-tree-id1817 . -146) (undo-tree-id1818 . -146) (undo-tree-id1819 . -146) (undo-tree-id1820 . -146) (undo-tree-id1821 . -146) (undo-tree-id1822 . -146) (undo-tree-id1823 . -146) (undo-tree-id1824 . -146) (undo-tree-id1825 . -146) (undo-tree-id1826 . -146) (undo-tree-id1827 . -146) (undo-tree-id1828 . -146) (undo-tree-id1829 . -146) (undo-tree-id1830 . -146) (undo-tree-id1831 . -146) (undo-tree-id1832 . -146) (undo-tree-id1833 . -146) (nil face (rainbow-delimiters-depth-2-face) 306 . 307) (nil face (rainbow-delimiters-depth-2-face) 319 . 320) (nil face (rainbow-delimiters-depth-2-face) 381 . 382) (nil face (rainbow-delimiters-depth-2-face) 400 . 401) (nil rear-nonsticky nil 425 . 426) (nil rear-nonsticky t 425 . 426) (t 25699 62591 382813 804000)) (25699 62591 354593 487000) 0 nil])
([nil nil ((515 . 516)) nil (25699 62690 355191 430000) 0 nil] [nil nil ((#("
        <div class=\"modal_cover d-flex justify-content-center mt-5 h-100\">
          <div class=\"d-flex align-items-center align-self-center p-3 text-center card cookies\">" 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 13 14 (tag-type start tag-name "div") 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 15 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 21 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 33 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 86 87 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 87 90 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 90 91 (tag-type start tag-name "div") 91 92 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 92 96 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 97 158 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 158 161 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 161 162 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 162 163 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 163 170 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 170 171 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 517) (undo-tree-id2062 . -172) (undo-tree-id2063 . -1) (undo-tree-id2064 . -21) (undo-tree-id2065 . -172) (t 25699 62615 938781 371000)) ((517 . 689)) (25699 62666 560618 454000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 555 . 556) (nil tag-attr t 516 . 556) (nil tag-name "div" 516 . 556) (nil tag-type start 516 . 556) (nil font-lock-face web-mode-html-attr-value-face 516 . 556) (516 . 556)) nil (25699 62690 355189 910000) 0 nil])
([nil nil ((#("          </div>
      </div>" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 12 15 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 15 16 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 25 28 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 947) (undo-tree-id2059 . -29) (undo-tree-id2060 . -17) (undo-tree-id2061 . -29)) ((947 . 976)) (25699 62665 372878 238000) 0 nil])
([nil nil ((#("
        <div class=\"modal_cover d-flex justify-content-center mt-5 h-100\">" 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 13 14 (tag-type start tag-name "div") 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 15 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 21 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 31 32 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 32 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 33 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 558) (undo-tree-id2164 . -75) (undo-tree-id2165 . -1) (undo-tree-id2166 . -21) (undo-tree-id2167 . -73) (undo-tree-id2168 . -75)) nil (25699 62690 355186 667000) 0 nil])
([nil nil ((#("      " 0 6 (tag-type start tag-name "button")) . -864) (#("      " 0 6 (tag-type start tag-name "button")) . -835) ("      " . -821) ("      " . -675) 330) ((675 . 681) (821 . 827) (835 . 841) (864 . 870)) (25699 62664 913146 694000) 0 nil])
([nil nil ((#("
      </div>" 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 9 12 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1101) (undo-tree-id2161 . -13) (undo-tree-id2162 . -1) (undo-tree-id2163 . -13)) nil (25699 62690 355176 90000) 0 nil])
([nil nil ((260 . 265) (t 25699 62639 982749 750000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 260) (undo-tree-id2107 . -5) (undo-tree-id2108 . -1) (undo-tree-id2109 . -5) (undo-tree-id2110 . -5) (undo-tree-id2111 . -5) (undo-tree-id2112 . -5) (undo-tree-id2113 . -5) (undo-tree-id2114 . -5) (undo-tree-id2115 . -5) (undo-tree-id2116 . -5) (undo-tree-id2117 . -5) (undo-tree-id2118 . -5) (undo-tree-id2119 . -5) (undo-tree-id2120 . -5) (undo-tree-id2121 . -5) (undo-tree-id2122 . -5) (undo-tree-id2123 . -5) (undo-tree-id2124 . -5) (undo-tree-id2125 . -5) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2128 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -5) (undo-tree-id2131 . -5) (undo-tree-id2132 . -5) (undo-tree-id2133 . -5) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -5) (undo-tree-id2137 . -5) (undo-tree-id2138 . -5) (undo-tree-id2139 . -5) (undo-tree-id2140 . -5) (undo-tree-id2141 . -5) (undo-tree-id2142 . -5) (undo-tree-id2143 . -5) (undo-tree-id2144 . -5) (undo-tree-id2145 . -5) (undo-tree-id2146 . -5) (undo-tree-id2147 . -5) (undo-tree-id2148 . -5) (undo-tree-id2149 . -1) (undo-tree-id2150 . -5) (undo-tree-id2151 . -5) (undo-tree-id2152 . -5) (undo-tree-id2153 . -5) (undo-tree-id2154 . -5) (undo-tree-id2155 . -5) (undo-tree-id2156 . -5) (undo-tree-id2157 . -5) (undo-tree-id2158 . -5) (undo-tree-id2159 . -5) (undo-tree-id2160 . -5)) (25699 62664 496858 203000) 0 nil])
([nil nil ((#(" mt-5 h-100" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 545) (undo-tree-id2169 . -11) (undo-tree-id2170 . -5) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -11) (undo-tree-id2178 . -11) (t 25699 62690 382683 898000)) nil (25699 62706 368449 286000) 0 nil])
([nil nil ((nil rear-nonsticky nil 336 . 337) (nil part-side css 325 . 337) (nil part-side css 315 . 325) (nil face web-mode-css-property-name-face 315 . 325) (nil part-side css 307 . 315) (nil part-side css 297 . 307) (nil face web-mode-css-property-name-face 297 . 307) (nil part-side css 293 . 297) (nil part-side css 284 . 293) (nil part-side css 269 . 284) (nil face web-mode-css-property-name-face 269 . 284) (nil part-side css 265 . 269) (265 . 337)) ((#("    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;" 0 4 (part-side css) 4 19 (face web-mode-css-property-name-face part-side css) 19 32 (part-side css) 32 42 (face web-mode-css-property-name-face part-side css) 42 50 (part-side css) 50 60 (face web-mode-css-property-name-face part-side css) 60 71 (part-side css) 71 72 (part-side css rear-nonsticky nil)) . 265) (undo-tree-id2066 . -28) (undo-tree-id2067 . -22) (undo-tree-id2068 . -22) (undo-tree-id2069 . -22) (undo-tree-id2070 . -22) (undo-tree-id2071 . -22) (undo-tree-id2072 . -22) (undo-tree-id2073 . -22) (undo-tree-id2074 . -22) (undo-tree-id2075 . -22) (undo-tree-id2076 . -22) (undo-tree-id2077 . -22) (undo-tree-id2078 . -22) (undo-tree-id2079 . -22) (undo-tree-id2080 . -22) (undo-tree-id2081 . -22) (undo-tree-id2082 . -22) (undo-tree-id2083 . -22) (undo-tree-id2084 . -22) (undo-tree-id2085 . -22) (undo-tree-id2086 . -22) (undo-tree-id2087 . -22) (undo-tree-id2088 . -22) (undo-tree-id2089 . -22) (undo-tree-id2090 . -22) (undo-tree-id2091 . -22) (undo-tree-id2092 . -22) (undo-tree-id2093 . -22) (undo-tree-id2094 . -22) (undo-tree-id2095 . -22) (undo-tree-id2096 . -22) (undo-tree-id2097 . -22) (undo-tree-id2098 . -22) (undo-tree-id2099 . -22) (undo-tree-id2100 . -22) (undo-tree-id2101 . -22) (undo-tree-id2102 . -22) (undo-tree-id2103 . -22) (undo-tree-id2104 . -22) (undo-tree-id2105 . -22) (undo-tree-id2106 . -22) (nil rear-nonsticky t 336 . 337)) (25699 62664 160995 879000) 0 nil])
([nil nil ((113 . 118) (t 25699 62706 398663 82000)) nil (25699 62724 261053 791000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -265) 287) ((265 . 269) (t 25699 62660 722722 582000)) (25699 62660 693623 959000) 0 nil])
([nil nil ((nil rear-nonsticky nil 189 . 190) (nil part-side css 178 . 190) (nil part-side css 168 . 178) (nil face web-mode-css-property-name-face 168 . 178) (nil part-side css 160 . 168) (nil part-side css 150 . 160) (nil face web-mode-css-property-name-face 150 . 160) (nil part-side css 146 . 150) (nil part-side css 137 . 146) (nil part-side css 122 . 137) (nil face web-mode-css-property-name-face 122 . 137) (nil part-side css 118 . 122) (118 . 190)) nil (25699 62724 261051 170000) 0 nil])
nil
([nil nil ((#("    " 0 4 (part-side css)) . -118) 139) nil (25699 62744 905183 658000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -643) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -644) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -645) (undo-tree-id2198 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -646) (undo-tree-id2199 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -647) (undo-tree-id2200 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -648) (undo-tree-id2201 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -649) (undo-tree-id2202 . -1) 650) nil (25699 62808 109497 997000) 0 nil] [nil nil ((#("class=\"d-flex align-items-center align-self-center p-3 text-center card cookies\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 67 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 67 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 71 72 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 72 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 79 80 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t)) . 636) (undo-tree-id2182 . -80) (undo-tree-id2183 . -79) (undo-tree-id2184 . -80) (t 25699 62724 290639 893000)) ((636 . 716)) (25699 62744 505587 635000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (undo-tree-id2238 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 700)) nil (25699 62847 586037 513000) 0 nil] [nil nil ((#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 696) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696)) ((696 . 697) (696 . 697) (696 . 697) (696 . 697) (696 . 697) (696 . 697) (696 . 697) (696 . 697) (696 . 697)) (25699 62807 306335 977000) 0 nil] [nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662)) ((662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663)) (25699 62774 797836 873000) 0 nil] [nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 643) (t 25699 62751 986604 123000)) ((643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (643 . 644) (t 25699 62757 906596 495000)) (25699 62757 880405 782000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -635) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) 636) ((635 . 636) (t 25699 62739 102620 747000)) (25699 62739 71119 273000) 0 nil])
([nil nil ((18 . 23)) nil (25699 62856 515875 510000) 0 nil] [nil nil ((#("
    flex-direction: column;" 0 1 (part-side css) 1 5 (part-side css) 5 20 (face web-mode-css-property-name-face part-side css) 20 28 (part-side css)) . 18) (undo-tree-id2239 . -28) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -28) (t 25699 62811 826527 313000)) ((18 . 46)) (25699 62847 135288 344000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (undo-tree-id2237 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 696)) ((696 . 697) (696 . 697) (696 . 697)) (25699 62806 814250 910000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 662) (t 25699 62764 850587 558000)) ((662 . 663) (662 . 663) (662 . 663) (662 . 663) (662 . 663) (t 25699 62771 118579 498000)) (25699 62771 91834 696000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 59 . 60) (nil part-side css 59 . 60) (nil part-side css 58 . 59) (nil face (rainbow-delimiters-depth-2-face) 58 . 59) (nil part-side css 46 . 58) (nil part-side css 45 . 46) (nil face (rainbow-delimiters-depth-2-face) 45 . 46) (nil part-side css 41 . 45) (nil face web-mode-css-function-face 41 . 45) (nil part-side css 40 . 41) (nil part-side css 23 . 40) (nil face web-mode-css-property-name-face 23 . 40) (23 . 60)) nil (25699 62856 515873 711000) 0 nil])
([nil nil ((#("
    min-width: 0;" 0 1 (part-side css) 1 5 (part-side css) 5 15 (face web-mode-css-property-name-face part-side css) 15 18 (part-side css)) . 18) (undo-tree-id2243 . -18) (undo-tree-id2244 . -1) (undo-tree-id2245 . -18) (t 25699 62819 182517 911000)) ((18 . 36)) (25699 62846 305499 919000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 695) (undo-tree-id2203 . -1) (undo-tree-id2205 . -1) (undo-tree-id2207 . -1) (undo-tree-id2209 . -1) (undo-tree-id2211 . -1) (undo-tree-id2213 . -1) (undo-tree-id2215 . -1) (undo-tree-id2217 . -1) (undo-tree-id2219 . -1) (undo-tree-id2221 . -1) (undo-tree-id2223 . -1) (undo-tree-id2225 . -1) (undo-tree-id2227 . -1) (undo-tree-id2229 . -1) (undo-tree-id2231 . -1) (undo-tree-id2233 . -1) (undo-tree-id2235 . -1)) ((695 . 696) (t 25699 62786 686559 506000)) (25699 62786 656395 569000) 0 nil])
nil
([nil nil ((#("." 0 1 (part-side css)) . -56) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (#("8" 0 1 (part-side css)) . -57) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) 58) nil (25699 62856 515867 406000) 0 nil])
([nil nil ((#("
    word-wrap: break-word;" 0 5 (part-side css) 5 15 (face web-mode-css-property-name-face part-side css) 15 27 (part-side css)) . 18) (undo-tree-id2246 . -27) (undo-tree-id2247 . -1) (undo-tree-id2248 . -27) (undo-tree-id2249 . -27) (undo-tree-id2250 . -27) (t 25699 62823 458512 452000)) ((18 . 45)) (25699 62845 319711 358000) 0 nil])
nil
([nil nil ((#("0" 0 1 (part-side css)) . -55) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) 56) nil (25699 62856 515806 392000) 0 nil])
([nil nil ((#(" card" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 622) (undo-tree-id2251 . -5) (undo-tree-id2252 . -5) (undo-tree-id2254 . -5) (undo-tree-id2255 . -5) (t 25699 62827 570507 203000)) ((622 . 627) (t 25699 62833 30500 240000)) (25699 62833 3204 864000) 0 nil])
([nil nil ((55 . 56)) nil (25699 62856 515760 188000) 0 nil])
nil
([nil nil ((#("1" 0 1 (part-side css)) . -55) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) 56 (t 25699 62856 542470 304000)) nil (25699 62866 645445 200000) 0 nil])
([nil nil ((55 . 56)) nil (25699 62866 645403 819000) 0 nil])
([nil nil ((#(" card" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 735) (undo-tree-id2345 . -5) (undo-tree-id2346 . -5) (undo-tree-id2347 . -5) (undo-tree-id2348 . -5) (t 25699 62866 674457 429000)) nil (25699 62916 794189 97000) 0 nil])
([nil nil ((734 . 742) ("    " . -667) (737 . 738)) nil (25699 62961 580665 746000) 0 nil])
([nil nil ((796 . 805)) nil (25699 62980 808861 332000) 0 nil] [nil nil (("    " . -1178) 1188) ((1178 . 1182)) (25699 62961 127851 179000) 0 nil])
([nil nil ((733 . 742)) nil (25699 62980 808860 430000) 0 nil])
([nil nil ((796 . 805)) (("
        " . 796) (t 25699 62957 30343 255000)) (25699 62956 376778 701000) 0 nil])
([nil nil ((742 . 753)) nil (25699 62980 808859 567000) 0 nil])
([nil nil ((733 . 742) (t 25699 62916 822393 923000)) (("
        " . 733) (undo-tree-id2462 . -9) (undo-tree-id2463 . -1) (undo-tree-id2464 . -9) (undo-tree-id2465 . -9) (undo-tree-id2466 . -9) (undo-tree-id2467 . -9) (undo-tree-id2468 . -9) (undo-tree-id2469 . -9) (undo-tree-id2470 . -9) (undo-tree-id2471 . -9) (undo-tree-id2472 . -9) (undo-tree-id2473 . -9) (undo-tree-id2474 . -9) (undo-tree-id2475 . -9) (undo-tree-id2476 . -9) (undo-tree-id2477 . -9) (undo-tree-id2478 . -9) (undo-tree-id2479 . -9) (undo-tree-id2480 . -9) (undo-tree-id2481 . -9) (undo-tree-id2482 . -9) (undo-tree-id2483 . -9) (undo-tree-id2484 . -9) (undo-tree-id2485 . -9) (undo-tree-id2486 . -9) (undo-tree-id2487 . -1) (undo-tree-id2488 . -9) (undo-tree-id2489 . -9) (undo-tree-id2490 . -9) (undo-tree-id2491 . -9) (undo-tree-id2492 . -9) (undo-tree-id2493 . -9) (undo-tree-id2494 . -9) (undo-tree-id2495 . -9) (undo-tree-id2496 . -9) (undo-tree-id2497 . -9) (undo-tree-id2498 . -9) (undo-tree-id2499 . -9) (undo-tree-id2500 . -9) (undo-tree-id2501 . -9) (undo-tree-id2502 . -9) (undo-tree-id2503 . -9) (undo-tree-id2504 . -9) (undo-tree-id2505 . -9) (undo-tree-id2506 . -9)) (25699 62955 841104 76000) 0 nil])
([nil nil ((748 . 758) (749 . 757) (#("          " 0 10 (face whitespace-trailing)) . 748) (748 . 758) (748 . 749) ("        " . 748) (747 . 756)) nil (25699 62980 808858 29000) 0 nil])
([nil nil ((742 . 753)) ((#("<div></div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 742) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) (undo-tree-id2456 . -4) (undo-tree-id2457 . -4) (undo-tree-id2458 . -4) (undo-tree-id2459 . -4) (undo-tree-id2460 . -4) (undo-tree-id2461 . -4)) (25699 62955 414763 588000) 0 nil] [nil nil ((742 . 757)) ((#("<v-row></v-row>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-row") 1 6 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-row") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-row") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-row") 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-row") 9 14 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-row") 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-row")) . 742) (undo-tree-id2349 . -7)) (25699 62923 255745 478000) 0 nil])
([nil nil ((#("        <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 9 12 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 12 13 (tag-type void tag-name "img") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 14 16 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 17 49 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 50 51 (tag-type void tag-name "img") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 52 56 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 57 60 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 61 62 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img")) . 837) (822 . 837) (#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 759) (undo-tree-id2512 . -10) (774 . 837) 769) nil (25699 62980 808854 964000) 0 nil])
([nil nil ((754 . 758) (746 . 755)) ((#(" class=\"\"" 0 1 (tag-type start tag-name "div") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t)) . 746) (undo-tree-id2413 . -8) (undo-tree-id2414 . -5) (undo-tree-id2415 . -8) (undo-tree-id2416 . -8) (undo-tree-id2417 . -8) (undo-tree-id2418 . -8) (undo-tree-id2419 . -8) (undo-tree-id2420 . -8) (undo-tree-id2421 . -8) (undo-tree-id2422 . -8) (undo-tree-id2423 . -8) (undo-tree-id2424 . -8) (undo-tree-id2425 . -8) (#("row " 0 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 754) (undo-tree-id2426 . -3) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) (undo-tree-id2431 . -4) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4)) (25699 62955 15868 860000) 0 nil])
nil
([nil nil ((746 . 750)) nil (25699 62980 808851 502000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -757) (undo-tree-id2353 . -1) 758) ((757 . 758)) (25699 62954 562333 147000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -747) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t)) . -748) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr-end 0 tag-attr t)) . -749) (undo-tree-id2511 . -1) 750) nil (25699 62980 808848 845000) 0 nil])
([nil nil ((760 . 770) (761 . 769) (#("          " 0 10 (face whitespace-trailing)) . 760) (760 . 770) (760 . 761) ("        " . 760) (759 . 768)) (("
        " . 759) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (760 . 768) ("
" . 760) (undo-tree-id2400 . -1) (#("          " 0 10 (face whitespace-trailing)) . 760) (760 . 770) ("        " . 761) (#("          " 0 10 (face whitespace-trailing)) . 760) (undo-tree-id2401 . -10) (undo-tree-id2402 . -10) (undo-tree-id2403 . -10) (undo-tree-id2404 . -10) (undo-tree-id2405 . -10) (undo-tree-id2406 . -10) (undo-tree-id2407 . -10) (undo-tree-id2408 . -10) (undo-tree-id2409 . -10) (undo-tree-id2410 . -10) (undo-tree-id2411 . -10) (undo-tree-id2412 . -10)) (25699 62954 163520 70000) 0 nil])
([nil nil ((754 . 757) (747 . 755)) nil (25699 62980 808807 626000) 0 nil])
([nil nil ((#("        <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 9 12 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 12 13 (tag-type void tag-name "img") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 14 16 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 17 49 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 50 51 (tag-type void tag-name "img") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 52 56 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 57 60 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 61 62 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img")) . 849) (834 . 849) (#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 771) (undo-tree-id2352 . -10) (786 . 849) 781) ((#("        <img src=\"https://i.imgur.com/Tl8ZBUe.png\" width=\"50\">
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type void tag-name "img") 9 12 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img") 12 13 (tag-type void tag-name "img") 13 14 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 14 16 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 17 49 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 3 tag-attr t) 50 51 (tag-type void tag-name "img") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t tag-attr-beg 0) 52 56 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type void tag-name "img" tag-attr t) 57 60 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 61 62 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img")) . 786) (undo-tree-id2376 . -62) (undo-tree-id2377 . -62) (undo-tree-id2378 . -62) (undo-tree-id2379 . -62) (undo-tree-id2380 . -62) (undo-tree-id2381 . -62) (undo-tree-id2382 . -62) (undo-tree-id2383 . -62) (undo-tree-id2384 . -62) (undo-tree-id2385 . -62) (undo-tree-id2386 . -62) (771 . 786) (#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 834) (849 . 912)) (25699 62953 766342 337000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing)) . -760) 806) nil (25699 62980 808799 974000) 0 nil])
([nil nil (("
" . 770) (undo-tree-id2350 . -1) (undo-tree-id2351 . 1)) ((770 . 771)) (25699 62953 411435 322000) 0 nil])
([nil nil ((760 . 770) (t 25699 62980 838313 349000)) nil (25699 62995 370517 431000) 0 nil])
([nil nil (("        " . -770) 832) ((770 . 778)) (25699 62953 142599 905000) 0 nil])
([nil nil ((779 . 781) 781) nil (25699 62995 370516 210000) 0 nil])
([nil nil ((757 . 758) (t 25699 62932 718373 867000)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 757) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1)) (25699 62952 840750 971000) 0 nil])
([nil nil ((786 . 795)) nil (25699 62995 370514 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 774 . 775) (nil tag-attr t 774 . 775) (nil tag-name "div" 774 . 775) (nil tag-type start 774 . 775) (nil font-lock-face web-mode-html-attr-value-face 774 . 775) (nil tag-attr t 773 . 774) (nil tag-name "div" 773 . 774) (nil tag-type start 773 . 774) (nil font-lock-face web-mode-html-attr-value-face 773 . 774) (nil tag-attr t 772 . 773) (nil tag-name "div" 772 . 773) (nil tag-type start 772 . 773) (nil font-lock-face web-mode-html-attr-value-face 772 . 773) (nil tag-attr t 771 . 772) (nil tag-name "div" 771 . 772) (nil tag-type start 771 . 772) (nil font-lock-face web-mode-html-attr-value-face 771 . 772) (nil tag-attr t 770 . 771) (nil tag-name "div" 770 . 771) (nil tag-type start 770 . 771) (nil font-lock-face web-mode-html-attr-value-face 770 . 771) (nil tag-attr t 769 . 770) (nil tag-name "div" 769 . 770) (nil tag-type start 769 . 770) (nil font-lock-face web-mode-html-attr-value-face 769 . 770) (nil tag-attr t 768 . 769) (nil tag-name "div" 768 . 769) (nil tag-type start 768 . 769) (nil font-lock-face web-mode-html-attr-value-face 768 . 769) (nil tag-attr t 767 . 768) (nil tag-name "div" 767 . 768) (nil tag-type start 767 . 768) (nil font-lock-face web-mode-html-attr-value-face 767 . 768) (nil tag-attr t 766 . 767) (nil tag-name "div" 766 . 767) (nil tag-type start 766 . 767) (nil font-lock-face web-mode-html-attr-value-face 766 . 767) (nil tag-attr t 765 . 766) (nil tag-name "div" 765 . 766) (nil tag-type start 765 . 766) (nil font-lock-face web-mode-html-attr-value-face 765 . 766) (nil tag-attr t 764 . 765) (nil tag-name "div" 764 . 765) (nil tag-type start 764 . 765) (nil font-lock-face web-mode-html-attr-value-face 764 . 765) (nil tag-attr t 763 . 764) (nil tag-name "div" 763 . 764) (nil tag-type start 763 . 764) (nil font-lock-face web-mode-html-attr-value-face 763 . 764) (nil tag-attr t 762 . 763) (nil tag-name "div" 762 . 763) (nil tag-type start 762 . 763) (nil font-lock-face web-mode-html-attr-value-face 762 . 763) (nil tag-attr t 761 . 762) (nil tag-name "div" 761 . 762) (nil tag-type start 761 . 762) (nil font-lock-face web-mode-html-attr-value-face 761 . 762) (nil tag-attr t 760 . 761) (nil tag-name "div" 760 . 761) (nil tag-type start 760 . 761) (nil font-lock-face web-mode-html-attr-value-face 760 . 761) (nil tag-attr t 759 . 760) (nil tag-name "div" 759 . 760) (nil tag-type start 759 . 760) (nil font-lock-face web-mode-html-attr-value-face 759 . 760) (nil tag-attr t 758 . 759) (nil tag-name "div" 758 . 759) (nil tag-type start 758 . 759) (nil font-lock-face web-mode-html-attr-value-face 758 . 759) (758 . 775)) ((#("align-self-center" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky nil)) . 758) (undo-tree-id2354 . -17) (undo-tree-id2355 . -17) (undo-tree-id2356 . -17) (undo-tree-id2357 . -17) (undo-tree-id2358 . -17) (nil tag-name "div" 758 . 759) (nil tag-name "div" 759 . 760) (nil tag-name "div" 760 . 761) (nil tag-name "div" 761 . 762) (nil tag-name "div" 762 . 763) (nil tag-name "div" 763 . 764) (nil tag-name "div" 764 . 765) (nil tag-name "div" 765 . 766) (nil tag-name "div" 766 . 767) (nil tag-name "div" 767 . 768) (nil tag-name "div" 768 . 769) (nil tag-name "div" 769 . 770) (nil tag-name "div" 770 . 771) (nil tag-name "div" 771 . 772) (nil tag-name "div" 772 . 773) (nil tag-name "div" 773 . 774) (nil tag-name "div" 774 . 775) (nil rear-nonsticky t 774 . 775) (t 25699 62949 534352 686000)) (25699 62949 507147 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 809 . 810) (nil tag-attr t 809 . 810) (nil tag-name "img" 809 . 810) (nil tag-type void 809 . 810) (nil font-lock-face web-mode-html-attr-value-face 809 . 810) (nil tag-attr t 808 . 809) (nil tag-name "img" 808 . 809) (nil tag-type void 808 . 809) (nil font-lock-face web-mode-html-attr-value-face 808 . 809) (nil tag-attr t 807 . 808) (nil tag-name "img" 807 . 808) (nil tag-type void 807 . 808) (nil font-lock-face web-mode-html-attr-value-face 807 . 808) (nil tag-attr t 806 . 807) (nil tag-name "img" 806 . 807) (nil tag-type void 806 . 807) (nil font-lock-face web-mode-html-attr-value-face 806 . 807) (nil tag-attr t 805 . 806) (nil tag-name "img" 805 . 806) (nil tag-type void 805 . 806) (nil font-lock-face web-mode-html-attr-value-face 805 . 806) (nil tag-attr t 804 . 805) (nil tag-name "img" 804 . 805) (nil tag-type void 804 . 805) (nil font-lock-face web-mode-html-attr-value-face 804 . 805) (nil tag-attr t 803 . 804) (nil tag-name "img" 803 . 804) (nil tag-type void 803 . 804) (nil font-lock-face web-mode-html-attr-value-face 803 . 804) (nil tag-attr t 802 . 803) (nil tag-name "img" 802 . 803) (nil tag-type void 802 . 803) (nil font-lock-face web-mode-html-attr-value-face 802 . 803) (nil tag-attr t 801 . 802) (nil tag-name "img" 801 . 802) (nil tag-type void 801 . 802) (nil font-lock-face web-mode-html-attr-value-face 801 . 802) (nil tag-attr t 800 . 801) (nil tag-name "img" 800 . 801) (nil tag-type void 800 . 801) (nil font-lock-face web-mode-html-attr-value-face 800 . 801) (nil tag-attr t 799 . 800) (nil tag-name "img" 799 . 800) (nil tag-type void 799 . 800) (nil font-lock-face web-mode-html-attr-value-face 799 . 800) (nil tag-attr t 798 . 799) (nil tag-name "img" 798 . 799) (nil tag-type void 798 . 799) (nil font-lock-face web-mode-html-attr-value-face 798 . 799) (nil tag-attr t 797 . 798) (nil tag-name "img" 797 . 798) (nil tag-type void 797 . 798) (nil font-lock-face web-mode-html-attr-value-face 797 . 798) (nil tag-attr t 796 . 797) (nil tag-name "img" 796 . 797) (nil tag-type void 796 . 797) (nil font-lock-face web-mode-html-attr-value-face 796 . 797) (nil tag-attr t 795 . 796) (nil tag-name "img" 795 . 796) (nil tag-type void 795 . 796) (nil font-lock-face web-mode-html-attr-value-face 795 . 796) (nil tag-attr t 794 . 795) (nil tag-name "img" 794 . 795) (nil tag-type void 794 . 795) (nil font-lock-face web-mode-html-attr-value-face 794 . 795) (nil tag-attr t 793 . 794) (nil tag-name "img" 793 . 794) (nil tag-type void 793 . 794) (nil font-lock-face web-mode-html-attr-value-face 793 . 794) (793 . 810)) nil (25699 62995 370509 610000) 0 nil])
nil
([nil nil ((#("          " 0 10 (face whitespace-trailing)) . -760) 810) nil (25699 62995 370487 764000) 0 nil])
([nil nil ((#("align-self-center" 0 16 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t rear-nonsticky t)) . 783) (undo-tree-id2513 . -17) (undo-tree-id2514 . -17) (t 25699 62995 402295 87000)) nil (25699 63019 654815 717000) 0 nil])
([nil nil ((783 . 789)) nil (25699 63104 249347 115000) 0 nil] [nil nil ((nil rear-nonsticky nil 796 . 797) (nil tag-name "img" 790 . 797) (nil tag-type void 790 . 797) (nil tag-attr t 789 . 790) (nil tag-attr-end 5 789 . 790) (nil tag-name "img" 789 . 790) (nil tag-type void 789 . 790) (nil font-lock-face web-mode-html-attr-value-face 789 . 790) (nil tag-attr t 783 . 789) (nil tag-name "img" 783 . 789) (nil tag-type void 783 . 789) (nil font-lock-face web-mode-html-attr-value-face 783 . 789) (783 . 797)) ((#("class=\"center\"" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type void tag-name "img" tag-attr-end 5 tag-attr t) 7 13 (tag-type void tag-name "img") 13 14 (tag-type void tag-name "img" rear-nonsticky nil)) . 783) (undo-tree-id2515 . -14) (nil tag-name "img" 783 . 789) (nil tag-name "img" 789 . 790) (nil tag-name "img" 796 . 797) (nil tag-name "img" 790 . 796) (nil rear-nonsticky t 796 . 797)) (25699 63019 652932 383000) 0 nil])
([nil nil ((759 . 770) (t 25699 63091 18175 771000)) nil (25699 63131 563641 816000) 0 nil] [nil nil ((759 . 770) (t 25699 63091 18175 771000)) (("
          " . 759) (undo-tree-id2693 . -1) (undo-tree-id2694 . -11) (undo-tree-id2695 . -11) (undo-tree-id2696 . -11) (undo-tree-id2697 . -11) (undo-tree-id2698 . -11) (undo-tree-id2699 . -11) (undo-tree-id2700 . -11) (undo-tree-id2701 . -11) (undo-tree-id2702 . -11) (undo-tree-id2703 . -11) (undo-tree-id2704 . -11) (undo-tree-id2705 . -11) (undo-tree-id2706 . -11) (undo-tree-id2707 . -11) (undo-tree-id2708 . -11) (undo-tree-id2709 . -11) (undo-tree-id2710 . -11) (undo-tree-id2711 . -11) (undo-tree-id2712 . -11) (undo-tree-id2713 . -11) (undo-tree-id2714 . -1) (undo-tree-id2715 . -11) (undo-tree-id2716 . -11) (undo-tree-id2717 . -11) (undo-tree-id2718 . -11) (undo-tree-id2719 . -11) (undo-tree-id2720 . -11) (undo-tree-id2721 . -11)) (25699 63103 920622 773000) 0 nil] [nil nil ((138 . 140) (#("  " 0 2 (part-side css)) . 137) (undo-tree-id2516 . -2) (137 . 140) (#("  " 0 2 (face whitespace-trailing part-side css)) . 136) (136 . 138) (136 . 137) (t 25699 63021 602262 295000)) ((#("
" 0 1 (part-side css)) . 136) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (#("  " 0 2 (face whitespace-trailing part-side css)) . 136) (136 . 138) (#("  
" 0 2 (face whitespace-trailing part-side css) 2 3 (part-side css)) . 137) (undo-tree-id2659 . -3) (undo-tree-id2660 . -2) (137 . 139) (#("  " 0 2 (face whitespace-trailing part-side css)) . 138)) (25699 63089 609617 915000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 802 . 803) (nil tag-name "div" 802 . 803) (nil tag-type start 802 . 803) (nil tag-end t 802 . 803) (nil font-lock-face web-mode-html-tag-bracket-face 802 . 803) (nil tag-attr t 801 . 802) (nil tag-attr-end 5 801 . 802) (nil tag-name "div" 801 . 802) (nil tag-type start 801 . 802) (nil font-lock-face web-mode-html-attr-value-face 801 . 802) (nil tag-attr t 781 . 801) (nil tag-name "div" 781 . 801) (nil tag-type start 781 . 801) (nil font-lock-face web-mode-html-attr-value-face 781 . 801) (nil tag-attr t 780 . 781) (nil tag-name "div" 780 . 781) (nil tag-type start 780 . 781) (nil font-lock-face web-mode-html-attr-equal-face 780 . 781) (nil tag-attr t 776 . 780) (nil tag-name "div" 776 . 780) (nil tag-type start 776 . 780) (nil font-lock-face web-mode-html-attr-name-face 776 . 780) (nil tag-attr-beg 0 775 . 776) (nil tag-attr t 775 . 776) (nil tag-name "div" 775 . 776) (nil tag-type start 775 . 776) (nil font-lock-face web-mode-html-attr-name-face 775 . 776) (nil tag-name "div" 774 . 775) (nil tag-type start 774 . 775) (nil tag-name "div" 771 . 774) (nil tag-type start 771 . 774) (nil font-lock-face web-mode-html-tag-face 771 . 774) (nil tag-name "div" 770 . 771) (nil tag-type start 770 . 771) (nil tag-beg 17 770 . 771) (nil font-lock-face web-mode-html-tag-bracket-face 770 . 771) (770 . 803)) nil (25699 63131 563638 784000) 0 nil])
([nil nil ((770 . 774)) ((#("<div" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 0 tag-type start tag-name "div") 1 3 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "div") 3 4 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "div")) . 770) (undo-tree-id2673 . -4) (undo-tree-id2674 . -4) (undo-tree-id2675 . -4) (undo-tree-id2676 . -4) (undo-tree-id2677 . -4) (undo-tree-id2678 . -4) (undo-tree-id2679 . -4) (undo-tree-id2680 . -4) (undo-tree-id2681 . -4) (undo-tree-id2682 . -4) (undo-tree-id2683 . -4) (undo-tree-id2684 . -4) (undo-tree-id2685 . -4) (undo-tree-id2686 . -4) (undo-tree-id2687 . -4) (undo-tree-id2688 . -4) (undo-tree-id2689 . -4) (undo-tree-id2690 . -4) (undo-tree-id2691 . -4) (undo-tree-id2692 . -4)) (25699 63103 688636 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 290 . 291) (nil part-side css 290 . 291) (nil face (rainbow-delimiters-depth-1-face) 290 . 291) (nil part-side css 284 . 290) (nil part-side css 273 . 284) (nil face web-mode-css-property-name-face 273 . 284) (nil part-side css 264 . 273) (nil part-side css 258 . 264) (nil face web-mode-css-property-name-face 258 . 264) (nil part-side css 249 . 258) (nil part-side css 233 . 249) (nil face web-mode-css-property-name-face 233 . 249) (nil part-side css 230 . 233) (nil part-side css 229 . 230) (nil face (rainbow-delimiters-depth-1-face) 229 . 230) (nil part-side css 222 . 229) (nil face web-mode-css-pseudo-class-face 222 . 229) (nil part-side css 220 . 222) (nil part-side css 212 . 220) (nil face web-mode-css-selector-class-face 212 . 220) (nil part-side css 210 . 212) (nil part-side css 209 . 210) (nil face (rainbow-delimiters-depth-1-face) 209 . 210) (nil part-side css 203 . 209) (nil part-side css 192 . 203) (nil face web-mode-css-property-name-face 192 . 203) (nil part-side css 188 . 192) (nil part-side css 184 . 188) (nil face web-mode-css-color-face 184 . 188) (nil part-side css 183 . 184) (nil part-side css 177 . 183) (nil face web-mode-css-property-name-face 177 . 183) (nil part-side css 168 . 177) (nil part-side css 152 . 168) (nil face web-mode-css-property-name-face 152 . 168) (nil part-side css 149 . 152) (nil part-side css 148 . 149) (nil face (rainbow-delimiters-depth-1-face) 148 . 149) (nil part-side css 145 . 148) (nil part-side css 137 . 145) (nil face web-mode-css-selector-class-face 137 . 145) (137 . 291)) ((#(".cookies a {
  text-decoration: none;
  color: #000;
  margin-top: 8px;
}

.cookies a:hover {
  text-decoration: none;
  color: blue;
  margin-top: 8px;
}" 0 8 (face web-mode-css-selector-class-face part-side css) 8 11 (part-side css) 11 12 (face (rainbow-delimiters-depth-1-face) part-side css) 12 15 (part-side css) 15 31 (face web-mode-css-property-name-face part-side css) 31 40 (part-side css) 40 46 (face web-mode-css-property-name-face part-side css) 46 47 (part-side css) 47 51 (face web-mode-css-color-face part-side css) 51 55 (part-side css) 55 66 (face web-mode-css-property-name-face part-side css) 66 72 (part-side css) 72 73 (face (rainbow-delimiters-depth-1-face) part-side css) 73 74 (part-side css) 74 75 (part-side css) 75 83 (face web-mode-css-selector-class-face part-side css) 83 85 (part-side css) 85 92 (face web-mode-css-pseudo-class-face part-side css) 92 93 (face (rainbow-delimiters-depth-1-face) part-side css) 93 96 (part-side css) 96 112 (face web-mode-css-property-name-face part-side css) 112 121 (part-side css) 121 127 (face web-mode-css-property-name-face part-side css) 127 136 (part-side css) 136 147 (face web-mode-css-property-name-face part-side css) 147 153 (part-side css) 153 154 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky nil)) . 137) (undo-tree-id2613 . -13) (undo-tree-id2614 . -154) (undo-tree-id2615 . -83) (nil face (rainbow-delimiters-depth-1-face) 148 . 149) (nil face (rainbow-delimiters-depth-1-face) 209 . 210) (nil face (rainbow-delimiters-depth-1-face) 229 . 230) (nil face (rainbow-delimiters-depth-1-face) 290 . 291) (nil rear-nonsticky t 290 . 291)) (25699 63088 944260 303000) 0 nil])
([nil nil ((887 . 899) (815 . 817) (884 . 885)) nil (25699 63131 563629 831000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "div")) . -773) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) 774) ((773 . 774)) (25699 63103 688313 919000) 0 nil])
([nil nil ((308 . 310) (289 . 291) (272 . 274) (245 . 247) (222 . 224) (217 . 219) (198 . 200) (181 . 183) (154 . 156) (137 . 139)) ((#("  " 0 2 (part-side css)) . 137) (#("  " 0 2 (part-side css)) . 154) (#("  " 0 2 (part-side css)) . 181) (#("  " 0 2 (part-side css)) . 198) (#("  " 0 2 (part-side css)) . 217) (#("  " 0 2 (part-side css)) . 222) (#("  " 0 2 (part-side css)) . 245) (#("  " 0 2 (part-side css)) . 272) (#("  " 0 2 (part-side css)) . 289) (#("  " 0 2 (part-side css)) . 308)) (25699 63087 708344 87000) 0 nil])
([nil nil (("  " . -897) (899 . 905)) nil (25699 63131 563627 453000) 0 nil])
nil
([nil nil ((909 . 910)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 909) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1)) (25699 63087 235824 335000) 0 nil])
([nil nil (("
" . 804) (undo-tree-id2722 . -1)) nil (25699 63131 563622 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 916 . 917) (nil tag-attr t 910 . 917) (nil tag-name "div" 910 . 917) (nil tag-type start 910 . 917) (nil font-lock-face web-mode-html-attr-value-face 910 . 917) (910 . 917)) ((#("cookies" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky nil)) . 910) (undo-tree-id2517 . -7) (undo-tree-id2518 . -7) (undo-tree-id2519 . -7) (undo-tree-id2520 . -7) (undo-tree-id2521 . -7) (undo-tree-id2522 . -7) (undo-tree-id2523 . -7) (undo-tree-id2524 . -7) (undo-tree-id2525 . -7) (undo-tree-id2526 . -7) (undo-tree-id2527 . -7) (undo-tree-id2528 . -7) (undo-tree-id2529 . -7) (undo-tree-id2530 . -7) (undo-tree-id2531 . -7) (undo-tree-id2532 . -7) (undo-tree-id2533 . -7) (undo-tree-id2534 . -7) (undo-tree-id2535 . -7) (undo-tree-id2536 . -7) (undo-tree-id2537 . -7) (undo-tree-id2538 . -7) (undo-tree-id2539 . -7) (undo-tree-id2540 . -7) (undo-tree-id2541 . -7) (undo-tree-id2542 . -7) (undo-tree-id2543 . -7) (undo-tree-id2544 . -7) (undo-tree-id2545 . -7) (undo-tree-id2546 . -7) (undo-tree-id2547 . -7) (undo-tree-id2548 . -7) (undo-tree-id2549 . -7) (undo-tree-id2550 . -7) (undo-tree-id2551 . -7) (undo-tree-id2552 . -7) (undo-tree-id2553 . -7) (undo-tree-id2554 . -7) (undo-tree-id2555 . -7) (undo-tree-id2556 . -7) (nil tag-name "div" 916 . 917) (nil tag-name "div" 910 . 916) (nil rear-nonsticky t 916 . 917)) (25699 63086 613551 866000) 0 nil])
([nil nil ((917 . 926) (t 25699 63131 598125 414000)) nil (25699 63168 557680 339000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing part-side css)) . -312) 917) ((312 . 314) (t 25699 63078 738191 42000)) (25699 63078 706905 724000) 0 nil])
([nil nil ((926 . 937)) nil (25699 63168 557679 67000) 0 nil])
nil
([nil nil ((932 . 942) (933 . 941) (#("          " 0 10 (face whitespace-trailing)) . 932) (932 . 942) (932 . 933) ("        " . 932) (931 . 940)) nil (25699 63168 557677 511000) 0 nil])
([nil nil ((#("        <span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 9 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 10 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 13 14 (tag-type start tag-name "span") 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 15 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 20 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span")) . 1066) (undo-tree-id2740 . -108) (undo-tree-id2741 . -10) (1051 . 1066) (#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 943) (958 . 1066) 968) nil (25699 63168 557674 956000) 0 nil])
([nil nil ((#("        <span class=\"mt-2\">We use third party cookies to personalize content, ads and analyze site traffic.
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 9 10 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 10 13 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 13 14 (tag-type start tag-name "span") 14 15 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 15 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 20 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span")) . 1051) (undo-tree-id2738 . -108) (undo-tree-id2739 . -10) (1040 . 1051) (#("          
" 0 10 (face whitespace-trailing)) . 932) (943 . 1051) 953) nil (25699 63168 557670 215000) 0 nil])
([nil nil ((940 . 942) 942) nil (25699 63168 557666 6000) 0 nil])
([nil nil ((#("          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "a") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 52 58 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 79 80 (tag-type start tag-name "a") 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 81 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 85 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 110 111 (tag-type start tag-name "i") 111 112 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 112 116 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 117 140 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 140 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 143 144 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 144 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 148 149 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1219) (undo-tree-id2735 . -35) (undo-tree-id2736 . -151) (undo-tree-id2737 . -12) (1204 . 1219) (#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1053) (1068 . 1219) 1080) nil (25699 63168 557664 383000) 0 nil])
([nil nil ((#("          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "a") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 52 58 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 79 80 (tag-type start tag-name "a") 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 81 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 85 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 110 111 (tag-type start tag-name "i") 111 112 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 112 116 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 117 140 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 140 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 143 144 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 144 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 148 149 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1204) (undo-tree-id2733 . -151) (undo-tree-id2734 . -12) (1193 . 1204) (#("          
" 0 10 (face whitespace-trailing)) . 1042) (1053 . 1204) 1065) nil (25699 63168 557658 637000) 0 nil])
([nil nil ((#("          
" 0 10 (face whitespace-trailing)) . 1204) (1053 . 1204) (#("          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "a") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 52 58 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 79 80 (tag-type start tag-name "a") 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 81 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 85 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 110 111 (tag-type start tag-name "i") 111 112 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 112 116 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 117 140 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 140 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 143 144 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 144 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 148 149 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1042) (undo-tree-id2732 . -12) (1193 . 1204) 1054) nil (25699 63168 557653 996000) 0 nil])
([nil nil ((#("        </div>
" 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 9 10 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 10 13 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1219) (undo-tree-id2730 . -15) (1068 . 1219) (#("          </span><a style=\"text-color:white;\" class=\"d-flex align-items-center\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 18 19 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 19 20 (tag-type start tag-name "a") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 21 25 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 26 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "a") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 52 58 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 59 60 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 60 61 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 61 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 79 80 (tag-type start tag-name "a") 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 81 84 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 84 85 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 85 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 109 110 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 110 111 (tag-type start tag-name "i") 111 112 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 112 116 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 116 117 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 117 140 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 140 141 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 141 142 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 142 143 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 143 144 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 144 145 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 145 146 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 147 148 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 148 149 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 149 150 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a")) . 1053) (undo-tree-id2731 . -12) (1204 . 1219) 1065) nil (25699 63168 557650 416000) 0 nil])
([nil nil (("
" . 1052) (undo-tree-id2728 . -1) (undo-tree-id2729 . 1)) nil (25699 63168 557646 157000) 0 nil])
([nil nil (("          " . -1050) (undo-tree-id2727 . -2) 1052) nil (25699 63168 557642 492000) 0 nil])
([nil nil ((931 . 942)) nil (25699 63168 557639 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 974 . 975) (nil rear-nonsticky t 974 . 975) (nil tag-name "div" 974 . 975) (nil tag-type start 974 . 975) (nil tag-end t 974 . 975) (nil font-lock-face web-mode-html-tag-bracket-face 974 . 975) (nil tag-attr t 973 . 974) (nil tag-attr-end 5 973 . 974) (nil tag-name "div" 973 . 974) (nil tag-type start 973 . 974) (nil font-lock-face web-mode-html-attr-value-face 973 . 974) (nil tag-attr t 953 . 973) (nil tag-name "div" 953 . 973) (nil tag-type start 953 . 973) (nil font-lock-face web-mode-html-attr-value-face 953 . 973) (nil tag-attr t 952 . 953) (nil tag-name "div" 952 . 953) (nil tag-type start 952 . 953) (nil font-lock-face web-mode-html-attr-equal-face 952 . 953) (nil tag-attr t 948 . 952) (nil tag-name "div" 948 . 952) (nil tag-type start 948 . 952) (nil font-lock-face web-mode-html-attr-name-face 948 . 952) (nil tag-attr-beg 0 947 . 948) (nil tag-attr t 947 . 948) (nil tag-name "div" 947 . 948) (nil tag-type start 947 . 948) (nil font-lock-face web-mode-html-attr-name-face 947 . 948) (nil tag-name "div" 946 . 947) (nil tag-type start 946 . 947) (nil tag-name "div" 943 . 946) (nil tag-type start 943 . 946) (nil font-lock-face web-mode-html-tag-face 943 . 946) (nil tag-name "div" 942 . 943) (nil tag-type start 942 . 943) (nil tag-beg 17 942 . 943) (nil font-lock-face web-mode-html-tag-bracket-face 942 . 943) (942 . 975)) nil (25699 63168 557636 864000) 0 nil])
([nil nil ((1088 . 1102) (986 . 988) (1085 . 1086)) nil (25699 63168 557627 975000) 0 nil])
([nil nil (("  " . -1100) (1102 . 1109)) nil (25699 63168 558650 820000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -958) (undo-tree-id2743 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -959) (undo-tree-id2744 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -960) (undo-tree-id2745 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -961) (undo-tree-id2746 . -1) 962) nil (25699 63190 443088 889000) 0 nil] [nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -958) (undo-tree-id2723 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -959) (undo-tree-id2724 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -960) (undo-tree-id2725 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -961) (undo-tree-id2726 . -1) 962) ((958 . 962)) (25699 63168 557619 899000) 0 nil])
([nil nil ((" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) (" " . 1083) ("
" . 1083) (undo-tree-id2742 . -1)) nil (25699 63190 443071 690000) 0 nil])
nil
([nil nil ((1090 . 1103)) nil (25699 63190 443048 227000) 0 nil])
([nil nil (("  " . -1101) (1103 . 1109)) nil (25699 63190 443047 180000) 0 nil])
([nil nil ((930 . 931)) nil (25699 63190 443046 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 941 . 942) (nil tag-attr t 941 . 942) (nil tag-attr-end 5 941 . 942) (nil tag-name "div" 941 . 942) (nil tag-type start 941 . 942) (nil font-lock-face web-mode-html-attr-value-face 941 . 942) (nil tag-attr t 937 . 941) (nil tag-name "div" 937 . 941) (nil tag-type start 937 . 941) (nil font-lock-face web-mode-html-attr-value-face 937 . 941) (nil tag-attr t 936 . 937) (nil tag-name "div" 936 . 937) (nil tag-type start 936 . 937) (nil font-lock-face web-mode-html-attr-equal-face 936 . 937) (nil tag-attr t 935 . 936) (nil tag-name "div" 935 . 936) (nil tag-type start 935 . 936) (nil font-lock-face web-mode-html-attr-name-face 935 . 936) (nil tag-attr t 934 . 935) (nil tag-name "div" 934 . 935) (nil tag-type start 934 . 935) (nil font-lock-face web-mode-html-attr-name-face 934 . 935) (nil tag-attr t 933 . 934) (nil tag-name "div" 933 . 934) (nil tag-type start 933 . 934) (nil font-lock-face web-mode-html-attr-name-face 933 . 934) (nil tag-attr t 932 . 933) (nil tag-name "div" 932 . 933) (nil tag-type start 932 . 933) (nil font-lock-face web-mode-html-attr-name-face 932 . 933) (nil tag-attr-beg 0 931 . 932) (nil tag-attr t 931 . 932) (nil tag-name "div" 931 . 932) (nil tag-type start 931 . 932) (nil font-lock-face web-mode-html-attr-name-face 931 . 932) (931 . 942)) nil (25699 63190 443043 193000) 0 nil])
([nil nil ((1134 . 1143)) nil (25699 63190 443034 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1199 . 1200) (nil rear-nonsticky t 1199 . 1200) (nil tag-name "div" 1199 . 1200) (nil tag-type start 1199 . 1200) (nil tag-end t 1199 . 1200) (nil font-lock-face web-mode-html-tag-bracket-face 1199 . 1200) (nil tag-attr t 1198 . 1199) (nil tag-attr-end 5 1198 . 1199) (nil tag-name "div" 1198 . 1199) (nil tag-type start 1198 . 1199) (nil font-lock-face web-mode-html-attr-value-face 1198 . 1199) (nil tag-attr t 1187 . 1198) (nil tag-name "div" 1187 . 1198) (nil tag-type start 1187 . 1198) (nil font-lock-face web-mode-html-attr-value-face 1187 . 1198) (nil tag-attr t 1182 . 1187) (nil tag-name "div" 1182 . 1187) (nil tag-type start 1182 . 1187) (nil font-lock-face web-mode-html-attr-value-face 1182 . 1187) (nil tag-attr t 1181 . 1182) (nil tag-name "div" 1181 . 1182) (nil tag-type start 1181 . 1182) (nil font-lock-face web-mode-html-attr-equal-face 1181 . 1182) (nil tag-attr t 1177 . 1181) (nil tag-name "div" 1177 . 1181) (nil tag-type start 1177 . 1181) (nil font-lock-face web-mode-html-attr-name-face 1177 . 1181) (nil tag-attr-beg 0 1176 . 1177) (nil tag-attr t 1176 . 1177) (nil tag-name "div" 1176 . 1177) (nil tag-type start 1176 . 1177) (nil font-lock-face web-mode-html-attr-name-face 1176 . 1177) (nil tag-name "div" 1175 . 1176) (nil tag-type start 1175 . 1176) (nil tag-name "div" 1172 . 1175) (nil tag-type start 1172 . 1175) (nil font-lock-face web-mode-html-tag-face 1172 . 1175) (nil tag-name "div" 1171 . 1172) (nil tag-type start 1171 . 1172) (nil tag-beg 17 1171 . 1172) (nil font-lock-face web-mode-html-tag-bracket-face 1171 . 1172) (nil tag-name "div" 1159 . 1160) (nil tag-type start 1159 . 1160) (nil tag-end t 1159 . 1160) (nil font-lock-face web-mode-html-tag-bracket-face 1159 . 1160) (nil rear-nonsticky t 1158 . 1159) (nil tag-attr t 1158 . 1159) (nil tag-attr-end 5 1158 . 1159) (nil tag-name "div" 1158 . 1159) (nil tag-type start 1158 . 1159) (nil font-lock-face web-mode-html-attr-value-face 1158 . 1159) (nil tag-attr t 1154 . 1158) (nil tag-name "div" 1154 . 1158) (nil tag-type start 1154 . 1158) (nil font-lock-face web-mode-html-attr-value-face 1154 . 1158) (nil tag-attr t 1153 . 1154) (nil tag-name "div" 1153 . 1154) (nil tag-type start 1153 . 1154) (nil font-lock-face web-mode-html-attr-equal-face 1153 . 1154) (nil tag-attr t 1149 . 1153) (nil tag-name "div" 1149 . 1153) (nil tag-type start 1149 . 1153) (nil font-lock-face web-mode-html-attr-name-face 1149 . 1153) (nil tag-attr-beg 0 1148 . 1149) (nil tag-attr t 1148 . 1149) (nil tag-name "div" 1148 . 1149) (nil tag-type start 1148 . 1149) (nil font-lock-face web-mode-html-attr-name-face 1148 . 1149) (nil tag-name "div" 1147 . 1148) (nil tag-type start 1147 . 1148) (nil tag-name "div" 1144 . 1147) (nil tag-type start 1144 . 1147) (nil font-lock-face web-mode-html-tag-face 1144 . 1147) (nil tag-name "div" 1143 . 1144) (nil tag-type start 1143 . 1144) (nil tag-beg 17 1143 . 1144) (nil font-lock-face web-mode-html-tag-bracket-face 1143 . 1144) (1143 . 1200)) nil (25699 63190 443029 699000) 0 nil])
([nil nil ((1354 . 1366) (1211 . 1213) (1351 . 1352)) nil (25699 63190 443011 861000) 0 nil])
([nil nil (("  " . -1364) (1366 . 1372)) nil (25699 63190 443009 885000) 0 nil])
([nil nil ((1370 . 1381)) nil (25699 63190 443007 972000) 0 nil])
([nil nil (("  " . -1379) (1381 . 1387)) nil (25699 63190 443000 278000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1260) (undo-tree-id2766 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1261) (undo-tree-id2767 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1262) (undo-tree-id2768 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1263) (undo-tree-id2769 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1264) (undo-tree-id2770 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1265) (undo-tree-id2771 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1266) (undo-tree-id2772 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1267) (undo-tree-id2773 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1268) (undo-tree-id2774 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1269) (undo-tree-id2775 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1270) (undo-tree-id2776 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1271) (undo-tree-id2777 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1272) (undo-tree-id2778 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1273) (undo-tree-id2779 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1274) (undo-tree-id2780 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1275) (undo-tree-id2781 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1276) (undo-tree-id2782 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1277) (undo-tree-id2783 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1278) (undo-tree-id2784 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1279) (undo-tree-id2785 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1280) (undo-tree-id2786 . -1) 1281 (t 25699 63190 474052 609000)) nil (25699 63213 992978 194000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1256) (undo-tree-id2762 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1257) (undo-tree-id2763 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1258) (undo-tree-id2764 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1259) (undo-tree-id2765 . -1) 1260) nil (25699 63213 992947 824000) 0 nil])
([nil nil ((1256 . 1263)) nil (25699 63213 992941 727000) 0 nil])
([nil nil ((#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1256) (undo-tree-id2755 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1257) (undo-tree-id2756 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1258) (undo-tree-id2757 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1259) (undo-tree-id2758 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1260) (undo-tree-id2759 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1261) (undo-tree-id2760 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1262) (undo-tree-id2761 . -1) 1263) nil (25699 63213 992938 908000) 0 nil])
([nil nil ((1256 . 1263)) nil (25699 63213 992927 636000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1262) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) 1263) nil (25699 63213 992922 714000) 0 nil])
([nil nil ((#("s10 " 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 786) (undo-tree-id2791 . -4) (undo-tree-id2792 . -4) (t 25699 63214 26023 561000)) nil (25699 63232 810319 157000) 0 nil])
([nil nil ((797 . 802)) nil (25699 63232 810316 188000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -801) (undo-tree-id2790 . -1) 802) nil (25699 63232 810314 963000) 0 nil])
([nil nil ((801 . 802)) nil (25699 63232 810312 131000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -799) (undo-tree-id2787 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -800) (undo-tree-id2788 . -1) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -801) (undo-tree-id2789 . -1) 802) nil (25699 63232 810309 872000) 0 nil])
([nil nil ((799 . 802)) nil (25699 63232 810292 430000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -801) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) 802 (t 25699 63232 834000 397000)) nil (25699 63235 690635 919000) 0 nil])
([nil nil ((801 . 802)) nil (25699 63235 690609 30000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -801) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) 802 (t 25699 63235 725996 838000)) nil (25699 63238 870522 947000) 0 nil])
([nil nil ((801 . 802)) nil (25699 63238 870497 925000) 0 nil])
([nil nil ((982 . 983) (t 25699 63238 897992 935000)) nil (25699 63245 541535 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 986 . 987) (nil tag-attr t 983 . 987) (nil tag-name "div" 983 . 987) (nil tag-type start 983 . 987) (nil font-lock-face web-mode-html-attr-value-face 983 . 987) (983 . 987)) nil (25699 63245 541528 265000) 0 nil])
([nil nil ((1470 . 1482) (#(" " 0 1 (tag-type start tag-name "button")) . 1470) (1469 . 1470) (t 25699 63245 573984 721000)) nil (25699 63369 214292 402000) 0 nil])
([nil nil ((1496 . 1509)) nil (25699 63369 214290 795000) 0 nil])
([nil nil ((1513 . 1524)) nil (25699 63369 214289 830000) 0 nil])
([nil nil ((#("  div.modal div.modal-backdrop {
    z-index: 0;
  }" 0 2 (part-side css) 2 5 (part-side css) 5 11 (face web-mode-css-selector-class-face part-side css) 11 15 (part-side css) 15 30 (face web-mode-css-selector-class-face part-side css) 30 31 (part-side css) 31 32 (face (rainbow-delimiters-depth-1-face) part-side css) 32 37 (part-side css) 37 45 (face web-mode-css-property-name-face part-side css) 45 51 (part-side css) 51 52 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 379) (undo-tree-id2822 . -52) (undo-tree-id2823 . -33) (undo-tree-id2824 . -52)) nil (25699 63369 214288 619000) 0 nil])
([nil nil ((#("  .card {
    background-color: rgba(0, 0, 0, 0);
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
  }" 0 2 (part-side css) 2 7 (face web-mode-css-selector-class-face part-side css) 7 8 (part-side css) 8 9 (face (rainbow-delimiters-depth-1-face) part-side css) 9 10 (part-side css) 10 14 (part-side css) 14 31 (face web-mode-css-property-name-face part-side css) 31 32 (part-side css) 32 36 (face web-mode-css-function-face part-side css) 36 37 (face (rainbow-delimiters-depth-2-face) part-side css) 37 47 (part-side css) 47 48 (face (rainbow-delimiters-depth-2-face) part-side css) 48 49 (part-side css rear-nonsticky t) 49 50 (part-side css) 50 54 (part-side css) 54 69 (face web-mode-css-property-name-face part-side css) 69 77 (part-side css) 77 78 (part-side css) 78 82 (part-side css) 82 92 (face web-mode-css-property-name-face part-side css) 92 95 (part-side css) 95 100 (part-side css) 100 110 (face web-mode-css-property-name-face part-side css) 110 122 (part-side css) 122 125 (part-side css) 125 126 (face (rainbow-delimiters-depth-1-face) part-side css)) . 9) (undo-tree-id2818 . -126) (undo-tree-id2819 . -50) (undo-tree-id2820 . -10) (undo-tree-id2821 . -126)) nil (25699 63369 214284 8000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -8) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) 9) nil (25699 63369 214239 503000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 8) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1)) nil (25699 63369 214233 718000) 0 nil])
([nil nil ((251 . 253) (#("  " 0 2 (part-side css)) . 250) (undo-tree-id2811 . -2) (249 . 253)) nil (25699 63369 214229 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 530 . 531) (nil part-side css 530 . 531) (nil face (rainbow-delimiters-depth-1-face) 530 . 531) (nil part-side css 521 . 530) (nil part-side css 506 . 521) (nil face web-mode-css-property-name-face 506 . 521) (nil part-side css 497 . 506) (nil part-side css 486 . 497) (nil face web-mode-css-property-name-face 486 . 497) (nil part-side css 469 . 486) (nil part-side css 461 . 469) (nil face web-mode-css-property-name-face 461 . 469) (nil part-side css 458 . 461) (nil part-side css 457 . 458) (nil face (rainbow-delimiters-depth-1-face) 457 . 458) (nil part-side css 456 . 457) (nil part-side css 443 . 456) (nil face web-mode-css-selector-class-face 443 . 456) (nil part-side css 441 . 443) (nil part-side css 440 . 441) (nil face (rainbow-delimiters-depth-1-face) 440 . 441) (nil part-side css 439 . 440) (nil part-side css 438 . 439) (nil face (rainbow-delimiters-depth-2-face) 438 . 439) (nil part-side css 429 . 438) (nil part-side css 422 . 429) (nil face web-mode-css-property-name-face 422 . 429) (nil part-side css 416 . 422) (nil part-side css 415 . 416) (nil part-token string 415 . 416) (nil syntax-table (15) 415 . 416) (nil font-lock-face web-mode-css-string-face 415 . 416) (nil part-side css 414 . 415) (nil part-token string 414 . 415) (nil font-lock-face web-mode-css-string-face 414 . 415) (nil part-side css 413 . 414) (nil part-token string 413 . 414) (nil syntax-table (15) 413 . 414) (nil font-lock-face web-mode-css-string-face 413 . 414) (nil part-side css 412 . 413) (nil part-side css 404 . 412) (nil face web-mode-css-property-name-face 404 . 412) (nil part-side css 391 . 404) (nil part-side css 376 . 391) (nil face web-mode-css-property-name-face 376 . 391) (nil part-side css 357 . 376) (nil part-side css 349 . 357) (nil face web-mode-css-property-name-face 349 . 357) (nil part-side css 344 . 349) (nil part-side css 343 . 344) (nil face (rainbow-delimiters-depth-2-face) 343 . 344) (nil part-side css 342 . 343) (nil face web-mode-css-pseudo-class-face 342 . 343) (nil part-side css 335 . 342) (nil face web-mode-css-pseudo-class-face 335 . 342) (nil part-side css 329 . 335) (nil face web-mode-css-selector-class-face 329 . 335) (nil part-side css 326 . 329) (nil part-side css 325 . 326) (nil face whitespace-trailing 325 . 326) (nil part-side css 324 . 325) (nil face (rainbow-delimiters-depth-1-face) 324 . 325) (nil part-side css 323 . 324) (nil part-side css 322 . 323) (nil face (rainbow-delimiters-depth-1-face) 322 . 323) (nil part-side css 306 . 322) (nil part-side css 305 . 306) (nil face (rainbow-delimiters-depth-1-face) 305 . 306) (nil part-side css 304 . 305) (nil part-side css 301 . 304) (nil face web-mode-keyword-face 301 . 304) (nil part-side css 300 . 301) (nil part-side css 294 . 300) (nil face web-mode-keyword-face 294 . 300) (nil part-side css 293 . 294) (nil part-side css 287 . 293) (nil face web-mode-css-at-rule-face 287 . 293) (nil part-side css 285 . 287) (nil part-side css 284 . 285) (nil face (rainbow-delimiters-depth-1-face) 284 . 285) (nil part-side css 275 . 284) (nil part-side css 264 . 275) (nil face web-mode-css-property-name-face 264 . 275) (nil part-side css 261 . 264) (nil part-side css 260 . 261) (nil face (rainbow-delimiters-depth-1-face) 260 . 261) (nil part-side css 259 . 260) (nil part-side css 253 . 259) (nil face web-mode-css-selector-class-face 253 . 259) (253 . 531)) nil (25699 63369 214215 866000) 0 nil])
([nil nil ((558 . 560) (532 . 534) (510 . 512) (483 . 485) (463 . 465) (458 . 460) (454 . 456) (436 . 438) (416 . 418) (386 . 388) (357 . 359) (335 . 337) (291 . 293) (286 . 288) (264 . 266) 251) nil (25699 63369 214194 996000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side css)) . -331) 251) nil (25699 63369 214184 602000) 0 nil])
([nil nil ((#("middle" 0 6 (part-side css)) . 403) (undo-tree-id2882 . -6) (undo-tree-id2883 . -6) (t 25699 63369 241833 103000)) nil (25699 63418 129625 710000) 0 nil])
([nil nil ((403 . 406)) nil (25699 63418 129622 399000) 0 nil])
([nil nil ((#("middle" 0 6 (part-side css)) . 546) (undo-tree-id2880 . -6) (undo-tree-id2881 . -6)) nil (25699 63418 129620 961000) 0 nil])
([nil nil ((546 . 549)) nil (25699 63418 129617 436000) 0 nil])
([nil nil ((#("p" 0 1 (part-side css)) . -547) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (#("o" 0 1 (part-side css)) . -548) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) 549) nil (25699 63418 129611 816000) 0 nil])
([nil nil ((547 . 549)) nil (25699 63418 129441 149000) 0 nil])
([nil nil ((1593 . 1600) (t 25699 63418 161773 373000)) nil (25699 63499 404780 519000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1599) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) 1600) nil (25699 63531 148355 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1579 . 1580) (nil tag-attr t 1571 . 1580) (nil tag-name "button" 1571 . 1580) (nil tag-type start 1571 . 1580) (nil font-lock-face web-mode-html-attr-value-face 1571 . 1580) (1571 . 1580) (t 25699 63532 65634 757000)) nil (25699 63557 596073 634000) 0 nil] [nil nil ((nil rear-nonsticky nil 1577 . 1578) (nil tag-attr t 1571 . 1578) (nil tag-name "button" 1571 . 1578) (nil tag-type start 1571 . 1578) (nil font-lock-face web-mode-html-attr-value-face 1571 . 1578) (1571 . 1578) (t 25699 63499 433674 413000)) ((#("d-block" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t rear-nonsticky nil)) . 1571) (undo-tree-id2905 . -7) (undo-tree-id2906 . -7) (undo-tree-id2907 . -7) (undo-tree-id2908 . -7) (undo-tree-id2909 . -7) (undo-tree-id2910 . -7) (undo-tree-id2911 . -7) (undo-tree-id2912 . -7) (undo-tree-id2913 . -7) (undo-tree-id2914 . -7) (undo-tree-id2915 . -7) (undo-tree-id2916 . -7) (undo-tree-id2917 . -7) (undo-tree-id2918 . -7) (undo-tree-id2919 . -7) (undo-tree-id2920 . -7) (undo-tree-id2921 . -7) (undo-tree-id2922 . -7) (undo-tree-id2923 . -7) (undo-tree-id2924 . -7) (undo-tree-id2925 . -7) (undo-tree-id2926 . -7) (undo-tree-id2927 . -7) (undo-tree-id2928 . -7) (nil tag-name "button" 1577 . 1578) (nil tag-name "button" 1571 . 1577) (nil rear-nonsticky t 1577 . 1578)) (25699 63530 828008 768000) 0 nil])
([nil nil ((1580 . 1581)) nil (25699 63712 413877 317000) 0 nil])
([nil nil ((1578 . 1579)) ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1578) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (t 25699 63527 37640 864000)) (25699 63527 1186 536000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1361) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1362) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1363) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1364) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1365) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) 1366 (t 25699 63597 109555 840000)) nil (25699 63756 25349 395000) 0 nil] [nil nil ((459 . 461) (#("  " 0 2 (part-side css)) . 458) (undo-tree-id3033 . -2) (457 . 461) (t 25699 63597 109555 840000)) ((#("
  
" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css) 1 3 (face whitespace-trailing part-side css) 3 4 (part-side css)) . 457) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -1) (undo-tree-id3046 . 3) (458 . 460) (#("  " 0 2 (part-side css)) . 459) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2)) (25699 63712 142074 799000) 0 nil] [nil nil ((1551 . 1564) (t 25699 63557 629603 719000)) ((#("
            " 0 1 (tag-type start tag-name "button") 1 13 (tag-type start tag-name "button")) . 1551) (undo-tree-id3014 . -13) (undo-tree-id3015 . -1) (undo-tree-id3016 . -13) (undo-tree-id3017 . -13) (undo-tree-id3018 . -13) (undo-tree-id3019 . -13) (undo-tree-id3020 . -13) (undo-tree-id3021 . -1) (undo-tree-id3022 . -13) (undo-tree-id3023 . -13) (undo-tree-id3024 . -13) (undo-tree-id3025 . -13) (undo-tree-id3026 . -13) (undo-tree-id3027 . -13) (undo-tree-id3028 . -13) (undo-tree-id3029 . -13) (undo-tree-id3030 . -13) (undo-tree-id3031 . -13) (undo-tree-id3032 . -13)) (25699 63596 153868 757000) 0 nil])
nil
([nil nil ((#("white" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . 1367) (undo-tree-id3056 . -5) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -5) (undo-tree-id3064 . -5)) nil (25699 63756 25328 112000) 0 nil])
([nil nil ((461 . 465)) ((#("link" 0 4 (part-side css)) . 461) (undo-tree-id3034 . -4)) (25699 63712 141400 596000) 0 nil])
([nil nil ((1571 . 1576) (1564 . 1572)) ((#("style=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "button" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "button" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr-end 5 tag-attr t)) . 1564) (undo-tree-id3003 . -7) (undo-tree-id3004 . -7) (undo-tree-id3005 . -7) (undo-tree-id3006 . -7) (undo-tree-id3007 . -7) (undo-tree-id3008 . -7) (#("blue " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1571) (undo-tree-id3009 . -2) (undo-tree-id3010 . -5) (undo-tree-id3011 . -5) (undo-tree-id3012 . -5) (undo-tree-id3013 . -5)) (25699 63595 791842 999000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1376 . 1377) (nil fontified t 1367 . 1377) (nil tag-attr t 1367 . 1377) (nil tag-name "a" 1367 . 1377) (nil tag-type start 1367 . 1377) (nil font-lock-face web-mode-html-attr-value-face 1367 . 1377) (1367 . 1377)) nil (25699 63756 25304 568000) 0 nil])
nil
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1571) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1572) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1573) (undo-tree-id2941 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1574) (undo-tree-id2942 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1575) (undo-tree-id2943 . -1) 1576) ((1571 . 1576)) (25699 63595 418296 53000) 0 nil])
([nil nil ((#("main-blue" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t rear-nonsticky t)) . 1368) (undo-tree-id3080 . -9) (undo-tree-id3081 . -9) (undo-tree-id3082 . -9) (undo-tree-id3083 . -9) (t 25699 63756 57363 581000)) nil (25699 63769 243755 93000) 0 nil])
([nil nil ((1571 . 1584)) ((#("color: blue; " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 5 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1571) (undo-tree-id2983 . -3) (undo-tree-id2984 . -13) (undo-tree-id2985 . -5) (undo-tree-id2986 . -5) (undo-tree-id2987 . -5) (undo-tree-id2988 . -5) (undo-tree-id2989 . -5) (undo-tree-id2990 . -5) (undo-tree-id2991 . -5) (undo-tree-id2992 . -5) (undo-tree-id2993 . -5) (undo-tree-id2994 . -5) (undo-tree-id2995 . -5) (undo-tree-id2996 . -13) (undo-tree-id2997 . -13) (undo-tree-id2998 . -13) (undo-tree-id2999 . -13) (undo-tree-id3000 . -13) (undo-tree-id3001 . -13) (undo-tree-id3002 . -13)) (25699 63595 103634 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1375 . 1376) (nil fontified t 1368 . 1376) (nil tag-attr t 1368 . 1376) (nil tag-name "a" 1368 . 1376) (nil tag-type start 1368 . 1376) (nil font-lock-face web-mode-html-attr-value-face 1368 . 1376) (1368 . 1376)) nil (25699 63769 243735 792000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1583) (undo-tree-id2929 . -1) (undo-tree-id2931 . -1) (undo-tree-id2933 . -1) (undo-tree-id2935 . -1) 1584) ((1583 . 1584)) (25699 63594 784119 805000) 0 nil])
([nil nil ((#("$" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1367) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1368) (undo-tree-id3089 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1369) (undo-tree-id3090 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1370) (undo-tree-id3091 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1371) (undo-tree-id3092 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1372) (undo-tree-id3093 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1373) (undo-tree-id3094 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -1374) (undo-tree-id3095 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t rear-nonsticky t)) . -1375) (undo-tree-id3096 . -1) 1376 (t 25699 63769 277347 626000)) nil (25699 63775 72245 407000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1571) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1572) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1573) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1574) (undo-tree-id2950 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . -1575) (undo-tree-id2951 . -1) 1576 (t 25699 63574 765582 931000)) ((1571 . 1576)) (25699 63594 397088 710000) 0 nil])
([nil nil ((1367 . 1372)) nil (25699 63775 72213 744000) 0 nil])
([nil nil ((1571 . 1587)) ((#("background-color" 0 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "button" tag-attr t)) . 1571) (undo-tree-id2952 . -14) (undo-tree-id2953 . -15) (undo-tree-id2954 . -16) (undo-tree-id2955 . -16) (undo-tree-id2956 . -16) (undo-tree-id2957 . -16) (undo-tree-id2958 . -16) (undo-tree-id2959 . -16) (undo-tree-id2960 . -16) (undo-tree-id2961 . -16) (undo-tree-id2962 . -16) (undo-tree-id2963 . -16) (undo-tree-id2964 . -16) (undo-tree-id2965 . -16) (undo-tree-id2966 . -16) (undo-tree-id2967 . -16) (undo-tree-id2968 . -16) (undo-tree-id2969 . -16) (undo-tree-id2970 . -16) (undo-tree-id2971 . -16) (undo-tree-id2972 . -16) (undo-tree-id2973 . -16) (undo-tree-id2974 . -16) (undo-tree-id2975 . -16) (undo-tree-id2976 . -16) (undo-tree-id2977 . -16) (undo-tree-id2978 . -16) (undo-tree-id2979 . -16) (undo-tree-id2980 . -16) (undo-tree-id2981 . -16) (undo-tree-id2982 . -16) (t 25699 63586 985568 112000)) (25699 63586 953962 865000) 0 nil])
([nil nil ((556 . 558) (#("  " 0 2 (part-side css)) . 555) (undo-tree-id3119 . -2) (554 . 558) (t 25699 63775 105340 592000)) nil (25699 63845 470922 25000) 0 nil])
nil
([nil nil ((572 . 574) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -572) (558 . 573)) nil (25699 63845 470919 140000) 0 nil])
([nil nil ((575 . 577) (#("    " 0 4 (face whitespace-trailing part-side css)) . 574) (undo-tree-id3117 . -2) (undo-tree-id3118 . 4) (576 . 578) (573 . 577)) nil (25699 63845 470917 305000) 0 nil])
([nil nil ((#("_" 0 1 (face web-mode-css-selector-class-face part-side css)) . 565)) nil (25699 63845 470912 193000) 0 nil])
([nil nil ((565 . 566)) nil (25699 63845 470910 952000) 0 nil])
([nil nil ((574 . 578)) nil (25699 63845 470909 18000) 0 nil])
([nil nil ((578 . 585)) nil (25699 63845 470905 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 594 . 595) (nil fontified t 585 . 595) (nil part-side css 585 . 595) (nil face web-mode-css-variable-face 585 . 595) (585 . 595)) nil (25699 63845 470902 756000) 0 nil])
([nil nil ((595 . 596)) nil (25699 63845 470899 62000) 0 nil])
([nil nil ((#("style=\"color:white;\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 6 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t)) . 1400) (undo-tree-id3107 . -20) (undo-tree-id3108 . -7) (undo-tree-id3109 . -7) (undo-tree-id3110 . -20) (undo-tree-id3111 . -13) (undo-tree-id3112 . -13) (undo-tree-id3113 . -13) (undo-tree-id3114 . -13) (undo-tree-id3115 . -13) (undo-tree-id3116 . -20)) nil (25699 63845 470893 483000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "a")) . -1399) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) 1400) nil (25699 63845 470866 491000) 0 nil])
([nil nil ((1413 . 1414)) nil (25699 63845 470844 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1425 . 1426) (nil tag-attr t 1414 . 1426) (nil tag-name "a" 1414 . 1426) (nil tag-type start 1414 . 1426) (nil font-lock-face web-mode-html-attr-value-face 1414 . 1426) (1414 . 1426)) nil (25699 63845 470830 237000) 0 nil])
([nil nil ((#("$main-blue" 0 9 (face web-mode-css-variable-face part-side css) 9 10 (face web-mode-css-variable-face part-side css rear-nonsticky t)) . 585) (undo-tree-id3120 . -10) (undo-tree-id3121 . -10) (undo-tree-id3122 . -10) (t 25699 63845 501255 719000)) nil (25699 63865 736347 106000) 0 nil])
([nil nil ((nil rear-nonsticky nil 591 . 592) (nil fontified t 585 . 592) (nil part-side css 585 . 592) (nil face web-mode-css-color-face 585 . 592) (585 . 592)) nil (25699 63865 736328 469000) 0 nil])
([nil nil ((1533 . 1538) (1515 . 1518) (1395 . 1396) (1350 . 1353) (1317 . 1536) (#("<div class=\"row\">
          <div class=\"col text-center\">
            </span><a class=\"center cookie-learn\" href=\"google.com\">Learn more<i class=\"fa fa-angle-right ml-2\"></i></a>
          </div>
        </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 29 32 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 32 33 (tag-type start tag-name "div") 33 34 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 34 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 39 55 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 55 56 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t) 70 71 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 72 76 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 77 78 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 78 79 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 79 80 (tag-type start tag-name "a") 80 81 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 81 85 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 85 86 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 86 94 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 94 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 105 106 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t rear-nonsticky t) 106 107 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 107 108 (tag-type start tag-name "a") 108 109 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 109 112 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 112 113 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 113 124 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 124 125 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 125 126 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 136 137 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 137 138 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 138 139 (tag-type start tag-name "i") 139 140 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 140 144 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 144 145 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 145 168 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 168 169 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 169 170 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 170 171 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 172 173 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 173 174 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 174 175 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 175 176 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 176 177 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 189 190 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 190 191 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 191 194 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 204 205 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 205 206 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 206 209 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 209 210 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1317) (undo-tree-id3123 . -210) (undo-tree-id3124 . -79) (undo-tree-id3125 . -79) (undo-tree-id3126 . -79) (undo-tree-id3127 . -79) (undo-tree-id3128 . -79) (undo-tree-id3129 . -79) (undo-tree-id3130 . -79) (undo-tree-id3131 . -79) (undo-tree-id3132 . -79) (undo-tree-id3133 . -94) (undo-tree-id3134 . -18) (undo-tree-id3135 . -210) (undo-tree-id3136 . -210) (t 25699 63865 765231 306000)) nil (25699 64132 87971 79000) 0 nil])
([nil nil ((1769 . 1771) (t 25699 64132 116911 108000)) nil (25821 16532 601914 869000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1856 . 1857) (nil tag-name "script" 1856 . 1857) (nil tag-type end 1856 . 1857) (nil tag-end t 1856 . 1857) (nil font-lock-face web-mode-html-tag-bracket-face 1856 . 1857) (nil tag-name "script" 1850 . 1856) (nil tag-type end 1850 . 1856) (nil font-lock-face web-mode-html-tag-face 1850 . 1856) (nil tag-name "script" 1849 . 1850) (nil tag-type end 1849 . 1850) (nil font-lock-face web-mode-html-tag-bracket-face 1849 . 1850) (nil tag-name "script" 1848 . 1849) (nil tag-type end 1848 . 1849) (nil tag-beg 20 1848 . 1849) (nil font-lock-face web-mode-html-tag-bracket-face 1848 . 1849) (nil tag-name "script" 1847 . 1848) (nil tag-type start 1847 . 1848) (nil tag-end t 1847 . 1848) (nil font-lock-face web-mode-html-tag-bracket-face 1847 . 1848) (nil tag-attr t 1846 . 1847) (nil tag-attr-end 3 1846 . 1847) (nil tag-name "script" 1846 . 1847) (nil tag-type start 1846 . 1847) (nil font-lock-face web-mode-html-attr-value-face 1846 . 1847) (nil tag-attr t 1789 . 1846) (nil tag-name "script" 1789 . 1846) (nil tag-type start 1789 . 1846) (nil font-lock-face web-mode-html-attr-value-face 1789 . 1846) (nil tag-attr t 1788 . 1789) (nil tag-name "script" 1788 . 1789) (nil tag-type start 1788 . 1789) (nil font-lock-face web-mode-html-attr-equal-face 1788 . 1789) (nil tag-attr t 1786 . 1788) (nil tag-name "script" 1786 . 1788) (nil tag-type start 1786 . 1788) (nil font-lock-face web-mode-html-attr-name-face 1786 . 1788) (nil tag-attr-beg 0 1785 . 1786) (nil tag-attr t 1785 . 1786) (nil tag-name "script" 1785 . 1786) (nil tag-type start 1785 . 1786) (nil font-lock-face web-mode-html-attr-name-face 1785 . 1786) (nil tag-name "script" 1784 . 1785) (nil tag-type start 1784 . 1785) (nil tag-attr t 1783 . 1784) (nil tag-attr-end 0 1783 . 1784) (nil tag-name "script" 1783 . 1784) (nil tag-type start 1783 . 1784) (nil font-lock-face web-mode-html-attr-name-face 1783 . 1784) (nil tag-attr t 1780 . 1783) (nil tag-name "script" 1780 . 1783) (nil tag-type start 1780 . 1783) (nil font-lock-face web-mode-html-attr-name-face 1780 . 1783) (nil tag-attr-beg 0 1779 . 1780) (nil tag-attr t 1779 . 1780) (nil tag-name "script" 1779 . 1780) (nil tag-type start 1779 . 1780) (nil font-lock-face web-mode-html-attr-name-face 1779 . 1780) (nil tag-name "script" 1778 . 1779) (nil tag-type start 1778 . 1779) (nil tag-name "script" 1772 . 1778) (nil tag-type start 1772 . 1778) (nil font-lock-face web-mode-html-tag-face 1772 . 1778) (nil tag-name "script" 1771 . 1772) (nil tag-type start 1771 . 1772) (nil tag-beg 17 1771 . 1772) (nil font-lock-face web-mode-html-tag-bracket-face 1771 . 1772) (1771 . 1857)) nil (25821 16532 601909 624000) 0 nil])
([nil current (("
" . 1857) (undo-tree-id0 . -1)) nil (25821 16532 601891 419000) 0 nil])
nil
