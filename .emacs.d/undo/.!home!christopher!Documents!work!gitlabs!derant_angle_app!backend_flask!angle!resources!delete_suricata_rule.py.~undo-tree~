(undo-tree-save-format-version . 1)
"af7bc9928d09016f81515d1a42d3e42e4c17f82b"
[nil nil nil nil (25758 36993 566528 272000) 0 nil]
([nil nil ((1821 . 1830) (t 25757 33335 711650 20000)) nil (25758 36993 566526 653000) 0 nil])
([nil nil ((nil fontified nil 1868 . 1869) (nil fontified nil 1867 . 1868) (nil fontified nil 1859 . 1867) (nil fontified nil 1858 . 1859) (nil fontified nil 1836 . 1858) (nil fontified nil 1830 . 1836) (1830 . 1869)) nil (25758 36993 566525 125000) 0 nil])
([nil nil ((1878 . 1879)) nil (25758 36993 566522 778000) 0 nil])
([nil nil ((1921 . 1922)) nil (25758 36993 566521 760000) 0 nil])
([nil nil ((#("User" 0 4 (fontified t face font-lock-string-face)) . 2038) (undo-tree-id238 . -4) (undo-tree-id239 . -4)) nil (25758 36993 566520 687000) 0 nil])
([nil nil ((2038 . 2045)) nil (25758 36993 566517 566000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2044) (undo-tree-id237 . -1) 2045) nil (25758 36993 566516 106000) 0 nil])
([nil nil ((#("us" 0 2 (fontified t face font-lock-string-face)) . 2046) (undo-tree-id235 . -2) (undo-tree-id236 . -2)) nil (25758 36993 566513 713000) 0 nil])
([nil nil ((#("m" 0 1 (fontified defer face font-lock-string-face)) . -2045) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 2046) nil (25758 36993 566510 387000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2045)) nil (25758 36993 566506 897000) 0 nil])
([nil nil ((2045 . 2053)) nil (25758 36993 566505 899000) 0 nil])
([nil nil ((#("e" 0 1 (fontified defer face font-lock-string-face)) . -2047) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("s" 0 1 (fontified defer face font-lock-string-face)) . -2048) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -2049) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("n" 0 1 (fontified nil face font-lock-string-face)) . -2050) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("o" 0 1 (fontified nil face font-lock-string-face)) . -2051) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("t" 0 1 (fontified nil face font-lock-string-face)) . -2052) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2053) (undo-tree-id218 . -1) (#("b" 0 1 (fontified defer face font-lock-string-face)) . -2054) (undo-tree-id219 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -2055) (undo-tree-id220 . -1) (#("l" 0 1 (fontified defer face font-lock-string-face)) . -2056) (undo-tree-id221 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -2057) (undo-tree-id222 . -1) (#("n" 0 1 (fontified defer face font-lock-string-face)) . -2058) (undo-tree-id223 . -1) (#("g" 0 1 (fontified defer face font-lock-string-face)) . -2059) (undo-tree-id224 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -2060) (undo-tree-id225 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face)) . -2061) (undo-tree-id226 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -2062) (undo-tree-id227 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -2063) (undo-tree-id228 . -1) (#("f" 0 1 (fontified defer face font-lock-string-face)) . -2064) (undo-tree-id229 . -1) (#("i" 0 1 (fontified nil face font-lock-string-face)) . -2065) (undo-tree-id230 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -2066) (undo-tree-id231 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -2067) (undo-tree-id232 . -1) 2068) nil (25758 36993 566500 762000) 0 nil])
([nil nil ((#("n" 0 1 (fontified defer face font-lock-string-face)) . -2040) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("s" 0 1 (fontified defer face font-lock-string-face)) . -2041) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -2042) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face)) . -2043) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -2044) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("d" 0 1 (fontified defer face font-lock-string-face)) . -2045) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face)) . -2046) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 2047) nil (25758 36993 566455 232000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2040)) nil (25758 36993 566431 971000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-string-face)) . -2038) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2039) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 2040) nil (25758 36993 566429 863000) 0 nil])
([nil nil ((2038 . 2059)) nil (25758 36993 566421 256000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -2058) (undo-tree-id180 . -1) 2059) nil (25758 36993 566420 92000) 0 nil])
([nil nil ((2058 . 2079)) nil (25758 36993 566417 842000) 0 nil])
([nil nil ((2079 . 2090)) nil (25758 36993 566416 703000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2089) (undo-tree-id179 . -1) 2090) nil (25758 36993 566415 560000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2089) (undo-tree-id178 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . 2089) (#("u" 0 1 (fontified t face font-lock-string-face)) . 2089) (#("r" 0 1 (fontified t face font-lock-string-face)) . 2089) (#(" " 0 1 (fontified t face font-lock-string-face)) . 2089) (#("e" 0 1 (fontified t face font-lock-string-face)) . 2089) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("w" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 2089) (#("h" 0 1 (fontified t face font-lock-string-face)) . 2089) (#("t" 0 1 (fontified t face font-lock-string-face)) . 2089)) nil (25758 36993 566410 887000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 2098) (2007 . 2098) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2006) (undo-tree-id172 . -32) (undo-tree-id173 . -28) (undo-tree-id174 . -83) (undo-tree-id175 . -90) (undo-tree-id176 . -83) (undo-tree-id177 . -32) (2097 . 2098) 2034) nil (25758 36993 566404 519000) 0 nil])
([nil nil ((#("        # Delete suricata rule
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 31 (fontified nil face font-lock-comment-face)) . 2129) (undo-tree-id170 . -17) (2038 . 2129) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2007) (undo-tree-id171 . -28) (2098 . 2129) 2035) nil (25758 36993 566396 238000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 2142) (2051 . 2142) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2038) (undo-tree-id169 . -28) (2129 . 2142) 2066) nil (25758 36993 566391 986000) 0 nil])
([nil nil ((#("            rule.delete()
" 0 23 (fontified nil) 23 24 (fontified nil face (rainbow-delimiters-depth-1-face)) 24 25 (fontified nil face (rainbow-delimiters-depth-1-face)) 25 26 (fontified nil)) . 2168) (2077 . 2168) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2051) (undo-tree-id168 . -28) (2142 . 2168) 2079) nil (25758 36993 566388 717000) 0 nil])
([nil nil ((#("            app.logger.info('{0} - {1} deleted a suricata rule'.format(current_user.name, current_user.id))
" 0 27 (fontified nil) 27 28 (fontified nil face (rainbow-delimiters-depth-1-face)) 28 63 (fontified nil face font-lock-string-face) 63 64 (fontified nil) 64 70 (fontified nil face font-lock-builtin-face) 70 71 (fontified nil face (rainbow-delimiters-depth-2-face)) 71 96 (fontified nil) 96 103 (fontified nil) 103 105 (fontified nil face font-lock-builtin-face) 105 106 (fontified nil face (rainbow-delimiters-depth-2-face)) 106 107 (fontified nil face (rainbow-delimiters-depth-1-face)) 107 108 (fontified nil)) . 2276) (2185 . 2276) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2077) (undo-tree-id167 . -28) (2168 . 2276) 2105) nil (25758 36993 566385 507000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2276) (undo-tree-id165 . -28) (undo-tree-id166 . -91) (2168 . 2276) (#("            app.logger.info('{0} - {1} deleted a suricata rule'.format(current_user.name, current_user.id))
" 0 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 63 (fontified t face font-lock-string-face) 63 64 (fontified t) 64 70 (fontified t face font-lock-builtin-face) 70 71 (fontified t face (rainbow-delimiters-depth-2-face)) 71 96 (fontified t) 96 103 (fontified t) 103 105 (fontified t face font-lock-builtin-face) 105 106 (fontified t face (rainbow-delimiters-depth-2-face)) 106 107 (fontified t face (rainbow-delimiters-depth-1-face)) 107 108 (fontified t)) . 2077) (2185 . 2276) 2213) nil (25758 36993 566382 333000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2168) (undo-tree-id163 . -28) (undo-tree-id164 . -91) (2142 . 2168) (#("            rule.delete()
" 0 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t)) . 2051) (2077 . 2168) 2105) nil (25758 36993 566377 557000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2142) (undo-tree-id161 . -28) (undo-tree-id162 . -91) (2129 . 2142) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 2038) (2051 . 2142) 2079) nil (25758 36993 566373 485000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2129) (undo-tree-id158 . -28) (undo-tree-id159 . -91) (undo-tree-id160 . -91) (2098 . 2129) (#("        # Delete suricata rule
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 31 (fontified t face font-lock-comment-face)) . 2007) (2038 . 2129) 2066) nil (25758 36993 566368 817000) 0 nil])
([nil nil ((#("        # Delete suricata rule
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 31 (fontified nil face font-lock-comment-face)) . 2129) (undo-tree-id156 . -31) (2038 . 2129) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2007) (undo-tree-id157 . -28) (2098 . 2129) 2035) nil (25758 36993 566362 671000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 2142) (2051 . 2142) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2038) (undo-tree-id155 . -28) (2129 . 2142) 2066) nil (25758 36993 566358 179000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2142) (undo-tree-id153 . -28) (undo-tree-id154 . -91) (2129 . 2142) (#("        try:
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 2038) (2051 . 2142) 2079) nil (25758 36993 566354 685000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2129) (undo-tree-id150 . -28) (undo-tree-id151 . -91) (undo-tree-id152 . -91) (2098 . 2129) (#("        # Delete suricata rule
" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 31 (fontified t face font-lock-comment-face)) . 2007) (2038 . 2129) 2066) nil (25758 36993 566350 45000) 0 nil])
([nil nil ((#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 83 (fontified nil face font-lock-string-face) 83 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face)) 85 91 (fontified nil)) . 2098) (undo-tree-id148 . -28) (undo-tree-id149 . -91) (2097 . 2098) (#("
" 0 1 (fontified t)) . 2006) (2007 . 2098) 2035) nil (25758 36993 566344 140000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 2098) (2007 . 2098) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2006) (undo-tree-id147 . -28) (2097 . 2098) 2034) nil (25758 36993 566339 877000) 0 nil])
([nil nil ((#("        # Delete suricata rule
" 0 8 (fontified nil) 8 10 (fontified nil face font-lock-comment-delimiter-face) 10 31 (fontified nil face font-lock-comment-face)) . 2129) (undo-tree-id145 . -31) (2038 . 2129) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2007) (undo-tree-id146 . -28) (2098 . 2129) 2035) nil (25758 36993 566336 241000) 0 nil])
([nil nil ((#("        try:
" 0 8 (fontified nil) 8 11 (fontified nil face font-lock-keyword-face) 11 13 (fontified nil)) . 2142) (2051 . 2142) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2038) (undo-tree-id144 . -28) (2129 . 2142) 2066) nil (25758 36993 566325 64000) 0 nil])
([nil nil ((#("            rule.delete()
" 0 23 (fontified nil) 23 24 (fontified nil face (rainbow-delimiters-depth-1-face)) 24 25 (fontified nil face (rainbow-delimiters-depth-1-face)) 25 26 (fontified nil)) . 2168) (2077 . 2168) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2051) (undo-tree-id143 . -28) (2142 . 2168) 2079) nil (25758 36993 566321 799000) 0 nil])
([nil nil ((#("            app.logger.info('{0} - {1} deleted a suricata rule'.format(current_user.name, current_user.id))
" 0 27 (fontified nil) 27 28 (fontified nil face (rainbow-delimiters-depth-1-face)) 28 63 (fontified nil face font-lock-string-face) 63 64 (fontified nil) 64 70 (fontified nil face font-lock-builtin-face) 70 71 (fontified nil face (rainbow-delimiters-depth-2-face)) 71 96 (fontified nil) 96 103 (fontified nil) 103 105 (fontified nil face font-lock-builtin-face) 105 106 (fontified nil face (rainbow-delimiters-depth-2-face)) 106 107 (fontified nil face (rainbow-delimiters-depth-1-face)) 107 108 (fontified nil)) . 2276) (2185 . 2276) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2077) (undo-tree-id142 . -28) (2168 . 2276) 2105) nil (25758 36993 566318 337000) 0 nil])
([nil nil ((#("            return {'message': 'Suricata was deleted'}, 200
" 0 12 (fontified nil) 12 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 53 (fontified nil face font-lock-string-face) 53 54 (fontified nil face (rainbow-delimiters-depth-1-face)) 54 60 (fontified nil)) . 2336) (2245 . 2336) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified defer) 12 18 (fontified defer face font-lock-keyword-face) 18 19 (fontified defer) 19 20 (fontified defer face (rainbow-delimiters-depth-1-face)) 20 29 (fontified defer face font-lock-string-face) 29 31 (fontified defer) 31 83 (fontified defer face font-lock-string-face) 83 84 (fontified defer face font-lock-string-face) 84 85 (fontified defer face (rainbow-delimiters-depth-1-face)) 85 91 (fontified defer)) . 2185) (undo-tree-id141 . -28) (2276 . 2336) 2213) nil (25758 36993 566314 771000) 0 nil])
([nil nil ((#("        except:
" 0 8 (fontified nil) 8 14 (fontified nil face font-lock-keyword-face) 14 16 (fontified nil)) . 2352) (2261 . 2352) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2245) (undo-tree-id140 . -28) (2336 . 2352) 2273) nil (25758 36993 566311 317000) 0 nil])
([nil nil ((#("            app.logger.error('{0} - {1} tried deleting a suricata rule, but could not save to db'.format(current_user.name, current_user.id))
" 0 19 (fontified nil) 19 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-1-face)) 29 97 (fontified nil face font-lock-string-face) 97 98 (fontified nil) 98 104 (fontified nil face font-lock-builtin-face) 104 105 (fontified nil face (rainbow-delimiters-depth-2-face)) 105 137 (fontified nil) 137 139 (fontified nil face font-lock-builtin-face) 139 140 (fontified nil face (rainbow-delimiters-depth-2-face)) 140 141 (fontified nil face (rainbow-delimiters-depth-1-face)) 141 142 (fontified nil)) . 2494) (2403 . 2494) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2261) (undo-tree-id139 . -28) (2352 . 2494) 2289) nil (25758 36993 566307 830000) 0 nil])
([nil nil ((#("            return {'message': 'Something went wrong internally'}, 500
" 0 3 (fontified nil) 3 12 (fontified nil) 12 15 (fontified nil face font-lock-keyword-face) 15 17 (fontified nil face font-lock-keyword-face) 17 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 20 (fontified nil face (rainbow-delimiters-depth-1-face)) 20 24 (fontified nil face font-lock-string-face) 24 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 44 (fontified nil face font-lock-string-face) 44 64 (fontified nil face font-lock-string-face) 64 65 (fontified nil face (rainbow-delimiters-depth-1-face)) 65 71 (fontified nil)) . 2565) (undo-tree-id137 . -71) (2474 . 2565) (#("            return {'message': 'No sensor with that ID could be found in given firm'}, 403
" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 91 (fontified t)) . 2403) (undo-tree-id138 . -28) (2494 . 2565) 2431) nil (25758 36993 566303 105000) 0 nil])
([nil nil ((2473 . 2482)) nil (25758 36993 566298 930000) 0 nil])
([nil nil ((1869 . 1878)) nil (25758 36993 566297 973000) 0 nil])
([nil nil ((1878 . 1888)) nil (25758 36993 566296 996000) 0 nil])
([nil nil ((1888 . 1889)) nil (25758 36993 566296 102000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1885) (undo-tree-id133 . -1) (#("o" 0 1 (fontified t)) . -1886) (undo-tree-id134 . -1) (#("r" 0 1 (fontified t)) . -1887) (undo-tree-id135 . -1) (#(" " 0 1 (fontified t)) . -1888) (undo-tree-id136 . -1) 1889) nil (25758 36993 566294 516000) 0 nil])
([nil nil ((1885 . 1888)) nil (25758 36993 566288 429000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1887) (undo-tree-id132 . -1) 1888) nil (25758 36993 566287 285000) 0 nil])
([nil nil ((1887 . 1889)) nil (25758 36993 566285 18000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1888) (undo-tree-id131 . -1) 1889) nil (25758 36993 566283 689000) 0 nil])
([nil nil ((#("        rule = SuricataRulesModel.find_by_id(data['ruleID'])" 0 8 (fontified t) 8 12 (fontified t face font-lock-variable-name-face) 12 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-2-face)) 50 58 (fontified t face font-lock-string-face) 58 59 (fontified t face (rainbow-delimiters-depth-2-face)) 59 60 (fontified t face (rainbow-delimiters-depth-1-face))) . 683) (undo-tree-id129 . -60) (undo-tree-id130 . -60)) nil (25758 36993 566280 805000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -681) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("
" 0 1 (fontified t)) . -682) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 683) nil (25758 36993 566277 299000) 0 nil])
([nil nil ((#("        if not current_user:
            app.logger.error('user with ID: {0} tried deleting a suricata rule but user was not properly set'.format(userID))
            return {'message': 'User not properly set'}, 403" 0 4 (fontified t) 4 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-keyword-face) 14 29 (fontified t) 29 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-1-face)) 58 138 (fontified t face font-lock-string-face) 138 139 (fontified t) 139 145 (fontified t face font-lock-builtin-face) 145 146 (fontified t face (rainbow-delimiters-depth-2-face)) 146 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-2-face)) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 155 (fontified t) 155 167 (fontified t) 167 173 (fontified t face font-lock-keyword-face) 173 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-depth-1-face)) 175 184 (fontified t face font-lock-string-face) 184 186 (fontified t) 186 209 (fontified t face font-lock-string-face) 209 210 (fontified t face (rainbow-delimiters-depth-1-face)) 210 215 (fontified t)) . 1028) (undo-tree-id120 . -215) (undo-tree-id121 . -29) (undo-tree-id122 . -215)) nil (25758 36993 566269 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1026) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("
" 0 1 (fontified t)) . -1027) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 1028) nil (25758 36993 566265 208000) 0 nil])
([nil nil ((#("        if not firm:
            app.logger.error('{0} - {1} tried deleting a suricata rule but firm was not properly set'.format(current_user.name, current_user.id))
            return {'message': 'Firm not properly set'}, 403" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-keyword-face) 14 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 122 (fontified t face font-lock-string-face) 122 123 (fontified t) 123 129 (fontified t face font-lock-builtin-face) 129 130 (fontified t face (rainbow-delimiters-depth-2-face)) 130 162 (fontified t) 162 164 (fontified t face font-lock-builtin-face) 164 165 (fontified t face (rainbow-delimiters-depth-2-face)) 165 166 (fontified t face (rainbow-delimiters-depth-1-face)) 166 179 (fontified t) 179 185 (fontified t face font-lock-keyword-face) 185 186 (fontified t) 186 187 (fontified t face (rainbow-delimiters-depth-1-face)) 187 194 (fontified t face font-lock-string-face) 194 196 (fontified t face font-lock-string-face) 196 198 (fontified t) 198 221 (fontified t face font-lock-string-face) 221 222 (fontified t face (rainbow-delimiters-depth-1-face)) 222 227 (fontified t)) . 1028) (undo-tree-id110 . -227) (undo-tree-id111 . -227) (undo-tree-id112 . -21) (undo-tree-id113 . -227)) nil (25758 36993 566256 870000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1026) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("
" 0 1 (fontified t)) . -1027) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) 1028) nil (25758 36993 566251 477000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1026) (undo-tree-id101 . -1)) nil (25758 36993 566241 730000) 0 nil])
([nil nil ((1026 . 1043)) nil (25758 36993 566239 543000) 0 nil])
([nil nil ((1396 . 1409)) nil (25758 36993 566238 542000) 0 nil])
([nil nil ((1409 . 1416)) nil (25758 36993 566237 536000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1409) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("e" 0 1 (fontified t)) . -1410) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("n" 0 1 (fontified t)) . -1411) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("s" 0 1 (fontified t)) . -1412) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("o" 0 1 (fontified t)) . -1413) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("r" 0 1 (fontified t)) . -1414) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t)) . -1415) (undo-tree-id100 . -1) 1416) nil (25758 36993 566234 442000) 0 nil])
([nil nil ((#("            " 0 3 (fontified nil) 3 12 (fontified nil)) . -1987) (1971 . 1987) (#("            " 0 12 (fontified nil)) . -1841) (1825 . 1841) (#("        " 0 8 (fontified nil)) . -1817) (1805 . 1817) (#("            " 0 12 (fontified nil)) . -1757) (1741 . 1757) (#("            " 0 12 (fontified nil)) . -1645) (1629 . 1645) (#("            " 0 12 (fontified nil)) . -1615) (1599 . 1615) (#("        " 0 8 (fontified nil)) . -1594) (1582 . 1594) (#("        " 0 8 (fontified nil)) . -1559) (1547 . 1559)) nil (25758 36993 566192 110000) 0 nil])
([nil nil ((#("    " 0 4 (fontified defer)) . -2063) 2072) nil (25758 36993 566187 820000) 0 nil])
([nil nil ((2054 . 2059)) nil (25758 36993 566186 674000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2058) (undo-tree-id87 . -1) 2059) nil (25758 36993 566185 627000) 0 nil])
([nil nil ((2063 . 2064) (2054 . 2058) (2058 . 2059)) nil (25758 36993 566183 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2063) (undo-tree-id86 . -1) 2064) nil (25758 36993 566181 797000) 0 nil])
([nil nil ((#("            
        #firm_sensors = firm.sensors.all()
        #if not current_user.check_role('sys_admin') and rule.sensor_id not in firm_sensors:
" 0 12 (fontified t face whitespace-trailing) 12 13 (fontified t) 13 21 (fontified t) 21 22 (fontified t face font-lock-comment-delimiter-face) 22 34 (fontified t face font-lock-comment-face) 34 50 (fontified t face font-lock-comment-face) 50 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-face) 54 55 (fontified t face font-lock-comment-face) 55 56 (fontified t face font-lock-comment-face) 56 64 (fontified t) 64 65 (fontified t face font-lock-comment-delimiter-face) 65 67 (fontified t face font-lock-comment-face) 67 68 (fontified t face font-lock-comment-face) 68 71 (fontified t face font-lock-comment-face) 71 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face) 96 107 (fontified t face font-lock-comment-face) 107 108 (fontified t face font-lock-comment-face) 108 109 (fontified t face font-lock-comment-face) 109 112 (fontified t face font-lock-comment-face) 112 119 (fontified t face font-lock-comment-face) 119 128 (fontified t face font-lock-comment-face) 128 131 (fontified t face font-lock-comment-face) 131 132 (fontified t face font-lock-comment-face) 132 134 (fontified t face font-lock-comment-face) 134 143 (fontified t face font-lock-comment-face) 143 149 (fontified t face font-lock-comment-face)) . 1397) (undo-tree-id76 . -149) (undo-tree-id77 . -55) (undo-tree-id78 . -55) (undo-tree-id79 . -149) (undo-tree-id80 . -133) (undo-tree-id81 . -149) (undo-tree-id82 . -149) (undo-tree-id83 . -149) (undo-tree-id84 . -13) (undo-tree-id85 . -149)) nil (25758 36993 566178 968000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1396) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 1397) nil (25758 36993 566166 186000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1904) 1913) nil (25758 36993 566154 599000) 0 nil])
([nil nil ((1904 . 1908) 1909) nil (25758 36993 566153 350000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1904) 1913) nil (25758 36993 566152 25000) 0 nil])
([nil nil ((1918 . 1922) 1923) nil (25758 36993 566150 579000) 0 nil])
([nil nil ((1396 . 1409)) nil (25758 36993 566149 381000) 0 nil])
([nil nil ((1409 . 1421)) nil (25758 36993 566148 229000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1417) (undo-tree-id62 . -1) (#("n" 0 1 (fontified t)) . -1418) (undo-tree-id63 . -1) (#("e" 0 1 (fontified t)) . -1419) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -1420) (undo-tree-id65 . -1) 1421) nil (25758 36993 566146 149000) 0 nil])
([nil nil ((1417 . 1421)) nil (25758 36993 566137 938000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer)) . -1420) (undo-tree-id61 . -1) 1421) nil (25758 36993 566136 730000) 0 nil])
([nil nil ((1420 . 1433)) nil (25758 36993 566134 220000) 0 nil])
([nil nil ((1433 . 1436)) nil (25758 36993 566133 243000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1433) (undo-tree-id58 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1434) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t)) . -1435) (undo-tree-id60 . -1) 1436) nil (25758 36993 566131 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1655 . 1656) (nil fontified nil 1651 . 1656) (nil fontified nil 1650 . 1651) (nil fontified nil 1642 . 1650) (nil fontified nil 1641 . 1642) (nil fontified nil 1634 . 1641) (nil fontified nil 1632 . 1634) (nil fontified nil 1623 . 1632) (nil fontified nil 1622 . 1623) (nil fontified nil 1621 . 1622) (nil fontified nil 1615 . 1621) (nil fontified nil 1603 . 1615) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1600 . 1601) (nil fontified nil 1598 . 1600) (nil fontified nil 1566 . 1598) (nil fontified nil 1565 . 1566) (nil fontified nil 1559 . 1565) (nil fontified nil 1558 . 1559) (nil fontified nil 1516 . 1558) (nil fontified nil 1483 . 1516) (nil fontified nil 1482 . 1483) (nil fontified nil 1447 . 1482) (nil fontified nil 1444 . 1447) (nil fontified nil 1443 . 1444) (nil fontified nil 1441 . 1443) (nil fontified nil 1433 . 1441) (1433 . 1656)) nil (25758 36993 566125 407000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1433) 1453) nil (25758 36993 566117 878000) 0 nil])
([nil nil ((1446 . 1462) (#("            " 0 12 (fontified t)) . 1446) 1470) nil (25758 36993 566115 986000) 0 nil])
([nil nil ((1599 . 1615) (#("            " 0 12 (fontified t)) . 1599) 1627) nil (25758 36993 566114 116000) 0 nil])
([nil nil ((#("                
        if not rule:
            app.logger.error('{0} - {1} tried deleting a suricata rule but the given rule was not found'.format(current_user.name, current_user.id))
            return {'message': 'Rule not found'}, 403" 0 16 (fontified t face whitespace-trailing) 16 17 (fontified t) 17 25 (fontified t) 25 27 (fontified t face font-lock-keyword-face) 27 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-1-face)) 67 100 (fontified t face font-lock-string-face) 100 142 (fontified t face font-lock-string-face) 142 143 (fontified t) 143 149 (fontified t face font-lock-builtin-face) 149 150 (fontified t face (rainbow-delimiters-depth-2-face)) 150 182 (fontified t) 182 184 (fontified t face font-lock-builtin-face) 184 185 (fontified t face (rainbow-delimiters-depth-2-face)) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 199 (fontified t) 199 205 (fontified t face font-lock-keyword-face) 205 206 (fontified t) 206 207 (fontified t face (rainbow-delimiters-depth-1-face)) 207 216 (fontified t face font-lock-string-face) 216 218 (fontified t) 218 225 (fontified t face font-lock-string-face) 225 226 (fontified t face font-lock-string-face) 226 234 (fontified t face font-lock-string-face) 234 235 (fontified t face (rainbow-delimiters-depth-1-face)) 235 240 (fontified t)) . 1027) (undo-tree-id50 . -240) (undo-tree-id51 . -186) (undo-tree-id52 . -17) (undo-tree-id53 . -186) (undo-tree-id54 . -240) (undo-tree-id55 . -240) (undo-tree-id56 . -240) (undo-tree-id57 . -240)) nil (25758 36993 566111 803000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1026) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 1027) nil (25758 36993 566100 541000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1175) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t)) . -1176) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("n" 0 1 (fontified t)) . -1177) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -1178) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 1179) nil (25758 36993 566089 529000) 0 nil])
([nil nil ((1175 . 1190)) nil (25758 36993 566077 45000) 0 nil])
([nil nil ((1182 . 1199) (#("get_suri" 0 8 (fontified t)) . -1182) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -5) 1190) nil (25758 36993 566075 433000) 0 nil])
([nil nil ((1200 . 1202) (1199 . 1201) (#("(" 0 1 (fontified nil)) . -1199) (1199 . 1200)) nil (25758 36993 566070 215000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1200) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("u" 0 1 (fontified t)) . -1201) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 1202) nil (25758 36993 566068 37000) 0 nil])
([nil nil ((1205 . 1206) (1204 . 1206) (#("[" 0 1 (fontified nil)) . -1204) (1200 . 1205)) nil (25758 36993 566061 471000) 0 nil])
([nil nil ((1206 . 1207)) nil (25758 36993 566059 506000) 0 nil])
([nil nil ((1206 . 1212)) nil (25758 36993 566058 171000) 0 nil])
([nil nil ((1451 . 1464)) nil (25758 36993 566056 501000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1452) (undo-tree-id0 . -12) (undo-tree-id1 . -12) (undo-tree-id2 . -12) (undo-tree-id3 . -12) (undo-tree-id4 . -12) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) (undo-tree-id8 . -12) (undo-tree-id9 . -12) (undo-tree-id10 . -12) (undo-tree-id11 . -12) (undo-tree-id12 . -12) (undo-tree-id13 . -12) (undo-tree-id14 . -12) (undo-tree-id15 . -12) (undo-tree-id16 . -12) (undo-tree-id17 . -12) (undo-tree-id18 . -12) (undo-tree-id19 . -12) (undo-tree-id20 . -12) (undo-tree-id21 . -12) (undo-tree-id22 . -12) (undo-tree-id23 . -12) (undo-tree-id24 . -12) (undo-tree-id25 . -12) (undo-tree-id26 . -12) 1464) nil (25758 36993 566050 188000) 0 nil])
([nil nil ((1036 . 1113) (t 25758 36993 573775 429000)) nil (25758 47898 371013 656000) 0 nil])
([nil nil ((#("
        else:
            return {'message': 'No sensor with that ID could be found in given firm'}, 403" 0 1 (fontified t) 1 2 (fontified t) 2 9 (fontified t) 9 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 15 (fontified t) 15 27 (fontified t) 27 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 36 (fontified t face font-lock-string-face) 36 38 (fontified t face font-lock-string-face) 38 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 57 (fontified t face font-lock-string-face) 57 61 (fontified t face font-lock-string-face) 61 85 (fontified t face font-lock-string-face) 85 87 (fontified t face font-lock-string-face) 87 98 (fontified t face font-lock-string-face) 98 99 (fontified t face font-lock-string-face) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 105 (fontified t)) . 2028) (undo-tree-id13 . -105) (undo-tree-id14 . -1) (undo-tree-id15 . -105) (undo-tree-id16 . -105) (t 25758 47619 821261 114000)) nil (25758 47898 371008 607000) 0 nil])
([nil nil ((#("        sensor_id = SuricataRulesModel.find_by_id(data['ruleID']).sensor_id

        # Verify that user is in firm owning the rule/sensor
        sensor = firm.find_sensor_id(sensor_id)
        if sensor:" 0 8 (fontified t) 8 17 (fontified t face font-lock-variable-name-face) 17 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-2-face)) 55 63 (fontified t face font-lock-string-face) 63 64 (fontified t face (rainbow-delimiters-depth-2-face)) 64 65 (fontified t face (rainbow-delimiters-depth-1-face)) 65 85 (fontified t) 85 87 (fontified t face font-lock-comment-delimiter-face) 87 122 (fontified t face font-lock-comment-face) 122 138 (fontified t face font-lock-comment-face) 138 146 (fontified t) 146 152 (fontified t face font-lock-variable-name-face) 152 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-depth-1-face)) 175 183 (fontified t) 183 184 (rear-nonsticky t fontified t) 184 185 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 185 186 (fontified t) 186 194 (fontified t) 194 196 (fontified t face font-lock-keyword-face) 196 204 (fontified t)) . 1028) (undo-tree-id3 . -204) (undo-tree-id4 . -204) (undo-tree-id5 . -204) (undo-tree-id6 . -185) (undo-tree-id7 . -44) (undo-tree-id8 . -44) (undo-tree-id9 . -185) (undo-tree-id10 . -185) (undo-tree-id11 . -76) (undo-tree-id12 . -204)) nil (25758 47898 370991 641000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -1718) (1706 . 1718) (#("                " 0 16 (fontified nil)) . -1576) (1564 . 1576) (#("            " 0 6 (fontified nil) 6 12 (fontified nil)) . -1556) (1548 . 1556) (#("                " 0 9 (fontified nil) 9 11 (fontified nil) 11 15 (fontified nil) 15 16 (fontified nil)) . -1500) (1488 . 1500) (#("                " 0 16 (fontified nil)) . -1392) (1380 . 1392) (#("                " 0 16 (fontified nil)) . -1366) (1354 . 1366) (#("            " 0 12 (fontified nil)) . -1349) (1341 . 1349) (#("            " 0 12 (fontified nil)) . -1318) (1310 . 1318) (#("                " 0 16 (fontified nil)) . -1267) (1255 . 1267) (#("                " 0 16 (fontified nil)) . -1118) (1106 . 1118) (#("            " 0 12 (fontified nil)) . -1093) (undo-tree-id2 . -12) (1085 . 1093) (#("            " 0 12 (fontified nil)) . -1037) (1029 . 1037)) nil (25758 47898 370972 801000) 0 nil])
([nil nil ((#("sensor.get_suricata_rule" 0 7 (fontified t) 7 24 (fontified t)) . 1044) (undo-tree-id0 . -24) (undo-tree-id1 . -24)) nil (25758 47898 370963 97000) 0 nil])
([nil nil ((1044 . 1049)) nil (25758 47898 370945 1000) 0 nil])
([nil current ((nil rear-nonsticky nil 1065 . 1066) (nil fontified nil 1049 . 1066) (1049 . 1066)) nil (25758 47898 370937 373000) 0 nil])
nil
