(undo-tree-save-format-version . 1)
"9f9e0735e0bdeae4ab0620aa42128e636a35fd51"
[nil nil nil nil (25695 31790 566490 605000) 0 nil]
([nil nil (("Website is live!" . 26) (undo-tree-id223 . -16) (undo-tree-id224 . -16) (undo-tree-id225 . -16) (undo-tree-id226 . -16) (t 25669 33215 395490 0)) nil (25695 31790 566488 449000) 0 nil])
([nil nil ((26 . 42)) nil (25695 31790 566483 504000) 0 nil])
([nil nil ((" " . -41) (undo-tree-id222 . -1) 42) nil (25695 31790 566482 399000) 0 nil])
([nil nil ((41 . 45)) nil (25695 31790 566480 311000) 0 nil])
([nil nil (("," . -41) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (" " . -42) (undo-tree-id216 . -1) (undo-tree-id217 . -1) ("d" . -43) (undo-tree-id218 . -1) (undo-tree-id219 . -1) ("a" . -44) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 45) nil (25695 31790 566478 327000) 0 nil])
([nil nil ((41 . 46)) nil (25695 31790 566461 334000) 0 nil])
([nil nil (("d" . -44) (undo-tree-id210 . -1) (undo-tree-id211 . -1) ("a" . -45) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 46) nil (25695 31790 566459 883000) 0 nil])
([nil nil ((44 . 60)) nil (25695 31790 566454 676000) 0 nil])
([nil nil ((" " . -59) (undo-tree-id209 . -1) 60) nil (25695 31790 566453 526000) 0 nil])
([nil nil ((59 . 64)) nil (25695 31790 566451 400000) 0 nil])
([nil nil ((64 . 67)) nil (25695 31790 566450 518000) 0 nil])
([nil nil ((" " . -66) (undo-tree-id208 . -1) 67) nil (25695 31790 566449 447000) 0 nil])
([nil nil (("d" . -61) (undo-tree-id207 . -1) 62) nil (25695 31790 566447 110000) 0 nil])
([nil nil ((61 . 62)) nil (25695 31790 566445 38000) 0 nil])
([nil nil (("he website has been launched, content has been uploaded, now the furture awaits." . 80) (undo-tree-id204 . -80) (undo-tree-id205 . -80) (undo-tree-id206 . -80)) nil (25695 31790 566443 845000) 0 nil])
([nil nil (("T" . -79) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 80) nil (25695 31790 566439 542000) 0 nil])
([nil nil ((79 . 100)) nil (25695 31790 566435 434000) 0 nil])
([nil nil ((100 . 108)) nil (25695 31790 566434 575000) 0 nil])
([nil nil (("h" . -99) (undo-tree-id190 . -1) (undo-tree-id191 . -1) ("a" . -100) (undo-tree-id192 . -1) (undo-tree-id193 . -1) ("d" . -101) (undo-tree-id194 . -1) (" " . -102) (undo-tree-id195 . -1) ("b" . -103) (undo-tree-id196 . -1) ("e" . -104) (undo-tree-id197 . -1) ("e" . -105) (undo-tree-id198 . -1) ("n" . -106) (undo-tree-id199 . -1) (" " . -107) (undo-tree-id200 . -1) 108) nil (25695 31790 566432 47000) 0 nil])
([nil nil ((99 . 111)) nil (25695 31790 566417 649000) 0 nil])
([nil nil (("i" . -99) (undo-tree-id169 . -1) (undo-tree-id170 . -1) ("s" . -100) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (" " . -101) (undo-tree-id173 . -1) (undo-tree-id174 . -1) ("n" . -102) (undo-tree-id175 . -1) (undo-tree-id176 . -1) ("o" . -103) (undo-tree-id177 . -1) (undo-tree-id178 . -1) ("w" . -104) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (" " . -105) (undo-tree-id181 . -1) (undo-tree-id182 . -1) ("l" . -106) (undo-tree-id183 . -1) (undo-tree-id184 . -1) ("i" . -107) (undo-tree-id185 . -1) (undo-tree-id186 . -1) ("v" . -108) (undo-tree-id187 . -1) ("e" . -109) (undo-tree-id188 . -1) (" " . -110) (undo-tree-id189 . -1) 111) nil (25695 31790 566413 925000) 0 nil])
([nil nil ((99 . 106)) nil (25695 31790 566389 546000) 0 nil])
([nil nil (("o" . -104) (undo-tree-id167 . -1) ("e" . -105) (undo-tree-id168 . -1) 106) nil (25695 31790 566388 242000) 0 nil])
([nil nil ((104 . 106)) nil (25695 31790 566384 879000) 0 nil])
([nil nil (("w" . -104) (undo-tree-id165 . -1) (" " . -105) (undo-tree-id166 . -1) 106) nil (25695 31790 566383 559000) 0 nil])
([nil nil ((104 . 115)) nil (25695 31790 566380 300000) 0 nil])
([nil nil (("r" . -110) (undo-tree-id156 . -1) (undo-tree-id157 . -1) ("e" . -111) (undo-tree-id158 . -1) (undo-tree-id159 . -1) ("a" . -112) (undo-tree-id160 . -1) (undo-tree-id161 . -1) ("d" . -113) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (" " . -114) (undo-tree-id164 . -1) 115) nil (25695 31790 566378 139000) 0 nil])
([nil nil (("c" . -99) (undo-tree-id134 . -1) (undo-tree-id135 . -1) ("a" . -100) (undo-tree-id136 . -1) (undo-tree-id137 . -1) ("n" . -101) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (" " . -102) (undo-tree-id140 . -1) (undo-tree-id141 . -1) ("n" . -103) (undo-tree-id142 . -1) (undo-tree-id143 . -1) ("o" . -104) (undo-tree-id144 . -1) (undo-tree-id145 . -1) ("w" . -105) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (" " . -106) (undo-tree-id148 . -1) (undo-tree-id149 . -1) ("b" . -107) (undo-tree-id150 . -1) (undo-tree-id151 . -1) ("e" . -108) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (" " . -109) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 110) nil (25695 31790 566363 972000) 0 nil])
([nil nil ((99 . 108)) nil (25695 31790 566333 612000) 0 nil])
([nil nil ((" " . -107) (undo-tree-id133 . -1) 108) nil (25695 31790 566332 420000) 0 nil])
([nil nil ((107 . 114)) nil (25695 31790 566330 273000) 0 nil])
([nil nil (("," . -107) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (" " . -108) (undo-tree-id122 . -1) (undo-tree-id123 . -1) ("r" . -109) (undo-tree-id124 . -1) (undo-tree-id125 . -1) ("e" . -110) (undo-tree-id126 . -1) (undo-tree-id127 . -1) ("a" . -111) (undo-tree-id128 . -1) (undo-tree-id129 . -1) ("d" . -112) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (" " . -113) (undo-tree-id132 . -1) 114) nil (25695 31790 566327 690000) 0 nil])
([nil nil ((#("<p>Finally, the website is done and uploaded. I have added some poems I had lying around and the short story, <i>A Scent of Roses</i>. Minor improvements to the site might be pushed over time (such as search functionality), but for now the amount of poems shouldn't prove too great a difficulty to manage through.</p>

<p>Currently the site is split up into three content types, poems, stories and post. The post section will consist mainly of update posts, as the main content will consists of poetry and stories. Poems as well as stories can be read directly on the site, though longer pieces will typically be uploaded to an online reading platform, like Wattpad or Inkitt. The stories section will therefore be an overview of all currently published works, together with links to a given platform if needed.</p>

<p>I hope this site will provide you with a brief escape from your daily trials, even if only for a minute or two.</p>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "i") 111 112 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 130 131 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 131 132 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 132 133 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 150 192 (face (whitespace-line)) 192 193 (face (rainbow-delimiters-depth-1-face whitespace-line)) 193 221 (face (whitespace-line)) 221 222 (face (rainbow-delimiters-depth-1-face whitespace-line)) 222 313 (face (whitespace-line)) 313 314 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 314 315 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 315 316 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 316 317 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 319 320 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 320 321 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 321 322 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 469 811 (face (whitespace-line)) 811 812 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 812 813 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 813 814 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 814 815 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 817 818 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 818 819 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 819 820 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 931 932 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 932 933 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 933 934 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 934 935 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 146) (undo-tree-id116 . -318) (undo-tree-id117 . -935) (undo-tree-id118 . -935) (undo-tree-id119 . -935)) nil (25695 31790 566311 944000) 0 nil])
([nil nil ((146 . 164)) nil (25695 31790 566306 119000) 0 nil])
([nil nil ((163 . 179)) nil (25695 31790 566305 214000) 0 nil])
([nil nil ((" " . -178) (undo-tree-id115 . -1) 179) nil (25695 31790 566304 175000) 0 nil])
([nil nil ((178 . 185)) nil (25695 31790 566301 964000) 0 nil])
([nil nil ((" " . -184) (undo-tree-id114 . -1) 185) nil (25695 31790 566300 887000) 0 nil])
([nil nil ((184 . 186)) nil (25695 31790 566298 613000) 0 nil])
([nil nil ((" " . -185) (undo-tree-id113 . -1) 186) nil (25695 31790 566297 389000) 0 nil])
([nil nil (("d" . -180) (undo-tree-id112 . -1) 181) nil (25695 31790 566294 983000) 0 nil])
([nil nil ((180 . 181)) nil (25695 31790 566292 569000) 0 nil])
([nil nil ((186 . 194)) nil (25695 31790 566291 698000) 0 nil])
([nil nil (("a" . -187) (undo-tree-id105 . -1) ("h" . -188) (undo-tree-id106 . -1) ("s" . -189) (undo-tree-id107 . -1) (" " . -190) (undo-tree-id108 . -1) ("b" . -191) (undo-tree-id109 . -1) ("e" . -192) (undo-tree-id110 . -1) ("e" . -193) (undo-tree-id111 . -1) 194) nil (25695 31790 566289 528000) 0 nil])
([nil nil ((187 . 208)) nil (25695 31790 566280 186000) 0 nil])
([nil nil ((208 . 211)) nil (25695 31790 566279 283000) 0 nil])
([nil nil (("i" . -209) (undo-tree-id103 . -1) ("s" . -210) (undo-tree-id104 . -1) 211) nil (25695 31790 566277 953000) 0 nil])
([nil nil ((209 . 214)) nil (25695 31790 566274 578000) 0 nil])
([nil nil ((" " . -213) (undo-tree-id102 . -1) 214) nil (25695 31790 566273 514000) 0 nil])
([nil nil ((213 . 214)) nil (25695 31790 566271 344000) 0 nil])
([nil nil (("," . -213) (undo-tree-id101 . -1) 214) nil (25695 31790 566270 234000) 0 nil])
([nil nil ((213 . 226)) nil (25695 31790 566268 14000) 0 nil])
([nil nil (("p" . -224) (undo-tree-id99 . -1) ("p" . -225) (undo-tree-id100 . -1) 226) nil (25695 31790 566266 685000) 0 nil])
([nil nil ((224 . 226)) nil (25695 31790 566263 92000) 0 nil])
([nil nil ((226 . 229)) nil (25695 31790 566262 155000) 0 nil])
([nil nil ((" " . -228) (undo-tree-id98 . -1) 229) nil (25695 31790 566260 836000) 0 nil])
([nil nil ((228 . 231)) nil (25695 31790 566257 277000) 0 nil])
([nil nil ((" " . -213) (undo-tree-id80 . -1) ("a" . -214) (undo-tree-id81 . -1) ("n" . -215) (undo-tree-id82 . -1) ("d" . -216) (undo-tree-id83 . -1) (" " . -217) (undo-tree-id84 . -1) ("o" . -218) (undo-tree-id85 . -1) ("n" . -219) (undo-tree-id86 . -1) (" " . -220) (undo-tree-id87 . -1) ("W" . -221) (undo-tree-id88 . -1) ("a" . -222) (undo-tree-id89 . -1) ("t" . -223) (undo-tree-id90 . -1) ("t" . -224) (undo-tree-id91 . -1) ("p" . -225) (undo-tree-id92 . -1) ("a" . -226) (undo-tree-id93 . -1) ("d" . -227) (undo-tree-id94 . -1) ("," . -228) (undo-tree-id95 . -1) (" " . -229) (undo-tree-id96 . -1) ("I" . -230) (undo-tree-id97 . -1) 231) nil (25695 31790 566241 243000) 0 nil])
([nil nil ((213 . 217)) nil (25695 31790 566168 703000) 0 nil])
([nil nil (("w" . -215) (undo-tree-id78 . -1) ("a" . -216) (undo-tree-id79 . -1) 217) nil (25695 31790 566167 328000) 0 nil])
([nil nil ((215 . 224)) nil (25695 31790 566164 52000) 0 nil])
([nil nil (("," . -222) (undo-tree-id76 . -1) (" " . -223) (undo-tree-id77 . -1) 224) nil (25695 31790 566162 690000) 0 nil])
([nil nil ((222 . 234)) nil (25695 31790 566159 514000) 0 nil])
([nil nil ((" " . -233) (undo-tree-id75 . -1) 234) nil (25695 31790 566157 985000) 0 nil])
([nil nil ((233 . 235)) nil (25695 31790 566155 585000) 0 nil])
([nil nil ((" " . -234) (undo-tree-id74 . -1) 235) nil (25695 31790 566154 467000) 0 nil])
([nil nil ((234 . 255)) nil (25695 31790 566151 954000) 0 nil])
([nil nil ((255 . 256)) nil (25695 31790 566151 87000) 0 nil])
([nil nil (("a" . -254) (undo-tree-id72 . -1) (" " . -255) (undo-tree-id73 . -1) 256) nil (25695 31790 566149 836000) 0 nil])
([nil nil ((254 . 272)) nil (25695 31790 566146 455000) 0 nil])
([nil nil ((" " . -271) (undo-tree-id71 . -1) 272) nil (25695 31790 566145 430000) 0 nil])
([nil nil ((271 . 272)) nil (25695 31790 566143 449000) 0 nil])
([nil nil (("u" . -251) (undo-tree-id50 . -1) ("t" . -252) (undo-tree-id51 . -1) (" " . -253) (undo-tree-id52 . -1) ("a" . -254) (undo-tree-id53 . -1) ("n" . -255) (undo-tree-id54 . -1) (" " . -256) (undo-tree-id55 . -1) ("e" . -257) (undo-tree-id56 . -1) ("x" . -258) (undo-tree-id57 . -1) ("a" . -259) (undo-tree-id58 . -1) ("m" . -260) (undo-tree-id59 . -1) ("i" . -261) (undo-tree-id60 . -1) ("n" . -262) (undo-tree-id61 . -1) ("a" . -263) (undo-tree-id62 . -1) ("t" . -264) (undo-tree-id63 . -1) ("i" . -265) (undo-tree-id64 . -1) ("o" . -266) (undo-tree-id65 . -1) ("n" . -267) (undo-tree-id66 . -1) (" " . -268) (undo-tree-id67 . -1) ("a" . -269) (undo-tree-id68 . -1) ("s" . -270) (undo-tree-id69 . -1) (" " . -271) (undo-tree-id70 . -1) 272) nil (25695 31790 566139 22000) 0 nil])
([nil nil (("T" . -235) (undo-tree-id34 . -1) ("h" . -236) (undo-tree-id35 . -1) ("e" . -237) (undo-tree-id36 . -1) (" " . -238) (undo-tree-id37 . -1) ("s" . -239) (undo-tree-id38 . -1) ("t" . -240) (undo-tree-id39 . -1) ("o" . -241) (undo-tree-id40 . -1) ("r" . -242) (undo-tree-id41 . -1) ("y" . -243) (undo-tree-id42 . -1) (" " . -244) (undo-tree-id43 . -1) ("i" . -245) (undo-tree-id44 . -1) ("s" . -246) (undo-tree-id45 . -1) (" " . -247) (undo-tree-id46 . -1) ("a" . -248) (undo-tree-id47 . -1) ("b" . -249) (undo-tree-id48 . -1) ("o" . -250) (undo-tree-id49 . -1) 251) nil (25695 31790 566099 997000) 0 nil])
([nil nil ((235 . 236)) nil (25695 31790 566076 936000) 0 nil])
([nil nil ((236 . 250)) nil (25695 31790 566075 941000) 0 nil])
([nil nil ((" " . -249) (undo-tree-id33 . -1) 250) nil (25695 31790 566074 808000) 0 nil])
([nil nil ((249 . 270)) nil (25695 31790 566072 415000) 0 nil])
([nil nil ((270 . 289)) nil (25695 31790 566071 421000) 0 nil])
([nil nil ((289 . 310)) nil (25695 31790 566070 508000) 0 nil])
([nil nil ((310 . 314)) nil (25695 31790 566069 606000) 0 nil])
([nil nil ((#("g" 0 1 (face (whitespace-line))) . -297) (undo-tree-id16 . -1) (#("o" 0 1 (face (whitespace-line))) . -298) (undo-tree-id17 . -1) (#("i" 0 1 (face (whitespace-line))) . -299) (undo-tree-id18 . -1) (#("n" 0 1 (face (whitespace-line))) . -300) (undo-tree-id19 . -1) (#("g" 0 1 (face (whitespace-line))) . -301) (undo-tree-id20 . -1) (#(" " 0 1 (face (whitespace-line))) . -302) (undo-tree-id21 . -1) (#("u" 0 1 (face (whitespace-line))) . -303) (undo-tree-id22 . -1) (#("p" 0 1 (face (whitespace-line))) . -304) (undo-tree-id23 . -1) (#(" " 0 1 (face (whitespace-line))) . -305) (undo-tree-id24 . -1) (#("a" 0 1 (face (whitespace-line))) . -306) (undo-tree-id25 . -1) (#("g" 0 1 (face (whitespace-line))) . -307) (undo-tree-id26 . -1) (#("a" 0 1 (face (whitespace-line))) . -308) (undo-tree-id27 . -1) (#("i" 0 1 (face (whitespace-line))) . -309) (undo-tree-id28 . -1) (#("n" 0 1 (face (whitespace-line))) . -310) (undo-tree-id29 . -1) (#("s" 0 1 (face (whitespace-line))) . -311) (undo-tree-id30 . -1) (#("t" 0 1 (face (whitespace-line))) . -312) (undo-tree-id31 . -1) (#(" " 0 1 (face (whitespace-line))) . -313) (undo-tree-id32 . -1) 314) nil (25695 31790 566065 818000) 0 nil])
([nil nil ((297 . 306)) nil (25695 31790 566042 565000) 0 nil])
([nil nil ((306 . 326)) nil (25695 31790 566041 701000) 0 nil])
([nil nil ((#("n" 0 1 (face (whitespace-line))) . -324) (undo-tree-id14 . -1) (#(" " 0 1 (face (whitespace-line))) . -325) (undo-tree-id15 . -1) 326) nil (25695 31790 566040 400000) 0 nil])
([nil nil ((#("i" 0 1 (face (whitespace-line))) . -323) (undo-tree-id13 . -1) 324) nil (25695 31790 566036 912000) 0 nil])
([nil nil ((323 . 344)) nil (25695 31790 566034 913000) 0 nil])
([nil nil ((344 . 345)) nil (25695 31790 566034 39000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -344) (undo-tree-id12 . -1) 345) nil (25695 31790 566032 913000) 0 nil])
([nil nil ((344 . 346)) nil (25695 31790 566030 783000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -345) (undo-tree-id11 . -1) 346) nil (25695 31790 566029 635000) 0 nil])
([nil nil ((#(" Read the dreadful story of an unprepaired and nervous student fighting for his survival during an examination." 62 71 (face (whitespace-line)) 71 75 (face (whitespace-line)) 75 79 (face (whitespace-line)) 79 88 (face (whitespace-line)) 88 95 (face (whitespace-line)) 95 98 (face (whitespace-line)) 98 111 (face (whitespace-line))) . 234) (undo-tree-id4 . -82) (undo-tree-id5 . -111) (undo-tree-id6 . -110) (undo-tree-id7 . -111) (undo-tree-id8 . -111) (undo-tree-id9 . -110) (undo-tree-id10 . -111)) nil (25695 31790 566026 861000) 0 nil])
([nil nil ((234 . 235)) nil (25695 31790 566018 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 343 . 344) (nil face (whitespace-line) 296 . 344) (235 . 344)) nil (25695 31790 566016 962000) 0 nil])
([nil nil (("2" . 118)) nil (25695 31790 566015 527000) 0 nil])
([nil nil ((118 . 119)) nil (25695 31790 566014 660000) 0 nil])
([nil nil (("8" . 121)) nil (25695 31790 566013 625000) 0 nil])
([nil nil ((121 . 122)) nil (25695 31790 566012 712000) 0 nil])
([nil nil (("9" . -121) (undo-tree-id3 . -1) 122) nil (25695 31790 566011 314000) 0 nil])
([nil nil ((121 . 122)) nil (25695 31790 566008 92000) 0 nil])
([nil nil (("6" . 123) ("2" . 123)) nil (25695 31790 566006 746000) 0 nil])
([nil nil ((123 . 124)) nil (25695 31790 566004 523000) 0 nil])
([nil nil ((124 . 125)) nil (25695 31790 566001 3000) 0 nil])
([nil nil (("2" . -126) (undo-tree-id0 . -1) (undo-tree-id1 . -1) ("1" . -127) (undo-tree-id2 . -1) 128) nil (25695 31790 565996 645000) 0 nil])
([nil nil ((126 . 128)) nil (25695 31790 565964 14000) 0 nil])
([nil nil ((" -0400" . 134) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (t 25695 31790 577194 479000)) nil (25695 31819 357324 112000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -302) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("h" 0 1 (face (whitespace-line))) . -303) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("i" 0 1 (face (whitespace-line))) . -304) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("s" 0 1 (face (whitespace-line))) . -305) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 306 (t 25695 31819 361155 215000)) nil (25836 51071 564372 677000) 0 nil])
([nil nil ((320 . 321) (t 25836 51071 575067 641000)) nil (25836 51077 721365 124000) 0 nil])
([nil nil ((#("x" 0 1 (face (whitespace-line))) . -320) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 321) nil (25836 51077 721359 398000) 0 nil])
([nil nil ((156 . 163) (t 25836 51077 727091 769000)) nil (25836 51097 209087 790000) 0 nil])
([nil nil ((">" . 159) ("i" . 159) ("/" . 159) (#("<" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face)) . 159)) nil (25836 51097 209084 839000) 0 nil])
([nil nil ((183 . 187)) nil (25836 51097 209077 267000) 0 nil])
([nil nil ((#("The short story <i>'Dance hominidae, Dance'</i> has been added to the site, Wattpad and inkitt." 16 17 (tag-name "i" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 45 46 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 46 47 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 140) (undo-tree-id28 . -95) (undo-tree-id29 . -47) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . -47) (undo-tree-id33 . -95) (undo-tree-id34 . -95) (undo-tree-id35 . -95) (t 25836 51097 215168 168000)) nil (25836 51312 63178 440000) 0 nil])
([nil nil ((" " . 140)) nil (25836 51312 63168 420000) 0 nil])
([nil nil ((245 . 246)) nil (25836 51312 63167 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 340 . 341) (nil face (whitespace-line) 340 . 341) (nil face (whitespace-line) 335 . 340) (nil face (whitespace-line) 334 . 335) (nil face (whitespace-line) 333 . 334) (nil face (whitespace-line) 332 . 333) (nil face (whitespace-line) 331 . 332) (nil face (whitespace-line) 330 . 331) (nil face (whitespace-line) 329 . 330) (nil face (whitespace-line) 328 . 329) (nil face (whitespace-line) 323 . 328) (nil face (whitespace-line) 322 . 323) (nil face (whitespace-line) 321 . 322) (nil face (whitespace-line) 320 . 321) (nil face (whitespace-line) 317 . 320) (nil face (whitespace-line) 316 . 317) (nil face (whitespace-line) 315 . 316) (nil face (whitespace-line) 314 . 315) (nil face (whitespace-line) 313 . 314) (nil face (whitespace-line) 312 . 313) (nil face (whitespace-line) 311 . 312) (nil face (whitespace-line) 310 . 311) (nil face (whitespace-line) 309 . 310) (nil face (whitespace-line) 308 . 309) (nil face (whitespace-line) 307 . 308) (nil face (whitespace-line) 304 . 307) (nil face (whitespace-line) 303 . 304) (nil face (whitespace-line) 302 . 303) (nil face (whitespace-line) 301 . 302) (nil face (whitespace-line) 299 . 301) (nil face (whitespace-line) 298 . 299) (nil face (whitespace-line) 297 . 298) (nil face (whitespace-line) 296 . 297) (nil face (whitespace-line) 295 . 296) (nil face (whitespace-line) 294 . 295) (nil face (whitespace-line) 293 . 294) (nil tag-name "i" 292 . 293) (nil tag-type end 292 . 293) (nil tag-end t 292 . 293) (nil font-lock-face web-mode-html-tag-bracket-face 292 . 293) (nil face (whitespace-line web-mode-html-tag-bracket-face) 292 . 293) (nil tag-name "i" 291 . 292) (nil tag-type end 291 . 292) (nil font-lock-face web-mode-html-tag-face 291 . 292) (nil face (whitespace-line web-mode-html-tag-face) 291 . 292) (nil tag-name "i" 290 . 291) (nil tag-type end 290 . 291) (nil font-lock-face web-mode-html-tag-bracket-face 290 . 291) (nil face (whitespace-line web-mode-html-tag-bracket-face) 290 . 291) (nil tag-name "i" 289 . 290) (nil tag-type end 289 . 290) (nil tag-beg 20 289 . 290) (nil font-lock-face web-mode-html-tag-bracket-face 289 . 290) (nil tag-name "i" 264 . 265) (nil tag-type start 264 . 265) (nil tag-end t 264 . 265) (nil font-lock-face web-mode-html-tag-bracket-face 264 . 265) (nil tag-name "i" 263 . 264) (nil tag-type start 263 . 264) (nil font-lock-face web-mode-html-tag-face 263 . 264) (nil tag-name "i" 262 . 263) (nil tag-type start 262 . 263) (nil tag-beg 16 262 . 263) (nil font-lock-face web-mode-html-tag-bracket-face 262 . 263) (246 . 341)) nil (25836 51312 63163 162000) 0 nil])
([nil nil ((#("d" 0 1 (face (whitespace-line))) . 294) (#("e" 0 1 (face (whitespace-line))) . 294) (#("d" 0 1 (face (whitespace-line))) . 294) (#("d" 0 1 (face (whitespace-line))) . 294) (#("a" 0 1 (face (whitespace-line))) . 294) (#(" " 0 1 (face (whitespace-line))) . 294) (#("n" 0 1 (face (whitespace-line))) . 294) (#("e" 0 1 (face (whitespace-line))) . 294) (#("e" 0 1 (face (whitespace-line))) . 294) (#("b" 0 1 (face (whitespace-line))) . 294) (#(" " 0 1 (face (whitespace-line))) . 294) (#("s" 0 1 (face (whitespace-line))) . 294) (#("a" 0 1 (face (whitespace-line))) . 294) (#("h" 0 1 (face (whitespace-line))) . 294)) nil (25836 51312 63119 592000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line))) . 294) (#("h" 0 1 (face (whitespace-line))) . 294) (#("t" 0 1 (face (whitespace-line))) . 294) (#(" " 0 1 (face (whitespace-line))) . 294) (#("o" 0 1 (face (whitespace-line))) . 294) (#("t" 0 1 (face (whitespace-line))) . 294) (#(" " 0 1 (face (whitespace-line))) . 294)) nil (25836 51312 63115 230000) 0 nil])
([nil nil ((294 . 315)) nil (25836 51312 63113 174000) 0 nil])
([nil nil ((315 . 318)) nil (25836 51312 63112 210000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . -317) (undo-tree-id27 . -1) 318) nil (25836 51312 63110 979000) 0 nil])
([nil nil ((#("a" 0 1 (face (whitespace-line))) . -310) (undo-tree-id25 . -1) (#("t" 0 1 (face (whitespace-line))) . -311) (undo-tree-id26 . -1) 312) nil (25836 51312 63108 288000) 0 nil])
([nil nil ((310 . 312)) nil (25836 51312 63105 48000) 0 nil])
([nil nil ((#("a" 0 1 (face (whitespace-line))) . -332) (undo-tree-id22 . -1) (#("n" 0 1 (face (whitespace-line))) . -333) (undo-tree-id23 . -1) (#("d" 0 1 (face (whitespace-line))) . -334) (undo-tree-id24 . -1) 335) nil (25836 51312 63103 446000) 0 nil])
([nil nil ((332 . 333)) nil (25836 51312 63098 445000) 0 nil])
([nil nil ((#("r" 0 1 (face (whitespace-line))) . -332) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 333) nil (25836 51312 63095 828000) 0 nil])
([nil current ((332 . 334)) nil (25836 51312 63080 929000) 0 nil])
nil
