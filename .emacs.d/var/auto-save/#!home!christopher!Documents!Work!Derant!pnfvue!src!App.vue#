<!-- <template>
     <div id="app">
     <div id="nav">
     <router-link to="/">Angle</router-link>
     <nav>
     <router-link to="/analysis-network">Analysis</router-link>|
     <router-link to="/sensors">Sensors</router-link>|
     <router-link to="/files">Files</router-link>|
     <router-link to="/register">Register</router-link>
     </nav>
     <div v-if="logged_in">
     <a>{{ logged_name }}</a> |
     <router-link to :event="''" @click.native="onLogout"
     >Log out</router-link
     >
     </div>
     <router-link v-else to="/login">Login</router-link>
     </div>
     <router-view />
     </div>
     </template> -->

<!-- <style>
     #app {
     font-family: 'Avenir', Helvetica, Arial, sans-serif;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
     text-align: center;
     color: #2c3e50;
     }
     #nav {
     padding: 30px;
     display: flex;
     padding-bottom: 5px;
     justify-content: space-between;
     }

     #nav a {
     font-weight: bold;
     color: #2c3e50;
     }

     #nav a.router-link-exact-active {
     color: #42b983;
     }
     </style> -->


<!-- <template>
     <v-app>
     <core-app-bar />

     <core-drawer />

     <core-view />

     <core-footer />
     </v-app>
     </template> -->


<template>
  <v-app light>
    <!--The SideMenu Component go here-->
    <core-app-bar />
    <core-drawer />
    <core-view />
    <core-footer />
  </v-app>


</template>

<script>

  import axios from 'axios' // importing the axios (a HTTP library) to connects the app with the News API
  export default {

    components: {
      CoreAppBar: () => import('@/components/core/AppBar'),
      CoreFooter: () => import('@/components/core/Footer'),
      CoreDrawer: () => import('@/components/core/Drawer'),
      CoreView: () => import('@/components/core/View')
    },
  }
</script>
<!-- <script>
     import router from '@/router.js'
     import { EventBus } from '@/services/user_status.js'

     export default {
     components: {
     CoreDrawer: () => import('@/components/core/Drawer'),
     CoreFooter: () => import('@/components/core/Footer'),
     CoreAppBar: () => import('@/components/core/AppBar'),
     CoreView: () => import('@/components/core/View')
     },
     data() {
     return {
     logged_in: false,
     logged_name: null
     }
     },
     mounted() {
     if (localStorage) {
     this.onLogin()
     }
     EventBus.$on('user_logged_in', is_logged => {
     if (is_logged) {
     this.onLogin()
     console.log('user: '+localStorage.getItem('user_name')+' logged in')
     }
     })
     },
     methods: {
     onLogout() {
     localStorage.clear()
     this.logged_in = false
     this.logged_name = null
     router.push('/')
     },
     onLogin() {
     this.logged_in = localStorage && localStorage.getItem('authtoken')
     this.logged_name = localStorage.getItem('user_name')
     }
     }
     }
     </script> -->
