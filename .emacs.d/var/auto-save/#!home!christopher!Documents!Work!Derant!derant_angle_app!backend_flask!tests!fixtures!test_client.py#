import pytest
import os

from angle.models import db
from angle import create_app, jwt_checks
import psycopg2
import time
from psycopg2 import Error


@pytest.fixture(scope='module')
def test_client():
    flask_app = create_app('test')

    e_host = os.environ.get("POSTGRES_HOST", 'localhost')
    e_user = os.environ.get("POSTGRES_USER", 'testing')
    e_port = os.environ.get("POSTGRES_PORT", '5434')
    e_pass = os.environ.get("POSTGRES_PASSWORD", 'testing')
    #e_db = "postgres" # os.environ.get("POSTGRES_DB", 'angle_db2')
    url = ('postgresql+psycopg2://%s:%s@%s:%d' %
           (e_user, e_pass, e_host, int(e_port)))

    flask_app.config['SQLALCHEMY_DATABASE_URI'] = url

    #"postgresql+psycopg2://testing:testing@0.0.0.0:5434"

    jwt_checks(flask_app)
    db.init_app(flask_app)
    testing_client = flask_app.test_client()

    ctx = flask_app.app_context()
    ctx.push()

    yield testing_client  # this is where the testing happens!

    ctx.pop()

# @pytest.fixture(scope='module')
# def test_client(request):
#     flask_app = create_app('test')
#     opt = request.config.getoption("--docker")
#
#     if opt == 'false':
#         with Postgresql() as postgresql:
#             flask_app.config['SQLALCHEMY_DATABASE_URI'] = postgresql.url()
#             jwt_checks(flask_app)
#             db.init_app(flask_app)
#             testing_client = flask_app.test_client()
#
#             ctx = flask_app.app_context()
#             ctx.push()
#
#             yield testing_client  # this is where the testing happens!
#
#             ctx.pop()
#     else:
#         e_host = os.environ.get("POSTGRES_HOST", 'localhost')
#         e_user = os.environ.get("POSTGRES_USER", 'frederik')
#         e_port = os.environ.get("POSTGRES_PORT", '5432')
#         e_pass = os.environ.get("POSTGRES_PASSWORD", '123test')
#         e_db = "test_db" # os.environ.get("POSTGRES_DB", 'angle_db2')
#         e_v = os.environ.get("POSTGRES_VERSION", '10.14')
#         with DatabaseJanitor(user=e_user, host=e_host, port=e_port, db_name=e_db,
#                              version=e_v, password=e_pass) as postgresql:
#             url = ('postgresql://%s:%s@%s:%d/%s' %
#                    (postgresql.user, postgresql.password, postgresql.host, int(postgresql.port), postgresql.db_name))
#             flask_app.config['SQLALCHEMY_DATABASE_URI'] = url
#             jwt_checks(flask_app)
#             db.init_app(flask_app)
#             testing_client = flask_app.test_client()
#
#             ctx = flask_app.app_context()
#             ctx.push()
#
#             yield testing_client  # this is where the testing happens!
#
#             ctx.pop()
