#from flask_jwt_extended import get_jwt_identity, jwt_required
#from flask_restful import Resource, reqparse
from cryptography.fernet import Fernet
from flask import current_app as app
import requests
import json
#from angle.models import UserModel
#import pyotp

#crypt_key = Fernet(app.config['BASE32_ENCRYPTION_KEY'])

auth_u_key = app.config['DBI_AUTH_U']
auth_c_key = app.config['DBI_AUTH_C']

def create_pass(password, userid):
    return 1

def get_user_id(email, company_id):
    args = {'authentication': auth_u_key, 'company': company_id}
    response = (requests.get(url = 'https://www.digitaltberedskab.dk/ws/angle/users/',
                             params = args)).json()
    print(response)
    return response

def create_user(group_id, dbi_firm_id, userm, password):
    user = {'Name': 'test user', 'Email': userm.username}
    if userm.mobile:
        user['Phone'] = userm.mobile
    myobj = {'Authentication': auth_u_key, 'Company': dbi_firm_id, 'users': [json.dumps(user)]}
    auth_header = {'content-type': 'application/json', 'Authorization': auth_c_key}
    response = requests.post('https://digitaltberedskab.dk/ws/angle/users', headers=auth_header, json=myobj)
    #print(response.request.body)
    #print(response.request.headers)
    #print(response.content)
    for line in response.text.splitlines():
        print(line)
    raise Exception('stuff done')
    user_id = get_user_id(userm.username, dbi_firm_id)
    user['Password'] = create_pass(userm.password, user_id)
    user['Encrypt'] = 0
    response = (requests.post('https://digitaltberedskab.dk/ws/angle/users', headers=auth_header, data = myobj)).json()
    return response
