<template>
  <div id="filelistcontent">
    <p>Files waiting to be processed:</p>
    <ul>
      <li v-for="f in fileWaitList" :key="f">{{ f }}
      </li>
    </ul>
    <button v-on:click="getWaitFiles()">Refresh</button>
    <p>Current files uploaded to the analysis server:</p>
    <ul>
      <li v-for="f in filelist" :key="f">
        <a href="#" @click.prevent="setSelectedFile(f)">{{ f }}</a>
      </li>
    </ul>
    <p v-if="selectedFile">Selected file: {{ selectedFile }}</p>
    <p>Upload another file...</p>
    <label>
      File
      <input
        type="file"
        id="file"
        ref="file"
        v-on:change="handleFileUpload()"
      />
    </label>
    <button v-on:click="submitFile()">Submit</button>
    <p>{{ upload_re }}</p>
  </div>
</template>

<script>
//import authservice from '@/services/BackendService.js'

export default {
  data() {
    return {
      filelist: [],
      fileWaitList: [],
      selectedFile: null,
      upload_re: null
    }
  },
  mounted() {
    console.log('mounted')
    this.selectedFile = authservice.getSelectedFile()
    authservice.getBrologs().then(result => {
      this.filelist = result.data.brologs
    })
    this.getWaitFiles()
  },
  methods: {
    submitFile() {
      let formData = new FormData()
      formData.append('file', this.file)
      authservice
        .fileUpload(formData)
        .then(result => {
          this.upload_re = 'Fileupload Success'
          console.log(result.data)
          console.log('Success!')
        })
        .catch(function(error) {
          this.upload_re =
            'Fileupload failed, status code:' + error.response.status
          console.log('Fail!!')
        })
      console.log('file tried uploaded')
    },
    getWaitFiles() {
      authservice.getPcapWait().then(result => {
	this.fileWaitList = result.data.pcap_wait
      })
      console.log('Got files waiting')
    },
    handleFileUpload() {
      this.file = this.$refs.file.files[0]
      console.log('File changed')
    },
    setSelectedFile(sf) {
      console.log(sf)
      this.selectedFile = sf
      authservice.setSelectedFile(sf)
    }
  }
}
</script>

<style>
#filelistcontent {
  text-align: left;
}
</style>
