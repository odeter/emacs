import os
import datetime
from os import environ, path
from dotenv import load_dotenv

basedir = path.abspath(path.dirname(__file__))
load_dotenv(path.join(basedir, '.env'))


class Config(object):
    PROPAGATE_EXCEPTIONS = True
    #SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']
    #SQLALCHEMY_DATABASE_URI = 'postgresql://db_master:1234@localhost/angle_db'
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SECRET_KEY = 'jA8ufD565zsXZFU6Rs9'
    JWT_SECRET_KEY =  'kowmcuitr8s2c97'
    JWT_ACCESS_TOKEN_EXPIRES = datetime.timedelta(seconds=3600) #False # change before deployment
    JWT_BLACKLIST_ENABLED = True
    JWT_BLACKLIST_TOKEN_CHECKS = ['access', 'refresh']
    CORS_HEADERS = 'Content-Type'
    CORS_ENABLED = True
    REG_KEY = 'PgMboo8HDyV3juygPk44sVjCEZgy4a%5'
    UPLOAD_FOLDER = 'uploads/'
    STREAM_FOLDER = 'datastream/'
    CSV_FOLDER = 'csv/'
    CORS_ORIGIN_WHITELIST = [
        'https://bull.derant.com',
        'http://0.0.0.0:4100',
        'http://localhost:4100',
        'http://0.0.0.0:8000',
        'http://localhost:8000',
        'http://0.0.0.0:4200',
        'http://localhost:4200',
        'http://0.0.0.0:4000',
        'http://localhost:4000',
        'http://localhost:8080',
        'http://0.0.0.0:8080',
        'http://127.0.0.1:8080',
        'http://192.168.100.6:8080',
        'localhost'
    ]

class ProdConfig(Config):
    FLASK_ENV = 'production'
    DEBUG = False
    TESTING = False
    SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']


class DevConfig(Config):
    FLASK_ENV = 'development'
    DEBUG = True
    TESTING = True
    SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']
