# Data insertion

Scripts for reading log files and inserting them into the database


## Installation

The python script dependencies are defined in the 'requirements.txt' file:

``` bash
# Install requirements
pip install -r requirements.txt
```

## Use guide

The directory contains the following files:
    - `format_data.py` - python script to unzip, read and insert log files into the database
    - `check_data.sh`- bash script to parallelize the python script and remove readed files, loops indefinitely.

### format_data.py (str: filepath, int: user id)
the `format_data.py` script takes two parameters and demands one enviormental variable to be specified. the first paramter is the filepath and the second is the user id to which the data should be related to.

Before the script is executed a enviromental variable `DATABASE_URL` has to be defined, containing the access to the database in url form. e.g. `postgresql://db_master:1234@localhost/angle_db`. This variable is defined in the `check_data.sh` bash script and can be redifined there also.

Example:

``` bash
python3 format_data.py ../testdata/done/1/2107e804-7eb3-4486-a06c-3e520f9f5765.gz 1
```

### check_data.sh (str: directorypath)

The `check_data.sh`script takes one parameter, the path to the directory of the incoming data. It sets the database enviromental variable for the python program to use. Thus to change the database path one will have to change it here. It goes over every '.gz' file in the directory defined and feeds them to the python script and then the file is removed. Should the python script return an error then the file is moved to a directory called `package_probs/` which is placed in the same directory as the bash script.

Example:

``` bash
./check_data.sh ../testdata/done/
```
