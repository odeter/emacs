import os
import numpy as np
from report_gen import custom_key

# def custom_key(str):
#     return len(str), str.lower()

def read_csv(f_path, sep):
    if os.stat(f_path).st_size > 0:
        return np.genfromtxt(f_path, delimiter=sep, dtype=None, encoding=None)
    else:
        return np.array([])


def risks_count(raw_data):
    sec_split = (raw_data.split("<|>"))[1:]
    sec_struct = zip(*[iter(sec_split)]*2)
    res_tab = []
    for i in sec_struct:
        name = (i[0]).strip()
        raw_R = (i[1]).split("<->")
        res_tab = res_tab + (list(map(lambda x : x[0].strip(), zip(*[iter(raw_R)]*2))))
    sort_res = np.array(res_tab)
    u, counts = np.unique(np.array(res_tab), return_counts=True)
    final_res = dict((x, y) for x, y in set(zip(u, counts)))
    return final_res

dir_path = os.path.dirname(os.path.realpath(__file__))
data_path = os.path.join(dir_path, "data/")
annex_path = os.path.join(data_path, "annexes/")
result_path = os.path.join(data_path, "results/")

all_dirs = sorted(os.listdir(annex_path), key=custom_key)
for subdir in all_dirs:
        date = subdir.split('-')
        year = date[0]
        week = date[1]
        print("Calculatin for week: " + week)

        path = os.path.join(annex_path, subdir + "/data/")

        # gets all new public and private ports, adds them to result
        pub_new      = read_csv(path+"diff-public-new.result.md", ',')
        pri_new      = read_csv(path+"diff-private-new.result.md", ',')
        new_total = pub_new.size + pri_new.size
        subnet_res = os.path.join(result_path, "new_subnets.csv")
        myfile = open(subnet_res, 'a')
        myfile.write(str(week)+','+str(new_total)+'\n')
        myfile.close()

        # collects and counts risks, add to resuslt

        risk_path = os.path.join(annex_path, subdir + "/risk.txt")
        with open(risk_path, 'r') as file:
            risk_raw = file.read()
        risk_n = risks_count(risk_raw)

        risk_f = os.path.join(result_path, "risks.csv")
        r_val = str(risk_n["R"]) if "R" in risk_n else "0"
        myfile = open(risk_f, 'a')
        myfile.write(str(week)+','+r_val+'\n')
        myfile.close()

        hrisk_f = os.path.join(result_path, "high_risks.csv")
        hr_val = str(risk_n["HR"]) if "HR" in risk_n else "0"
        myfile = open(hrisk_f, 'a')
        myfile.write(str(week)+','+hr_val+'\n')
        myfile.close()

        vhrisk_f = os.path.join(result_path, "very_high_risks.csv")
        vhr_val = str(risk_n["VHR"]) if "VHR" in risk_n else "0"
        myfile = open(vhrisk_f, 'a')
        myfile.write(str(week)+','+vhr_val+'\n')
        myfile.close()
