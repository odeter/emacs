(undo-tree-save-format-version . 1)
"8d4a5ba9a3935a941d5ae3d608fd762b4bdc0bc7"
[nil nil nil nil (25671 40704 194258 752000) 0 nil]
([nil nil ((4452 . 4454) (#("  " 0 2 (part-side css)) . 4451) (undo-tree-id18 . -2) (4450 . 4454) (t 25642 38060 362165 404000)) nil (25671 40704 194251 934000) 0 nil])
([nil nil ((4451 . 4453)) nil (25671 40704 194238 448000) 0 nil])
([nil nil ((4452 . 4454) (#("  " 0 2 (part-side css)) . 4451) (undo-tree-id17 . -2) (4453 . 4454)) nil (25671 40704 194232 102000) 0 nil])
([nil nil ((4454 . 4455)) nil (25671 40704 194219 585000) 0 nil])
([nil nil ((4455 . 4463)) nil (25671 40704 194214 948000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css)) . -4462) (undo-tree-id16 . -1) 4463) nil (25671 40704 194208 373000) 0 nil])
([nil nil ((4462 . 4466)) nil (25671 40704 194196 501000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css)) . -4462) (undo-tree-id12 . -1) (#("e" 0 1 (part-side css)) . -4463) (undo-tree-id13 . -1) (#("s" 0 1 (part-side css)) . -4464) (undo-tree-id14 . -1) (#("c" 0 1 (part-side css)) . -4465) (undo-tree-id15 . -1) 4466) nil (25671 40704 194187 56000) 0 nil])
([nil nil ((4476 . 4478) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -4476) (4462 . 4477)) nil (25671 40704 194157 813000) 0 nil])
([nil nil ((4479 . 4481) (#("    " 0 4 (face whitespace-trailing part-side css)) . 4478) (undo-tree-id10 . -2) (undo-tree-id11 . 4) (4480 . 4482) (4477 . 4481)) nil (25671 40704 194148 837000) 0 nil])
([nil nil ((4478 . 4482)) nil (25671 40704 194130 277000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4519 . 4520) (nil rear-nonsticky t 4519 . 4520) (nil part-side css 4519 . 4520) (nil part-side css 4515 . 4519) (nil part-side css 4505 . 4515) (nil face web-mode-css-property-name-face 4505 . 4515) (nil part-side css 4504 . 4505) (nil face web-mode-css-property-name-face 4504 . 4505) (nil part-side css 4503 . 4504) (nil rear-nonsticky t 4502 . 4503) (nil part-side css 4502 . 4503) (nil part-side css 4499 . 4502) (nil part-side css 4498 . 4499) (nil part-side css 4497 . 4498) (nil part-side css 4496 . 4497) (nil face web-mode-css-property-name-face 4496 . 4497) (nil part-side css 4482 . 4496) (nil face web-mode-css-property-name-face 4482 . 4496) (4482 . 4520)) nil (25671 40704 194119 128000) 0 nil])
([nil nil ((4504 . 4508) (#(" " 0 1 (part-side css)) . 4503) (undo-tree-id9 . -1) (4504 . 4505)) nil (25671 40704 194094 834000) 0 nil])
([nil nil ((4526 . 4530) (#("    " 0 4 (part-side css)) . 4525) (undo-tree-id8 . -4) (4524 . 4530)) nil (25671 40704 194081 854000) 0 nil])
([nil nil ((4530 . 4531)) nil (25671 40704 194070 47000) 0 nil])
([nil nil ((#("." 0 1 (part-side css)) . -4530) (undo-tree-id7 . -1) 4531) nil (25671 40704 194064 171000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 4524) (undo-tree-id5 . -1) (#("
" 0 1 (part-side css)) . 4524) (undo-tree-id6 . -1)) nil (25671 40704 194051 586000) 0 nil])
([nil nil ((4532 . 4535)) nil (25671 40704 194033 58000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4555 . 4556) (nil part-side css 4535 . 4556) (4535 . 4556)) nil (25671 40704 194027 769000) 0 nil])
([nil nil ((4556 . 4560)) nil (25671 40704 194021 439000) 0 nil])
([nil nil ((4563 . 4565) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -4563) (4560 . 4564)) nil (25671 40704 194015 890000) 0 nil])
([nil nil ((4566 . 4568) (#("    " 0 4 (face whitespace-trailing part-side css)) . 4565) (undo-tree-id3 . -2) (undo-tree-id4 . 4) (4567 . 4569) (4564 . 4568)) nil (25671 40704 194006 353000) 0 nil])
([nil nil ((4565 . 4569)) nil (25671 40704 193986 0) 0 nil])
([nil nil ((4569 . 4575)) nil (25671 40704 193981 541000) 0 nil])
([nil nil ((#("border" 0 6 (part-side css)) . 4569) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6)) nil (25671 40704 193974 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4588 . 4589) (nil part-side css 4582 . 4589) (nil part-side css 4569 . 4582) (nil face web-mode-css-property-name-face 4569 . 4582) (4569 . 4589)) nil (25671 40704 193917 787000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing part-side css)) . -4590) (#("    " 0 4 (face whitespace-trailing part-side css)) . -4524) 4589) nil (25671 40704 193895 482000) 0 nil])
([nil nil ((4553 . 4560) (t 25671 40704 196674 534000)) nil (25671 40738 258429 981000) 0 nil])
([nil nil ((4560 . 4562)) nil (25671 40738 258420 149000) 0 nil])
([nil nil ((4556 . 4557) (t 25671 40738 259605 260000)) nil (25671 40788 130358 939000) 0 nil])
([nil nil ((4563 . 4564)) nil (25671 40788 130351 801000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4552) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (part-side css)) . -4553) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("d" 0 1 (part-side css)) . -4554) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 4555 (t 25671 40788 132814 614000)) nil (25671 45168 111102 744000) 0 nil])
([nil nil ((#("solid" 0 5 (part-side css)) . 4587) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (t 25671 40805 858053 573000)) nil (25671 45172 181511 369000) 0 nil] [nil nil ((#("border-style: solid;" 0 13 (face web-mode-css-property-name-face part-side css) 13 19 (part-side css) 19 20 (part-side css rear-nonsticky t)) . 4573) (undo-tree-id25 . -20) (undo-tree-id26 . -19) (undo-tree-id27 . -20) (t 25671 40805 858053 573000)) ((4573 . 4593)) (25671 45167 937287 879000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4599 . 4600) (nil part-side css 4587 . 4600) (4587 . 4600)) nil (25671 45172 181493 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4585 . 4586) (nil part-side css 4573 . 4586) (4573 . 4586)) ((#("2px solid red" 0 12 (part-side css) 12 13 (part-side css rear-nonsticky nil)) . 4573) (undo-tree-id28 . -13) (nil rear-nonsticky t 4585 . 4586)) (25671 45167 936421 640000) 0 nil])
([nil nil ((4553 . 4556) (t 25671 45172 186945 582000)) nil (25671 45194 853291 390000) 0 nil])
nil
([nil nil ((#(".v-col " 0 6 (face web-mode-css-selector-class-face part-side css) 6 7 (part-side css)) . 4563) (undo-tree-id54 . -7) (undo-tree-id55 . -4) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (t 25671 45194 859153 872000)) nil (25671 45212 805623 700000) 0 nil])
([nil nil ((4564 . 4569)) nil (25671 45212 805617 212000) 0 nil])
([nil nil ((4569 . 4575)) nil (25671 45212 805616 164000) 0 nil])
([nil nil ((4569 . 4585) (#("backgr" 0 6 (part-side css)) . -4569) (undo-tree-id52 . -6) (undo-tree-id53 . -6) 4575) nil (25671 45212 805614 816000) 0 nil])
([nil nil ((4585 . 4591)) nil (25671 45212 805610 960000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -4590) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 4591) nil (25671 45212 805608 760000) 0 nil])
([nil nil ((4590 . 4592)) nil (25671 45212 805594 635000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4591) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 4592) nil (25671 45212 805588 959000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4552) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("t" 0 1 (part-side css)) . -4553) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("d" 0 1 (part-side css)) . -4554) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 4555 (t 25671 45212 811316 891000)) nil (25671 45241 494268 27000) 0 nil])
([nil nil ((#(".sensor_expanded_info " 0 20 (face web-mode-css-selector-class-face part-side css) 20 21 (face web-mode-css-selector-class-face part-side css rear-nonsticky t) 21 22 (part-side css)) . 4531) (undo-tree-id75 . -22) (undo-tree-id76 . -21) (undo-tree-id77 . -22) (t 25671 45241 499574 58000)) nil (25671 45479 510118 744000) 0 nil])
([nil nil ((#("-" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4533) (undo-tree-id74 . -1) 4534) nil (25671 45479 510114 186000) 0 nil])
([nil nil ((4533 . 4534)) nil (25671 45479 510111 638000) 0 nil])
([nil nil ((#(".vdrow" 0 6 (face web-mode-css-selector-class-face part-side css)) . 4531) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6)) nil (25671 45479 510110 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4551 . 4552) (nil part-side css 4531 . 4552) (nil face web-mode-css-selector-class-face 4531 . 4552) (4531 . 4552)) nil (25671 45479 510105 762000) 0 nil])
([nil nil ((4552 . 4558)) nil (25671 45479 510104 5000) 0 nil])
([nil nil ((#("c" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4555) (undo-tree-id68 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4556) (undo-tree-id69 . -1) (#("l" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4557) (undo-tree-id70 . -1) 4558) nil (25671 45479 510102 281000) 0 nil])
([nil nil ((4555 . 4557)) nil (25671 45479 510096 631000) 0 nil])
([nil nil ((#("v" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4556) (undo-tree-id67 . -1) 4557) nil (25671 45479 510095 202000) 0 nil])
([nil nil ((4556 . 4559)) nil (25671 45479 510092 439000) 0 nil])
([nil nil ((#("e" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4557) (undo-tree-id65 . -1) (#("w" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4558) (undo-tree-id66 . -1) 4559) nil (25671 45479 510090 560000) 0 nil])
([nil nil ((4557 . 4563)) nil (25671 45479 510085 885000) 0 nil])
([nil nil ((#("c" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4562) (undo-tree-id64 . -1) 4563) nil (25671 45479 510083 416000) 0 nil])
([nil nil ((4562 . 4566)) nil (25671 45479 510067 239000) 0 nil])
([nil nil ((4567 . 4574) (t 25671 45479 513574 970000)) nil (25671 45766 514923 89000) 0 nil])
([nil nil ((#("e" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4571) (undo-tree-id108 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4572) (undo-tree-id109 . -1) (#("w" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4573) (undo-tree-id110 . -1) 4574) nil (25671 45766 514921 241000) 0 nil])
([nil nil ((4571 . 4575)) nil (25671 45766 514916 501000) 0 nil])
([nil nil ((#("." 0 1 (part-side css)) . -4574) (undo-tree-id107 . -1) 4575) nil (25671 45766 514915 241000) 0 nil])
([nil nil ((4574 . 4581)) nil (25671 45766 514912 970000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4580) (undo-tree-id106 . -1) 4581) nil (25671 45766 514911 208000) 0 nil])
([nil nil ((#("r" 0 1 (part-side css)) . -4604) (undo-tree-id103 . -1) (#("e" 0 1 (part-side css)) . -4605) (undo-tree-id104 . -1) (#("d" 0 1 (part-side css)) . -4606) (undo-tree-id105 . -1) 4607) nil (25671 45766 514908 274000) 0 nil])
([nil nil ((4604 . 4606)) nil (25671 45766 514902 277000) 0 nil])
([nil nil ((#("a" 0 1 (part-side css)) . -4605) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 4606) nil (25671 45766 514900 2000) 0 nil])
([nil nil ((4605 . 4610)) nil (25671 45766 514878 423000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4609) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 4610) nil (25671 45766 514873 227000) 0 nil])
([nil nil ((4553 . 4556) (t 25671 45766 515764 870000)) nil (25671 45817 474018 997000) 0 nil])
([nil nil ((4524 . 4529) (t 25671 45817 476136 400000)) nil (25671 45837 506527 9000) 0 nil])
([nil nil ((4529 . 4536)) nil (25671 45837 506525 801000) 0 nil])
([nil nil ((4529 . 4545) (#("backgro" 0 7 (part-side css)) . -4529) (undo-tree-id119 . -7) (undo-tree-id120 . -7) 4536) nil (25671 45837 506523 829000) 0 nil])
([nil nil ((4545 . 4552)) nil (25671 45837 506519 130000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4551) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 4552) nil (25671 45837 506514 98000) 0 nil])
([nil nil ((#("
    background-color: red;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 27 (part-side css)) . 4524) (undo-tree-id198 . -25) (undo-tree-id199 . -27) (undo-tree-id200 . -1) (undo-tree-id201 . -27) (t 25671 45837 508281 323000)) nil (25671 45859 199558 704000) 0 nil])
([nil nil ((#(".v-row .v-col .v-row .v-col" 0 6 (face web-mode-css-selector-class-face part-side css) 6 7 (part-side css) 7 13 (face web-mode-css-selector-class-face part-side css) 13 14 (part-side css) 14 20 (face web-mode-css-selector-class-face part-side css) 20 21 (part-side css) 21 27 (face web-mode-css-selector-class-face part-side css)) . 4556) (undo-tree-id177 . -27) (undo-tree-id178 . -25) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -4) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -27) (undo-tree-id197 . -27)) nil (25671 45859 199546 851000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4555) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 4556) nil (25671 45859 199517 898000) 0 nil])
([nil nil ((4555 . 4563) (t 25671 45859 204437 614000)) nil (25671 45870 314338 865000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4562) (undo-tree-id202 . -1) 4563) nil (25671 45870 314336 201000) 0 nil])
([nil nil ((4562 . 4563)) nil (25671 45870 314320 212000) 0 nil])
([nil nil ((#("border-style: 2px solid red;" 0 13 (face web-mode-css-property-name-face part-side css) 13 14 (part-side css) 14 26 (part-side css) 26 27 (part-side css rear-nonsticky t) 27 28 (part-side css rear-nonsticky t)) . 4598) (undo-tree-id203 . -28) (undo-tree-id204 . -28) (undo-tree-id205 . -14) (undo-tree-id206 . -14) (undo-tree-id207 . -25) (undo-tree-id208 . -28) (undo-tree-id209 . -28) (t 25671 45870 320517 435000)) nil (25671 46011 178539 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4626 . 4627) (nil part-side css 4626 . 4627) (nil part-side css 4619 . 4626) (nil face web-mode-css-color-face 4619 . 4626) (nil part-side css 4605 . 4619) (nil part-side css 4598 . 4605) (nil face web-mode-css-property-name-face 4598 . 4605) (4598 . 4627)) nil (25671 46011 178516 823000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css)) . -4553) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("d" 0 1 (part-side css)) . -4554) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#(" " 0 1 (part-side css)) . -4555) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 4556 (t 25671 46011 185515 138000)) nil (25671 46034 6368 738000) 0 nil])
([nil nil ((4553 . 4556) (t 25671 46034 9674 658000)) nil (25671 46047 461283 132000) 0 nil])
([nil nil ((#("expanded_info td" 0 12 (face web-mode-css-selector-class-face part-side css) 12 13 (face web-mode-css-selector-class-face part-side css rear-nonsticky t) 13 16 (part-side css)) . 4539) (undo-tree-id236 . -16) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -16) (undo-tree-id240 . -16) (undo-tree-id241 . -16) (t 25671 46047 465768 456000)) nil (25671 46210 177199 693000) 0 nil])
([nil nil ((4539 . 4540)) nil (25671 46210 177191 375000) 0 nil])
([nil nil ((#("v" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4542) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("-" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4543) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) 4544) nil (25671 46210 177185 862000) 0 nil])
([nil nil ((#(".sensor_d" 0 9 (face web-mode-css-selector-class-face part-side css)) . 4531) (undo-tree-id242 . -1) (undo-tree-id243 . -9) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . -8) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (t 25671 46210 182889 849000)) nil (25671 46222 471909 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4551 . 4552) (nil part-side css 4531 . 4552) (nil face web-mode-css-selector-class-face 4531 . 4552) (4531 . 4552)) nil (25671 46222 471885 19000) 0 nil])
([nil nil ((#("
    background-color: black;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 29 (part-side css)) . 4559) (undo-tree-id257 . -29) (undo-tree-id258 . -29) (undo-tree-id259 . -29) (undo-tree-id260 . -29) (undo-tree-id261 . -1) (undo-tree-id262 . -29) (undo-tree-id263 . -29) (t 25671 46222 482973 764000)) nil (25671 46248 624302 621000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css)) . -4578) (undo-tree-id251 . -1) (#("o" 0 1 (part-side css)) . -4579) (undo-tree-id252 . -1) (#("u" 0 1 (part-side css)) . -4580) (undo-tree-id253 . -1) (#("b" 0 1 (part-side css)) . -4581) (undo-tree-id254 . -1) (#("l" 0 1 (part-side css)) . -4582) (undo-tree-id255 . -1) (#("e" 0 1 (part-side css)) . -4583) (undo-tree-id256 . -1) 4584) nil (25671 46327 130378 410000) 0 nil])
([nil nil ((4578 . 4583)) nil (25671 46332 873016 490000) 0 nil] [nil nil ((4578 . 4583)) ((#("solid" 0 5 (part-side css)) . 4578)) (25671 46326 716059 703000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 4552) (undo-tree-id324 . -1)) nil (25671 46332 873013 360000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4552) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 4553 (t 25671 46248 631151 810000)) ((4552 . 4553) (t 25671 46320 283637 409000)) (25671 46318 328410 305000) 0 nil])
([nil nil ((4552 . 4553)) nil (25671 46332 873000 119000) 0 nil])
([nil nil ((4552 . 4556)) ((#(">td>" 0 4 (face web-mode-css-selector-class-face part-side css)) . 4552)) (25671 46318 85545 734000) 0 nil])
([nil nil ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4552) (undo-tree-id325 . -1) 4553 (t 25671 46332 875722 433000)) nil (25671 46340 544806 210000) 0 nil])
([nil nil ((4560 . 4561)) ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . 4560) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1)) (25671 46317 859549 77000) 0 nil])
([nil nil ((4552 . 4556)) nil (25671 46340 544789 703000) 0 nil])
([nil nil ((4561 . 4566)) ((#(".col " 0 4 (face web-mode-css-selector-class-face part-side css) 4 5 (part-side css)) . 4561) (undo-tree-id267 . -4) (undo-tree-id268 . -5) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5)) (25671 46317 558654 71000) 0 nil])
([nil nil ((4561 . 4571) (t 25671 46340 547774 192000)) nil (25671 46365 323379 155000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4565) (undo-tree-id264 . -1) 4566) ((4565 . 4566) (t 25671 46295 599470 483000)) (25671 46295 597263 409000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4570) (undo-tree-id387 . -1) 4571) nil (25671 46365 323377 771000) 0 nil])
nil
([nil nil ((4570 . 4571)) nil (25671 46365 323375 607000) 0 nil])
([nil nil ((#("w" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4569) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#(" " 0 1 (part-side css)) . -4570) (undo-tree-id386 . -1) 4571) nil (25671 46365 323374 114000) 0 nil])
([nil nil ((4569 . 4570)) nil (25671 46365 323369 603000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4569) (undo-tree-id383 . -1) 4570) nil (25671 46365 323368 319000) 0 nil])
([nil nil ((4569 . 4571)) nil (25671 46365 323365 911000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4570) (undo-tree-id382 . -1) 4571) nil (25671 46365 323364 498000) 0 nil])
([nil nil ((4570 . 4571)) nil (25671 46365 323360 651000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4565) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("." 0 1 (part-side css)) . -4566) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("r" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4567) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4568) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("w" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4569) (undo-tree-id380 . -1) (#(" " 0 1 (part-side css)) . -4570) (undo-tree-id381 . -1) 4571) nil (25671 46365 323352 443000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4552) (undo-tree-id405 . -1) 4553 (t 25671 46365 351941 314000)) nil (25671 46380 131196 119000) 0 nil])
([nil nil ((4552 . 4553)) nil (25671 46380 131187 374000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 4555)) nil (25671 46380 131186 111000) 0 nil])
([nil nil ((4555 . 4556)) nil (25671 46380 131184 813000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 4560) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1)) nil (25671 46380 131181 641000) 0 nil])
([nil nil ((4560 . 4561)) nil (25671 46380 131147 750000) 0 nil])
([nil nil ((#("#32a1ce" 0 7 (face web-mode-css-color-face part-side css)) . 4591) (undo-tree-id413 . -7) (undo-tree-id414 . -7) (undo-tree-id415 . -7) (t 25671 46380 136040 765000)) nil (25671 46486 385959 545000) 0 nil])
([nil nil ((4591 . 4596)) nil (25671 46486 385954 246000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css)) . -4579) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("h" 0 1 (part-side css)) . -4580) (undo-tree-id408 . -1) (#("i" 0 1 (part-side css)) . -4581) (undo-tree-id409 . -1) (#("c" 0 1 (part-side css)) . -4582) (undo-tree-id410 . -1) (#("k" 0 1 (part-side css)) . -4583) (undo-tree-id411 . -1) (#(" " 0 1 (part-side css)) . -4584) (undo-tree-id412 . -1) 4585) nil (25671 46486 385948 678000) 0 nil])
([nil nil ((4579 . 4583) (t 25671 46486 388752 450000)) nil (25671 46548 388579 415000) 0 nil])
([nil nil ((4577 . 4578)) nil (25671 46548 388578 190000) 0 nil])
([nil nil ((4578 . 4579)) nil (25671 46548 388577 289000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -4578) (undo-tree-id477 . -1) 4579) nil (25671 46548 388575 950000) 0 nil])
([nil nil ((4578 . 4580)) nil (25671 46548 388573 686000) 0 nil])
([nil nil ((#("l" 0 1 (face web-mode-css-property-name-face part-side css)) . -4578) (undo-tree-id475 . -1) (#("e" 0 1 (face web-mode-css-property-name-face part-side css)) . -4579) (undo-tree-id476 . -1) 4580) nil (25671 46548 388572 244000) 0 nil])
([nil nil ((4578 . 4581)) nil (25671 46548 388568 781000) 0 nil])
([nil nil ((4599 . 4604)) nil (25671 46548 388567 779000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4631 . 4632) (nil rear-nonsticky t 4631 . 4632) (nil part-side css 4631 . 4632) (nil part-side css 4615 . 4631) (nil part-side css 4604 . 4615) (nil face web-mode-css-property-name-face 4604 . 4615) (4604 . 4632)) nil (25671 46548 388566 506000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -4611) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -4612) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -4613) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 4614) nil (25671 46548 388560 601000) 0 nil])
([nil nil ((4611 . 4615)) nil (25671 46548 388505 413000) 0 nil])
([nil nil ((4615 . 4617)) nil (25671 46548 388503 714000) 0 nil])
([nil nil ((#(" " 0 1 (face web-mode-css-property-name-face part-side css)) . -4616) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 4617) nil (25671 46548 388498 523000) 0 nil])
([nil nil ((4566 . 4571) (t 25671 46548 394974 424000)) nil (25671 46620 795077 330000) 0 nil])
([nil nil ((4571 . 4583)) nil (25671 46620 795075 972000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -4582) (undo-tree-id482 . -1) 4583) nil (25671 46620 795074 930000) 0 nil])
([nil nil ((4582 . 4585)) nil (25671 46620 795072 716000) 0 nil])
([nil nil ((#("x" 0 1 (part-side css)) . -4584) (undo-tree-id481 . -1) 4585) nil (25671 46620 795071 459000) 0 nil])
([nil nil ((4584 . 4585)) nil (25671 46620 795068 660000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4584) (undo-tree-id480 . -1) 4585) nil (25671 46620 795067 472000) 0 nil])
([nil nil ((4584 . 4587)) nil (25671 46620 795064 850000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4586) (undo-tree-id479 . -1) 4587) nil (25671 46620 795062 837000) 0 nil])
([nil nil ((4586 . 4588)) nil (25671 46620 795058 239000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4587) (undo-tree-id478 . -1) 4588) nil (25671 46620 795049 880000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -4583) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 4584 (t 25671 46620 805059 495000)) nil (25671 46630 506947 306000) 0 nil])
([nil nil ((4583 . 4584)) nil (25671 46630 506919 565000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -4583) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 4584) nil (25671 46630 506916 780000) 0 nil])
([nil nil ((4583 . 4584)) nil (25671 46630 506892 50000) 0 nil])
([nil nil ((4528 . 4531) (t 25671 46630 512823 71000)) nil (25671 46666 367986 456000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4606 . 4607) (nil part-side css 4606 . 4607) (nil face (rainbow-delimiters-depth-1-face) 4606 . 4607) (nil part-side css 4603 . 4606) (nil rear-nonsticky t 4602 . 4603) (nil part-side css 4602 . 4603) (nil part-side css 4598 . 4602) (nil part-side css 4587 . 4598) (nil face web-mode-css-property-name-face 4587 . 4598) (nil part-side css 4576 . 4587) (nil part-side css 4561 . 4576) (nil face web-mode-css-property-name-face 4561 . 4576) (nil part-side css 4557 . 4561) (nil part-side css 4556 . 4557) (nil part-side css 4555 . 4556) (nil face (rainbow-delimiters-depth-1-face) 4555 . 4556) (nil part-side css 4554 . 4555) (nil part-side css 4533 . 4554) (nil face web-mode-css-selector-class-face 4533 . 4554) (nil part-side css 4531 . 4533) (4531 . 4607)) nil (25671 46666 367984 250000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4531) (undo-tree-id553 . -1) 4532) nil (25671 46666 367978 982000) 0 nil])
([nil nil ((4553 . 4556)) nil (25671 46666 367975 893000) 0 nil])
([nil nil ((#("    margin-top: 5px;
" 0 4 (part-side css) 4 15 (face web-mode-css-property-name-face part-side css) 15 20 (part-side css) 20 21 (part-side css)) . 4668) (undo-tree-id535 . -13) (undo-tree-id536 . -20) (undo-tree-id537 . -21) (4630 . 4668) (#("  .sensor_expanded_info>td>.row>.col{
" 0 2 (part-side css) 2 22 (face web-mode-css-selector-class-face part-side css) 22 23 (face web-mode-css-selector-class-face part-side css rear-nonsticky t) 23 24 (face web-mode-css-selector-class-face part-side css) 24 27 (face web-mode-css-selector-class-face part-side css) 27 32 (face web-mode-css-selector-class-face part-side css) 32 36 (face web-mode-css-selector-class-face part-side css) 36 37 (face (rainbow-delimiters-depth-1-face) part-side css) 37 38 (part-side css)) . 4609) (undo-tree-id538 . -36) (undo-tree-id539 . -37) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -28) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -37) (undo-tree-id548 . -2) (undo-tree-id549 . -37) (undo-tree-id550 . -31) (undo-tree-id551 . -37) (undo-tree-id552 . -37) (4647 . 4668) 4667) nil (25671 46666 367973 304000) 0 nil])
([nil nil ((#("    margin-top: 5px;
" 0 4 (part-side css) 4 15 (face web-mode-css-selector-tag-face part-side css) 15 19 (face web-mode-css-selector-tag-face part-side css) 19 20 (part-side css) 20 21 (part-side css)) . 4630) (undo-tree-id533 . -20) (undo-tree-id534 . -21) (4626 . 4630) (#("  }
" 0 2 (part-side css) 2 3 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t) 3 4 (part-side css)) . 4605) (4609 . 4630) 4629) nil (25671 46666 367952 53000) 0 nil])
([nil nil ((#("
    pointer-events: auto;
    text-align:left;" 0 5 (part-side css) 5 20 (face web-mode-css-property-name-face part-side css) 20 31 (part-side css) 31 42 (face web-mode-css-property-name-face part-side css) 42 47 (part-side css)) . 4557) (undo-tree-id515 . -47) (undo-tree-id516 . -1) (undo-tree-id517 . -47) (undo-tree-id518 . -47) (undo-tree-id519 . -47) (undo-tree-id520 . -47) (undo-tree-id521 . -47) (undo-tree-id522 . -26) (undo-tree-id523 . -26) (undo-tree-id524 . -26) (undo-tree-id525 . -26) (undo-tree-id526 . -26) (undo-tree-id527 . -26) (undo-tree-id528 . -26) (undo-tree-id529 . -26) (undo-tree-id530 . -26) (undo-tree-id531 . -47) (undo-tree-id532 . -47)) nil (25671 46666 367942 995000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -4574) (undo-tree-id555 . -1) 4575 (t 25671 46666 375988 180000)) nil (25671 46693 645049 516000) 0 nil])
([nil nil ((4574 . 4577)) nil (25671 46693 645046 206000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4576) (undo-tree-id554 . -1) 4577) nil (25671 46693 645043 704000) 0 nil])
([nil nil ((4552 . 4554)) nil (25671 46693 645026 689000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4552) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#(">" 0 1 (part-side css)) . -4553) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) 4554 (t 25671 46693 651391 916000)) nil (25671 46699 498404 97000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -4633) (undo-tree-id601 . -1) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -4634) (undo-tree-id602 . -1) (#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -4635) (undo-tree-id603 . -1) 4636 (t 25671 46699 503268 150000)) nil (25671 46711 516831 436000) 0 nil])
([nil nil ((4633 . 4639)) nil (25671 46711 516813 809000) 0 nil])
([nil nil ((#(" margin-top" 0 1 (part-side css) 1 11 (face web-mode-css-property-name-face part-side css)) . 4561) (undo-tree-id644 . -11) (undo-tree-id645 . -11) (t 25671 46711 523018 430000)) nil (25671 46753 719618 542000) 0 nil])
([nil nil ((4561 . 4564)) nil (25671 46753 719615 644000) 0 nil])
([nil nil ((#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -4562) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("v" 0 1 (face web-mode-css-property-name-face part-side css)) . -4563) (undo-tree-id642 . -1) (undo-tree-id643 . -1) 4564) nil (25671 46753 719614 89000) 0 nil])
([nil nil ((4562 . 4572)) nil (25671 46753 719608 666000) 0 nil])
([nil nil ((#("e" 0 1 (face web-mode-css-property-name-face part-side css)) . -4569) (undo-tree-id637 . -1) (#("w" 0 1 (face web-mode-css-property-name-face part-side css)) . -4570) (undo-tree-id638 . -1) (#("-" 0 1 (face web-mode-css-property-name-face part-side css)) . -4571) (undo-tree-id639 . -1) 4572) nil (25671 46753 719607 193000) 0 nil])
([nil nil ((4569 . 4577)) nil (25671 46753 719602 240000) 0 nil])
([nil nil ((#("x" 0 1 (part-side css)) . 4579) (#("p" 0 1 (part-side css)) . 4579) (#("0" 0 1 (part-side css)) . 4579) (#("1" 0 1 (part-side css)) . 4579)) nil (25671 46753 719600 791000) 0 nil])
([nil nil ((4579 . 4584)) nil (25671 46753 719598 859000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . -4570) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("h" 0 1 (part-side css)) . -4571) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("i" 0 1 (part-side css)) . -4572) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (#("d" 0 1 (part-side css)) . -4573) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (#("d" 0 1 (part-side css)) . -4574) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#("e" 0 1 (part-side css)) . -4575) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (#("n" 0 1 (part-side css)) . -4576) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#(":" 0 1 (face web-mode-css-property-name-face part-side css)) . -4577) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#(" " 0 1 (part-side css)) . -4578) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#("t" 0 1 (part-side css)) . -4579) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (#("r" 0 1 (part-side css)) . -4580) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("u" 0 1 (part-side css)) . -4581) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("e" 0 1 (part-side css)) . -4582) (undo-tree-id635 . -1) (#(" " 0 1 (part-side css)) . -4583) (undo-tree-id636 . -1) 4584) nil (25671 46753 719594 529000) 0 nil])
([nil nil ((4570 . 4574)) nil (25671 46753 719563 913000) 0 nil])
([nil nil ((#("g" 0 1 (part-side css)) . -4572) (undo-tree-id609 . -1) (#("h" 0 1 (part-side css)) . -4573) (undo-tree-id610 . -1) 4574) nil (25671 46753 719562 636000) 0 nil])
([nil nil ((4572 . 4577)) nil (25671 46753 719558 733000) 0 nil])
([nil nil ((#("n" 0 1 (part-side css)) . -4576) (undo-tree-id608 . -1) 4577) nil (25671 46753 719557 257000) 0 nil])
([nil nil ((4576 . 4579)) nil (25671 46753 719554 218000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4578) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 4579) nil (25671 46753 719549 479000) 0 nil])
([nil nil ((4524 . 4529) (t 25671 46753 726187 553000)) nil (25671 46822 108142 831000) 0 nil])
([nil nil ((4529 . 4533)) nil (25671 46822 108141 664000) 0 nil])
([nil nil ((#("k" 0 1 (part-side css)) . -4531) (undo-tree-id648 . -1) (#("c" 0 1 (part-side css)) . -4532) (undo-tree-id649 . -1) 4533) nil (25671 46822 108140 164000) 0 nil])
([nil nil ((4531 . 4539)) nil (25671 46822 108136 197000) 0 nil])
([nil nil ((4529 . 4545) (#("background" 0 10 (part-side css)) . -4529) (undo-tree-id646 . -10) (undo-tree-id647 . -10) 4539) nil (25671 46822 108134 263000) 0 nil])
([nil nil ((4545 . 4547)) nil (25671 46822 108122 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4565 . 4566) (nil part-side css 4547 . 4566) (4547 . 4566)) nil (25671 46822 108120 430000) 0 nil])
([nil nil ((4566 . 4567)) nil (25671 46822 108113 175000) 0 nil])
([nil nil ((#("blue-grey-lighten-5" 0 18 (part-side css) 18 19 (part-side css rear-nonsticky t)) . 4547) (undo-tree-id650 . -19) (undo-tree-id651 . -19) (t 25671 46822 112981 389000)) nil (25671 46837 634720 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4553 . 4554) (nil part-side css 4547 . 4554) (nil face web-mode-css-color-face 4547 . 4554) (4547 . 4554)) nil (25671 46837 634702 991000) 0 nil])
([nil nil ((#("black" 0 5 (part-side css)) . 4682) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (t 25671 46837 648729 643000)) nil (25671 46860 826717 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4688 . 4689) (nil part-side css 4682 . 4689) (nil face web-mode-css-color-face 4682 . 4689) (4682 . 4689)) nil (25671 46860 826713 858000) 0 nil])
([nil nil ((#("black" 0 5 (part-side css)) . 4719) (undo-tree-id652 . -5) (undo-tree-id653 . -2) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -5) (undo-tree-id658 . -5)) nil (25671 46860 826710 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4725 . 4726) (nil part-side css 4719 . 4726) (nil face web-mode-css-color-face 4719 . 4726) (4719 . 4726)) nil (25671 46860 826687 845000) 0 nil])
([nil nil ((#("#EEEEEE" 0 6 (face web-mode-css-color-face part-side css) 6 7 (face web-mode-css-color-face part-side css rear-nonsticky t)) . 4682) (undo-tree-id683 . -7) (undo-tree-id684 . -7) (t 25671 46860 832368 249000)) nil (25671 46882 331270 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4688 . 4689) (nil part-side css 4682 . 4689) (nil face web-mode-css-color-face 4682 . 4689) (4682 . 4689)) nil (25671 46882 331266 627000) 0 nil])
([nil nil ((#("#EEEEEE" 0 6 (face web-mode-css-color-face part-side css) 6 7 (face web-mode-css-color-face part-side css rear-nonsticky t)) . 4719) (undo-tree-id661 . -7) (undo-tree-id662 . -3) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -7) (undo-tree-id682 . -7)) nil (25671 46882 331261 892000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4725 . 4726) (nil part-side css 4719 . 4726) (nil face web-mode-css-color-face 4719 . 4726) (4719 . 4726)) nil (25671 46882 331218 7000) 0 nil])
([nil nil ((#("#616161" 0 6 (face web-mode-css-color-face part-side css) 6 7 (face web-mode-css-color-face part-side css rear-nonsticky t)) . 4682) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (t 25671 46882 336047 740000)) nil (25671 46901 899071 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4688 . 4689) (nil part-side css 4682 . 4689) (nil face web-mode-css-color-face 4682 . 4689) (4682 . 4689)) nil (25671 46901 899067 851000) 0 nil])
([nil nil ((#("#616161" 0 6 (face web-mode-css-color-face part-side css) 6 7 (face web-mode-css-color-face part-side css rear-nonsticky t)) . 4719) (undo-tree-id685 . -7) (undo-tree-id686 . -2) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -7) (undo-tree-id695 . -7)) nil (25671 46901 899064 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4725 . 4726) (nil part-side css 4719 . 4726) (nil face web-mode-css-color-face 4719 . 4726) (4719 . 4726)) nil (25671 52990 600951 964000) 0 nil])
([nil nil ((4727 . 4732) (t 25671 46901 899767 933000)) nil (25671 53001 247999 211000) 0 nil] [nil nil ((4726 . 4731) (t 25671 46901 899767 933000)) ((#("
    " 0 5 (part-side css)) . 4726) (undo-tree-id698 . -5) (undo-tree-id699 . -1)) (25671 52990 600126 923000) 0 nil])
([nil nil ((4732 . 4739)) nil (25671 53001 247997 933000) 0 nil])
nil
([nil nil ((#("-" 0 1 (part-side css)) . -4738) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 4739) nil (25671 53001 247996 443000) 0 nil])
([nil nil ((4738 . 4744)) nil (25671 53001 247992 667000) 0 nil])
([nil nil ((#("c" 0 1 (part-side css)) . -4742) (undo-tree-id701 . -1) (#(";" 0 1 (part-side css)) . -4743) (undo-tree-id702 . -1) 4744) nil (25671 53001 247990 976000) 0 nil])
([nil nil ((4742 . 4744)) nil (25671 53001 247986 509000) 0 nil])
([nil nil ((4744 . 4749)) nil (25671 53001 247985 633000) 0 nil])
([nil nil ((4749 . 4759)) nil (25671 53001 247984 693000) 0 nil])
([nil nil ((4759 . 4764)) nil (25671 53001 247983 212000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4763) (undo-tree-id700 . -1) 4764) nil (25671 53001 247977 915000) 0 nil])
([nil nil ((4767 . 4770) (t 25671 53001 252507 712000)) nil (25671 53024 496342 836000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4921 . 4922) (nil part-side css 4921 . 4922) (nil face (rainbow-delimiters-depth-1-face) 4921 . 4922) (nil part-side css 4918 . 4921) (nil part-side css 4913 . 4918) (nil part-side css 4904 . 4913) (nil face web-mode-css-property-name-face 4904 . 4913) (nil part-side css 4900 . 4904) (nil part-side css 4894 . 4900) (nil part-side css 4887 . 4894) (nil face web-mode-css-property-name-face 4887 . 4894) (nil part-side css 4883 . 4887) (nil part-side css 4882 . 4883) (nil rear-nonsticky t 4881 . 4882) (nil part-side css 4881 . 4882) (nil rear-nonsticky t 4880 . 4881) (nil part-side css 4880 . 4881) (nil face web-mode-css-color-face 4880 . 4881) (nil part-side css 4874 . 4880) (nil face web-mode-css-color-face 4874 . 4880) (nil part-side css 4863 . 4874) (nil part-side css 4850 . 4863) (nil face web-mode-css-property-name-face 4850 . 4863) (nil part-side css 4846 . 4850) (nil part-side css 4845 . 4846) (nil rear-nonsticky t 4844 . 4845) (nil part-side css 4844 . 4845) (nil rear-nonsticky t 4843 . 4844) (nil part-side css 4843 . 4844) (nil face web-mode-css-color-face 4843 . 4844) (nil part-side css 4837 . 4843) (nil face web-mode-css-color-face 4837 . 4843) (nil part-side css 4826 . 4837) (nil part-side css 4812 . 4826) (nil face web-mode-css-property-name-face 4812 . 4826) (nil part-side css 4808 . 4812) (nil part-side css 4807 . 4808) (nil part-side css 4806 . 4807) (nil face (rainbow-delimiters-depth-1-face) 4806 . 4807) (nil part-side css 4802 . 4806) (nil face web-mode-css-selector-class-face 4802 . 4806) (nil part-side css 4797 . 4802) (nil face web-mode-css-selector-class-face 4797 . 4802) (nil part-side css 4794 . 4797) (nil face web-mode-css-selector-class-face 4794 . 4797) (nil part-side css 4793 . 4794) (nil face web-mode-css-selector-class-face 4793 . 4794) (nil rear-nonsticky t 4792 . 4793) (nil part-side css 4792 . 4793) (nil face web-mode-css-selector-class-face 4792 . 4793) (nil part-side css 4772 . 4792) (nil face web-mode-css-selector-class-face 4772 . 4792) (nil part-side css 4770 . 4772) (4770 . 4922)) nil (25671 53024 496339 25000) 0 nil])
([nil nil ((#(".col" 0 4 (face web-mode-css-selector-class-face part-side css)) . 4802) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4)) nil (25671 53024 496326 932000) 0 nil])
([nil nil ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4801) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) 4802) nil (25671 53024 496320 322000) 0 nil])
([nil nil ((#("
    border-bottom: 1px solid #BDBDBD;
    border-right: 1px solid #BDBDBD;" 0 5 (part-side css) 5 19 (face web-mode-css-property-name-face part-side css) 19 30 (part-side css) 30 37 (face web-mode-css-color-face part-side css) 37 43 (part-side css) 43 56 (face web-mode-css-property-name-face part-side css) 56 67 (part-side css) 67 74 (face web-mode-css-color-face part-side css) 74 75 (part-side css)) . 4802) (undo-tree-id705 . -75) (undo-tree-id706 . -1) (undo-tree-id707 . -75) (undo-tree-id708 . -75) (undo-tree-id709 . -75) (undo-tree-id710 . -75) (undo-tree-id711 . -75) (undo-tree-id712 . -75) (undo-tree-id713 . -75) (undo-tree-id714 . -75) (undo-tree-id715 . -75) (undo-tree-id716 . -75) (undo-tree-id717 . -75) (undo-tree-id718 . -75) (undo-tree-id719 . -38) (undo-tree-id720 . -38) (undo-tree-id721 . -38) (undo-tree-id722 . -75) (undo-tree-id723 . -75)) nil (25671 53076 219467 24000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4770) (undo-tree-id765 . -1) 4771) nil (25671 53113 887705 139000) 0 nil] [nil nil ((#("
    .sensor_expanded_info>td>.row{
    margin: 0px;
    paddding: 0px;
  }" 0 1 (part-side css) 1 3 (part-side css) 3 5 (part-side css) 5 34 (face web-mode-css-selector-class-face part-side css) 34 35 (face (rainbow-delimiters-depth-1-face) part-side css) 35 40 (part-side css) 40 47 (face web-mode-css-property-name-face part-side css) 47 57 (part-side css) 57 66 (face web-mode-css-property-name-face part-side css) 66 74 (part-side css) 74 75 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 4767) (undo-tree-id758 . -75) (undo-tree-id759 . -1) (undo-tree-id760 . -3) (undo-tree-id761 . -34) (undo-tree-id763 . -35) (undo-tree-id764 . -75) (t 25671 53024 499519 848000)) ((4767 . 4842) (t 25671 53059 54057 225000)) (25671 53059 47752 893000) 0 nil])
([nil nil ((#("
  .sensor_expanded_info>td>.row{
    margin: 0px;
    paddding: 0px;
  }
" 0 1 (part-side css) 1 3 (part-side css) 3 32 (face web-mode-css-selector-class-face part-side css) 32 33 (face (rainbow-delimiters-depth-1-face) part-side css) 33 38 (part-side css) 38 45 (face web-mode-css-property-name-face part-side css) 45 55 (part-side css) 55 64 (face web-mode-css-property-name-face part-side css) 64 72 (part-side css) 72 73 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t) 73 74 (part-side css)) . 4767) (undo-tree-id886 . -74) (undo-tree-id887 . -3) (undo-tree-id888 . -32) (undo-tree-id889 . -33) (undo-tree-id890 . -73) (undo-tree-id891 . -69) (undo-tree-id892 . -1) (undo-tree-id893 . -74) (t 25671 53114 775712 104000)) nil (25671 53179 131027 340000) 0 nil] [nil nil ((4610 . 4615)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 4610) (undo-tree-id871 . -5) (undo-tree-id872 . -1) (undo-tree-id873 . -5) (undo-tree-id874 . -1) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5)) (25671 53113 469022 84000) 0 nil])
nil
([nil nil ((4767 . 4770) (t 25671 53179 137022 61000)) nil (25671 53234 658855 41000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4645 . 4646) (nil part-side css 4641 . 4646) (nil part-side css 4632 . 4641) (nil face web-mode-css-property-name-face 4632 . 4641) (nil part-side css 4622 . 4632) (nil part-side css 4615 . 4622) (nil face web-mode-css-property-name-face 4615 . 4622) (4615 . 4646)) ((#("margin: 0px;
    paddding: 0px;" 0 7 (face web-mode-css-property-name-face part-side css) 7 17 (part-side css) 17 26 (face web-mode-css-property-name-face part-side css) 26 30 (part-side css) 30 31 (part-side css rear-nonsticky nil)) . 4615) (nil rear-nonsticky t 4645 . 4646)) (25671 53112 984687 544000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4921 . 4922) (nil part-side css 4921 . 4922) (nil face (rainbow-delimiters-depth-1-face) 4921 . 4922) (nil part-side css 4918 . 4921) (nil part-side css 4913 . 4918) (nil part-side css 4904 . 4913) (nil face web-mode-css-property-name-face 4904 . 4913) (nil part-side css 4900 . 4904) (nil part-side css 4894 . 4900) (nil part-side css 4887 . 4894) (nil face web-mode-css-property-name-face 4887 . 4894) (nil part-side css 4883 . 4887) (nil part-side css 4882 . 4883) (nil rear-nonsticky t 4881 . 4882) (nil part-side css 4881 . 4882) (nil rear-nonsticky t 4880 . 4881) (nil part-side css 4880 . 4881) (nil face web-mode-css-color-face 4880 . 4881) (nil part-side css 4874 . 4880) (nil face web-mode-css-color-face 4874 . 4880) (nil part-side css 4863 . 4874) (nil part-side css 4850 . 4863) (nil face web-mode-css-property-name-face 4850 . 4863) (nil part-side css 4846 . 4850) (nil part-side css 4845 . 4846) (nil rear-nonsticky t 4844 . 4845) (nil part-side css 4844 . 4845) (nil rear-nonsticky t 4843 . 4844) (nil part-side css 4843 . 4844) (nil face web-mode-css-color-face 4843 . 4844) (nil part-side css 4837 . 4843) (nil face web-mode-css-color-face 4837 . 4843) (nil part-side css 4826 . 4837) (nil part-side css 4812 . 4826) (nil face web-mode-css-property-name-face 4812 . 4826) (nil part-side css 4808 . 4812) (nil part-side css 4807 . 4808) (nil part-side css 4806 . 4807) (nil face (rainbow-delimiters-depth-1-face) 4806 . 4807) (nil part-side css 4802 . 4806) (nil face web-mode-css-selector-class-face 4802 . 4806) (nil part-side css 4797 . 4802) (nil face web-mode-css-selector-class-face 4797 . 4802) (nil part-side css 4794 . 4797) (nil face web-mode-css-selector-class-face 4794 . 4797) (nil part-side css 4793 . 4794) (nil face web-mode-css-selector-class-face 4793 . 4794) (nil rear-nonsticky t 4792 . 4793) (nil part-side css 4792 . 4793) (nil face web-mode-css-selector-class-face 4792 . 4793) (nil part-side css 4772 . 4792) (nil face web-mode-css-selector-class-face 4772 . 4792) (nil part-side css 4770 . 4772) (4770 . 4922)) nil (25671 53234 658851 192000) 0 nil])
([nil nil ((4555 . 4560) (t 25671 53085 132957 671000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 4555) (undo-tree-id812 . -5) (undo-tree-id813 . -5) (undo-tree-id814 . -1) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) (undo-tree-id822 . -5) (undo-tree-id823 . -5) (undo-tree-id824 . -5) (undo-tree-id825 . -5) (undo-tree-id826 . -5) (undo-tree-id827 . -5) (undo-tree-id828 . -5) (undo-tree-id829 . -5) (undo-tree-id830 . -5) (undo-tree-id831 . -5) (undo-tree-id832 . -5) (undo-tree-id833 . -5) (undo-tree-id834 . -5) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5) (undo-tree-id839 . -5) (undo-tree-id840 . -5) (undo-tree-id841 . -5) (undo-tree-id842 . -5) (undo-tree-id843 . -5) (undo-tree-id844 . -5) (undo-tree-id845 . -5) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -1) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5)) (25671 53112 520901 285000) 0 nil])
([nil nil ((4806 . 4807)) nil (25671 53234 658838 998000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4590 . 4591) (nil part-side css 4586 . 4591) (nil part-side css 4577 . 4586) (nil face web-mode-css-property-name-face 4577 . 4586) (nil part-side css 4567 . 4577) (nil part-side css 4560 . 4567) (nil face web-mode-css-property-name-face 4560 . 4567) (4560 . 4591)) ((#("margin: 0px;
    paddding: 0px;" 0 7 (face web-mode-css-property-name-face part-side css) 7 17 (part-side css) 17 26 (face web-mode-css-property-name-face part-side css) 26 30 (part-side css) 30 31 (part-side css rear-nonsticky nil)) . 4560) (undo-tree-id766 . -31) (undo-tree-id767 . -13) (undo-tree-id768 . -31) (undo-tree-id769 . -31) (undo-tree-id770 . -31) (undo-tree-id771 . -31) (undo-tree-id772 . -31) (undo-tree-id773 . -31) (undo-tree-id774 . -31) (undo-tree-id775 . -31) (undo-tree-id776 . -31) (undo-tree-id777 . -31) (undo-tree-id778 . -31) (undo-tree-id779 . -31) (undo-tree-id780 . -31) (undo-tree-id781 . -31) (undo-tree-id782 . -31) (undo-tree-id783 . -31) (undo-tree-id784 . -31) (undo-tree-id785 . -31) (undo-tree-id786 . -31) (undo-tree-id787 . -31) (undo-tree-id788 . -31) (undo-tree-id789 . -31) (undo-tree-id790 . -31) (undo-tree-id791 . -31) (undo-tree-id792 . -31) (undo-tree-id793 . -31) (undo-tree-id794 . -31) (undo-tree-id795 . -31) (undo-tree-id796 . -31) (undo-tree-id797 . -31) (undo-tree-id798 . -31) (undo-tree-id799 . -31) (undo-tree-id800 . -31) (undo-tree-id801 . -31) (undo-tree-id802 . -31) (undo-tree-id803 . -31) (undo-tree-id804 . -31) (undo-tree-id805 . -31) (undo-tree-id806 . -31) (undo-tree-id807 . -31) (undo-tree-id808 . -31) (undo-tree-id809 . -31) (undo-tree-id810 . -31) (undo-tree-id811 . -31) (nil rear-nonsticky t 4590 . 4591) (t 25671 53099 808340 473000)) (25671 53099 801792 878000) 0 nil])
([nil nil ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4806) (undo-tree-id898 . -1) 4807) nil (25671 53234 658837 767000) 0 nil])
nil
([nil nil ((4806 . 4807)) nil (25671 53234 658835 507000) 0 nil])
([nil nil ((#("<" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4806) (undo-tree-id897 . -1) 4807) nil (25671 53234 658834 36000) 0 nil])
([nil nil ((4806 . 4815)) nil (25671 53234 658831 273000) 0 nil])
([nil nil ((4815 . 4816)) nil (25671 53245 660172 57000) 0 nil])
([nil nil ((#("
    border-bottom: 1px solid #BDBDBD;
    border-right: 1px solid #BDBDBD;" 0 5 (part-side css) 5 19 (face web-mode-css-property-name-face part-side css) 19 30 (part-side css) 30 37 (face web-mode-css-color-face part-side css) 37 43 (part-side css) 43 56 (face web-mode-css-property-name-face part-side css) 56 67 (part-side css) 67 74 (face web-mode-css-color-face part-side css) 74 75 (part-side css)) . 4817) (undo-tree-id906 . -75) (undo-tree-id907 . -1) (undo-tree-id908 . -75) (undo-tree-id909 . -75)) nil (25671 53252 392536 896000) 0 nil] [nil nil ((#("
    border-bottom: 1px solid #BDBDBD;
    border-right: 1px solid #BDBDBD;" 0 5 (part-side css) 5 19 (face web-mode-css-property-name-face part-side css) 19 30 (part-side css) 30 37 (face web-mode-css-color-face part-side css) 37 43 (part-side css) 43 56 (face web-mode-css-property-name-face part-side css) 56 67 (part-side css) 67 74 (face web-mode-css-color-face part-side css) 74 75 (part-side css)) . 4817) (undo-tree-id894 . -75) (undo-tree-id895 . -1) (undo-tree-id896 . -75)) ((4817 . 4892) (t 25671 53234 666715 516000)) (25671 53234 658824 938000) 0 nil])
([nil nil ((4816 . 4820) (#("  " 0 2 (part-side css)) . -4770) (4817 . 4818)) nil (25671 53252 392531 346000) 0 nil])
nil
([nil nil ((4820 . 4827)) nil (25671 53252 392529 863000) 0 nil])
([nil nil ((4820 . 4836) (#("backgro" 0 7 (part-side css)) . -4820) (undo-tree-id904 . -7) (undo-tree-id905 . -7) 4827) nil (25671 53252 392528 325000) 0 nil])
([nil nil ((4836 . 4843)) nil (25671 53252 392523 996000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4842) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) 4843) nil (25671 53274 31505 204000) 0 nil])
([nil nil ((#("
    background-color: red;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 27 (part-side css)) . 4815) (undo-tree-id948 . -27) (undo-tree-id949 . -25) (undo-tree-id950 . -1) (undo-tree-id951 . -27)) nil (25671 53281 45245 671000) 0 nil] [nil nil ((#("0" 0 1 (part-side css)) . -4855) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 4856 (t 25671 53252 397981 571000)) ((4855 . 4856)) (25671 53273 591594 634000) 0 nil])
([nil nil ((4831 . 4844)) nil (25671 53281 45239 630000) 0 nil])
([nil nil ((4855 . 4857)) ((#("-1" 0 2 (part-side css)) . 4855) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -2) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) (undo-tree-id920 . -2) (undo-tree-id921 . -2) (undo-tree-id922 . -2) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) (undo-tree-id928 . -2) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -2) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (t 25671 53263 233533 634000)) (25671 53263 224652 12000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4843) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) 4844) nil (25671 53281 45233 987000) 0 nil])
nil
([nil nil ((#("0" 0 1 (part-side css)) . -4840) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) 4841 (t 25671 53281 52797 920000)) nil (25671 53290 877301 812000) 0 nil])
([nil nil ((4840 . 4843)) nil (25671 53290 877191 426000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -4836) (undo-tree-id973 . -1) 4837 (t 25671 53290 884392 470000)) nil (25671 53301 502291 243000) 0 nil])
([nil nil ((4836 . 4839)) nil (25671 53301 502287 699000) 0 nil])
([nil nil ((#("+" 0 1 (part-side css)) . -4838) (undo-tree-id972 . -1) 4839) nil (25671 53301 502285 261000) 0 nil])
([nil nil ((4838 . 4839)) nil (25671 53301 502269 46000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . -4842) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#("1" 0 1 (part-side css)) . -4843) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) 4844 (t 25671 53301 507954 732000)) nil (25671 53312 274429 109000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -4838) (undo-tree-id1037 . -1) 4839 (t 25671 53312 279511 300000)) nil (25671 54457 207475 260000) 0 nil])
([nil nil ((4838 . 4839)) nil (25671 54457 207458 726000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -4832) (undo-tree-id1038 . -1) 4833 (t 25671 54457 211794 850000)) nil (25671 54468 213753 475000) 0 nil])
([nil nil ((4832 . 4835)) nil (25671 54468 213738 112000) 0 nil])
([nil nil ((#("d" 0 1 (face web-mode-css-property-name-face part-side css)) . -4857) (undo-tree-id1044 . -1) 4858 (t 25671 54468 219642 948000)) nil (25671 54513 300889 377000) 0 nil])
([nil nil ((#("0px -10px -15px" 0 1 (part-side css) 1 15 (part-side css)) . 4828) (undo-tree-id1041 . -15) (undo-tree-id1042 . -12) (undo-tree-id1043 . -15)) nil (25671 54513 300885 776000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 4828) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1)) nil (25671 54513 300876 579000) 0 nil])
([nil nil ((4732 . 4734) (t 25671 54513 310975 700000)) nil (25671 54539 668970 750000) 0 nil])
([nil nil ((#("/" 0 1 (part-side css)) . -4732) (undo-tree-id1104 . -1) (#("/" 0 1 (part-side css)) . -4733) (undo-tree-id1105 . -1) 4734) nil (25671 54539 668968 271000) 0 nil])
([nil nil ((#("
    margin: 0px;" 0 1 (part-side css) 1 5 (part-side css) 5 12 (face web-mode-css-property-name-face part-side css) 12 17 (part-side css)) . 4727) (undo-tree-id1045 . -17) (undo-tree-id1046 . -1) (undo-tree-id1047 . -5) (undo-tree-id1048 . -5) (undo-tree-id1049 . -5) (undo-tree-id1050 . -5) (undo-tree-id1051 . -5) (undo-tree-id1052 . -5) (undo-tree-id1053 . -5) (undo-tree-id1054 . -5) (undo-tree-id1055 . -5) (undo-tree-id1056 . -5) (undo-tree-id1057 . -5) (undo-tree-id1058 . -5) (undo-tree-id1059 . -5) (undo-tree-id1060 . -5) (undo-tree-id1061 . -5) (undo-tree-id1062 . -5) (undo-tree-id1063 . -5) (undo-tree-id1064 . -5) (undo-tree-id1065 . -5) (undo-tree-id1066 . -5) (undo-tree-id1067 . -5) (undo-tree-id1068 . -17) (undo-tree-id1069 . -17) (undo-tree-id1070 . -17) (undo-tree-id1071 . -17) (undo-tree-id1072 . -17) (undo-tree-id1073 . -17) (undo-tree-id1074 . -17) (undo-tree-id1075 . -17) (undo-tree-id1076 . -17) (undo-tree-id1077 . -17) (undo-tree-id1078 . -17) (undo-tree-id1079 . -17) (undo-tree-id1080 . -17) (undo-tree-id1081 . -17) (undo-tree-id1082 . -17) (undo-tree-id1083 . -17) (undo-tree-id1084 . -17) (undo-tree-id1085 . -17) (undo-tree-id1086 . -17) (undo-tree-id1087 . -17) (undo-tree-id1088 . -17) (undo-tree-id1089 . -17) (undo-tree-id1090 . -17) (undo-tree-id1091 . -17) (undo-tree-id1092 . -17) (undo-tree-id1093 . -17) (undo-tree-id1094 . -17) (undo-tree-id1095 . -17) (undo-tree-id1096 . -17) (undo-tree-id1097 . -17) (undo-tree-id1098 . -17) (undo-tree-id1099 . -17) (undo-tree-id1100 . -17) (undo-tree-id1101 . -17) (undo-tree-id1102 . -17) (undo-tree-id1103 . -17)) nil (25671 54539 668958 173000) 0 nil])
([nil nil ((#("d" 0 1 (face web-mode-css-property-name-face part-side css)) . -4736) (undo-tree-id1132 . -1) 4737 (t 25671 54539 678553 742000)) nil (25671 54595 476647 994000) 0 nil])
([nil nil ((4749 . 4752)) nil (25671 54595 476645 451000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4885 . 4886) (nil part-side css 4885 . 4886) (nil face (rainbow-delimiters-depth-1-face) 4885 . 4886) (nil part-side css 4882 . 4885) (nil part-side css 4877 . 4882) (nil part-side css 4869 . 4877) (nil face web-mode-css-property-name-face 4869 . 4877) (nil part-side css 4865 . 4869) (nil part-side css 4864 . 4865) (nil rear-nonsticky t 4863 . 4864) (nil part-side css 4863 . 4864) (nil rear-nonsticky t 4862 . 4863) (nil part-side css 4862 . 4863) (nil face web-mode-css-color-face 4862 . 4863) (nil part-side css 4856 . 4862) (nil face web-mode-css-color-face 4856 . 4862) (nil part-side css 4845 . 4856) (nil part-side css 4832 . 4845) (nil face web-mode-css-property-name-face 4832 . 4845) (nil part-side css 4828 . 4832) (nil part-side css 4827 . 4828) (nil rear-nonsticky t 4826 . 4827) (nil part-side css 4826 . 4827) (nil rear-nonsticky t 4825 . 4826) (nil part-side css 4825 . 4826) (nil face web-mode-css-color-face 4825 . 4826) (nil part-side css 4819 . 4825) (nil face web-mode-css-color-face 4819 . 4825) (nil part-side css 4808 . 4819) (nil part-side css 4794 . 4808) (nil face web-mode-css-property-name-face 4794 . 4808) (nil part-side css 4790 . 4794) (nil part-side css 4789 . 4790) (nil part-side css 4788 . 4789) (nil face (rainbow-delimiters-depth-1-face) 4788 . 4789) (nil part-side css 4784 . 4788) (nil face web-mode-css-selector-class-face 4784 . 4788) (nil part-side css 4779 . 4784) (nil face web-mode-css-selector-class-face 4779 . 4784) (nil part-side css 4776 . 4779) (nil face web-mode-css-selector-class-face 4776 . 4779) (nil part-side css 4775 . 4776) (nil face web-mode-css-selector-class-face 4775 . 4776) (nil rear-nonsticky t 4774 . 4775) (nil part-side css 4774 . 4775) (nil face web-mode-css-selector-class-face 4774 . 4775) (nil part-side css 4754 . 4774) (nil face web-mode-css-selector-class-face 4754 . 4774) (nil part-side css 4752 . 4754) (4752 . 4886)) nil (25671 54595 476642 52000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4752) (undo-tree-id1131 . -1) 4753) nil (25671 54595 476631 28000) 0 nil])
([nil nil ((#(".col" 0 4 (face web-mode-css-selector-class-face part-side css)) . 4647) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4)) nil (25671 54595 476628 638000) 0 nil])
([nil nil ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4646) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) 4647) nil (25671 54595 476625 376000) 0 nil])
([nil nil ((#("
    border-bottom: 1px solid #BDBDBD;
    border-right: 1px solid #BDBDBD;" 0 1 (part-side css) 1 5 (part-side css) 5 19 (face web-mode-css-property-name-face part-side css) 19 30 (part-side css) 30 36 (face web-mode-css-color-face part-side css) 36 37 (face web-mode-css-color-face part-side css rear-nonsticky t) 37 38 (part-side css rear-nonsticky t) 38 39 (part-side css) 39 43 (part-side css) 43 56 (face web-mode-css-property-name-face part-side css) 56 67 (part-side css) 67 73 (face web-mode-css-color-face part-side css) 73 74 (face web-mode-css-color-face part-side css rear-nonsticky t) 74 75 (part-side css rear-nonsticky t)) . 4647) (undo-tree-id1122 . -75) (undo-tree-id1123 . -1) (undo-tree-id1124 . -75) (undo-tree-id1125 . -75) (undo-tree-id1126 . -75)) nil (25671 54595 476621 562000) 0 nil])
([nil nil ((4659 . 4663)) nil (25671 54595 476613 495000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -4665) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) 4666) nil (25671 54603 641752 239000) 0 nil])
([nil nil ((4665 . 4666)) nil (25671 54605 454218 769000) 0 nil] [nil nil ((4665 . 4666)) ((#("5" 0 1 (part-side css)) . 4665) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (t 25671 54595 485589 465000)) (25671 54595 476577 873000) 0 nil])
([nil nil ((#("
  .sensor_expanded_info>td>.row{
    padding-top: 0px;
  }" 0 1 (part-side css) 1 3 (part-side css) 3 23 (face web-mode-css-selector-class-face part-side css) 23 24 (face web-mode-css-selector-class-face part-side css rear-nonsticky t) 24 25 (face web-mode-css-selector-class-face part-side css) 25 28 (face web-mode-css-selector-class-face part-side css) 28 32 (face web-mode-css-selector-class-face part-side css) 32 33 (face (rainbow-delimiters-depth-1-face) part-side css) 33 34 (part-side css) 34 38 (part-side css) 38 50 (face web-mode-css-property-name-face part-side css) 50 55 (part-side css) 55 58 (part-side css) 58 59 (face (rainbow-delimiters-depth-1-face) part-side css)) . 4614) (undo-tree-id1174 . -59) (undo-tree-id1175 . -59) (undo-tree-id1176 . -59) (undo-tree-id1177 . -55) (undo-tree-id1178 . -59) (undo-tree-id1179 . -59) (undo-tree-id1180 . -1) (undo-tree-id1181 . -33) (undo-tree-id1182 . -33) (undo-tree-id1183 . -59) (undo-tree-id1184 . -32) (undo-tree-id1185 . -52) (undo-tree-id1186 . -52) (undo-tree-id1187 . -52) (undo-tree-id1188 . -52) (undo-tree-id1189 . -52) (undo-tree-id1190 . -52) (undo-tree-id1191 . -52) (undo-tree-id1192 . -52) (undo-tree-id1193 . -52) (undo-tree-id1194 . -52) (undo-tree-id1195 . -52) (undo-tree-id1196 . -52) (undo-tree-id1197 . -52) (undo-tree-id1198 . -52) (undo-tree-id1199 . -52) (undo-tree-id1200 . -52) (undo-tree-id1201 . -52) (undo-tree-id1202 . -52) (undo-tree-id1203 . -52) (undo-tree-id1204 . -52) (undo-tree-id1205 . -59) (undo-tree-id1206 . -59) (undo-tree-id1207 . -59) (undo-tree-id1208 . -59) (undo-tree-id1209 . -59) (undo-tree-id1210 . -59) (undo-tree-id1211 . -59) (undo-tree-id1212 . -59) (undo-tree-id1213 . -59) (undo-tree-id1214 . -59) (undo-tree-id1215 . -55) (undo-tree-id1216 . -55) (undo-tree-id1217 . -55) (undo-tree-id1218 . -33) (undo-tree-id1219 . -33) (undo-tree-id1220 . -33) (undo-tree-id1221 . -33) (undo-tree-id1222 . -33) (undo-tree-id1223 . -33) (undo-tree-id1224 . -33) (undo-tree-id1225 . -33) (undo-tree-id1226 . -33) (undo-tree-id1227 . -33) (undo-tree-id1228 . -33) (undo-tree-id1229 . -59) (undo-tree-id1230 . -33) (undo-tree-id1231 . -59) (t 25671 54605 461407 505000)) nil (25671 54612 400166 198000) 0 nil])
nil
([nil nil ((#("
    padding: 0px;" 0 5 (part-side css) 5 13 (face web-mode-css-property-name-face part-side css) 13 18 (part-side css)) . 4727) (undo-tree-id1232 . -18) (undo-tree-id1233 . -1) (undo-tree-id1234 . -18) (undo-tree-id1235 . -18) (undo-tree-id1236 . -18) (undo-tree-id1237 . -18) (undo-tree-id1238 . -18) (undo-tree-id1239 . -18) (undo-tree-id1240 . -18) (undo-tree-id1241 . -18) (undo-tree-id1242 . -18) (undo-tree-id1243 . -18) (undo-tree-id1244 . -18) (t 25671 54612 405279 205000)) nil (25671 54626 184598 42000) 0 nil])
([nil nil ((4614 . 4617) (t 25671 54626 193020 557000)) nil (25671 54648 638818 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4732 . 4733) (nil rear-nonsticky t 4732 . 4733) (nil part-side css 4732 . 4733) (nil face (rainbow-delimiters-depth-1-face) 4732 . 4733) (nil part-side css 4729 . 4732) (nil part-side css 4728 . 4729) (nil part-side css 4721 . 4728) (nil face web-mode-css-color-face 4721 . 4728) (nil part-side css 4710 . 4721) (nil part-side css 4697 . 4710) (nil face web-mode-css-property-name-face 4697 . 4710) (nil part-side css 4691 . 4697) (nil part-side css 4684 . 4691) (nil face web-mode-css-color-face 4684 . 4691) (nil part-side css 4673 . 4684) (nil part-side css 4659 . 4673) (nil face web-mode-css-property-name-face 4659 . 4673) (nil part-side css 4654 . 4659) (nil part-side css 4653 . 4654) (nil face (rainbow-delimiters-depth-1-face) 4653 . 4654) (nil part-side css 4619 . 4653) (nil face web-mode-css-selector-class-face 4619 . 4653) (nil part-side css 4617 . 4619) (4617 . 4733)) nil (25671 54648 638816 86000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4617) (undo-tree-id1257 . -1) 4618) nil (25671 54648 638810 475000) 0 nil])
([nil nil ((#(".col" 0 4 (face web-mode-css-selector-class-face part-side css)) . 4647) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4)) nil (25671 54648 638807 860000) 0 nil])
([nil nil ((#(">" 0 1 (face web-mode-css-selector-class-face part-side css)) . -4646) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) 4647) nil (25671 54648 638804 592000) 0 nil])
([nil nil ((4722 . 4727)) nil (25671 54648 638801 330000) 0 nil])
([nil nil ((4727 . 4742)) nil (25671 54648 638800 363000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -4741) (undo-tree-id1252 . -1) 4742) nil (25671 54648 638799 246000) 0 nil])
([nil nil ((4741 . 4745)) nil (25671 54648 638796 921000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -4743) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (#(" " 0 1 (part-side css)) . -4744) (undo-tree-id1251 . -1) 4745) nil (25671 54648 638795 208000) 0 nil])
([nil nil ((4743 . 4745)) nil (25671 54648 638789 746000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4744) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) 4745) nil (25671 54648 638784 892000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -4740) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) 4741 (t 25671 54648 644588 575000)) nil (25671 54656 264528 346000) 0 nil])
([nil nil ((4740 . 4741)) nil (25671 54656 264492 863000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -4740) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 4741 (t 25671 54656 272438 852000)) nil (25671 54668 953810 380000) 0 nil])
([nil nil ((4740 . 4742)) nil (25671 54668 953749 865000) 0 nil])
([nil nil ((#("
    padding-top: 10px;" 0 1 (part-side css) 1 5 (part-side css) 5 17 (face web-mode-css-property-name-face part-side css) 17 23 (part-side css)) . 4722) (undo-tree-id1321 . -23) (undo-tree-id1322 . -11) (undo-tree-id1323 . -1) (undo-tree-id1324 . -23) (t 25671 54668 960186 576000)) nil (25671 54684 518049 395000) 0 nil])
([nil nil ((4610 . 4615)) nil (25671 54684 518043 537000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4637 . 4638) (nil part-side css 4632 . 4638) (nil part-side css 4620 . 4632) (nil face web-mode-css-property-name-face 4620 . 4632) (nil part-side css 4616 . 4620) (nil part-side css 4615 . 4616) (4615 . 4638)) nil (25671 54684 518041 991000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 4615) (undo-tree-id1319 . -1) (undo-tree-id1320 . 1)) nil (25671 54684 518038 316000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -4615)) nil (25671 54684 518020 274000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -4628) (undo-tree-id1325 . -1) 4629 (t 25671 54684 523871 716000)) nil (25671 54696 464261 627000) 0 nil])
([nil nil ((4628 . 4629)) nil (25671 54696 464245 988000) 0 nil])
([nil nil ((4593 . 4596) (t 25671 54696 471626 91000)) nil (25671 54719 916535 30000) 0 nil])
([nil nil ((#("/" 0 1 (part-side css)) . -4593) (undo-tree-id1359 . -1) (#("/" 0 1 (part-side css)) . -4594) (undo-tree-id1360 . -1) (#(" " 0 1 (part-side css)) . -4595) (undo-tree-id1361 . -1) 4596) nil (25671 54719 916533 219000) 0 nil])
([nil nil ((4593 . 4595)) nil (25671 54719 916528 307000) 0 nil])
([nil nil ((#("#" 0 1 (face web-mode-css-color-face part-side css)) . -4593) (undo-tree-id1357 . -1) (#(" " 0 1 (part-side css)) . -4594) (undo-tree-id1358 . -1) 4595) nil (25671 54719 916526 77000) 0 nil])
([nil nil ((#("
    overflow: hidden;" 0 1 (part-side css) 1 5 (part-side css) 5 11 (face web-mode-css-property-name-face part-side css) 11 14 (face web-mode-css-property-name-face part-side css) 14 21 (part-side css) 21 22 (part-side css)) . 4588) (undo-tree-id1326 . -22) (undo-tree-id1327 . -1) (undo-tree-id1328 . -5) (undo-tree-id1329 . -5) (undo-tree-id1330 . -5) (undo-tree-id1331 . -5) (undo-tree-id1332 . -5) (undo-tree-id1333 . -5) (undo-tree-id1334 . -5) (undo-tree-id1335 . -5) (undo-tree-id1336 . -5) (undo-tree-id1337 . -5) (undo-tree-id1338 . -5) (undo-tree-id1339 . -5) (undo-tree-id1340 . -5) (undo-tree-id1341 . -5) (undo-tree-id1342 . -5) (undo-tree-id1343 . -5) (undo-tree-id1344 . -5) (undo-tree-id1345 . -22) (undo-tree-id1346 . -22) (undo-tree-id1347 . -22) (undo-tree-id1348 . -22) (undo-tree-id1349 . -22) (undo-tree-id1350 . -22) (undo-tree-id1351 . -22) (undo-tree-id1352 . -22) (undo-tree-id1353 . -22) (undo-tree-id1354 . -22) (undo-tree-id1355 . -22) (undo-tree-id1356 . -22)) nil (25671 54719 916517 60000) 0 nil])
([nil nil ((#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -4593) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (#("a" 0 1 (face web-mode-css-property-name-face part-side css)) . -4594) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("d" 0 1 (face web-mode-css-property-name-face part-side css)) . -4595) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (#("d" 0 1 (face web-mode-css-property-name-face part-side css)) . -4596) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (#("i" 0 1 (face web-mode-css-property-name-face part-side css)) . -4597) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (#("n" 0 1 (face web-mode-css-property-name-face part-side css)) . -4598) (undo-tree-id1434 . -1) (#("g" 0 1 (face web-mode-css-property-name-face part-side css)) . -4599) (undo-tree-id1435 . -1) 4600 (t 25671 54719 923134 386000)) nil (25671 54730 656088 427000) 0 nil])
([nil nil ((4593 . 4600)) nil (25671 54730 656014 13000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4599) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) 4600) nil (25671 54730 656008 888000) 0 nil])
([nil nil ((#("    margin-top: 50px;
" 0 4 (part-side css) 4 10 (face web-mode-css-property-name-face part-side css) 10 15 (face web-mode-css-property-name-face part-side css) 15 20 (part-side css) 20 21 (part-side css rear-nonsticky t) 21 22 (part-side css)) . 4611) (undo-tree-id1438 . -21) (undo-tree-id1439 . -22) (undo-tree-id1440 . -4) (undo-tree-id1441 . -21) (4582 . 4611) (#("  .sensor_expanded_info td {
" 0 2 (part-side css) 2 23 (face web-mode-css-selector-class-face part-side css) 23 27 (part-side css) 27 28 (face (rainbow-delimiters-depth-1-face) part-side css) 28 29 (part-side css)) . 4560) (undo-tree-id1442 . -28) (4589 . 4611) 4610 (t 25671 54730 666904 992000)) nil (25671 54781 10282 111000) 0 nil])
([nil nil ((#("    margin-top: 50px;
" 0 4 (part-side css) 4 10 (face web-mode-css-selector-tag-face part-side css) 10 15 (face web-mode-css-selector-tag-face part-side css) 15 20 (face web-mode-css-selector-tag-face part-side css) 20 21 (part-side css rear-nonsticky t) 21 22 (part-side css)) . 4582) (undo-tree-id1436 . -21) (undo-tree-id1437 . -22) (4578 . 4582) (#("  }
" 0 2 (part-side css) 2 3 (face (rainbow-delimiters-depth-1-face) part-side css) 3 4 (part-side css)) . 4556) (4560 . 4582) 4581) nil (25671 54781 10269 453000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -4572) (undo-tree-id1444 . -1) 4573 (t 25671 54781 17797 287000)) nil (25671 54801 783444 632000) 0 nil])
([nil nil ((4572 . 4573)) nil (25671 54801 783441 372000) 0 nil])
([nil nil ((#("6" 0 1 (part-side css)) . -4572) (undo-tree-id1443 . -1) 4573) nil (25671 54801 783438 765000) 0 nil])
([nil nil ((4572 . 4574)) nil (25671 54801 783422 457000) 0 nil])
([nil nil ((#("m" 0 1 (face web-mode-css-property-name-face part-side css)) . -4560) (undo-tree-id1449 . -1) (#("a" 0 1 (face web-mode-css-property-name-face part-side css)) . -4561) (undo-tree-id1450 . -1) (#("r" 0 1 (face web-mode-css-property-name-face part-side css)) . -4562) (undo-tree-id1451 . -1) (#("g" 0 1 (face web-mode-css-property-name-face part-side css)) . -4563) (undo-tree-id1452 . -1) (#("i" 0 1 (face web-mode-css-property-name-face part-side css)) . -4564) (undo-tree-id1453 . -1) (#("n" 0 1 (face web-mode-css-property-name-face part-side css)) . -4565) (undo-tree-id1454 . -1) 4566 (t 25671 54801 793325 361000)) nil (25671 54809 562290 284000) 0 nil])
([nil nil ((4560 . 4568)) nil (25671 54809 562280 317000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4567) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 4568) nil (25671 54809 562275 491000) 0 nil])
([nil nil ((#("
    padding-top: 100px;" 0 1 (part-side css) 1 5 (part-side css) 5 12 (face web-mode-css-property-name-face part-side css) 12 17 (face web-mode-css-property-name-face part-side css) 17 23 (part-side css) 23 24 (part-side css rear-nonsticky t)) . 4555) (undo-tree-id1483 . -24) (undo-tree-id1484 . -1) (undo-tree-id1485 . -24) (t 25671 54809 569146 607000)) nil (25671 54861 812268 387000) 0 nil])
([nil nil ((#("
  .sensor_expanded_info td {
  }" 0 1 (part-side css) 1 3 (part-side css) 3 24 (face web-mode-css-selector-class-face part-side css) 24 28 (part-side css) 28 29 (face (rainbow-delimiters-depth-1-face) part-side css) 29 30 (part-side css) 30 32 (part-side css) 32 33 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 4559) (undo-tree-id1455 . -33) (undo-tree-id1456 . -33) (undo-tree-id1457 . -33) (undo-tree-id1458 . -1) (undo-tree-id1459 . -33) (undo-tree-id1460 . -33) (undo-tree-id1461 . -33) (undo-tree-id1462 . -33) (undo-tree-id1463 . -33) (undo-tree-id1464 . -33) (undo-tree-id1465 . -30) (undo-tree-id1466 . -29) (undo-tree-id1467 . -33) (undo-tree-id1468 . -33) (undo-tree-id1469 . -33) (undo-tree-id1470 . -33) (undo-tree-id1471 . -33) (undo-tree-id1472 . -33) (undo-tree-id1473 . -33) (undo-tree-id1474 . -29) (undo-tree-id1475 . -29) (undo-tree-id1476 . -29) (undo-tree-id1477 . -29) (undo-tree-id1478 . -29) (undo-tree-id1479 . -29) (undo-tree-id1480 . -29) (undo-tree-id1481 . -33) (undo-tree-id1482 . -33)) nil (25671 54861 812258 587000) 0 nil])
([nil nil ((#("
    border-bottom: 1px solid #BDBDBD;" 0 5 (part-side css) 5 19 (part-side css face web-mode-css-property-name-face) 19 30 (part-side css) 30 37 (part-side css face web-mode-css-color-face) 37 38 (part-side css)) . 4709) (undo-tree-id0 . -38) (undo-tree-id1 . -1) (undo-tree-id2 . -38) (undo-tree-id3 . -38) (undo-tree-id4 . -38) (undo-tree-id5 . -38) (undo-tree-id6 . -38) (undo-tree-id7 . -38) (undo-tree-id8 . -38) (undo-tree-id9 . -38) (undo-tree-id10 . -38) (undo-tree-id11 . -38) (undo-tree-id12 . -38) (undo-tree-id13 . -38) (undo-tree-id14 . -38) (undo-tree-id15 . -38) (undo-tree-id16 . -38) (undo-tree-id17 . -38) (undo-tree-id18 . -38) (undo-tree-id19 . -38) (undo-tree-id20 . -38) (undo-tree-id21 . -38) (undo-tree-id22 . -38) (undo-tree-id23 . -38) (undo-tree-id24 . -38) (undo-tree-id25 . -38) (undo-tree-id26 . -38) (undo-tree-id27 . -38) (undo-tree-id28 . -38) (undo-tree-id29 . -38) (undo-tree-id30 . -38) (undo-tree-id31 . -38) (undo-tree-id32 . -38) (undo-tree-id33 . -38) (undo-tree-id34 . -38) (t 25671 54861 819917 7000)) nil (25672 59701 91181 28000) 0 nil])
([nil nil ((4559 . 4562) (t 25672 59701 101762 137000)) nil (25672 60369 372661 75000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4668 . 4669) (nil part-side css 4668 . 4669) (nil face (rainbow-delimiters-depth-1-face) 4668 . 4669) (nil part-side css 4664 . 4668) (nil part-side css 4657 . 4664) (nil face web-mode-css-color-face 4657 . 4664) (nil part-side css 4656 . 4657) (nil part-side css 4639 . 4656) (nil face web-mode-css-property-name-face 4639 . 4656) (nil part-side css 4629 . 4639) (nil part-side css 4618 . 4629) (nil face web-mode-css-property-name-face 4618 . 4629) (nil part-side css 4607 . 4618) (nil part-side css 4592 . 4607) (nil face web-mode-css-property-name-face 4592 . 4607) (nil part-side css 4587 . 4592) (nil part-side css 4586 . 4587) (nil face (rainbow-delimiters-depth-1-face) 4586 . 4587) (nil part-side css 4585 . 4586) (nil part-side css 4564 . 4585) (nil face web-mode-css-selector-class-face 4564 . 4585) (nil part-side css 4562 . 4564) (4562 . 4669)) nil (25672 60369 372658 508000) 0 nil])
([nil nil ((4592 . 4594) 4591) nil (25672 60369 372650 950000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4562) 4566) nil (25672 60369 372649 274000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -4590)) nil (25672 60369 372647 620000) 0 nil])
([nil nil ((4583 . 4590)) nil (25672 60369 372646 246000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css face web-mode-css-pseudo-class-face)) . -4589) (undo-tree-id39 . -1) 4590) nil (25672 60369 372644 11000) 0 nil])
([nil nil ((#("
    pointer-events: auto;
    text-align:left;
    background-color: #ECEFF1;" 0 5 (part-side css) 5 20 (part-side css face web-mode-css-property-name-face) 20 31 (part-side css) 31 42 (part-side css face web-mode-css-property-name-face) 42 52 (part-side css) 52 69 (part-side css face web-mode-css-property-name-face) 69 70 (part-side css) 70 77 (part-side css face web-mode-css-color-face) 77 78 (part-side css)) . 4591) (undo-tree-id35 . -78) (undo-tree-id36 . -1) (undo-tree-id37 . -78) (undo-tree-id38 . -78)) nil (25672 60369 372637 463000) 0 nil])
([nil nil ((4591 . 4596) (t 25672 60369 380871 375000)) nil (25672 60392 500231 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4632 . 4633) (nil part-side css 4632 . 4633) (nil part-side css 4622 . 4632) (nil face web-mode-css-priority-face 4622 . 4632) (nil part-side css 4621 . 4622) (nil part-side css 4614 . 4621) (nil face web-mode-css-color-face 4614 . 4621) (nil part-side css 4613 . 4614) (nil part-side css 4596 . 4613) (nil face web-mode-css-property-name-face 4596 . 4613) (4596 . 4633)) nil (25672 60392 500229 585000) 0 nil])
([nil nil ((#("#BBDEFB" 0 7 (part-side css face web-mode-css-color-face)) . 4614) (undo-tree-id162 . -7) (undo-tree-id163 . -7)) nil (25672 60392 500225 856000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4620 . 4621) (nil part-side css 4614 . 4621) (nil face web-mode-css-color-face 4614 . 4621) (4614 . 4621)) nil (25672 60392 500222 310000) 0 nil])
([nil nil ((#("important" 0 9 (part-side css face web-mode-css-priority-face)) . 4623) (undo-tree-id145 . -9) (undo-tree-id146 . -7) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -9) (undo-tree-id161 . -9)) nil (25672 60392 500218 662000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4621) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("!" 0 1 (part-side css)) . -4622) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 4623) nil (25672 60392 500187 728000) 0 nil])
([nil nil ((4621 . 4622) (t 25672 60392 509084 582000)) nil (25672 60419 582734 642000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4631 . 4632) (nil part-side css 4622 . 4632) (nil face web-mode-css-priority-face 4622 . 4632) (4622 . 4632)) nil (25672 60419 582727 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3974 . 3975) (nil part-side css 3974 . 3975) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3974 . 3975) (nil part-side css 3966 . 3974) (nil face web-mode-css-pseudo-class-face 3966 . 3974) (nil part-side css 3965 . 3966) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3965 . 3966) (nil part-side css 3961 . 3965) (nil face web-mode-css-pseudo-class-face 3961 . 3965) (nil part-side css 3960 . 3961) (3960 . 3975) (t 25672 60419 593332 608000)) nil (25672 60510 95070 517000) 0 nil])
([nil nil ((#("disable" 0 7 (part-side css face web-mode-css-pseudo-class-face)) . 3967) (undo-tree-id180 . -7) (undo-tree-id181 . -7)) nil (25672 60510 95065 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3986 . 3987) (nil part-side css 3967 . 3987) (nil face web-mode-css-pseudo-class-face 3967 . 3987) (3967 . 3987)) nil (25672 60510 95061 692000) 0 nil])
([nil nil ((#("
  .sensor_expanded_info:hover {
    background-color: #ECEFF1 !important;
  }" 0 1 (part-side css) 1 3 (part-side css) 3 24 (part-side css face web-mode-css-selector-class-face) 24 30 (part-side css face web-mode-css-pseudo-class-face) 30 31 (part-side css face web-mode-css-pseudo-class-face) 31 32 (part-side css face (rainbow-delimiters-depth-1-face)) 32 33 (part-side css) 33 37 (part-side css) 37 54 (part-side css face web-mode-css-property-name-face) 54 55 (part-side css) 55 61 (part-side css face web-mode-css-color-face) 61 62 (rear-nonsticky t part-side css face web-mode-css-color-face) 62 63 (part-side css) 63 72 (part-side css face web-mode-css-priority-face) 72 73 (rear-nonsticky t part-side css face web-mode-css-priority-face) 73 74 (rear-nonsticky t part-side css) 74 77 (part-side css) 77 78 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face))) . 4587) (undo-tree-id164 . -78) (undo-tree-id165 . -29) (undo-tree-id166 . -1) (undo-tree-id167 . -3) (undo-tree-id168 . -32) (undo-tree-id169 . -37) (undo-tree-id170 . -55) (undo-tree-id171 . -55) (undo-tree-id172 . -62) (undo-tree-id173 . -63) (undo-tree-id174 . -38) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -78) (undo-tree-id179 . -78)) nil (25672 60510 95055 340000) 0 nil])
([nil nil ((#("&:not(.sensor_expanded_info)" 0 1 (part-side css) 1 5 (part-side css face web-mode-css-pseudo-class-face) 5 6 (part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face)) 6 7 (part-side css face web-mode-css-pseudo-class-face) 7 26 (part-side css face web-mode-css-pseudo-class-face) 26 27 (rear-nonsticky t part-side css face web-mode-css-pseudo-class-face) 27 28 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face))) . 3960) (undo-tree-id182 . -28) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -28) (undo-tree-id186 . -28) (t 25672 60510 106149 605000)) nil (25672 60617 425416 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3987 . 3988) (nil rear-nonsticky t 3987 . 3988) (nil part-side css 3987 . 3988) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3987 . 3988) (nil rear-nonsticky t 3986 . 3987) (nil part-side css 3986 . 3987) (nil face web-mode-css-pseudo-class-face 3986 . 3987) (nil part-side css 3967 . 3986) (nil face web-mode-css-pseudo-class-face 3967 . 3986) (nil part-side css 3966 . 3967) (nil face web-mode-css-pseudo-class-face 3966 . 3967) (nil part-side css 3965 . 3966) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3965 . 3966) (nil part-side css 3961 . 3965) (nil face web-mode-css-pseudo-class-face 3961 . 3965) (nil part-side css 3960 . 3961) (3960 . 3988)) nil (25672 60621 927608 690000) 0 nil] [nil nil ((nil rear-nonsticky nil 3965 . 3966) (nil rear-nonsticky t 3965 . 3966) (nil part-side css 3965 . 3966) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3965 . 3966) (nil rear-nonsticky t 3964 . 3965) (nil part-side css 3964 . 3965) (nil face web-mode-css-pseudo-class-face 3964 . 3965) (nil part-side css 3945 . 3964) (nil face web-mode-css-pseudo-class-face 3945 . 3964) (nil part-side css 3944 . 3945) (nil face web-mode-css-pseudo-class-face 3944 . 3945) (nil part-side css 3943 . 3944) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3943 . 3944) (nil part-side css 3939 . 3943) (nil face web-mode-css-pseudo-class-face 3939 . 3943) (nil part-side css 3938 . 3939) (3938 . 3966)) ((#("&:not(.sensor_expanded_info)" 0 1 (part-side css) 1 5 (part-side css face web-mode-css-pseudo-class-face) 5 6 (part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face)) 6 26 (part-side css face web-mode-css-pseudo-class-face) 26 27 (rear-nonsticky t part-side css face web-mode-css-pseudo-class-face) 27 28 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face))) . 3938) (undo-tree-id187 . -28) (undo-tree-id188 . -28) (undo-tree-id189 . -28) (undo-tree-id190 . -28) (undo-tree-id191 . -28) (undo-tree-id192 . -28) (undo-tree-id193 . -28) (undo-tree-id194 . -28) (undo-tree-id195 . -28) (undo-tree-id196 . -28) (undo-tree-id197 . -28) (undo-tree-id198 . -28) (undo-tree-id199 . -28) (undo-tree-id200 . -28) (undo-tree-id201 . -28) (undo-tree-id202 . -28) (undo-tree-id203 . -28) (undo-tree-id204 . -28) (undo-tree-id205 . -28) (undo-tree-id206 . -28) (undo-tree-id207 . -28) (undo-tree-id208 . -28) (undo-tree-id209 . -28) (undo-tree-id210 . -28) (undo-tree-id211 . -28) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3943 . 3944) (nil rear-nonsticky nil 3964 . 3965) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3965 . 3966) (nil rear-nonsticky nil 3965 . 3966) (nil rear-nonsticky t 3965 . 3966) (t 25672 60562 894618 541000)) (25672 60562 886897 902000) 0 nil])
([nil nil ((#("&" 0 1 (part-side css)) . -3960) (undo-tree-id212 . -1) 3961 (t 25672 60621 939137 280000)) nil (25672 60828 292973 18000) 0 nil])
nil
([nil nil ((#("a" 0 1 (part-side css)) . -4525) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("u" 0 1 (part-side css)) . -4526) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("t" 0 1 (part-side css)) . -4527) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("o" 0 1 (part-side css)) . -4528) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 4529) nil (25672 60831 624092 50000) 0 nil] [nil nil ((#("
    pointer-events: auto;" 0 5 (part-side css) 5 20 (part-side css face web-mode-css-property-name-face) 20 26 (part-side css)) . 4504) (undo-tree-id213 . -26) (undo-tree-id214 . -26) (undo-tree-id215 . -1) (undo-tree-id216 . -26) (undo-tree-id217 . -26) (t 25672 60674 479594 275000)) ((4504 . 4530) (t 25672 60802 396691 333000)) (25672 60802 388181 593000) 0 nil])
([nil nil ((4525 . 4529)) nil (25672 60928 26034 263000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3895 . 3896) (nil rear-nonsticky t 3895 . 3896) (nil part-side css 3895 . 3896) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3895 . 3896) (nil part-side css 3874 . 3895) (nil face web-mode-css-pseudo-class-face 3874 . 3895) (nil part-side css 3873 . 3874) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3873 . 3874) (nil part-side css 3869 . 3873) (nil face web-mode-css-pseudo-class-face 3869 . 3873) (3869 . 3896)) nil (25672 60931 524569 725000) 0 nil] [nil nil ((#("#ECEFF1" 0 7 (part-side css face web-mode-css-color-face)) . 4574) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (t 25672 60831 632868 982000)) ((4574 . 4581)) (25672 60927 663375 245000) 0 nil])
([nil nil ((#("
    pointer-events: none;" 0 5 (part-side css) 5 20 (part-side css face web-mode-css-property-name-face) 20 26 (part-side css)) . 4531) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -1) (undo-tree-id254 . -26) (undo-tree-id255 . -26) (t 25672 60931 533825 763000)) nil (25672 61871 868874 990000) 0 nil])
([nil nil ((4574 . 4580)) ((#("white " 0 5 (part-side css) 5 6 (part-side css)) . 4574) (undo-tree-id236 . -5) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6)) (25672 60927 190911 395000) 0 nil])
([nil nil ((4582 . 4583) (t 25672 61871 875770 140000)) nil (25672 61940 430912 284000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -4579) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) 4580) ((4579 . 4580) (t 25672 60868 87681 560000)) (25672 60926 863675 679000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4592 . 4593) (nil part-side css 4583 . 4593) (nil face web-mode-css-priority-face 4583 . 4593) (4583 . 4593)) nil (25672 61940 430904 993000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3895 . 3896) (nil rear-nonsticky t 3895 . 3896) (nil part-side css 3895 . 3896) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3895 . 3896) (nil part-side css 3874 . 3895) (nil face web-mode-css-pseudo-class-face 3874 . 3895) (nil part-side css 3873 . 3874) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3873 . 3874) (nil part-side css 3869 . 3873) (nil face web-mode-css-pseudo-class-face 3869 . 3873) (3869 . 3896) (t 25672 60868 87681 560000)) ((#(":not(.sensor_expanded_info)" 0 4 (part-side css face web-mode-css-pseudo-class-face) 4 5 (part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face)) 5 26 (part-side css face web-mode-css-pseudo-class-face) 26 27 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face))) . 3869) (undo-tree-id235 . -27) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3873 . 3874) (nil face (rainbow-delimiters-depth-1-face web-mode-css-pseudo-class-face) 3895 . 3896) (nil rear-nonsticky nil 3895 . 3896) (nil rear-nonsticky t 3895 . 3896)) (25672 60926 861731 225000) 0 nil])
([nil nil ((4506 . 4508) (#("  " 0 2 (part-side css face whitespace-trailing)) . 4505) (4505 . 4507) (4505 . 4506) (t 25672 61940 435683 435000)) nil (25672 62078 570392 446000) 0 nil])
nil
([nil nil ((4506 . 4508) (#("  " 0 2 (part-side css face whitespace-trailing)) . 4505) (4505 . 4507) (4505 . 4506)) nil (25672 62078 570389 740000) 0 nil])
([nil nil ((4519 . 4521) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -4519) (4508 . 4520)) nil (25672 62078 570386 953000) 0 nil])
([nil nil ((4522 . 4524) (#("    " 0 4 (part-side css face whitespace-trailing)) . 4521) (undo-tree-id259 . -2) (undo-tree-id260 . 4) (4523 . 4525) (4520 . 4524)) nil (25672 62078 570384 632000) 0 nil])
([nil nil ((4525 . 4526)) nil (25672 62078 570379 834000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -4525) (undo-tree-id258 . -1) 4526) nil (25672 62078 570378 75000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 4505) (undo-tree-id257 . -1)) nil (25672 62078 570374 546000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 4525) (undo-tree-id256 . -1) (#(" " 0 1 (part-side css face whitespace-trailing)) . 4525) (#(" " 0 1 (part-side css face whitespace-trailing)) . 4525)) nil (25672 62078 570369 281000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4540 . 4541) (nil part-side css 4535 . 4541) (nil part-side css 4520 . 4535) (nil face web-mode-css-property-name-face 4520 . 4535) (4520 . 4541)) nil (25672 62078 570354 826000) 0 nil])
([nil current ((4520 . 4524) 4541) nil (25672 62078 570344 676000) 0 nil])
nil
