(undo-tree-save-format-version . 1)
"92beaf75790cabd870317d760b4459592ea7fcdf"
[nil nil nil nil (25353 6997 3536 399000) 0 nil]
([nil nil ((#("<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sed quisquam ut perspiciatis, repudiandae nulla animi iste vel, praesentium repellendus molestias aliquid consequatur, earum rem qui error voluptates eius enim consequuntur!</p>

<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ex alias, earum consectetur quia natus ducimus voluptate explicabo, hic porro reprehenderit, quasi? Tenetur ipsum distinctio laboriosam perspiciatis officiis dolore, architecto id.</p>

<p class=\"mb-5\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam inventore aspernatur repellendus incidunt adipisci modi voluptates recusandae iste eligendi, repudiandae corporis quod aut, optio! Explicabo quaerat unde voluptatem! Itaque, eum!</p>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 150 234 (face (whitespace-line)) 234 235 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 235 236 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 236 237 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 237 238 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 240 241 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 241 242 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 242 243 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 390 481 (face (whitespace-line)) 481 482 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 482 483 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 483 484 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 484 485 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 487 488 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 488 489 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 489 490 (tag-type start tag-name "p") 490 491 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 491 495 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 495 496 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 496 501 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 501 502 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 502 503 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 637 745 (face (whitespace-line)) 745 746 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 746 747 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 747 748 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 748 749 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 106) (undo-tree-id32 . -750) (undo-tree-id33 . -750) (undo-tree-id34 . -750) (undo-tree-id35 . -750) (undo-tree-id36 . -750) (undo-tree-id37 . -239) (undo-tree-id38 . -750) (undo-tree-id39 . -750) (undo-tree-id40 . -750) (undo-tree-id41 . -750) (t 25351 50392 735742 0)) nil (25353 6997 3533 803000) 0 nil])
([nil nil ((nil tag-name "div" 1751 . 1752) (nil tag-type end 1751 . 1752) (nil tag-end t 1751 . 1752) (nil font-lock-face web-mode-html-tag-bracket-face 1751 . 1752) (nil tag-name "div" 1748 . 1751) (nil tag-type end 1748 . 1751) (nil font-lock-face web-mode-html-tag-face 1748 . 1751) (nil tag-name "div" 1747 . 1748) (nil tag-type end 1747 . 1748) (nil font-lock-face web-mode-html-tag-bracket-face 1747 . 1748) (nil tag-name "div" 1746 . 1747) (nil tag-type end 1746 . 1747) (nil tag-beg 20 1746 . 1747) (nil font-lock-face web-mode-html-tag-bracket-face 1746 . 1747) (nil tag-name "div" 1740 . 1741) (nil tag-type end 1740 . 1741) (nil tag-end t 1740 . 1741) (nil font-lock-face web-mode-html-tag-bracket-face 1740 . 1741) (nil tag-name "div" 1737 . 1740) (nil tag-type end 1737 . 1740) (nil font-lock-face web-mode-html-tag-face 1737 . 1740) (nil tag-name "div" 1736 . 1737) (nil tag-type end 1736 . 1737) (nil font-lock-face web-mode-html-tag-bracket-face 1736 . 1737) (nil tag-name "div" 1735 . 1736) (nil tag-type end 1735 . 1736) (nil tag-beg 20 1735 . 1736) (nil font-lock-face web-mode-html-tag-bracket-face 1735 . 1736) (nil tag-name "div" 1727 . 1728) (nil tag-type end 1727 . 1728) (nil tag-end t 1727 . 1728) (nil font-lock-face web-mode-html-tag-bracket-face 1727 . 1728) (nil tag-name "div" 1724 . 1727) (nil tag-type end 1724 . 1727) (nil font-lock-face web-mode-html-tag-face 1724 . 1727) (nil tag-name "div" 1723 . 1724) (nil tag-type end 1723 . 1724) (nil font-lock-face web-mode-html-tag-bracket-face 1723 . 1724) (nil tag-name "div" 1722 . 1723) (nil tag-type end 1722 . 1723) (nil tag-beg 20 1722 . 1723) (nil font-lock-face web-mode-html-tag-bracket-face 1722 . 1723) (nil tag-name "div" 1711 . 1712) (nil tag-type end 1711 . 1712) (nil tag-end t 1711 . 1712) (nil font-lock-face web-mode-html-tag-bracket-face 1711 . 1712) (nil tag-name "div" 1708 . 1711) (nil tag-type end 1708 . 1711) (nil font-lock-face web-mode-html-tag-face 1708 . 1711) (nil tag-name "div" 1707 . 1708) (nil tag-type end 1707 . 1708) (nil font-lock-face web-mode-html-tag-bracket-face 1707 . 1708) (nil tag-name "div" 1706 . 1707) (nil tag-type end 1706 . 1707) (nil tag-beg 20 1706 . 1707) (nil font-lock-face web-mode-html-tag-bracket-face 1706 . 1707) (nil tag-name "a" 1694 . 1695) (nil tag-type end 1694 . 1695) (nil tag-end t 1694 . 1695) (nil font-lock-face web-mode-html-tag-bracket-face 1694 . 1695) (nil tag-name "a" 1693 . 1694) (nil tag-type end 1693 . 1694) (nil font-lock-face web-mode-html-tag-face 1693 . 1694) (nil tag-name "a" 1692 . 1693) (nil tag-type end 1692 . 1693) (nil font-lock-face web-mode-html-tag-bracket-face 1692 . 1693) (nil tag-name "a" 1691 . 1692) (nil tag-type end 1691 . 1692) (nil tag-beg 20 1691 . 1692) (nil font-lock-face web-mode-html-tag-bracket-face 1691 . 1692) (nil font-lock-face (web-mode-html-entity-face) 1685 . 1691) (nil tag-name "a" 1669 . 1670) (nil tag-type start 1669 . 1670) (nil tag-end t 1669 . 1670) (nil font-lock-face web-mode-html-tag-bracket-face 1669 . 1670) (nil tag-name "a" 1668 . 1669) (nil tag-type start 1668 . 1669) (nil block-side t 1667 . 1668) (nil block-end t 1667 . 1668) (nil block-token delimiter-end 1667 . 1668) (nil tag-name "a" 1667 . 1668) (nil tag-type start 1667 . 1668) (nil font-lock-face web-mode-block-delimiter-face 1667 . 1668) (nil block-side t 1666 . 1667) (nil block-token delimiter-end 1666 . 1667) (nil tag-name "a" 1666 . 1667) (nil tag-type start 1666 . 1667) (nil font-lock-face web-mode-block-delimiter-face 1666 . 1667) (nil block-side t 1665 . 1666) (nil tag-name "a" 1665 . 1666) (nil tag-type start 1665 . 1666) (nil block-side t 1664 . 1665) (nil tag-attr t 1664 . 1665) (nil tag-attr-end 0 1664 . 1665) (nil tag-name "a" 1664 . 1665) (nil tag-type start 1664 . 1665) (nil face web-mode-filter-face 1664 . 1665) (nil block-side t 1654 . 1664) (nil tag-attr t 1654 . 1664) (nil tag-name "a" 1654 . 1664) (nil tag-type start 1654 . 1664) (nil face web-mode-filter-face 1654 . 1664) (nil block-side t 1653 . 1654) (nil tag-attr-beg 0 1653 . 1654) (nil tag-attr t 1653 . 1654) (nil tag-name "a" 1653 . 1654) (nil tag-type start 1653 . 1654) (nil face web-mode-filter-face 1653 . 1654) (nil block-side t 1652 . 1653) (nil tag-name "a" 1652 . 1653) (nil tag-type start 1652 . 1653) (nil block-side t 1651 . 1652) (nil tag-attr-beg 0 1651 . 1652) (nil tag-attr t 1651 . 1652) (nil tag-attr-end 0 1651 . 1652) (nil tag-name "a" 1651 . 1652) (nil tag-type start 1651 . 1652) (nil block-side t 1650 . 1651) (nil tag-name "a" 1650 . 1651) (nil tag-type start 1650 . 1651) (nil block-side t 1649 . 1650) (nil block-token string 1649 . 1650) (nil tag-name "a" 1649 . 1650) (nil tag-type start 1649 . 1650) (nil font-lock-face web-mode-block-string-face 1649 . 1650) (nil block-side t 1644 . 1649) (nil block-token string 1644 . 1649) (nil tag-name "a" 1644 . 1649) (nil tag-type start 1644 . 1649) (nil font-lock-face web-mode-block-string-face 1644 . 1649) (nil block-side t 1643 . 1644) (nil block-token string 1643 . 1644) (nil tag-name "a" 1643 . 1644) (nil tag-type start 1643 . 1644) (nil font-lock-face web-mode-block-string-face 1643 . 1644) (nil block-side t 1642 . 1643) (nil block-token string 1642 . 1643) (nil tag-attr t 1642 . 1643) (nil tag-attr-end 4 1642 . 1643) (nil tag-name "a" 1642 . 1643) (nil tag-type start 1642 . 1643) (nil font-lock-face web-mode-block-string-face 1642 . 1643) (nil block-side t 1641 . 1642) (nil block-token delimiter-beg 1641 . 1642) (nil tag-attr t 1641 . 1642) (nil tag-name "a" 1641 . 1642) (nil tag-type start 1641 . 1642) (nil font-lock-face web-mode-block-delimiter-face 1641 . 1642) (nil block-beg 0 1640 . 1641) (nil block-controls 0 1640 . 1641) (nil block-side t 1640 . 1641) (nil block-token delimiter-beg 1640 . 1641) (nil tag-attr t 1640 . 1641) (nil tag-name "a" 1640 . 1641) (nil tag-type start 1640 . 1641) (nil font-lock-face web-mode-block-delimiter-face 1640 . 1641) (nil tag-attr t 1639 . 1640) (nil tag-name "a" 1639 . 1640) (nil tag-type start 1639 . 1640) (nil font-lock-face web-mode-html-attr-value-face 1639 . 1640) (nil tag-attr t 1638 . 1639) (nil tag-name "a" 1638 . 1639) (nil tag-type start 1638 . 1639) (nil font-lock-face web-mode-html-attr-equal-face 1638 . 1639) (nil tag-attr t 1635 . 1638) (nil tag-name "a" 1635 . 1638) (nil tag-type start 1635 . 1638) (nil font-lock-face web-mode-html-attr-name-face 1635 . 1638) (nil tag-attr-beg 0 1634 . 1635) (nil tag-attr t 1634 . 1635) (nil tag-name "a" 1634 . 1635) (nil tag-type start 1634 . 1635) (nil font-lock-face web-mode-html-attr-name-face 1634 . 1635) (nil tag-name "a" 1633 . 1634) (nil tag-type start 1633 . 1634) (nil tag-attr t 1632 . 1633) (nil tag-attr-end 5 1632 . 1633) (nil tag-name "a" 1632 . 1633) (nil tag-type start 1632 . 1633) (nil font-lock-face web-mode-html-attr-value-face 1632 . 1633) (nil tag-attr t 1604 . 1632) (nil tag-name "a" 1604 . 1632) (nil tag-type start 1604 . 1632) (nil font-lock-face web-mode-html-attr-value-face 1604 . 1632) (nil tag-attr t 1603 . 1604) (nil tag-name "a" 1603 . 1604) (nil tag-type start 1603 . 1604) (nil font-lock-face web-mode-html-attr-equal-face 1603 . 1604) (nil tag-attr t 1599 . 1603) (nil tag-name "a" 1599 . 1603) (nil tag-type start 1599 . 1603) (nil font-lock-face web-mode-html-attr-name-face 1599 . 1603) (nil tag-attr-beg 0 1598 . 1599) (nil tag-attr t 1598 . 1599) (nil tag-name "a" 1598 . 1599) (nil tag-type start 1598 . 1599) (nil font-lock-face web-mode-html-attr-name-face 1598 . 1599) (nil tag-name "a" 1597 . 1598) (nil tag-type start 1597 . 1598) (nil tag-name "a" 1596 . 1597) (nil tag-type start 1596 . 1597) (nil font-lock-face web-mode-html-tag-face 1596 . 1597) (nil tag-name "a" 1595 . 1596) (nil tag-type start 1595 . 1596) (nil tag-beg 17 1595 . 1596) (nil font-lock-face web-mode-html-tag-bracket-face 1595 . 1596) (nil tag-name "div" 1581 . 1582) (nil tag-type start 1581 . 1582) (nil tag-end t 1581 . 1582) (nil font-lock-face web-mode-html-tag-bracket-face 1581 . 1582) (nil tag-attr t 1580 . 1581) (nil tag-attr-end 5 1580 . 1581) (nil tag-name "div" 1580 . 1581) (nil tag-type start 1580 . 1581) (nil font-lock-face web-mode-html-attr-value-face 1580 . 1581) (nil tag-attr t 1571 . 1580) (nil tag-name "div" 1571 . 1580) (nil tag-type start 1571 . 1580) (nil font-lock-face web-mode-html-attr-value-face 1571 . 1580) (nil tag-attr t 1570 . 1571) (nil tag-name "div" 1570 . 1571) (nil tag-type start 1570 . 1571) (nil font-lock-face web-mode-html-attr-equal-face 1570 . 1571) (nil tag-attr t 1566 . 1570) (nil tag-name "div" 1566 . 1570) (nil tag-type start 1566 . 1570) (nil font-lock-face web-mode-html-attr-name-face 1566 . 1570) (nil tag-attr-beg 0 1565 . 1566) (nil tag-attr t 1565 . 1566) (nil tag-name "div" 1565 . 1566) (nil tag-type start 1565 . 1566) (nil font-lock-face web-mode-html-attr-name-face 1565 . 1566) (nil tag-name "div" 1564 . 1565) (nil tag-type start 1564 . 1565) (nil tag-name "div" 1561 . 1564) (nil tag-type start 1561 . 1564) (nil font-lock-face web-mode-html-tag-face 1561 . 1564) (nil tag-name "div" 1560 . 1561) (nil tag-type start 1560 . 1561) (nil tag-beg 17 1560 . 1561) (nil font-lock-face web-mode-html-tag-bracket-face 1560 . 1561) (nil tag-type comment 1548 . 1549) (nil tag-end t 1548 . 1549) (nil font-lock-face web-mode-comment-face 1548 . 1549) (nil tag-type comment 1536 . 1548) (nil font-lock-face web-mode-comment-face 1536 . 1548) (nil tag-type comment 1535 . 1536) (nil tag-beg 0 1535 . 1536) (nil font-lock-face web-mode-comment-face 1535 . 1536) (nil block-side t 1522 . 1523) (nil block-end t 1522 . 1523) (nil block-token delimiter-end 1522 . 1523) (nil font-lock-face web-mode-block-delimiter-face 1522 . 1523) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1522 . 1523) (nil block-side t 1521 . 1522) (nil block-token delimiter-end 1521 . 1522) (nil font-lock-face web-mode-block-delimiter-face 1521 . 1522) (nil block-side t 1520 . 1521) (nil block-side t 1514 . 1520) (nil face web-mode-block-control-face 1514 . 1520) (nil block-side t 1513 . 1514) (nil block-side t 1512 . 1513) (nil block-token delimiter-beg 1512 . 1513) (nil font-lock-face web-mode-block-delimiter-face 1512 . 1513) (nil block-beg 0 1511 . 1512) (nil block-controls 0 1511 . 1512) (nil block-side t 1511 . 1512) (nil block-token delimiter-beg 1511 . 1512) (nil font-lock-face web-mode-block-delimiter-face 1511 . 1512) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1511 . 1512) (nil tag-name "hr" 1498 . 1499) (nil tag-type void 1498 . 1499) (nil tag-end t 1498 . 1499) (nil font-lock-face web-mode-html-tag-bracket-face 1498 . 1499) (nil tag-name "hr" 1496 . 1498) (nil tag-type void 1496 . 1498) (nil font-lock-face web-mode-html-tag-face 1496 . 1498) (nil tag-name "hr" 1495 . 1496) (nil tag-type void 1495 . 1496) (nil tag-beg 16 1495 . 1496) (nil font-lock-face web-mode-html-tag-bracket-face 1495 . 1496) (nil tag-name "article" 1480 . 1481) (nil tag-type end 1480 . 1481) (nil tag-end t 1480 . 1481) (nil font-lock-face web-mode-html-tag-bracket-face 1480 . 1481) (nil tag-name "article" 1473 . 1480) (nil tag-type end 1473 . 1480) (nil font-lock-face web-mode-html-tag-face 1473 . 1480) (nil tag-name "article" 1472 . 1473) (nil tag-type end 1472 . 1473) (nil font-lock-face web-mode-html-tag-bracket-face 1472 . 1473) (nil tag-name "article" 1471 . 1472) (nil tag-type end 1471 . 1472) (nil tag-beg 20 1471 . 1472) (nil font-lock-face web-mode-html-tag-bracket-face 1471 . 1472) (nil tag-name "p" 1457 . 1458) (nil tag-type end 1457 . 1458) (nil tag-end t 1457 . 1458) (nil font-lock-face web-mode-html-tag-bracket-face 1457 . 1458) (nil tag-name "p" 1456 . 1457) (nil tag-type end 1456 . 1457) (nil font-lock-face web-mode-html-tag-face 1456 . 1457) (nil tag-name "p" 1455 . 1456) (nil tag-type end 1455 . 1456) (nil font-lock-face web-mode-html-tag-bracket-face 1455 . 1456) (nil tag-name "p" 1454 . 1455) (nil tag-type end 1454 . 1455) (nil tag-beg 20 1454 . 1455) (nil font-lock-face web-mode-html-tag-bracket-face 1454 . 1455) (nil block-side t 1438 . 1439) (nil block-end t 1438 . 1439) (nil block-token delimiter-end 1438 . 1439) (nil font-lock-face web-mode-block-delimiter-face 1438 . 1439) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1438 . 1439) (nil block-side t 1437 . 1438) (nil block-token delimiter-end 1437 . 1438) (nil font-lock-face web-mode-block-delimiter-face 1437 . 1438) (nil block-side t 1436 . 1437) (nil block-side t 1424 . 1436) (nil face web-mode-variable-name-face 1424 . 1436) (nil block-side t 1423 . 1424) (nil block-side t 1416 . 1423) (nil face web-mode-variable-name-face 1416 . 1423) (nil block-side t 1415 . 1416) (nil block-side t 1401 . 1415) (nil face web-mode-variable-name-face 1401 . 1415) (nil block-side t 1400 . 1401) (nil block-side t 1393 . 1400) (nil face web-mode-block-control-face 1393 . 1400) (nil block-side t 1392 . 1393) (nil block-side t 1391 . 1392) (nil block-token delimiter-beg 1391 . 1392) (nil font-lock-face web-mode-block-delimiter-face 1391 . 1392) (nil block-beg 0 1390 . 1391) (nil block-controls 0 1390 . 1391) (nil block-side t 1390 . 1391) (nil block-token delimiter-beg 1390 . 1391) (nil font-lock-face web-mode-block-delimiter-face 1390 . 1391) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1390 . 1391) (nil font-lock-face (web-mode-html-entity-face) 1381 . 1389) (nil block-side t 1379 . 1380) (nil block-end t 1379 . 1380) (nil block-token delimiter-end 1379 . 1380) (nil font-lock-face web-mode-block-delimiter-face 1379 . 1380) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1379 . 1380) (nil block-side t 1378 . 1379) (nil block-token delimiter-end 1378 . 1379) (nil font-lock-face web-mode-block-delimiter-face 1378 . 1379) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1378 . 1379) (nil block-side t 1377 . 1378) (nil block-side t 1376 . 1377) (nil block-token string 1376 . 1377) (nil font-lock-face web-mode-block-string-face 1376 . 1377) (nil block-side t 1375 . 1376) (nil block-token string 1375 . 1376) (nil font-lock-face web-mode-block-string-face 1375 . 1376) (nil block-side t 1372 . 1375) (nil block-token string 1372 . 1375) (nil font-lock-face web-mode-block-string-face 1372 . 1375) (nil block-side t 1371 . 1372) (nil block-token string 1371 . 1372) (nil font-lock-face web-mode-block-string-face 1371 . 1372) (nil block-side t 1369 . 1371) (nil block-token string 1369 . 1371) (nil font-lock-face web-mode-block-string-face 1369 . 1371) (nil block-side t 1368 . 1369) (nil block-token string 1368 . 1369) (nil font-lock-face web-mode-block-string-face 1368 . 1369) (nil block-side t 1366 . 1368) (nil block-token string 1366 . 1368) (nil font-lock-face web-mode-block-string-face 1366 . 1368) (nil block-side t 1364 . 1366) (nil block-side t 1360 . 1364) (nil face web-mode-filter-face 1360 . 1364) (nil block-side t 1357 . 1360) (nil block-side t 1353 . 1357) (nil face web-mode-variable-name-face 1353 . 1357) (nil block-side t 1352 . 1353) (nil block-side t 1348 . 1352) (nil face web-mode-variable-name-face 1348 . 1352) (nil block-side t 1347 . 1348) (nil block-side t 1346 . 1347) (nil block-token delimiter-beg 1346 . 1347) (nil font-lock-face web-mode-block-delimiter-face 1346 . 1347) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1346 . 1347) (nil block-beg 0 1345 . 1346) (nil block-controls 0 1345 . 1346) (nil block-side t 1345 . 1346) (nil block-token delimiter-beg 1345 . 1346) (nil font-lock-face web-mode-block-delimiter-face 1345 . 1346) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1345 . 1346) (nil block-side t 1308 . 1309) (nil block-end t 1308 . 1309) (nil block-token delimiter-end 1308 . 1309) (nil font-lock-face web-mode-block-delimiter-face 1308 . 1309) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1308 . 1309) (nil block-side t 1307 . 1308) (nil block-token delimiter-end 1307 . 1308) (nil font-lock-face web-mode-block-delimiter-face 1307 . 1308) (nil block-side t 1306 . 1307) (nil block-side t 1301 . 1306) (nil face web-mode-block-control-face 1301 . 1306) (nil block-side t 1300 . 1301) (nil block-side t 1299 . 1300) (nil block-token delimiter-beg 1299 . 1300) (nil font-lock-face web-mode-block-delimiter-face 1299 . 1300) (nil block-beg 0 1298 . 1299) (nil block-controls 0 1298 . 1299) (nil block-side t 1298 . 1299) (nil block-token delimiter-beg 1298 . 1299) (nil font-lock-face web-mode-block-delimiter-face 1298 . 1299) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1298 . 1299) (nil block-side t 1280 . 1281) (nil block-end t 1280 . 1281) (nil block-token delimiter-end 1280 . 1281) (nil font-lock-face web-mode-block-delimiter-face 1280 . 1281) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1280 . 1281) (nil block-side t 1279 . 1280) (nil block-token delimiter-end 1279 . 1280) (nil font-lock-face web-mode-block-delimiter-face 1279 . 1280) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1279 . 1280) (nil block-side t 1278 . 1279) (nil block-side t 1272 . 1278) (nil face web-mode-variable-name-face 1272 . 1278) (nil block-side t 1271 . 1272) (nil block-side t 1267 . 1271) (nil face web-mode-variable-name-face 1267 . 1271) (nil block-side t 1266 . 1267) (nil block-side t 1265 . 1266) (nil block-token delimiter-beg 1265 . 1266) (nil font-lock-face web-mode-block-delimiter-face 1265 . 1266) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1265 . 1266) (nil block-beg 0 1264 . 1265) (nil block-controls 0 1264 . 1265) (nil block-side t 1264 . 1265) (nil block-token delimiter-beg 1264 . 1265) (nil font-lock-face web-mode-block-delimiter-face 1264 . 1265) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1264 . 1265) (nil block-side t 1244 . 1245) (nil block-end t 1244 . 1245) (nil block-token delimiter-end 1244 . 1245) (nil font-lock-face web-mode-block-delimiter-face 1244 . 1245) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1244 . 1245) (nil block-side t 1243 . 1244) (nil block-token delimiter-end 1243 . 1244) (nil font-lock-face web-mode-block-delimiter-face 1243 . 1244) (nil block-side t 1242 . 1243) (nil block-side t 1238 . 1242) (nil face web-mode-block-control-face 1238 . 1242) (nil block-side t 1237 . 1238) (nil block-side t 1236 . 1237) (nil block-token delimiter-beg 1236 . 1237) (nil font-lock-face web-mode-block-delimiter-face 1236 . 1237) (nil block-beg 0 1235 . 1236) (nil block-controls 0 1235 . 1236) (nil block-side t 1235 . 1236) (nil block-token delimiter-beg 1235 . 1236) (nil font-lock-face web-mode-block-delimiter-face 1235 . 1236) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1235 . 1236) (nil block-side t 1217 . 1218) (nil block-end t 1217 . 1218) (nil block-token delimiter-end 1217 . 1218) (nil font-lock-face web-mode-block-delimiter-face 1217 . 1218) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1217 . 1218) (nil block-side t 1216 . 1217) (nil block-token delimiter-end 1216 . 1217) (nil font-lock-face web-mode-block-delimiter-face 1216 . 1217) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1216 . 1217) (nil block-side t 1215 . 1216) (nil block-side t 1209 . 1215) (nil face web-mode-variable-name-face 1209 . 1215) (nil block-side t 1208 . 1209) (nil block-side t 1204 . 1208) (nil face web-mode-variable-name-face 1204 . 1208) (nil block-side t 1203 . 1204) (nil block-side t 1202 . 1203) (nil block-token delimiter-beg 1202 . 1203) (nil font-lock-face web-mode-block-delimiter-face 1202 . 1203) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1202 . 1203) (nil block-beg 0 1201 . 1202) (nil block-controls 0 1201 . 1202) (nil block-side t 1201 . 1202) (nil block-token delimiter-beg 1201 . 1202) (nil font-lock-face web-mode-block-delimiter-face 1201 . 1202) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1201 . 1202) (nil block-side t 1181 . 1182) (nil block-end t 1181 . 1182) (nil block-token delimiter-end 1181 . 1182) (nil font-lock-face web-mode-block-delimiter-face 1181 . 1182) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1181 . 1182) (nil block-side t 1180 . 1181) (nil block-token delimiter-end 1180 . 1181) (nil font-lock-face web-mode-block-delimiter-face 1180 . 1181) (nil block-side t 1179 . 1180) (nil block-side t 1168 . 1179) (nil face web-mode-variable-name-face 1168 . 1179) (nil block-side t 1167 . 1168) (nil block-side t 1165 . 1167) (nil face web-mode-block-control-face 1165 . 1167) (nil block-side t 1164 . 1165) (nil block-side t 1163 . 1164) (nil block-token delimiter-beg 1163 . 1164) (nil font-lock-face web-mode-block-delimiter-face 1163 . 1164) (nil block-beg 0 1162 . 1163) (nil block-controls 0 1162 . 1163) (nil block-side t 1162 . 1163) (nil block-token delimiter-beg 1162 . 1163) (nil font-lock-face web-mode-block-delimiter-face 1162 . 1163) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1162 . 1163) (nil tag-name "p" 1135 . 1136) (nil tag-type start 1135 . 1136) (nil tag-end t 1135 . 1136) (nil font-lock-face web-mode-html-tag-bracket-face 1135 . 1136) (nil tag-attr t 1134 . 1135) (nil tag-attr-end 5 1134 . 1135) (nil tag-name "p" 1134 . 1135) (nil tag-type start 1134 . 1135) (nil font-lock-face web-mode-html-attr-value-face 1134 . 1135) (nil tag-attr t 1124 . 1134) (nil tag-name "p" 1124 . 1134) (nil tag-type start 1124 . 1134) (nil font-lock-face web-mode-html-attr-value-face 1124 . 1134) (nil tag-attr t 1123 . 1124) (nil tag-name "p" 1123 . 1124) (nil tag-type start 1123 . 1124) (nil font-lock-face web-mode-html-attr-equal-face 1123 . 1124) (nil tag-attr t 1119 . 1123) (nil tag-name "p" 1119 . 1123) (nil tag-type start 1119 . 1123) (nil font-lock-face web-mode-html-attr-name-face 1119 . 1123) (nil tag-attr-beg 0 1118 . 1119) (nil tag-attr t 1118 . 1119) (nil tag-name "p" 1118 . 1119) (nil tag-type start 1118 . 1119) (nil font-lock-face web-mode-html-attr-name-face 1118 . 1119) (nil tag-name "p" 1117 . 1118) (nil tag-type start 1117 . 1118) (nil tag-name "p" 1116 . 1117) (nil tag-type start 1116 . 1117) (nil font-lock-face web-mode-html-tag-face 1116 . 1117) (nil tag-name "p" 1115 . 1116) (nil tag-type start 1115 . 1116) (nil tag-beg 17 1115 . 1116) (nil font-lock-face web-mode-html-tag-bracket-face 1115 . 1116) (nil tag-name "a" 1099 . 1100) (nil tag-type end 1099 . 1100) (nil tag-end t 1099 . 1100) (nil font-lock-face web-mode-html-tag-bracket-face 1099 . 1100) (nil tag-name "a" 1098 . 1099) (nil tag-type end 1098 . 1099) (nil font-lock-face web-mode-html-tag-face 1098 . 1099) (nil tag-name "a" 1097 . 1098) (nil tag-type end 1097 . 1098) (nil font-lock-face web-mode-html-tag-bracket-face 1097 . 1098) (nil tag-name "a" 1096 . 1097) (nil tag-type end 1096 . 1097) (nil tag-beg 20 1096 . 1097) (nil font-lock-face web-mode-html-tag-bracket-face 1096 . 1097) (nil block-side t 1080 . 1081) (nil block-end t 1080 . 1081) (nil block-token delimiter-end 1080 . 1081) (nil font-lock-face web-mode-block-delimiter-face 1080 . 1081) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1080 . 1081) (nil block-side t 1079 . 1080) (nil block-token delimiter-end 1079 . 1080) (nil font-lock-face web-mode-block-delimiter-face 1079 . 1080) (nil block-side t 1078 . 1079) (nil block-side t 1073 . 1078) (nil face web-mode-block-control-face 1073 . 1078) (nil block-side t 1072 . 1073) (nil block-side t 1071 . 1072) (nil block-token delimiter-beg 1071 . 1072) (nil font-lock-face web-mode-block-delimiter-face 1071 . 1072) (nil block-beg 0 1070 . 1071) (nil block-controls 0 1070 . 1071) (nil block-side t 1070 . 1071) (nil block-token delimiter-beg 1070 . 1071) (nil font-lock-face web-mode-block-delimiter-face 1070 . 1071) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1070 . 1071) (nil tag-name "h3" 1052 . 1053) (nil tag-type end 1052 . 1053) (nil tag-end t 1052 . 1053) (nil font-lock-face web-mode-html-tag-bracket-face 1052 . 1053) (nil tag-name "h3" 1050 . 1052) (nil tag-type end 1050 . 1052) (nil font-lock-face web-mode-html-tag-face 1050 . 1052) (nil tag-name "h3" 1049 . 1050) (nil tag-type end 1049 . 1050) (nil font-lock-face web-mode-html-tag-bracket-face 1049 . 1050) (nil tag-name "h3" 1048 . 1049) (nil tag-type end 1048 . 1049) (nil tag-beg 20 1048 . 1049) (nil font-lock-face web-mode-html-tag-bracket-face 1048 . 1049) (nil block-side t 1047 . 1048) (nil block-end t 1047 . 1048) (nil block-token delimiter-end 1047 . 1048) (nil font-lock-face web-mode-block-delimiter-face 1047 . 1048) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1047 . 1048) (nil block-side t 1046 . 1047) (nil block-token delimiter-end 1046 . 1047) (nil font-lock-face web-mode-block-delimiter-face 1046 . 1047) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1046 . 1047) (nil block-side t 1045 . 1046) (nil block-side t 1043 . 1045) (nil face web-mode-variable-name-face 1043 . 1045) (nil block-side t 1041 . 1043) (nil block-side t 1028 . 1041) (nil face web-mode-filter-face 1028 . 1041) (nil block-side t 1025 . 1028) (nil block-side t 1015 . 1025) (nil face web-mode-filter-face 1015 . 1025) (nil block-side t 1012 . 1015) (nil block-side t 1005 . 1012) (nil face web-mode-variable-name-face 1005 . 1012) (nil block-side t 1004 . 1005) (nil block-side t 1000 . 1004) (nil face web-mode-variable-name-face 1000 . 1004) (nil block-side t 999 . 1000) (nil block-side t 998 . 999) (nil block-token delimiter-beg 998 . 999) (nil font-lock-face web-mode-block-delimiter-face 998 . 999) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 998 . 999) (nil block-beg 0 997 . 998) (nil block-controls 0 997 . 998) (nil block-side t 997 . 998) (nil block-token delimiter-beg 997 . 998) (nil font-lock-face web-mode-block-delimiter-face 997 . 998) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 997 . 998) (nil tag-name "h3" 996 . 997) (nil tag-type start 996 . 997) (nil tag-end t 996 . 997) (nil font-lock-face web-mode-html-tag-bracket-face 996 . 997) (nil tag-attr t 995 . 996) (nil tag-attr-end 5 995 . 996) (nil tag-name "h3" 995 . 996) (nil tag-type start 995 . 996) (nil font-lock-face web-mode-html-attr-value-face 995 . 996) (nil tag-attr t 981 . 995) (nil tag-name "h3" 981 . 995) (nil tag-type start 981 . 995) (nil font-lock-face web-mode-html-attr-value-face 981 . 995) (nil tag-attr t 980 . 981) (nil tag-name "h3" 980 . 981) (nil tag-type start 980 . 981) (nil font-lock-face web-mode-html-attr-equal-face 980 . 981) (nil tag-attr t 976 . 980) (nil tag-name "h3" 976 . 980) (nil tag-type start 976 . 980) (nil font-lock-face web-mode-html-attr-name-face 976 . 980) (nil tag-attr-beg 0 975 . 976) (nil tag-attr t 975 . 976) (nil tag-name "h3" 975 . 976) (nil tag-type start 975 . 976) (nil font-lock-face web-mode-html-attr-name-face 975 . 976) (nil tag-name "h3" 974 . 975) (nil tag-type start 974 . 975) (nil tag-name "h3" 972 . 974) (nil tag-type start 972 . 974) (nil font-lock-face web-mode-html-tag-face 972 . 974) (nil tag-name "h3" 971 . 972) (nil tag-type start 971 . 972) (nil tag-beg 17 971 . 972) (nil font-lock-face web-mode-html-tag-bracket-face 971 . 972) (nil block-side t 951 . 952) (nil block-end t 951 . 952) (nil block-token delimiter-end 951 . 952) (nil font-lock-face web-mode-block-delimiter-face 951 . 952) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 951 . 952) (nil block-side t 950 . 951) (nil block-token delimiter-end 950 . 951) (nil font-lock-face web-mode-block-delimiter-face 950 . 951) (nil block-side t 949 . 950) (nil block-side t 945 . 949) (nil face web-mode-block-control-face 945 . 949) (nil block-side t 944 . 945) (nil block-side t 943 . 944) (nil block-token delimiter-beg 943 . 944) (nil font-lock-face web-mode-block-delimiter-face 943 . 944) (nil block-beg 0 942 . 943) (nil block-controls 0 942 . 943) (nil block-side t 942 . 943) (nil block-token delimiter-beg 942 . 943) (nil font-lock-face web-mode-block-delimiter-face 942 . 943) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 942 . 943) (nil tag-name "h3" 924 . 925) (nil tag-type end 924 . 925) (nil tag-end t 924 . 925) (nil font-lock-face web-mode-html-tag-bracket-face 924 . 925) (nil tag-name "h3" 922 . 924) (nil tag-type end 922 . 924) (nil font-lock-face web-mode-html-tag-face 922 . 924) (nil tag-name "h3" 921 . 922) (nil tag-type end 921 . 922) (nil font-lock-face web-mode-html-tag-bracket-face 921 . 922) (nil tag-name "h3" 920 . 921) (nil tag-type end 920 . 921) (nil tag-beg 20 920 . 921) (nil font-lock-face web-mode-html-tag-bracket-face 920 . 921) (nil block-side t 919 . 920) (nil block-end t 919 . 920) (nil block-token delimiter-end 919 . 920) (nil font-lock-face web-mode-block-delimiter-face 919 . 920) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 919 . 920) (nil block-side t 918 . 919) (nil block-token delimiter-end 918 . 919) (nil font-lock-face web-mode-block-delimiter-face 918 . 919) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 918 . 919) (nil block-side t 917 . 918) (nil block-side t 909 . 917) (nil face web-mode-variable-name-face 909 . 917) (nil block-side t 908 . 909) (nil block-side t 904 . 908) (nil face web-mode-variable-name-face 904 . 908) (nil block-side t 903 . 904) (nil block-side t 902 . 903) (nil block-token delimiter-beg 902 . 903) (nil font-lock-face web-mode-block-delimiter-face 902 . 903) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 902 . 903) (nil block-beg 0 901 . 902) (nil block-controls 0 901 . 902) (nil block-side t 901 . 902) (nil block-token delimiter-beg 901 . 902) (nil font-lock-face web-mode-block-delimiter-face 901 . 902) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 901 . 902) (nil tag-name "h3" 900 . 901) (nil tag-type start 900 . 901) (nil tag-end t 900 . 901) (nil font-lock-face web-mode-html-tag-bracket-face 900 . 901) (nil tag-attr t 899 . 900) (nil tag-attr-end 5 899 . 900) (nil tag-name "h3" 899 . 900) (nil tag-type start 899 . 900) (nil font-lock-face web-mode-html-attr-value-face 899 . 900) (nil tag-attr t 885 . 899) (nil tag-name "h3" 885 . 899) (nil tag-type start 885 . 899) (nil font-lock-face web-mode-html-attr-value-face 885 . 899) (nil tag-attr t 884 . 885) (nil tag-name "h3" 884 . 885) (nil tag-type start 884 . 885) (nil font-lock-face web-mode-html-attr-equal-face 884 . 885) (nil tag-attr t 880 . 884) (nil tag-name "h3" 880 . 884) (nil tag-type start 880 . 884) (nil font-lock-face web-mode-html-attr-name-face 880 . 884) (nil tag-attr-beg 0 879 . 880) (nil tag-attr t 879 . 880) (nil tag-name "h3" 879 . 880) (nil tag-type start 879 . 880) (nil font-lock-face web-mode-html-attr-name-face 879 . 880) (nil tag-name "h3" 878 . 879) (nil tag-type start 878 . 879) (nil tag-name "h3" 876 . 878) (nil tag-type start 876 . 878) (nil font-lock-face web-mode-html-tag-face 876 . 878) (nil tag-name "h3" 875 . 876) (nil tag-type start 875 . 876) (nil tag-beg 17 875 . 876) (nil font-lock-face web-mode-html-tag-bracket-face 875 . 876) (nil block-side t 855 . 856) (nil block-end t 855 . 856) (nil block-token delimiter-end 855 . 856) (nil font-lock-face web-mode-block-delimiter-face 855 . 856) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 855 . 856) (nil block-side t 854 . 855) (nil block-token delimiter-end 854 . 855) (nil font-lock-face web-mode-block-delimiter-face 854 . 855) (nil block-side t 853 . 854) (nil block-side t 840 . 853) (nil face web-mode-variable-name-face 840 . 853) (nil block-side t 839 . 840) (nil block-side t 837 . 839) (nil face web-mode-block-control-face 837 . 839) (nil block-side t 836 . 837) (nil block-side t 835 . 836) (nil block-token delimiter-beg 835 . 836) (nil font-lock-face web-mode-block-delimiter-face 835 . 836) (nil block-beg 0 834 . 835) (nil block-controls 0 834 . 835) (nil block-side t 834 . 835) (nil block-token delimiter-beg 834 . 835) (nil font-lock-face web-mode-block-delimiter-face 834 . 835) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 834 . 835) (nil tag-name "h2" 816 . 817) (nil tag-type end 816 . 817) (nil tag-end t 816 . 817) (nil font-lock-face web-mode-html-tag-bracket-face 816 . 817) (nil tag-name "h2" 814 . 816) (nil tag-type end 814 . 816) (nil font-lock-face web-mode-html-tag-face 814 . 816) (nil tag-name "h2" 813 . 814) (nil tag-type end 813 . 814) (nil font-lock-face web-mode-html-tag-bracket-face 813 . 814) (nil tag-name "h2" 812 . 813) (nil tag-type end 812 . 813) (nil tag-beg 20 812 . 813) (nil font-lock-face web-mode-html-tag-bracket-face 812 . 813) (nil block-side t 811 . 812) (nil block-end t 811 . 812) (nil block-token delimiter-end 811 . 812) (nil font-lock-face web-mode-block-delimiter-face 811 . 812) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 811 . 812) (nil block-side t 810 . 811) (nil block-token delimiter-end 810 . 811) (nil font-lock-face web-mode-block-delimiter-face 810 . 811) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 810 . 811) (nil block-side t 809 . 810) (nil block-side t 804 . 809) (nil face web-mode-variable-name-face 804 . 809) (nil block-side t 803 . 804) (nil block-side t 799 . 803) (nil face web-mode-variable-name-face 799 . 803) (nil block-side t 798 . 799) (nil block-side t 797 . 798) (nil block-token delimiter-beg 797 . 798) (nil font-lock-face web-mode-block-delimiter-face 797 . 798) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 797 . 798) (nil block-beg 0 796 . 797) (nil block-controls 0 796 . 797) (nil block-side t 796 . 797) (nil block-token delimiter-beg 796 . 797) (nil font-lock-face web-mode-block-delimiter-face 796 . 797) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 796 . 797) (nil tag-name "h2" 795 . 796) (nil tag-type start 795 . 796) (nil tag-end t 795 . 796) (nil font-lock-face web-mode-html-tag-bracket-face 795 . 796) (nil tag-attr t 794 . 795) (nil tag-attr-end 5 794 . 795) (nil tag-name "h2" 794 . 795) (nil tag-type start 794 . 795) (nil font-lock-face web-mode-html-attr-value-face 794 . 795) (nil tag-attr t 783 . 794) (nil tag-name "h2" 783 . 794) (nil tag-type start 783 . 794) (nil font-lock-face web-mode-html-attr-value-face 783 . 794) (nil tag-attr t 782 . 783) (nil tag-name "h2" 782 . 783) (nil tag-type start 782 . 783) (nil font-lock-face web-mode-html-attr-equal-face 782 . 783) (nil tag-attr t 778 . 782) (nil tag-name "h2" 778 . 782) (nil tag-type start 778 . 782) (nil font-lock-face web-mode-html-attr-name-face 778 . 782) (nil tag-attr-beg 0 777 . 778) (nil tag-attr t 777 . 778) (nil tag-name "h2" 777 . 778) (nil tag-type start 777 . 778) (nil font-lock-face web-mode-html-attr-name-face 777 . 778) (nil tag-name "h2" 776 . 777) (nil tag-type start 776 . 777) (nil tag-name "h2" 774 . 776) (nil tag-type start 774 . 776) (nil font-lock-face web-mode-html-tag-face 774 . 776) (nil tag-name "h2" 773 . 774) (nil tag-type start 773 . 774) (nil tag-beg 17 773 . 774) (nil font-lock-face web-mode-html-tag-bracket-face 773 . 774) (nil tag-name "a" 755 . 756) (nil tag-type start 755 . 756) (nil tag-end t 755 . 756) (nil font-lock-face web-mode-html-tag-bracket-face 755 . 756) (nil tag-attr t 754 . 755) (nil tag-attr-end 4 754 . 755) (nil tag-name "a" 754 . 755) (nil tag-type start 754 . 755) (nil font-lock-face web-mode-html-attr-value-face 754 . 755) (nil block-side t 753 . 754) (nil block-end t 753 . 754) (nil block-token delimiter-end 753 . 754) (nil tag-attr t 753 . 754) (nil tag-name "a" 753 . 754) (nil tag-type start 753 . 754) (nil font-lock-face web-mode-block-delimiter-face 753 . 754) (nil block-side t 752 . 753) (nil block-token delimiter-end 752 . 753) (nil tag-attr t 752 . 753) (nil tag-name "a" 752 . 753) (nil tag-type start 752 . 753) (nil font-lock-face web-mode-block-delimiter-face 752 . 753) (nil block-side t 751 . 752) (nil tag-attr t 751 . 752) (nil tag-name "a" 751 . 752) (nil tag-type start 751 . 752) (nil block-side t 748 . 751) (nil block-token string 748 . 751) (nil tag-attr t 748 . 751) (nil tag-name "a" 748 . 751) (nil tag-type start 748 . 751) (nil font-lock-face web-mode-block-string-face 748 . 751) (nil block-side t 746 . 748) (nil tag-attr t 746 . 748) (nil tag-name "a" 746 . 748) (nil tag-type start 746 . 748) (nil block-side t 742 . 746) (nil block-token string 742 . 746) (nil tag-attr t 742 . 746) (nil tag-name "a" 742 . 746) (nil tag-type start 742 . 746) (nil font-lock-face web-mode-block-string-face 742 . 746) (nil block-side t 740 . 742) (nil tag-attr t 740 . 742) (nil tag-name "a" 740 . 742) (nil tag-type start 740 . 742) (nil block-side t 733 . 740) (nil tag-attr t 733 . 740) (nil tag-name "a" 733 . 740) (nil tag-type start 733 . 740) (nil face web-mode-filter-face 733 . 740) (nil block-side t 730 . 733) (nil tag-attr t 730 . 733) (nil tag-name "a" 730 . 733) (nil tag-type start 730 . 733) (nil block-side t 723 . 730) (nil tag-attr t 723 . 730) (nil tag-name "a" 723 . 730) (nil tag-type start 723 . 730) (nil face web-mode-variable-name-face 723 . 730) (nil block-side t 722 . 723) (nil tag-attr t 722 . 723) (nil tag-name "a" 722 . 723) (nil tag-type start 722 . 723) (nil block-side t 718 . 722) (nil tag-attr t 718 . 722) (nil tag-name "a" 718 . 722) (nil tag-type start 718 . 722) (nil face web-mode-variable-name-face 718 . 722) (nil block-side t 716 . 718) (nil tag-attr t 716 . 718) (nil tag-name "a" 716 . 718) (nil tag-type start 716 . 718) (nil block-side t 709 . 716) (nil tag-attr t 709 . 716) (nil tag-name "a" 709 . 716) (nil tag-type start 709 . 716) (nil face web-mode-filter-face 709 . 716) (nil block-side t 706 . 709) (nil tag-attr t 706 . 709) (nil tag-name "a" 706 . 709) (nil tag-type start 706 . 709) (nil block-side t 703 . 706) (nil tag-attr t 703 . 706) (nil tag-name "a" 703 . 706) (nil tag-type start 703 . 706) (nil face web-mode-variable-name-face 703 . 706) (nil block-side t 702 . 703) (nil tag-attr t 702 . 703) (nil tag-name "a" 702 . 703) (nil tag-type start 702 . 703) (nil block-side t 698 . 702) (nil tag-attr t 698 . 702) (nil tag-name "a" 698 . 702) (nil tag-type start 698 . 702) (nil face web-mode-variable-name-face 698 . 702) (nil block-side t 697 . 698) (nil tag-attr t 697 . 698) (nil tag-name "a" 697 . 698) (nil tag-type start 697 . 698) (nil block-side t 696 . 697) (nil block-token delimiter-beg 696 . 697) (nil tag-attr t 696 . 697) (nil tag-name "a" 696 . 697) (nil tag-type start 696 . 697) (nil font-lock-face web-mode-block-delimiter-face 696 . 697) (nil block-beg 0 695 . 696) (nil block-controls 0 695 . 696) (nil block-side t 695 . 696) (nil block-token delimiter-beg 695 . 696) (nil tag-attr t 695 . 696) (nil tag-name "a" 695 . 696) (nil tag-type start 695 . 696) (nil font-lock-face web-mode-block-delimiter-face 695 . 696) (nil tag-attr t 694 . 695) (nil tag-name "a" 694 . 695) (nil tag-type start 694 . 695) (nil font-lock-face web-mode-html-attr-value-face 694 . 695) (nil tag-attr t 693 . 694) (nil tag-name "a" 693 . 694) (nil tag-type start 693 . 694) (nil font-lock-face web-mode-html-attr-equal-face 693 . 694) (nil tag-attr t 690 . 693) (nil tag-name "a" 690 . 693) (nil tag-type start 690 . 693) (nil font-lock-face web-mode-html-attr-name-face 690 . 693) (nil tag-attr-beg 0 689 . 690) (nil tag-attr t 689 . 690) (nil tag-name "a" 689 . 690) (nil tag-type start 689 . 690) (nil font-lock-face web-mode-html-attr-name-face 689 . 690) (nil tag-name "a" 688 . 689) (nil tag-type start 688 . 689) (nil tag-name "a" 687 . 688) (nil tag-type start 687 . 688) (nil font-lock-face web-mode-html-tag-face 687 . 688) (nil tag-name "a" 686 . 687) (nil tag-type start 686 . 687) (nil tag-beg 17 686 . 687) (nil font-lock-face web-mode-html-tag-bracket-face 686 . 687) (nil tag-name "article" 670 . 671) (nil tag-type start 670 . 671) (nil tag-end t 670 . 671) (nil font-lock-face web-mode-html-tag-bracket-face 670 . 671) (nil tag-attr t 669 . 670) (nil tag-attr-end 5 669 . 670) (nil tag-name "article" 669 . 670) (nil tag-type start 669 . 670) (nil font-lock-face web-mode-html-attr-value-face 669 . 670) (nil tag-attr t 656 . 669) (nil tag-name "article" 656 . 669) (nil tag-type start 656 . 669) (nil font-lock-face web-mode-html-attr-value-face 656 . 669) (nil tag-attr t 655 . 656) (nil tag-name "article" 655 . 656) (nil tag-type start 655 . 656) (nil font-lock-face web-mode-html-attr-equal-face 655 . 656) (nil tag-attr t 651 . 655) (nil tag-name "article" 651 . 655) (nil tag-type start 651 . 655) (nil font-lock-face web-mode-html-attr-name-face 651 . 655) (nil tag-attr-beg 0 650 . 651) (nil tag-attr t 650 . 651) (nil tag-name "article" 650 . 651) (nil tag-type start 650 . 651) (nil font-lock-face web-mode-html-attr-name-face 650 . 651) (nil tag-name "article" 649 . 650) (nil tag-type start 649 . 650) (nil tag-name "article" 642 . 649) (nil tag-type start 642 . 649) (nil font-lock-face web-mode-html-tag-face 642 . 649) (nil tag-name "article" 641 . 642) (nil tag-type start 641 . 642) (nil tag-beg 17 641 . 642) (nil font-lock-face web-mode-html-tag-bracket-face 641 . 642) (nil block-side t 626 . 627) (nil block-end t 626 . 627) (nil block-token delimiter-end 626 . 627) (nil font-lock-face web-mode-block-delimiter-face 626 . 627) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 626 . 627) (nil block-side t 625 . 626) (nil block-token delimiter-end 625 . 626) (nil font-lock-face web-mode-block-delimiter-face 625 . 626) (nil block-side t 624 . 625) (nil block-side t 623 . 624) (nil face web-mode-variable-name-face 623 . 624) (nil block-side t 620 . 623) (nil block-side t 615 . 620) (nil face web-mode-variable-name-face 615 . 620) (nil block-side t 614 . 615) (nil block-side t 604 . 614) (nil face web-mode-variable-name-face 604 . 614) (nil block-side t 603 . 604) (nil block-side t 601 . 603) (nil face web-mode-keyword-face 601 . 603) (nil block-side t 600 . 601) (nil block-side t 596 . 600) (nil face web-mode-variable-name-face 596 . 600) (nil block-side t 595 . 596) (nil block-side t 592 . 595) (nil face web-mode-block-control-face 592 . 595) (nil block-side t 591 . 592) (nil block-side t 590 . 591) (nil block-token delimiter-beg 590 . 591) (nil font-lock-face web-mode-block-delimiter-face 590 . 591) (nil block-beg 0 589 . 590) (nil block-controls 0 589 . 590) (nil block-side t 589 . 590) (nil block-token delimiter-beg 589 . 590) (nil font-lock-face web-mode-block-delimiter-face 589 . 590) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 589 . 590) (nil tag-type comment 577 . 578) (nil tag-end t 577 . 578) (nil font-lock-face web-mode-comment-face 577 . 578) (nil tag-type comment 556 . 577) (nil font-lock-face web-mode-comment-face 556 . 577) (nil tag-type comment 555 . 556) (nil tag-beg 0 555 . 556) (nil font-lock-face web-mode-comment-face 555 . 556) (nil block-side t 542 . 543) (nil block-end t 542 . 543) (nil block-token delimiter-end 542 . 543) (nil font-lock-face web-mode-block-delimiter-face 542 . 543) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 542 . 543) (nil block-side t 541 . 542) (nil block-token delimiter-end 541 . 542) (nil font-lock-face web-mode-block-delimiter-face 541 . 542) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 541 . 542) (nil block-side t 540 . 541) (nil block-side t 533 . 540) (nil face web-mode-variable-name-face 533 . 540) (nil block-side t 532 . 533) (nil block-side t 531 . 532) (nil block-token delimiter-beg 531 . 532) (nil font-lock-face web-mode-block-delimiter-face 531 . 532) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 531 . 532) (nil block-beg 0 530 . 531) (nil block-controls 0 530 . 531) (nil block-side t 530 . 531) (nil block-token delimiter-beg 530 . 531) (nil font-lock-face web-mode-block-delimiter-face 530 . 531) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 530 . 531) (nil tag-name "div" 517 . 518) (nil tag-type start 517 . 518) (nil tag-end t 517 . 518) (nil font-lock-face web-mode-html-tag-bracket-face 517 . 518) (nil tag-attr t 516 . 517) (nil tag-attr-end 5 516 . 517) (nil tag-name "div" 516 . 517) (nil tag-type start 516 . 517) (nil font-lock-face web-mode-html-attr-value-face 516 . 517) (nil tag-attr t 489 . 516) (nil tag-name "div" 489 . 516) (nil tag-type start 489 . 516) (nil font-lock-face web-mode-html-attr-value-face 489 . 516) (nil tag-attr t 488 . 489) (nil tag-name "div" 488 . 489) (nil tag-type start 488 . 489) (nil font-lock-face web-mode-html-attr-equal-face 488 . 489) (nil tag-attr t 484 . 488) (nil tag-name "div" 484 . 488) (nil tag-type start 484 . 488) (nil font-lock-face web-mode-html-attr-name-face 484 . 488) (nil tag-attr-beg 0 483 . 484) (nil tag-attr t 483 . 484) (nil tag-name "div" 483 . 484) (nil tag-type start 483 . 484) (nil font-lock-face web-mode-html-attr-name-face 483 . 484) (nil tag-name "div" 482 . 483) (nil tag-type start 482 . 483) (nil tag-name "div" 479 . 482) (nil tag-type start 479 . 482) (nil font-lock-face web-mode-html-tag-face 479 . 482) (nil tag-name "div" 478 . 479) (nil tag-type start 478 . 479) (nil tag-beg 17 478 . 479) (nil font-lock-face web-mode-html-tag-bracket-face 478 . 479) (nil tag-name "div" 468 . 469) (nil tag-type start 468 . 469) (nil tag-end t 468 . 469) (nil font-lock-face web-mode-html-tag-bracket-face 468 . 469) (nil tag-attr t 467 . 468) (nil tag-attr-end 5 467 . 468) (nil tag-name "div" 467 . 468) (nil tag-type start 467 . 468) (nil font-lock-face web-mode-html-attr-value-face 467 . 468) (nil tag-attr t 463 . 467) (nil tag-name "div" 463 . 467) (nil tag-type start 463 . 467) (nil font-lock-face web-mode-html-attr-value-face 463 . 467) (nil tag-attr t 462 . 463) (nil tag-name "div" 462 . 463) (nil tag-type start 462 . 463) (nil font-lock-face web-mode-html-attr-equal-face 462 . 463) (nil tag-attr t 458 . 462) (nil tag-name "div" 458 . 462) (nil tag-type start 458 . 462) (nil font-lock-face web-mode-html-attr-name-face 458 . 462) (nil tag-attr-beg 0 457 . 458) (nil tag-attr t 457 . 458) (nil tag-name "div" 457 . 458) (nil tag-type start 457 . 458) (nil font-lock-face web-mode-html-attr-name-face 457 . 458) (nil tag-name "div" 456 . 457) (nil tag-type start 456 . 457) (nil tag-name "div" 453 . 456) (nil tag-type start 453 . 456) (nil font-lock-face web-mode-html-tag-face 453 . 456) (nil tag-name "div" 452 . 453) (nil tag-type start 452 . 453) (nil tag-beg 17 452 . 453) (nil font-lock-face web-mode-html-tag-bracket-face 452 . 453) (nil tag-name "div" 444 . 445) (nil tag-type start 444 . 445) (nil tag-end t 444 . 445) (nil font-lock-face web-mode-html-tag-bracket-face 444 . 445) (nil tag-attr t 443 . 444) (nil tag-attr-end 5 443 . 444) (nil tag-name "div" 443 . 444) (nil tag-type start 443 . 444) (nil font-lock-face web-mode-html-attr-value-face 443 . 444) (nil tag-attr t 433 . 443) (nil tag-name "div" 433 . 443) (nil tag-type start 433 . 443) (nil font-lock-face web-mode-html-attr-value-face 433 . 443) (nil tag-attr t 432 . 433) (nil tag-name "div" 432 . 433) (nil tag-type start 432 . 433) (nil font-lock-face web-mode-html-attr-equal-face 432 . 433) (nil tag-attr t 428 . 432) (nil tag-name "div" 428 . 432) (nil tag-type start 428 . 432) (nil font-lock-face web-mode-html-attr-name-face 428 . 432) (nil tag-attr-beg 0 427 . 428) (nil tag-attr t 427 . 428) (nil tag-name "div" 427 . 428) (nil tag-type start 427 . 428) (nil font-lock-face web-mode-html-attr-name-face 427 . 428) (nil tag-name "div" 426 . 427) (nil tag-type start 426 . 427) (nil tag-name "div" 423 . 426) (nil tag-type start 423 . 426) (nil font-lock-face web-mode-html-tag-face 423 . 426) (nil tag-name "div" 422 . 423) (nil tag-type start 422 . 423) (nil tag-beg 17 422 . 423) (nil font-lock-face web-mode-html-tag-bracket-face 422 . 423) (nil tag-name "header" 415 . 416) (nil tag-type end 415 . 416) (nil tag-end t 415 . 416) (nil font-lock-face web-mode-html-tag-bracket-face 415 . 416) (nil tag-name "header" 409 . 415) (nil tag-type end 409 . 415) (nil font-lock-face web-mode-html-tag-face 409 . 415) (nil tag-name "header" 408 . 409) (nil tag-type end 408 . 409) (nil font-lock-face web-mode-html-tag-bracket-face 408 . 409) (nil tag-name "header" 407 . 408) (nil tag-type end 407 . 408) (nil tag-beg 20 407 . 408) (nil font-lock-face web-mode-html-tag-bracket-face 407 . 408) (nil tag-name "div" 401 . 402) (nil tag-type end 401 . 402) (nil tag-end t 401 . 402) (nil font-lock-face web-mode-html-tag-bracket-face 401 . 402) (nil tag-name "div" 398 . 401) (nil tag-type end 398 . 401) (nil font-lock-face web-mode-html-tag-face 398 . 401) (nil tag-name "div" 397 . 398) (nil tag-type end 397 . 398) (nil font-lock-face web-mode-html-tag-bracket-face 397 . 398) (nil tag-name "div" 396 . 397) (nil tag-type end 396 . 397) (nil tag-beg 20 396 . 397) (nil font-lock-face web-mode-html-tag-bracket-face 396 . 397) (nil tag-name "div" 394 . 395) (nil tag-type end 394 . 395) (nil tag-end t 394 . 395) (nil font-lock-face web-mode-html-tag-bracket-face 394 . 395) (nil tag-name "div" 391 . 394) (nil tag-type end 391 . 394) (nil font-lock-face web-mode-html-tag-face 391 . 394) (nil tag-name "div" 390 . 391) (nil tag-type end 390 . 391) (nil font-lock-face web-mode-html-tag-bracket-face 390 . 391) (nil tag-name "div" 389 . 390) (nil tag-type end 389 . 390) (nil tag-beg 20 389 . 390) (nil font-lock-face web-mode-html-tag-bracket-face 389 . 390) (nil tag-name "div" 385 . 386) (nil tag-type end 385 . 386) (nil tag-end t 385 . 386) (nil font-lock-face web-mode-html-tag-bracket-face 385 . 386) (nil tag-name "div" 382 . 385) (nil tag-type end 382 . 385) (nil font-lock-face web-mode-html-tag-face 382 . 385) (nil tag-name "div" 381 . 382) (nil tag-type end 381 . 382) (nil font-lock-face web-mode-html-tag-bracket-face 381 . 382) (nil tag-name "div" 380 . 381) (nil tag-type end 380 . 381) (nil tag-beg 20 380 . 381) (nil font-lock-face web-mode-html-tag-bracket-face 380 . 381) (nil tag-name "div" 374 . 375) (nil tag-type end 374 . 375) (nil tag-end t 374 . 375) (nil font-lock-face web-mode-html-tag-bracket-face 374 . 375) (nil tag-name "div" 371 . 374) (nil tag-type end 371 . 374) (nil font-lock-face web-mode-html-tag-face 371 . 374) (nil tag-name "div" 370 . 371) (nil tag-type end 370 . 371) (nil font-lock-face web-mode-html-tag-bracket-face 370 . 371) (nil tag-name "div" 369 . 370) (nil tag-type end 369 . 370) (nil tag-beg 20 369 . 370) (nil font-lock-face web-mode-html-tag-bracket-face 369 . 370) (nil tag-name "div" 361 . 362) (nil tag-type start 361 . 362) (nil tag-end t 361 . 362) (nil font-lock-face web-mode-html-tag-bracket-face 361 . 362) (nil tag-attr t 360 . 361) (nil tag-attr-end 5 360 . 361) (nil tag-name "div" 360 . 361) (nil tag-type start 360 . 361) (nil font-lock-face web-mode-html-attr-value-face 360 . 361) (nil tag-attr t 347 . 360) (nil tag-name "div" 347 . 360) (nil tag-type start 347 . 360) (nil font-lock-face web-mode-html-attr-value-face 347 . 360) (nil tag-attr t 346 . 347) (nil tag-name "div" 346 . 347) (nil tag-type start 346 . 347) (nil font-lock-face web-mode-html-attr-equal-face 346 . 347) (nil tag-attr t 342 . 346) (nil tag-name "div" 342 . 346) (nil tag-type start 342 . 346) (nil font-lock-face web-mode-html-attr-name-face 342 . 346) (nil tag-attr-beg 0 341 . 342) (nil tag-attr t 341 . 342) (nil tag-name "div" 341 . 342) (nil tag-type start 341 . 342) (nil font-lock-face web-mode-html-attr-name-face 341 . 342) (nil tag-name "div" 340 . 341) (nil tag-type start 340 . 341) (nil tag-name "div" 337 . 340) (nil tag-type start 337 . 340) (nil font-lock-face web-mode-html-tag-face 337 . 340) (nil tag-name "div" 336 . 337) (nil tag-type start 336 . 337) (nil tag-beg 17 336 . 337) (nil font-lock-face web-mode-html-tag-bracket-face 336 . 337) (nil tag-name "div" 328 . 329) (nil tag-type start 328 . 329) (nil tag-end t 328 . 329) (nil font-lock-face web-mode-html-tag-bracket-face 328 . 329) (nil tag-attr t 327 . 328) (nil tag-attr-end 5 327 . 328) (nil tag-name "div" 327 . 328) (nil tag-type start 327 . 328) (nil font-lock-face web-mode-html-attr-value-face 327 . 328) (nil tag-attr t 300 . 327) (nil tag-name "div" 300 . 327) (nil tag-type start 300 . 327) (nil font-lock-face web-mode-html-attr-value-face 300 . 327) (nil tag-attr t 299 . 300) (nil tag-name "div" 299 . 300) (nil tag-type start 299 . 300) (nil font-lock-face web-mode-html-attr-equal-face 299 . 300) (nil tag-attr t 295 . 299) (nil tag-name "div" 295 . 299) (nil tag-type start 295 . 299) (nil font-lock-face web-mode-html-attr-name-face 295 . 299) (nil tag-attr-beg 0 294 . 295) (nil tag-attr t 294 . 295) (nil tag-name "div" 294 . 295) (nil tag-type start 294 . 295) (nil font-lock-face web-mode-html-attr-name-face 294 . 295) (nil tag-name "div" 293 . 294) (nil tag-type start 293 . 294) (nil tag-name "div" 290 . 293) (nil tag-type start 290 . 293) (nil font-lock-face web-mode-html-tag-face 290 . 293) (nil tag-name "div" 289 . 290) (nil tag-type start 289 . 290) (nil tag-beg 17 289 . 290) (nil font-lock-face web-mode-html-tag-bracket-face 289 . 290) (nil tag-name "div" 283 . 284) (nil tag-type start 283 . 284) (nil tag-end t 283 . 284) (nil font-lock-face web-mode-html-tag-bracket-face 283 . 284) (nil tag-attr t 282 . 283) (nil tag-attr-end 5 282 . 283) (nil tag-name "div" 282 . 283) (nil tag-type start 282 . 283) (nil font-lock-face web-mode-html-attr-value-face 282 . 283) (nil tag-attr t 278 . 282) (nil tag-name "div" 278 . 282) (nil tag-type start 278 . 282) (nil font-lock-face web-mode-html-attr-value-face 278 . 282) (nil tag-attr t 277 . 278) (nil tag-name "div" 277 . 278) (nil tag-type start 277 . 278) (nil font-lock-face web-mode-html-attr-equal-face 277 . 278) (nil tag-attr t 273 . 277) (nil tag-name "div" 273 . 277) (nil tag-type start 273 . 277) (nil font-lock-face web-mode-html-attr-name-face 273 . 277) (nil tag-attr-beg 0 272 . 273) (nil tag-attr t 272 . 273) (nil tag-name "div" 272 . 273) (nil tag-type start 272 . 273) (nil font-lock-face web-mode-html-attr-name-face 272 . 273) (nil tag-name "div" 271 . 272) (nil tag-type start 271 . 272) (nil tag-name "div" 268 . 271) (nil tag-type start 268 . 271) (nil font-lock-face web-mode-html-tag-face 268 . 271) (nil tag-name "div" 267 . 268) (nil tag-type start 267 . 268) (nil tag-beg 17 267 . 268) (nil font-lock-face web-mode-html-tag-bracket-face 267 . 268) (nil tag-name "div" 263 . 264) (nil tag-type start 263 . 264) (nil tag-end t 263 . 264) (nil font-lock-face web-mode-html-tag-bracket-face 263 . 264) (nil tag-attr t 262 . 263) (nil tag-attr-end 5 262 . 263) (nil tag-name "div" 262 . 263) (nil tag-type start 262 . 263) (nil font-lock-face web-mode-html-attr-value-face 262 . 263) (nil tag-attr t 252 . 262) (nil tag-name "div" 252 . 262) (nil tag-type start 252 . 262) (nil font-lock-face web-mode-html-attr-value-face 252 . 262) (nil tag-attr t 251 . 252) (nil tag-name "div" 251 . 252) (nil tag-type start 251 . 252) (nil font-lock-face web-mode-html-attr-equal-face 251 . 252) (nil tag-attr t 247 . 251) (nil tag-name "div" 247 . 251) (nil tag-type start 247 . 251) (nil font-lock-face web-mode-html-attr-name-face 247 . 251) (nil tag-attr-beg 0 246 . 247) (nil tag-attr t 246 . 247) (nil tag-name "div" 246 . 247) (nil tag-type start 246 . 247) (nil font-lock-face web-mode-html-attr-name-face 246 . 247) (nil tag-name "div" 245 . 246) (nil tag-type start 245 . 246) (nil tag-name "div" 242 . 245) (nil tag-type start 242 . 245) (nil font-lock-face web-mode-html-tag-face 242 . 245) (nil tag-name "div" 241 . 242) (nil tag-type start 241 . 242) (nil tag-beg 17 241 . 242) (nil font-lock-face web-mode-html-tag-bracket-face 241 . 242) (nil tag-name "div" 239 . 240) (nil tag-type end 239 . 240) (nil tag-end t 239 . 240) (nil font-lock-face web-mode-html-tag-bracket-face 239 . 240) (nil tag-name "div" 236 . 239) (nil tag-type end 236 . 239) (nil font-lock-face web-mode-html-tag-face 236 . 239) (nil tag-name "div" 235 . 236) (nil tag-type end 235 . 236) (nil font-lock-face web-mode-html-tag-bracket-face 235 . 236) (nil tag-name "div" 234 . 235) (nil tag-type end 234 . 235) (nil tag-beg 20 234 . 235) (nil font-lock-face web-mode-html-tag-bracket-face 234 . 235) (nil tag-name "div" 233 . 234) (nil tag-type start 233 . 234) (nil tag-end t 233 . 234) (nil font-lock-face web-mode-html-tag-bracket-face 233 . 234) (nil tag-attr t 232 . 233) (nil tag-attr-end 5 232 . 233) (nil tag-name "div" 232 . 233) (nil tag-type start 232 . 233) (nil font-lock-face web-mode-html-attr-value-face 232 . 233) (nil tag-attr t 224 . 232) (nil tag-name "div" 224 . 232) (nil tag-type start 224 . 232) (nil font-lock-face web-mode-html-attr-value-face 224 . 232) (nil tag-attr t 223 . 224) (nil tag-name "div" 223 . 224) (nil tag-type start 223 . 224) (nil font-lock-face web-mode-html-attr-equal-face 223 . 224) (nil tag-attr t 219 . 223) (nil tag-name "div" 219 . 223) (nil tag-type start 219 . 223) (nil font-lock-face web-mode-html-attr-name-face 219 . 223) (nil tag-attr-beg 0 218 . 219) (nil tag-attr t 218 . 219) (nil tag-name "div" 218 . 219) (nil tag-type start 218 . 219) (nil font-lock-face web-mode-html-attr-name-face 218 . 219) (nil tag-name "div" 217 . 218) (nil tag-type start 217 . 218) (nil tag-name "div" 214 . 217) (nil tag-type start 214 . 217) (nil font-lock-face web-mode-html-tag-face 214 . 217) (nil tag-name "div" 213 . 214) (nil tag-type start 213 . 214) (nil tag-beg 17 213 . 214) (nil font-lock-face web-mode-html-tag-bracket-face 213 . 214) (nil tag-name "header" 211 . 212) (nil tag-type start 211 . 212) (nil tag-end t 211 . 212) (nil font-lock-face web-mode-html-tag-bracket-face 211 . 212) (nil tag-attr t 210 . 211) (nil tag-attr-end 5 210 . 211) (nil tag-name "header" 210 . 211) (nil tag-type start 210 . 211) (nil font-lock-face web-mode-html-attr-value-face 210 . 211) (nil tag-attr t 208 . 210) (nil tag-name "header" 208 . 210) (nil tag-type start 208 . 210) (nil font-lock-face web-mode-html-attr-value-face 208 . 210) (nil block-side t 207 . 208) (nil block-end t 207 . 208) (nil block-token delimiter-end 207 . 208) (nil tag-attr t 207 . 208) (nil tag-name "header" 207 . 208) (nil tag-type start 207 . 208) (nil font-lock-face web-mode-block-delimiter-face 207 . 208) (nil block-side t 206 . 207) (nil block-token delimiter-end 206 . 207) (nil tag-attr t 206 . 207) (nil tag-name "header" 206 . 207) (nil tag-type start 206 . 207) (nil font-lock-face web-mode-block-delimiter-face 206 . 207) (nil block-side t 205 . 206) (nil tag-attr t 205 . 206) (nil tag-name "header" 205 . 206) (nil tag-type start 205 . 206) (nil block-side t 199 . 205) (nil tag-attr t 199 . 205) (nil tag-name "header" 199 . 205) (nil tag-type start 199 . 205) (nil face web-mode-filter-face 199 . 205) (nil block-side t 196 . 199) (nil tag-attr t 196 . 199) (nil tag-name "header" 196 . 199) (nil tag-type start 196 . 199) (nil block-side t 190 . 196) (nil tag-attr t 190 . 196) (nil tag-name "header" 190 . 196) (nil tag-type start 190 . 196) (nil face web-mode-variable-name-face 190 . 196) (nil block-side t 189 . 190) (nil tag-attr t 189 . 190) (nil tag-name "header" 189 . 190) (nil tag-type start 189 . 190) (nil block-side t 185 . 189) (nil tag-attr t 185 . 189) (nil tag-name "header" 185 . 189) (nil tag-type start 185 . 189) (nil face web-mode-variable-name-face 185 . 189) (nil block-side t 184 . 185) (nil tag-attr t 184 . 185) (nil tag-name "header" 184 . 185) (nil tag-type start 184 . 185) (nil block-side t 183 . 184) (nil block-token delimiter-beg 183 . 184) (nil tag-attr t 183 . 184) (nil tag-name "header" 183 . 184) (nil tag-type start 183 . 184) (nil font-lock-face web-mode-block-delimiter-face 183 . 184) (nil block-beg 0 182 . 183) (nil block-controls 0 182 . 183) (nil block-side t 182 . 183) (nil block-token delimiter-beg 182 . 183) (nil tag-attr t 182 . 183) (nil tag-name "header" 182 . 183) (nil tag-type start 182 . 183) (nil font-lock-face web-mode-block-delimiter-face 182 . 183) (nil tag-attr t 158 . 182) (nil tag-name "header" 158 . 182) (nil tag-type start 158 . 182) (nil font-lock-face web-mode-html-attr-value-face 158 . 182) (nil tag-attr t 157 . 158) (nil tag-name "header" 157 . 158) (nil tag-type start 157 . 158) (nil font-lock-face web-mode-html-attr-equal-face 157 . 158) (nil tag-attr t 153 . 157) (nil tag-name "header" 153 . 157) (nil tag-type start 153 . 157) (nil font-lock-face web-mode-html-attr-name-face 153 . 157) (nil tag-attr-beg 0 152 . 153) (nil tag-attr t 152 . 153) (nil tag-name "header" 152 . 153) (nil tag-type start 152 . 153) (nil font-lock-face web-mode-html-attr-name-face 152 . 153) (nil tag-name "header" 151 . 152) (nil tag-type start 151 . 152) (nil tag-attr t 150 . 151) (nil tag-attr-end 5 150 . 151) (nil tag-name "header" 150 . 151) (nil tag-type start 150 . 151) (nil font-lock-face web-mode-html-attr-value-face 150 . 151) (nil tag-attr t 141 . 150) (nil tag-name "header" 141 . 150) (nil tag-type start 141 . 150) (nil font-lock-face web-mode-html-attr-value-face 141 . 150) (nil tag-attr t 140 . 141) (nil tag-name "header" 140 . 141) (nil tag-type start 140 . 141) (nil font-lock-face web-mode-html-attr-equal-face 140 . 141) (nil tag-attr t 136 . 140) (nil tag-name "header" 136 . 140) (nil tag-type start 136 . 140) (nil font-lock-face web-mode-html-attr-name-face 136 . 140) (nil tag-attr-beg 0 135 . 136) (nil tag-attr t 135 . 136) (nil tag-name "header" 135 . 136) (nil tag-type start 135 . 136) (nil font-lock-face web-mode-html-attr-name-face 135 . 136) (nil tag-name "header" 134 . 135) (nil tag-type start 134 . 135) (nil tag-name "header" 128 . 134) (nil tag-type start 128 . 134) (nil font-lock-face web-mode-html-tag-face 128 . 134) (nil tag-name "header" 127 . 128) (nil tag-type start 127 . 128) (nil tag-beg 17 127 . 128) (nil font-lock-face web-mode-html-tag-bracket-face 127 . 128) (nil tag-type comment 125 . 126) (nil tag-end t 125 . 126) (nil font-lock-face web-mode-comment-face 125 . 126) (nil tag-type comment 107 . 125) (nil font-lock-face web-mode-comment-face 107 . 125) (nil tag-type comment 106 . 107) (nil tag-beg 0 106 . 107) (nil font-lock-face web-mode-comment-face 106 . 107) (106 . 1753)) nil (25353 6997 3419 526000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -613) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 614) nil (25353 6997 3008 974000) 0 nil])
([nil nil ((613 . 615)) nil (25353 6997 3005 369000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 616) (#("5" 0 1 (face web-mode-variable-name-face block-side t)) . 616) (#(" " 0 1 (block-side t)) . 616) (#(":" 0 1 (block-side t)) . 616) (#(" " 0 1 (block-side t)) . 616) (#("t" 0 1 (face web-mode-variable-name-face block-side t)) . 616) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 616) (#("m" 0 1 (face web-mode-variable-name-face block-side t)) . 616) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . 616) (#("l" 0 1 (face web-mode-variable-name-face block-side t)) . 616)) nil (25353 6997 3002 860000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t)) . -1637) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t)) . -1638) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("s" 0 1 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t)) . -1639) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 1640) nil (25353 6997 2998 395000) 0 nil])
([nil nil ((1637 . 1640)) nil (25353 6997 2990 288000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t)) . -1638) (undo-tree-id22 . -1) (#("s" 0 1 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t)) . -1639) (undo-tree-id23 . -1) 1640) nil (25353 6997 2988 732000) 0 nil])
([nil nil ((1638 . 1641)) nil (25353 6997 2985 28000) 0 nil])
([nil nil (("s" . -1673) (undo-tree-id19 . -1) ("t" . -1674) (undo-tree-id20 . -1) ("s" . -1675) (undo-tree-id21 . -1) 1676) nil (25353 6997 2983 205000) 0 nil])
([nil nil ((1673 . 1676)) nil (25353 6997 2977 749000) 0 nil])
([nil nil ((#("
          <!-- Pager -->
          <div class=\"clearfix\">
            <a class=\"btn btn-primary float-right\" href=\"{{\"/poetry\" | relative_url }}\">View All Poems &rarr;</a>
          </div>" 11 12 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 12 24 (font-lock-face web-mode-comment-face tag-type comment) 24 25 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 37 40 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 40 41 (tag-type start tag-name "div") 41 42 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 42 46 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 46 47 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 47 56 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 57 58 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 72 73 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 73 74 (tag-type start tag-name "a") 74 75 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 75 79 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 79 80 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 80 108 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 108 109 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 109 110 (tag-type start tag-name "a") 110 111 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 111 114 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 114 115 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 115 116 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 116 117 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 117 118 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 118 119 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t block-token string block-side t) 119 120 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t) 120 126 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t) 126 127 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" block-token string block-side t) 127 128 (tag-type start tag-name "a" block-side t) 128 129 (tag-type start tag-name "a" tag-attr-end 0 tag-attr t tag-attr-beg 0 block-side t) 129 130 (tag-type start tag-name "a" block-side t) 130 131 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0 block-side t) 131 141 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 141 142 (face web-mode-filter-face tag-type start tag-name "a" tag-attr-end 0 tag-attr t block-side t) 142 143 (tag-type start tag-name "a" block-side t) 143 144 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" block-token delimiter-end block-side t) 144 145 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" block-token delimiter-end block-end t block-side t) 145 146 (tag-type start tag-name "a") 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 162 168 (font-lock-face (web-mode-html-entity-face)) 168 169 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 169 170 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 170 171 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 171 172 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 183 184 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 184 185 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 185 188 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 188 189 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 1515) (undo-tree-id12 . -189) (undo-tree-id13 . -1) (undo-tree-id14 . -122) (undo-tree-id15 . -58) (undo-tree-id16 . -162) (undo-tree-id17 . -189) (undo-tree-id18 . -189)) nil (25353 6997 2975 729000) 0 nil])
([nil nil (("
" . -1514) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 1515) nil (25353 6997 2965 723000) 0 nil])
([nil nil (("
title: About Me
description: This is what I do." . 17) (undo-tree-id0 . -48) (undo-tree-id1 . -1) (undo-tree-id2 . -48) (undo-tree-id3 . -48) (undo-tree-id4 . -48)) nil (25353 6997 2951 354000) 0 nil])
([nil nil ((#("
          {{ content }}" 11 12 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 12 13 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 13 14 (block-side t) 14 21 (face web-mode-variable-name-face block-side t) 21 22 (block-side t) 22 23 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 23 24 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 471) (undo-tree-id71 . -24) (undo-tree-id72 . -1) (undo-tree-id73 . -24) (undo-tree-id74 . -24) (t 25353 6997 10507 676000)) nil (25353 7071 590253 294000) 0 nil])
([nil nil (("
" . -470) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 471) nil (25353 7071 590246 672000) 0 nil])
([nil nil ((#("<!-- Page Header -->
<header class=\"masthead\" style=\"background-image: url('{{ site.banner | escape }}')\">
<div class=\"overlay\"></div>
<div class=\"container\">
  <div class=\"row\">
    <div class=\"col-lg-8 col-md-10 mx-auto\">
      <div class=\"home-heading\">
      </div>
    </div>
  </div>
</div>
    </header>" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 19 (font-lock-face web-mode-comment-face tag-type comment) 19 20 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header") 22 28 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header") 28 29 (tag-type start tag-name "header") 29 30 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0) 30 34 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t) 34 35 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t) 35 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "header") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t) 52 76 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 76 77 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 77 78 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t) 78 79 (tag-type start tag-name "header" tag-attr t block-side t) 79 83 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 83 84 (tag-type start tag-name "header" tag-attr t block-side t) 84 90 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 90 93 (tag-type start tag-name "header" tag-attr t block-side t) 93 99 (face web-mode-filter-face tag-type start tag-name "header" tag-attr t block-side t) 99 100 (tag-type start tag-name "header" tag-attr t block-side t) 100 101 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-side t) 101 102 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-end t block-side t) 102 104 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 104 105 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 5 tag-attr t) 105 106 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header") 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 108 111 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 111 112 (tag-type start tag-name "div") 112 113 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 113 117 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 117 118 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 118 126 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 126 127 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 127 128 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 130 133 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 133 134 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 135 136 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 136 139 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 139 140 (tag-type start tag-name "div") 140 141 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 141 145 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 145 146 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 146 156 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 156 157 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 157 158 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 161 162 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 162 165 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 165 166 (tag-type start tag-name "div") 166 167 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 167 171 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 171 172 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 172 176 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 176 177 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 177 178 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 183 184 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 184 187 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 187 188 (tag-type start tag-name "div") 188 189 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 189 193 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 193 194 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 194 221 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 221 222 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 222 223 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 230 231 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 231 234 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 234 235 (tag-type start tag-name "div") 235 236 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 236 240 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 240 241 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 241 254 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 254 255 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 255 256 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 265 268 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 268 269 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 274 275 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 275 276 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 276 279 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 279 280 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 283 284 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 284 285 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 285 288 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 290 291 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 291 292 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 292 295 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 295 296 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 301 302 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header") 302 303 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header") 303 309 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header") 309 310 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header")) . 58) (undo-tree-id64 . -310) (undo-tree-id65 . -21) (undo-tree-id66 . -310)) nil (25353 7071 590237 949000) 0 nil])
([nil nil (("
" . -56) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) ("
" . -57) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 58) nil (25353 7071 590230 681000) 0 nil])
([nil nil (("    " . -1047) ("    " . -1040) ("    " . -1031) ("    " . -1013) ("    " . -1001) ("    " . -981) ("    " . -968) ("    " . -863) ("    " . -848) ("    " . -824) ("    " . -794) ("    " . -769) ("    " . -739) ("    " . -704) ("    " . -661) ("    " . -646) ("    " . -624) ("    " . -529) ("    " . -504) ("    " . -441) ("    " . -404) ("    " . -347) ("    " . -264) ("    " . -223) ("    " . -184) ("    " . -154) ("    " . -106) ("    " . -84) ("    " . -58)) nil (25353 7923 562918 484000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -206) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 207) nil (25353 7927 612004 88000) 0 nil] [nil nil ((1028 . 1033) (1003 . 1008) (987 . 990) (881 . 882) (865 . 866) (840 . 841) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -810) (785 . 786) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -755) (720 . 721) (674 . 677) (656 . 659) (633 . 634) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -538) (513 . 514) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . -450) (413 . 414) (355 . 356) (269 . 272) (223 . 1014) (#("<article class=\"post-preview\">
          <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\">
            <h2 class=\"post-title\">{{ post.title }}</h2>
            {% if post.subtitle %}
              <h3 class=\"post-subtitle\">{{ post.subtitle }}</h3>
            {% else %}
              <h3 class=\"post-subtitle\">{{ post.excerpt | strip_html | truncatewords: 15 }}</h3>
            {% endif %}
          </a>
          <p class=\"post-meta\">Posted by
            {% if post.author %}
              {{ post.author }}
            {% else %}
              {{ site.author }}
            {% endif %}
            on
            {{ post.date | date: '%B %d, %Y' }} &middot; {% include read_time.html content=post.content %}
          </p>
        </article>

        <hr>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "article") 1 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "article") 8 9 (tag-type start tag-name "article") 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "article" tag-attr t tag-attr-beg 0) 10 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "article" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "article" tag-attr t) 15 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "article" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "article" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "article") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 42 43 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 43 44 (tag-type start tag-name "a") 44 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 45 48 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 48 49 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 49 50 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 50 51 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls nil block-beg 0) 51 52 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 52 53 (tag-type start tag-name "a" tag-attr t block-side t) 53 57 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 57 58 (tag-type start tag-name "a" tag-attr t block-side t) 58 61 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 61 64 (tag-type start tag-name "a" tag-attr t block-side t) 64 71 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 71 73 (tag-type start tag-name "a" tag-attr t block-side t) 73 77 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 77 78 (tag-type start tag-name "a" tag-attr t block-side t) 78 85 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 85 88 (tag-type start tag-name "a" tag-attr t block-side t) 88 95 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 95 97 (tag-type start tag-name "a" tag-attr t block-side t) 97 101 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 101 103 (tag-type start tag-name "a" tag-attr t block-side t) 103 106 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 106 107 (tag-type start tag-name "a" tag-attr t block-side t) 107 108 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-side t) 108 109 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-end t block-side t) 109 110 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 110 111 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2") 125 127 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2") 127 128 (tag-type start tag-name "h2") 128 129 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0) 129 133 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t) 133 134 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t) 134 145 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t) 145 146 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 5 tag-attr t) 146 147 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2") 147 148 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls nil block-beg 0) 148 149 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 149 150 (block-side t) 150 154 (face web-mode-variable-name-face block-side t) 154 155 (block-side t) 155 160 (face web-mode-variable-name-face block-side t) 160 161 (block-side t) 161 162 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 162 163 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 163 164 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2") 164 165 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2") 165 167 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2") 167 168 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2") 181 182 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((open . "if")) block-beg 0) 182 183 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 183 184 (block-side t) 184 186 (face web-mode-block-control-face block-side t) 186 187 (block-side t) 187 200 (face web-mode-variable-name-face block-side t) 200 201 (block-side t) 201 202 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 202 203 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 218 219 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h3") 219 221 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h3") 221 222 (tag-type start tag-name "h3") 222 223 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h3" tag-attr t tag-attr-beg 0) 223 227 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h3" tag-attr t) 227 228 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h3" tag-attr t) 228 242 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h3" tag-attr t) 242 243 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h3" tag-attr-end 5 tag-attr t) 243 244 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h3") 244 245 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls nil block-beg 0) 245 246 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 246 247 (block-side t) 247 251 (face web-mode-variable-name-face block-side t) 251 252 (block-side t) 252 260 (face web-mode-variable-name-face block-side t) 260 261 (block-side t) 261 262 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 262 263 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 263 264 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h3") 264 265 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h3") 265 267 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h3") 267 268 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h3") 281 282 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((inside . "if")) block-beg 0) 282 283 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 283 284 (block-side t) 284 288 (face web-mode-block-control-face block-side t) 288 289 (block-side t) 289 290 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 290 291 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 306 307 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h3") 307 309 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h3") 309 310 (tag-type start tag-name "h3") 310 311 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h3" tag-attr t tag-attr-beg 0) 311 315 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h3" tag-attr t) 315 316 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h3" tag-attr t) 316 330 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h3" tag-attr t) 330 331 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h3" tag-attr-end 5 tag-attr t) 331 332 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h3") 332 333 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls nil block-beg 0) 333 334 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 334 335 (block-side t) 335 339 (face web-mode-variable-name-face block-side t) 339 340 (block-side t) 340 347 (face web-mode-variable-name-face block-side t) 347 350 (block-side t) 350 360 (face web-mode-filter-face block-side t) 360 363 (block-side t) 363 376 (face web-mode-filter-face block-side t) 376 378 (block-side t) 378 380 (face web-mode-variable-name-face block-side t) 380 381 (block-side t) 381 382 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 382 383 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 383 384 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h3") 384 385 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h3") 385 387 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h3") 387 388 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h3") 401 402 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((close . "if")) block-beg 0) 402 403 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 403 404 (block-side t) 404 409 (face web-mode-block-control-face block-side t) 409 410 (block-side t) 410 411 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 411 412 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 424 425 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 425 426 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 426 427 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 438 439 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 439 440 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 440 441 (tag-type start tag-name "p") 441 442 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 442 446 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 446 447 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 447 457 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 457 458 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 458 459 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 481 482 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 482 483 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 483 484 (block-side t) 484 486 (face web-mode-block-control-face block-side t) 486 487 (block-side t) 487 498 (face web-mode-variable-name-face block-side t) 498 499 (block-side t) 499 500 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 500 501 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 516 517 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 517 518 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 518 519 (block-side t) 519 523 (face web-mode-variable-name-face block-side t) 523 524 (block-side t) 524 530 (face web-mode-variable-name-face block-side t) 530 531 (block-side t) 531 532 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 532 533 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 546 547 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 547 548 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 548 549 (block-side t) 549 553 (face web-mode-block-control-face block-side t) 553 554 (block-side t) 554 555 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 555 556 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 571 572 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 572 573 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 573 574 (block-side t) 574 578 (face web-mode-variable-name-face block-side t) 578 579 (block-side t) 579 585 (face web-mode-variable-name-face block-side t) 585 586 (block-side t) 586 587 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 587 588 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 601 602 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 602 603 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 603 604 (block-side t) 604 609 (face web-mode-block-control-face block-side t) 609 610 (block-side t) 610 611 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 611 612 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 640 641 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 641 642 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 642 643 (block-side t) 643 647 (face web-mode-variable-name-face block-side t) 647 648 (block-side t) 648 652 (face web-mode-variable-name-face block-side t) 652 655 (block-side t) 655 659 (face web-mode-filter-face block-side t) 659 661 (block-side t) 661 663 (font-lock-face web-mode-block-string-face block-token string block-side t) 663 664 (font-lock-face web-mode-block-string-face block-token string block-side t) 664 666 (font-lock-face web-mode-block-string-face block-token string block-side t) 666 667 (font-lock-face web-mode-block-string-face block-token string block-side t) 667 670 (font-lock-face web-mode-block-string-face block-token string block-side t) 670 671 (font-lock-face web-mode-block-string-face block-token string block-side t) 671 672 (font-lock-face web-mode-block-string-face block-token string block-side t) 672 673 (block-side t) 673 674 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 674 675 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 676 684 (font-lock-face (web-mode-html-entity-face)) 685 686 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 686 687 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 687 688 (block-side t) 688 695 (face web-mode-block-control-face block-side t) 695 696 (block-side t) 696 710 (face web-mode-variable-name-face block-side t) 710 711 (block-side t) 711 718 (face web-mode-variable-name-face block-side t) 718 719 (block-side t) 719 731 (face web-mode-variable-name-face block-side t) 731 732 (block-side t) 732 733 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 733 734 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 745 746 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 746 747 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 747 748 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 748 749 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p") 758 759 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "article") 759 760 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "article") 760 767 (font-lock-face web-mode-html-tag-face tag-type end tag-name "article") 767 768 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "article") 778 779 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type void tag-name "hr") 779 781 (font-lock-face web-mode-html-tag-face tag-type void tag-name "hr") 781 782 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "hr")) . 223) (undo-tree-id97 . -782) (undo-tree-id98 . -782) (undo-tree-id99 . -556) (undo-tree-id100 . -627) (undo-tree-id101 . -627) (undo-tree-id102 . -31) (undo-tree-id103 . -782) (undo-tree-id104 . -782) (t 25353 7071 599428 667000)) ((223 . 1005) (#("<!-- <article class=\"post-preview\">
          <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\">
            <h2 class=\"post-title\">{{ post.title }}</h2>
            {% if post.subtitle %}
              <h3 class=\"post-subtitle\">{{ post.subtitle }}</h3>
            {% else %}
              <h3 class=\"post-subtitle\">{{ post.excerpt | strip_html | truncatewords: 15 }}</h3>
            {% endif %}
          </a>
          <p class=\"post-meta\">Posted by
            {% if post.author %}
              {{ post.author }}
            {% else %}
              {{ site.author }}
            {% endif %}
            on
            {{ post.date | date: '%B %d, %Y' }} &middot; {% include read_time.html content=post.content %}
          </p>
        </article>

        <hr> -->" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 55 (font-lock-face web-mode-comment-face tag-type comment) 55 56 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 56 57 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 57 58 (tag-type comment block-side t) 58 62 (face web-mode-variable-name-face tag-type comment block-side t) 62 63 (tag-type comment block-side t) 63 66 (face web-mode-variable-name-face tag-type comment block-side t) 66 69 (tag-type comment block-side t) 69 76 (face web-mode-filter-face tag-type comment block-side t) 76 78 (tag-type comment block-side t) 78 82 (face web-mode-variable-name-face tag-type comment block-side t) 82 83 (tag-type comment block-side t) 83 90 (face web-mode-variable-name-face tag-type comment block-side t) 90 93 (tag-type comment block-side t) 93 100 (face web-mode-filter-face tag-type comment block-side t) 100 102 (tag-type comment block-side t) 102 106 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 106 108 (tag-type comment block-side t) 108 111 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 111 112 (tag-type comment block-side t) 112 113 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 113 114 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 114 152 (font-lock-face web-mode-comment-face tag-type comment) 152 153 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 153 154 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 154 155 (tag-type comment block-side t) 155 159 (face web-mode-variable-name-face tag-type comment block-side t) 159 160 (tag-type comment block-side t) 160 165 (face web-mode-variable-name-face tag-type comment block-side t) 165 166 (tag-type comment block-side t) 166 167 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 167 168 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 168 186 (font-lock-face web-mode-comment-face tag-type comment) 186 187 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 187 188 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 188 189 (tag-type comment block-side t) 189 191 (face web-mode-block-control-face tag-type comment block-side t) 191 192 (tag-type comment block-side t) 192 205 (face web-mode-variable-name-face tag-type comment block-side t) 205 206 (tag-type comment block-side t) 206 207 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 207 208 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 208 222 (font-lock-face web-mode-comment-face tag-type comment) 222 223 (font-lock-face web-mode-comment-face tag-type comment) 223 249 (font-lock-face web-mode-comment-face tag-type comment) 249 250 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 250 251 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 251 252 (tag-type comment block-side t) 252 256 (face web-mode-variable-name-face tag-type comment block-side t) 256 257 (tag-type comment block-side t) 257 265 (face web-mode-variable-name-face tag-type comment block-side t) 265 266 (tag-type comment block-side t) 266 267 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 267 268 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 268 286 (font-lock-face web-mode-comment-face tag-type comment) 286 287 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 287 288 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 288 289 (tag-type comment block-side t) 289 293 (face web-mode-block-control-face tag-type comment block-side t) 293 294 (tag-type comment block-side t) 294 295 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 295 296 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 296 310 (font-lock-face web-mode-comment-face tag-type comment) 310 311 (font-lock-face web-mode-comment-face tag-type comment) 311 337 (font-lock-face web-mode-comment-face tag-type comment) 337 338 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 338 339 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 339 340 (tag-type comment block-side t) 340 344 (face web-mode-variable-name-face tag-type comment block-side t) 344 345 (tag-type comment block-side t) 345 352 (face web-mode-variable-name-face tag-type comment block-side t) 352 355 (tag-type comment block-side t) 355 365 (face web-mode-filter-face tag-type comment block-side t) 365 368 (tag-type comment block-side t) 368 381 (face web-mode-filter-face tag-type comment block-side t) 381 383 (tag-type comment block-side t) 383 385 (face web-mode-variable-name-face tag-type comment block-side t) 385 386 (tag-type comment block-side t) 386 387 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 387 388 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 388 406 (font-lock-face web-mode-comment-face tag-type comment) 406 407 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 407 408 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 408 409 (tag-type comment block-side t) 409 414 (face web-mode-block-control-face tag-type comment block-side t) 414 415 (tag-type comment block-side t) 415 416 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 416 417 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 417 486 (font-lock-face web-mode-comment-face tag-type comment) 486 487 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 487 488 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 488 489 (tag-type comment block-side t) 489 491 (face web-mode-block-control-face tag-type comment block-side t) 491 492 (tag-type comment block-side t) 492 503 (face web-mode-variable-name-face tag-type comment block-side t) 503 504 (tag-type comment block-side t) 504 505 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 505 506 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 506 520 (font-lock-face web-mode-comment-face tag-type comment) 520 521 (font-lock-face web-mode-comment-face tag-type comment) 521 522 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 522 523 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 523 524 (tag-type comment block-side t) 524 528 (face web-mode-variable-name-face tag-type comment block-side t) 528 529 (tag-type comment block-side t) 529 535 (face web-mode-variable-name-face tag-type comment block-side t) 535 536 (tag-type comment block-side t) 536 537 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 537 538 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 538 551 (font-lock-face web-mode-comment-face tag-type comment) 551 552 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 552 553 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 553 554 (tag-type comment block-side t) 554 558 (face web-mode-block-control-face tag-type comment block-side t) 558 559 (tag-type comment block-side t) 559 560 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 560 561 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 561 575 (font-lock-face web-mode-comment-face tag-type comment) 575 576 (font-lock-face web-mode-comment-face tag-type comment) 576 577 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 577 578 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 578 579 (tag-type comment block-side t) 579 583 (face web-mode-variable-name-face tag-type comment block-side t) 583 584 (tag-type comment block-side t) 584 590 (face web-mode-variable-name-face tag-type comment block-side t) 590 591 (tag-type comment block-side t) 591 592 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 592 593 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 593 606 (font-lock-face web-mode-comment-face tag-type comment) 606 607 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 607 608 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 608 609 (tag-type comment block-side t) 609 614 (face web-mode-block-control-face tag-type comment block-side t) 614 615 (tag-type comment block-side t) 615 616 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 616 617 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 617 645 (font-lock-face web-mode-comment-face tag-type comment) 645 646 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 646 647 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 647 648 (tag-type comment block-side t) 648 652 (face web-mode-variable-name-face tag-type comment block-side t) 652 653 (tag-type comment block-side t) 653 657 (face web-mode-variable-name-face tag-type comment block-side t) 657 660 (tag-type comment block-side t) 660 664 (face web-mode-filter-face tag-type comment block-side t) 664 666 (tag-type comment block-side t) 666 668 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 668 669 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 669 671 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 671 672 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 672 675 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 675 676 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 676 677 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 677 678 (tag-type comment block-side t) 678 679 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 679 680 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 680 681 (font-lock-face web-mode-comment-face tag-type comment) 681 689 (font-lock-face (web-mode-comment-face web-mode-html-entity-face) tag-type comment) 689 690 (font-lock-face web-mode-comment-face tag-type comment) 690 691 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 691 692 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 692 693 (tag-type comment block-side t) 693 700 (face web-mode-block-control-face tag-type comment block-side t) 700 701 (tag-type comment block-side t) 701 715 (face web-mode-variable-name-face tag-type comment block-side t) 715 716 (tag-type comment block-side t) 716 723 (face web-mode-variable-name-face tag-type comment block-side t) 723 724 (tag-type comment block-side t) 724 736 (face web-mode-variable-name-face tag-type comment block-side t) 736 737 (tag-type comment block-side t) 737 738 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 738 739 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 739 790 (font-lock-face web-mode-comment-face tag-type comment) 790 791 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 223) (undo-tree-id202 . -36) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 269) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 355) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 413) (450 . 451) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 513) (538 . 539) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 633) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 656) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 674) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 720) (755 . 756) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 785) (810 . 811) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 840) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 865) (#(" " 0 1 (font-lock-face web-mode-comment-face tag-type comment)) . 881) (#("   " 0 3 (font-lock-face web-mode-comment-face tag-type comment)) . 987) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1003) (#("     " 0 5 (font-lock-face web-mode-comment-face tag-type comment)) . 1028)) (25353 7923 349193 444000) 0 nil])
([nil nil ((206 . 207)) nil (25353 7927 611985 862000) 0 nil])
([nil nil ((#("        <!-- <article class=\"post-preview\">
             <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\">
             <h2 class=\"post-title\">{{ post.title }}</h2>
             {% if post.subtitle %}
             <h3 class=\"post-subtitle\">{{ post.subtitle }}</h3>
             {% else %}
             <h3 class=\"post-subtitle\">{{ post.excerpt | strip_html | truncatewords: 15 }}</h3>
             {% endif %}
             </a>
             <p class=\"post-meta\">Posted by
             {% if post.author %}
             {{ post.author }}
             {% else %}
             {{ site.author }}
             {% endif %}
             on
             {{ post.date | date: '%B %d, %Y' }} &middot; {% include read_time.html content=post.content %}
             </p>
             </article>

             <hr> -->" 8 9 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 9 66 (font-lock-face web-mode-comment-face tag-type comment) 66 67 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 67 68 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 68 69 (tag-type comment block-side t) 69 73 (face web-mode-variable-name-face tag-type comment block-side t) 73 74 (tag-type comment block-side t) 74 77 (face web-mode-variable-name-face tag-type comment block-side t) 77 80 (tag-type comment block-side t) 80 87 (face web-mode-filter-face tag-type comment block-side t) 87 89 (tag-type comment block-side t) 89 93 (face web-mode-variable-name-face tag-type comment block-side t) 93 94 (tag-type comment block-side t) 94 101 (face web-mode-variable-name-face tag-type comment block-side t) 101 104 (tag-type comment block-side t) 104 111 (face web-mode-filter-face tag-type comment block-side t) 111 113 (tag-type comment block-side t) 113 117 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 117 119 (tag-type comment block-side t) 119 122 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 122 123 (tag-type comment block-side t) 123 124 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 124 125 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 125 164 (font-lock-face web-mode-comment-face tag-type comment) 164 165 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 165 166 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 166 167 (tag-type comment block-side t) 167 171 (face web-mode-variable-name-face tag-type comment block-side t) 171 172 (tag-type comment block-side t) 172 177 (face web-mode-variable-name-face tag-type comment block-side t) 177 178 (tag-type comment block-side t) 178 179 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 179 180 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 180 199 (font-lock-face web-mode-comment-face tag-type comment) 199 200 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 200 201 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 201 202 (tag-type comment block-side t) 202 204 (face web-mode-block-control-face tag-type comment block-side t) 204 205 (tag-type comment block-side t) 205 218 (face web-mode-variable-name-face tag-type comment block-side t) 218 219 (tag-type comment block-side t) 219 220 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 220 221 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 221 261 (font-lock-face web-mode-comment-face tag-type comment) 261 262 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 262 263 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 263 264 (tag-type comment block-side t) 264 268 (face web-mode-variable-name-face tag-type comment block-side t) 268 269 (tag-type comment block-side t) 269 277 (face web-mode-variable-name-face tag-type comment block-side t) 277 278 (tag-type comment block-side t) 278 279 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 279 280 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 280 299 (font-lock-face web-mode-comment-face tag-type comment) 299 300 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 300 301 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 301 302 (tag-type comment block-side t) 302 306 (face web-mode-block-control-face tag-type comment block-side t) 306 307 (tag-type comment block-side t) 307 308 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 308 309 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 309 349 (font-lock-face web-mode-comment-face tag-type comment) 349 350 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 350 351 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 351 352 (tag-type comment block-side t) 352 356 (face web-mode-variable-name-face tag-type comment block-side t) 356 357 (tag-type comment block-side t) 357 364 (face web-mode-variable-name-face tag-type comment block-side t) 364 367 (tag-type comment block-side t) 367 377 (face web-mode-filter-face tag-type comment block-side t) 377 380 (tag-type comment block-side t) 380 393 (face web-mode-filter-face tag-type comment block-side t) 393 395 (tag-type comment block-side t) 395 397 (face web-mode-variable-name-face tag-type comment block-side t) 397 398 (tag-type comment block-side t) 398 399 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 399 400 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 400 419 (font-lock-face web-mode-comment-face tag-type comment) 419 420 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 420 421 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 421 422 (tag-type comment block-side t) 422 427 (face web-mode-block-control-face tag-type comment block-side t) 427 428 (tag-type comment block-side t) 428 429 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 429 430 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 430 506 (font-lock-face web-mode-comment-face tag-type comment) 506 507 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 507 508 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 508 509 (tag-type comment block-side t) 509 511 (face web-mode-block-control-face tag-type comment block-side t) 511 512 (tag-type comment block-side t) 512 523 (face web-mode-variable-name-face tag-type comment block-side t) 523 524 (tag-type comment block-side t) 524 525 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 525 526 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 526 540 (font-lock-face web-mode-comment-face tag-type comment) 540 541 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 541 542 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 542 543 (tag-type comment block-side t) 543 547 (face web-mode-variable-name-face tag-type comment block-side t) 547 548 (tag-type comment block-side t) 548 554 (face web-mode-variable-name-face tag-type comment block-side t) 554 555 (tag-type comment block-side t) 555 556 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 556 557 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 557 571 (font-lock-face web-mode-comment-face tag-type comment) 571 572 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 572 573 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 573 574 (tag-type comment block-side t) 574 578 (face web-mode-block-control-face tag-type comment block-side t) 578 579 (tag-type comment block-side t) 579 580 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 580 581 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 581 595 (font-lock-face web-mode-comment-face tag-type comment) 595 596 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 596 597 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 597 598 (tag-type comment block-side t) 598 602 (face web-mode-variable-name-face tag-type comment block-side t) 602 603 (tag-type comment block-side t) 603 609 (face web-mode-variable-name-face tag-type comment block-side t) 609 610 (tag-type comment block-side t) 610 611 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 611 612 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 612 626 (font-lock-face web-mode-comment-face tag-type comment) 626 627 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 627 628 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 628 629 (tag-type comment block-side t) 629 634 (face web-mode-block-control-face tag-type comment block-side t) 634 635 (tag-type comment block-side t) 635 636 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 636 637 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 637 667 (font-lock-face web-mode-comment-face tag-type comment) 667 668 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 668 669 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 669 670 (tag-type comment block-side t) 670 674 (face web-mode-variable-name-face tag-type comment block-side t) 674 675 (tag-type comment block-side t) 675 679 (face web-mode-variable-name-face tag-type comment block-side t) 679 682 (tag-type comment block-side t) 682 686 (face web-mode-filter-face tag-type comment block-side t) 686 688 (tag-type comment block-side t) 688 690 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 690 691 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 691 693 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 693 694 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 694 697 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 697 698 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 698 699 (font-lock-face web-mode-block-string-face tag-type comment block-token string block-side t) 699 700 (tag-type comment block-side t) 700 701 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 701 702 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 702 703 (font-lock-face web-mode-comment-face tag-type comment) 703 711 (font-lock-face (web-mode-comment-face web-mode-html-entity-face) tag-type comment) 711 712 (font-lock-face web-mode-comment-face tag-type comment) 712 713 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t block-controls 0 block-beg 0) 713 714 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-beg block-side t) 714 715 (tag-type comment block-side t) 715 722 (face web-mode-block-control-face tag-type comment block-side t) 722 723 (tag-type comment block-side t) 723 737 (face web-mode-variable-name-face tag-type comment block-side t) 737 738 (tag-type comment block-side t) 738 745 (face web-mode-variable-name-face tag-type comment block-side t) 745 746 (tag-type comment block-side t) 746 758 (face web-mode-variable-name-face tag-type comment block-side t) 758 759 (tag-type comment block-side t) 759 760 (font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-side t) 760 761 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face tag-type comment block-token delimiter-end block-end t block-side t) 761 825 (font-lock-face web-mode-comment-face tag-type comment) 825 826 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 215) (undo-tree-id88 . -826) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -44) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -826)) ((215 . 1041)) (25353 7923 168625 943000) 0 nil])
([nil nil ((#("site" 0 4 (face web-mode-variable-name-face block-side t)) . 199) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (t 25353 7927 619213 583000)) nil (25353 8970 916353 713000) 0 nil])
([nil nil ((215 . 223)) (("        " . 215) (undo-tree-id201 . -8)) (25353 7922 997142 735000) 0 nil])
([nil nil ((nil rear-nonsticky nil 207 . 208) (nil block-side t 199 . 208) (nil face web-mode-variable-name-face 199 . 208) (199 . 208)) nil (25353 8970 916347 902000) 0 nil])
([nil nil ((223 . 224)) (("\\" . 223) (undo-tree-id200 . -1)) (25353 7922 832752 614000) 0 nil])
([nil nil ((#("<div class=\"container\">
  <div class=\"row\">
    <div class=\"col-lg-8 col-md-10 mx-auto\">
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 27 30 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 30 31 (tag-type start tag-name "div") 31 32 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 32 36 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 36 37 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 37 41 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 41 42 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 42 43 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 49 52 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 52 53 (tag-type start tag-name "div") 53 54 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 54 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 58 59 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 59 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 87 88 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 58) (undo-tree-id218 . -89) (undo-tree-id219 . -88) (undo-tree-id220 . -24) (undo-tree-id221 . -89)) nil (25353 8970 916345 526000) 0 nil])
([nil nil (("\\" . -223) (undo-tree-id87 . -1) 224) ((223 . 224)) (25353 7922 667132 172000) 0 nil])
([nil nil (("
" . -56) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) ("
" . -57) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 58) nil (25353 8970 916338 644000) 0 nil])
([nil nil ((223 . 225)) ((">p" . 223) (undo-tree-id199 . -2)) (25353 7922 367014 537000) 0 nil])
([nil nil ((#("
    </div>
  </div>
</div>" 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 7 10 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 15 16 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 16 19 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 22 23 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 23 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 940) (undo-tree-id206 . -27) (undo-tree-id207 . -27) (undo-tree-id208 . -1) (undo-tree-id209 . -27)) nil (25353 8970 916327 225000) 0 nil])
([nil nil ((">" . -223) (undo-tree-id85 . -1) ("p" . -224) (undo-tree-id86 . -1) 225) ((223 . 225)) (25353 7922 59771 286000) 0 nil])
([nil nil (("      " . -789) ("      " . -783) ("      " . -769) ("      " . -762) ("      " . -663) ("      " . -654) ("      " . -636) ("      " . -612) ("      " . -593) ("      " . -569) ("      " . -540) ("      " . -503) ("      " . -494) ("      " . -478) ("      " . -389) ("      " . -370) ("      " . -313) ("      " . -282) ("      " . -231) ("      " . -154) (#("      " 0 6 (face whitespace-trailing)) . -119) (undo-tree-id205 . -6) ("      " . -81) ("      " . -57)) nil (25353 8970 916315 896000) 0 nil])
([nil nil ((228 . 238) (227 . 229) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -227) (227 . 228) (226 . 228) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -226) (226 . 227) (223 . 230)) ((#("<p></p>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 5 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 223) (undo-tree-id195 . -3) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . 226) (226 . 227) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face)) 1 2 (face (rainbow-delimiters-depth-1-face))) . 226) (undo-tree-id196 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . 227) (227 . 228) (#("{}" 0 1 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 1 2 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t)) . 227) (undo-tree-id197 . -1) (#("post.name " 0 2 (face web-mode-variable-name-face block-side t) 2 3 (face web-mode-variable-name-face block-side t) 3 4 (face web-mode-variable-name-face block-side t) 4 5 (block-side t) 5 9 (face web-mode-variable-name-face block-side t) 9 10 (block-side t)) . 228) (undo-tree-id198 . -10)) (25353 7921 875244 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1373 . 1374) (nil block-side t 1373 . 1374) (nil block-end t 1373 . 1374) (nil block-token delimiter-end 1373 . 1374) (nil font-lock-face web-mode-block-delimiter-face 1373 . 1374) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1373 . 1374) (nil block-side t 1372 . 1373) (nil block-token delimiter-end 1372 . 1373) (nil font-lock-face web-mode-block-delimiter-face 1372 . 1373) (nil block-side t 1371 . 1372) (nil block-side t 1366 . 1371) (nil face web-mode-block-control-face 1366 . 1371) (nil block-side t 1365 . 1366) (nil block-side t 1364 . 1365) (nil block-token delimiter-beg 1364 . 1365) (nil font-lock-face web-mode-block-delimiter-face 1364 . 1365) (nil block-beg 0 1363 . 1364) (nil block-controls 0 1363 . 1364) (nil block-side t 1363 . 1364) (nil block-token delimiter-beg 1363 . 1364) (nil font-lock-face web-mode-block-delimiter-face 1363 . 1364) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1363 . 1364) (nil tag-name "div" 1360 . 1361) (nil tag-type end 1360 . 1361) (nil tag-end t 1360 . 1361) (nil font-lock-face web-mode-html-tag-bracket-face 1360 . 1361) (nil tag-name "div" 1357 . 1360) (nil tag-type end 1357 . 1360) (nil font-lock-face web-mode-html-tag-face 1357 . 1360) (nil tag-name "div" 1356 . 1357) (nil tag-type end 1356 . 1357) (nil font-lock-face web-mode-html-tag-bracket-face 1356 . 1357) (nil tag-name "div" 1355 . 1356) (nil tag-type end 1355 . 1356) (nil tag-beg 20 1355 . 1356) (nil font-lock-face web-mode-html-tag-bracket-face 1355 . 1356) (nil block-side t 1352 . 1353) (nil block-end t 1352 . 1353) (nil block-token delimiter-end 1352 . 1353) (nil font-lock-face web-mode-block-delimiter-face 1352 . 1353) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1352 . 1353) (nil block-side t 1351 . 1352) (nil block-token delimiter-end 1351 . 1352) (nil font-lock-face web-mode-block-delimiter-face 1351 . 1352) (nil block-side t 1350 . 1351) (nil block-side t 1345 . 1350) (nil face web-mode-block-control-face 1345 . 1350) (nil block-side t 1344 . 1345) (nil block-side t 1343 . 1344) (nil block-token delimiter-beg 1343 . 1344) (nil font-lock-face web-mode-block-delimiter-face 1343 . 1344) (nil block-beg 0 1342 . 1343) (nil block-controls 0 1342 . 1343) (nil block-side t 1342 . 1343) (nil block-token delimiter-beg 1342 . 1343) (nil font-lock-face web-mode-block-delimiter-face 1342 . 1343) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1342 . 1343) (nil tag-name "a" 1338 . 1339) (nil tag-type end 1338 . 1339) (nil tag-end t 1338 . 1339) (nil font-lock-face web-mode-html-tag-bracket-face 1338 . 1339) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1338 . 1339) (nil tag-name "a" 1337 . 1338) (nil tag-type end 1337 . 1338) (nil font-lock-face web-mode-html-tag-face 1337 . 1338) (nil face (whitespace-line web-mode-html-tag-face) 1337 . 1338) (nil tag-name "a" 1336 . 1337) (nil tag-type end 1336 . 1337) (nil font-lock-face web-mode-html-tag-bracket-face 1336 . 1337) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1336 . 1337) (nil tag-name "a" 1335 . 1336) (nil tag-type end 1335 . 1336) (nil tag-beg 20 1335 . 1336) (nil font-lock-face web-mode-html-tag-bracket-face 1335 . 1336) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1335 . 1336) (nil font-lock-face (web-mode-html-entity-face) 1329 . 1335) (nil face (whitespace-line web-mode-html-entity-face) 1329 . 1335) (nil face (whitespace-line) 1328 . 1329) (nil tag-name "span" 1327 . 1328) (nil tag-type end 1327 . 1328) (nil tag-end t 1327 . 1328) (nil font-lock-face web-mode-html-tag-bracket-face 1327 . 1328) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1327 . 1328) (nil tag-name "span" 1323 . 1327) (nil tag-type end 1323 . 1327) (nil font-lock-face web-mode-html-tag-face 1323 . 1327) (nil face (whitespace-line web-mode-html-tag-face) 1323 . 1327) (nil tag-name "span" 1322 . 1323) (nil tag-type end 1322 . 1323) (nil font-lock-face web-mode-html-tag-bracket-face 1322 . 1323) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1322 . 1323) (nil tag-name "span" 1321 . 1322) (nil tag-type end 1321 . 1322) (nil tag-beg 20 1321 . 1322) (nil font-lock-face web-mode-html-tag-bracket-face 1321 . 1322) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1321 . 1322) (nil face (whitespace-line) 1315 . 1321) (nil tag-name "span" 1314 . 1315) (nil tag-type start 1314 . 1315) (nil tag-end t 1314 . 1315) (nil font-lock-face web-mode-html-tag-bracket-face 1314 . 1315) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1314 . 1315) (nil tag-attr t 1313 . 1314) (nil tag-attr-end 5 1313 . 1314) (nil tag-name "span" 1313 . 1314) (nil tag-type start 1313 . 1314) (nil font-lock-face web-mode-html-attr-value-face 1313 . 1314) (nil face (whitespace-line web-mode-html-attr-value-face) 1313 . 1314) (nil tag-attr t 1303 . 1313) (nil tag-name "span" 1303 . 1313) (nil tag-type start 1303 . 1313) (nil font-lock-face web-mode-html-attr-value-face 1303 . 1313) (nil face (whitespace-line web-mode-html-attr-value-face) 1303 . 1313) (nil tag-attr t 1294 . 1303) (nil tag-name "span" 1294 . 1303) (nil tag-type start 1294 . 1303) (nil font-lock-face web-mode-html-attr-value-face 1294 . 1303) (nil tag-attr t 1293 . 1294) (nil tag-name "span" 1293 . 1294) (nil tag-type start 1293 . 1294) (nil font-lock-face web-mode-html-attr-equal-face 1293 . 1294) (nil tag-attr t 1289 . 1293) (nil tag-name "span" 1289 . 1293) (nil tag-type start 1289 . 1293) (nil font-lock-face web-mode-html-attr-name-face 1289 . 1293) (nil tag-attr-beg 0 1288 . 1289) (nil tag-attr t 1288 . 1289) (nil tag-name "span" 1288 . 1289) (nil tag-type start 1288 . 1289) (nil font-lock-face web-mode-html-attr-name-face 1288 . 1289) (nil tag-name "span" 1287 . 1288) (nil tag-type start 1287 . 1288) (nil tag-name "span" 1283 . 1287) (nil tag-type start 1283 . 1287) (nil font-lock-face web-mode-html-tag-face 1283 . 1287) (nil tag-name "span" 1282 . 1283) (nil tag-type start 1282 . 1283) (nil tag-beg 17 1282 . 1283) (nil font-lock-face web-mode-html-tag-bracket-face 1282 . 1283) (nil tag-name "a" 1276 . 1277) (nil tag-type start 1276 . 1277) (nil tag-end t 1276 . 1277) (nil font-lock-face web-mode-html-tag-bracket-face 1276 . 1277) (nil tag-attr t 1275 . 1276) (nil tag-attr-end 4 1275 . 1276) (nil tag-name "a" 1275 . 1276) (nil tag-type start 1275 . 1276) (nil font-lock-face web-mode-html-attr-value-face 1275 . 1276) (nil block-side t 1274 . 1275) (nil block-end t 1274 . 1275) (nil block-token delimiter-end 1274 . 1275) (nil tag-attr t 1274 . 1275) (nil tag-name "a" 1274 . 1275) (nil tag-type start 1274 . 1275) (nil font-lock-face web-mode-block-delimiter-face 1274 . 1275) (nil block-side t 1273 . 1274) (nil block-token delimiter-end 1273 . 1274) (nil tag-attr t 1273 . 1274) (nil tag-name "a" 1273 . 1274) (nil tag-type start 1273 . 1274) (nil font-lock-face web-mode-block-delimiter-face 1273 . 1274) (nil block-side t 1272 . 1273) (nil tag-attr t 1272 . 1273) (nil tag-name "a" 1272 . 1273) (nil tag-type start 1272 . 1273) (nil block-side t 1269 . 1272) (nil block-token string 1269 . 1272) (nil tag-attr t 1269 . 1272) (nil tag-name "a" 1269 . 1272) (nil tag-type start 1269 . 1272) (nil font-lock-face web-mode-block-string-face 1269 . 1272) (nil block-side t 1267 . 1269) (nil tag-attr t 1267 . 1269) (nil tag-name "a" 1267 . 1269) (nil tag-type start 1267 . 1269) (nil block-side t 1263 . 1267) (nil block-token string 1263 . 1267) (nil tag-attr t 1263 . 1267) (nil tag-name "a" 1263 . 1267) (nil tag-type start 1263 . 1267) (nil font-lock-face web-mode-block-string-face 1263 . 1267) (nil block-side t 1261 . 1263) (nil tag-attr t 1261 . 1263) (nil tag-name "a" 1261 . 1263) (nil tag-type start 1261 . 1263) (nil block-side t 1254 . 1261) (nil tag-attr t 1254 . 1261) (nil tag-name "a" 1254 . 1261) (nil tag-type start 1254 . 1261) (nil face web-mode-filter-face 1254 . 1261) (nil block-side t 1251 . 1254) (nil tag-attr t 1251 . 1254) (nil tag-name "a" 1251 . 1254) (nil tag-type start 1251 . 1254) (nil block-side t 1244 . 1251) (nil tag-attr t 1244 . 1251) (nil tag-name "a" 1244 . 1251) (nil tag-type start 1244 . 1251) (nil face web-mode-variable-name-face 1244 . 1251) (nil block-side t 1243 . 1244) (nil tag-attr t 1243 . 1244) (nil tag-name "a" 1243 . 1244) (nil tag-type start 1243 . 1244) (nil block-side t 1239 . 1243) (nil tag-attr t 1239 . 1243) (nil tag-name "a" 1239 . 1243) (nil tag-type start 1239 . 1243) (nil face web-mode-variable-name-face 1239 . 1243) (nil block-side t 1237 . 1239) (nil tag-attr t 1237 . 1239) (nil tag-name "a" 1237 . 1239) (nil tag-type start 1237 . 1239) (nil block-side t 1230 . 1237) (nil tag-attr t 1230 . 1237) (nil tag-name "a" 1230 . 1237) (nil tag-type start 1230 . 1237) (nil face web-mode-filter-face 1230 . 1237) (nil block-side t 1227 . 1230) (nil tag-attr t 1227 . 1230) (nil tag-name "a" 1227 . 1230) (nil tag-type start 1227 . 1230) (nil block-side t 1213 . 1227) (nil tag-attr t 1213 . 1227) (nil tag-name "a" 1213 . 1227) (nil tag-type start 1213 . 1227) (nil face web-mode-variable-name-face 1213 . 1227) (nil block-side t 1212 . 1213) (nil tag-attr t 1212 . 1213) (nil tag-name "a" 1212 . 1213) (nil tag-type start 1212 . 1213) (nil block-side t 1203 . 1212) (nil tag-attr t 1203 . 1212) (nil tag-name "a" 1203 . 1212) (nil tag-type start 1203 . 1212) (nil face web-mode-variable-name-face 1203 . 1212) (nil block-side t 1202 . 1203) (nil tag-attr t 1202 . 1203) (nil tag-name "a" 1202 . 1203) (nil tag-type start 1202 . 1203) (nil block-side t 1201 . 1202) (nil block-token delimiter-beg 1201 . 1202) (nil tag-attr t 1201 . 1202) (nil tag-name "a" 1201 . 1202) (nil tag-type start 1201 . 1202) (nil font-lock-face web-mode-block-delimiter-face 1201 . 1202) (nil block-beg 0 1200 . 1201) (nil block-controls 0 1200 . 1201) (nil block-side t 1200 . 1201) (nil block-token delimiter-beg 1200 . 1201) (nil tag-attr t 1200 . 1201) (nil tag-name "a" 1200 . 1201) (nil tag-type start 1200 . 1201) (nil font-lock-face web-mode-block-delimiter-face 1200 . 1201) (nil tag-attr t 1199 . 1200) (nil tag-name "a" 1199 . 1200) (nil tag-type start 1199 . 1200) (nil font-lock-face web-mode-html-attr-value-face 1199 . 1200) (nil tag-attr t 1198 . 1199) (nil tag-name "a" 1198 . 1199) (nil tag-type start 1198 . 1199) (nil font-lock-face web-mode-html-attr-equal-face 1198 . 1199) (nil tag-attr t 1195 . 1198) (nil tag-name "a" 1195 . 1198) (nil tag-type start 1195 . 1198) (nil font-lock-face web-mode-html-attr-name-face 1195 . 1198) (nil tag-attr-beg 0 1194 . 1195) (nil tag-attr t 1194 . 1195) (nil tag-name "a" 1194 . 1195) (nil tag-type start 1194 . 1195) (nil font-lock-face web-mode-html-attr-name-face 1194 . 1195) (nil tag-name "a" 1193 . 1194) (nil tag-type start 1193 . 1194) (nil tag-attr t 1192 . 1193) (nil tag-attr-end 5 1192 . 1193) (nil tag-name "a" 1192 . 1193) (nil tag-type start 1192 . 1193) (nil font-lock-face web-mode-html-attr-value-face 1192 . 1193) (nil tag-attr t 1164 . 1192) (nil tag-name "a" 1164 . 1192) (nil tag-type start 1164 . 1192) (nil font-lock-face web-mode-html-attr-value-face 1164 . 1192) (nil tag-attr t 1163 . 1164) (nil tag-name "a" 1163 . 1164) (nil tag-type start 1163 . 1164) (nil font-lock-face web-mode-html-attr-equal-face 1163 . 1164) (nil tag-attr t 1159 . 1163) (nil tag-name "a" 1159 . 1163) (nil tag-type start 1159 . 1163) (nil font-lock-face web-mode-html-attr-name-face 1159 . 1163) (nil tag-attr-beg 0 1158 . 1159) (nil tag-attr t 1158 . 1159) (nil tag-name "a" 1158 . 1159) (nil tag-type start 1158 . 1159) (nil font-lock-face web-mode-html-attr-name-face 1158 . 1159) (nil tag-name "a" 1157 . 1158) (nil tag-type start 1157 . 1158) (nil tag-name "a" 1156 . 1157) (nil tag-type start 1156 . 1157) (nil font-lock-face web-mode-html-tag-face 1156 . 1157) (nil tag-name "a" 1155 . 1156) (nil tag-type start 1155 . 1156) (nil tag-beg 17 1155 . 1156) (nil font-lock-face web-mode-html-tag-bracket-face 1155 . 1156) (nil block-side t 1151 . 1152) (nil block-end t 1151 . 1152) (nil block-token delimiter-end 1151 . 1152) (nil font-lock-face web-mode-block-delimiter-face 1151 . 1152) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1151 . 1152) (nil block-side t 1150 . 1151) (nil block-token delimiter-end 1150 . 1151) (nil font-lock-face web-mode-block-delimiter-face 1150 . 1151) (nil block-side t 1149 . 1150) (nil block-side t 1130 . 1149) (nil face web-mode-variable-name-face 1130 . 1149) (nil block-side t 1129 . 1130) (nil block-side t 1127 . 1129) (nil face web-mode-block-control-face 1127 . 1129) (nil block-side t 1126 . 1127) (nil block-side t 1125 . 1126) (nil block-token delimiter-beg 1125 . 1126) (nil font-lock-face web-mode-block-delimiter-face 1125 . 1126) (nil block-beg 0 1124 . 1125) (nil block-controls 0 1124 . 1125) (nil block-side t 1124 . 1125) (nil block-token delimiter-beg 1124 . 1125) (nil font-lock-face web-mode-block-delimiter-face 1124 . 1125) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1124 . 1125) (nil block-side t 1119 . 1120) (nil block-end t 1119 . 1120) (nil block-token delimiter-end 1119 . 1120) (nil font-lock-face web-mode-block-delimiter-face 1119 . 1120) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1119 . 1120) (nil block-side t 1118 . 1119) (nil block-token delimiter-end 1118 . 1119) (nil font-lock-face web-mode-block-delimiter-face 1118 . 1119) (nil block-side t 1117 . 1118) (nil block-side t 1112 . 1117) (nil face web-mode-block-control-face 1112 . 1117) (nil block-side t 1111 . 1112) (nil block-side t 1110 . 1111) (nil block-token delimiter-beg 1110 . 1111) (nil font-lock-face web-mode-block-delimiter-face 1110 . 1111) (nil block-beg 0 1109 . 1110) (nil block-controls 0 1109 . 1110) (nil block-side t 1109 . 1110) (nil block-token delimiter-beg 1109 . 1110) (nil font-lock-face web-mode-block-delimiter-face 1109 . 1110) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1109 . 1110) (nil tag-name "a" 1105 . 1106) (nil tag-type end 1105 . 1106) (nil tag-end t 1105 . 1106) (nil font-lock-face web-mode-html-tag-bracket-face 1105 . 1106) (nil tag-name "a" 1104 . 1105) (nil tag-type end 1104 . 1105) (nil font-lock-face web-mode-html-tag-face 1104 . 1105) (nil tag-name "a" 1103 . 1104) (nil tag-type end 1103 . 1104) (nil font-lock-face web-mode-html-tag-bracket-face 1103 . 1104) (nil tag-name "a" 1102 . 1103) (nil tag-type end 1102 . 1103) (nil tag-beg 20 1102 . 1103) (nil font-lock-face web-mode-html-tag-bracket-face 1102 . 1103) (nil tag-name "span" 1101 . 1102) (nil tag-type end 1101 . 1102) (nil tag-end t 1101 . 1102) (nil font-lock-face web-mode-html-tag-bracket-face 1101 . 1102) (nil tag-name "span" 1097 . 1101) (nil tag-type end 1097 . 1101) (nil font-lock-face web-mode-html-tag-face 1097 . 1101) (nil tag-name "span" 1096 . 1097) (nil tag-type end 1096 . 1097) (nil font-lock-face web-mode-html-tag-bracket-face 1096 . 1097) (nil tag-name "span" 1095 . 1096) (nil tag-type end 1095 . 1096) (nil tag-beg 20 1095 . 1096) (nil font-lock-face web-mode-html-tag-bracket-face 1095 . 1096) (nil tag-name "span" 1088 . 1089) (nil tag-type start 1088 . 1089) (nil tag-end t 1088 . 1089) (nil font-lock-face web-mode-html-tag-bracket-face 1088 . 1089) (nil tag-attr t 1087 . 1088) (nil tag-attr-end 5 1087 . 1088) (nil tag-name "span" 1087 . 1088) (nil tag-type start 1087 . 1088) (nil font-lock-face web-mode-html-attr-value-face 1087 . 1088) (nil tag-attr t 1068 . 1087) (nil tag-name "span" 1068 . 1087) (nil tag-type start 1068 . 1087) (nil font-lock-face web-mode-html-attr-value-face 1068 . 1087) (nil tag-attr t 1067 . 1068) (nil tag-name "span" 1067 . 1068) (nil tag-type start 1067 . 1068) (nil font-lock-face web-mode-html-attr-equal-face 1067 . 1068) (nil tag-attr t 1063 . 1067) (nil tag-name "span" 1063 . 1067) (nil tag-type start 1063 . 1067) (nil font-lock-face web-mode-html-attr-name-face 1063 . 1067) (nil tag-attr-beg 0 1062 . 1063) (nil tag-attr t 1062 . 1063) (nil tag-name "span" 1062 . 1063) (nil tag-type start 1062 . 1063) (nil font-lock-face web-mode-html-attr-name-face 1062 . 1063) (nil tag-name "span" 1061 . 1062) (nil tag-type start 1061 . 1062) (nil tag-name "span" 1057 . 1061) (nil tag-type start 1057 . 1061) (nil font-lock-face web-mode-html-tag-face 1057 . 1061) (nil tag-name "span" 1056 . 1057) (nil tag-type start 1056 . 1057) (nil tag-beg 17 1056 . 1057) (nil font-lock-face web-mode-html-tag-bracket-face 1056 . 1057) (nil font-lock-face (web-mode-html-entity-face) 1040 . 1046) (nil tag-name "a" 1039 . 1040) (nil tag-type start 1039 . 1040) (nil tag-end t 1039 . 1040) (nil font-lock-face web-mode-html-tag-bracket-face 1039 . 1040) (nil tag-attr t 1038 . 1039) (nil tag-attr-end 4 1038 . 1039) (nil tag-name "a" 1038 . 1039) (nil tag-type start 1038 . 1039) (nil font-lock-face web-mode-html-attr-value-face 1038 . 1039) (nil block-side t 1037 . 1038) (nil block-end t 1037 . 1038) (nil block-token delimiter-end 1037 . 1038) (nil tag-attr t 1037 . 1038) (nil tag-name "a" 1037 . 1038) (nil tag-type start 1037 . 1038) (nil font-lock-face web-mode-block-delimiter-face 1037 . 1038) (nil block-side t 1036 . 1037) (nil block-token delimiter-end 1036 . 1037) (nil tag-attr t 1036 . 1037) (nil tag-name "a" 1036 . 1037) (nil tag-type start 1036 . 1037) (nil font-lock-face web-mode-block-delimiter-face 1036 . 1037) (nil block-side t 1035 . 1036) (nil tag-attr t 1035 . 1036) (nil tag-name "a" 1035 . 1036) (nil tag-type start 1035 . 1036) (nil block-side t 1032 . 1035) (nil block-token string 1032 . 1035) (nil tag-attr t 1032 . 1035) (nil tag-name "a" 1032 . 1035) (nil tag-type start 1032 . 1035) (nil font-lock-face web-mode-block-string-face 1032 . 1035) (nil block-side t 1030 . 1032) (nil tag-attr t 1030 . 1032) (nil tag-name "a" 1030 . 1032) (nil tag-type start 1030 . 1032) (nil block-side t 1026 . 1030) (nil block-token string 1026 . 1030) (nil tag-attr t 1026 . 1030) (nil tag-name "a" 1026 . 1030) (nil tag-type start 1026 . 1030) (nil font-lock-face web-mode-block-string-face 1026 . 1030) (nil block-side t 1024 . 1026) (nil tag-attr t 1024 . 1026) (nil tag-name "a" 1024 . 1026) (nil tag-type start 1024 . 1026) (nil block-side t 1017 . 1024) (nil tag-attr t 1017 . 1024) (nil tag-name "a" 1017 . 1024) (nil tag-type start 1017 . 1024) (nil face web-mode-filter-face 1017 . 1024) (nil block-side t 1014 . 1017) (nil tag-attr t 1014 . 1017) (nil tag-name "a" 1014 . 1017) (nil tag-type start 1014 . 1017) (nil block-side t 1007 . 1014) (nil tag-attr t 1007 . 1014) (nil tag-name "a" 1007 . 1014) (nil tag-type start 1007 . 1014) (nil face web-mode-variable-name-face 1007 . 1014) (nil block-side t 1006 . 1007) (nil tag-attr t 1006 . 1007) (nil tag-name "a" 1006 . 1007) (nil tag-type start 1006 . 1007) (nil block-side t 1002 . 1006) (nil tag-attr t 1002 . 1006) (nil tag-name "a" 1002 . 1006) (nil tag-type start 1002 . 1006) (nil face web-mode-variable-name-face 1002 . 1006) (nil block-side t 1000 . 1002) (nil tag-attr t 1000 . 1002) (nil tag-name "a" 1000 . 1002) (nil tag-type start 1000 . 1002) (nil block-side t 993 . 1000) (nil tag-attr t 993 . 1000) (nil tag-name "a" 993 . 1000) (nil tag-type start 993 . 1000) (nil face web-mode-filter-face 993 . 1000) (nil block-side t 990 . 993) (nil tag-attr t 990 . 993) (nil tag-name "a" 990 . 993) (nil tag-type start 990 . 993) (nil block-side t 972 . 990) (nil tag-attr t 972 . 990) (nil tag-name "a" 972 . 990) (nil tag-type start 972 . 990) (nil face web-mode-variable-name-face 972 . 990) (nil block-side t 971 . 972) (nil tag-attr t 971 . 972) (nil tag-name "a" 971 . 972) (nil tag-type start 971 . 972) (nil block-side t 962 . 971) (nil tag-attr t 962 . 971) (nil tag-name "a" 962 . 971) (nil tag-type start 962 . 971) (nil face web-mode-variable-name-face 962 . 971) (nil block-side t 961 . 962) (nil tag-attr t 961 . 962) (nil tag-name "a" 961 . 962) (nil tag-type start 961 . 962) (nil block-side t 960 . 961) (nil block-token delimiter-beg 960 . 961) (nil tag-attr t 960 . 961) (nil tag-name "a" 960 . 961) (nil tag-type start 960 . 961) (nil font-lock-face web-mode-block-delimiter-face 960 . 961) (nil block-beg 0 959 . 960) (nil block-controls 0 959 . 960) (nil block-side t 959 . 960) (nil block-token delimiter-beg 959 . 960) (nil tag-attr t 959 . 960) (nil tag-name "a" 959 . 960) (nil tag-type start 959 . 960) (nil font-lock-face web-mode-block-delimiter-face 959 . 960) (nil tag-attr t 958 . 959) (nil tag-name "a" 958 . 959) (nil tag-type start 958 . 959) (nil font-lock-face web-mode-html-attr-value-face 958 . 959) (nil tag-attr t 957 . 958) (nil tag-name "a" 957 . 958) (nil tag-type start 957 . 958) (nil font-lock-face web-mode-html-attr-equal-face 957 . 958) (nil tag-attr t 954 . 957) (nil tag-name "a" 954 . 957) (nil tag-type start 954 . 957) (nil font-lock-face web-mode-html-attr-name-face 954 . 957) (nil tag-attr-beg 0 953 . 954) (nil tag-attr t 953 . 954) (nil tag-name "a" 953 . 954) (nil tag-type start 953 . 954) (nil font-lock-face web-mode-html-attr-name-face 953 . 954) (nil tag-name "a" 952 . 953) (nil tag-type start 952 . 953) (nil tag-attr t 951 . 952) (nil tag-attr-end 5 951 . 952) (nil tag-name "a" 951 . 952) (nil tag-type start 951 . 952) (nil font-lock-face web-mode-html-attr-value-face 951 . 952) (nil tag-attr t 924 . 951) (nil tag-name "a" 924 . 951) (nil tag-type start 924 . 951) (nil font-lock-face web-mode-html-attr-value-face 924 . 951) (nil tag-attr t 923 . 924) (nil tag-name "a" 923 . 924) (nil tag-type start 923 . 924) (nil font-lock-face web-mode-html-attr-equal-face 923 . 924) (nil tag-attr t 919 . 923) (nil tag-name "a" 919 . 923) (nil tag-type start 919 . 923) (nil font-lock-face web-mode-html-attr-name-face 919 . 923) (nil tag-attr-beg 0 918 . 919) (nil tag-attr t 918 . 919) (nil tag-name "a" 918 . 919) (nil tag-type start 918 . 919) (nil font-lock-face web-mode-html-attr-name-face 918 . 919) (nil tag-name "a" 917 . 918) (nil tag-type start 917 . 918) (nil tag-name "a" 916 . 917) (nil tag-type start 916 . 917) (nil font-lock-face web-mode-html-tag-face 916 . 917) (nil tag-name "a" 915 . 916) (nil tag-type start 915 . 916) (nil tag-beg 17 915 . 916) (nil font-lock-face web-mode-html-tag-bracket-face 915 . 916) (nil block-side t 911 . 912) (nil block-end t 911 . 912) (nil block-token delimiter-end 911 . 912) (nil font-lock-face web-mode-block-delimiter-face 911 . 912) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 911 . 912) (nil block-side t 910 . 911) (nil block-token delimiter-end 910 . 911) (nil font-lock-face web-mode-block-delimiter-face 910 . 911) (nil block-side t 909 . 910) (nil block-side t 886 . 909) (nil face web-mode-variable-name-face 886 . 909) (nil block-side t 885 . 886) (nil block-side t 883 . 885) (nil face web-mode-block-control-face 883 . 885) (nil block-side t 882 . 883) (nil block-side t 881 . 882) (nil block-token delimiter-beg 881 . 882) (nil font-lock-face web-mode-block-delimiter-face 881 . 882) (nil block-beg 0 880 . 881) (nil block-controls 0 880 . 881) (nil block-side t 880 . 881) (nil block-token delimiter-beg 880 . 881) (nil font-lock-face web-mode-block-delimiter-face 880 . 881) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 880 . 881) (nil tag-name "div" 875 . 876) (nil tag-type start 875 . 876) (nil tag-end t 875 . 876) (nil font-lock-face web-mode-html-tag-bracket-face 875 . 876) (nil tag-attr t 874 . 875) (nil tag-attr-end 5 874 . 875) (nil tag-name "div" 874 . 875) (nil tag-type start 874 . 875) (nil font-lock-face web-mode-html-attr-value-face 874 . 875) (nil tag-attr t 865 . 874) (nil tag-name "div" 865 . 874) (nil tag-type start 865 . 874) (nil font-lock-face web-mode-html-attr-value-face 865 . 874) (nil tag-attr t 864 . 865) (nil tag-name "div" 864 . 865) (nil tag-type start 864 . 865) (nil font-lock-face web-mode-html-attr-equal-face 864 . 865) (nil tag-attr t 860 . 864) (nil tag-name "div" 860 . 864) (nil tag-type start 860 . 864) (nil font-lock-face web-mode-html-attr-name-face 860 . 864) (nil tag-attr-beg 0 859 . 860) (nil tag-attr t 859 . 860) (nil tag-name "div" 859 . 860) (nil tag-type start 859 . 860) (nil font-lock-face web-mode-html-attr-name-face 859 . 860) (nil tag-name "div" 858 . 859) (nil tag-type start 858 . 859) (nil tag-name "div" 855 . 858) (nil tag-type start 855 . 858) (nil font-lock-face web-mode-html-tag-face 855 . 858) (nil tag-name "div" 854 . 855) (nil tag-type start 854 . 855) (nil tag-beg 17 854 . 855) (nil font-lock-face web-mode-html-tag-bracket-face 854 . 855) (nil block-side t 851 . 852) (nil block-end t 851 . 852) (nil block-token delimiter-end 851 . 852) (nil font-lock-face web-mode-block-delimiter-face 851 . 852) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 851 . 852) (nil block-side t 850 . 851) (nil block-token delimiter-end 850 . 851) (nil font-lock-face web-mode-block-delimiter-face 850 . 851) (nil block-side t 849 . 850) (nil block-side t 848 . 849) (nil face web-mode-variable-name-face 848 . 849) (nil block-side t 845 . 848) (nil block-side t 824 . 845) (nil face web-mode-variable-name-face 824 . 845) (nil block-side t 823 . 824) (nil block-side t 821 . 823) (nil face web-mode-block-control-face 821 . 823) (nil block-side t 820 . 821) (nil block-side t 819 . 820) (nil block-token delimiter-beg 819 . 820) (nil font-lock-face web-mode-block-delimiter-face 819 . 820) (nil block-beg 0 818 . 819) (nil block-controls 0 818 . 819) (nil block-side t 818 . 819) (nil block-token delimiter-beg 818 . 819) (nil font-lock-face web-mode-block-delimiter-face 818 . 819) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 818 . 819) (nil tag-type comment 816 . 817) (nil tag-end t 816 . 817) (nil font-lock-face web-mode-comment-face 816 . 817) (nil tag-type comment 804 . 816) (nil font-lock-face web-mode-comment-face 804 . 816) (nil tag-type comment 803 . 804) (nil tag-beg 0 803 . 804) (nil font-lock-face web-mode-comment-face 803 . 804) (803 . 1374)) nil (25353 8970 916255 741000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -237) (undo-tree-id84 . -1) 238) ((237 . 238)) (25353 7921 673755 904000) 0 nil])
([nil nil ((1374 . 1375)) nil (25353 8970 916083 940000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -193) (undo-tree-id81 . -1) (#("t" 0 1 (face web-mode-variable-name-face block-side t)) . -194) (undo-tree-id83 . -1) 195) ((193 . 195)) (25353 7921 412780 174000) 0 nil])
([nil nil ((#("paginator" 0 8 (face web-mode-variable-name-face block-side t) 8 9 (face web-mode-variable-name-face block-side t rear-nonsticky t)) . 96) (undo-tree-id242 . -9) (undo-tree-id243 . -9) (t 25353 8970 928832 545000)) nil (25353 9098 960241 150000) 0 nil])
([nil nil ((193 . 194)) ((#("e" 0 1 (face web-mode-variable-name-face block-side t)) . 193) (undo-tree-id194 . -1)) (25353 7921 235422 658000) 0 nil])
([nil nil ((96 . 100)) nil (25353 9099 421914 466000) 0 nil])
([nil nil ((194 . 195)) ((#("m" 0 1 (face web-mode-variable-name-face block-side t)) . 194)) (25353 7921 56875 978000) 0 nil])
([nil nil (("
background: '/img/Banner_dark.png'" . 17) (undo-tree-id263 . -35) (undo-tree-id264 . -1) (undo-tree-id265 . -35) (t 25353 9102 606071 308000)) nil (25353 9225 604720 317000) 0 nil] [nil nil ((#("<!-- Pager -->
{% if paginator.total_pages > 1 %}

<div class=\"clearfix\">

  {% if paginator.previous_page %}
  <a class=\"btn btn-primary float-left\" href=\"{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}\">&larr;
    Newer<span class=\"d-none d-md-inline\"> Posts</span></a>
  {% endif %}

  {% if paginator.next_page %}
  <a class=\"btn btn-primary float-right\" href=\"{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}\">Older<span class=\"d-none d-md-inline\"> Posts</span> &rarr;</a>
  {% endif %}

</div>" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 13 (font-lock-face web-mode-comment-face tag-type comment) 13 14 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 15 16 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 16 17 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 17 18 (block-side t) 18 20 (face web-mode-block-control-face block-side t) 20 21 (block-side t) 21 42 (face web-mode-variable-name-face block-side t) 42 45 (block-side t) 45 46 (face web-mode-variable-name-face block-side t) 46 47 (block-side t) 47 48 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 48 49 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 51 52 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 52 55 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 55 56 (tag-type start tag-name "div") 56 57 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 57 61 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 61 62 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 62 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 71 72 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 72 73 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 77 78 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 78 79 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 79 80 (block-side t) 80 82 (face web-mode-block-control-face block-side t) 82 83 (block-side t) 83 106 (face web-mode-variable-name-face block-side t) 106 107 (block-side t) 107 108 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 108 109 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 112 113 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 113 114 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 114 115 (tag-type start tag-name "a") 115 116 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 116 120 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 120 121 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 121 148 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 148 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 149 150 (tag-type start tag-name "a") 150 151 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 151 154 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 154 155 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 155 156 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 156 157 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 157 158 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 158 159 (tag-type start tag-name "a" tag-attr t block-side t) 159 168 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 168 169 (tag-type start tag-name "a" tag-attr t block-side t) 169 187 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 187 190 (tag-type start tag-name "a" tag-attr t block-side t) 190 197 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 197 199 (tag-type start tag-name "a" tag-attr t block-side t) 199 203 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 203 204 (tag-type start tag-name "a" tag-attr t block-side t) 204 211 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 211 214 (tag-type start tag-name "a" tag-attr t block-side t) 214 221 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 221 223 (tag-type start tag-name "a" tag-attr t block-side t) 223 227 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 227 229 (tag-type start tag-name "a" tag-attr t block-side t) 229 232 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 232 233 (tag-type start tag-name "a" tag-attr t block-side t) 233 234 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-side t) 234 235 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-end t block-side t) 235 236 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 236 237 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 237 243 (font-lock-face (web-mode-html-entity-face)) 253 254 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 254 258 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 258 259 (tag-type start tag-name "span") 259 260 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 260 264 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 264 265 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 265 284 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 284 285 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 285 286 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 292 293 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 293 294 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 294 298 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 298 299 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 299 300 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 301 302 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 302 303 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 306 307 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 307 308 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 308 309 (block-side t) 309 314 (face web-mode-block-control-face block-side t) 314 315 (block-side t) 315 316 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 316 317 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 321 322 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 322 323 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 323 324 (block-side t) 324 326 (face web-mode-block-control-face block-side t) 326 327 (block-side t) 327 346 (face web-mode-variable-name-face block-side t) 346 347 (block-side t) 347 348 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 348 349 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 352 353 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 353 354 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 354 355 (tag-type start tag-name "a") 355 356 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 356 360 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 360 361 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 361 389 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 389 390 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 390 391 (tag-type start tag-name "a") 391 392 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 392 395 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 395 396 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 396 397 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 397 398 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 398 399 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 399 400 (tag-type start tag-name "a" tag-attr t block-side t) 400 409 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 409 410 (tag-type start tag-name "a" tag-attr t block-side t) 410 424 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 424 427 (tag-type start tag-name "a" tag-attr t block-side t) 427 434 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 434 436 (tag-type start tag-name "a" tag-attr t block-side t) 436 440 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 440 441 (tag-type start tag-name "a" tag-attr t block-side t) 441 448 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 448 451 (tag-type start tag-name "a" tag-attr t block-side t) 451 458 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 458 460 (tag-type start tag-name "a" tag-attr t block-side t) 460 464 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 464 466 (tag-type start tag-name "a" tag-attr t block-side t) 466 469 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 469 470 (tag-type start tag-name "a" tag-attr t block-side t) 470 471 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-side t) 471 472 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-end t block-side t) 472 473 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 473 474 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 479 480 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 480 484 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 484 485 (tag-type start tag-name "span") 485 486 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 486 490 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 490 491 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 491 500 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 500 510 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 510 511 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 511 512 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 518 519 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 519 520 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 520 524 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 524 525 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 526 532 (font-lock-face (web-mode-html-entity-face)) 532 533 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 533 534 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 534 535 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 535 536 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 539 540 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 540 541 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 541 542 (block-side t) 542 547 (face web-mode-block-control-face block-side t) 547 548 (block-side t) 548 549 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 549 550 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 552 553 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 553 554 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 554 557 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 557 558 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 798) (undo-tree-id239 . -558) (undo-tree-id240 . -15) (undo-tree-id241 . -558)) ((798 . 1356)) (25353 9098 962889 415000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -230) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("t" 0 1 (face web-mode-variable-name-face block-side t)) . -231) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 232) ((230 . 232)) (25353 7920 889206 566000) 0 nil])
([nil nil ((#("
<!-- Pager -->
{% if paginator.total_pages > 1 %}

<div class=\"clearfix\">

  {% if paginator.previous_page %}
  <a class=\"btn btn-primary float-left\" href=\"{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}\">&larr;
    Newer<span class=\"d-none d-md-inline\"> Posts</span></a>
  {% endif %}

  {% if paginator.next_page %}
  <a class=\"btn btn-primary float-right\" href=\"{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}\">Older<span class=\"d-none d-md-inline\"> Posts</span> &rarr;</a>
  {% endif %}

</div>

{% endif %}" 1 2 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 2 14 (font-lock-face web-mode-comment-face tag-type comment) 14 15 (font-lock-face web-mode-comment-face tag-end t tag-type comment) 16 17 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 17 18 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 18 19 (block-side t) 19 21 (face web-mode-block-control-face block-side t) 21 22 (block-side t) 22 43 (face web-mode-variable-name-face block-side t) 43 46 (block-side t) 46 47 (face web-mode-variable-name-face block-side t) 47 48 (block-side t) 48 49 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 49 50 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 53 56 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 56 57 (tag-type start tag-name "div") 57 58 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 58 62 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 62 63 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 63 72 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 72 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 78 79 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 79 80 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 80 81 (block-side t) 81 83 (face web-mode-block-control-face block-side t) 83 84 (block-side t) 84 107 (face web-mode-variable-name-face block-side t) 107 108 (block-side t) 108 109 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 109 110 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 113 114 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 114 115 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 115 116 (tag-type start tag-name "a") 116 117 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 117 121 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 121 122 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 122 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 149 150 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 150 151 (tag-type start tag-name "a") 151 152 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 152 155 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 155 156 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 156 157 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 157 158 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 158 159 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 159 160 (tag-type start tag-name "a" tag-attr t block-side t) 160 169 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 169 170 (tag-type start tag-name "a" tag-attr t block-side t) 170 188 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 188 191 (tag-type start tag-name "a" tag-attr t block-side t) 191 198 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 198 200 (tag-type start tag-name "a" tag-attr t block-side t) 200 204 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 204 205 (tag-type start tag-name "a" tag-attr t block-side t) 205 212 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 212 215 (tag-type start tag-name "a" tag-attr t block-side t) 215 222 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 222 224 (tag-type start tag-name "a" tag-attr t block-side t) 224 228 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 228 230 (tag-type start tag-name "a" tag-attr t block-side t) 230 233 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 233 234 (tag-type start tag-name "a" tag-attr t block-side t) 234 235 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-side t) 235 236 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-end t block-side t) 236 237 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 237 238 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 238 244 (font-lock-face (web-mode-html-entity-face)) 254 255 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 255 259 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 259 260 (tag-type start tag-name "span") 260 261 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 261 265 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 265 266 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 266 285 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 285 286 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 286 287 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 293 294 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 294 295 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 295 299 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 299 300 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 300 301 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 301 302 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 302 303 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 303 304 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 307 308 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 308 309 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 309 310 (block-side t) 310 315 (face web-mode-block-control-face block-side t) 315 316 (block-side t) 316 317 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 317 318 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 322 323 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 323 324 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 324 325 (block-side t) 325 327 (face web-mode-block-control-face block-side t) 327 328 (block-side t) 328 347 (face web-mode-variable-name-face block-side t) 347 348 (block-side t) 348 349 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 349 350 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 353 354 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 354 355 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 355 356 (tag-type start tag-name "a") 356 357 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 357 361 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 361 362 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 362 390 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 390 391 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 5 tag-attr t) 391 392 (tag-type start tag-name "a") 392 393 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 393 396 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 396 397 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 397 398 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 398 399 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 399 400 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-beg block-side t) 400 401 (tag-type start tag-name "a" tag-attr t block-side t) 401 410 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 410 411 (tag-type start tag-name "a" tag-attr t block-side t) 411 425 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 425 428 (tag-type start tag-name "a" tag-attr t block-side t) 428 435 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 435 437 (tag-type start tag-name "a" tag-attr t block-side t) 437 441 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 441 442 (tag-type start tag-name "a" tag-attr t block-side t) 442 449 (face web-mode-variable-name-face tag-type start tag-name "a" tag-attr t block-side t) 449 452 (tag-type start tag-name "a" tag-attr t block-side t) 452 459 (face web-mode-filter-face tag-type start tag-name "a" tag-attr t block-side t) 459 461 (tag-type start tag-name "a" tag-attr t block-side t) 461 465 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 465 467 (tag-type start tag-name "a" tag-attr t block-side t) 467 470 (font-lock-face web-mode-block-string-face tag-type start tag-name "a" tag-attr t block-token string block-side t) 470 471 (tag-type start tag-name "a" tag-attr t block-side t) 471 472 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-side t) 472 473 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "a" tag-attr t block-token delimiter-end block-end t block-side t) 473 474 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 474 475 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 480 481 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 481 485 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 485 486 (tag-type start tag-name "span") 486 487 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 487 491 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 491 492 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 492 501 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 501 511 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 511 512 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 512 513 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 513 519 (face (whitespace-line)) 519 520 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 520 521 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 521 525 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 525 526 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 526 527 (face (whitespace-line)) 527 533 (face (whitespace-line web-mode-html-entity-face) font-lock-face (web-mode-html-entity-face)) 533 534 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 534 535 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 535 536 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 536 537 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 540 541 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 541 542 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 542 543 (block-side t) 543 548 (face web-mode-block-control-face block-side t) 548 549 (block-side t) 549 550 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 550 551 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 553 554 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 554 555 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 555 558 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 558 559 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 561 562 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 562 563 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 563 564 (block-side t) 564 569 (face web-mode-block-control-face block-side t) 569 570 (block-side t) 570 571 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 571 572 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t rear-nonsticky t)) . 762) (undo-tree-id256 . -572) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -559) (undo-tree-id262 . -572)) nil (25353 9225 604714 419000) 0 nil])
([nil nil (("
" . -796) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) ("
" . -797) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 798) ((796 . 798)) (25353 9098 960224 817000) 0 nil])
([nil nil ((230 . 232)) ((#("em" 0 2 (face web-mode-variable-name-face block-side t)) . 230)) (25353 7920 702381 469000) 0 nil])
([nil nil (("
" . -761) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 762) nil (25353 9225 604704 425000) 0 nil])
nil
([nil nil ((233 . 241) (225 . 234)) ((#(" style=\"\"" 0 1 (tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . 225) (undo-tree-id192 . -8) (#("color:wh" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 233) (undo-tree-id193 . -8)) (25353 7920 473141 313000) 0 nil])
([nil nil ((nil rear-nonsticky nil 83 . 84) (nil block-side t 82 . 84) (nil block-side t 80 . 82) (nil face web-mode-variable-name-face 80 . 82) (nil block-side t 78 . 80) (nil block-side t 73 . 78) (nil face web-mode-variable-name-face 73 . 78) (73 . 84)) nil (25353 9225 604690 34000) 0 nil])
([nil nil ((241 . 246)) ((#("ite; " 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 241) (undo-tree-id191 . -5)) (25353 7920 62254 322000) 0 nil])
([nil nil ((84 . 85)) nil (25353 9225 604686 885000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -245) (undo-tree-id75 . -1) 246) ((245 . 246)) (25353 7919 53438 933000) 0 nil])
([nil nil ((#("%" 0 1 (block-side t rear-nonsticky t)) . -83) (undo-tree-id244 . -1) (#(" " 0 1 (block-side t)) . -84) (undo-tree-id245 . -1) 85) nil (25353 9225 604684 491000) 0 nil])
([nil nil (("
background: '/img/Banner_dark.png'" . 17) (undo-tree-id143 . -35) (undo-tree-id144 . -1) (undo-tree-id145 . -35) (undo-tree-id146 . -35) (t 25353 7594 58340 106000)) ((17 . 52)) (25353 7918 849133 587000) 0 nil])
([nil nil ((771 . 773)) nil (25353 9225 604671 734000) 0 nil])
([nil nil ((113 . 119) (#("      " 0 6 (face whitespace-trailing)) . 112) (112 . 118) (112 . 113)) (("
" . 112) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("      " 0 6 (face whitespace-trailing)) . 112) (112 . 118) ("      " . 113) (undo-tree-id189 . -6) (undo-tree-id190 . -6)) (25353 7918 655950 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 808 . 809) (nil tag-name "div" 808 . 809) (nil tag-type end 808 . 809) (nil tag-end t 808 . 809) (nil font-lock-face web-mode-html-tag-bracket-face 808 . 809) (nil tag-name "div" 805 . 808) (nil tag-type end 805 . 808) (nil font-lock-face web-mode-html-tag-face 805 . 808) (nil tag-name "div" 804 . 805) (nil tag-type end 804 . 805) (nil font-lock-face web-mode-html-tag-bracket-face 804 . 805) (nil tag-name "div" 803 . 804) (nil tag-type end 803 . 804) (nil tag-beg 20 803 . 804) (nil font-lock-face web-mode-html-tag-bracket-face 803 . 804) (nil tag-name "div" 802 . 803) (nil tag-type start 802 . 803) (nil tag-end t 802 . 803) (nil font-lock-face web-mode-html-tag-bracket-face 802 . 803) (nil tag-attr t 801 . 802) (nil tag-attr-end 5 801 . 802) (nil tag-name "div" 801 . 802) (nil tag-type start 801 . 802) (nil font-lock-face web-mode-html-attr-value-face 801 . 802) (nil tag-attr t 784 . 801) (nil tag-name "div" 784 . 801) (nil tag-type start 784 . 801) (nil font-lock-face web-mode-html-attr-value-face 784 . 801) (nil tag-attr t 783 . 784) (nil tag-name "div" 783 . 784) (nil tag-type start 783 . 784) (nil font-lock-face web-mode-html-attr-equal-face 783 . 784) (nil tag-attr t 779 . 783) (nil tag-name "div" 779 . 783) (nil tag-type start 779 . 783) (nil font-lock-face web-mode-html-attr-name-face 779 . 783) (nil tag-attr-beg 0 778 . 779) (nil tag-attr t 778 . 779) (nil tag-name "div" 778 . 779) (nil tag-type start 778 . 779) (nil font-lock-face web-mode-html-attr-name-face 778 . 779) (nil tag-name "div" 777 . 778) (nil tag-type start 777 . 778) (nil tag-name "div" 774 . 777) (nil tag-type start 774 . 777) (nil font-lock-face web-mode-html-tag-face 774 . 777) (nil tag-name "div" 773 . 774) (nil tag-type start 773 . 774) (nil tag-beg 17 773 . 774) (nil font-lock-face web-mode-html-tag-bracket-face 773 . 774) (773 . 809)) nil (25353 9225 604661 522000) 0 nil])
([nil nil ((122 . 130) (119 . 126)) ((#("<p></p>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 5 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 119) (undo-tree-id184 . -2) (undo-tree-id185 . -2) ("heeeeeyo" . 122)) (25353 7918 502093 189000) 0 nil])
([nil nil ((773 . 775) (t 25353 9225 615268 674000)) nil (25353 9456 838780 565000) 0 nil])
([nil nil ((129 . 134) (121 . 130)) ((#(" color=\"\"" 0 1 (tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . 121) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (#("white" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 129) (undo-tree-id182 . -5) (undo-tree-id183 . -5)) (25353 7918 338587 234000) 0 nil])
([nil nil (("/" . -773) (undo-tree-id277 . -1) ("/" . -774) (undo-tree-id278 . -1) 775) nil (25353 9456 838778 374000) 0 nil])
([nil nil ((#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -130) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -131) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -132) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -133) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 134) ((130 . 134)) (25353 7918 212444 311000) 0 nil])
([nil nil ((#("
<div class=\"infinite-spinner\"></div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 30 31 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 31 32 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 32 33 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 33 36 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 36 37 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 772) (undo-tree-id271 . -37) (undo-tree-id272 . -1) (undo-tree-id273 . -37) (undo-tree-id274 . -1) (undo-tree-id275 . -37) (undo-tree-id276 . -37)) nil (25353 9456 838773 112000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -122) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -123) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -124) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -125) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -126) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . -127) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("\"" 0 1 (tag-type start tag-name "p")) . -128) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . 129) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -129) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 130) ((129 . 130) (122 . 130)) (25353 7918 50190 891000) 0 nil])
([nil nil ((#("
" 0 1 (face whitespace-empty)) . -772) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1)) nil (25353 9456 838759 310000) 0 nil])
([nil nil ((129 . 134) (122 . 130)) ((#("style=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . 122) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (#("white" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 1 2 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 129) (undo-tree-id178 . -5) (undo-tree-id179 . -5)) (25353 7917 912012 461000) 0 nil])
([nil nil ((17 . 18) (t 25353 9456 849596 357000)) nil (25353 9816 746632 493000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -129) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -130) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -131) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -132) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -133) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 134) ((129 . 134)) (25353 7917 746341 600000) 0 nil])
([nil nil ((18 . 32)) nil (25353 9816 746624 883000) 0 nil])
([nil nil ((129 . 139)) ((#("color:shit" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 129) (undo-tree-id174 . -6) (undo-tree-id175 . -10)) (25353 7917 600761 130000) 0 nil])
([nil nil (("paginate: true" . 18) (undo-tree-id301 . -14) (undo-tree-id302 . -14) (t 25353 9816 761282 92000)) nil (25353 9864 924861 553000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -135) (undo-tree-id105 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -136) (undo-tree-id106 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -137) (undo-tree-id107 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -138) (undo-tree-id108 . -1) 139) ((135 . 139)) (25353 7917 422325 701000) 0 nil])
([nil nil ((18 . 50)) nil (25353 9864 924840 193000) 0 nil])
([nil nil ((135 . 141)) ((#("white;" 0 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . 135) (undo-tree-id173 . -5)) (25353 7917 239134 96000) 0 nil])
([nil nil (("e" . -43) (undo-tree-id294 . -1) ("n" . -44) (undo-tree-id295 . -1) ("g" . -45) (undo-tree-id296 . -1) ("u" . -46) (undo-tree-id297 . -1) ("i" . -47) (undo-tree-id298 . -1) ("n" . -48) (undo-tree-id299 . -1) ("s" . -49) (undo-tree-id300 . -1) 50) nil (25353 9864 924837 379000) 0 nil])
([nil nil ((221 . 230) (t 25353 7772 375862 899000)) (("
        " . 221) (undo-tree-id170 . -9) (undo-tree-id171 . -1) (undo-tree-id172 . -1)) (25353 7917 48385 883000) 0 nil])
([nil nil ((43 . 48)) nil (25353 9864 924826 628000) 0 nil])
([nil nil ((230 . 232)) ((#("<P" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 0 tag-type start tag-name "p") 1 2 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "p")) . 230) (undo-tree-id169 . -2)) (25353 7916 881300 357000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-variable-name-face block-side t)) . -94) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("e" 0 1 (face web-mode-variable-name-face block-side t)) . -95) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("." 0 1 (face web-mode-variable-name-face block-side t)) . -96) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) 97) nil (25353 9864 924824 217000) 0 nil])
([nil nil (("<" . -230) (undo-tree-id152 . -1) (#("P" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "p")) . -231) (undo-tree-id153 . -1) 232) ((230 . 232)) (25353 7916 688071 743000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -92) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("i" 0 1 (face web-mode-variable-name-face block-side t)) . -93) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 94) nil (25353 9864 924810 90000) 0 nil])
([nil nil ((#("      <!-- Home Post List -->
" 6 7 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 7 28 (font-lock-face web-mode-comment-face tag-type comment) 28 29 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 186) (undo-tree-id148 . -29) (143 . 186) (#("      <p style=\"color:white;\">heeeeeyo</p>
" 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 7 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 8 9 (tag-type start tag-name "p") 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 15 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 40 41 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 113) (undo-tree-id149 . -27) (undo-tree-id150 . -42) (156 . 186) 155) ((#("      <!-- Home Post List -->
" 6 7 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 7 28 (font-lock-face web-mode-comment-face tag-type comment) 28 29 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 156) (undo-tree-id162 . -30) (undo-tree-id163 . -30) (undo-tree-id164 . -30) (undo-tree-id165 . -30) (113 . 156) (#("      <p style=\"color:white;\">heeeeeyo</p>
" 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 7 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 8 9 (tag-type start tag-name "p") 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 15 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 40 41 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 143) (undo-tree-id166 . -42) (undo-tree-id167 . -43) (undo-tree-id168 . -43) (186 . 216)) (25353 7916 491461 380000) 0 nil])
([nil nil ((nil rear-nonsticky nil 101 . 102) (nil block-side t 92 . 102) (nil face web-mode-variable-name-face 92 . 102) (92 . 102)) nil (25353 9864 924784 944000) 0 nil])
([nil nil ((#("      {% for poem in site.postry %}
" 6 7 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 7 8 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 8 9 (block-side t) 9 12 (face web-mode-block-control-face block-side t) 12 13 (block-side t) 13 17 (face web-mode-variable-name-face block-side t) 17 18 (block-side t) 18 20 (face web-mode-keyword-face block-side t) 20 21 (block-side t) 21 32 (face web-mode-variable-name-face block-side t) 32 33 (block-side t) 33 34 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 34 35 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 222) (179 . 222) (#("      <p style=\"color:white;\">heeeeeyo</p>
" 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 7 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 8 9 (tag-type start tag-name "p") 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 15 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 40 41 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 143) (undo-tree-id147 . -42) (186 . 222) 185) ((#("      {% for poem in site.postry %}
" 6 7 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 7 8 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 8 9 (block-side t) 9 12 (face web-mode-block-control-face block-side t) 12 13 (block-side t) 13 17 (face web-mode-variable-name-face block-side t) 17 18 (block-side t) 18 20 (face web-mode-keyword-face block-side t) 20 21 (block-side t) 21 28 (face web-mode-variable-name-face block-side t) 28 29 (face web-mode-variable-name-face block-side t) 29 32 (face web-mode-variable-name-face block-side t) 32 33 (block-side t) 33 34 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 34 35 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 186) (undo-tree-id155 . -36) (undo-tree-id156 . -36) (undo-tree-id157 . -36) (undo-tree-id158 . -36) (undo-tree-id159 . -35) (143 . 186) (#("      <p style=\"color:white;\">heeeeeyo</p>
" 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 7 8 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 8 9 (tag-type start tag-name "p") 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 13 14 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr t) 15 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 40 41 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 179) (undo-tree-id160 . -42) (undo-tree-id161 . -43) (222 . 258)) (25353 7916 325961 903000) 0 nil])
([nil nil ((808 . 809) (t 25353 9864 933720 825000)) nil (25353 9951 482462 274000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing)) . -222) 221) ((222 . 230)) (25353 7916 172850 223000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1379 . 1380) (nil block-side t 1379 . 1380) (nil block-end t 1379 . 1380) (nil block-token delimiter-end 1379 . 1380) (nil font-lock-face web-mode-block-delimiter-face 1379 . 1380) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1379 . 1380) (nil block-side t 1378 . 1379) (nil block-token delimiter-end 1378 . 1379) (nil font-lock-face web-mode-block-delimiter-face 1378 . 1379) (nil block-side t 1377 . 1378) (nil block-side t 1372 . 1377) (nil face web-mode-block-control-face 1372 . 1377) (nil block-side t 1371 . 1372) (nil block-side t 1370 . 1371) (nil block-token delimiter-beg 1370 . 1371) (nil font-lock-face web-mode-block-delimiter-face 1370 . 1371) (nil block-beg 0 1369 . 1370) (nil block-controls 0 1369 . 1370) (nil block-side t 1369 . 1370) (nil block-token delimiter-beg 1369 . 1370) (nil font-lock-face web-mode-block-delimiter-face 1369 . 1370) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1369 . 1370) (nil tag-name "div" 1366 . 1367) (nil tag-type end 1366 . 1367) (nil tag-end t 1366 . 1367) (nil font-lock-face web-mode-html-tag-bracket-face 1366 . 1367) (nil tag-name "div" 1363 . 1366) (nil tag-type end 1363 . 1366) (nil font-lock-face web-mode-html-tag-face 1363 . 1366) (nil tag-name "div" 1362 . 1363) (nil tag-type end 1362 . 1363) (nil font-lock-face web-mode-html-tag-bracket-face 1362 . 1363) (nil tag-name "div" 1361 . 1362) (nil tag-type end 1361 . 1362) (nil tag-beg 20 1361 . 1362) (nil font-lock-face web-mode-html-tag-bracket-face 1361 . 1362) (nil block-side t 1358 . 1359) (nil block-end t 1358 . 1359) (nil block-token delimiter-end 1358 . 1359) (nil font-lock-face web-mode-block-delimiter-face 1358 . 1359) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1358 . 1359) (nil block-side t 1357 . 1358) (nil block-token delimiter-end 1357 . 1358) (nil font-lock-face web-mode-block-delimiter-face 1357 . 1358) (nil block-side t 1356 . 1357) (nil block-side t 1351 . 1356) (nil face web-mode-block-control-face 1351 . 1356) (nil block-side t 1350 . 1351) (nil block-side t 1349 . 1350) (nil block-token delimiter-beg 1349 . 1350) (nil font-lock-face web-mode-block-delimiter-face 1349 . 1350) (nil block-beg 0 1348 . 1349) (nil block-controls 0 1348 . 1349) (nil block-side t 1348 . 1349) (nil block-token delimiter-beg 1348 . 1349) (nil font-lock-face web-mode-block-delimiter-face 1348 . 1349) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1348 . 1349) (nil tag-name "a" 1344 . 1345) (nil tag-type end 1344 . 1345) (nil tag-end t 1344 . 1345) (nil font-lock-face web-mode-html-tag-bracket-face 1344 . 1345) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1344 . 1345) (nil tag-name "a" 1343 . 1344) (nil tag-type end 1343 . 1344) (nil font-lock-face web-mode-html-tag-face 1343 . 1344) (nil face (whitespace-line web-mode-html-tag-face) 1343 . 1344) (nil tag-name "a" 1342 . 1343) (nil tag-type end 1342 . 1343) (nil font-lock-face web-mode-html-tag-bracket-face 1342 . 1343) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1342 . 1343) (nil tag-name "a" 1341 . 1342) (nil tag-type end 1341 . 1342) (nil tag-beg 20 1341 . 1342) (nil font-lock-face web-mode-html-tag-bracket-face 1341 . 1342) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1341 . 1342) (nil font-lock-face (web-mode-html-entity-face) 1335 . 1341) (nil face (whitespace-line web-mode-html-entity-face) 1335 . 1341) (nil face (whitespace-line) 1334 . 1335) (nil tag-name "span" 1333 . 1334) (nil tag-type end 1333 . 1334) (nil tag-end t 1333 . 1334) (nil font-lock-face web-mode-html-tag-bracket-face 1333 . 1334) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1333 . 1334) (nil tag-name "span" 1329 . 1333) (nil tag-type end 1329 . 1333) (nil font-lock-face web-mode-html-tag-face 1329 . 1333) (nil face (whitespace-line web-mode-html-tag-face) 1329 . 1333) (nil tag-name "span" 1328 . 1329) (nil tag-type end 1328 . 1329) (nil font-lock-face web-mode-html-tag-bracket-face 1328 . 1329) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1328 . 1329) (nil tag-name "span" 1327 . 1328) (nil tag-type end 1327 . 1328) (nil tag-beg 20 1327 . 1328) (nil font-lock-face web-mode-html-tag-bracket-face 1327 . 1328) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1327 . 1328) (nil face (whitespace-line) 1321 . 1327) (nil tag-name "span" 1320 . 1321) (nil tag-type start 1320 . 1321) (nil tag-end t 1320 . 1321) (nil font-lock-face web-mode-html-tag-bracket-face 1320 . 1321) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1320 . 1321) (nil tag-attr t 1319 . 1320) (nil tag-attr-end 5 1319 . 1320) (nil tag-name "span" 1319 . 1320) (nil tag-type start 1319 . 1320) (nil font-lock-face web-mode-html-attr-value-face 1319 . 1320) (nil face (whitespace-line web-mode-html-attr-value-face) 1319 . 1320) (nil tag-attr t 1309 . 1319) (nil tag-name "span" 1309 . 1319) (nil tag-type start 1309 . 1319) (nil font-lock-face web-mode-html-attr-value-face 1309 . 1319) (nil face (whitespace-line web-mode-html-attr-value-face) 1309 . 1319) (nil tag-attr t 1300 . 1309) (nil tag-name "span" 1300 . 1309) (nil tag-type start 1300 . 1309) (nil font-lock-face web-mode-html-attr-value-face 1300 . 1309) (nil tag-attr t 1299 . 1300) (nil tag-name "span" 1299 . 1300) (nil tag-type start 1299 . 1300) (nil font-lock-face web-mode-html-attr-equal-face 1299 . 1300) (nil tag-attr t 1295 . 1299) (nil tag-name "span" 1295 . 1299) (nil tag-type start 1295 . 1299) (nil font-lock-face web-mode-html-attr-name-face 1295 . 1299) (nil tag-attr-beg 0 1294 . 1295) (nil tag-attr t 1294 . 1295) (nil tag-name "span" 1294 . 1295) (nil tag-type start 1294 . 1295) (nil font-lock-face web-mode-html-attr-name-face 1294 . 1295) (nil tag-name "span" 1293 . 1294) (nil tag-type start 1293 . 1294) (nil tag-name "span" 1289 . 1293) (nil tag-type start 1289 . 1293) (nil font-lock-face web-mode-html-tag-face 1289 . 1293) (nil tag-name "span" 1288 . 1289) (nil tag-type start 1288 . 1289) (nil tag-beg 17 1288 . 1289) (nil font-lock-face web-mode-html-tag-bracket-face 1288 . 1289) (nil tag-name "a" 1282 . 1283) (nil tag-type start 1282 . 1283) (nil tag-end t 1282 . 1283) (nil font-lock-face web-mode-html-tag-bracket-face 1282 . 1283) (nil tag-attr t 1281 . 1282) (nil tag-attr-end 4 1281 . 1282) (nil tag-name "a" 1281 . 1282) (nil tag-type start 1281 . 1282) (nil font-lock-face web-mode-html-attr-value-face 1281 . 1282) (nil block-side t 1280 . 1281) (nil block-end t 1280 . 1281) (nil block-token delimiter-end 1280 . 1281) (nil tag-attr t 1280 . 1281) (nil tag-name "a" 1280 . 1281) (nil tag-type start 1280 . 1281) (nil font-lock-face web-mode-block-delimiter-face 1280 . 1281) (nil block-side t 1279 . 1280) (nil block-token delimiter-end 1279 . 1280) (nil tag-attr t 1279 . 1280) (nil tag-name "a" 1279 . 1280) (nil tag-type start 1279 . 1280) (nil font-lock-face web-mode-block-delimiter-face 1279 . 1280) (nil block-side t 1278 . 1279) (nil tag-attr t 1278 . 1279) (nil tag-name "a" 1278 . 1279) (nil tag-type start 1278 . 1279) (nil block-side t 1275 . 1278) (nil block-token string 1275 . 1278) (nil tag-attr t 1275 . 1278) (nil tag-name "a" 1275 . 1278) (nil tag-type start 1275 . 1278) (nil font-lock-face web-mode-block-string-face 1275 . 1278) (nil block-side t 1273 . 1275) (nil tag-attr t 1273 . 1275) (nil tag-name "a" 1273 . 1275) (nil tag-type start 1273 . 1275) (nil block-side t 1269 . 1273) (nil block-token string 1269 . 1273) (nil tag-attr t 1269 . 1273) (nil tag-name "a" 1269 . 1273) (nil tag-type start 1269 . 1273) (nil font-lock-face web-mode-block-string-face 1269 . 1273) (nil block-side t 1267 . 1269) (nil tag-attr t 1267 . 1269) (nil tag-name "a" 1267 . 1269) (nil tag-type start 1267 . 1269) (nil block-side t 1260 . 1267) (nil tag-attr t 1260 . 1267) (nil tag-name "a" 1260 . 1267) (nil tag-type start 1260 . 1267) (nil face web-mode-filter-face 1260 . 1267) (nil block-side t 1257 . 1260) (nil tag-attr t 1257 . 1260) (nil tag-name "a" 1257 . 1260) (nil tag-type start 1257 . 1260) (nil block-side t 1250 . 1257) (nil tag-attr t 1250 . 1257) (nil tag-name "a" 1250 . 1257) (nil tag-type start 1250 . 1257) (nil face web-mode-variable-name-face 1250 . 1257) (nil block-side t 1249 . 1250) (nil tag-attr t 1249 . 1250) (nil tag-name "a" 1249 . 1250) (nil tag-type start 1249 . 1250) (nil block-side t 1245 . 1249) (nil tag-attr t 1245 . 1249) (nil tag-name "a" 1245 . 1249) (nil tag-type start 1245 . 1249) (nil face web-mode-variable-name-face 1245 . 1249) (nil block-side t 1243 . 1245) (nil tag-attr t 1243 . 1245) (nil tag-name "a" 1243 . 1245) (nil tag-type start 1243 . 1245) (nil block-side t 1236 . 1243) (nil tag-attr t 1236 . 1243) (nil tag-name "a" 1236 . 1243) (nil tag-type start 1236 . 1243) (nil face web-mode-filter-face 1236 . 1243) (nil block-side t 1233 . 1236) (nil tag-attr t 1233 . 1236) (nil tag-name "a" 1233 . 1236) (nil tag-type start 1233 . 1236) (nil block-side t 1219 . 1233) (nil tag-attr t 1219 . 1233) (nil tag-name "a" 1219 . 1233) (nil tag-type start 1219 . 1233) (nil face web-mode-variable-name-face 1219 . 1233) (nil block-side t 1218 . 1219) (nil tag-attr t 1218 . 1219) (nil tag-name "a" 1218 . 1219) (nil tag-type start 1218 . 1219) (nil block-side t 1209 . 1218) (nil tag-attr t 1209 . 1218) (nil tag-name "a" 1209 . 1218) (nil tag-type start 1209 . 1218) (nil face web-mode-variable-name-face 1209 . 1218) (nil block-side t 1208 . 1209) (nil tag-attr t 1208 . 1209) (nil tag-name "a" 1208 . 1209) (nil tag-type start 1208 . 1209) (nil block-side t 1207 . 1208) (nil block-token delimiter-beg 1207 . 1208) (nil tag-attr t 1207 . 1208) (nil tag-name "a" 1207 . 1208) (nil tag-type start 1207 . 1208) (nil font-lock-face web-mode-block-delimiter-face 1207 . 1208) (nil block-beg 0 1206 . 1207) (nil block-controls 0 1206 . 1207) (nil block-side t 1206 . 1207) (nil block-token delimiter-beg 1206 . 1207) (nil tag-attr t 1206 . 1207) (nil tag-name "a" 1206 . 1207) (nil tag-type start 1206 . 1207) (nil font-lock-face web-mode-block-delimiter-face 1206 . 1207) (nil tag-attr t 1205 . 1206) (nil tag-name "a" 1205 . 1206) (nil tag-type start 1205 . 1206) (nil font-lock-face web-mode-html-attr-value-face 1205 . 1206) (nil tag-attr t 1204 . 1205) (nil tag-name "a" 1204 . 1205) (nil tag-type start 1204 . 1205) (nil font-lock-face web-mode-html-attr-equal-face 1204 . 1205) (nil tag-attr t 1201 . 1204) (nil tag-name "a" 1201 . 1204) (nil tag-type start 1201 . 1204) (nil font-lock-face web-mode-html-attr-name-face 1201 . 1204) (nil tag-attr-beg 0 1200 . 1201) (nil tag-attr t 1200 . 1201) (nil tag-name "a" 1200 . 1201) (nil tag-type start 1200 . 1201) (nil font-lock-face web-mode-html-attr-name-face 1200 . 1201) (nil tag-name "a" 1199 . 1200) (nil tag-type start 1199 . 1200) (nil tag-attr t 1198 . 1199) (nil tag-attr-end 5 1198 . 1199) (nil tag-name "a" 1198 . 1199) (nil tag-type start 1198 . 1199) (nil font-lock-face web-mode-html-attr-value-face 1198 . 1199) (nil tag-attr t 1170 . 1198) (nil tag-name "a" 1170 . 1198) (nil tag-type start 1170 . 1198) (nil font-lock-face web-mode-html-attr-value-face 1170 . 1198) (nil tag-attr t 1169 . 1170) (nil tag-name "a" 1169 . 1170) (nil tag-type start 1169 . 1170) (nil font-lock-face web-mode-html-attr-equal-face 1169 . 1170) (nil tag-attr t 1165 . 1169) (nil tag-name "a" 1165 . 1169) (nil tag-type start 1165 . 1169) (nil font-lock-face web-mode-html-attr-name-face 1165 . 1169) (nil tag-attr-beg 0 1164 . 1165) (nil tag-attr t 1164 . 1165) (nil tag-name "a" 1164 . 1165) (nil tag-type start 1164 . 1165) (nil font-lock-face web-mode-html-attr-name-face 1164 . 1165) (nil tag-name "a" 1163 . 1164) (nil tag-type start 1163 . 1164) (nil tag-name "a" 1162 . 1163) (nil tag-type start 1162 . 1163) (nil font-lock-face web-mode-html-tag-face 1162 . 1163) (nil tag-name "a" 1161 . 1162) (nil tag-type start 1161 . 1162) (nil tag-beg 17 1161 . 1162) (nil font-lock-face web-mode-html-tag-bracket-face 1161 . 1162) (nil block-side t 1157 . 1158) (nil block-end t 1157 . 1158) (nil block-token delimiter-end 1157 . 1158) (nil font-lock-face web-mode-block-delimiter-face 1157 . 1158) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1157 . 1158) (nil block-side t 1156 . 1157) (nil block-token delimiter-end 1156 . 1157) (nil font-lock-face web-mode-block-delimiter-face 1156 . 1157) (nil block-side t 1155 . 1156) (nil block-side t 1136 . 1155) (nil face web-mode-variable-name-face 1136 . 1155) (nil block-side t 1135 . 1136) (nil block-side t 1133 . 1135) (nil face web-mode-block-control-face 1133 . 1135) (nil block-side t 1132 . 1133) (nil block-side t 1131 . 1132) (nil block-token delimiter-beg 1131 . 1132) (nil font-lock-face web-mode-block-delimiter-face 1131 . 1132) (nil block-beg 0 1130 . 1131) (nil block-controls 0 1130 . 1131) (nil block-side t 1130 . 1131) (nil block-token delimiter-beg 1130 . 1131) (nil font-lock-face web-mode-block-delimiter-face 1130 . 1131) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1130 . 1131) (nil block-side t 1125 . 1126) (nil block-end t 1125 . 1126) (nil block-token delimiter-end 1125 . 1126) (nil font-lock-face web-mode-block-delimiter-face 1125 . 1126) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1125 . 1126) (nil block-side t 1124 . 1125) (nil block-token delimiter-end 1124 . 1125) (nil font-lock-face web-mode-block-delimiter-face 1124 . 1125) (nil block-side t 1123 . 1124) (nil block-side t 1118 . 1123) (nil face web-mode-block-control-face 1118 . 1123) (nil block-side t 1117 . 1118) (nil block-side t 1116 . 1117) (nil block-token delimiter-beg 1116 . 1117) (nil font-lock-face web-mode-block-delimiter-face 1116 . 1117) (nil block-beg 0 1115 . 1116) (nil block-controls 0 1115 . 1116) (nil block-side t 1115 . 1116) (nil block-token delimiter-beg 1115 . 1116) (nil font-lock-face web-mode-block-delimiter-face 1115 . 1116) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1115 . 1116) (nil tag-name "a" 1111 . 1112) (nil tag-type end 1111 . 1112) (nil tag-end t 1111 . 1112) (nil font-lock-face web-mode-html-tag-bracket-face 1111 . 1112) (nil tag-name "a" 1110 . 1111) (nil tag-type end 1110 . 1111) (nil font-lock-face web-mode-html-tag-face 1110 . 1111) (nil tag-name "a" 1109 . 1110) (nil tag-type end 1109 . 1110) (nil font-lock-face web-mode-html-tag-bracket-face 1109 . 1110) (nil tag-name "a" 1108 . 1109) (nil tag-type end 1108 . 1109) (nil tag-beg 20 1108 . 1109) (nil font-lock-face web-mode-html-tag-bracket-face 1108 . 1109) (nil tag-name "span" 1107 . 1108) (nil tag-type end 1107 . 1108) (nil tag-end t 1107 . 1108) (nil font-lock-face web-mode-html-tag-bracket-face 1107 . 1108) (nil tag-name "span" 1103 . 1107) (nil tag-type end 1103 . 1107) (nil font-lock-face web-mode-html-tag-face 1103 . 1107) (nil tag-name "span" 1102 . 1103) (nil tag-type end 1102 . 1103) (nil font-lock-face web-mode-html-tag-bracket-face 1102 . 1103) (nil tag-name "span" 1101 . 1102) (nil tag-type end 1101 . 1102) (nil tag-beg 20 1101 . 1102) (nil font-lock-face web-mode-html-tag-bracket-face 1101 . 1102) (nil tag-name "span" 1094 . 1095) (nil tag-type start 1094 . 1095) (nil tag-end t 1094 . 1095) (nil font-lock-face web-mode-html-tag-bracket-face 1094 . 1095) (nil tag-attr t 1093 . 1094) (nil tag-attr-end 5 1093 . 1094) (nil tag-name "span" 1093 . 1094) (nil tag-type start 1093 . 1094) (nil font-lock-face web-mode-html-attr-value-face 1093 . 1094) (nil tag-attr t 1074 . 1093) (nil tag-name "span" 1074 . 1093) (nil tag-type start 1074 . 1093) (nil font-lock-face web-mode-html-attr-value-face 1074 . 1093) (nil tag-attr t 1073 . 1074) (nil tag-name "span" 1073 . 1074) (nil tag-type start 1073 . 1074) (nil font-lock-face web-mode-html-attr-equal-face 1073 . 1074) (nil tag-attr t 1069 . 1073) (nil tag-name "span" 1069 . 1073) (nil tag-type start 1069 . 1073) (nil font-lock-face web-mode-html-attr-name-face 1069 . 1073) (nil tag-attr-beg 0 1068 . 1069) (nil tag-attr t 1068 . 1069) (nil tag-name "span" 1068 . 1069) (nil tag-type start 1068 . 1069) (nil font-lock-face web-mode-html-attr-name-face 1068 . 1069) (nil tag-name "span" 1067 . 1068) (nil tag-type start 1067 . 1068) (nil tag-name "span" 1063 . 1067) (nil tag-type start 1063 . 1067) (nil font-lock-face web-mode-html-tag-face 1063 . 1067) (nil tag-name "span" 1062 . 1063) (nil tag-type start 1062 . 1063) (nil tag-beg 17 1062 . 1063) (nil font-lock-face web-mode-html-tag-bracket-face 1062 . 1063) (nil font-lock-face (web-mode-html-entity-face) 1046 . 1052) (nil tag-name "a" 1045 . 1046) (nil tag-type start 1045 . 1046) (nil tag-end t 1045 . 1046) (nil font-lock-face web-mode-html-tag-bracket-face 1045 . 1046) (nil tag-attr t 1044 . 1045) (nil tag-attr-end 4 1044 . 1045) (nil tag-name "a" 1044 . 1045) (nil tag-type start 1044 . 1045) (nil font-lock-face web-mode-html-attr-value-face 1044 . 1045) (nil block-side t 1043 . 1044) (nil block-end t 1043 . 1044) (nil block-token delimiter-end 1043 . 1044) (nil tag-attr t 1043 . 1044) (nil tag-name "a" 1043 . 1044) (nil tag-type start 1043 . 1044) (nil font-lock-face web-mode-block-delimiter-face 1043 . 1044) (nil block-side t 1042 . 1043) (nil block-token delimiter-end 1042 . 1043) (nil tag-attr t 1042 . 1043) (nil tag-name "a" 1042 . 1043) (nil tag-type start 1042 . 1043) (nil font-lock-face web-mode-block-delimiter-face 1042 . 1043) (nil block-side t 1041 . 1042) (nil tag-attr t 1041 . 1042) (nil tag-name "a" 1041 . 1042) (nil tag-type start 1041 . 1042) (nil block-side t 1038 . 1041) (nil block-token string 1038 . 1041) (nil tag-attr t 1038 . 1041) (nil tag-name "a" 1038 . 1041) (nil tag-type start 1038 . 1041) (nil font-lock-face web-mode-block-string-face 1038 . 1041) (nil block-side t 1036 . 1038) (nil tag-attr t 1036 . 1038) (nil tag-name "a" 1036 . 1038) (nil tag-type start 1036 . 1038) (nil block-side t 1032 . 1036) (nil block-token string 1032 . 1036) (nil tag-attr t 1032 . 1036) (nil tag-name "a" 1032 . 1036) (nil tag-type start 1032 . 1036) (nil font-lock-face web-mode-block-string-face 1032 . 1036) (nil block-side t 1030 . 1032) (nil tag-attr t 1030 . 1032) (nil tag-name "a" 1030 . 1032) (nil tag-type start 1030 . 1032) (nil block-side t 1023 . 1030) (nil tag-attr t 1023 . 1030) (nil tag-name "a" 1023 . 1030) (nil tag-type start 1023 . 1030) (nil face web-mode-filter-face 1023 . 1030) (nil block-side t 1020 . 1023) (nil tag-attr t 1020 . 1023) (nil tag-name "a" 1020 . 1023) (nil tag-type start 1020 . 1023) (nil block-side t 1013 . 1020) (nil tag-attr t 1013 . 1020) (nil tag-name "a" 1013 . 1020) (nil tag-type start 1013 . 1020) (nil face web-mode-variable-name-face 1013 . 1020) (nil block-side t 1012 . 1013) (nil tag-attr t 1012 . 1013) (nil tag-name "a" 1012 . 1013) (nil tag-type start 1012 . 1013) (nil block-side t 1008 . 1012) (nil tag-attr t 1008 . 1012) (nil tag-name "a" 1008 . 1012) (nil tag-type start 1008 . 1012) (nil face web-mode-variable-name-face 1008 . 1012) (nil block-side t 1006 . 1008) (nil tag-attr t 1006 . 1008) (nil tag-name "a" 1006 . 1008) (nil tag-type start 1006 . 1008) (nil block-side t 999 . 1006) (nil tag-attr t 999 . 1006) (nil tag-name "a" 999 . 1006) (nil tag-type start 999 . 1006) (nil face web-mode-filter-face 999 . 1006) (nil block-side t 996 . 999) (nil tag-attr t 996 . 999) (nil tag-name "a" 996 . 999) (nil tag-type start 996 . 999) (nil block-side t 978 . 996) (nil tag-attr t 978 . 996) (nil tag-name "a" 978 . 996) (nil tag-type start 978 . 996) (nil face web-mode-variable-name-face 978 . 996) (nil block-side t 977 . 978) (nil tag-attr t 977 . 978) (nil tag-name "a" 977 . 978) (nil tag-type start 977 . 978) (nil block-side t 968 . 977) (nil tag-attr t 968 . 977) (nil tag-name "a" 968 . 977) (nil tag-type start 968 . 977) (nil face web-mode-variable-name-face 968 . 977) (nil block-side t 967 . 968) (nil tag-attr t 967 . 968) (nil tag-name "a" 967 . 968) (nil tag-type start 967 . 968) (nil block-side t 966 . 967) (nil block-token delimiter-beg 966 . 967) (nil tag-attr t 966 . 967) (nil tag-name "a" 966 . 967) (nil tag-type start 966 . 967) (nil font-lock-face web-mode-block-delimiter-face 966 . 967) (nil block-beg 0 965 . 966) (nil block-controls 0 965 . 966) (nil block-side t 965 . 966) (nil block-token delimiter-beg 965 . 966) (nil tag-attr t 965 . 966) (nil tag-name "a" 965 . 966) (nil tag-type start 965 . 966) (nil font-lock-face web-mode-block-delimiter-face 965 . 966) (nil tag-attr t 964 . 965) (nil tag-name "a" 964 . 965) (nil tag-type start 964 . 965) (nil font-lock-face web-mode-html-attr-value-face 964 . 965) (nil tag-attr t 963 . 964) (nil tag-name "a" 963 . 964) (nil tag-type start 963 . 964) (nil font-lock-face web-mode-html-attr-equal-face 963 . 964) (nil tag-attr t 960 . 963) (nil tag-name "a" 960 . 963) (nil tag-type start 960 . 963) (nil font-lock-face web-mode-html-attr-name-face 960 . 963) (nil tag-attr-beg 0 959 . 960) (nil tag-attr t 959 . 960) (nil tag-name "a" 959 . 960) (nil tag-type start 959 . 960) (nil font-lock-face web-mode-html-attr-name-face 959 . 960) (nil tag-name "a" 958 . 959) (nil tag-type start 958 . 959) (nil tag-attr t 957 . 958) (nil tag-attr-end 5 957 . 958) (nil tag-name "a" 957 . 958) (nil tag-type start 957 . 958) (nil font-lock-face web-mode-html-attr-value-face 957 . 958) (nil tag-attr t 930 . 957) (nil tag-name "a" 930 . 957) (nil tag-type start 930 . 957) (nil font-lock-face web-mode-html-attr-value-face 930 . 957) (nil tag-attr t 929 . 930) (nil tag-name "a" 929 . 930) (nil tag-type start 929 . 930) (nil font-lock-face web-mode-html-attr-equal-face 929 . 930) (nil tag-attr t 925 . 929) (nil tag-name "a" 925 . 929) (nil tag-type start 925 . 929) (nil font-lock-face web-mode-html-attr-name-face 925 . 929) (nil tag-attr-beg 0 924 . 925) (nil tag-attr t 924 . 925) (nil tag-name "a" 924 . 925) (nil tag-type start 924 . 925) (nil font-lock-face web-mode-html-attr-name-face 924 . 925) (nil tag-name "a" 923 . 924) (nil tag-type start 923 . 924) (nil tag-name "a" 922 . 923) (nil tag-type start 922 . 923) (nil font-lock-face web-mode-html-tag-face 922 . 923) (nil tag-name "a" 921 . 922) (nil tag-type start 921 . 922) (nil tag-beg 17 921 . 922) (nil font-lock-face web-mode-html-tag-bracket-face 921 . 922) (nil block-side t 917 . 918) (nil block-end t 917 . 918) (nil block-token delimiter-end 917 . 918) (nil font-lock-face web-mode-block-delimiter-face 917 . 918) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 917 . 918) (nil block-side t 916 . 917) (nil block-token delimiter-end 916 . 917) (nil font-lock-face web-mode-block-delimiter-face 916 . 917) (nil block-side t 915 . 916) (nil block-side t 892 . 915) (nil face web-mode-variable-name-face 892 . 915) (nil block-side t 891 . 892) (nil block-side t 889 . 891) (nil face web-mode-block-control-face 889 . 891) (nil block-side t 888 . 889) (nil block-side t 887 . 888) (nil block-token delimiter-beg 887 . 888) (nil font-lock-face web-mode-block-delimiter-face 887 . 888) (nil block-beg 0 886 . 887) (nil block-controls 0 886 . 887) (nil block-side t 886 . 887) (nil block-token delimiter-beg 886 . 887) (nil font-lock-face web-mode-block-delimiter-face 886 . 887) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 886 . 887) (nil tag-name "div" 881 . 882) (nil tag-type start 881 . 882) (nil tag-end t 881 . 882) (nil font-lock-face web-mode-html-tag-bracket-face 881 . 882) (nil tag-attr t 880 . 881) (nil tag-attr-end 5 880 . 881) (nil tag-name "div" 880 . 881) (nil tag-type start 880 . 881) (nil font-lock-face web-mode-html-attr-value-face 880 . 881) (nil tag-attr t 871 . 880) (nil tag-name "div" 871 . 880) (nil tag-type start 871 . 880) (nil font-lock-face web-mode-html-attr-value-face 871 . 880) (nil tag-attr t 870 . 871) (nil tag-name "div" 870 . 871) (nil tag-type start 870 . 871) (nil font-lock-face web-mode-html-attr-equal-face 870 . 871) (nil tag-attr t 866 . 870) (nil tag-name "div" 866 . 870) (nil tag-type start 866 . 870) (nil font-lock-face web-mode-html-attr-name-face 866 . 870) (nil tag-attr-beg 0 865 . 866) (nil tag-attr t 865 . 866) (nil tag-name "div" 865 . 866) (nil tag-type start 865 . 866) (nil font-lock-face web-mode-html-attr-name-face 865 . 866) (nil tag-name "div" 864 . 865) (nil tag-type start 864 . 865) (nil tag-name "div" 861 . 864) (nil tag-type start 861 . 864) (nil font-lock-face web-mode-html-tag-face 861 . 864) (nil tag-name "div" 860 . 861) (nil tag-type start 860 . 861) (nil tag-beg 17 860 . 861) (nil font-lock-face web-mode-html-tag-bracket-face 860 . 861) (nil block-side t 857 . 858) (nil block-end t 857 . 858) (nil block-token delimiter-end 857 . 858) (nil font-lock-face web-mode-block-delimiter-face 857 . 858) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 857 . 858) (nil block-side t 856 . 857) (nil block-token delimiter-end 856 . 857) (nil font-lock-face web-mode-block-delimiter-face 856 . 857) (nil block-side t 855 . 856) (nil block-side t 854 . 855) (nil face web-mode-variable-name-face 854 . 855) (nil block-side t 851 . 854) (nil block-side t 830 . 851) (nil face web-mode-variable-name-face 830 . 851) (nil block-side t 829 . 830) (nil block-side t 827 . 829) (nil face web-mode-block-control-face 827 . 829) (nil block-side t 826 . 827) (nil block-side t 825 . 826) (nil block-token delimiter-beg 825 . 826) (nil font-lock-face web-mode-block-delimiter-face 825 . 826) (nil block-beg 0 824 . 825) (nil block-controls 0 824 . 825) (nil block-side t 824 . 825) (nil block-token delimiter-beg 824 . 825) (nil font-lock-face web-mode-block-delimiter-face 824 . 825) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 824 . 825) (nil tag-type comment 822 . 823) (nil tag-end t 822 . 823) (nil font-lock-face web-mode-comment-face 822 . 823) (nil tag-type comment 810 . 822) (nil font-lock-face web-mode-comment-face 810 . 822) (nil tag-type comment 809 . 810) (nil tag-beg 0 809 . 810) (nil font-lock-face web-mode-comment-face 809 . 810) (809 . 1380)) nil (25353 9951 482418 610000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -171) (undo-tree-id154 . -1) 172 (t 25353 7787 471767 347000)) ((171 . 172)) (25353 7916 1050 20000) 0 nil])
([nil nil ((1380 . 1381)) nil (25354 30106 209571 736000) 0 nil])
([nil nil ((171 . 172)) ((#("e" 0 1 (face web-mode-variable-name-face block-side t)) . 171) (t 25353 7911 999248 102000)) (25353 7911 990336 760000) 0 nil])
([nil nil (("  " . -28) (48 . 49) (t 25354 30107 630451 761000)) nil (25354 30123 307847 636000) 0 nil] [nil nil ((nil rear-nonsticky nil 127 . 128) (nil block-side t 121 . 128) (nil face web-mode-function-call-face 121 . 128) (nil block-side t 119 . 121) (119 . 128) (t 25353 9951 494525 710000)) ((#("| reverse" 0 2 (block-side t) 2 8 (block-side t face web-mode-function-call-face) 8 9 (rear-nonsticky nil block-side t face web-mode-function-call-face)) . 119) (undo-tree-id95 . -9) (nil rear-nonsticky t 127 . 128)) (25354 30105 828019 76000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 66 . 67) (nil face whitespace-trailing 66 . 67) (47 . 67)) nil (25354 30123 307845 657000) 0 nil])
([nil nil ((128 . 129)) ((#(" " 0 1 (block-side t)) . 128)) (25354 30105 462728 572000) 0 nil])
([nil nil ((" " . -56) (undo-tree-id97 . -1) (" " . -57) (undo-tree-id98 . -1) (" " . -58) (undo-tree-id99 . -1) (" " . -59) (undo-tree-id100 . -1) (" " . -60) (undo-tree-id101 . -1) 61) nil (25354 30123 307842 700000) 0 nil])
([nil nil ((76 . 78) (t 25354 29749 762362 984000)) (("

" . 76) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -2)) (25354 30105 10731 818000) 0 nil])
([nil nil ((56 . 57)) nil (25354 30123 307833 377000) 0 nil])
([nil nil ((nil rear-nonsticky nil 122 . 123) (nil block-side t 122 . 123) (nil block-end t 122 . 123) (nil block-token delimiter-end 122 . 123) (nil font-lock-face web-mode-block-delimiter-face 122 . 123) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 122 . 123) (nil block-side t 121 . 122) (nil block-token delimiter-end 121 . 122) (nil font-lock-face web-mode-block-delimiter-face 121 . 122) (nil block-side t 120 . 121) (nil block-side t 113 . 120) (nil face web-mode-function-call-face 113 . 120) (nil block-side t 110 . 113) (nil block-side t 96 . 110) (nil face web-mode-variable-name-face 96 . 110) (nil block-side t 93 . 96) (nil block-side t 87 . 93) (nil face web-mode-variable-name-face 87 . 93) (nil block-side t 86 . 87) (nil block-side t 80 . 86) (nil face web-mode-keyword-face 80 . 86) (nil block-side t 79 . 80) (nil block-side t 78 . 79) (nil block-token delimiter-beg 78 . 79) (nil font-lock-face web-mode-block-delimiter-face 78 . 79) (nil block-beg 0 77 . 78) (nil block-controls 0 77 . 78) (nil block-side t 77 . 78) (nil block-token delimiter-beg 77 . 78) (nil font-lock-face web-mode-block-delimiter-face 77 . 78) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 77 . 78) (77 . 123)) ((#("{% assign sorted = site.resources | reverse %}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 2 3 (block-side t) 3 9 (block-side t face web-mode-keyword-face) 9 10 (block-side t) 10 16 (block-side t face web-mode-variable-name-face) 16 19 (block-side t) 19 24 (block-side t face web-mode-variable-name-face) 24 33 (block-side t face web-mode-variable-name-face) 33 36 (block-side t) 36 43 (block-side t face web-mode-function-call-face) 43 44 (block-side t) 44 45 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 45 46 (rear-nonsticky nil block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 77) (undo-tree-id80 . -33) (undo-tree-id81 . -24) (undo-tree-id82 . -24) (undo-tree-id83 . -19) (undo-tree-id84 . -19) (undo-tree-id85 . -16) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 77 . 78) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 122 . 123) (nil rear-nonsticky t 122 . 123)) (25354 30104 711332 373000) 0 nil])
([nil nil (("t" . -56) (undo-tree-id96 . -1) 57) nil (25354 30123 307831 261000) 0 nil])
([nil nil ((93 . 99)) ((#("_poems" 0 6 (block-side t face web-mode-variable-name-face)) . 93)) (25354 30104 450071 242000) 0 nil])
([nil nil ((56 . 61)) nil (25354 30123 307820 821000) 0 nil])
([nil nil ((#("resources" 0 9 (block-side t face web-mode-variable-name-face)) . 107) (undo-tree-id51 . -9) (undo-tree-id53 . -9)) ((107 . 116)) (25354 30104 8114 347000) 0 nil])
([nil nil (("e" . 61) ("s" . 61) ("l" . 61) ("a" . 61) ("f" . 61)) nil (25354 30123 307817 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 112 . 113) (nil block-side t 107 . 113) (nil face web-mode-variable-name-face 107 . 113) (107 . 113)) ((#("poetry" 0 5 (block-side t face web-mode-variable-name-face) 5 6 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 107) (undo-tree-id79 . -6) (nil rear-nonsticky t 112 . 113)) (25354 30103 691802 595000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t face whitespace-trailing)) . -61)) nil (25354 30123 307809 300000) 0 nil])
([nil nil ((#("| reverse " 0 2 (block-side t) 2 8 (block-side t face web-mode-function-call-face) 8 9 (rear-nonsticky t block-side t face web-mode-function-call-face) 9 10 (block-side t)) . 170) (undo-tree-id48 . -10) (undo-tree-id50 . -10)) ((170 . 180)) (25354 30103 363941 198000) 0 nil])
([nil nil ((28 . 32) (t 25354 30123 322629 889000)) nil (25354 30137 511166 855000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -169) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 170) ((169 . 170)) (25354 30103 153740 533000) 0 nil])
([nil nil ((51 . 56)) nil (25354 30137 511164 241000) 0 nil])
([nil nil ((169 . 170)) ((#(" " 0 1 (block-side t)) . 169)) (25354 30102 900437 181000) 0 nil])
([nil current ((" " . -55) (undo-tree-id102 . -1) 56) nil (25354 30222 313942 673000) 0 nil])
([nil nil ((#("site.poetry" 0 5 (block-side t face web-mode-variable-name-face) 5 10 (block-side t face web-mode-variable-name-face) 10 11 (rear-nonsticky t block-side t face web-mode-variable-name-face)) . 102) (undo-tree-id60 . -11) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -11)) ((102 . 113)) (25354 30102 460561 981000) 0 nil] [nil nil ((#("g" 0 1 (block-side t face web-mode-variable-name-face)) . -145) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("i" 0 1 (block-side t face web-mode-variable-name-face)) . -146) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("n" 0 1 (block-side t face web-mode-variable-name-face)) . -147) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("a" 0 1 (block-side t face web-mode-variable-name-face)) . -148) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -149) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("o" 0 1 (block-side t face web-mode-variable-name-face)) . -150) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (block-side t face web-mode-variable-name-face)) . -151) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("." 0 1 (block-side t face web-mode-variable-name-face)) . -152) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("p" 0 1 (block-side t face web-mode-variable-name-face)) . -153) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("o" 0 1 (block-side t face web-mode-variable-name-face)) . -154) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("e" 0 1 (block-side t face web-mode-variable-name-face)) . -155) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -156) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (block-side t face web-mode-variable-name-face)) . -157) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("y" 0 1 (block-side t face web-mode-variable-name-face)) . -158) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 159) ((145 . 159)) (25354 29846 258817 34000) 0 nil])
([nil nil ((#("1" 0 1 (block-side t face web-mode-variable-name-face)) . -137) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("0" 0 1 (block-side t face web-mode-variable-name-face)) . -138) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 139 (t 25354 30137 526791 61000)) ((137 . 139)) (25354 30222 28116 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 117 . 118) (nil block-side t 117 . 118) (nil face web-mode-variable-name-face 117 . 118) (nil block-side t 116 . 117) (nil face web-mode-variable-name-face 116 . 117) (nil block-side t 115 . 116) (nil face web-mode-variable-name-face 115 . 116) (nil block-side t 114 . 115) (nil face web-mode-variable-name-face 114 . 115) (nil block-side t 113 . 114) (nil face web-mode-variable-name-face 113 . 114) (nil block-side t 112 . 113) (nil face web-mode-variable-name-face 112 . 113) (nil block-side t 111 . 112) (nil face web-mode-variable-name-face 111 . 112) (nil block-side t 110 . 111) (nil face web-mode-variable-name-face 110 . 111) (nil block-side t 109 . 110) (nil face web-mode-variable-name-face 109 . 110) (nil block-side t 108 . 109) (nil face web-mode-variable-name-face 108 . 109) (nil block-side t 107 . 108) (nil face web-mode-variable-name-face 107 . 108) (nil block-side t 106 . 107) (nil face web-mode-variable-name-face 106 . 107) (nil block-side t 105 . 106) (nil face web-mode-variable-name-face 105 . 106) (nil block-side t 104 . 105) (nil face web-mode-variable-name-face 104 . 105) (nil block-side t 102 . 104) (nil face web-mode-variable-name-face 102 . 104) (102 . 118)) ((#("paginator.poetry" 0 15 (block-side t face web-mode-variable-name-face) 15 16 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 102) (undo-tree-id78 . -9) (nil rear-nonsticky t 117 . 118)) (25354 30102 145747 552000) 0 nil])
nil
([nil nil ((137 . 138)) ((#("4" 0 1 (block-side t face web-mode-variable-name-face)) . 137) (undo-tree-id120 . -1)) (25354 30221 414626 678000) 0 nil])
([nil nil ((#("paginator.poetry" 0 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t face web-mode-variable-name-face) 15 16 (block-side t face web-mode-variable-name-face)) . 148) (undo-tree-id55 . -16) (undo-tree-id56 . -16) (undo-tree-id57 . -16) (undo-tree-id58 . -16) (undo-tree-id59 . -16)) ((148 . 164)) (25354 30101 746502 424000) 0 nil])
([nil nil ((#("4" 0 1 (block-side t face web-mode-variable-name-face)) . -137) (undo-tree-id103 . -1) 138) ((137 . 138)) (25354 30220 366505 247000) 0 nil])
([nil nil ((148 . 161)) ((#("sorted_poems " 0 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t)) . 148) (undo-tree-id77 . -13)) (25354 30101 326477 717000) 0 nil])
([nil nil ((137 . 138)) ((#("3" 0 1 (block-side t face web-mode-variable-name-face)) . 137)) (25354 30219 825650 186000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -160) (undo-tree-id54 . -1) 161) ((160 . 161)) (25354 30101 46226 919000) 0 nil])
([nil nil ((nil rear-nonsticky nil 866 . 867) (nil block-side t 866 . 867) (nil face web-mode-variable-name-face 866 . 867) (nil block-side t 865 . 866) (nil face web-mode-variable-name-face 865 . 866) (nil block-side t 864 . 865) (nil face web-mode-variable-name-face 864 . 865) (nil block-side t 863 . 864) (nil face web-mode-variable-name-face 863 . 864) (nil block-side t 862 . 863) (nil face web-mode-variable-name-face 862 . 863) (nil block-side t 861 . 862) (nil face web-mode-variable-name-face 861 . 862) (nil block-side t 860 . 861) (nil face web-mode-variable-name-face 860 . 861) (860 . 867) (t 25354 30147 946909 257000)) ((#(".poetry" 0 6 (block-side t face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 860) (undo-tree-id119 . -7) (nil rear-nonsticky t 866 . 867)) (25354 30219 443012 270000) 0 nil] [nil nil ((nil rear-nonsticky nil 866 . 867) (nil block-side t 866 . 867) (nil face web-mode-variable-name-face 866 . 867) (nil block-side t 865 . 866) (nil face web-mode-variable-name-face 865 . 866) (nil block-side t 864 . 865) (nil face web-mode-variable-name-face 864 . 865) (nil block-side t 863 . 864) (nil face web-mode-variable-name-face 863 . 864) (nil block-side t 862 . 863) (nil face web-mode-variable-name-face 862 . 863) (nil block-side t 861 . 862) (nil face web-mode-variable-name-face 861 . 862) (nil block-side t 860 . 861) (nil face web-mode-variable-name-face 860 . 861) (860 . 867) (t 25354 30147 946909 257000)) ((#(".poetry" 0 6 (block-side t face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 860) (undo-tree-id110 . -7) (nil rear-nonsticky t 866 . 867)) (25354 30173 790850 863000) 0 nil])
([nil nil ((#("1" 0 1 (block-side t face web-mode-variable-name-face)) . -168) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("0" 0 1 (block-side t face web-mode-variable-name-face)) . -169) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 170 (t 25354 29882 851890 489000)) ((168 . 170)) (25354 30100 686658 513000) 0 nil])
([nil nil ((867 . 868)) ((#("." 0 1 (block-side t face web-mode-variable-name-face)) . 867)) (25354 30219 12908 176000) 0 nil])
nil
([nil nil ((168 . 169)) ((#("3" 0 1 (block-side t face web-mode-variable-name-face)) . 168) (t 25354 29897 424057 168000)) (25354 29897 412534 303000) 0 nil])
([nil nil ((#("." 0 1 (block-side t face web-mode-variable-name-face)) . -859) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 860) ((859 . 860)) (25354 30218 700469 218000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 935 . 936) (nil block-side t 935 . 936) (nil face web-mode-variable-name-face 935 . 936) (nil block-side t 934 . 935) (nil face web-mode-variable-name-face 934 . 935) (nil block-side t 933 . 934) (nil face web-mode-variable-name-face 933 . 934) (nil block-side t 932 . 933) (nil face web-mode-variable-name-face 932 . 933) (nil block-side t 931 . 932) (nil face web-mode-variable-name-face 931 . 932) (nil block-side t 930 . 931) (nil face web-mode-variable-name-face 930 . 931) (nil block-side t 929 . 930) (nil face web-mode-variable-name-face 929 . 930) (929 . 936)) ((#(".poetry" 0 6 (block-side t face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 929) (undo-tree-id118 . -7) (nil rear-nonsticky t 935 . 936)) (25354 30218 481624 55000) 0 nil])
([nil nil ((936 . 937)) ((#("." 0 1 (block-side t face web-mode-variable-name-face)) . 936)) (25354 30218 284782 915000) 0 nil])
([nil nil ((#("." 0 1 (block-side t face web-mode-variable-name-face)) . -928) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 929) ((928 . 929)) (25354 30218 123000 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1185 . 1186) (nil block-side t 1185 . 1186) (nil face web-mode-variable-name-face 1185 . 1186) (nil block-side t 1184 . 1185) (nil face web-mode-variable-name-face 1184 . 1185) (nil block-side t 1183 . 1184) (nil face web-mode-variable-name-face 1183 . 1184) (nil block-side t 1182 . 1183) (nil face web-mode-variable-name-face 1182 . 1183) (nil block-side t 1181 . 1182) (nil face web-mode-variable-name-face 1181 . 1182) (nil block-side t 1180 . 1181) (nil face web-mode-variable-name-face 1180 . 1181) (nil block-side t 1179 . 1180) (nil face web-mode-variable-name-face 1179 . 1180) (1179 . 1186)) ((#(".poetry" 0 6 (block-side t face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 1179) (nil rear-nonsticky t 1185 . 1186)) (25354 30217 952117 983000) 0 nil] [nil nil ((nil rear-nonsticky nil 1186 . 1187) (nil block-side t 1186 . 1187) (nil face web-mode-variable-name-face 1186 . 1187) (nil block-side t 1185 . 1186) (nil face web-mode-variable-name-face 1185 . 1186) (nil block-side t 1184 . 1185) (nil face web-mode-variable-name-face 1184 . 1185) (nil block-side t 1183 . 1184) (nil face web-mode-variable-name-face 1183 . 1184) (nil block-side t 1182 . 1183) (nil face web-mode-variable-name-face 1182 . 1183) (nil block-side t 1181 . 1182) (nil face web-mode-variable-name-face 1181 . 1182) (nil block-side t 1180 . 1181) (nil face web-mode-variable-name-face 1180 . 1181) (1180 . 1187)) ((#(".poetry" 0 6 (block-side t face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t face web-mode-variable-name-face)) . 1180) (undo-tree-id116 . -7) (nil rear-nonsticky t 1186 . 1187)) (25354 30183 220616 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1017 . 1018) (nil block-side t 1017 . 1018) (nil tag-attr t 1017 . 1018) (nil tag-name "a" 1017 . 1018) (nil tag-type start 1017 . 1018) (nil face web-mode-variable-name-face 1017 . 1018) (nil block-side t 1016 . 1017) (nil tag-attr t 1016 . 1017) (nil tag-name "a" 1016 . 1017) (nil tag-type start 1016 . 1017) (nil face web-mode-variable-name-face 1016 . 1017) (nil block-side t 1015 . 1016) (nil tag-attr t 1015 . 1016) (nil tag-name "a" 1015 . 1016) (nil tag-type start 1015 . 1016) (nil face web-mode-variable-name-face 1015 . 1016) (nil block-side t 1014 . 1015) (nil tag-attr t 1014 . 1015) (nil tag-name "a" 1014 . 1015) (nil tag-type start 1014 . 1015) (nil face web-mode-variable-name-face 1014 . 1015) (nil block-side t 1013 . 1014) (nil tag-attr t 1013 . 1014) (nil tag-name "a" 1013 . 1014) (nil tag-type start 1013 . 1014) (nil face web-mode-variable-name-face 1013 . 1014) (nil block-side t 1012 . 1013) (nil tag-attr t 1012 . 1013) (nil tag-name "a" 1012 . 1013) (nil tag-type start 1012 . 1013) (nil face web-mode-variable-name-face 1012 . 1013) (nil block-side t 1011 . 1012) (nil tag-attr t 1011 . 1012) (nil tag-name "a" 1011 . 1012) (nil tag-type start 1011 . 1012) (1011 . 1018)) ((#(".poetry" 0 1 (block-side t tag-attr t tag-name "a" tag-type start) 1 2 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . 1011) (nil tag-name "a" 1011 . 1012) (nil tag-name "a" 1012 . 1013) (nil tag-name "a" 1013 . 1014) (nil tag-name "a" 1014 . 1015) (nil tag-name "a" 1015 . 1016) (nil tag-name "a" 1016 . 1017) (nil tag-name "a" 1017 . 1018) (nil rear-nonsticky t 1017 . 1018)) (25354 30217 756674 695000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1272 . 1273) (nil block-side t 1272 . 1273) (nil tag-attr t 1272 . 1273) (nil tag-name "a" 1272 . 1273) (nil tag-type start 1272 . 1273) (nil face web-mode-variable-name-face 1272 . 1273) (nil block-side t 1271 . 1272) (nil tag-attr t 1271 . 1272) (nil tag-name "a" 1271 . 1272) (nil tag-type start 1271 . 1272) (nil face web-mode-variable-name-face 1271 . 1272) (nil block-side t 1270 . 1271) (nil tag-attr t 1270 . 1271) (nil tag-name "a" 1270 . 1271) (nil tag-type start 1270 . 1271) (nil face web-mode-variable-name-face 1270 . 1271) (nil block-side t 1269 . 1270) (nil tag-attr t 1269 . 1270) (nil tag-name "a" 1269 . 1270) (nil tag-type start 1269 . 1270) (nil face web-mode-variable-name-face 1269 . 1270) (nil block-side t 1268 . 1269) (nil tag-attr t 1268 . 1269) (nil tag-name "a" 1268 . 1269) (nil tag-type start 1268 . 1269) (nil face web-mode-variable-name-face 1268 . 1269) (nil block-side t 1267 . 1268) (nil tag-attr t 1267 . 1268) (nil tag-name "a" 1267 . 1268) (nil tag-type start 1267 . 1268) (nil face web-mode-variable-name-face 1267 . 1268) (nil block-side t 1266 . 1267) (nil tag-attr t 1266 . 1267) (nil tag-name "a" 1266 . 1267) (nil tag-type start 1266 . 1267) (1266 . 1273)) ((#(".poetry" 0 1 (block-side t tag-attr t tag-name "a" tag-type start) 1 2 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 6 7 (rear-nonsticky nil block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . 1266) (undo-tree-id117 . -7) (nil tag-name "a" 1266 . 1267) (nil tag-name "a" 1267 . 1268) (nil tag-name "a" 1268 . 1269) (nil tag-name "a" 1269 . 1270) (nil tag-name "a" 1270 . 1271) (nil tag-name "a" 1271 . 1272) (nil tag-name "a" 1272 . 1273) (nil rear-nonsticky t 1272 . 1273) (t 25354 30192 575415 134000)) (25354 30192 561981 338000) 0 nil])
nil
