(undo-tree-save-format-version . 1)
"9ee9917bce3c27ccb26a904d4b87367eab06a02c"
[nil nil nil nil (25266 57348 710081 361000) 0 nil]
([nil nil ((nil rear-nonsticky nil 32 . 33) (nil block-side t 32 . 33) (nil block-end t 32 . 33) (nil block-token delimiter-end 32 . 33) (nil font-lock-face web-mode-block-delimiter-face 32 . 33) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 32 . 33) (nil block-side t 31 . 32) (nil block-token delimiter-end 31 . 32) (nil font-lock-face web-mode-block-delimiter-face 31 . 32) (nil block-side t 30 . 31) (nil block-side t 16 . 30) (nil face web-mode-variable-name-face 16 . 30) (nil block-side t 15 . 16) (nil block-side t 13 . 15) (nil face web-mode-keyword-face 13 . 15) (nil block-side t 12 . 13) (nil block-side t 8 . 12) (nil face web-mode-variable-name-face 8 . 12) (nil block-side t 7 . 8) (nil block-side t 4 . 7) (nil face web-mode-block-control-face 4 . 7) (nil block-side t 3 . 4) (nil block-side t 2 . 3) (nil block-token delimiter-beg 2 . 3) (nil font-lock-face web-mode-block-delimiter-face 2 . 3) (nil block-beg 0 1 . 2) (nil block-controls 0 1 . 2) (nil block-side t 1 . 2) (nil block-token delimiter-beg 1 . 2) (nil font-lock-face web-mode-block-delimiter-face 1 . 2) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1 . 2) (1 . 33) (t 25266 57103 671239 0)) nil (25266 57348 710077 751000) 0 nil])
([nil nil ((35 . 37) (#("  " 0 2 (face whitespace-empty)) . 34) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (33 . 37)) nil (25266 57348 710067 297000) 0 nil])
([nil nil (("  " . -35) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (nil rear-nonsticky nil 48 . 49) (nil block-side t 48 . 49) (nil block-end t 48 . 49) (nil block-token delimiter-end 48 . 49) (nil font-lock-face web-mode-block-delimiter-face 48 . 49) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 48 . 49) (nil block-side t 47 . 48) (nil block-token delimiter-end 47 . 48) (nil font-lock-face web-mode-block-delimiter-face 47 . 48) (nil block-side t 46 . 47) (nil block-side t 40 . 46) (nil face web-mode-block-control-face 40 . 46) (nil block-side t 39 . 40) (nil block-side t 38 . 39) (nil block-token delimiter-beg 38 . 39) (nil font-lock-face web-mode-block-delimiter-face 38 . 39) (nil block-beg 0 37 . 38) (nil block-controls 0 37 . 38) (nil block-side t 37 . 38) (nil block-token delimiter-beg 37 . 38) (nil font-lock-face web-mode-block-delimiter-face 37 . 38) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 37 . 38) (37 . 49)) nil (25266 57348 710059 293000) 0 nil])
([nil nil ((#("menu_list" 0 9 (block-side t face web-mode-variable-name-face)) . 21) (undo-tree-id30 . -9) (undo-tree-id31 . -9) (undo-tree-id32 . -9)) nil (25266 57348 710045 461000) 0 nil])
([nil nil ((21 . 29)) nil (25266 57348 710041 331000) 0 nil])
([nil nil ((#("item" 0 4 (block-side t face web-mode-variable-name-face)) . 8) (undo-tree-id28 . -4) (undo-tree-id29 . -4)) nil (25266 57348 710040 1000) 0 nil])
([nil nil ((8 . 11)) nil (25266 57348 710036 860000) 0 nil])
([nil nil ((33 . 35) ("  " . 32) (undo-tree-id27 . -2) (31 . 35)) nil (25266 57348 710035 420000) 0 nil])
([nil nil ((91 . 93) (nil rear-nonsticky nil 113 . 114) (nil tag-name "div" 113 . 114) (nil tag-type start 113 . 114) (nil tag-end t 113 . 114) (nil font-lock-face web-mode-html-tag-bracket-face 113 . 114) (nil tag-attr t 112 . 113) (nil tag-attr-end 5 112 . 113) (nil tag-name "div" 112 . 113) (nil tag-type start 112 . 113) (nil font-lock-face web-mode-html-attr-value-face 112 . 113) (nil tag-attr t 102 . 112) (nil tag-name "div" 102 . 112) (nil tag-type start 102 . 112) (nil font-lock-face web-mode-html-attr-value-face 102 . 112) (nil tag-attr t 101 . 102) (nil tag-name "div" 101 . 102) (nil tag-type start 101 . 102) (nil font-lock-face web-mode-html-attr-equal-face 101 . 102) (nil tag-attr t 97 . 101) (nil tag-name "div" 97 . 101) (nil tag-type start 97 . 101) (nil font-lock-face web-mode-html-attr-name-face 97 . 101) (nil tag-attr-beg 0 96 . 97) (nil tag-attr t 96 . 97) (nil tag-name "div" 96 . 97) (nil tag-type start 96 . 97) (nil font-lock-face web-mode-html-attr-name-face 96 . 97) (nil tag-name "div" 95 . 96) (nil tag-type start 95 . 96) (nil tag-name "div" 92 . 95) (nil tag-type start 92 . 95) (nil font-lock-face web-mode-html-tag-face 92 . 95) (nil tag-name "div" 91 . 92) (nil tag-type start 91 . 92) (nil tag-beg 17 91 . 92) (nil font-lock-face web-mode-html-tag-bracket-face 91 . 92) (nil tag-name "section" 87 . 88) (nil tag-type start 87 . 88) (nil tag-end t 87 . 88) (nil font-lock-face web-mode-html-tag-bracket-face 87 . 88) (nil tag-attr t 86 . 87) (nil tag-attr-end 2 86 . 87) (nil tag-name "section" 86 . 87) (nil tag-type start 86 . 87) (nil font-lock-face web-mode-html-attr-value-face 86 . 87) (nil tag-attr t 81 . 86) (nil tag-name "section" 81 . 86) (nil tag-type start 81 . 86) (nil font-lock-face web-mode-html-attr-value-face 81 . 86) (nil tag-attr t 80 . 81) (nil tag-name "section" 80 . 81) (nil tag-type start 80 . 81) (nil font-lock-face web-mode-html-attr-equal-face 80 . 81) (nil tag-attr t 79 . 80) (nil tag-name "section" 79 . 80) (nil tag-type start 79 . 80) (nil font-lock-face web-mode-html-attr-name-face 79 . 80) (nil tag-attr-beg 0 78 . 79) (nil tag-attr t 78 . 79) (nil tag-name "section" 78 . 79) (nil tag-type start 78 . 79) (nil font-lock-face web-mode-html-attr-name-face 78 . 79) (nil tag-name "section" 77 . 78) (nil tag-type start 77 . 78) (nil tag-attr t 76 . 77) (nil tag-attr-end 5 76 . 77) (nil tag-name "section" 76 . 77) (nil tag-type start 76 . 77) (nil font-lock-face web-mode-html-attr-value-face 76 . 77) (nil tag-attr t 50 . 76) (nil tag-name "section" 50 . 76) (nil tag-type start 50 . 76) (nil font-lock-face web-mode-html-attr-value-face 50 . 76) (nil tag-attr t 49 . 50) (nil tag-name "section" 49 . 50) (nil tag-type start 49 . 50) (nil font-lock-face web-mode-html-attr-equal-face 49 . 50) (nil tag-attr t 45 . 49) (nil tag-name "section" 45 . 49) (nil tag-type start 45 . 49) (nil font-lock-face web-mode-html-attr-name-face 45 . 49) (nil tag-attr-beg 0 44 . 45) (nil tag-attr t 44 . 45) (nil tag-name "section" 44 . 45) (nil tag-type start 44 . 45) (nil font-lock-face web-mode-html-attr-name-face 44 . 45) (nil tag-name "section" 43 . 44) (nil tag-type start 43 . 44) (nil tag-name "section" 36 . 43) (nil tag-type start 36 . 43) (nil font-lock-face web-mode-html-tag-face 36 . 43) (nil tag-name "section" 35 . 36) (nil tag-type start 35 . 36) (nil tag-beg 17 35 . 36) (nil font-lock-face web-mode-html-tag-bracket-face 35 . 36) (35 . 114)) nil (25266 57348 710026 729000) 0 nil])
([nil nil ((118 . 124) ("      " . 117) (undo-tree-id26 . -6) (116 . 124)) nil (25266 57348 710000 826000) 0 nil])
([nil nil (("  " . -122) (124 . 130)) nil (25266 57348 709997 995000) 0 nil])
([nil nil ((128 . 133)) nil (25266 57348 709996 511000) 0 nil])
([nil nil (("  " . -131) (133 . 143)) nil (25266 57348 709995 292000) 0 nil])
([nil nil (("
" . -31) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 32) nil (25266 57348 709993 669000) 0 nil])
([nil nil ((#("blog" 0 4 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . 81) (undo-tree-id22 . -4) (undo-tree-id23 . -4)) nil (25266 57348 709989 986000) 0 nil])
([nil nil ((83 . 89) (82 . 84) (#("{" 0 1 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . -82) (82 . 83) (81 . 83) (#("{" 0 1 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . -81) (81 . 82)) nil (25266 57348 709985 962000) 0 nil])
([nil nil ((#("blog-section" 0 12 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . 63) (undo-tree-id19 . -12) (undo-tree-id20 . -12) (undo-tree-id21 . -12)) nil (25266 57348 709982 954000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72 . 73) (nil block-side t 72 . 73) (nil block-end t 72 . 73) (nil block-token delimiter-end 72 . 73) (nil tag-attr t 72 . 73) (nil tag-name "section" 72 . 73) (nil tag-type start 72 . 73) (nil font-lock-face web-mode-block-delimiter-face 72 . 73) (nil block-side t 71 . 72) (nil block-token delimiter-end 71 . 72) (nil tag-attr t 71 . 72) (nil tag-name "section" 71 . 72) (nil tag-type start 71 . 72) (nil font-lock-face web-mode-block-delimiter-face 71 . 72) (nil block-side t 69 . 71) (nil tag-attr t 69 . 71) (nil tag-name "section" 69 . 71) (nil tag-type start 69 . 71) (nil face web-mode-variable-name-face 69 . 71) (nil block-side t 68 . 69) (nil tag-attr t 68 . 69) (nil tag-name "section" 68 . 69) (nil tag-type start 68 . 69) (nil block-side t 65 . 68) (nil tag-attr t 65 . 68) (nil tag-name "section" 65 . 68) (nil tag-type start 65 . 68) (nil face web-mode-variable-name-face 65 . 68) (nil block-side t 64 . 65) (nil block-token delimiter-beg 64 . 65) (nil tag-attr t 64 . 65) (nil tag-name "section" 64 . 65) (nil tag-type start 64 . 65) (nil font-lock-face web-mode-block-delimiter-face 64 . 65) (nil block-beg 0 63 . 64) (nil block-controls 0 63 . 64) (nil block-side t 63 . 64) (nil block-token delimiter-beg 63 . 64) (nil tag-attr t 63 . 64) (nil tag-name "section" 63 . 64) (nil tag-type start 63 . 64) (nil font-lock-face web-mode-block-delimiter-face 63 . 64) (63 . 73)) nil (25266 57348 709975 971000) 0 nil])
([nil nil ((#("i" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -69) (undo-tree-id17 . -1) (#("d" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -70) (undo-tree-id18 . -1) 71) nil (25266 57348 709964 85000) 0 nil])
([nil nil ((69 . 76)) nil (25266 57348 709959 993000) 0 nil])
([nil nil ((#("s" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -69) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -70) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("c" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -71) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("t" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -72) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("i" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -73) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("o" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -74) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("n" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -75) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 76) nil (25266 57348 709956 480000) 0 nil])
([nil nil ((69 . 75)) nil (25266 57348 709938 265000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "section" tag-type start)) . -74) (undo-tree-id2 . -1) 75) nil (25266 57348 709936 677000) 0 nil])
([nil nil ((124 . 130) ("      " . 123) (undo-tree-id1 . -6) (122 . 130)) nil (25266 57348 709933 465000) 0 nil])
([nil nil ((132 . 144) (131 . 133) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -131) (131 . 132) (130 . 132) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -130) (130 . 131)) nil (25266 57348 709928 907000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -143) (undo-tree-id0 . -1) 144) nil (25266 57348 709924 481000) 0 nil])
([nil nil ((184 . 185) 143) nil (25266 57348 709901 357000) 0 nil])
([nil nil ((1 . 3) (t 25266 57348 717654 646000)) nil (25266 58239 343558 13000) 0 nil])
([nil nil ((1 . 6)) nil (25266 58239 343548 365000) 0 nil])
([nil nil (("hey6o
" . 1) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (t 25266 58239 346904 900000)) nil (25266 58380 318896 230000) 0 nil])
([nil nil (("
" . 1) (undo-tree-id48 . -1)) nil (25266 58381 240736 148000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -67) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 68) nil (25266 58389 670773 92000) 0 nil] [nil nil ((11 . 17)) ((#("ection" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face)) . 11) (undo-tree-id53 . -6)) (25266 58380 809593 436000) 0 nil])
([nil nil ((67 . 68)) nil (25266 58389 670767 316000) 0 nil])
([nil nil ((#("c" 0 1 (block-side t face web-mode-variable-name-face)) . -10) (undo-tree-id41 . -1) (#("e" 0 1 (block-side t face web-mode-variable-name-face)) . -11) (undo-tree-id42 . -1) (#("c" 0 1 (block-side t face web-mode-variable-name-face)) . -12) (undo-tree-id43 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -13) (undo-tree-id44 . -1) (#("i" 0 1 (block-side t face web-mode-variable-name-face)) . -14) (undo-tree-id45 . -1) (#("o" 0 1 (block-side t face web-mode-variable-name-face)) . -15) (undo-tree-id46 . -1) (#("n" 0 1 (block-side t face web-mode-variable-name-face)) . -16) (undo-tree-id47 . -1) 17) ((10 . 17)) (25266 58380 319714 319000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -86) (undo-tree-id54 . -1) 87) nil (25266 58389 670763 811000) 0 nil])
([nil nil ((10 . 15)) ((#("ction" 0 5 (block-side t face web-mode-variable-name-face)) . 10) (undo-tree-id52 . -5)) (25266 58380 318846 606000) 0 nil])
([nil nil ((86 . 87)) nil (25266 58389 670732 748000) 0 nil])
nil
([nil nil ((1 . 2) (t 25266 58389 672619 817000)) nil (25266 58423 544542 852000) 0 nil])
([nil nil ((1 . 5)) nil (25266 58423 544540 638000) 0 nil])
([nil nil ((190 . 193)) nil (25266 58423 544537 771000) 0 nil])
([nil nil ((193 . 194)) nil (25266 58423 544527 812000) 0 nil])
([nil nil (("
hey" . 189) (undo-tree-id66 . -4) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (t 25266 58423 548999 373000)) nil (25266 59303 964065 985000) 0 nil])
([nil nil (("heyo" . 1) (undo-tree-id64 . -4) (undo-tree-id65 . -4)) nil (25266 59303 964052 830000) 0 nil])
([nil current (("
" . 1) (undo-tree-id63 . -1)) nil (25266 59933 21204 15000) 0 nil])
([nil nil ((#("i" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -88) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (#("d" 0 1 (block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . -89) (undo-tree-id60 . -1) (undo-tree-id62 . -1) 90) ((88 . 90)) (25266 59929 689943 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 95 . 96) (nil fontified t 88 . 96) (nil markdown-yaml-metadata-section (5 44) 88 . 96) (nil markdown-metadata-key (27 43 27 35 35 37 37 43 #<buffer blog.markdown>) 88 . 96) (nil block-side t 88 . 96) (nil tag-attr t 88 . 96) (nil tag-name "section" 88 . 96) (nil tag-type start 88 . 96) (nil face web-mode-variable-name-face 88 . 96) (88 . 96)) ((#("link_ref" 0 7 (fontified t markdown-yaml-metadata-section (5 44) markdown-metadata-key (27 43 27 35 35 37 37 43 #<buffer blog.markdown>) block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face) 7 8 (rear-nonsticky nil fontified t markdown-yaml-metadata-section (5 44) markdown-metadata-key (27 43 27 35 35 37 37 43 #<buffer blog.markdown>) block-side t tag-attr t tag-name "section" tag-type start face web-mode-variable-name-face)) . 88) (nil tag-name "section" 95 . 96) (nil tag-name "section" 88 . 95) (nil markdown-metadata-key nil 95 . 96) (nil markdown-metadata-key nil 88 . 95) (nil markdown-yaml-metadata-section nil 95 . 96) (nil markdown-yaml-metadata-section nil 88 . 95) (nil fontified nil 95 . 96) (nil fontified nil 88 . 95) (nil rear-nonsticky t 95 . 96) (t 25266 59303 970383 818000)) (25266 59929 105653 616000) 0 nil])
([nil nil ((191 . 194) (t 25266 59303 970383 818000)) (("con" . 191) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3)) (25266 59929 104763 854000) 0 nil])
nil
