(undo-tree-save-format-version . 1)
"0105d23e021aad70586136024026ff0a9faaeabe"
[nil nil nil nil (25331 47869 392477 921000) 0 nil]
([nil nil ((887 . 900) (t 25232 37438 635103 862000)) nil (25331 47869 392476 72000) 0 nil])
([nil nil ((900 . 908)) nil (25331 47869 392473 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 918 . 919) (nil tag-attr t 907 . 919) (nil tag-name "v-data-table" 907 . 919) (nil tag-type start 907 . 919) (nil font-lock-face web-mode-html-attr-value-face 907 . 919) (907 . 919)) nil (25331 47869 392466 320000) 0 nil])
([nil nil ((1642 . 1644) (1641 . 1643) (#("[" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1641) (1641 . 1642) (t 25339 39013 338740 0)) nil (25348 36796 599718 860000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1643) (undo-tree-id15 . -1) 1644) nil (25348 36796 599714 200000) 0 nil])
([nil nil ((1584 . 1605)) nil (25348 36796 599708 191000) 0 nil])
([nil nil ((1605 . 1608)) nil (25348 36796 599704 608000) 0 nil])
([nil nil (("d" . -1605) (undo-tree-id10 . -1) (undo-tree-id11 . -1) ("i" . -1606) (undo-tree-id12 . -1) (undo-tree-id13 . -1) ("v" . -1607) (undo-tree-id14 . -1) 1608) nil (25348 36796 599700 230000) 0 nil])
([nil nil ((1605 . 1611)) nil (25348 36796 599675 731000) 0 nil])
([nil nil ((#("i" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -1610) (undo-tree-id9 . -1) 1611) nil (25348 36796 599670 241000) 0 nil])
([nil nil ((1610 . 1615)) nil (25348 36796 599660 888000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -1614) (undo-tree-id8 . -1) 1615) nil (25348 36796 599656 432000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-name "div" tag-type start)) . 1617) (1616 . 1617) (#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1616) (1616 . 1617) (#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1616) (1616 . 1617) (1614 . 1617)) nil (25348 36796 599645 173000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-attr-end 4 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1616) (undo-tree-id7 . -1) 1617) nil (25348 36796 599637 981000) 0 nil])
([nil nil ((1616 . 1618)) nil (25348 36796 599629 252000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -1617) (undo-tree-id6 . -1) 1618) nil (25348 36796 599620 996000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1643 . 1644) (nil tag-attr t 1643 . 1644) (nil tag-name "div" 1643 . 1644) (nil tag-type start 1643 . 1644) (nil font-lock-face web-mode-html-attr-value-face 1643 . 1644) (nil tag-attr t 1642 . 1643) (nil tag-name "div" 1642 . 1643) (nil tag-type start 1642 . 1643) (nil font-lock-face web-mode-html-attr-value-face 1642 . 1643) (nil tag-attr t 1641 . 1642) (nil tag-name "div" 1641 . 1642) (nil tag-type start 1641 . 1642) (nil font-lock-face web-mode-html-attr-value-face 1641 . 1642) (nil tag-attr t 1640 . 1641) (nil tag-name "div" 1640 . 1641) (nil tag-type start 1640 . 1641) (nil font-lock-face web-mode-html-attr-value-face 1640 . 1641) (nil tag-attr t 1634 . 1640) (nil tag-name "div" 1634 . 1640) (nil tag-type start 1634 . 1640) (nil font-lock-face web-mode-html-attr-value-face 1634 . 1640) (nil tag-attr t 1633 . 1634) (nil tag-name "div" 1633 . 1634) (nil tag-type start 1633 . 1634) (nil font-lock-face web-mode-html-attr-value-face 1633 . 1634) (nil tag-attr t 1625 . 1633) (nil tag-name "div" 1625 . 1633) (nil tag-type start 1625 . 1633) (nil font-lock-face web-mode-html-attr-value-face 1625 . 1633) (nil tag-attr t 1624 . 1625) (nil tag-name "div" 1624 . 1625) (nil tag-type start 1624 . 1625) (nil font-lock-face web-mode-html-attr-value-face 1624 . 1625) (nil tag-attr t 1616 . 1624) (nil tag-name "div" 1616 . 1624) (nil tag-type start 1616 . 1624) (nil font-lock-face web-mode-html-attr-value-face 1616 . 1624) (1616 . 1644)) nil (25348 36796 599600 823000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1642) (undo-tree-id5 . -1) 1643) nil (25348 36796 599565 439000) 0 nil])
([nil nil ((1642 . 1643)) nil (25348 36796 599555 465000) 0 nil])
([nil nil ((1645 . 1652)) nil (25348 36796 599551 262000) 0 nil])
([nil nil ((1647 . 1669) (1648 . 1668) (#("                      " 0 22 (face whitespace-trailing)) . 1647) (1647 . 1669) (1647 . 1648) ("                    " . 1647) (1646 . 1667)) nil (25348 36796 599545 847000) 0 nil])
([nil nil ((1724 . 1727)) nil (25348 36796 599536 867000) 0 nil])
([nil nil ((#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -1726) (undo-tree-id4 . -1) 1727) nil (25348 36796 599533 6000) 0 nil])
([nil nil ((1726 . 1727)) nil (25348 36796 599524 781000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -1726) (undo-tree-id3 . -1) 1727) nil (25348 36796 599520 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1811 . 1812) (nil tag-name "v-avatar" 1811 . 1812) (nil tag-type end 1811 . 1812) (nil tag-end t 1811 . 1812) (nil font-lock-face web-mode-html-tag-bracket-face 1811 . 1812) (nil tag-name "v-avatar" 1803 . 1811) (nil tag-type end 1803 . 1811) (nil font-lock-face web-mode-html-tag-custom-face 1803 . 1811) (nil tag-name "v-avatar" 1802 . 1803) (nil tag-type end 1802 . 1803) (nil font-lock-face web-mode-html-tag-bracket-face 1802 . 1803) (nil tag-name "v-avatar" 1801 . 1802) (nil tag-type end 1801 . 1802) (nil tag-beg 22 1801 . 1802) (nil font-lock-face web-mode-html-tag-bracket-face 1801 . 1802) (nil tag-name "v-icon" 1777 . 1778) (nil tag-type end 1777 . 1778) (nil tag-end t 1777 . 1778) (nil font-lock-face web-mode-html-tag-bracket-face 1777 . 1778) (nil tag-name "v-icon" 1771 . 1777) (nil tag-type end 1771 . 1777) (nil font-lock-face web-mode-html-tag-custom-face 1771 . 1777) (nil tag-name "v-icon" 1770 . 1771) (nil tag-type end 1770 . 1771) (nil font-lock-face web-mode-html-tag-bracket-face 1770 . 1771) (nil tag-name "v-icon" 1769 . 1770) (nil tag-type end 1769 . 1770) (nil tag-beg 22 1769 . 1770) (nil font-lock-face web-mode-html-tag-bracket-face 1769 . 1770) (nil tag-name "v-icon" 1755 . 1756) (nil tag-type start 1755 . 1756) (nil tag-end t 1755 . 1756) (nil font-lock-face web-mode-html-tag-bracket-face 1755 . 1756) (nil tag-attr t 1754 . 1755) (nil tag-attr-end 0 1754 . 1755) (nil tag-name "v-icon" 1754 . 1755) (nil tag-type start 1754 . 1755) (nil font-lock-face web-mode-html-attr-name-face 1754 . 1755) (nil tag-attr t 1752 . 1754) (nil tag-name "v-icon" 1752 . 1754) (nil tag-type start 1752 . 1754) (nil font-lock-face web-mode-html-attr-name-face 1752 . 1754) (nil tag-attr-beg 0 1751 . 1752) (nil tag-attr t 1751 . 1752) (nil tag-name "v-icon" 1751 . 1752) (nil tag-type start 1751 . 1752) (nil font-lock-face web-mode-html-attr-name-face 1751 . 1752) (nil tag-name "v-icon" 1750 . 1751) (nil tag-type start 1750 . 1751) (nil tag-name "v-icon" 1744 . 1750) (nil tag-type start 1744 . 1750) (nil font-lock-face web-mode-html-tag-custom-face 1744 . 1750) (nil tag-name "v-icon" 1743 . 1744) (nil tag-type start 1743 . 1744) (nil tag-beg 19 1743 . 1744) (nil font-lock-face web-mode-html-tag-bracket-face 1743 . 1744) (nil tag-name "v-avatar" 1717 . 1718) (nil tag-type start 1717 . 1718) (nil tag-end t 1717 . 1718) (nil font-lock-face web-mode-html-tag-bracket-face 1717 . 1718) (nil tag-attr t 1716 . 1717) (nil tag-attr-end 5 1716 . 1717) (nil tag-name "v-avatar" 1716 . 1717) (nil tag-type start 1716 . 1717) (nil font-lock-face web-mode-html-attr-value-face 1716 . 1717) (nil tag-attr t 1708 . 1716) (nil tag-name "v-avatar" 1708 . 1716) (nil tag-type start 1708 . 1716) (nil font-lock-face web-mode-html-attr-value-face 1708 . 1716) (nil tag-attr t 1707 . 1708) (nil tag-name "v-avatar" 1707 . 1708) (nil tag-type start 1707 . 1708) (nil font-lock-face web-mode-html-attr-equal-face 1707 . 1708) (nil tag-attr t 1703 . 1707) (nil tag-name "v-avatar" 1703 . 1707) (nil tag-type start 1703 . 1707) (nil font-lock-face web-mode-html-attr-name-face 1703 . 1707) (nil tag-attr-beg 0 1702 . 1703) (nil tag-attr t 1702 . 1703) (nil tag-name "v-avatar" 1702 . 1703) (nil tag-type start 1702 . 1703) (nil font-lock-face web-mode-html-attr-name-face 1702 . 1703) (nil tag-name "v-avatar" 1701 . 1702) (nil tag-type start 1701 . 1702) (nil tag-attr t 1700 . 1701) (nil tag-attr-end 5 1700 . 1701) (nil tag-name "v-avatar" 1700 . 1701) (nil tag-type start 1700 . 1701) (nil font-lock-face web-mode-html-attr-value-face 1700 . 1701) (nil tag-attr t 1695 . 1700) (nil tag-name "v-avatar" 1695 . 1700) (nil tag-type start 1695 . 1700) (nil font-lock-face web-mode-html-attr-value-face 1695 . 1700) (nil tag-attr t 1694 . 1695) (nil tag-name "v-avatar" 1694 . 1695) (nil tag-type start 1694 . 1695) (nil font-lock-face web-mode-html-attr-equal-face 1694 . 1695) (nil tag-attr t 1690 . 1694) (nil tag-name "v-avatar" 1690 . 1694) (nil tag-type start 1690 . 1694) (nil font-lock-face web-mode-html-attr-name-face 1690 . 1694) (nil tag-attr-beg 0 1689 . 1690) (nil tag-attr t 1689 . 1690) (nil tag-name "v-avatar" 1689 . 1690) (nil tag-type start 1689 . 1690) (nil font-lock-face web-mode-html-attr-name-face 1689 . 1690) (nil tag-name "v-avatar" 1688 . 1689) (nil tag-type start 1688 . 1689) (nil tag-attr t 1687 . 1688) (nil tag-attr-end 4 1687 . 1688) (nil tag-name "v-avatar" 1687 . 1688) (nil tag-type start 1687 . 1688) (nil font-lock-face web-mode-html-attr-value-face 1687 . 1688) (nil tag-attr t 1684 . 1687) (nil tag-name "v-avatar" 1684 . 1687) (nil tag-type start 1684 . 1687) (nil font-lock-face web-mode-html-attr-value-face 1684 . 1687) (nil tag-attr t 1683 . 1684) (nil tag-name "v-avatar" 1683 . 1684) (nil tag-type start 1683 . 1684) (nil font-lock-face web-mode-html-attr-equal-face 1683 . 1684) (nil tag-attr t 1680 . 1683) (nil tag-name "v-avatar" 1680 . 1683) (nil tag-type start 1680 . 1683) (nil font-lock-face web-mode-html-attr-name-face 1680 . 1683) (nil tag-attr-beg 0 1679 . 1680) (nil tag-attr t 1679 . 1680) (nil tag-name "v-avatar" 1679 . 1680) (nil tag-type start 1679 . 1680) (nil font-lock-face web-mode-html-attr-name-face 1679 . 1680) (nil tag-name "v-avatar" 1678 . 1679) (nil tag-type start 1678 . 1679) (nil tag-name "v-avatar" 1670 . 1678) (nil tag-type start 1670 . 1678) (nil font-lock-face web-mode-html-tag-custom-face 1670 . 1678) (nil tag-name "v-avatar" 1669 . 1670) (nil tag-type start 1669 . 1670) (nil tag-beg 19 1669 . 1670) (nil font-lock-face web-mode-html-tag-bracket-face 1669 . 1670) (1669 . 1812)) nil (25348 36796 599474 255000) 0 nil])
([nil nil ((#("success" 0 7 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1709) (undo-tree-id1 . -7) (undo-tree-id2 . -7)) nil (25348 36796 599342 552000) 0 nil])
([nil nil ((1709 . 1714)) nil (25348 36796 599328 938000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1713) (undo-tree-id0 . -1) 1714) nil (25348 36796 599317 844000) 0 nil])
([nil nil ((1866 . 1869) (t 25348 36796 600977 348000)) nil (25348 36844 29611 304000) 0 nil])
([nil nil ((1809 . 1832) (t 25348 36844 34837 735000)) nil (25348 36887 778681 309000) 0 nil])
([nil nil ((1833 . 1835) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -1833) (1833 . 1834) (1832 . 1834) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -1832) (1832 . 1833)) nil (25348 36888 177652 171000) 0 nil])
([nil nil ((1834 . 1838)) nil (25348 36892 880131 442000) 0 nil] [nil nil ((#("}}
                    </di" 0 1 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1 2 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 23 24 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 24 25 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 25 27 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face)) . 1834) (undo-tree-id16 . -27) (undo-tree-id17 . -3) (undo-tree-id18 . -27) 1861) ((1834 . 1861)) (25348 36887 782687 78000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1862 . 1863) (nil rear-nonsticky t 1862 . 1863) (nil block-side t 1862 . 1863) (nil face (rainbow-delimiters-depth-3-face) 1862 . 1863) (nil block-side t 1861 . 1862) (nil block-side t 1860 . 1861) (nil face (rainbow-delimiters-depth-3-face) 1860 . 1861) (nil block-side t 1859 . 1860) (nil face (rainbow-delimiters-depth-3-face) 1859 . 1860) (nil block-side t 1858 . 1859) (nil block-side t 1857 . 1858) (nil face web-mode-variable-name-face 1857 . 1858) (nil block-side t 1856 . 1857) (nil face web-mode-variable-name-face 1856 . 1857) (nil block-side t 1855 . 1856) (nil face web-mode-variable-name-face 1855 . 1856) (nil block-side t 1854 . 1855) (nil face web-mode-variable-name-face 1854 . 1855) (nil block-side t 1853 . 1854) (nil face web-mode-variable-name-face 1853 . 1854) (nil block-side t 1852 . 1853) (nil face web-mode-variable-name-face 1852 . 1853) (nil block-side t 1851 . 1852) (nil block-side t 1850 . 1851) (nil face web-mode-variable-name-face 1850 . 1851) (nil block-side t 1849 . 1850) (nil face web-mode-variable-name-face 1849 . 1850) (nil block-side t 1848 . 1849) (nil face web-mode-variable-name-face 1848 . 1849) (nil block-side t 1847 . 1848) (nil face web-mode-variable-name-face 1847 . 1848) (nil block-side t 1846 . 1847) (nil face web-mode-variable-name-face 1846 . 1847) (nil block-side t 1845 . 1846) (nil face web-mode-variable-name-face 1845 . 1846) (nil block-side t 1844 . 1845) (nil block-side t 1843 . 1844) (nil face (rainbow-delimiters-depth-3-face) 1843 . 1844) (nil block-side t 1842 . 1843) (nil face web-mode-variable-name-face 1842 . 1843) (nil block-side t 1841 . 1842) (nil face web-mode-variable-name-face 1841 . 1842) (nil block-side t 1840 . 1841) (nil face web-mode-variable-name-face 1840 . 1841) (nil block-side t 1839 . 1840) (nil face web-mode-variable-name-face 1839 . 1840) (nil block-side t 1838 . 1839) (nil block-side t 1837 . 1838) (nil face web-mode-variable-name-face 1837 . 1838) (nil block-side t 1836 . 1837) (nil face web-mode-variable-name-face 1836 . 1837) (nil block-side t 1835 . 1836) (nil face web-mode-variable-name-face 1835 . 1836) (1835 . 1863)) nil (25348 36892 880125 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1861 . 1862) (nil rear-nonsticky t 1861 . 1862) (nil face (rainbow-delimiters-depth-3-face) 1861 . 1862) (nil face (rainbow-delimiters-depth-3-face) 1859 . 1860) (nil face (rainbow-delimiters-depth-3-face) 1858 . 1859) (nil face (rainbow-delimiters-depth-3-face) 1842 . 1843) (1834 . 1862)) ((#("row.item['Active Sensor'][1]" 8 9 (face (rainbow-delimiters-depth-3-face)) 24 25 (face (rainbow-delimiters-depth-3-face)) 25 26 (face (rainbow-delimiters-depth-3-face)) 27 28 (rear-nonsticky t face (rainbow-delimiters-depth-3-face))) . 1834) (undo-tree-id19 . -28) (nil face (rainbow-delimiters-depth-3-face) 1842 . 1843) (nil face (rainbow-delimiters-depth-3-face) 1858 . 1859) (nil face (rainbow-delimiters-depth-3-face) 1859 . 1860) (nil face (rainbow-delimiters-depth-3-face) 1861 . 1862) (nil rear-nonsticky nil 1861 . 1862) (nil rear-nonsticky t 1861 . 1862)) (25348 36887 778654 457000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 1866) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 1866)) nil (25348 36892 880102 742000) 0 nil])
nil
([nil nil ((14905 . 14918) (t 25348 36892 884645 331000)) nil (25348 36960 950965 541000) 0 nil])
([nil nil ((14930 . 14938) (14929 . 14931) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -14929) (14918 . 14930)) nil (25348 36960 950962 829000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14937) (undo-tree-id20 . -1) 14938) nil (25348 36960 950956 599000) 0 nil])
([nil nil ((14930 . 14935) (t 25348 36960 954999 437000)) nil (25348 36978 594511 185000) 0 nil])
([nil nil ((#("
                      {{ row.item['Active Sensor'][1] }}" 23 24 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 25 26 (block-side t) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face (rainbow-delimiters-depth-3-face)) 35 36 (block-side t) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t) 50 51 (block-side t face (rainbow-delimiters-depth-3-face)) 51 52 (block-side t face (rainbow-delimiters-depth-3-face)) 52 53 (block-side t) 53 54 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 54 55 (block-side t) 55 56 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 56 57 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1809) (undo-tree-id21 . -57) (undo-tree-id22 . -25) (undo-tree-id23 . -25) (undo-tree-id24 . -26) (undo-tree-id25 . -1) (t 25348 36978 599580 980000)) nil (25348 37460 950821 91000) 0 nil])
([nil nil ((12876 . 12883) (t 25348 37460 956246 313000)) nil (25348 39037 918582 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13107 . 13108) (nil part-side javascript 13107 . 13108) (nil rear-nonsticky t 13106 . 13107) (nil part-side javascript 13106 . 13107) (nil face (rainbow-delimiters-depth-3-face) 13106 . 13107) (nil part-side javascript 13100 . 13106) (nil part-side javascript 13099 . 13100) (nil part-side javascript 13098 . 13099) (nil face (rainbow-delimiters-depth-4-face) 13098 . 13099) (nil part-side javascript 13090 . 13098) (nil part-side javascript 13089 . 13090) (nil syntax-table (15) 13089 . 13090) (nil part-side javascript 13083 . 13089) (nil part-token string 13083 . 13089) (nil font-lock-face web-mode-javascript-string-face 13083 . 13089) (nil part-side javascript 13082 . 13083) (nil part-token string 13082 . 13083) (nil syntax-table (15) 13082 . 13083) (nil font-lock-face web-mode-javascript-string-face 13082 . 13083) (nil part-side javascript 13081 . 13082) (nil part-side javascript 13075 . 13081) (nil face web-mode-keyword-face 13075 . 13081) (nil part-side javascript 13065 . 13075) (nil part-side javascript 13064 . 13065) (nil part-side javascript 13063 . 13064) (nil face (rainbow-delimiters-depth-4-face) 13063 . 13064) (nil part-side javascript 13062 . 13063) (nil part-side javascript 13058 . 13062) (nil face web-mode-keyword-face 13058 . 13062) (nil part-side javascript 13050 . 13058) (nil part-side javascript 13049 . 13050) (nil part-side javascript 13048 . 13049) (nil face (rainbow-delimiters-depth-4-face) 13048 . 13049) (nil part-side javascript 13040 . 13048) (nil part-side javascript 13039 . 13040) (nil syntax-table (15) 13039 . 13040) (nil part-side javascript 13031 . 13039) (nil part-token string 13031 . 13039) (nil font-lock-face web-mode-javascript-string-face 13031 . 13039) (nil part-side javascript 13030 . 13031) (nil part-token string 13030 . 13031) (nil syntax-table (15) 13030 . 13031) (nil font-lock-face web-mode-javascript-string-face 13030 . 13031) (nil part-side javascript 13029 . 13030) (nil part-side javascript 13023 . 13029) (nil face web-mode-keyword-face 13023 . 13029) (nil part-side javascript 13013 . 13023) (nil part-side javascript 13012 . 13013) (nil part-side javascript 13011 . 13012) (nil face (rainbow-delimiters-depth-4-face) 13011 . 13012) (nil part-side javascript 13010 . 13011) (nil part-side javascript 13009 . 13010) (nil face (rainbow-delimiters-depth-4-face) 13009 . 13010) (nil rear-nonsticky t 13008 . 13009) (nil part-side javascript 13008 . 13009) (nil face (rainbow-delimiters-depth-5-face) 13008 . 13009) (nil part-side javascript 13007 . 13008) (nil part-token string 13007 . 13008) (nil syntax-table (15) 13007 . 13008) (nil font-lock-face web-mode-javascript-string-face 13007 . 13008) (nil part-side javascript 12994 . 13007) (nil part-token string 12994 . 13007) (nil font-lock-face web-mode-javascript-string-face 12994 . 13007) (nil part-side javascript 12993 . 12994) (nil part-token string 12993 . 12994) (nil syntax-table (15) 12993 . 12994) (nil font-lock-face web-mode-javascript-string-face 12993 . 12994) (nil part-side javascript 12992 . 12993) (nil face (rainbow-delimiters-depth-5-face) 12992 . 12993) (nil part-side javascript 12988 . 12992) (nil part-side javascript 12987 . 12988) (nil face (rainbow-delimiters-depth-4-face) 12987 . 12988) (nil part-side javascript 12986 . 12987) (nil part-side javascript 12984 . 12986) (nil face web-mode-keyword-face 12984 . 12986) (nil part-side javascript 12983 . 12984) (nil part-side javascript 12979 . 12983) (nil face web-mode-keyword-face 12979 . 12983) (nil part-side javascript 12971 . 12979) (nil part-side javascript 12970 . 12971) (nil part-side javascript 12969 . 12970) (nil face (rainbow-delimiters-depth-4-face) 12969 . 12970) (nil part-side javascript 12961 . 12969) (nil part-side javascript 12960 . 12961) (nil syntax-table (15) 12960 . 12961) (nil part-side javascript 12955 . 12960) (nil part-token string 12955 . 12960) (nil font-lock-face web-mode-javascript-string-face 12955 . 12960) (nil part-side javascript 12954 . 12955) (nil part-token string 12954 . 12955) (nil syntax-table (15) 12954 . 12955) (nil font-lock-face web-mode-javascript-string-face 12954 . 12955) (nil part-side javascript 12953 . 12954) (nil part-side javascript 12947 . 12953) (nil face web-mode-keyword-face 12947 . 12953) (nil part-side javascript 12937 . 12947) (nil part-side javascript 12936 . 12937) (nil part-side javascript 12935 . 12936) (nil face (rainbow-delimiters-depth-4-face) 12935 . 12936) (nil part-side javascript 12934 . 12935) (nil part-side javascript 12933 . 12934) (nil face (rainbow-delimiters-depth-4-face) 12933 . 12934) (nil part-side javascript 12932 . 12933) (nil face (rainbow-delimiters-depth-5-face) 12932 . 12933) (nil part-side javascript 12931 . 12932) (nil part-token string 12931 . 12932) (nil syntax-table (15) 12931 . 12932) (nil font-lock-face web-mode-javascript-string-face 12931 . 12932) (nil part-side javascript 12927 . 12931) (nil part-token string 12927 . 12931) (nil font-lock-face web-mode-javascript-string-face 12927 . 12931) (nil part-side javascript 12926 . 12927) (nil part-token string 12926 . 12927) (nil syntax-table (15) 12926 . 12927) (nil font-lock-face web-mode-javascript-string-face 12926 . 12927) (nil part-side javascript 12925 . 12926) (nil face (rainbow-delimiters-depth-5-face) 12925 . 12926) (nil part-side javascript 12921 . 12925) (nil part-side javascript 12920 . 12921) (nil face (rainbow-delimiters-depth-4-face) 12920 . 12921) (nil part-side javascript 12919 . 12920) (nil part-side javascript 12917 . 12919) (nil face web-mode-keyword-face 12917 . 12919) (nil part-side javascript 12909 . 12917) (nil part-side javascript 12908 . 12909) (nil part-side javascript 12907 . 12908) (nil face (rainbow-delimiters-depth-3-face) 12907 . 12908) (nil part-side javascript 12906 . 12907) (nil face (rainbow-delimiters-depth-3-face) 12906 . 12907) (nil part-side javascript 12902 . 12906) (nil part-side javascript 12901 . 12902) (nil face (rainbow-delimiters-depth-3-face) 12901 . 12902) (nil part-side javascript 12889 . 12901) (nil face web-mode-function-name-face 12889 . 12901) (nil part-side javascript 12883 . 12889) (12883 . 13108)) nil (25348 39037 918573 51000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -12883) (undo-tree-id49 . -2) 12885) nil (25348 39037 918539 764000) 0 nil])
([nil nil ((1702 . 1703)) nil (25348 39037 918537 353000) 0 nil])
([nil nil ((#("blue" 0 1 (block-side t tag-attr t tag-name "v-avatar" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-avatar" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-avatar" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-avatar" tag-type start face web-mode-variable-name-face)) . 1710) (undo-tree-id47 . -4) (undo-tree-id48 . -4)) nil (25348 39037 918536 75000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1727 . 1728) (nil block-side t 1727 . 1728) (nil tag-attr t 1727 . 1728) (nil tag-name "v-avatar" 1727 . 1728) (nil tag-type start 1727 . 1728) (nil block-side t 1726 . 1727) (nil tag-attr t 1726 . 1727) (nil tag-name "v-avatar" 1726 . 1727) (nil tag-type start 1726 . 1727) (nil face web-mode-variable-name-face 1726 . 1727) (nil block-side t 1725 . 1726) (nil tag-attr t 1725 . 1726) (nil tag-name "v-avatar" 1725 . 1726) (nil tag-type start 1725 . 1726) (nil face web-mode-variable-name-face 1725 . 1726) (nil block-side t 1724 . 1725) (nil tag-attr t 1724 . 1725) (nil tag-name "v-avatar" 1724 . 1725) (nil tag-type start 1724 . 1725) (nil face web-mode-variable-name-face 1724 . 1725) (nil block-side t 1723 . 1724) (nil tag-attr t 1723 . 1724) (nil tag-name "v-avatar" 1723 . 1724) (nil tag-type start 1723 . 1724) (nil face web-mode-variable-name-face 1723 . 1724) (nil block-side t 1722 . 1723) (nil tag-attr t 1722 . 1723) (nil tag-name "v-avatar" 1722 . 1723) (nil tag-type start 1722 . 1723) (nil block-side t 1710 . 1722) (nil tag-attr t 1710 . 1722) (nil tag-name "v-avatar" 1710 . 1722) (nil tag-type start 1710 . 1722) (nil face web-mode-function-call-face 1710 . 1722) (1710 . 1728)) nil (25348 39037 918530 565000) 0 nil])
([nil nil ((#("v-if=\"row.item['Active Sensor'][1]\"" 0 1 (tag-attr-beg 2 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 33 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 4 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1610) (undo-tree-id44 . -35) (undo-tree-id45 . -34) (undo-tree-id46 . -35)) nil (25348 39037 918521 93000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -1609) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1610) nil (25348 39037 918516 326000) 0 nil])
([nil nil ((#("                    <div v-else-if=\"row.item['Active Sensor'][0]\">
                      <v-avatar size=\"32\" class=\"pa-2\" color=\"success\">
                        <v-icon dark>mdi-lightbulb</v-icon>
                      </v-avatar>
                    </div>
                    <div style=\"vertical-align: middle\" v-else>
                      <v-avatar
                        text-truncate
                        size=\"32\"
                        class=\"pa-2\"
                        color=\"error\"
                      >
                        <v-icon dark>mdi-lightbulb</v-icon>
                      </v-avatar>
                    </div>" 20 21 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 21 24 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 24 25 (tag-name "div" tag-type start) 25 26 (tag-attr-beg 2 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 26 28 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 28 32 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 32 33 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 33 34 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 34 35 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 36 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 36 44 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 45 53 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 54 60 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 60 61 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 61 62 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 62 63 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 63 64 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 64 65 (tag-attr t tag-attr-end 9 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 65 66 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 89 90 (tag-name "v-avatar" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 90 98 (tag-name "v-avatar" tag-type start font-lock-face web-mode-html-tag-custom-face) 98 99 (tag-name "v-avatar" tag-type start) 99 100 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 100 103 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 103 104 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 104 107 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 107 108 (tag-attr t tag-attr-end 4 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 108 109 (tag-name "v-avatar" tag-type start) 109 110 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 110 114 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 114 115 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 115 120 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 120 121 (tag-attr t tag-attr-end 5 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 121 122 (tag-name "v-avatar" tag-type start) 122 123 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 123 127 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 127 128 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 128 136 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 136 137 (tag-attr t tag-attr-end 5 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 137 138 (tag-name "v-avatar" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 163 164 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 164 170 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 170 171 (tag-name "v-icon" tag-type start) 171 172 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 172 174 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 174 175 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 175 176 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 189 190 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 190 191 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 191 197 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 197 198 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 221 222 (tag-name "v-avatar" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 222 223 (tag-name "v-avatar" tag-type end font-lock-face web-mode-html-tag-bracket-face) 223 231 (tag-name "v-avatar" tag-type end font-lock-face web-mode-html-tag-custom-face) 231 232 (tag-name "v-avatar" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 253 254 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 254 255 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 255 258 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 258 259 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 280 281 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 281 284 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 284 285 (tag-name "div" tag-type start) 285 286 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 286 290 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 290 291 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 291 314 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 314 315 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 315 316 (tag-name "div" tag-type start) 316 317 (tag-attr-beg 2 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 317 321 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 321 322 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-engine-face) 322 323 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 346 347 (tag-name "v-avatar" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 347 355 (tag-name "v-avatar" tag-type start font-lock-face web-mode-html-tag-custom-face) 355 380 (tag-name "v-avatar" tag-type start) 380 381 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 381 392 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 392 393 (tag-attr t tag-attr-end 0 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 393 418 (tag-name "v-avatar" tag-type start) 418 419 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 419 422 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 422 423 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 423 426 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 426 427 (tag-attr t tag-attr-end 4 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 427 452 (tag-name "v-avatar" tag-type start) 452 453 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 453 457 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 457 458 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 458 463 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 463 464 (tag-attr t tag-attr-end 5 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 464 489 (tag-name "v-avatar" tag-type start) 489 490 (tag-attr-beg 0 tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 490 494 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-name-face) 494 495 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-equal-face) 495 501 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 501 502 (tag-attr t tag-attr-end 5 tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face) 502 525 (tag-name "v-avatar" tag-type start) 525 526 (tag-name "v-avatar" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 551 552 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 552 558 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 558 559 (tag-name "v-icon" tag-type start) 559 560 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 560 562 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 562 563 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 563 564 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 577 578 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 578 579 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 579 585 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 585 586 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 609 610 (tag-name "v-avatar" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 610 611 (tag-name "v-avatar" tag-type end font-lock-face web-mode-html-tag-bracket-face) 611 619 (tag-name "v-avatar" tag-type end font-lock-face web-mode-html-tag-custom-face) 619 620 (tag-name "v-avatar" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 641 642 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 642 643 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 643 646 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 646 647 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1816) (undo-tree-id35 . -647) (undo-tree-id36 . -232) (undo-tree-id37 . -232) (undo-tree-id38 . -67) (undo-tree-id39 . -647) (undo-tree-id40 . -647)) nil (25348 39037 918510 775000) 0 nil])
([nil nil (("
" . -1815) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 1816) nil (25348 39037 918502 113000) 0 nil])
([nil nil ((#("Sensor Status" 0 13 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12319) (undo-tree-id26 . -13) (undo-tree-id27 . -13) (undo-tree-id28 . -13)) nil (25348 39037 918492 216000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12331 . 12332) (nil fontified t 12319 . 12332) (nil part-side javascript 12319 . 12332) (nil part-token string 12319 . 12332) (nil font-lock-face web-mode-javascript-string-face 12319 . 12332) (12319 . 12332)) nil (25348 39037 918473 710000) 0 nil])
([nil nil ((1687 . 1692) (t 25348 39037 922652 564000)) nil (25348 39097 998905 969000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-avatar" tag-type start)) . -1691) (undo-tree-id50 . -1) 1692) nil (25348 39097 998899 812000) 0 nil])
([nil nil ((9637 . 9648) (t 25348 39098 3380 162000)) nil (25348 39496 422215 845000) 0 nil])
([nil nil ((9648 . 9663)) nil (25348 39496 422214 501000) 0 nil])
([nil nil ((9656 . 9668) (9657 . 9667) (#("            " 0 12 (face whitespace-trailing)) . 9656) (9656 . 9668) (9656 . 9657) ("          " . 9656) (9655 . 9666)) nil (25348 39496 422212 881000) 0 nil])
([nil nil ((9668 . 9683)) nil (25348 39496 422210 350000) 0 nil])
([nil nil ((9676 . 9690) (9677 . 9689) (#("              " 0 14 (face whitespace-trailing)) . 9676) (9676 . 9690) (9676 . 9677) ("            " . 9676) (9675 . 9688)) nil (25348 39496 422208 637000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9802 . 9803) (nil tag-name "v-checkbox" 9802 . 9803) (nil tag-type end 9802 . 9803) (nil tag-end t 9802 . 9803) (nil font-lock-face web-mode-html-tag-bracket-face 9802 . 9803) (nil tag-name "v-checkbox" 9792 . 9802) (nil tag-type end 9792 . 9802) (nil font-lock-face web-mode-html-tag-custom-face 9792 . 9802) (nil tag-name "v-checkbox" 9791 . 9792) (nil tag-type end 9791 . 9792) (nil font-lock-face web-mode-html-tag-bracket-face 9791 . 9792) (nil tag-name "v-checkbox" 9790 . 9791) (nil tag-type end 9790 . 9791) (nil tag-beg 22 9790 . 9791) (nil font-lock-face web-mode-html-tag-bracket-face 9790 . 9791) (nil tag-name "v-checkbox" 9789 . 9790) (nil tag-type start 9789 . 9790) (nil tag-end t 9789 . 9790) (nil font-lock-face web-mode-html-tag-bracket-face 9789 . 9790) (nil tag-name "v-checkbox" 9782 . 9789) (nil tag-type start 9782 . 9789) (nil block-side t 9781 . 9782) (nil block-end t 9781 . 9782) (nil block-token delimiter-end 9781 . 9782) (nil tag-attr t 9781 . 9782) (nil tag-attr-end 6 9781 . 9782) (nil tag-name "v-checkbox" 9781 . 9782) (nil tag-type start 9781 . 9782) (nil font-lock-face web-mode-block-delimiter-face 9781 . 9782) (nil block-side t 9777 . 9781) (nil tag-attr t 9777 . 9781) (nil tag-name "v-checkbox" 9777 . 9781) (nil tag-type start 9777 . 9781) (nil block-side t 9769 . 9777) (nil tag-attr t 9769 . 9777) (nil tag-name "v-checkbox" 9769 . 9777) (nil tag-type start 9769 . 9777) (nil face web-mode-function-call-face 9769 . 9777) (nil block-side t 9768 . 9769) (nil tag-attr t 9768 . 9769) (nil tag-name "v-checkbox" 9768 . 9769) (nil tag-type start 9768 . 9769) (nil block-side t 9767 . 9768) (nil tag-attr t 9767 . 9768) (nil tag-name "v-checkbox" 9767 . 9768) (nil tag-type start 9767 . 9768) (nil face web-mode-variable-name-face 9767 . 9768) (nil block-side t 9766 . 9767) (nil tag-attr t 9766 . 9767) (nil tag-name "v-checkbox" 9766 . 9767) (nil tag-type start 9766 . 9767) (nil face web-mode-variable-name-face 9766 . 9767) (nil block-side t 9765 . 9766) (nil tag-attr t 9765 . 9766) (nil tag-name "v-checkbox" 9765 . 9766) (nil tag-type start 9765 . 9766) (nil face web-mode-variable-name-face 9765 . 9766) (nil block-side t 9764 . 9765) (nil tag-attr t 9764 . 9765) (nil tag-name "v-checkbox" 9764 . 9765) (nil tag-type start 9764 . 9765) (nil face web-mode-variable-name-face 9764 . 9765) (nil block-side t 9763 . 9764) (nil tag-attr t 9763 . 9764) (nil tag-name "v-checkbox" 9763 . 9764) (nil tag-type start 9763 . 9764) (nil face web-mode-variable-name-face 9763 . 9764) (nil block-side t 9762 . 9763) (nil tag-attr t 9762 . 9763) (nil tag-name "v-checkbox" 9762 . 9763) (nil tag-type start 9762 . 9763) (nil face web-mode-variable-name-face 9762 . 9763) (nil block-side t 9761 . 9762) (nil tag-attr t 9761 . 9762) (nil tag-name "v-checkbox" 9761 . 9762) (nil tag-type start 9761 . 9762) (nil face web-mode-variable-name-face 9761 . 9762) (nil block-side t 9760 . 9761) (nil tag-attr t 9760 . 9761) (nil tag-name "v-checkbox" 9760 . 9761) (nil tag-type start 9760 . 9761) (nil face web-mode-variable-name-face 9760 . 9761) (nil block-side t 9754 . 9760) (nil tag-attr t 9754 . 9760) (nil tag-name "v-checkbox" 9754 . 9760) (nil tag-type start 9754 . 9760) (nil block-side t 9753 . 9754) (nil tag-attr t 9753 . 9754) (nil tag-name "v-checkbox" 9753 . 9754) (nil tag-type start 9753 . 9754) (nil face web-mode-variable-name-face 9753 . 9754) (nil block-side t 9752 . 9753) (nil tag-attr t 9752 . 9753) (nil tag-name "v-checkbox" 9752 . 9753) (nil tag-type start 9752 . 9753) (nil face web-mode-variable-name-face 9752 . 9753) (nil block-side t 9751 . 9752) (nil tag-attr t 9751 . 9752) (nil tag-name "v-checkbox" 9751 . 9752) (nil tag-type start 9751 . 9752) (nil face web-mode-variable-name-face 9751 . 9752) (nil block-side t 9750 . 9751) (nil tag-attr t 9750 . 9751) (nil tag-name "v-checkbox" 9750 . 9751) (nil tag-type start 9750 . 9751) (nil face web-mode-variable-name-face 9750 . 9751) (nil block-side t 9749 . 9750) (nil tag-attr t 9749 . 9750) (nil tag-name "v-checkbox" 9749 . 9750) (nil tag-type start 9749 . 9750) (nil face web-mode-variable-name-face 9749 . 9750) (nil block-side t 9748 . 9749) (nil tag-attr t 9748 . 9749) (nil tag-name "v-checkbox" 9748 . 9749) (nil tag-type start 9748 . 9749) (nil face web-mode-variable-name-face 9748 . 9749) (nil block-side t 9747 . 9748) (nil tag-attr t 9747 . 9748) (nil tag-name "v-checkbox" 9747 . 9748) (nil tag-type start 9747 . 9748) (nil face web-mode-variable-name-face 9747 . 9748) (nil block-side t 9746 . 9747) (nil tag-attr t 9746 . 9747) (nil tag-name "v-checkbox" 9746 . 9747) (nil tag-type start 9746 . 9747) (nil face web-mode-variable-name-face 9746 . 9747) (nil block-side t 9745 . 9746) (nil tag-attr t 9745 . 9746) (nil tag-name "v-checkbox" 9745 . 9746) (nil tag-type start 9745 . 9746) (nil block-side t 9744 . 9745) (nil block-token delimiter-beg 9744 . 9745) (nil tag-attr t 9744 . 9745) (nil tag-name "v-checkbox" 9744 . 9745) (nil tag-type start 9744 . 9745) (nil font-lock-face web-mode-block-delimiter-face 9744 . 9745) (nil block-side t 9743 . 9744) (nil block-token delimiter-beg 9743 . 9744) (nil tag-attr t 9743 . 9744) (nil tag-name "v-checkbox" 9743 . 9744) (nil tag-type start 9743 . 9744) (nil font-lock-face web-mode-block-delimiter-face 9743 . 9744) (nil block-side t 9742 . 9743) (nil block-token delimiter-beg 9742 . 9743) (nil tag-attr t 9742 . 9743) (nil tag-name "v-checkbox" 9742 . 9743) (nil tag-type start 9742 . 9743) (nil font-lock-face web-mode-block-delimiter-face 9742 . 9743) (nil block-side t 9741 . 9742) (nil block-token delimiter-beg 9741 . 9742) (nil tag-attr t 9741 . 9742) (nil tag-name "v-checkbox" 9741 . 9742) (nil tag-type start 9741 . 9742) (nil font-lock-face web-mode-block-delimiter-face 9741 . 9742) (nil block-side t 9740 . 9741) (nil block-token delimiter-beg 9740 . 9741) (nil tag-attr t 9740 . 9741) (nil tag-name "v-checkbox" 9740 . 9741) (nil tag-type start 9740 . 9741) (nil font-lock-face web-mode-block-delimiter-face 9740 . 9741) (nil block-side t 9739 . 9740) (nil block-token delimiter-beg 9739 . 9740) (nil tag-attr t 9739 . 9740) (nil tag-name "v-checkbox" 9739 . 9740) (nil tag-type start 9739 . 9740) (nil font-lock-face web-mode-block-delimiter-face 9739 . 9740) (nil block-side t 9738 . 9739) (nil block-token delimiter-beg 9738 . 9739) (nil tag-attr t 9738 . 9739) (nil tag-name "v-checkbox" 9738 . 9739) (nil tag-type start 9738 . 9739) (nil font-lock-face web-mode-block-delimiter-face 9738 . 9739) (nil block-beg 0 9737 . 9738) (nil block-controls 0 9737 . 9738) (nil block-side t 9737 . 9738) (nil block-token delimiter-beg 9737 . 9738) (nil tag-attr-beg 2 9737 . 9738) (nil tag-attr t 9737 . 9738) (nil tag-name "v-checkbox" 9737 . 9738) (nil tag-type start 9737 . 9738) (nil font-lock-face web-mode-block-delimiter-face 9737 . 9738) (nil tag-name "v-checkbox" 9728 . 9737) (nil tag-type start 9728 . 9737) (nil tag-attr t 9727 . 9728) (nil tag-attr-end 7 9727 . 9728) (nil tag-name "v-checkbox" 9727 . 9728) (nil tag-type start 9727 . 9728) (nil font-lock-face web-mode-html-attr-value-face 9727 . 9728) (nil tag-attr t 9718 . 9727) (nil tag-name "v-checkbox" 9718 . 9727) (nil tag-type start 9718 . 9727) (nil font-lock-face web-mode-html-attr-value-face 9718 . 9727) (nil tag-attr t 9717 . 9718) (nil tag-name "v-checkbox" 9717 . 9718) (nil tag-type start 9717 . 9718) (nil font-lock-face web-mode-html-attr-equal-face 9717 . 9718) (nil tag-attr t 9711 . 9717) (nil tag-name "v-checkbox" 9711 . 9717) (nil tag-type start 9711 . 9717) (nil font-lock-face web-mode-html-attr-engine-face 9711 . 9717) (nil tag-attr-beg 2 9710 . 9711) (nil tag-attr t 9710 . 9711) (nil tag-name "v-checkbox" 9710 . 9711) (nil tag-type start 9710 . 9711) (nil font-lock-face web-mode-html-attr-engine-face 9710 . 9711) (nil tag-name "v-checkbox" 9701 . 9710) (nil tag-type start 9701 . 9710) (nil tag-name "v-checkbox" 9691 . 9701) (nil tag-type start 9691 . 9701) (nil font-lock-face web-mode-html-tag-custom-face 9691 . 9701) (nil tag-name "v-checkbox" 9690 . 9691) (nil tag-type start 9690 . 9691) (nil tag-beg 19 9690 . 9691) (nil font-lock-face web-mode-html-tag-bracket-face 9690 . 9691) (9690 . 9803)) nil (25348 39496 422192 834000) 0 nil])
([nil nil ((9702 . 9718) (#("        " 0 8 (tag-name "v-checkbox" tag-type start)) . 9702) 9722) nil (25348 39496 422139 952000) 0 nil])
([nil nil ((9737 . 9753) (#("        " 0 8 (tag-name "v-checkbox" tag-type start)) . 9737) 9765) nil (25348 39496 422138 119000) 0 nil])
([nil nil ((9799 . 9813) (#("      " 0 6 (tag-name "v-checkbox" tag-type start)) . 9799) 9819) nil (25348 39496 422136 308000) 0 nil])
([nil nil ((9727 . 9731)) nil (25348 39496 422134 402000) 0 nil])
([nil nil ((#("d" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9727) (undo-tree-id96 . -1) (#("e" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9728) (undo-tree-id97 . -1) (#("m" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9729) (undo-tree-id98 . -1) (#("o" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9730) (undo-tree-id99 . -1) 9731) nil (25348 39496 422132 548000) 0 nil])
([nil nil ((9727 . 9730)) nil (25348 39496 422125 28000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9728) (undo-tree-id94 . -1) (#("h" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9729) (undo-tree-id95 . -1) 9730) nil (25348 39496 422123 480000) 0 nil])
([nil nil ((9728 . 9740)) nil (25348 39496 422119 857000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9739) (undo-tree-id93 . -1) 9740) nil (25348 39496 422118 472000) 0 nil])
([nil nil ((#("x" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("o" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("b" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("k" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("c" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("e" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("h" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739) (#("c" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9739)) nil (25348 39496 422114 952000) 0 nil])
([nil nil ((#("`Checkbox 1: ${checkbox.toString()}`" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 8 9 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 9 15 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 15 16 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 24 32 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-function-call-face) 32 36 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . 9765) (undo-tree-id91 . -36) (undo-tree-id92 . -36)) nil (25348 39496 422111 875000) 0 nil])
([nil nil ((9765 . 9771)) nil (25348 39496 422108 664000) 0 nil])
([nil nil ((#("C" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9765) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("h" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9766) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9767) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("c" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9768) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("k" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9769) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9770) (undo-tree-id90 . -1) 9771) nil (25348 39496 422105 724000) 0 nil])
([nil nil ((9765 . 9772)) nil (25348 39496 422089 683000) 0 nil])
([nil nil ((#("v" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9770) (undo-tree-id78 . -1) (#("i" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9771) (undo-tree-id79 . -1) 9772) nil (25348 39496 422088 35000) 0 nil])
([nil nil ((9770 . 9772)) nil (25348 39496 422084 373000) 0 nil])
([nil nil ((#("w" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9770) (undo-tree-id76 . -1) (#("i" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9771) (undo-tree-id77 . -1) 9772) nil (25348 39496 422082 741000) 0 nil])
([nil nil ((9770 . 9775)) nil (25348 39496 422076 872000) 0 nil])
([nil nil ((#("w" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9770) (undo-tree-id71 . -1) (#("i" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9771) (undo-tree-id72 . -1) (#("c" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9772) (undo-tree-id73 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9773) (undo-tree-id74 . -1) (#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9774) (undo-tree-id75 . -1) 9775) nil (25348 39496 422074 480000) 0 nil])
([nil nil ((9770 . 9775)) nil (25348 39496 422066 200000) 0 nil])
([nil nil ((#("S" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9765) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("u" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9766) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("p" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9767) (undo-tree-id63 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9768) (undo-tree-id64 . -1) (#("r" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9769) (undo-tree-id65 . -1) (#("v" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9770) (undo-tree-id66 . -1) (#("i" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9771) (undo-tree-id67 . -1) (#("c" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9772) (undo-tree-id68 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9773) (undo-tree-id69 . -1) (#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9774) (undo-tree-id70 . -1) 9775) nil (25348 39496 422062 327000) 0 nil])
([nil nil ((9765 . 9785)) nil (25348 39496 422045 820000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9784) (undo-tree-id58 . -1) 9785) nil (25348 39496 422044 367000) 0 nil])
([nil nil ((#("E" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9765) (undo-tree-id52 . -1) (#("n" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9766) (undo-tree-id53 . -1) (#("a" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9767) (undo-tree-id54 . -1) (#("b" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9768) (undo-tree-id55 . -1) (#("l" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9769) (undo-tree-id56 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . -9770) (undo-tree-id57 . -1) 9771) nil (25348 39496 422039 752000) 0 nil])
([nil nil ((9765 . 9773)) nil (25348 39496 422028 627000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9772) (undo-tree-id51 . -1) 9773) nil (25348 39496 422017 950000) 0 nil])
([nil nil ((11939 . 11948) (t 25348 39496 428417 579000)) nil (25348 39513 685190 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11959 . 11960) (nil part-side javascript 11948 . 11960) (11948 . 11960)) nil (25348 39513 685188 778000) 0 nil])
([nil nil ((11960 . 11963)) nil (25348 39513 685187 27000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -11962) (undo-tree-id102 . -1) 11963) nil (25348 39513 685185 323000) 0 nil])
([nil nil ((11962 . 11968)) nil (25348 39513 685182 244000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11967) (undo-tree-id101 . -1) 11968) nil (25348 39513 685180 468000) 0 nil])
([nil nil ((11967 . 11969)) nil (25348 39513 685176 418000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11968) (undo-tree-id100 . -1) 11969) nil (25348 39513 685170 544000) 0 nil])
([nil nil ((#(":" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-block-delimiter-face)) . -9757) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 9758 (t 25348 39513 692641 971000)) nil (25348 39524 916305 856000) 0 nil])
([nil nil ((#("false" 0 5 (part-side javascript face web-mode-constant-face)) . 11961) (undo-tree-id106 . -5) (undo-tree-id107 . -4) (undo-tree-id108 . -5) (t 25348 39524 924788 164000)) nil (25348 39559 329589 224000) 0 nil])
([nil nil ((11961 . 11967)) nil (25348 39559 329581 869000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11966) (undo-tree-id105 . -1) 11967) nil (25348 39559 329576 283000) 0 nil])
([nil nil ((#("F" 0 1 (part-side javascript)) . -11961) (undo-tree-id109 . -1) 11962 (t 25348 39559 333236 969000)) nil (25348 39561 338948 39000) 0 nil])
([nil nil ((11961 . 11962)) nil (25348 39561 338927 348000) 0 nil])
([nil nil ((11961 . 11965) (t 25348 39561 345263 256000)) nil (25348 39573 697789 379000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . 11965) (#("s" 0 1 (part-side javascript)) . 11965) (#("l" 0 1 (part-side javascript)) . 11965) (undo-tree-id110 . -1) (#("a" 0 1 (part-side javascript)) . 11965) (#("f" 0 1 (part-side javascript)) . 11965) (undo-tree-id111 . -1)) nil (25348 39573 697782 663000) 0 nil])
([nil nil ((9681 . 9682) (9674 . 9682) (t 25348 39573 701424 792000)) nil (25348 39594 936190 303000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9681) (undo-tree-id113 . -1) 9682) nil (25348 39594 936183 957000) 0 nil])
([nil nil ((9681 . 9683)) nil (25348 39594 936175 222000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9682) (undo-tree-id112 . -1) 9683) nil (25348 39594 936167 381000) 0 nil])
([nil nil ((9710 . 9727) (t 25348 39594 945702 916000)) nil (25348 39607 360440 934000) 0 nil])
([nil nil ((9727 . 9735)) nil (25348 39607 360439 228000) 0 nil])
([nil nil ((9734 . 9736)) nil (25348 39607 360437 816000) 0 nil])
([nil nil ((#("d" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9735) (undo-tree-id116 . -1) 9736) nil (25348 39607 360436 192000) 0 nil])
([nil nil ((9735 . 9736)) nil (25348 39607 360433 72000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -9735) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 9736) nil (25348 39607 360430 99000) 0 nil])
([nil nil ((9735 . 9739)) nil (25348 39607 360411 415000) 0 nil])
([nil nil ((15054 . 15061) (t 25348 39607 365865 740000)) nil (25348 44638 589835 516000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15072 . 15073) (nil rear-nonsticky t 15072 . 15073) (nil part-side javascript 15072 . 15073) (nil part-side javascript 15061 . 15072) (15061 . 15073)) nil (25348 44638 589827 817000) 0 nil])
([nil nil ((15056 . 15057) (t 25348 44638 595375 470000)) nil (25348 45326 513639 429000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -15056) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 15057 (t 25348 45326 526883 426000)) nil (25348 46138 782911 646000) 0 nil])
([nil nil ((#("cols=\"6\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 7 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9675) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (t 25348 46138 791890 707000)) nil (25348 46660 285761 662000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -9674) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 9675) nil (25348 46660 285753 61000) 0 nil])
([nil nil ((8353 . 8359) (t 25348 46660 290823 426000)) nil (25348 46682 295834 422000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8353) (undo-tree-id123 . -1) 8354 (t 25348 46682 307188 950000)) nil (25348 46689 228268 438000) 0 nil])
([nil nil ((8353 . 8354)) nil (25348 46689 228252 163000) 0 nil])
([nil nil ((#("
    <v-form ref=\"sform\" @submit.prevent=\"setSensor\">" 5 6 (tag-name "v-form" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 6 12 (tag-name "v-form" tag-type start font-lock-face web-mode-html-tag-custom-face) 12 13 (tag-name "v-form" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-name-face) 14 16 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 23 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-attr-end 3 tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-name "v-form" tag-type start) 25 26 (tag-attr-beg 2 tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-engine-face) 26 40 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-engine-face) 40 41 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-equal-face) 41 51 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-attr-end 15 tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-name "v-form" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 74) (undo-tree-id141 . -53) (undo-tree-id142 . -53) (undo-tree-id143 . -1) (undo-tree-id144 . -53) (t 25348 46689 235303 78000)) nil (25348 46790 100267 941000) 0 nil])
([nil nil ((8285 . 8292)) nil (25348 46790 100261 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8344 . 8345) (nil tag-name "v-form" 8344 . 8345) (nil tag-type start 8344 . 8345) (nil tag-end t 8344 . 8345) (nil font-lock-face web-mode-html-tag-bracket-face 8344 . 8345) (nil tag-attr t 8343 . 8344) (nil tag-attr-end 15 8343 . 8344) (nil tag-name "v-form" 8343 . 8344) (nil tag-type start 8343 . 8344) (nil font-lock-face web-mode-html-attr-value-face 8343 . 8344) (nil tag-attr t 8333 . 8343) (nil tag-name "v-form" 8333 . 8343) (nil tag-type start 8333 . 8343) (nil font-lock-face web-mode-html-attr-value-face 8333 . 8343) (nil tag-attr t 8332 . 8333) (nil tag-name "v-form" 8332 . 8333) (nil tag-type start 8332 . 8333) (nil font-lock-face web-mode-html-attr-equal-face 8332 . 8333) (nil tag-attr t 8318 . 8332) (nil tag-name "v-form" 8318 . 8332) (nil tag-type start 8318 . 8332) (nil font-lock-face web-mode-html-attr-engine-face 8318 . 8332) (nil tag-attr-beg 2 8317 . 8318) (nil tag-attr t 8317 . 8318) (nil tag-name "v-form" 8317 . 8318) (nil tag-type start 8317 . 8318) (nil font-lock-face web-mode-html-attr-engine-face 8317 . 8318) (nil tag-name "v-form" 8316 . 8317) (nil tag-type start 8316 . 8317) (nil tag-attr t 8315 . 8316) (nil tag-attr-end 3 8315 . 8316) (nil tag-name "v-form" 8315 . 8316) (nil tag-type start 8315 . 8316) (nil font-lock-face web-mode-html-attr-value-face 8315 . 8316) (nil tag-attr t 8309 . 8315) (nil tag-name "v-form" 8309 . 8315) (nil tag-type start 8309 . 8315) (nil font-lock-face web-mode-html-attr-value-face 8309 . 8315) (nil tag-attr t 8308 . 8309) (nil tag-name "v-form" 8308 . 8309) (nil tag-type start 8308 . 8309) (nil font-lock-face web-mode-html-attr-equal-face 8308 . 8309) (nil tag-attr t 8306 . 8308) (nil tag-name "v-form" 8306 . 8308) (nil tag-type start 8306 . 8308) (nil font-lock-face web-mode-html-attr-name-face 8306 . 8308) (nil tag-attr-beg 0 8305 . 8306) (nil tag-attr t 8305 . 8306) (nil tag-name "v-form" 8305 . 8306) (nil tag-type start 8305 . 8306) (nil font-lock-face web-mode-html-attr-name-face 8305 . 8306) (nil tag-name "v-form" 8304 . 8305) (nil tag-type start 8304 . 8305) (nil tag-name "v-form" 8298 . 8304) (nil tag-type start 8298 . 8304) (nil font-lock-face web-mode-html-tag-custom-face 8298 . 8304) (nil tag-name "v-form" 8297 . 8298) (nil tag-type start 8297 . 8298) (nil tag-beg 19 8297 . 8298) (nil font-lock-face web-mode-html-tag-bracket-face 8297 . 8298) (8292 . 8345)) nil (25348 46790 100256 504000) 0 nil])
([nil nil ((8297 . 8299) 8345) nil (25348 46790 100240 27000) 0 nil])
([nil nil (("  " . -7897) (#("  " 0 2 (face whitespace-trailing)) . -7892) (undo-tree-id140 . -2) ("  " . -7876) ("  " . -7862) ("  " . -7832) ("  " . -7815) ("  " . -7764) ("  " . -7750) ("  " . -7727) ("  " . -7705) ("  " . -7691) ("  " . -7672) ("  " . -7650) ("  " . -7630) ("  " . -7614) ("  " . -7569) ("  " . -7498) ("  " . -7441) ("  " . -7419) ("  " . -7403) ("  " . -7385) ("  " . -7359) ("  " . -7333) ("  " . -7297) ("  " . -7268) ("  " . -7220) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -7194) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -7170) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -7096) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -7061) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -7023) ("  " . -6992) ("  " . -6961) ("  " . -6909) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6883) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6816) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6778) ("  " . -6747) ("  " . -6703) ("  " . -6664) ("  " . -6553) ("  " . -6517) ("  " . -6467) ("  " . -6414) ("  " . -6385) ("  " . -6355) ("  " . -6325) ("  " . -6296) ("  " . -6233) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6198) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6159) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6109) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6073) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -6044) ("  " . -6013) ("  " . -5967) ("  " . -5903) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -5883) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -5849) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -5785) ("  " . -5757) ("  " . -5736) ("  " . -5716) ("  " . -5690) ("  " . -5664) ("  " . -5628) (#("  " 0 2 (tag-name "v-btn" tag-type end)) . -5606) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5524) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5500) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5460) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5419) (#("  " 0 2 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5345) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5310) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5272) ("  " . -5241) (#("  " 0 2 (tag-name "v-btn" tag-type end)) . -5217) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5137) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5072) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -5032) ("  " . -5001) ("  " . -4957) ("  " . -4918) ("  " . -4883) ("  " . -4848) ("  " . -4816) ("  " . -4780) ("  " . -4744) ("  " . -4700) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4668) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4610) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4549) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -4515) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -4432) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4371) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4290) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4227) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4186) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4106) ("  " . -4060) ("  " . -4021) ("  " . -3971) ("  " . -3933) ("  " . -3897) ("  " . -3853) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3821) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3763) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3702) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -3668) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -3592) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3531) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3480) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3434) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3371) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3297) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3256) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3176) ("  " . -3130) ("  " . -3091) ("  " . -3041) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -3013) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -2937) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -2872) ("  " . -2838) ("  " . -2800) ("  " . -2764) ("  " . -2728) (#("  " 0 2 (block-side t)) . -2698) (#("  " 0 2 (block-side t)) . -2613) ("  " . -2540) ("  " . -2503) ("  " . -2474) ("  " . -2444) ("  " . -2414) ("  " . -2385) ("  " . -2324) ("  " . -2249) ("  " . -2203) ("  " . -2139) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -2119) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -2074) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -2038) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -2009) (#("  " 0 2 (tag-name "v-dialog" tag-type start)) . -1947) ("  " . -1919) ("  " . -1898) ("  " . -1878) ("  " . -1852) ("  " . -1794) ("  " . -1752) ("  " . -1731) ("  " . -1711) ("  " . -1685) ("  " . -1662) ("  " . -1632) ("  " . -1576) ("  " . -1488) ("  " . -1462) ("  " . -1389) ("  " . -1368) ("  " . -1348) ("  " . -1322) ("  " . -1269) ("  " . -1227) ("  " . -1206) ("  " . -1186) ("  " . -1160) ("  " . -1118) ("  " . -1076) ("  " . -1055) ("  " . -1035) ("  " . -1009) ("  " . -963) ("  " . -921) ("  " . -900) ("  " . -881) ("  " . -840) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -828) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -799) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -762) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -699) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -672) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -645) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -616) (#("  " 0 2 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . -603) (#("  " 0 2 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . -548) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -519) (#("  " 0 2 (tag-name "v-data-table" tag-type start)) . -488) ("  " . -464) ("  " . -442) ("  " . -420) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -397) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -376) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -354) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -308) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -272) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -245) ("  " . -221) ("  " . -191) ("  " . -146) ("  " . -123) ("  " . -79) 1) nil (25348 46790 100204 686000) 0 nil])
([nil nil (("
" . -7887) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (" " . -7888) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (" " . -7889) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (" " . -7890) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (" " . -7891) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 7892) nil (25348 46790 100148 614000) 0 nil])
([nil nil ((#("v-if=\"keyList\"" 0 1 (tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-engine-face) 1 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-engine-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (tag-attr t tag-attr-end 4 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 101) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (t 25348 46790 104919 969000)) nil (25348 46841 863953 30000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-card" tag-type start)) . -100) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 101) nil (25348 46841 863944 686000) 0 nil])
([nil nil ((#("v-else" 0 1 (tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-engine-face) 1 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-engine-face) 5 6 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-engine-face)) . 7698) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (t 25348 46841 869720 409000)) nil (25348 46866 747388 220000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-card" tag-type start)) . -7697) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 7698) nil (25348 46866 747383 83000) 0 nil])
([nil nil ((#("
    <v-card>
      <p>{{ keyLM }}</p>
    </v-card>" 5 6 (tag-name "v-card" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 6 12 (tag-name "v-card" tag-type start font-lock-face web-mode-html-tag-custom-face) 12 13 (tag-name "v-card" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 23 24 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 25 26 (block-side t) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t) 32 33 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 33 34 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 34 35 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 36 37 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 37 38 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "v-card" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "v-card" tag-type end font-lock-face web-mode-html-tag-bracket-face) 45 51 (tag-name "v-card" tag-type end font-lock-face web-mode-html-tag-custom-face) 51 52 (tag-name "v-card" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7685) (undo-tree-id149 . -52) (undo-tree-id150 . -1) (undo-tree-id151 . -12) (undo-tree-id152 . -52)) nil (25348 46866 747375 159000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 805) (undo-tree-id185 . -30) (undo-tree-id186 . -31) (768 . 805) (#("          :custom-sort=\"dateSorting\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 33 34 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 34 35 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 35 36 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 12 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (tag-name "v-data-table" tag-type start)) . 737) (774 . 805) 804 (t 25348 46866 750098 846000)) nil (25348 47007 684765 583000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 768) (undo-tree-id183 . -30) (undo-tree-id184 . -31) (705 . 768) (#("          v-bind:no-results-text=\"$t('General.noSearchMatch')\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-engine-face) 11 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-engine-face) 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 32 33 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 35 36 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 36 38 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 38 39 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 39 40 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 40 41 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 42 43 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 43 44 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 45 46 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 46 47 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 47 48 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 48 49 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 49 50 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 50 51 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 52 53 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 53 54 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 54 55 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 55 56 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 56 57 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 57 58 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 58 59 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 59 61 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 61 62 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 22 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 62 63 (tag-name "v-data-table" tag-type start)) . 674) (737 . 768) 767) nil (25348 47007 684759 581000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 705) (undo-tree-id181 . -30) (undo-tree-id182 . -31) (678 . 705) (#("          :search=\"search\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 25 26 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 7 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 26 27 (tag-name "v-data-table" tag-type start)) . 647) (674 . 705) 704) nil (25348 47007 684688 768000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 678) (undo-tree-id179 . -31) (651 . 678) (#("          :items=\"keyList\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 25 26 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 26 27 (tag-name "v-data-table" tag-type start)) . 620) (undo-tree-id180 . -26) (647 . 678) 677) nil (25348 47007 684683 931000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 651) (undo-tree-id178 . -31) (622 . 651) (#("          :headers=\"headers\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 27 28 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 28 29 (tag-name "v-data-table" tag-type start)) . 591) (620 . 651) 650) nil (25348 47007 684679 223000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 622) (undo-tree-id175 . -30) (undo-tree-id176 . -31) (undo-tree-id177 . -31) (607 . 622) (#("            }\"
" 0 13 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 13 14 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 13 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (tag-name "v-data-table" tag-type start)) . 576) (591 . 622) 621) nil (25348 47007 684675 429000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 17 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 607) (undo-tree-id173 . -30) (undo-tree-id174 . -31) (552 . 607) (#("            'items-per-page-options': [5, 10, 20, -1],
" 0 13 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 13 14 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 18 19 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 19 20 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 23 24 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 28 29 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 33 34 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 34 35 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 35 55 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . 521) (576 . 607) 606) nil (25348 47007 684669 586000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 10 11 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "v-data-table" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 16 17 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 13 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 29 (tag-name "v-data-table" tag-type start) 29 30 (tag-name "v-data-table" tag-type start) 30 31 (tag-name "v-data-table" tag-type start)) . 552) (undo-tree-id171 . -30) (undo-tree-id172 . -31) (525 . 552) (#("          :footer-props=\"{
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 25 27 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . 494) (521 . 552) 551) nil (25348 47007 684664 943000) 0 nil])
([nil nil ((#("          class=\"zebrastripes\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 17 29 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "v-data-table" tag-type start)) . 525) (undo-tree-id169 . -30) (undo-tree-id170 . -31) (494 . 525) (#("          :items-per-page=\"20\"
" 0 10 (tag-name "v-data-table" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 27 29 (block-side t tag-attr t tag-name "v-data-table" tag-type start) 29 30 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 15 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face) 30 31 (tag-name "v-data-table" tag-type start)) . 463) (494 . 525) 524) nil (25348 47007 684660 55000) 0 nil])
([nil nil ((804 . 815)) nil (25348 47007 684655 873000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-name "v-data-table" tag-type start)) . 826) (825 . 826) (#(" " 0 1 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . -825) (825 . 826) (#("\"" 0 1 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "v-data-table" tag-type start font-lock-face web-mode-block-delimiter-face)) . -825) (825 . 826) (815 . 826)) nil (25348 47007 684654 63000) 0 nil])
([nil nil ((825 . 831)) nil (25348 47007 684651 567000) 0 nil])
([nil nil ((831 . 839)) nil (25348 47007 684650 561000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-data-table" tag-type start)) . -838) (undo-tree-id168 . -1) 839) nil (25348 47007 684649 279000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -11583) (undo-tree-id164 . -1) (#("u" 0 1 (part-side javascript)) . -11584) (undo-tree-id165 . -1) (#("l" 0 1 (part-side javascript)) . -11585) (undo-tree-id166 . -1) (#("l" 0 1 (part-side javascript face web-mode-constant-face)) . -11586) (undo-tree-id167 . -1) 11587) nil (25348 47007 684645 686000) 0 nil])
([nil nil ((11583 . 11585) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -11583) (11583 . 11584)) nil (25348 47007 684638 876000) 0 nil])
([nil nil ((11711 . 11720)) nil (25348 47007 684637 280000) 0 nil])
([nil nil ((11720 . 11734)) nil (25348 47007 684636 261000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11733) (undo-tree-id163 . -1) 11734) nil (25348 47007 684635 11000) 0 nil])
([nil nil ((11733 . 11741)) nil (25348 47007 684632 654000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11740) (undo-tree-id162 . -1) 11741) nil (25348 47007 684631 497000) 0 nil])
([nil nil ((11740 . 11742)) nil (25348 47007 684628 998000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11741) (undo-tree-id161 . -1) 11742) nil (25348 47007 684627 733000) 0 nil])
([nil nil ((13812 . 13821)) nil (25348 47007 684625 277000) 0 nil])
([nil nil ((13821 . 13826)) nil (25348 47007 684624 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13838 . 13839) (nil part-side javascript 13826 . 13839) (13826 . 13839)) nil (25348 47007 684623 106000) 0 nil])
([nil nil ((13839 . 13847)) nil (25348 47007 684621 534000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -13846) (undo-tree-id160 . -1) 13847) nil (25348 47007 684620 176000) 0 nil])
([nil nil ((14353 . 14366)) nil (25348 47007 684617 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14378 . 14379) (nil part-side javascript 14366 . 14379) (14366 . 14379)) nil (25348 47007 684616 467000) 0 nil])
([nil nil ((14366 . 14371)) nil (25348 47007 684614 844000) 0 nil])
([nil nil ((14384 . 14388)) nil (25348 47007 684613 787000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -14387) (undo-tree-id159 . -1) 14388) nil (25348 47007 684612 506000) 0 nil])
([nil nil ((14387 . 14393)) nil (25348 47007 684609 862000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14392) (undo-tree-id158 . -1) 14393) nil (25348 47007 684608 490000) 0 nil])
([nil nil ((14555 . 14568)) nil (25348 47007 684605 369000) 0 nil])
([nil nil ((14568 . 14573)) nil (25348 47007 684603 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14585 . 14586) (nil part-side javascript 14573 . 14586) (14573 . 14586)) nil (25348 47007 684602 438000) 0 nil])
([nil nil ((14586 . 14595)) nil (25348 47007 684600 10000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14594) (undo-tree-id157 . -1) 14595) nil (25348 47007 684594 708000) 0 nil])
([nil nil ((#("
                      <v-container>" 23 24 (tag-name "v-container" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 24 35 (tag-name "v-container" tag-type start font-lock-face web-mode-html-tag-custom-face) 35 36 (tag-name "v-container" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2797) (undo-tree-id190 . -36) (undo-tree-id191 . -1) (undo-tree-id192 . -36) (t 25348 47007 692175 554000)) nil (25348 47096 67175 500000) 0 nil])
([nil nil ((#("
                      </v-container>" 23 24 (tag-name "v-container" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 24 25 (tag-name "v-container" tag-type end font-lock-face web-mode-html-tag-bracket-face) 25 36 (tag-name "v-container" tag-type end font-lock-face web-mode-html-tag-custom-face) 36 37 (tag-name "v-container" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4809) (undo-tree-id187 . -37) (undo-tree-id188 . -1) (undo-tree-id189 . -37)) nil (25348 47376 612244 135000) 0 nil])
([nil nil ((#(" ma-0 " 0 1 (tag-name "v-container" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 2 4 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-name "v-container" tag-type start)) . 26) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (t 25348 47096 77428 495000)) nil (25348 47414 746550 759000) 0 nil] [nil nil ((5996 . 6003) (t 25348 47096 77428 495000)) ((#("0000000" 0 7 (tag-name "v-btn" tag-type start)) . 5996)) (25348 47376 611142 128000) 0 nil])
([nil nil ((26 . 27)) nil (25348 47414 746532 67000) 0 nil])
nil
([nil nil ((#("b" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7839) (undo-tree-id196 . -1) 7840 (t 25348 47414 753722 734000)) nil (25348 47457 561500 180000) 0 nil])
([nil nil ((7839 . 7840)) nil (25348 47457 561496 421000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . 7841) (#("1" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . 7841)) nil (25348 47457 561494 758000) 0 nil])
([nil nil ((7841 . 7842)) nil (25348 47457 561492 783000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7841) (undo-tree-id195 . -1) 7842) nil (25348 47457 561489 764000) 0 nil])
([nil nil ((7841 . 7842)) nil (25348 47457 561473 744000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -7838) (undo-tree-id197 . -1) 7839 (t 25348 47457 570279 853000)) nil (25348 47561 956948 187000) 0 nil])
([nil nil ((7838 . 7839)) nil (25348 47561 956938 68000) 0 nil])
([nil nil ((7838 . 7847)) nil (25348 47561 956936 378000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-card" tag-type start)) . 7845) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7845)) nil (25348 47561 956933 747000) 0 nil])
([nil nil ((7849 . 7850)) nil (25348 47561 956925 808000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7845) (undo-tree-id198 . -1) 7846 (t 25348 47562 11624 428000)) nil (25348 47571 826128 599000) 0 nil])
([nil nil ((7845 . 7847)) nil (25348 47571 826116 579000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7847)) nil (25348 47571 826109 170000) 0 nil])
([nil nil ((#("6" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7848) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 7849 (t 25348 47571 835749 954000)) nil (25348 47578 650114 169000) 0 nil])
([nil nil ((7848 . 7850)) nil (25348 47578 650096 288000) 0 nil])
([nil nil ((#("layout" 0 6 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3023) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (t 25348 47578 659837 63000)) nil (25348 47688 640120 217000) 0 nil])
([nil nil ((3023 . 3026)) nil (25348 47688 640115 29000) 0 nil])
([nil nil ((#("d" 0 1 (tag-name "v-rowd" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("i" 0 1 (tag-name "v-rowid" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("u" 0 1 (tag-name "v-rowuid" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("l" 0 1 (tag-name "v-rowluid" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("f" 0 1 (tag-name "v-rowfluid" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#(" " 0 1 (tag-name "v-row" tag-type start)) . 3026) (#("p" 0 1 (tag-name "v-rowp" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("a" 0 1 (tag-name "v-rowap" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("r" 0 1 (tag-name "v-rowrap" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#("w" 0 1 (tag-name "v-rowwrap" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3026) (#(" " 0 1 (tag-name "v-row" tag-type start)) . 3026)) nil (25348 47688 640112 228000) 0 nil])
([nil nil ((#("flex" 0 4 (tag-name "v-flex" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3059) (undo-tree-id219 . -4) (undo-tree-id220 . -4)) nil (25348 47688 640107 988000) 0 nil])
([nil nil ((3059 . 3062)) nil (25348 47688 640102 117000) 0 nil])
([nil nil ((#("flex" 0 4 (tag-name "v-flex" tag-type end font-lock-face web-mode-html-tag-custom-face)) . 3865) (undo-tree-id217 . -4) (undo-tree-id218 . -4)) nil (25348 47688 640099 694000) 0 nil])
([nil nil ((3865 . 3868)) nil (25348 47688 640094 818000) 0 nil])
([nil nil ((#("l" 0 1 (tag-name "v-l" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3900) (undo-tree-id211 . -1) (#("a" 0 1 (tag-name "v-la" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3901) (undo-tree-id212 . -1) (#("y" 0 1 (tag-name "v-lay" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3902) (undo-tree-id213 . -1) (#("o" 0 1 (tag-name "v-layo" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3903) (undo-tree-id214 . -1) (#("u" 0 1 (tag-name "v-layou" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3904) (undo-tree-id215 . -1) (#("t" 0 1 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -3905) (undo-tree-id216 . -1) 3906) nil (25348 47688 640090 196000) 0 nil])
([nil nil ((3900 . 3903)) nil (25348 47688 640081 260000) 0 nil])
([nil nil ((#("layout wrap fluid" 0 6 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 6 7 (tag-name "v-layout" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 8 10 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-name "v-layout" tag-type start) 12 13 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 13 16 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face)) . 3934) (undo-tree-id209 . -17) (undo-tree-id210 . -17)) nil (25348 47688 640079 859000) 0 nil])
([nil nil ((3934 . 3937)) nil (25348 47688 640076 721000) 0 nil])
([nil nil ((#("x" 0 1 (tag-name "v-x" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3970) (#("e" 0 1 (tag-name "v-ex" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3970) (#("l" 0 1 (tag-name "v-lex" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3970) (#("f" 0 1 (tag-name "v-flex" tag-type start font-lock-face web-mode-html-tag-custom-face)) . 3970)) nil (25348 47688 640074 560000) 0 nil])
([nil nil ((3970 . 3973)) nil (25348 47688 640072 692000) 0 nil])
([nil nil ((#("flex" 0 4 (tag-name "v-flex" tag-type end font-lock-face web-mode-html-tag-custom-face)) . 4693) (undo-tree-id207 . -4) (undo-tree-id208 . -4)) nil (25348 47688 640071 366000) 0 nil])
([nil nil ((4693 . 4695)) nil (25348 47688 640067 984000) 0 nil])
([nil nil ((4695 . 4696)) nil (25348 47688 640066 696000) 0 nil])
([nil nil ((#("l" 0 1 (tag-name "v-l" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4728) (undo-tree-id201 . -1) (#("a" 0 1 (tag-name "v-la" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4729) (undo-tree-id202 . -1) (#("y" 0 1 (tag-name "v-lay" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4730) (undo-tree-id203 . -1) (#("o" 0 1 (tag-name "v-layo" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4731) (undo-tree-id204 . -1) (#("u" 0 1 (tag-name "v-layou" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4732) (undo-tree-id205 . -1) (#("t" 0 1 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -4733) (undo-tree-id206 . -1) 4734) nil (25348 47688 640063 395000) 0 nil])
([nil nil ((4728 . 4731)) nil (25348 47688 640047 161000) 0 nil])
([nil nil (("  " . -4679) ("  " . -4648) ("  " . -4615) ("  " . -4573) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4543) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4487) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4428) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -4396) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -4315) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4256) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4177) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4116) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -4077) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3999) ("  " . -3955) ("  " . -3919) ("  " . -3885) ("  " . -3852) ("  " . -3819) ("  " . -3777) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3747) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3691) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3632) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -3600) (#("  " 0 2 (block-side t tag-attr t tag-name "v-text-field" tag-type start)) . -3526) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3467) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3418) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3374) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3313) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3241) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3202) (#("  " 0 2 (tag-name "v-text-field" tag-type start)) . -3124) ("  " . -3080) ("  " . -3044) ("  " . -3010) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -2984) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -2910) (#("  " 0 2 (tag-name "v-form" tag-type start)) . -2847) ("  " . -2815) 1) nil (25348 47688 640032 736000) 0 nil])
([nil nil ((4656 . 4681) (t 25348 47688 645231 730000)) nil (25348 47904 257662 865000) 0 nil])
([nil nil ((4681 . 4687)) nil (25348 47904 257661 519000) 0 nil])
([nil nil ((#("o" 0 1 (tag-name "v-o" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -4684) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("r" 0 1 (tag-name "v-or" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -4685) (undo-tree-id248 . -1) (#("w" 0 1 (tag-name "v-orw" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -4686) (undo-tree-id249 . -1) 4687) nil (25348 47904 257659 597000) 0 nil])
([nil nil ((4684 . 4696)) nil (25348 47904 257653 363000) 0 nil])
([nil nil ((4689 . 4715) (4690 . 4714) (#("                          " 0 26 (face whitespace-trailing)) . 4689) (4689 . 4715) (4689 . 4690) ("                        " . 4689) (4688 . 4713)) nil (25348 47904 257651 446000) 0 nil])
([nil nil ((4715 . 4720)) nil (25348 47904 257648 808000) 0 nil])
([nil nil (("v" . -4715) (undo-tree-id237 . -1) (undo-tree-id238 . -1) ("-" . -4716) (undo-tree-id239 . -1) (undo-tree-id240 . -1) ("c" . -4717) (undo-tree-id241 . -1) (undo-tree-id242 . -1) ("o" . -4718) (undo-tree-id243 . -1) (undo-tree-id244 . -1) ("l" . -4719) (undo-tree-id245 . -1) 4720) nil (25348 47904 257646 251000) 0 nil])
([nil nil ((4715 . 4730)) nil (25348 47904 257633 375000) 0 nil])
([nil nil ((4723 . 4751) (4724 . 4750) (#("                            " 0 28 (face whitespace-trailing)) . 4723) (4723 . 4751) (4723 . 4724) ("                          " . 4723) (4722 . 4749)) nil (25348 47904 257631 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4904 . 4905) (nil rear-nonsticky t 4904 . 4905) (nil tag-name "v-checkbox" 4904 . 4905) (nil tag-type end 4904 . 4905) (nil tag-end t 4904 . 4905) (nil font-lock-face web-mode-html-tag-bracket-face 4904 . 4905) (nil tag-name "v-checkbox" 4894 . 4904) (nil tag-type end 4894 . 4904) (nil font-lock-face web-mode-html-tag-custom-face 4894 . 4904) (nil tag-name "v-checkbox" 4893 . 4894) (nil tag-type end 4893 . 4894) (nil font-lock-face web-mode-html-tag-bracket-face 4893 . 4894) (nil tag-name "v-checkbox" 4892 . 4893) (nil tag-type end 4892 . 4893) (nil tag-beg 22 4892 . 4893) (nil font-lock-face web-mode-html-tag-bracket-face 4892 . 4893) (nil tag-name "v-checkbox" 4891 . 4892) (nil tag-type start 4891 . 4892) (nil tag-end t 4891 . 4892) (nil font-lock-face web-mode-html-tag-bracket-face 4891 . 4892) (nil tag-name "v-checkbox" 4876 . 4891) (nil tag-type start 4876 . 4891) (nil tag-attr t 4875 . 4876) (nil tag-attr-end 5 4875 . 4876) (nil tag-name "v-checkbox" 4875 . 4876) (nil tag-type start 4875 . 4876) (nil font-lock-face web-mode-html-attr-value-face 4875 . 4876) (nil tag-attr t 4874 . 4875) (nil tag-name "v-checkbox" 4874 . 4875) (nil tag-type start 4874 . 4875) (nil font-lock-face web-mode-html-attr-value-face 4874 . 4875) (nil tag-attr t 4873 . 4874) (nil tag-name "v-checkbox" 4873 . 4874) (nil tag-type start 4873 . 4874) (nil font-lock-face web-mode-html-attr-value-face 4873 . 4874) (nil tag-attr t 4872 . 4873) (nil tag-name "v-checkbox" 4872 . 4873) (nil tag-type start 4872 . 4873) (nil font-lock-face web-mode-html-attr-value-face 4872 . 4873) (nil tag-attr t 4871 . 4872) (nil tag-name "v-checkbox" 4871 . 4872) (nil tag-type start 4871 . 4872) (nil font-lock-face web-mode-html-attr-value-face 4871 . 4872) (nil tag-attr t 4870 . 4871) (nil tag-name "v-checkbox" 4870 . 4871) (nil tag-type start 4870 . 4871) (nil font-lock-face web-mode-html-attr-value-face 4870 . 4871) (nil tag-attr t 4869 . 4870) (nil tag-name "v-checkbox" 4869 . 4870) (nil tag-type start 4869 . 4870) (nil font-lock-face web-mode-html-attr-value-face 4869 . 4870) (nil tag-attr t 4868 . 4869) (nil tag-name "v-checkbox" 4868 . 4869) (nil tag-type start 4868 . 4869) (nil font-lock-face web-mode-html-attr-value-face 4868 . 4869) (nil tag-attr t 4867 . 4868) (nil tag-name "v-checkbox" 4867 . 4868) (nil tag-type start 4867 . 4868) (nil font-lock-face web-mode-html-attr-value-face 4867 . 4868) (nil tag-attr t 4866 . 4867) (nil tag-name "v-checkbox" 4866 . 4867) (nil tag-type start 4866 . 4867) (nil font-lock-face web-mode-html-attr-value-face 4866 . 4867) (nil tag-attr t 4865 . 4866) (nil tag-name "v-checkbox" 4865 . 4866) (nil tag-type start 4865 . 4866) (nil font-lock-face web-mode-html-attr-value-face 4865 . 4866) (nil tag-attr t 4864 . 4865) (nil tag-name "v-checkbox" 4864 . 4865) (nil tag-type start 4864 . 4865) (nil font-lock-face web-mode-html-attr-value-face 4864 . 4865) (nil tag-attr t 4863 . 4864) (nil tag-name "v-checkbox" 4863 . 4864) (nil tag-type start 4863 . 4864) (nil font-lock-face web-mode-html-attr-value-face 4863 . 4864) (nil tag-attr t 4862 . 4863) (nil tag-name "v-checkbox" 4862 . 4863) (nil tag-type start 4862 . 4863) (nil font-lock-face web-mode-html-attr-value-face 4862 . 4863) (nil tag-attr t 4861 . 4862) (nil tag-name "v-checkbox" 4861 . 4862) (nil tag-type start 4861 . 4862) (nil font-lock-face web-mode-html-attr-value-face 4861 . 4862) (nil tag-attr t 4860 . 4861) (nil tag-name "v-checkbox" 4860 . 4861) (nil tag-type start 4860 . 4861) (nil font-lock-face web-mode-html-attr-value-face 4860 . 4861) (nil tag-attr t 4859 . 4860) (nil tag-name "v-checkbox" 4859 . 4860) (nil tag-type start 4859 . 4860) (nil font-lock-face web-mode-html-attr-value-face 4859 . 4860) (nil tag-attr t 4858 . 4859) (nil tag-name "v-checkbox" 4858 . 4859) (nil tag-type start 4858 . 4859) (nil font-lock-face web-mode-html-attr-value-face 4858 . 4859) (nil tag-attr t 4857 . 4858) (nil tag-name "v-checkbox" 4857 . 4858) (nil tag-type start 4857 . 4858) (nil font-lock-face web-mode-html-attr-value-face 4857 . 4858) (nil tag-attr t 4856 . 4857) (nil tag-name "v-checkbox" 4856 . 4857) (nil tag-type start 4856 . 4857) (nil font-lock-face web-mode-html-attr-value-face 4856 . 4857) (nil tag-attr t 4855 . 4856) (nil tag-name "v-checkbox" 4855 . 4856) (nil tag-type start 4855 . 4856) (nil font-lock-face web-mode-html-attr-value-face 4855 . 4856) (nil tag-attr t 4854 . 4855) (nil tag-name "v-checkbox" 4854 . 4855) (nil tag-type start 4854 . 4855) (nil font-lock-face web-mode-html-attr-value-face 4854 . 4855) (nil tag-attr t 4853 . 4854) (nil tag-name "v-checkbox" 4853 . 4854) (nil tag-type start 4853 . 4854) (nil font-lock-face web-mode-html-attr-equal-face 4853 . 4854) (nil tag-attr t 4852 . 4853) (nil tag-name "v-checkbox" 4852 . 4853) (nil tag-type start 4852 . 4853) (nil font-lock-face web-mode-html-attr-name-face 4852 . 4853) (nil tag-attr t 4851 . 4852) (nil tag-name "v-checkbox" 4851 . 4852) (nil tag-type start 4851 . 4852) (nil font-lock-face web-mode-html-attr-name-face 4851 . 4852) (nil tag-attr t 4850 . 4851) (nil tag-name "v-checkbox" 4850 . 4851) (nil tag-type start 4850 . 4851) (nil font-lock-face web-mode-html-attr-name-face 4850 . 4851) (nil tag-attr t 4849 . 4850) (nil tag-name "v-checkbox" 4849 . 4850) (nil tag-type start 4849 . 4850) (nil font-lock-face web-mode-html-attr-name-face 4849 . 4850) (nil tag-attr-beg 0 4848 . 4849) (nil tag-attr t 4848 . 4849) (nil tag-name "v-checkbox" 4848 . 4849) (nil tag-type start 4848 . 4849) (nil font-lock-face web-mode-html-attr-name-face 4848 . 4849) (nil tag-name "v-checkbox" 4831 . 4848) (nil tag-type start 4831 . 4848) (nil tag-attr t 4830 . 4831) (nil tag-attr-end 7 4830 . 4831) (nil tag-name "v-checkbox" 4830 . 4831) (nil tag-type start 4830 . 4831) (nil font-lock-face web-mode-html-attr-value-face 4830 . 4831) (nil tag-attr t 4817 . 4830) (nil tag-name "v-checkbox" 4817 . 4830) (nil tag-type start 4817 . 4830) (nil font-lock-face web-mode-html-attr-value-face 4817 . 4830) (nil tag-attr t 4816 . 4817) (nil tag-name "v-checkbox" 4816 . 4817) (nil tag-type start 4816 . 4817) (nil font-lock-face web-mode-html-attr-equal-face 4816 . 4817) (nil tag-attr t 4810 . 4816) (nil tag-name "v-checkbox" 4810 . 4816) (nil tag-type start 4810 . 4816) (nil font-lock-face web-mode-html-attr-engine-face 4810 . 4816) (nil tag-attr-beg 2 4809 . 4810) (nil tag-attr t 4809 . 4810) (nil tag-name "v-checkbox" 4809 . 4810) (nil tag-type start 4809 . 4810) (nil font-lock-face web-mode-html-attr-engine-face 4809 . 4810) (nil tag-name "v-checkbox" 4792 . 4809) (nil tag-type start 4792 . 4809) (nil tag-attr t 4791 . 4792) (nil tag-attr-end 5 4791 . 4792) (nil tag-name "v-checkbox" 4791 . 4792) (nil tag-type start 4791 . 4792) (nil font-lock-face web-mode-html-attr-value-face 4791 . 4792) (nil tag-attr t 4785 . 4791) (nil tag-name "v-checkbox" 4785 . 4791) (nil tag-type start 4785 . 4791) (nil font-lock-face web-mode-html-attr-value-face 4785 . 4791) (nil tag-attr t 4784 . 4785) (nil tag-name "v-checkbox" 4784 . 4785) (nil tag-type start 4784 . 4785) (nil font-lock-face web-mode-html-attr-equal-face 4784 . 4785) (nil tag-attr t 4783 . 4784) (nil tag-name "v-checkbox" 4783 . 4784) (nil tag-type start 4783 . 4784) (nil font-lock-face web-mode-html-attr-name-face 4783 . 4784) (nil tag-attr t 4782 . 4783) (nil tag-name "v-checkbox" 4782 . 4783) (nil tag-type start 4782 . 4783) (nil font-lock-face web-mode-html-attr-name-face 4782 . 4783) (nil tag-attr t 4781 . 4782) (nil tag-name "v-checkbox" 4781 . 4782) (nil tag-type start 4781 . 4782) (nil font-lock-face web-mode-html-attr-name-face 4781 . 4782) (nil tag-attr t 4780 . 4781) (nil tag-name "v-checkbox" 4780 . 4781) (nil tag-type start 4780 . 4781) (nil font-lock-face web-mode-html-attr-name-face 4780 . 4781) (nil tag-attr-beg 0 4779 . 4780) (nil tag-attr t 4779 . 4780) (nil tag-name "v-checkbox" 4779 . 4780) (nil tag-type start 4779 . 4780) (nil font-lock-face web-mode-html-attr-name-face 4779 . 4780) (nil tag-name "v-checkbox" 4763 . 4779) (nil tag-type start 4763 . 4779) (nil tag-name "v-checkbox" 4762 . 4763) (nil tag-type start 4762 . 4763) (nil tag-name "v-checkbox" 4752 . 4762) (nil tag-type start 4752 . 4762) (nil font-lock-face web-mode-html-tag-custom-face 4752 . 4762) (nil tag-name "v-checkbox" 4751 . 4752) (nil tag-type start 4751 . 4752) (nil tag-beg 19 4751 . 4752) (nil font-lock-face web-mode-html-tag-bracket-face 4751 . 4752) (4751 . 4905)) nil (25348 47904 257616 126000) 0 nil])
([nil nil ((4919 . 4947) (#("              " 0 14 (tag-name "v-checkbox" tag-type start)) . 4919) (4860 . 4890) (#("                " 0 16 (tag-name "v-checkbox" tag-type start)) . 4860) (4807 . 4837) (#("                " 0 16 (tag-name "v-checkbox" tag-type start)) . 4807) (4763 . 4793) (#("                " 0 16 (tag-name "v-checkbox" tag-type start)) . 4763) 4723) nil (25348 47904 257561 383000) 0 nil])
([nil nil ((#("check_status" 0 12 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4846) (undo-tree-id235 . -12) (undo-tree-id236 . -12)) nil (25348 47904 257557 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4882 . 4883) (nil tag-attr t 4846 . 4883) (nil tag-name "v-checkbox" 4846 . 4883) (nil tag-type start 4846 . 4883) (nil font-lock-face web-mode-html-attr-value-face 4846 . 4883) (4846 . 4883)) nil (25348 47904 257554 426000) 0 nil])
([nil nil ((12009 . 12018)) nil (25348 47904 257552 96000) 0 nil])
([nil nil ((12018 . 12034)) nil (25348 47904 257550 981000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -12033) (undo-tree-id234 . -1) 12034) nil (25348 47904 257549 635000) 0 nil])
([nil nil ((12035 . 12037) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -12035) (12033 . 12036)) nil (25348 47904 257546 852000) 0 nil])
([nil nil ((12037 . 12038)) nil (25348 47904 257545 199000) 0 nil])
([nil nil ((12817 . 12828)) nil (25348 47904 257544 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12889 . 12890) (nil part-side javascript 12889 . 12890) (nil face (rainbow-delimiters-depth-5-face) 12889 . 12890) (nil part-side javascript 12888 . 12889) (nil face (rainbow-delimiters-depth-6-face) 12888 . 12889) (nil part-side javascript 12887 . 12888) (nil part-token string 12887 . 12888) (nil syntax-table (15) 12887 . 12888) (nil font-lock-face web-mode-javascript-string-face 12887 . 12888) (nil part-side javascript 12869 . 12887) (nil part-token string 12869 . 12887) (nil font-lock-face web-mode-javascript-string-face 12869 . 12887) (nil part-side javascript 12868 . 12869) (nil part-token string 12868 . 12869) (nil syntax-table (15) 12868 . 12869) (nil font-lock-face web-mode-javascript-string-face 12868 . 12869) (nil part-side javascript 12867 . 12868) (nil face (rainbow-delimiters-depth-6-face) 12867 . 12868) (nil part-side javascript 12842 . 12867) (nil part-side javascript 12838 . 12842) (nil face web-mode-constant-face 12838 . 12842) (nil part-side javascript 12837 . 12838) (nil face (rainbow-delimiters-depth-5-face) 12837 . 12838) (nil part-side javascript 12832 . 12837) (nil part-side javascript 12828 . 12832) (nil face web-mode-constant-face 12828 . 12832) (12828 . 12890)) nil (25348 47904 257541 382000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . 12853) (#("s" 0 1 (part-side javascript)) . 12853) (#("e" 0 1 (part-side javascript)) . 12853) (#("D" 0 1 (part-side javascript)) . 12853)) nil (25348 47904 257533 840000) 0 nil])
([nil nil ((12853 . 12858)) nil (25348 47904 257532 114000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -12853) (undo-tree-id233 . -1) 12854) nil (25348 47904 257530 661000) 0 nil])
([nil nil ((12853 . 12854)) nil (25348 47904 257527 709000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("c" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("D" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("n" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870) (#("S" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12870)) nil (25348 47904 257523 395000) 0 nil])
([nil nil ((12870 . 12873)) nil (25348 47904 257518 118000) 0 nil])
([nil nil ((12873 . 12874)) nil (25348 47904 257516 955000) 0 nil])
([nil nil ((#("E" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -12871) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("m" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -12872) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -12873) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 12874) nil (25348 47904 257514 724000) 0 nil])
([nil nil ((12871 . 12875)) nil (25348 47904 257506 31000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -12874) (undo-tree-id226 . -1) 12875) nil (25348 47904 257504 428000) 0 nil])
([nil nil ((12864 . 12866)) nil (25348 47904 257501 785000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -12865) (undo-tree-id225 . -1) 12866) nil (25348 47904 257500 18000) 0 nil])
([nil nil ((#("sensorEditDesc" 0 14 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4846) (undo-tree-id223 . -14) (undo-tree-id224 . -14)) nil (25348 47904 257495 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4860 . 4861) (nil tag-attr t 4846 . 4861) (nil tag-name "v-checkbox" 4846 . 4861) (nil tag-type start 4846 . 4861) (nil font-lock-face web-mode-html-attr-value-face 4846 . 4861) (4846 . 4861)) nil (25348 47904 257478 556000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4803) (#("1" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4803) (t 25348 47904 267925 22000)) nil (25348 47975 923376 417000) 0 nil])
([nil nil ((4803 . 4804)) nil (25348 47975 923373 749000) 0 nil])
([nil nil ((4800 . 4810)) nil (25348 47975 923366 835000) 0 nil])
([nil nil ((9516 . 9526) (t 25348 47975 932810 921000)) nil (25348 47999 572369 785000) 0 nil])
([nil nil ((15648 . 15657) (t 25348 47999 581102 432000)) nil (25348 48067 551602 81000) 0 nil])
([nil nil ((15657 . 15678)) nil (25348 48067 551600 669000) 0 nil])
([nil nil ((15678 . 15681)) nil (25348 48067 551599 614000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -15680) (undo-tree-id269 . -1) 15681) nil (25348 48067 551598 223000) 0 nil])
([nil nil ((15680 . 15691)) nil (25348 48067 551595 676000) 0 nil])
([nil nil ((#("h" 0 1 (part-side javascript)) . -15687) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("e" 0 1 (part-side javascript)) . -15688) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("c" 0 1 (part-side javascript)) . -15689) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("k" 0 1 (part-side javascript)) . -15690) (undo-tree-id268 . -1) 15691) nil (25348 48067 551592 813000) 0 nil])
([nil nil ((#("C" 0 1 (part-side javascript)) . -15686) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 15687) nil (25348 48067 551525 273000) 0 nil])
([nil nil ((15696 . 15698) (15695 . 15697) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -15695) (15686 . 15696)) nil (25348 48067 551520 953000) 0 nil])
([nil nil ((15789 . 15795)) nil (25348 48067 551518 932000) 0 nil])
([nil nil ((15795 . 15801)) nil (25348 48067 551517 592000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -15800) (undo-tree-id259 . -1) 15801) nil (25348 48067 551515 637000) 0 nil])
([nil nil ((#("editCheck" 0 9 (part-side javascript)) . 15791) (undo-tree-id256 . -9) (undo-tree-id257 . -8) (undo-tree-id258 . -9)) nil (25348 48067 551512 75000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -15789) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#(" " 0 1 (part-side javascript)) . -15790) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 15791) nil (25348 48067 551505 754000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15795 . 15796) (nil part-side javascript 15787 . 15796) (15787 . 15796)) nil (25348 48067 551487 947000) 0 nil])
([nil nil ((15796 . 15798)) nil (25348 48067 551479 686000) 0 nil])
([nil nil ((#("Regular Sensor Check" 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 9595) (undo-tree-id283 . -20) (undo-tree-id284 . -20) (t 25348 48067 561938 392000)) nil (25348 48456 218382 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9613 . 9614) (nil tag-name "v-checkbox" 9613 . 9614) (nil tag-type start 9613 . 9614) (nil tag-name "v-checkbox" 9612 . 9613) (nil tag-type start 9612 . 9613) (nil tag-name "v-checkbox" 9611 . 9612) (nil tag-type start 9611 . 9612) (nil tag-name "v-checkbox" 9610 . 9611) (nil tag-type start 9610 . 9611) (nil tag-name "v-checkbox" 9609 . 9610) (nil tag-type start 9609 . 9610) (nil tag-name "v-checkbox" 9608 . 9609) (nil tag-type start 9608 . 9609) (nil tag-name "v-checkbox" 9607 . 9608) (nil tag-type start 9607 . 9608) (nil tag-name "v-checkbox" 9606 . 9607) (nil tag-type start 9606 . 9607) (nil tag-name "v-checkbox" 9605 . 9606) (nil tag-type start 9605 . 9606) (nil tag-name "v-checkbox" 9604 . 9605) (nil tag-type start 9604 . 9605) (nil tag-name "v-checkbox" 9603 . 9604) (nil tag-type start 9603 . 9604) (nil tag-name "v-checkbox" 9602 . 9603) (nil tag-type start 9602 . 9603) (nil tag-name "v-checkbox" 9601 . 9602) (nil tag-type start 9601 . 9602) (nil tag-name "v-checkbox" 9600 . 9601) (nil tag-type start 9600 . 9601) (nil tag-name "v-checkbox" 9599 . 9600) (nil tag-type start 9599 . 9600) (nil tag-attr t 9598 . 9599) (nil tag-attr-end 5 9598 . 9599) (nil tag-name "v-checkbox" 9598 . 9599) (nil tag-type start 9598 . 9599) (nil font-lock-face web-mode-html-attr-value-face 9598 . 9599) (nil tag-attr t 9597 . 9598) (nil tag-name "v-checkbox" 9597 . 9598) (nil tag-type start 9597 . 9598) (nil font-lock-face web-mode-html-attr-value-face 9597 . 9598) (nil tag-attr t 9596 . 9597) (nil tag-name "v-checkbox" 9596 . 9597) (nil tag-type start 9596 . 9597) (nil font-lock-face web-mode-html-attr-value-face 9596 . 9597) (nil tag-attr t 9595 . 9596) (nil tag-name "v-checkbox" 9595 . 9596) (nil tag-type start 9595 . 9596) (nil font-lock-face web-mode-html-attr-value-face 9595 . 9596) (9595 . 9614)) nil (25348 48456 218376 117000) 0 nil])
([nil nil ((9588 . 9590)) nil (25348 48456 218364 86000) 0 nil])
([nil nil ((#("_" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-name-face)) . -9588) (undo-tree-id282 . -1) 9589) nil (25348 48456 218362 757000) 0 nil])
([nil nil ((#("\"" 0 1 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-checkbox" tag-type start font-lock-face web-mode-block-delimiter-face)) . 9599)) nil (25348 48456 218360 271000) 0 nil])
([nil nil ((9599 . 9600)) nil (25348 48456 218359 264000) 0 nil])
([nil nil ((#("\"" 0 1 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-checkbox" tag-type start font-lock-face web-mode-block-delimiter-face)) . 9613)) nil (25348 48456 218358 81000) 0 nil])
([nil nil ((9613 . 9614)) nil (25348 48456 218357 28000) 0 nil])
([nil nil ((#("General" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 1 2 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 2 3 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 3 4 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 5 6 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face) 6 7 (block-side t tag-attr t tag-name "v-checkbox" tag-type start face web-mode-variable-name-face)) . 9600) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7)) nil (25348 48456 218355 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9608 . 9609) (nil block-side t 9600 . 9609) (nil tag-attr t 9600 . 9609) (nil tag-name "v-checkbox" 9600 . 9609) (nil tag-type start 9600 . 9609) (9600 . 9609)) nil (25348 48456 218350 846000) 0 nil])
([nil nil ((#("lear" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 1 2 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 2 3 (block-side t tag-attr t tag-name "v-checkbox" tag-type start) 3 4 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . 9611) (undo-tree-id277 . -4) (undo-tree-id278 . -4)) nil (25348 48456 218348 301000) 0 nil])
([nil nil ((#("c" 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9610) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 9611) nil (25348 48456 218344 799000) 0 nil])
([nil nil ((9610 . 9622)) nil (25348 48456 218341 113000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-checkbox" tag-type start)) . -9621) (undo-tree-id274 . -1) 9622) nil (25348 48456 218339 650000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4958 . 4959) (nil rear-nonsticky t 4958 . 4959) (nil tag-attr t 4958 . 4959) (nil tag-name "v-checkbox" 4958 . 4959) (nil tag-type start 4958 . 4959) (nil font-lock-face web-mode-html-attr-value-face 4958 . 4959) (nil tag-attr t 4957 . 4958) (nil tag-name "v-checkbox" 4957 . 4958) (nil tag-type start 4957 . 4958) (nil font-lock-face web-mode-html-attr-value-face 4957 . 4958) (nil tag-attr t 4945 . 4957) (nil tag-name "v-checkbox" 4945 . 4957) (nil tag-type start 4945 . 4957) (nil font-lock-face web-mode-html-attr-value-face 4945 . 4957) (nil rear-nonsticky t 4944 . 4945) (nil tag-attr t 4944 . 4945) (nil tag-name "v-checkbox" 4944 . 4945) (nil tag-type start 4944 . 4945) (nil font-lock-face web-mode-html-attr-value-face 4944 . 4945) (nil tag-attr t 4936 . 4944) (nil tag-name "v-checkbox" 4936 . 4944) (nil tag-type start 4936 . 4944) (nil font-lock-face web-mode-html-attr-value-face 4936 . 4944) (nil tag-attr t 4934 . 4936) (nil tag-name "v-checkbox" 4934 . 4936) (nil tag-type start 4934 . 4936) (nil font-lock-face web-mode-html-attr-value-face 4934 . 4936) (nil tag-attr t 4933 . 4934) (nil tag-name "v-checkbox" 4933 . 4934) (nil tag-type start 4933 . 4934) (nil font-lock-face web-mode-html-attr-value-face 4933 . 4934) (nil tag-attr t 4932 . 4933) (nil tag-name "v-checkbox" 4932 . 4933) (nil tag-type start 4932 . 4933) (nil font-lock-face web-mode-html-attr-value-face 4932 . 4933) (4932 . 4959)) nil (25348 48456 218334 946000) 0 nil])
([nil nil ((4959 . 4960)) nil (25348 48456 218325 739000) 0 nil])
([nil nil ((#("Regular Sensor Check" 0 20 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4960) (undo-tree-id272 . -20) (undo-tree-id273 . -20)) nil (25348 48456 218324 29000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-checkbox" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4959) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 4960) nil (25348 48456 218318 422000) 0 nil])
([nil nil ((4925 . 4926)) nil (25348 48456 218298 545000) 0 nil])
([nil nil ((14510 . 14525) (t 25348 48456 230674 548000)) nil (25348 49771 307700 637000) 0 nil])
([nil nil ((14538 . 14544) (nil part-token string 14538 . 14539) (nil font-lock-face web-mode-javascript-string-face 14538 . 14539) (nil part-side javascript 14538 . 14539) (14537 . 14539) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -14537) (14537 . 14538) (14536 . 14538) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -14536) (14525 . 14537)) nil (25348 49771 307698 55000) 0 nil])
([nil nil ((14545 . 14560)) nil (25348 49771 307693 925000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14559) (undo-tree-id285 . -1) 14560) nil (25348 49771 307688 785000) 0 nil])
([nil nil ((14560 . 14575) (t 25348 49771 323320 650000)) nil (25348 49928 751780 234000) 0 nil])
([nil nil ((14575 . 14578)) nil (25348 49928 751778 965000) 0 nil])
([nil nil ((#("#" 0 1 (part-side javascript)) . -14575) (undo-tree-id300 . -1) (#("#" 0 1 (part-side javascript)) . -14576) (undo-tree-id301 . -1) (#(" " 0 1 (part-side javascript)) . -14577) (undo-tree-id302 . -1) 14578) nil (25348 49928 751776 78000) 0 nil])
([nil nil ((14575 . 14596)) nil (25348 49928 751767 339000) 0 nil])
([nil nil ((14596 . 14601)) nil (25348 49928 751766 361000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -14597) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -14598) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -14599) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -14600) (undo-tree-id299 . -1) 14601) nil (25348 49928 751764 50000) 0 nil])
([nil nil ((14597 . 14603)) nil (25348 49928 751753 932000) 0 nil])
([nil nil ((14603 . 14624)) nil (25348 49928 751752 869000) 0 nil])
([nil nil ((14624 . 14629)) nil (25348 49928 751751 760000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -14628) (undo-tree-id292 . -1) 14629) nil (25348 49928 751750 433000) 0 nil])
([nil nil ((14628 . 14643)) nil (25348 49928 751747 871000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14703 . 14704) (nil part-side javascript 14703 . 14704) (nil face (rainbow-delimiters-depth-7-face) 14703 . 14704) (nil part-side javascript 14702 . 14703) (nil face (rainbow-delimiters-depth-8-face) 14702 . 14703) (nil part-side javascript 14701 . 14702) (nil face (rainbow-delimiters-depth-9-face) 14701 . 14702) (nil part-side javascript 14700 . 14701) (nil face web-mode-variable-name-face 14700 . 14701) (nil part-side javascript 14697 . 14700) (nil part-side javascript 14692 . 14697) (nil face web-mode-variable-name-face 14692 . 14697) (nil part-side javascript 14688 . 14692) (nil part-side javascript 14680 . 14688) (nil face web-mode-variable-name-face 14680 . 14688) (nil part-side javascript 14678 . 14680) (nil part-side javascript 14677 . 14678) (nil face web-mode-variable-name-face 14677 . 14678) (nil part-side javascript 14674 . 14677) (nil part-side javascript 14673 . 14674) (nil face (rainbow-delimiters-depth-9-face) 14673 . 14674) (nil part-side javascript 14672 . 14673) (nil face (rainbow-delimiters-depth-8-face) 14672 . 14673) (nil part-side javascript 14668 . 14672) (nil part-side javascript 14667 . 14668) (nil face web-mode-function-name-face 14667 . 14668) (nil part-side javascript 14666 . 14667) (nil face (rainbow-delimiters-depth-7-face) 14666 . 14667) (nil part-side javascript 14663 . 14666) (nil face web-mode-function-call-face 14663 . 14666) (nil part-side javascript 14656 . 14663) (nil part-side javascript 14649 . 14656) (nil face web-mode-variable-name-face 14649 . 14656) (nil part-side javascript 14648 . 14649) (nil part-side javascript 14643 . 14648) (nil face web-mode-keyword-face 14643 . 14648) (14643 . 14704)) nil (25348 49928 751744 512000) 0 nil])
([nil nil ((#("const newArr1" 0 5 (part-side javascript face web-mode-keyword-face) 5 6 (part-side javascript) 6 13 (part-side javascript face web-mode-variable-name-face)) . 14643) (undo-tree-id290 . -13) (undo-tree-id291 . -13)) nil (25348 49928 751734 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14654 . 14655) (nil part-side javascript 14647 . 14655) (nil part-side javascript 14643 . 14647) (nil face web-mode-constant-face 14643 . 14647) (14643 . 14655)) nil (25348 49928 751730 840000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -14658) (undo-tree-id287 . -1) (#("r" 0 1 (part-side javascript)) . -14659) (undo-tree-id288 . -1) (#("r" 0 1 (part-side javascript)) . -14660) (undo-tree-id289 . -1) 14661) nil (25348 49928 751727 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14669 . 14670) (nil part-side javascript 14662 . 14670) (nil part-side javascript 14658 . 14662) (nil face web-mode-constant-face 14658 . 14662) (14658 . 14670)) nil (25348 49928 751721 580000) 0 nil])
([nil nil ((#("A" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("s" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("i" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688)) nil (25348 49928 751719 92000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("v" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("i" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688) (#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14688)) nil (25348 49928 751716 702000) 0 nil])
([nil nil ((14688 . 14701)) nil (25348 49928 751714 511000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14700) (undo-tree-id286 . -1) 14701) nil (25348 49928 751712 514000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#(" " 0 1 (part-side javascript)) . 14702) (#(">" 0 1 (part-side javascript)) . 14702) (#(" " 0 1 (part-side javascript)) . 14702) (#("e" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#("u" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#("l" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#("a" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#("v" 0 1 (part-side javascript face web-mode-variable-name-face)) . 14702) (#("." 0 1 (part-side javascript)) . 14702) (#("v" 0 1 (part-side javascript)) . 14702)) nil (25348 49928 754137 212000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14719 . 14720) (nil part-side javascript 14719 . 14720) (nil face (rainbow-delimiters-depth-1-face) 14719 . 14720) (nil part-side javascript 14715 . 14719) (nil part-side javascript 14714 . 14715) (nil face (rainbow-delimiters-depth-1-face) 14714 . 14715) (nil part-side javascript 14702 . 14714) (nil face web-mode-function-call-face 14702 . 14714) (14702 . 14720)) nil (25348 49970 465310 830000) 0 nil] [nil nil ((nil rear-nonsticky nil 14713 . 14714) (nil part-side javascript 14707 . 14714) (nil face web-mode-variable-name-face 14707 . 14714) (nil part-side javascript 14706 . 14707) (nil part-side javascript 14702 . 14706) (nil face web-mode-constant-face 14702 . 14706) (14702 . 14714)) ((#("this.keyList" 0 4 (part-side javascript face web-mode-constant-face) 4 5 (part-side javascript) 5 11 (part-side javascript face web-mode-variable-name-face) 11 12 (rear-nonsticky nil part-side javascript face web-mode-variable-name-face)) . 14702) (undo-tree-id303 . -12) (nil rear-nonsticky t 14713 . 14714)) (25348 49928 751689 672000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -14715) (undo-tree-id305 . -1) (#("t" 0 1 (part-side javascript)) . -14716) (undo-tree-id306 . -1) (#("e" 0 1 (part-side javascript)) . -14717) (undo-tree-id307 . -1) (#("m" 0 1 (part-side javascript)) . -14718) (undo-tree-id308 . -1) 14719) nil (25348 49970 465306 865000) 0 nil])
nil
([nil nil ((14715 . 14716)) nil (25348 49970 465299 713000) 0 nil])
([nil nil ((14718 . 14719) (14717 . 14719) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-1-face))) . -14717) (14717 . 14718)) nil (25348 49970 465298 429000) 0 nil])
([nil nil ((12433 . 12435) (12432 . 12434) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -12432) (12432 . 12433)) nil (25348 49970 465296 319000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 12435)) nil (25348 49970 465294 303000) 0 nil])
([nil nil ((12435 . 12436)) nil (25348 49970 465293 240000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -12433) (undo-tree-id304 . -1) 12434) nil (25348 49970 465291 691000) 0 nil])
([nil nil ((12433 . 12434)) nil (25348 49970 465283 97000) 0 nil])
([nil nil ((12442 . 12443)) nil (25348 49970 465282 89000) 0 nil])
([nil nil ((12522 . 12523)) nil (25348 49970 465281 21000) 0 nil])
([nil nil ((12513 . 12515) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -12513) (12513 . 12514)) nil (25348 49970 465279 704000) 0 nil])
([nil nil ((12514 . 12516)) nil (25348 49970 465278 24000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 12516)) nil (25348 49970 465276 929000) 0 nil])
([nil nil ((12570 . 12573) (12569 . 12571) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -12569) (12569 . 12570)) nil (25348 49970 465275 154000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 12573)) nil (25348 49970 465272 564000) 0 nil])
([nil nil ((12580 . 12581)) nil (25348 49970 465270 372000) 0 nil])
([nil nil ((12516 . 12517)) nil (25348 49970 465263 208000) 0 nil])
([nil nil ((1567 . 1568) (1566 . 1568) (#("[" 0 1 (block-side t tag-attr t tag-name "v-avatar" tag-type start)) . -1566) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (1566 . 1567) (t 25348 49970 473937 424000)) nil (25348 49980 123975 568000) 0 nil])
([nil nil ((14741 . 14756) (t 25348 49980 133883 205000)) nil (25348 50035 171320 572000) 0 nil])
([nil nil ((14768 . 14777) (14767 . 14769) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -14767) (14756 . 14768)) nil (25348 50035 171318 673000) 0 nil])
([nil nil ((14777 . 14781)) nil (25348 50035 171316 599000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14780) (undo-tree-id313 . -1) 14781) nil (25348 50035 171315 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14775 . 14776) (nil part-side javascript 14775 . 14776) (nil part-token string 14775 . 14776) (nil syntax-table (15) 14775 . 14776) (nil font-lock-face web-mode-javascript-string-face 14775 . 14776) (nil part-side javascript 14769 . 14775) (nil part-token string 14769 . 14775) (nil font-lock-face web-mode-javascript-string-face 14769 . 14775) (nil part-side javascript 14768 . 14769) (nil part-token string 14768 . 14769) (nil syntax-table (15) 14768 . 14769) (nil font-lock-face web-mode-javascript-string-face 14768 . 14769) (14768 . 14776)) nil (25348 50035 171311 136000) 0 nil])
([nil nil ((14776 . 14778)) nil (25348 50035 171306 554000) 0 nil])
([nil nil ((14775 . 14777)) nil (25348 50035 171305 11000) 0 nil])
([nil nil ((#("2" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -14775) (undo-tree-id311 . -1) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -14776) (undo-tree-id312 . -1) 14777) nil (25348 50035 171301 310000) 0 nil])
([nil nil ((14775 . 14777)) nil (25348 50035 171281 658000) 0 nil])
([nil nil ((14720 . 14725) (t 25348 50035 181593 295000)) nil (25348 50047 360422 567000) 0 nil])
([nil nil ((#("Sensor" 0 6 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11180) (undo-tree-id315 . -6) (undo-tree-id316 . -6) (t 25348 50047 369533 279000)) nil (25348 50069 182106 157000) 0 nil])
([nil nil ((11180 . 11189)) nil (25348 50069 182101 696000) 0 nil])
([nil nil ((#("d" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -11188) (undo-tree-id314 . -1) 11189) nil (25348 50069 182099 866000) 0 nil])
([nil nil ((11188 . 11192)) nil (25348 50069 182088 588000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#("u" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#("a" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#("S" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 11192)) nil (25348 50069 182080 130000) 0 nil])
([nil nil ((#("
              console.log(\"kelist\", this.keyList)" 0 1 (part-side javascript) 1 23 (part-side javascript) 23 26 (part-side javascript face web-mode-function-call-face) 26 27 (part-side javascript face (rainbow-delimiters-depth-7-face)) 27 28 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 28 34 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 35 37 (part-side javascript) 37 41 (part-side javascript face web-mode-constant-face) 41 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 14527) (undo-tree-id324 . -50) (undo-tree-id325 . -35) (undo-tree-id326 . -1) (undo-tree-id327 . -50) (t 25348 50069 189429 394000)) nil (25348 50135 81398 746000) 0 nil])
([nil nil ((#("
              console.log(\"kelist 2\", this.keyList)" 0 1 (part-side javascript) 1 23 (part-side javascript) 23 26 (part-side javascript face web-mode-function-call-face) 26 27 (part-side javascript face (rainbow-delimiters-depth-7-face)) 27 28 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 28 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (rear-nonsticky t part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 39 (part-side javascript) 39 43 (part-side javascript face web-mode-constant-face) 43 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 14695) (undo-tree-id320 . -52) (undo-tree-id321 . -27) (undo-tree-id322 . -1) (undo-tree-id323 . -52)) nil (25348 50135 81391 553000) 0 nil])
([nil nil ((#("
            console.log(this.keyList)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 24 (part-side javascript face web-mode-function-call-face) 24 25 (part-side javascript face (rainbow-delimiters-depth-6-face)) 25 29 (part-side javascript face web-mode-constant-face) 29 30 (part-side javascript) 30 37 (part-side javascript) 37 38 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 14838) (undo-tree-id317 . -38) (undo-tree-id318 . -1) (undo-tree-id319 . -38)) nil (25348 50135 81381 33000) 0 nil])
([nil current ((12387 . 12388) (t 25348 50135 89141 673000)) nil (25348 53744 279663 494000) 0 nil])
nil
