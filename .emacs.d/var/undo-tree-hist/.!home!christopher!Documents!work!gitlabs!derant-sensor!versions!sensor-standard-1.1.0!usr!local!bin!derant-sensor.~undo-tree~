(undo-tree-save-format-version . 1)
"66fdd898edd375da54ff8e7755b3bcb45cfc5833"
[nil nil nil nil (25599 26756 70856 659000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 590) (undo-tree-id6 . -1) (t 25599 25761 272637 965000)) nil (25599 26756 70854 891000) 0 nil])
([nil nil ((#(" grep -v \"url=\" |" 0 9 (fontified t) 9 15 (fontified t face font-lock-string-face) 15 17 (fontified t)) . 241) (undo-tree-id3 . -17) (undo-tree-id4 . -17) (undo-tree-id5 . -17)) nil (25599 26756 70852 326000) 0 nil])
([nil nil ((226 . 231)) nil (25599 26756 70847 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 295 . 296) (nil fontified nil 295 . 296) (nil fontified nil 291 . 295) (nil fontified nil 287 . 291) (nil fontified nil 283 . 287) (nil fontified nil 270 . 283) (nil fontified nil 260 . 270) (nil fontified nil 249 . 260) (nil fontified nil 248 . 249) (nil fontified nil 242 . 248) (nil fontified nil 241 . 242) (nil fontified nil 237 . 241) (nil fontified nil 236 . 237) (nil fontified nil 234 . 236) (nil fontified nil 231 . 234) (231 . 296)) nil (25599 26756 70845 807000) 0 nil])
([nil nil ((#("conffile" 0 8 (fontified t face font-lock-string-face)) . 251) (undo-tree-id0 . -8) (undo-tree-id1 . -8) (undo-tree-id2 . -8)) nil (25599 26756 70839 908000) 0 nil])
([nil nil ((251 . 252)) nil (25599 26756 70817 107000) 0 nil])
([nil nil ((374 . 379) (t 25599 26756 78385 740000)) nil (25599 26977 652317 170000) 0 nil])
([nil nil ((379 . 384)) nil (25599 26977 652314 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 415 . 416) (nil fontified nil 384 . 416) (384 . 416)) nil (25599 26977 652302 315000) 0 nil])
([nil nil ((13 . 14) (t 25599 26977 657416 976000)) nil (25601 51154 240810 965000) 0 nil])
([nil nil ((14 . 21)) nil (25601 51154 240805 631000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -20) (undo-tree-id19 . -1) 21) nil (25601 51154 240802 560000) 0 nil])
([nil nil ((20 . 28)) nil (25601 51154 240794 121000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -14) (undo-tree-id5 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15) (undo-tree-id6 . -1) (#("T" 0 1 (face font-lock-comment-face fontified t)) . -16) (undo-tree-id7 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -17) (undo-tree-id8 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -18) (undo-tree-id9 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -19) (undo-tree-id10 . -1) (#(" " 0 1 (face font-lock-comment-face fontified defer)) . -20) (undo-tree-id11 . -1) (#("s" 0 1 (face font-lock-comment-face fontified defer)) . -21) (undo-tree-id12 . -1) (#("t" 0 1 (face font-lock-comment-face fontified defer)) . -22) (undo-tree-id13 . -1) (#("a" 0 1 (face font-lock-comment-face fontified defer)) . -23) (undo-tree-id14 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -24) (undo-tree-id15 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -25) (undo-tree-id16 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -26) (undo-tree-id17 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -27) (undo-tree-id18 . -1) 28) nil (25601 51154 240771 817000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -12) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("
" 0 1 (fontified t)) . -13) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 14) nil (25601 51154 240690 691000) 0 nil])
([nil nil ((13 . 15) (t 25601 51154 249948 393000)) nil (25601 51191 983599 171000) 0 nil])
([nil nil ((14 . 35)) nil (25601 51191 983593 997000) 0 nil])
([nil nil ((35 . 39)) nil (25601 51191 983590 708000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -38) (undo-tree-id27 . -1) 39) nil (25601 51191 983585 303000) 0 nil])
([nil nil ((38 . 50)) nil (25601 51191 983576 906000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -49) (undo-tree-id26 . -1) 50) nil (25601 51191 983571 361000) 0 nil])
([nil nil ((49 . 54)) nil (25601 51191 983561 158000) 0 nil])
([nil nil ((54 . 64)) nil (25601 51191 983555 212000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -63) (undo-tree-id25 . -1) 64) nil (25601 51191 983547 491000) 0 nil])
([nil nil ((63 . 74)) nil (25601 51191 983535 467000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -70) (undo-tree-id21 . -1) (#("a" 0 1 (face font-lock-comment-face fontified nil)) . -71) (undo-tree-id22 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -72) (undo-tree-id23 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -73) (undo-tree-id24 . -1) 74) nil (25601 51191 983521 851000) 0 nil])
([nil nil ((70 . 91)) nil (25601 51191 983493 916000) 0 nil])
([nil nil ((91 . 100)) nil (25601 51191 983488 163000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -99) (undo-tree-id20 . -1) 100) nil (25601 51191 983470 128000) 0 nil])
([nil nil ((99 . 100) (t 25601 51191 997879 891000)) nil (25601 51231 785529 364000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -99) (undo-tree-id32 . -1) 100) nil (25601 51231 785524 899000) 0 nil])
([nil nil ((110 . 120) (109 . 111) (#("(" 0 1 (face font-lock-comment-face fontified nil)) . -109) (99 . 110)) nil (25601 51231 785518 606000) 0 nil])
([nil nil ((120 . 128)) nil (25601 51231 785514 107000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -124) (undo-tree-id28 . -1) (#("n" 0 1 (face font-lock-comment-face fontified defer)) . -125) (undo-tree-id29 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -126) (undo-tree-id30 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -127) (undo-tree-id31 . -1) 128) nil (25601 51231 785507 71000) 0 nil])
([nil nil ((124 . 128)) nil (25601 51231 785469 734000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -429) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -430) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -431) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face)) . -432) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("m" 0 1 (fontified defer face font-lock-string-face)) . -433) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#(" " 0 1 (fontified defer face font-lock-string-face)) . -434) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("\"" 0 1 (fontified defer face font-lock-string-face)) . -435) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("a" 0 1 (fontified defer face font-lock-string-face)) . -436) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("p" 0 1 (fontified defer face font-lock-string-face)) . -437) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("i" 0 1 (fontified defer face font-lock-string-face)) . -438) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("k" 0 1 (fontified defer face font-lock-string-face)) . -439) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -440) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -441) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("=" 0 1 (fontified t face font-lock-string-face)) . -442) (undo-tree-id54 . -1) 443 (t 25601 51231 789808 856000)) nil (25608 19489 135817 114000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . 429)) nil (25608 19510 11899 937000) 0 nil] [nil nil ((#("' > \"$testconf\"
    # TODO: use URL from config
    echo \"${url//datastream/checkapikey}\"
    curl -f -K \"$testconf\" \"${url//datastream/checkapikey}\"
    if [ $? -ne 0 ]; then
        echo \"API-key failed.\"
    else
        echo \"API-key successful.\"
    fi
    rm \"$testconf\"
}

# Script to configure or reconfigure the Derant Angle Sensor
setup () {
    # Read existing config
    if [ -f \"$conffile\" ]; then
        apikey=$(grep \"apikey=\" \"$conffile\" | sed -e 's/[^=]*=//' -e 's/\"$//')
        url=$(grep \"url=\" \"$conffile\" | sed -e 's/[^=]*=\"//' -e 's/\"$//')
    fi
    if [ -z \"$url\" ]; then
        url=\"https://angle.derant.com/datastream\"
    fi

    # Prompt for new values (old as default)
    echo
    echo \"Please provide an URL for th" 0 1 (fontified t face font-lock-string-face) 1 4 (fontified t face font-lock-string-face) 4 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 20 (fontified t) 20 22 (fontified t face font-lock-comment-delimiter-face) 22 48 (fontified t face font-lock-comment-face) 48 52 (fontified t) 52 56 (fontified t face font-lock-builtin-face) 56 57 (fontified t) 57 58 (fontified t face font-lock-string-face) 58 89 (fontified t face font-lock-string-face) 89 90 (fontified t) 90 105 (fontified t) 105 116 (fontified t face font-lock-string-face) 116 117 (fontified t) 117 149 (fontified t face font-lock-string-face) 149 154 (fontified t) 154 156 (fontified t face font-lock-keyword-face) 156 157 (fontified t) 157 158 (fontified t face (rainbow-delimiters-depth-2-face)) 158 160 (fontified t) 160 161 (fontified t face font-lock-variable-name-face syntax-table (3)) 161 168 (fontified t) 168 169 (fontified t face (rainbow-delimiters-depth-2-face)) 169 171 (fontified t) 171 175 (fontified t face font-lock-keyword-face) 175 184 (fontified t) 184 188 (fontified t face font-lock-builtin-face) 188 189 (fontified t) 189 206 (fontified t face font-lock-string-face) 206 211 (fontified t) 211 215 (fontified t face font-lock-keyword-face) 215 224 (fontified t) 224 228 (fontified t face font-lock-builtin-face) 228 229 (fontified t) 229 250 (fontified t face font-lock-string-face) 250 255 (fontified t) 255 257 (fontified t face font-lock-keyword-face) 257 265 (fontified t) 265 276 (fontified t face font-lock-string-face) 276 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-1-face)) 278 280 (fontified t) 280 282 (fontified t face font-lock-comment-delimiter-face) 282 341 (fontified t face font-lock-comment-face) 341 346 (fontified t face font-lock-function-name-face) 346 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-1-face)) 348 349 (fontified t face (rainbow-delimiters-depth-1-face)) 349 350 (fontified t) 350 351 (fontified t face (rainbow-delimiters-depth-1-face)) 351 356 (fontified t) 356 358 (fontified t face font-lock-comment-delimiter-face) 358 379 (fontified t face font-lock-comment-face) 379 383 (fontified t) 383 385 (fontified t face font-lock-keyword-face) 385 386 (fontified t) 386 387 (fontified t face (rainbow-delimiters-depth-2-face)) 387 391 (fontified t) 391 402 (fontified t face font-lock-string-face) 402 403 (fontified t) 403 404 (fontified t face (rainbow-delimiters-depth-2-face)) 404 406 (fontified t) 406 410 (fontified t face font-lock-keyword-face) 410 419 (fontified t) 419 425 (fontified t face font-lock-variable-name-face) 425 427 (fontified t) 427 428 (fontified t face (rainbow-delimiters-depth-2-face)) 428 432 (fontified t face sh-quoted-exec) 432 433 (fontified t) 433 442 (fontified t face font-lock-string-face) 442 443 (fontified t) 443 454 (fontified t face font-lock-string-face) 454 464 (fontified t) 464 476 (fontified t face font-lock-string-face) 476 480 (fontified t) 480 488 (fontified t face font-lock-string-face) 488 489 (fontified t face (rainbow-delimiters-depth-2-face)) 489 498 (fontified t) 498 501 (fontified t face font-lock-variable-name-face) 501 503 (fontified t) 503 504 (fontified t face (rainbow-delimiters-depth-2-face)) 504 508 (fontified t face sh-quoted-exec) 508 509 (fontified t) 509 510 (fontified t face font-lock-string-face) 510 514 (fontified t face font-lock-string-face) 514 515 (fontified t face font-lock-string-face) 515 516 (fontified t) 516 517 (fontified t face font-lock-string-face) 517 526 (fontified t face font-lock-string-face) 526 527 (fontified t face font-lock-string-face) 527 537 (fontified t) 537 546 (fontified t face font-lock-string-face) 546 547 (fontified t face font-lock-string-face) 547 550 (fontified t face font-lock-string-face) 550 554 (fontified t) 554 557 (fontified t face font-lock-string-face) 557 558 (fontified t face font-lock-string-face) 558 562 (fontified t face font-lock-string-face) 562 563 (fontified t face (rainbow-delimiters-depth-2-face)) 563 564 (fontified t) 564 568 (fontified t) 568 570 (fontified t face font-lock-keyword-face) 570 575 (fontified t) 575 577 (fontified t face font-lock-keyword-face) 577 578 (fontified t) 578 579 (fontified t face (rainbow-delimiters-depth-2-face)) 579 583 (fontified t) 583 589 (fontified t face font-lock-string-face) 589 590 (fontified t) 590 591 (fontified t face (rainbow-delimiters-depth-2-face)) 591 593 (fontified t) 593 597 (fontified t face font-lock-keyword-face) 597 598 (fontified t) 598 606 (fontified t) 606 609 (fontified t face font-lock-variable-name-face) 609 610 (fontified t) 610 647 (fontified t face font-lock-string-face) 647 652 (fontified t) 652 654 (fontified t face font-lock-keyword-face) 654 660 (fontified t) 660 662 (fontified t face font-lock-comment-delimiter-face) 662 701 (fontified t face font-lock-comment-face) 701 705 (fontified t) 705 709 (fontified t face font-lock-builtin-face) 709 714 (fontified t) 714 718 (fontified t face font-lock-builtin-face) 718 719 (fontified t) 719 748 (fontified t face font-lock-string-face)) . 429) (undo-tree-id0 . -748) (undo-tree-id1 . -748) (undo-tree-id2 . -378) (undo-tree-id3 . -195) (undo-tree-id4 . -195) (undo-tree-id5 . -16) (undo-tree-id6 . -195)) ((429 . 1177)) (25608 19489 135444 280000) 0 nil])
([nil nil ((430 . 434) (429 . 431) (#("\"" 0 1 (fontified nil)) . -429) (429 . 430)) nil (25608 19510 11898 158000) 0 nil])
nil
([nil nil ((#("
    # TODO: use URL from config
    echo \"${url//datastream/checkapikey}\"" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 33 (fontified t face font-lock-comment-face) 33 37 (fontified t) 37 41 (fontified t face font-lock-builtin-face) 41 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 74 (fontified t face font-lock-string-face)) . 449) (undo-tree-id55 . -74) (undo-tree-id56 . -1) (undo-tree-id57 . -74) (undo-tree-id58 . -74)) nil (25608 19510 11993 679000) 0 nil])
([nil nil ((2296 . 2301) (t 25608 19512 749319 448000)) nil (25608 19787 875702 528000) 0 nil] [nil nil ((493 . 494)) ((#("
" 0 1 (fontified t face font-lock-string-face)) . 493) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1)) (25608 19510 11873 832000) 0 nil])
([nil nil ((2302 . 2310) (2301 . 2303) (#("\"" 0 1 (fontified nil)) . -2301) (2301 . 2302)) nil (25608 19787 875700 971000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2309) (undo-tree-id111 . -1) 2310) nil (25608 19787 875698 800000) 0 nil])
([nil nil ((2310 . 2311)) nil (25608 19787 875696 422000) 0 nil])
([nil nil ((2311 . 2320)) nil (25608 19787 875695 391000) 0 nil])
([nil nil ((2320 . 2334)) nil (25608 19787 875694 283000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t syntax-multiline t)) . -2320) (undo-tree-id97 . -1) (#("e" 0 1 (fontified t syntax-multiline t)) . -2321) (undo-tree-id98 . -1) (#("t" 0 1 (fontified t syntax-multiline t)) . -2322) (undo-tree-id99 . -1) (#("c" 0 1 (fontified defer syntax-multiline t)) . -2323) (undo-tree-id100 . -1) (#("h" 0 1 (fontified defer syntax-multiline t)) . -2324) (undo-tree-id101 . -1) (#(" " 0 1 (fontified defer syntax-multiline t)) . -2325) (undo-tree-id102 . -1) (#("z" 0 1 (fontified defer syntax-multiline t)) . -2326) (undo-tree-id103 . -1) (#("e" 0 1 (fontified defer syntax-multiline t)) . -2327) (undo-tree-id104 . -1) (#("e" 0 1 (fontified defer syntax-multiline t)) . -2328) (undo-tree-id105 . -1) (#("k" 0 1 (fontified defer syntax-multiline t)) . -2329) (undo-tree-id106 . -1) (#("c" 0 1 (fontified defer syntax-multiline t)) . -2330) (undo-tree-id107 . -1) (#("t" 0 1 (fontified defer syntax-multiline t)) . -2331) (undo-tree-id108 . -1) (#("l" 0 1 (fontified t syntax-multiline t)) . -2332) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t syntax-multiline t)) . -2333) (undo-tree-id110 . -1) 2334) nil (25608 19787 875689 60000) 0 nil])
([nil nil ((2320 . 2341)) nil (25608 19787 875667 438000) 0 nil])
([nil nil ((#("æ" 0 1 (fontified t syntax-multiline t)) . -2340) (undo-tree-id96 . -1) 2341) nil (25608 19787 875666 214000) 0 nil])
([nil nil ((2340 . 2342)) nil (25608 19787 875664 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t)) . -2341) (undo-tree-id95 . -1) 2342) nil (25608 19787 875662 846000) 0 nil])
([nil nil ((2320 . 2325)) nil (25608 19787 875660 355000) 0 nil])
([nil nil ((2346 . 2355)) nil (25608 19787 875659 405000) 0 nil])
([nil nil ((2355 . 2357)) nil (25608 19787 875658 302000) 0 nil])
([nil nil ((2357 . 2362)) nil (25608 19787 875657 286000) 0 nil])
([nil nil ((2363 . 2366) (2362 . 2364) (#("\"" 0 1 (fontified nil)) . -2362) (2362 . 2363)) nil (25608 19787 875655 760000) 0 nil])
([nil nil ((2367 . 2372)) nil (25608 19787 875653 267000) 0 nil])
([nil nil ((2367 . 2368)) nil (25608 19787 875649 756000) 0 nil])
([nil nil ((2369 . 2377) (#("    " 0 4 (fontified t syntax-multiline t)) . 2369) (undo-tree-id94 . -4) 2373) nil (25608 19787 875645 432000) 0 nil])
([nil nil ((2377 . 2398)) nil (25608 19787 875640 806000) 0 nil])
([nil nil ((2398 . 2399)) nil (25608 19787 875639 121000) 0 nil])
([nil nil ((2399 . 2408)) nil (25608 19787 875637 559000) 0 nil])
([nil nil ((2408 . 2410)) nil (25608 19787 875635 918000) 0 nil])
([nil nil ((172 . 173)) nil (25608 19787 875633 125000) 0 nil])
([nil nil ((173 . 174)) nil (25608 19787 875631 448000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -173) (undo-tree-id93 . -1) 174) nil (25608 19787 875629 497000) 0 nil])
([nil nil ((173 . 184)) nil (25608 19787 875622 801000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -181) (undo-tree-id90 . -1) (#("=" 0 1 (fontified t)) . -182) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t)) . -183) (undo-tree-id92 . -1) 184) nil (25608 19787 875617 476000) 0 nil])
([nil nil ((181 . 187)) nil (25608 19787 875609 129000) 0 nil])
([nil nil ((187 . 193)) nil (25608 19787 875606 395000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -187) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t)) . -188) (undo-tree-id85 . -1) (#("r" 0 1 (fontified t)) . -189) (undo-tree-id86 . -1) (#("a" 0 1 (fontified t)) . -190) (undo-tree-id87 . -1) (#("n" 0 1 (fontified t)) . -191) (undo-tree-id88 . -1) (#("t" 0 1 (fontified t)) . -192) (undo-tree-id89 . -1) 193) nil (25608 19787 875598 530000) 0 nil])
([nil nil ((187 . 189)) nil (25608 19787 875588 293000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -187) (undo-tree-id82 . -1) (#("z" 0 1 (fontified t)) . -188) (undo-tree-id83 . -1) 189) nil (25608 19787 875586 650000) 0 nil])
([nil nil ((187 . 195)) nil (25608 19787 875583 101000) 0 nil])
([nil nil ((195 . 197)) nil (25608 19787 875581 948000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -196) (undo-tree-id81 . -1) 197) nil (25608 19787 875580 494000) 0 nil])
([nil nil ((177 . 180)) nil (25608 19787 875578 136000) 0 nil])
([nil nil ((199 . 206)) nil (25608 19787 875576 977000) 0 nil])
([nil nil ((206 . 207)) nil (25608 19787 875575 955000) 0 nil])
([nil nil ((207 . 211)) nil (25608 19787 875574 864000) 0 nil])
([nil nil ((#("e" 0 1 (fontified defer)) . -208) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("e" 0 1 (fontified t)) . -209) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("k" 0 1 (fontified t)) . -210) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 211) nil (25608 19787 875572 532000) 0 nil])
([nil nil ((208 . 216)) nil (25608 19787 875564 240000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -214) (undo-tree-id73 . -1) (#("=" 0 1 (fontified t)) . -215) (undo-tree-id74 . -1) 216) nil (25608 19787 875562 630000) 0 nil])
([nil nil ((214 . 215)) nil (25608 19787 875558 774000) 0 nil])
([nil nil ((nil rear-nonsticky nil 235 . 236) (nil fontified nil 215 . 236) (215 . 236)) nil (25608 19787 875557 702000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -230) (undo-tree-id67 . -1) (#("e" 0 1 (fontified t)) . -231) (undo-tree-id68 . -1) (#("k" 0 1 (fontified t)) . -232) (undo-tree-id69 . -1) (#("c" 0 1 (fontified t)) . -233) (undo-tree-id70 . -1) (#("t" 0 1 (fontified t)) . -234) (undo-tree-id71 . -1) (#("l" 0 1 (fontified t rear-nonsticky t)) . -235) (undo-tree-id72 . -1) 236) nil (25608 19787 875554 72000) 0 nil])
([nil nil ((230 . 232)) nil (25608 19787 875544 392000) 0 nil])
([nil nil ((2407 . 2408) (#("\"" 0 1 (fontified nil)) . 2386) (2385 . 2386) (2385 . 2386)) nil (25608 19787 875543 142000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2396 . 2397) (nil fontified nil 2386 . 2397) (2386 . 2397)) nil (25608 19787 875541 424000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . 2397) (undo-tree-id66 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("c" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("k" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("e" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("e" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("z" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("/" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("b" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("i" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("/" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("k" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("z" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("/" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("p" 0 1 (fontified defer face font-lock-string-face)) . 2397) (#("o" 0 1 (fontified t face font-lock-string-face)) . 2397) (#("/" 0 1 (fontified t face font-lock-string-face)) . 2397)) nil (25608 19787 875535 405000) 0 nil])
([nil nil ((2386 . 2387)) nil (25608 19787 875528 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2448 . 2449) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2437 . 2447) (nil fontified nil 2435 . 2437) (2435 . 2449)) nil (25608 19787 875527 26000) 0 nil])
([nil nil ((2449 . 2450)) nil (25608 19787 875524 816000) 0 nil])
([nil nil ((#("zeekctlPath" 0 10 (fontified t face font-lock-string-face) 10 11 (rear-nonsticky t fontified t face font-lock-string-face)) . 2437) (undo-tree-id64 . -11) (undo-tree-id65 . -11)) nil (25608 19787 875523 183000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2443 . 2444) (nil fontified nil 2437 . 2444) (2437 . 2444)) nil (25608 19787 875518 722000) 0 nil])
([nil nil ((#(" /opt/zeek/lib/zkg" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 18 (fontified t)) . 2445) (undo-tree-id62 . -18) (undo-tree-id63 . -18)) nil (25608 19787 875512 726000) 0 nil])
([nil nil ((2309 . 2318) (t 25608 19787 893407 887000)) nil (25608 20732 532025 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2327 . 2328) (nil fontified nil 2318 . 2328) (2318 . 2328)) nil (25608 20732 532016 139000) 0 nil])
([nil nil ((699 . 701) (t 25608 20732 543123 755000)) nil (25608 20785 61936 149000) 0 nil])
([nil nil ((707 . 709) (#("(" 0 1 (fontified nil)) . -707) (700 . 708)) nil (25608 20785 61934 10000) 0 nil])
([nil nil ((710 . 712) (#("{" 0 1 (fontified nil)) . -710) (709 . 711)) nil (25608 20785 61927 919000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 712) (712 . 716) (711 . 713)) nil (25608 20785 61921 338000) 0 nil])
([nil nil ((712 . 716)) nil (25608 20785 61918 387000) 0 nil])
([nil nil ((722 . 723) (721 . 723) (#("\"" 0 1 (fontified nil)) . -721) (716 . 722)) nil (25608 20785 61916 827000) 0 nil])
([nil nil ((723 . 728)) nil (25608 20785 61915 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -727) (undo-tree-id116 . -1) 728) nil (25608 20785 61913 896000) 0 nil])
([nil nil ((#("echo \"This is a status\"" 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 23 (fontified t face font-lock-string-face)) . 2294) (undo-tree-id114 . -23) (undo-tree-id115 . -23)) nil (25608 20785 61911 243000) 0 nil])
([nil nil ((2294 . 2301)) nil (25608 20785 61907 230000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2300) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 2301) nil (25608 20785 61904 942000) 0 nil])
([nil nil ((2285 . 2294)) nil (25608 20785 61894 205000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2303 . 2304) (nil fontified nil 2294 . 2304) (2294 . 2304)) nil (25608 20785 61886 391000) 0 nil])
([nil nil ((2409 . 2414) (t 25608 20785 71068 457000)) nil (25608 21307 688883 987000) 0 nil])
([nil nil ((2415 . 2423) (2414 . 2416) (#("\"" 0 1 (fontified nil)) . -2414) (2414 . 2415)) nil (25608 21307 688882 605000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2415) (undo-tree-id153 . -1) (#("e" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2416) (undo-tree-id154 . -1) (#("s" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2417) (undo-tree-id155 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2418) (undo-tree-id156 . -1) (#("a" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2419) (undo-tree-id157 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2420) (undo-tree-id158 . -1) (#("t" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2421) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2422) (undo-tree-id160 . -1) 2423) nil (25608 21307 688879 147000) 0 nil])
([nil nil ((2415 . 2426)) nil (25608 21307 688868 830000) 0 nil])
([nil nil ((2427 . 2428)) nil (25608 21307 688867 942000) 0 nil])
([nil nil ((2428 . 2437)) nil (25608 21307 688867 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2455 . 2456) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2444 . 2454) (nil fontified nil 2442 . 2444) (nil fontified nil 2437 . 2442) (2437 . 2456)) nil (25608 21307 688865 874000) 0 nil])
([nil nil ((2456 . 2463)) nil (25608 21307 688863 781000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t)) . -2462) (undo-tree-id152 . -1) 2463) nil (25608 21307 688862 612000) 0 nil])
([nil nil ((2462 . 2464)) nil (25608 21307 688860 610000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t)) . -2463) (undo-tree-id151 . -1) 2464) nil (25608 21307 688859 355000) 0 nil])
([nil nil ((2463 . 2472)) nil (25608 21307 688856 845000) 0 nil])
([nil nil ((2472 . 2474)) nil (25608 21307 688855 609000) 0 nil])
([nil nil ((#("echo \"stuff\"" 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face)) . 716) (undo-tree-id149 . -12) (undo-tree-id150 . -12)) nil (25608 21307 688854 409000) 0 nil])
([nil nil ((nil rear-nonsticky nil 741 . 742) (nil fontified nil 740 . 742) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 723 . 733) (nil fontified nil 721 . 723) (nil fontified nil 716 . 721) (716 . 742)) nil (25608 21307 688850 611000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -736) (undo-tree-id143 . -1) (#("e" 0 1 (fontified defer)) . -737) (undo-tree-id144 . -1) (#("p" 0 1 (fontified t)) . -738) (undo-tree-id145 . -1) (#("l" 0 1 (fontified t)) . -739) (undo-tree-id146 . -1) (#("o" 0 1 (fontified t)) . -740) (undo-tree-id147 . -1) (#("y" 0 1 (fontified t rear-nonsticky t)) . -741) (undo-tree-id148 . -1) 742) nil (25608 21307 688845 646000) 0 nil])
([nil nil ((736 . 743)) nil (25608 21307 688837 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -742) (undo-tree-id142 . -1) 743) nil (25608 21307 688835 999000) 0 nil])
([nil nil ((742 . 747)) nil (25608 21307 688833 786000) 0 nil])
([nil nil ((747 . 752)) nil (25608 21307 688832 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 772 . 773) (nil fontified nil 766 . 773) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 754 . 764) (nil fontified nil 752 . 754) (752 . 773)) nil (25608 21307 688831 605000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -767) (undo-tree-id136 . -1) (#("t" 0 1 (fontified defer)) . -768) (undo-tree-id137 . -1) (#("a" 0 1 (fontified defer)) . -769) (undo-tree-id138 . -1) (#("t" 0 1 (fontified defer)) . -770) (undo-tree-id139 . -1) (#("u" 0 1 (fontified t)) . -771) (undo-tree-id140 . -1) (#("s" 0 1 (fontified t rear-nonsticky t)) . -772) (undo-tree-id141 . -1) 773) nil (25608 21307 688827 989000) 0 nil])
([nil nil ((767 . 780)) nil (25608 21307 688767 627000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -775) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("s" 0 1 (fontified nil)) . -776) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("t" 0 1 (fontified defer)) . -777) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("a" 0 1 (fontified defer)) . -778) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("t" 0 1 (fontified t)) . -779) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 780) nil (25608 21307 688764 874000) 0 nil])
([nil nil ((775 . 777)) nil (25608 21307 688748 559000) 0 nil])
([nil nil ((#("g" 0 1 (fontified nil)) . -775) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("r" 0 1 (fontified t)) . -776) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 777) nil (25608 21307 688746 784000) 0 nil])
([nil nil ((782 . 790) (781 . 783) (#("\"" 0 1 (fontified nil)) . -781) (775 . 782)) nil (25608 21307 688739 293000) 0 nil])
([nil nil ((#("^" 0 1 (fontified t face font-lock-string-face)) . -782) (undo-tree-id117 . -1) 783) nil (25608 21307 688733 638000) 0 nil])
([nil nil ((2916 . 2917) (t 25608 21307 694687 395000)) nil (25608 21372 885954 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3006 . 3007) (nil fontified nil 2958 . 3007) (nil fontified nil 2949 . 2958) (nil fontified nil 2942 . 2949) (nil fontified nil 2917 . 2942) (2917 . 3007)) nil (25608 21372 885952 703000) 0 nil])
([nil nil ((3007 . 3008)) nil (25608 21372 885950 412000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3097 . 3098) (nil fontified nil 3049 . 3098) (nil fontified nil 3040 . 3049) (nil fontified nil 3033 . 3040) (nil fontified nil 3008 . 3033) (3008 . 3098)) nil (25608 21372 885949 109000) 0 nil])
([nil nil ((3007 . 3008)) nil (25608 21372 885946 752000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3097 . 3098) (nil fontified nil 3049 . 3098) (nil fontified nil 3040 . 3049) (nil fontified nil 3033 . 3040) (nil fontified nil 3008 . 3033) (3008 . 3098)) nil (25608 21372 885945 405000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2931) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -2932) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2933) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -2934) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -2935) (undo-tree-id179 . -1) 2936) nil (25608 21372 885941 943000) 0 nil])
([nil nil ((2931 . 2938)) nil (25608 21372 885930 750000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -3024) (undo-tree-id166 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3025) (undo-tree-id167 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3026) (undo-tree-id168 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3027) (undo-tree-id169 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -3028) (undo-tree-id170 . -1) 3029) nil (25608 21372 885928 939000) 0 nil])
([nil nil ((3024 . 3027)) nil (25608 21372 885921 898000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -3113) (undo-tree-id161 . -1) (#("h" 0 1 (fontified defer face font-lock-string-face)) . -3114) (undo-tree-id162 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -3115) (undo-tree-id163 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3116) (undo-tree-id164 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -3117) (undo-tree-id165 . -1) 3118) nil (25608 21372 885919 668000) 0 nil])
([nil nil ((3113 . 3124)) nil (25608 21372 885902 912000) 0 nil])
([nil nil ((#(" " 0 1 (fontified defer face font-lock-string-face)) . 3124) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3124) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3124) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3124)) nil (25608 21372 885901 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 3124)) nil (25608 21372 885898 392000) 0 nil])
([nil nil ((3124 . 3127)) nil (25608 21372 886047 803000) 0 nil])
([nil nil ((3032 . 3036)) nil (25608 21445 24399 947000) 0 nil] [nil nil ((3037 . 3042)) ((#("     " 0 5 (fontified t face font-lock-string-face)) . 3037) (undo-tree-id180 . -5)) (25608 21372 885889 329000) 0 nil])
([nil nil ((3036 . 3042)) nil (25608 21445 24397 853000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3038) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3039) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3040) (undo-tree-id197 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3041) (undo-tree-id198 . -1) 3042) nil (25608 21445 24395 133000) 0 nil])
([nil nil ((2943 . 2947)) nil (25608 21445 24383 619000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2945) (undo-tree-id193 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2946) (undo-tree-id194 . -1) 2947) nil (25608 21445 24379 997000) 0 nil])
([nil nil ((2850 . 2854)) nil (25608 21445 24371 132000) 0 nil])
([nil nil ((2777 . 2783)) nil (25608 21445 24369 891000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2781) (undo-tree-id191 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2782) (undo-tree-id192 . -1) 2783) nil (25608 21445 24367 678000) 0 nil])
([nil nil ((2705 . 2718) (#("     " 0 5 (fontified t face font-lock-string-face)) . 2705) (undo-tree-id190 . -5) 2710) nil (25608 21445 24361 472000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2714) (undo-tree-id186 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2715) (undo-tree-id187 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2716) (undo-tree-id188 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2717) (undo-tree-id189 . -1) 2718) nil (25608 21445 24349 287000) 0 nil])
([nil nil ((2957 . 2971)) nil (25608 21445 24233 990000) 0 nil])
([nil nil ((#("n" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2971) (undo-tree-id185 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("w" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("k" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified t face font-lock-string-face)) . 2971) (#("C" 0 1 (fontified t face font-lock-string-face)) . 2971)) nil (25608 21445 24230 645000) 0 nil])
([nil nil ((#("c" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("v" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("y" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("u" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2971)) nil (25608 21445 24221 216000) 0 nil])
([nil nil ((#("r" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("g" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 2971) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 2971)) nil (25608 21445 24214 48000) 0 nil])
([nil nil ((#("r" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 2971) (#("e" 0 1 (fontified t face font-lock-string-face)) . 2971) (#("v" 0 1 (fontified t face font-lock-string-face)) . 2971)) nil (25608 21445 24208 540000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2970) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 2971) nil (25608 21445 24206 753000) 0 nil])
([nil nil ((2999 . 3004)) nil (25608 21445 24202 861000) 0 nil])
([nil nil ((3004 . 3008)) nil (25608 21445 24201 818000) 0 nil])
([nil nil ((#("n" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("w" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("k" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("C" 0 1 (fontified t face font-lock-string-face)) . 3008)) nil (25608 21445 24198 166000) 0 nil])
([nil nil ((#("c" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("v" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("y" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("u" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3008)) nil (25608 21445 24189 714000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("s" 0 1 (fontified t face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("l" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("g" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3008) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3008)) nil (25608 21445 24182 52000) 0 nil])
([nil nil ((#("r" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 3008) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3008) (#("v" 0 1 (fontified t face font-lock-string-face)) . 3008)) nil (25608 21445 24176 797000) 0 nil])
([nil nil ((3037 . 3039)) nil (25608 21445 24175 492000) 0 nil])
([nil nil ((3039 . 3046)) nil (25608 21445 24174 311000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3045) (undo-tree-id182 . -1) 3046) nil (25608 21445 24173 99000) 0 nil])
([nil nil ((3045 . 3059)) nil (25608 21445 24170 499000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3058) (undo-tree-id181 . -1) 3059) nil (25608 21445 24169 127000) 0 nil])
([nil nil ((#("n" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("w" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("k" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified t face font-lock-string-face)) . 3058) (#("C" 0 1 (fontified t face font-lock-string-face)) . 3058)) nil (25608 21445 24157 947000) 0 nil])
([nil nil ((#("c" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("v" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("y" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("l" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("u" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("r" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3058)) nil (25608 21445 24149 791000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3058) (#("s" 0 1 (fontified t face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("l" 0 1 (fontified nil face font-lock-string-face)) . 3058) (#("g" 0 1 (fontified t face font-lock-string-face)) . 3058) (#("n" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("a" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("h" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("o" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("t" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#(" " 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("s" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified defer face font-lock-string-face)) . 3058) (#("c" 0 1 (fontified defer face font-lock-string-face)) . 3058)) nil (25608 21445 24140 842000) 0 nil])
([nil nil ((#("r" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 3058) (#("e" 0 1 (fontified t face font-lock-string-face)) . 3058) (#("v" 0 1 (fontified t face font-lock-string-face)) . 3058)) nil (25608 21445 24128 398000) 0 nil])
([nil nil ((711 . 716) (t 25608 21445 30619 616000)) nil (25608 21491 420398 7000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 723) (722 . 723) (721 . 723) (#("\"" 0 1 (fontified nil)) . -721) (716 . 722)) nil (25608 21491 420396 406000) 0 nil])
([nil nil ((722 . 728)) nil (25608 21491 420393 830000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-string-face)) . -725) (undo-tree-id214 . -1) (#("T" 0 1 (fontified t face font-lock-string-face)) . -726) (undo-tree-id215 . -1) (#("U" 0 1 (fontified t face font-lock-string-face)) . -727) (undo-tree-id216 . -1) 728) nil (25608 21491 420392 172000) 0 nil])
([nil nil ((725 . 729)) nil (25608 21491 420387 462000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -728) (undo-tree-id213 . -1) 729) nil (25608 21491 420386 199000) 0 nil])
([nil nil ((760 . 765)) nil (25608 21491 420383 836000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 772) (771 . 772) (770 . 772) (#("\"" 0 1 (fontified nil)) . -770) (765 . 771)) nil (25608 21491 420382 294000) 0 nil])
([nil nil ((771 . 780)) nil (25608 21491 420379 411000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -779) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 780) nil (25608 21491 420373 856000) 0 nil])
([nil nil ((780 . 785) (t 25608 21491 426598 568000)) nil (25608 21576 159048 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 795 . 796) (nil fontified nil 785 . 796) (785 . 796)) nil (25608 21576 159046 613000) 0 nil])
([nil nil ((785 . 790)) nil (25608 21576 159039 464000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -785) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("a" 0 1 (fontified t)) . -786) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("s" 0 1 (fontified t)) . -787) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#("h" 0 1 (fontified t)) . -788) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#(" " 0 1 (fontified t)) . -789) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 790 (t 25608 21576 162562 149000)) nil (25608 21582 747319 806000) 0 nil])
([nil nil ((2544 . 2553) (t 25608 21582 758559 415000)) nil (25608 21601 514374 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2562 . 2563) (nil fontified nil 2553 . 2563) (2553 . 2563)) nil (25608 21601 514372 974000) 0 nil])
([nil nil ((2624 . 2633)) nil (25608 21601 514371 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2642 . 2643) (nil fontified nil 2633 . 2643) (2633 . 2643)) nil (25608 21601 514369 962000) 0 nil])
([nil nil ((2693 . 2702)) nil (25608 21601 514367 735000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2711 . 2712) (nil fontified nil 2702 . 2712) (2702 . 2712)) nil (25608 21601 514360 802000) 0 nil])
([nil nil ((2330 . 2335) (t 25608 21601 518551 710000)) nil (25608 21707 625617 587000) 0 nil])
([nil nil ((2336 . 2338) (2335 . 2337) (#("\"" 0 1 (fontified nil)) . -2335) (2335 . 2336)) nil (25608 21707 625612 925000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2336) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("v" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2337) (undo-tree-id661 . -1) (undo-tree-id662 . -1) 2338) nil (25608 21707 625605 905000) 0 nil])
([nil nil ((2336 . 2344)) nil (25608 21707 625590 236000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2343) (undo-tree-id658 . -1) 2344) nil (25608 21707 625586 573000) 0 nil])
([nil nil ((2344 . 2345)) nil (25608 21707 625579 967000) 0 nil])
([nil nil ((2345 . 2354)) nil (25608 21707 625577 48000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2361) (2360 . 2361) (2359 . 2361) (#("\"" 0 1 (fontified nil)) . -2359) (2354 . 2360)) nil (25608 21707 625572 729000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2360) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) 2361) nil (25608 21710 353261 630000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2359)) nil (25608 21883 761045 461000) 0 nil] [nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2359) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("
    \"" 0 1 (fontified t face font-lock-string-face) 1 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face)) . 2360) (undo-tree-id811 . -1) (undo-tree-id812 . -5) (undo-tree-id813 . -6) (undo-tree-id814 . -5) (undo-tree-id815 . -6) (undo-tree-id816 . -5) (undo-tree-id817 . -6) (undo-tree-id818 . -5) (undo-tree-id819 . -6) (undo-tree-id820 . -5) (undo-tree-id821 . -6) (undo-tree-id822 . -5) (undo-tree-id823 . -6) (undo-tree-id824 . -5) (undo-tree-id825 . -6) (undo-tree-id826 . -5) (undo-tree-id827 . -6) (undo-tree-id828 . -5) (undo-tree-id829 . -6) (undo-tree-id830 . -5) (undo-tree-id831 . -6) (undo-tree-id832 . -5) (undo-tree-id833 . -6) (undo-tree-id834 . -5) (undo-tree-id835 . -6) (undo-tree-id836 . -5) (undo-tree-id837 . -6)) ((2359 . 2366)) (25608 21710 351924 138000) 0 nil] [nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2359) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("
    \"" 0 1 (fontified t face font-lock-string-face) 1 5 (fontified t) 5 6 (fontified t face font-lock-string-face)) . 2360) (undo-tree-id630 . -1) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -6) (undo-tree-id635 . -5) (undo-tree-id636 . -6) (undo-tree-id637 . -5) (undo-tree-id638 . -6) (undo-tree-id639 . -5) (undo-tree-id640 . -6) (undo-tree-id641 . -5) (undo-tree-id642 . -6) (undo-tree-id643 . -5) (undo-tree-id644 . -6) (undo-tree-id645 . -5) (undo-tree-id646 . -6)) ((2359 . 2366)) (25608 21707 625500 969000) 0 nil])
([nil nil ((2359 . 2367) (#(" " 0 1 (fontified nil syntax-multiline t)) . 2358) (undo-tree-id848 . -1) (2359 . 2360)) nil (25608 21883 761044 232000) 0 nil])
nil
nil
([nil nil ((2367 . 2369)) nil (25608 21883 761041 301000) 0 nil])
([nil nil ((232 . 233)) nil (25608 21883 761040 463000) 0 nil])
([nil nil ((233 . 242)) nil (25608 21883 761039 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -240) (undo-tree-id846 . -1) (#("=" 0 1 (fontified t)) . -241) (undo-tree-id847 . -1) 242) nil (25608 21883 761038 95000) 0 nil])
([nil nil ((240 . 241)) nil (25608 21883 761034 407000) 0 nil])
([nil nil ((#("
version=" 0 1 (fontified t) 1 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t)) . 232) (undo-tree-id841 . -9) (undo-tree-id842 . -9) (undo-tree-id843 . -9) (undo-tree-id844 . -1) (undo-tree-id845 . -9)) nil (25608 21883 761032 520000) 0 nil])
([nil nil ((2358 . 2360)) nil (25608 21883 761025 131000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -2359) (undo-tree-id840 . -1) 2360) nil (25608 21883 761022 847000) 0 nil])
([nil nil ((2360 . 2361) (2359 . 2361) (#("\"" 0 1 (fontified nil)) . -2359) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (2359 . 2360)) nil (25608 21883 761018 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2380 . 2381) (nil fontified nil 2361 . 2381) (2361 . 2381)) nil (25608 21883 761003 554000) 0 nil])
([nil nil ((2346 . 2348) (2345 . 2347) (#("\"" 0 1 (fontified nil)) . -2345) (2344 . 2346) (t 25608 21883 766423 0)) nil (25608 21987 829799 836000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2347) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 2348) nil (25608 21987 829795 701000) 0 nil])
([nil nil ((2347 . 2348)) nil (25608 21987 829763 578000) 0 nil])
([nil nil ((172 . 173) (t 25608 21987 837797 422000)) nil (25608 22480 489766 295000) 0 nil])
([nil nil ((173 . 182)) nil (25608 22480 489765 59000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -181) (undo-tree-id920 . -1) 182) nil (25608 22480 489763 759000) 0 nil])
([nil nil ((181 . 196)) nil (25608 22480 489761 711000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -195) (undo-tree-id919 . -1) 196) nil (25608 22480 489760 527000) 0 nil])
([nil nil ((734 . 739)) nil (25608 22480 489758 586000) 0 nil])
([nil nil ((739 . 747)) nil (25608 22480 489757 699000) 0 nil])
([nil nil ((743 . 751) (#("zeek" 0 4 (fontified t face font-lock-variable-name-face)) . -743) (undo-tree-id917 . -4) (undo-tree-id918 . -4) 747) nil (25608 22480 489756 521000) 0 nil])
([nil nil ((2671 . 2680)) nil (25608 22480 489753 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2691 . 2692) (nil fontified nil 2684 . 2692) (nil fontified nil 2682 . 2684) (nil fontified nil 2680 . 2682) (2680 . 2692)) nil (25608 22480 489752 302000) 0 nil])
([nil nil ((2772 . 2781)) nil (25608 22480 489750 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2792 . 2793) (nil fontified nil 2785 . 2793) (nil fontified nil 2783 . 2785) (nil fontified nil 2781 . 2783) (2781 . 2793)) nil (25608 22480 489749 513000) 0 nil])
([nil nil ((2862 . 2871)) nil (25608 22480 489747 876000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2882 . 2883) (nil fontified nil 2875 . 2883) (nil fontified nil 2873 . 2875) (nil fontified nil 2871 . 2873) (2871 . 2883)) nil (25608 22480 489746 674000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2703) (undo-tree-id900 . -1) (#("h" 0 1 (fontified t)) . -2704) (undo-tree-id901 . -1) (#(" " 0 1 (fontified defer)) . -2705) (undo-tree-id902 . -1) (#("\"" 0 1 (fontified defer face font-lock-string-face)) . -2706) (undo-tree-id903 . -1) (#("$" 0 1 (fontified defer face font-lock-string-face)) . -2707) (undo-tree-id904 . -1) (#("z" 0 1 (fontified defer face font-lock-string-face)) . -2708) (undo-tree-id905 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -2709) (undo-tree-id906 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -2710) (undo-tree-id907 . -1) (#("k" 0 1 (fontified defer face font-lock-string-face)) . -2711) (undo-tree-id908 . -1) (#("c" 0 1 (fontified defer face font-lock-string-face)) . -2712) (undo-tree-id909 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face)) . -2713) (undo-tree-id910 . -1) (#("l" 0 1 (fontified nil face font-lock-string-face)) . -2714) (undo-tree-id911 . -1) (#("P" 0 1 (fontified defer face font-lock-string-face)) . -2715) (undo-tree-id912 . -1) (#("a" 0 1 (fontified defer face font-lock-string-face)) . -2716) (undo-tree-id913 . -1) (#("t" 0 1 (fontified defer face font-lock-string-face)) . -2717) (undo-tree-id914 . -1) (#("h" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . -2718) (undo-tree-id915 . -1) (#("\"" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . -2719) (undo-tree-id916 . -1) 2720) nil (25608 22480 489741 866000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2701) (undo-tree-id898 . -1) (#("a" 0 1 (fontified t)) . -2702) (undo-tree-id899 . -1) 2703) nil (25608 22480 489719 863000) 0 nil])
([nil nil ((2701 . 2711)) nil (25608 22480 489716 391000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2710) (undo-tree-id897 . -1) 2711) nil (25608 22480 489715 333000) 0 nil])
([nil nil ((2783 . 2792)) nil (25608 22480 489713 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2800 . 2801) (nil fontified nil 2792 . 2801) (2792 . 2801)) nil (25608 22480 489712 193000) 0 nil])
([nil nil ((2891 . 2900)) nil (25608 22480 489710 869000) 0 nil])
([nil nil ((2900 . 2901)) nil (25608 22480 489709 856000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -2900) (undo-tree-id896 . -1) 2901) nil (25608 22480 489708 549000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2908 . 2909) (nil fontified nil 2900 . 2909) (2900 . 2909)) nil (25608 22480 489706 8000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2903) (undo-tree-id890 . -1) (#("e" 0 1 (fontified t)) . -2904) (undo-tree-id891 . -1) (#("k" 0 1 (fontified t)) . -2905) (undo-tree-id892 . -1) (#("c" 0 1 (fontified t)) . -2906) (undo-tree-id893 . -1) (#("t" 0 1 (fontified t)) . -2907) (undo-tree-id894 . -1) (#("l" 0 1 (fontified t rear-nonsticky t)) . -2908) (undo-tree-id895 . -1) 2909) nil (25608 22480 489703 351000) 0 nil])
([nil nil ((2903 . 2905)) nil (25608 22480 489694 926000) 0 nil])
([nil nil ((#("
        bash \"$zkgPath\"" 0 1 (fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t face font-lock-string-face) 16 22 (fontified t face font-lock-string-face) 22 23 (rear-nonsticky t fontified t face font-lock-string-face) 23 24 (rear-nonsticky t fontified t face font-lock-string-face)) . 2905) (undo-tree-id887 . -24) (undo-tree-id888 . -1) (undo-tree-id889 . -24)) nil (25608 22480 489693 701000) 0 nil])
([nil nil ((#("
        bash \"$zeekctlPath\"" 0 1 (fontified t) 1 8 (fontified t) 8 14 (fontified t) 14 16 (fontified t face font-lock-string-face) 16 26 (fontified t face font-lock-string-face) 26 27 (rear-nonsticky t fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face)) . 2801) (undo-tree-id884 . -28) (undo-tree-id885 . -1) (undo-tree-id886 . -28)) nil (25608 22480 489689 431000) 0 nil])
([nil nil ((#("
zeekctlPath=/opt/zeek/bin/zeekctl
zkgPath=/opt/zeek/bin/zkg" 0 1 (fontified t) 1 12 (fontified t face font-lock-variable-name-face) 12 35 (fontified t) 35 42 (fontified t face font-lock-variable-name-face) 42 43 (fontified t) 43 60 (fontified t)) . 195) (undo-tree-id880 . -60) (undo-tree-id881 . -60) (undo-tree-id882 . -1) (undo-tree-id883 . -60)) nil (25608 22480 489685 120000) 0 nil])
([nil nil ((#("bash \"$zeekctlPath\"" 0 5 (fontified t) 5 7 (fontified t face font-lock-string-face) 7 17 (fontified t face font-lock-string-face) 17 18 (rear-nonsticky t fontified t face font-lock-string-face) 18 19 (rear-nonsticky t fontified t face font-lock-string-face)) . 714) (undo-tree-id877 . -19) (undo-tree-id878 . -8) (undo-tree-id879 . -19)) nil (25608 22480 489679 722000) 0 nil])
([nil nil ((714 . 723)) nil (25608 22480 489675 565000) 0 nil])
([nil nil ((714 . 717)) nil (25608 22480 489674 625000) 0 nil])
([nil nil ((2725 . 2728)) nil (25608 22480 489673 704000) 0 nil])
([nil nil ((2808 . 2811)) nil (25608 22480 489672 777000) 0 nil])
([nil nil ((2634 . 2637)) nil (25608 22480 489671 820000) 0 nil])
([nil nil ((#("bash \"$zeekctlPath\"" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t face font-lock-string-face) 7 17 (fontified t face font-lock-string-face) 17 18 (rear-nonsticky t fontified t face font-lock-string-face) 18 19 (rear-nonsticky t fontified t face font-lock-string-face)) . 774) (undo-tree-id874 . -19) (undo-tree-id875 . -19) (undo-tree-id876 . -19)) nil (25608 22480 489670 407000) 0 nil])
([nil nil ((774 . 787)) nil (25608 22480 489665 286000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -786) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) 787) nil (25608 22480 489659 921000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -714) (undo-tree-id921 . -1) (#("h" 0 1 (fontified t)) . -715) (undo-tree-id922 . -1) (#(" " 0 1 (fontified t)) . -716) (undo-tree-id923 . -1) 717 (t 25608 22480 499884 617000)) nil (25608 22727 978070 8000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 771) (#("h" 0 1 (fontified t)) . 771) (#("s" 0 1 (fontified t)) . 771)) nil (25608 22727 978050 246000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2621) (#("h" 0 1 (fontified t)) . 2621) (#("s" 0 1 (fontified t)) . 2621)) nil (25608 22727 978044 792000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2712) (#("h" 0 1 (fontified t)) . 2712) (#("s" 0 1 (fontified defer)) . 2712)) nil (25608 22727 978039 98000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2792) (#("h" 0 1 (fontified t)) . 2792) (#("s" 0 1 (fontified t)) . 2792)) nil (25608 22727 978027 271000) 0 nil])
([nil nil ((#("    \"zkg\")
        check_sudo
        cd $zeekPath
        ./zkg
        ;;" 0 4 (syntax-multiline t fontified t) 4 5 (syntax-multiline t fontified t face font-lock-string-face) 5 6 (syntax-multiline t fontified t face font-lock-string-face) 6 7 (syntax-multiline t fontified t face font-lock-string-face) 7 8 (syntax-multiline t fontified t face font-lock-string-face) 8 9 (syntax-multiline t fontified t face font-lock-string-face) 9 10 (syntax-multiline t syntax-table (1) fontified t) 10 11 (fontified t) 11 19 (fontified t) 19 28 (fontified t) 28 29 (rear-nonsticky t fontified t) 29 30 (fontified t) 30 35 (fontified t) 35 38 (fontified t) 38 40 (fontified t face font-lock-builtin-face) 40 42 (fontified t) 42 44 (fontified t face font-lock-variable-name-face) 44 49 (fontified t face font-lock-variable-name-face) 49 50 (rear-nonsticky t fontified t face font-lock-variable-name-face) 50 51 (fontified t) 51 59 (fontified t) 59 64 (fontified t) 64 65 (fontified t) 65 72 (fontified t) 72 73 (fontified t) 73 75 (syntax-multiline t fontified t)) . 2733) (undo-tree-id933 . -75) (undo-tree-id934 . -11) (undo-tree-id935 . -59) (undo-tree-id936 . -64) (undo-tree-id937 . -64) (undo-tree-id938 . -75) (t 25608 22727 987306 513000)) nil (25608 22819 353549 269000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t syntax-multiline t)) . -2732) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 2733) nil (25608 22819 353540 370000) 0 nil])
([nil nil ((#("
derant-sensor zkg           Start zkg" 0 1 (fontified t face font-lock-string-face) 1 12 (fontified t face font-lock-string-face) 12 21 (fontified t face font-lock-string-face) 21 35 (fontified t face font-lock-string-face) 35 38 (fontified t face font-lock-string-face)) . 3066) (undo-tree-id924 . -38) (undo-tree-id925 . -1) (undo-tree-id926 . -38)) nil (25608 22925 605549 828000) 0 nil])
([nil nil ((2553 . 2558) (t 25608 22819 359129 364000)) nil (25608 22987 287324 288000) 0 nil] [nil nil ((2648 . 2653) (t 25608 22819 359129 364000)) ((#("
    " 0 1 (fontified t syntax-multiline t) 1 5 (fontified t syntax-multiline t)) . 2648) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -1) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -1) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -1) (undo-tree-id956 . -5) (undo-tree-id957 . -5) (undo-tree-id958 . -5) (undo-tree-id959 . -5) (undo-tree-id960 . -5) (undo-tree-id961 . -5)) (25608 22925 261710 780000) 0 nil])
([nil nil ((2559 . 2560) (2558 . 2560) (#("\"" 0 1 (fontified nil)) . -2558) (2558 . 2559)) nil (25608 22987 287322 808000) 0 nil])
([nil nil ((2653 . 2655) (#("\"" 0 1 (fontified nil)) . -2653) (2653 . 2654)) ((#("\"" 0 1 (fontified nil)) . 2653) (2653 . 2654) (#("\"\"" 0 1 (fontified t syntax-multiline t face font-lock-string-face) 1 2 (fontified t syntax-multiline t face font-lock-string-face)) . 2653) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2)) (25608 22925 261454 707000) 0 nil])
([nil nil ((2560 . 2567)) nil (25608 22987 287321 220000) 0 nil])
nil
([nil nil ((#("S" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2559) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (#("u" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2560) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (#("r" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2561) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#("i" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2562) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (#("c" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2563) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (#("a" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2564) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("t" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2565) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (#("a" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2566) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 2567) nil (25608 22987 287318 302000) 0 nil])
([nil nil ((2559 . 2561)) nil (25608 22987 287299 529000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2559) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (#("u" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2560) (undo-tree-id994 . -1) (undo-tree-id995 . -1) 2561) nil (25608 22987 287298 147000) 0 nil])
([nil nil ((2559 . 2564)) nil (25608 22987 287293 9000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2562) (undo-tree-id990 . -1) (#("o" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2563) (undo-tree-id991 . -1) 2564) nil (25608 22987 287291 700000) 0 nil])
([nil nil ((2562 . 2575)) nil (25608 22987 287288 375000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2574) (undo-tree-id989 . -1) 2575) nil (25608 22987 287287 249000) 0 nil])
([nil nil ((2575 . 2576)) nil (25608 22987 287284 942000) 0 nil])
([nil nil ((2576 . 2585)) nil (25608 22987 287284 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2611 . 2612) (nil fontified nil 2585 . 2612) (2585 . 2612)) nil (25608 22987 287283 134000) 0 nil])
([nil nil ((2612 . 2620)) nil (25608 22987 287281 884000) 0 nil])
([nil nil ((2620 . 2622)) nil (25608 22987 287280 948000) 0 nil])
([nil nil ((2576 . 2585)) nil (25608 22987 287279 733000) 0 nil])
([nil nil ((2585 . 2588)) nil (25608 22987 287278 891000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2585) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (#("c" 0 1 (fontified t)) . -2586) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (#("h" 0 1 (fontified t)) . -2587) (undo-tree-id987 . -1) (undo-tree-id988 . -1) 2588) nil (25608 22987 287277 217000) 0 nil])
([nil nil ((2585 . 2596)) nil (25608 22987 287269 331000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2595) (undo-tree-id982 . -1) 2596) nil (25608 22987 287268 205000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2647) (undo-tree-id971 . -1) (#("e" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2648) (undo-tree-id972 . -1) (#("e" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2649) (undo-tree-id973 . -1) (#("k" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2650) (undo-tree-id974 . -1) (#("-" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2651) (undo-tree-id975 . -1) (#("r" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2652) (undo-tree-id976 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2653) (undo-tree-id977 . -1) (#("b" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2654) (undo-tree-id978 . -1) (#("o" 0 1 (fontified defer face font-lock-string-face syntax-multiline t)) . -2655) (undo-tree-id979 . -1) (#("o" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2656) (undo-tree-id980 . -1) (#("t" 0 1 (syntax-multiline t fontified t face font-lock-string-face)) . -2657) (undo-tree-id981 . -1) 2658) nil (25608 22987 287263 559000) 0 nil])
([nil nil ((2647 . 2655)) nil (25608 22987 287248 779000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2654) (undo-tree-id970 . -1) 2655) nil (25608 22987 287247 561000) 0 nil])
([nil nil ((2654 . 2659)) nil (25608 22987 287245 352000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2658) (undo-tree-id969 . -1) 2659) nil (25608 22992 168603 41000) 0 nil])
([nil nil ((#("echo \"$DPKG_RUNNING_VERSION\"" 0 1 (fontified t face font-lock-builtin-face) 1 2 (fontified t face font-lock-builtin-face) 2 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 7 (fontified t face font-lock-string-face) 7 26 (fontified t face font-lock-string-face) 26 27 (rear-nonsticky t fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face)) . 2319) (undo-tree-id1550 . -28) (undo-tree-id1551 . -28) (undo-tree-id1552 . -28) (t 25608 22993 262830 753000)) nil (25608 23236 80309 802000) 0 nil] [nil nil ((2553 . 2558)) ((#("
    " 0 1 (fontified t syntax-multiline t) 1 4 (fontified t syntax-multiline t) 4 5 (fontified t syntax-multiline t)) . 2553) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -1) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1452 . -5) (undo-tree-id1453 . -5) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) (undo-tree-id1457 . -5) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -5) (undo-tree-id1514 . -5) (undo-tree-id1515 . -5) (undo-tree-id1516 . -5) (undo-tree-id1517 . -5) (undo-tree-id1518 . -5) (undo-tree-id1519 . -5) (undo-tree-id1520 . -5) (undo-tree-id1521 . -5) (undo-tree-id1522 . -5) (undo-tree-id1523 . -5) (undo-tree-id1524 . -5) (undo-tree-id1525 . -5) (undo-tree-id1526 . -5) (undo-tree-id1527 . -1) (undo-tree-id1528 . -5) (undo-tree-id1529 . -5) (undo-tree-id1530 . -5) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -1) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5)) (25608 22991 828978 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2341 . 2342) (nil fontified nil 2319 . 2342) (2319 . 2342)) nil (25608 23236 80305 237000) 0 nil])
([nil nil ((2558 . 2560)) ((#("re" 0 1 (fontified t syntax-multiline t) 1 2 (fontified t syntax-multiline t)) . 2558) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (undo-tree-id1440 . -2) (undo-tree-id1441 . -2) (undo-tree-id1442 . -2) (undo-tree-id1443 . -2)) (25608 22991 349330 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -2341) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) 2342) nil (25608 23236 80303 558000) 0 nil])
([nil nil ((#("r" 0 1 (fontified nil syntax-multiline t)) . -2558) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (#("e" 0 1 (fontified t syntax-multiline t)) . -2559) (undo-tree-id967 . -1) (undo-tree-id968 . -1) 2560) ((2558 . 2560)) (25608 22990 926009 153000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2351) (2350 . 2351) (2349 . 2351) (#("\"" 0 1 (fontified nil)) . -2349) (2341 . 2350)) nil (25608 23236 80299 666000) 0 nil])
([nil nil ((2559 . 2564) (2558 . 2560) (#("\"" 0 1 (fontified nil)) . -2558) (2558 . 2559)) ((#("\"" 0 1 (fontified nil)) . 2558) (2558 . 2559) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil syntax-multiline t face font-lock-string-face)) . 2558) (undo-tree-id1328 . -2) (undo-tree-id1329 . -2) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -2) (undo-tree-id1333 . -2) (undo-tree-id1334 . -2) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) (undo-tree-id1337 . -2) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) (undo-tree-id1340 . -2) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (#("reboo" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t syntax-multiline t face font-lock-string-face)) . 2559) (undo-tree-id1384 . -5) (undo-tree-id1385 . -5) (undo-tree-id1386 . -5) (undo-tree-id1387 . -5) (undo-tree-id1388 . -5) (undo-tree-id1389 . -5) (undo-tree-id1390 . -5) (undo-tree-id1391 . -5) (undo-tree-id1392 . -5) (undo-tree-id1393 . -5) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) (undo-tree-id1415 . -5) (undo-tree-id1416 . -5) (undo-tree-id1417 . -5) (undo-tree-id1418 . -5) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) (undo-tree-id1422 . -5) (undo-tree-id1423 . -5) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5)) (25608 22990 619269 748000) 0 nil])
([nil nil ((2350 . 2358)) nil (25608 23236 80297 772000) 0 nil])
([nil nil ((2564 . 2565)) ((#("k" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . 2564) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1)) (25608 22990 337200 514000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2357) (undo-tree-id1547 . -1) 2358) nil (25608 23236 80296 585000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2564) (undo-tree-id964 . -1) 2565) ((2564 . 2565)) (25608 22990 9741 531000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . 2350)) nil (25608 23236 80293 894000) 0 nil])
([nil nil ((2564 . 2566)) ((#("t " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t syntax-multiline t face font-lock-string-face)) . 2564) (undo-tree-id1308 . -2) (undo-tree-id1309 . -1) (undo-tree-id1310 . -2) (undo-tree-id1311 . -2) (undo-tree-id1312 . -2) (undo-tree-id1313 . -2) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (undo-tree-id1316 . -2) (undo-tree-id1317 . -2)) (25608 22989 727503 810000) 0 nil])
([nil nil ((2350 . 2351)) nil (25608 23236 80292 769000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t syntax-multiline t face font-lock-string-face)) . -2565) (undo-tree-id962 . -1) (undo-tree-id963 . -1) 2566) ((2565 . 2566)) (25608 22989 403615 274000) 0 nil])
([nil nil ((#("apt show derant-sensor | grep \"Version\"" 0 30 (fontified t) 30 39 (fontified t face font-lock-string-face)) . 2319) (undo-tree-id1542 . -39) (undo-tree-id1543 . -28) (undo-tree-id1544 . -30) (undo-tree-id1545 . -39) (undo-tree-id1546 . -39)) nil (25608 23236 80290 229000) 0 nil])
([nil nil ((2566 . 2567)) ((#(")" 0 1 (fontified t syntax-multiline t syntax-table (1))) . 2566) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1)) (25608 22989 96726 511000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2363 . 2364) (nil fontified nil 2319 . 2364) (2319 . 2364)) nil (25608 23236 80266 544000) 0 nil])
([nil nil ((2567 . 2576)) ((#("
        " 0 1 (fontified t syntax-multiline t) 1 8 (fontified t syntax-multiline t) 8 9 (fontified t syntax-multiline t)) . 2567) (undo-tree-id1202 . -9) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -9) (undo-tree-id1206 . -9) (undo-tree-id1207 . -9) (undo-tree-id1208 . -9) (undo-tree-id1209 . -9) (undo-tree-id1210 . -9) (undo-tree-id1211 . -9) (undo-tree-id1212 . -1) (undo-tree-id1213 . -9) (undo-tree-id1214 . -9) (undo-tree-id1215 . -9) (undo-tree-id1216 . -9) (undo-tree-id1217 . -9) (undo-tree-id1218 . -9)) (25608 22988 779499 12000) 0 nil])
([nil nil ((730 . 735) (t 25608 23236 90474 999000)) nil (25608 23480 233053 290000) 0 nil])
([nil nil ((2576 . 2578)) ((#(";;" 0 2 (fontified t syntax-multiline t)) . 2576)) (25608 22988 469718 127000) 0 nil])
([nil nil ((nil rear-nonsticky nil 758 . 759) (nil fontified nil 735 . 759) (735 . 759)) nil (25608 23480 233051 853000) 0 nil])
([nil nil ((2567 . 2576)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 2567) (undo-tree-id1141 . -9) (undo-tree-id1142 . -9) (undo-tree-id1143 . -1) (undo-tree-id1144 . -9) (undo-tree-id1145 . -9) (undo-tree-id1146 . -9) (undo-tree-id1147 . -9) (undo-tree-id1148 . -9) (undo-tree-id1149 . -9) (undo-tree-id1150 . -9) (undo-tree-id1151 . -9) (undo-tree-id1152 . -9) (undo-tree-id1153 . -9) (undo-tree-id1154 . -9) (undo-tree-id1155 . -9) (undo-tree-id1156 . -9) (undo-tree-id1157 . -9) (undo-tree-id1158 . -9) (undo-tree-id1159 . -9) (undo-tree-id1160 . -9) (undo-tree-id1161 . -9) (undo-tree-id1162 . -9) (undo-tree-id1163 . -9) (undo-tree-id1164 . -9) (undo-tree-id1165 . -9) (undo-tree-id1166 . -9) (undo-tree-id1167 . -9) (undo-tree-id1168 . -9) (undo-tree-id1169 . -9) (undo-tree-id1170 . -9) (undo-tree-id1171 . -9) (undo-tree-id1172 . -9) (undo-tree-id1173 . -9) (undo-tree-id1174 . -9) (undo-tree-id1175 . -9) (undo-tree-id1176 . -9) (undo-tree-id1177 . -9) (undo-tree-id1178 . -9) (undo-tree-id1179 . -9) (undo-tree-id1180 . -9) (undo-tree-id1181 . -9) (undo-tree-id1182 . -9) (undo-tree-id1183 . -9) (undo-tree-id1184 . -9) (undo-tree-id1185 . -9) (undo-tree-id1186 . -9) (undo-tree-id1187 . -1) (undo-tree-id1188 . -9) (undo-tree-id1189 . -9) (undo-tree-id1190 . -9) (undo-tree-id1191 . -1) (undo-tree-id1192 . -9) (undo-tree-id1193 . -9) (undo-tree-id1194 . -9) (undo-tree-id1195 . -9) (undo-tree-id1196 . -9) (undo-tree-id1197 . -9) (undo-tree-id1198 . -9) (undo-tree-id1199 . -9) (undo-tree-id1200 . -9) (undo-tree-id1201 . -9)) (25608 22988 157559 615000) 0 nil])
([nil nil ((735 . 736)) nil (25608 23480 233050 190000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2585 . 2586) (nil fontified nil 2576 . 2586) (2576 . 2586)) ((#("check_sudo" 0 9 (fontified nil) 9 10 (fontified nil rear-nonsticky nil)) . 2576) (undo-tree-id1097 . -10) (undo-tree-id1098 . -10) (undo-tree-id1099 . -10) (undo-tree-id1100 . -10) (undo-tree-id1101 . -10) (undo-tree-id1102 . -10) (undo-tree-id1103 . -10) (undo-tree-id1104 . -10) (undo-tree-id1105 . -10) (undo-tree-id1106 . -10) (undo-tree-id1107 . -10) (undo-tree-id1108 . -10) (undo-tree-id1109 . -10) (undo-tree-id1110 . -10) (undo-tree-id1111 . -10) (undo-tree-id1112 . -10) (undo-tree-id1113 . -10) (undo-tree-id1114 . -10) (undo-tree-id1115 . -10) (undo-tree-id1116 . -10) (undo-tree-id1117 . -10) (undo-tree-id1118 . -10) (undo-tree-id1119 . -10) (undo-tree-id1120 . -10) (undo-tree-id1121 . -10) (undo-tree-id1122 . -10) (undo-tree-id1123 . -10) (undo-tree-id1124 . -10) (undo-tree-id1125 . -10) (undo-tree-id1126 . -10) (undo-tree-id1127 . -10) (undo-tree-id1128 . -10) (undo-tree-id1129 . -10) (undo-tree-id1130 . -10) (undo-tree-id1131 . -10) (undo-tree-id1132 . -10) (undo-tree-id1133 . -10) (undo-tree-id1134 . -10) (undo-tree-id1135 . -10) (undo-tree-id1136 . -10) (undo-tree-id1137 . -10) (undo-tree-id1138 . -10) (undo-tree-id1139 . -10) (undo-tree-id1140 . -10) (nil rear-nonsticky t 2585 . 2586)) (25608 22987 879354 961000) 0 nil])
([nil nil ((#("    suricata -V
    ./zeekctl config | grep \"version\"" 0 4 (fontified t) 4 14 (fontified t) 14 15 (rear-nonsticky t fontified t) 15 16 (fontified t) 16 29 (fontified t) 29 44 (fontified t) 44 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face)) . 781) (undo-tree-id1620 . -53) (undo-tree-id1621 . -16) (undo-tree-id1622 . -53)) nil (25608 23480 233049 53000) 0 nil])
([nil nil ((2586 . 2595)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 2586) (undo-tree-id1059 . -9) (undo-tree-id1060 . -9) (undo-tree-id1061 . -1) (undo-tree-id1062 . -9) (undo-tree-id1063 . -9) (undo-tree-id1064 . -9) (undo-tree-id1065 . -9) (undo-tree-id1066 . -9) (undo-tree-id1067 . -9) (undo-tree-id1068 . -9) (undo-tree-id1069 . -9) (undo-tree-id1070 . -9) (undo-tree-id1071 . -9) (undo-tree-id1072 . -9) (undo-tree-id1073 . -9) (undo-tree-id1074 . -9) (undo-tree-id1075 . -9) (undo-tree-id1076 . -9) (undo-tree-id1077 . -9) (undo-tree-id1078 . -9) (undo-tree-id1079 . -9) (undo-tree-id1080 . -9) (undo-tree-id1081 . -9) (undo-tree-id1082 . -9) (undo-tree-id1083 . -9) (undo-tree-id1084 . -9) (undo-tree-id1085 . -9) (undo-tree-id1086 . -1) (undo-tree-id1087 . -9) (undo-tree-id1088 . -9) (undo-tree-id1089 . -9) (undo-tree-id1090 . -1) (undo-tree-id1091 . -9) (undo-tree-id1092 . -9) (undo-tree-id1093 . -9) (undo-tree-id1094 . -9) (undo-tree-id1095 . -9) (undo-tree-id1096 . -9)) (25608 22987 662958 656000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -760) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (#(" " 0 1 (fontified defer)) . -761) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#(" " 0 1 (fontified defer)) . -762) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (#(" " 0 1 (fontified defer)) . -763) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#(" " 0 1 (fontified defer)) . -764) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("e" 0 1 (fontified defer face font-lock-builtin-face)) . -765) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (#("c" 0 1 (fontified defer face font-lock-builtin-face)) . -766) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (#("h" 0 1 (fontified defer face font-lock-builtin-face)) . -767) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("o" 0 1 (fontified defer face font-lock-builtin-face)) . -768) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (#(" " 0 1 (fontified defer)) . -769) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("\"" 0 1 (fontified defer face font-lock-string-face)) . -770) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (#("V" 0 1 (fontified defer face font-lock-string-face)) . -771) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (#("E" 0 1 (fontified defer face font-lock-string-face)) . -772) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (#("R" 0 1 (fontified defer face font-lock-string-face)) . -773) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (#("S" 0 1 (fontified defer face font-lock-string-face)) . -774) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (#("I" 0 1 (fontified defer face font-lock-string-face)) . -775) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#("O" 0 1 (fontified defer face font-lock-string-face)) . -776) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (#("N" 0 1 (fontified defer face font-lock-string-face)) . -777) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (#("S" 0 1 (fontified nil face font-lock-string-face)) . -778) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -779) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (#("
" 0 1 (fontified t)) . -780) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) 781) nil (25608 23480 233039 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2620 . 2621) (nil fontified nil 2619 . 2621) (nil fontified nil 2595 . 2619) (2595 . 2621)) ((#("systemctl restart suricata" 0 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil rear-nonsticky nil)) . 2595) (undo-tree-id1034 . -26) (undo-tree-id1035 . -26) (undo-tree-id1036 . -26) (undo-tree-id1037 . -26) (undo-tree-id1038 . -26) (undo-tree-id1039 . -26) (undo-tree-id1040 . -26) (undo-tree-id1041 . -26) (undo-tree-id1042 . -26) (undo-tree-id1043 . -26) (undo-tree-id1044 . -26) (undo-tree-id1045 . -26) (undo-tree-id1046 . -26) (undo-tree-id1047 . -26) (undo-tree-id1048 . -26) (undo-tree-id1049 . -26) (undo-tree-id1050 . -26) (undo-tree-id1051 . -26) (undo-tree-id1052 . -26) (undo-tree-id1053 . -26) (undo-tree-id1054 . -26) (undo-tree-id1055 . -26) (undo-tree-id1056 . -26) (undo-tree-id1057 . -26) (undo-tree-id1058 . -26) (nil rear-nonsticky t 2620 . 2621)) (25608 22987 472954 111000) 0 nil])
([nil nil ((2266 . 2275)) nil (25608 23480 232989 56000) 0 nil])
([nil nil ((2621 . 2630)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 2621) (undo-tree-id1015 . -9) (undo-tree-id1016 . -9) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -9) (undo-tree-id1020 . -9) (undo-tree-id1021 . -9) (undo-tree-id1022 . -9) (undo-tree-id1023 . -9) (undo-tree-id1024 . -9) (undo-tree-id1025 . -9) (undo-tree-id1026 . -9) (undo-tree-id1027 . -1) (undo-tree-id1028 . -9) (undo-tree-id1029 . -9) (undo-tree-id1030 . -9) (undo-tree-id1031 . -9) (undo-tree-id1032 . -9) (undo-tree-id1033 . -9)) (25608 22987 287621 922000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2282) (2281 . 2282) (2280 . 2282) (#("\"" 0 1 (fontified nil)) . -2280) (2275 . 2281)) nil (25608 23480 232987 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2666 . 2667) (nil fontified nil 2665 . 2667) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (nil fontified nil 2660 . 2661) (nil fontified nil 2658 . 2660) (nil fontified nil 2651 . 2658) (nil fontified nil 2643 . 2651) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2634 . 2641) (nil fontified nil 2632 . 2634) (nil fontified nil 2630 . 2632) (2630 . 2667)) ((#("cd $zeekPath
        ./zeekctl deploy" 0 2 (fontified nil face font-lock-builtin-face) 2 4 (fontified nil) 4 11 (fontified nil face font-lock-variable-name-face) 11 12 (rear-nonsticky t fontified nil face font-lock-variable-name-face) 12 13 (fontified nil) 13 21 (fontified nil) 21 28 (fontified nil) 28 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil rear-nonsticky nil)) . 2630) (undo-tree-id1012 . -37) (undo-tree-id1013 . -13) (undo-tree-id1014 . -13) (nil fontified t 2642 . 2643) (nil rear-nonsticky t 2666 . 2667)) (25608 22987 287198 636000) 0 nil])
([nil nil ((2281 . 2300)) nil (25608 23480 232986 70000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -2298) (undo-tree-id1574 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2299) (undo-tree-id1575 . -1) 2300) nil (25608 23480 232984 667000) 0 nil])
([nil nil ((2298 . 2303)) nil (25608 23480 232981 242000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2302) (undo-tree-id1573 . -1) 2303) nil (25608 23480 232980 209000) 0 nil])
([nil nil ((2357 . 2366)) nil (25608 23480 232978 7000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2418 . 2419) (nil fontified nil 2418 . 2419) (nil fontified nil 2410 . 2418) (nil fontified nil 2395 . 2410) (nil fontified nil 2382 . 2395) (nil fontified nil 2381 . 2382) (nil fontified nil 2380 . 2381) (nil fontified nil 2370 . 2380) (nil fontified nil 2366 . 2370) (2366 . 2419)) nil (25608 23480 232976 507000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2366) 2381) nil (25608 23480 232973 669000) 0 nil])
([nil nil ((2357 . 2366)) nil (25608 23480 232972 539000) 0 nil])
([nil nil ((2366 . 2371)) nil (25608 23480 232971 655000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2367) (undo-tree-id1569 . -1) (#("c" 0 1 (fontified t)) . -2368) (undo-tree-id1570 . -1) (#("h" 0 1 (fontified t)) . -2369) (undo-tree-id1571 . -1) (#("o" 0 1 (fontified t)) . -2370) (undo-tree-id1572 . -1) 2371) nil (25608 23480 232970 8000) 0 nil])
([nil nil ((2371 . 2373) (#("\"" 0 1 (fontified nil)) . -2371) (2367 . 2372)) nil (25608 23480 232963 967000) 0 nil])
([nil nil ((2372 . 2387)) nil (25608 23480 232962 701000) 0 nil])
([nil nil ((2408 . 2417)) nil (25608 23480 232961 792000) 0 nil])
([nil nil ((2418 . 2424) (2417 . 2419) (#("\"" 0 1 (fontified nil)) . -2417) (2417 . 2418)) nil (25608 23480 232960 643000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2417) (undo-tree-id1562 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2418) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2418) (undo-tree-id1563 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -2419) (undo-tree-id1564 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -2420) (undo-tree-id1565 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2421) (undo-tree-id1566 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2422) (undo-tree-id1567 . -1) (#("Z" 0 1 (fontified t face font-lock-string-face)) . -2423) (undo-tree-id1568 . -1) 2424) nil (25608 23480 232957 687000) 0 nil])
([nil nil ((2417 . 2419) (#("\"" 0 1 (fontified nil)) . -2417) (2417 . 2418)) nil (25608 23480 232947 770000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2417) (undo-tree-id1561 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2418)) nil (25608 23480 232946 225000) 0 nil])
([nil nil ((2417 . 2422)) nil (25608 23480 232944 35000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -2417) (undo-tree-id1556 . -1) (#("c" 0 1 (fontified t)) . -2418) (undo-tree-id1557 . -1) (#("h" 0 1 (fontified t)) . -2419) (undo-tree-id1558 . -1) (#("o" 0 1 (fontified t)) . -2420) (undo-tree-id1559 . -1) (#(" " 0 1 (fontified t)) . -2421) (undo-tree-id1560 . -1) 2422) nil (25608 23480 232942 216000) 0 nil])
([nil nil ((2423 . 2436) (2422 . 2424) (#("\"" 0 1 (fontified nil)) . -2422) (2417 . 2423)) nil (25608 23480 232934 871000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2435) (undo-tree-id1555 . -1) 2436) nil (25608 23480 232933 106000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face font-lock-string-face)) . 2380)) nil (25608 23480 232930 514000) 0 nil])
([nil nil ((2380 . 2381)) nil (25608 23480 232929 603000) 0 nil])
([nil nil ((2437 . 2445) (#("    " 0 4 (fontified defer)) . 2437) 2460) nil (25608 23480 232928 339000) 0 nil])
([nil nil ((2470 . 2475)) nil (25608 23480 232926 892000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2474) (undo-tree-id1554 . -1) 2475) nil (25608 23480 232925 457000) 0 nil])
([nil nil ((#("Z" 0 1 (fontified t face font-lock-string-face)) . -2470) (undo-tree-id1553 . -1) 2471) nil (25608 23480 232921 190000) 0 nil])
([nil nil ((2470 . 2471)) nil (25608 23480 232905 878000) 0 nil])
([nil nil ((3339 . 3340) (t 25608 23480 242164 294000)) nil (25608 23521 121252 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3388 . 3389) (nil fontified nil 3383 . 3389) (nil fontified nil 3381 . 3383) (nil fontified nil 3343 . 3381) (nil fontified nil 3340 . 3343) (3340 . 3389)) nil (25608 23521 121251 86000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t face font-lock-string-face)) . -3304) (undo-tree-id1699 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3305) (undo-tree-id1700 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3306) (undo-tree-id1701 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -3307) (undo-tree-id1702 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -3308) (undo-tree-id1703 . -1) 3309) nil (25608 23521 121247 874000) 0 nil])
([nil nil ((3310 . 3315)) nil (25608 23521 121239 634000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t face font-lock-string-face)) . -3354) (undo-tree-id1694 . -1) (#("e" 0 1 (fontified defer face font-lock-string-face)) . -3355) (undo-tree-id1695 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3356) (undo-tree-id1696 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -3357) (undo-tree-id1697 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -3358) (undo-tree-id1698 . -1) 3359) nil (25608 23521 121237 724000) 0 nil])
([nil nil ((3360 . 3370)) nil (25608 23521 121230 337000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3369) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) 3370) nil (25608 23521 121228 708000) 0 nil])
([nil nil ((3318 . 3324)) nil (25608 23521 121224 789000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3322) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3323) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) 3324) nil (25608 23521 121348 180000) 0 nil])
([nil nil ((3276 . 3282)) nil (25608 23557 881648 159000) 0 nil] [nil nil ((3279 . 3282)) ((#("   " 0 3 (fontified t face font-lock-string-face)) . 3279) (undo-tree-id1704 . -3)) (25608 23521 121128 164000) 0 nil])
([nil nil ((3181 . 3185)) nil (25608 23557 881646 940000) 0 nil])
nil
([nil nil ((3104 . 3110)) nil (25608 23557 881645 758000) 0 nil])
([nil nil ((3024 . 3037) (#("         " 0 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 9 (fontified t face font-lock-string-face)) . 3024) (undo-tree-id1715 . -9) 3033) nil (25608 23557 881643 565000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 3112) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3112)) nil (25608 23557 881635 157000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 3292) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3292)) nil (25608 23557 881630 951000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t face font-lock-string-face)) . -3400) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3401) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3402) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -3403) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 3404) nil (25608 23557 881623 118000) 0 nil])
([nil nil ((3400 . 3409)) nil (25608 23557 881571 615000) 0 nil])
([nil current ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3408) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) 3409) nil (25608 23557 881566 103000) 0 nil])
nil
