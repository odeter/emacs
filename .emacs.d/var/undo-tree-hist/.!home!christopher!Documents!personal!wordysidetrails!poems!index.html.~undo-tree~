(undo-tree-save-format-version . 1)
"6ce3ab9eecfe083e078bc6dfd3c3416262e40a9e"
[nil nil nil nil (25670 61626 684515 196000) 0 nil]
([nil nil ((784 . 791) (t 25669 33215 395490 39000)) nil (25670 61626 684513 681000) 0 nil])
([nil nil ((791 . 796)) nil (25670 61626 684512 566000) 0 nil])
([nil nil ((796 . 803)) nil (25670 61626 684511 660000) 0 nil])
([nil nil ((#("
      <br/>" 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 8 10 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br")) . 784) (undo-tree-id8 . -1) (undo-tree-id9 . -12) (undo-tree-id10 . -12) (undo-tree-id11 . -12)) nil (25670 61684 674174 886000) 0 nil])
([nil nil ((784 . 785)) nil (25670 61696 946303 543000) 0 nil] [nil nil ((#("&middot;" 0 8 (font-lock-face (web-mode-html-entity-face))) . 726) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8)) ((726 . 734)) (25670 61684 345708 31000) 0 nil])
([nil nil ((nil rear-nonsticky nil 792 . 793) (nil font-lock-face (web-mode-html-entity-face) 785 . 793) (785 . 793)) nil (25670 61696 946302 516000) 0 nil])
([nil nil ((nil rear-nonsticky nil 803 . 804) (nil block-side t 803 . 804) (nil block-end t 803 . 804) (nil block-token delimiter-end 803 . 804) (nil font-lock-face web-mode-block-delimiter-face 803 . 804) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 803 . 804) (nil block-side t 802 . 803) (nil block-token delimiter-end 802 . 803) (nil font-lock-face web-mode-block-delimiter-face 802 . 803) (nil block-side t 801 . 802) (nil block-side t 789 . 801) (nil face web-mode-variable-name-face 789 . 801) (nil block-side t 788 . 789) (nil block-side t 781 . 788) (nil face web-mode-variable-name-face 781 . 788) (nil block-side t 780 . 781) (nil block-side t 766 . 780) (nil face web-mode-variable-name-face 766 . 780) (nil block-side t 765 . 766) (nil block-side t 758 . 765) (nil face web-mode-block-control-face 758 . 765) (nil block-side t 757 . 758) (nil block-side t 756 . 757) (nil block-token delimiter-beg 756 . 757) (nil font-lock-face web-mode-block-delimiter-face 756 . 757) (nil block-beg 0 755 . 756) (nil block-controls 0 755 . 756) (nil block-side t 755 . 756) (nil block-token delimiter-beg 755 . 756) (nil font-lock-face web-mode-block-delimiter-face 755 . 756) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 755 . 756) (nil tag-name "i" 753 . 754) (nil tag-type end 753 . 754) (nil tag-end t 753 . 754) (nil font-lock-face web-mode-html-tag-bracket-face 753 . 754) (nil tag-name "i" 752 . 753) (nil tag-type end 752 . 753) (nil font-lock-face web-mode-html-tag-face 752 . 753) (nil tag-name "i" 751 . 752) (nil tag-type end 751 . 752) (nil font-lock-face web-mode-html-tag-bracket-face 751 . 752) (nil tag-name "i" 750 . 751) (nil tag-type end 750 . 751) (nil tag-beg 20 750 . 751) (nil font-lock-face web-mode-html-tag-bracket-face 750 . 751) (nil tag-name "i" 749 . 750) (nil tag-type start 749 . 750) (nil tag-end t 749 . 750) (nil font-lock-face web-mode-html-tag-bracket-face 749 . 750) (nil tag-attr t 748 . 749) (nil tag-attr-end 5 748 . 749) (nil tag-name "i" 748 . 749) (nil tag-type start 748 . 749) (nil font-lock-face web-mode-html-attr-value-face 748 . 749) (nil tag-attr t 735 . 748) (nil tag-name "i" 735 . 748) (nil tag-type start 735 . 748) (nil font-lock-face web-mode-html-attr-value-face 735 . 748) (nil tag-attr t 734 . 735) (nil tag-name "i" 734 . 735) (nil tag-type start 734 . 735) (nil font-lock-face web-mode-html-attr-equal-face 734 . 735) (nil tag-attr t 730 . 734) (nil tag-name "i" 730 . 734) (nil tag-type start 730 . 734) (nil font-lock-face web-mode-html-attr-name-face 730 . 734) (nil tag-attr-beg 0 729 . 730) (nil tag-attr t 729 . 730) (nil tag-name "i" 729 . 730) (nil tag-type start 729 . 730) (nil font-lock-face web-mode-html-attr-name-face 729 . 730) (nil tag-name "i" 728 . 729) (nil tag-type start 728 . 729) (nil tag-name "i" 727 . 728) (nil tag-type start 727 . 728) (nil font-lock-face web-mode-html-tag-face 727 . 728) (nil tag-name "i" 726 . 727) (nil tag-type start 726 . 727) (nil tag-beg 17 726 . 727) (nil font-lock-face web-mode-html-tag-bracket-face 726 . 727) (726 . 804)) ((#("<i class=\"fas fa-clock\"></i> {% include read_time.html content=page.content %}" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 2 3 (tag-type start tag-name "i") 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 4 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 9 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 26 27 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 29 30 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 30 31 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 31 32 (block-side t) 32 39 (face web-mode-block-control-face block-side t) 39 40 (block-side t) 40 54 (face web-mode-variable-name-face block-side t) 54 55 (block-side t) 55 62 (face web-mode-variable-name-face block-side t) 62 63 (block-side t) 63 75 (face web-mode-variable-name-face block-side t) 75 76 (block-side t) 76 77 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 77 78 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t rear-nonsticky nil)) . 726) (undo-tree-id31 . -28) (nil tag-name "i" 726 . 727) (nil tag-name "i" 727 . 728) (nil tag-name "i" 728 . 729) (nil tag-name "i" 729 . 730) (nil tag-name "i" 730 . 734) (nil tag-name "i" 734 . 735) (nil tag-name "i" 735 . 748) (nil tag-name "i" 748 . 749) (nil tag-name "i" 749 . 750) (nil tag-name "i" 750 . 751) (nil tag-name "i" 751 . 752) (nil tag-name "i" 752 . 753) (nil tag-name "i" 753 . 754) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 755 . 756) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 803 . 804) (nil rear-nonsticky t 803 . 804)) (25670 61684 34632 930000) 0 nil])
([nil nil ((793 . 794)) nil (25670 61696 946301 54000) 0 nil])
([nil nil ((854 . 855)) ((#(" " 0 1 (face (whitespace-line))) . 854) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1)) (25670 61683 982987 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 821 . 822) (nil block-side t 821 . 822) (nil block-end t 821 . 822) (nil block-token delimiter-end 821 . 822) (nil font-lock-face web-mode-block-delimiter-face 821 . 822) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 821 . 822) (nil block-side t 820 . 821) (nil block-token delimiter-end 820 . 821) (nil font-lock-face web-mode-block-delimiter-face 820 . 821) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 820 . 821) (nil block-side t 819 . 820) (nil block-side t 815 . 819) (nil block-token string 815 . 819) (nil font-lock-face web-mode-block-string-face 815 . 819) (nil block-side t 813 . 815) (nil block-side t 809 . 813) (nil face web-mode-filter-face 809 . 813) (nil block-side t 806 . 809) (nil block-side t 802 . 806) (nil face web-mode-variable-name-face 802 . 806) (nil block-side t 801 . 802) (nil block-side t 797 . 801) (nil face web-mode-variable-name-face 797 . 801) (nil block-side t 796 . 797) (nil block-side t 795 . 796) (nil block-token delimiter-beg 795 . 796) (nil font-lock-face web-mode-block-delimiter-face 795 . 796) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 795 . 796) (nil block-beg 0 794 . 795) (nil block-controls 0 794 . 795) (nil block-side t 794 . 795) (nil block-token delimiter-beg 794 . 795) (nil font-lock-face web-mode-block-delimiter-face 794 . 795) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 794 . 795) (794 . 822)) nil (25670 61696 946298 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 913 . 914) (nil block-side t 913 . 914) (nil block-end t 913 . 914) (nil block-token delimiter-end 913 . 914) (nil font-lock-face web-mode-block-delimiter-face 913 . 914) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 913 . 914) (nil block-side t 912 . 913) (nil block-token delimiter-end 912 . 913) (nil font-lock-face web-mode-block-delimiter-face 912 . 913) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 912 . 913) (nil block-side t 911 . 912) (nil face (whitespace-line) 911 . 912) (nil block-side t 907 . 911) (nil block-token string 907 . 911) (nil font-lock-face web-mode-block-string-face 907 . 911) (nil face (whitespace-line web-mode-block-string-face) 907 . 911) (nil block-side t 905 . 907) (nil face (whitespace-line) 905 . 907) (nil block-side t 901 . 905) (nil face (whitespace-line web-mode-filter-face) 901 . 905) (nil block-side t 898 . 901) (nil face (whitespace-line) 898 . 901) (nil block-side t 894 . 898) (nil face (whitespace-line web-mode-variable-name-face) 894 . 898) (nil block-side t 893 . 894) (nil face (whitespace-line) 893 . 894) (nil block-side t 889 . 893) (nil face (whitespace-line web-mode-variable-name-face) 889 . 893) (nil block-side t 888 . 889) (nil face (whitespace-line) 888 . 889) (nil block-side t 887 . 888) (nil block-token delimiter-beg 887 . 888) (nil font-lock-face web-mode-block-delimiter-face 887 . 888) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 887 . 888) (nil block-beg 0 886 . 887) (nil block-controls 0 886 . 887) (nil block-side t 886 . 887) (nil block-token delimiter-beg 886 . 887) (nil font-lock-face web-mode-block-delimiter-face 886 . 887) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 886 . 887) (nil tag-name "i" 885 . 886) (nil tag-type end 885 . 886) (nil tag-end t 885 . 886) (nil font-lock-face web-mode-html-tag-bracket-face 885 . 886) (nil face (whitespace-line web-mode-html-tag-bracket-face) 885 . 886) (nil tag-name "i" 884 . 885) (nil tag-type end 884 . 885) (nil font-lock-face web-mode-html-tag-face 884 . 885) (nil face (whitespace-line web-mode-html-tag-face) 884 . 885) (nil tag-name "i" 883 . 884) (nil tag-type end 883 . 884) (nil font-lock-face web-mode-html-tag-bracket-face 883 . 884) (nil face (whitespace-line web-mode-html-tag-bracket-face) 883 . 884) (nil tag-name "i" 882 . 883) (nil tag-type end 882 . 883) (nil tag-beg 20 882 . 883) (nil font-lock-face web-mode-html-tag-bracket-face 882 . 883) (nil face (whitespace-line web-mode-html-tag-bracket-face) 882 . 883) (nil tag-name "i" 881 . 882) (nil tag-type start 881 . 882) (nil tag-end t 881 . 882) (nil font-lock-face web-mode-html-tag-bracket-face 881 . 882) (nil face (whitespace-line web-mode-html-tag-bracket-face) 881 . 882) (nil tag-attr t 880 . 881) (nil tag-attr-end 5 880 . 881) (nil tag-name "i" 880 . 881) (nil tag-type start 880 . 881) (nil font-lock-face web-mode-html-attr-value-face 880 . 881) (nil face (whitespace-line web-mode-html-attr-value-face) 880 . 881) (nil tag-attr t 864 . 880) (nil tag-name "i" 864 . 880) (nil tag-type start 864 . 880) (nil font-lock-face web-mode-html-attr-value-face 864 . 880) (nil face (whitespace-line web-mode-html-attr-value-face) 864 . 880) (nil tag-attr t 863 . 864) (nil tag-name "i" 863 . 864) (nil tag-type start 863 . 864) (nil font-lock-face web-mode-html-attr-equal-face 863 . 864) (nil face (whitespace-line web-mode-html-attr-equal-face) 863 . 864) (nil tag-attr t 859 . 863) (nil tag-name "i" 859 . 863) (nil tag-type start 859 . 863) (nil font-lock-face web-mode-html-attr-name-face 859 . 863) (nil face (whitespace-line web-mode-html-attr-name-face) 859 . 863) (nil tag-attr-beg 0 858 . 859) (nil tag-attr t 858 . 859) (nil tag-name "i" 858 . 859) (nil tag-type start 858 . 859) (nil font-lock-face web-mode-html-attr-name-face 858 . 859) (nil face (whitespace-line web-mode-html-attr-name-face) 858 . 859) (nil tag-name "i" 857 . 858) (nil tag-type start 857 . 858) (nil face (whitespace-line) 857 . 858) (nil tag-name "i" 856 . 857) (nil tag-type start 856 . 857) (nil font-lock-face web-mode-html-tag-face 856 . 857) (nil face (whitespace-line web-mode-html-tag-face) 856 . 857) (nil tag-name "i" 855 . 856) (nil tag-type start 855 . 856) (nil tag-beg 17 855 . 856) (nil font-lock-face web-mode-html-tag-bracket-face 855 . 856) (nil face (whitespace-line web-mode-html-tag-bracket-face) 855 . 856) (855 . 914)) ((#("<i class=\"fas fa-tag mr-1\"></i>{{ page.tags | join: \", \" }}" 0 1 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 1 2 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 2 3 (face (whitespace-line) tag-type start tag-name "i") 3 4 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 4 7 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 7 8 (face (whitespace-line web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 8 9 (face (whitespace-line web-mode-html-attr-equal-face) font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 9 25 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 25 26 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 26 27 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 27 28 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 28 29 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 29 30 (face (whitespace-line web-mode-html-tag-face) font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 30 31 (face (whitespace-line web-mode-html-tag-bracket-face) font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i") 31 32 (face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 32 33 (face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 33 34 (face (whitespace-line) block-side t) 34 35 (face (whitespace-line web-mode-variable-name-face) block-side t) 35 36 (face (whitespace-line web-mode-variable-name-face) block-side t) 36 37 (face (whitespace-line web-mode-variable-name-face) block-side t) 37 38 (face (whitespace-line web-mode-variable-name-face) block-side t) 38 39 (face (whitespace-line) block-side t) 39 43 (face (whitespace-line web-mode-variable-name-face) block-side t) 43 46 (face (whitespace-line) block-side t) 46 50 (face (whitespace-line web-mode-filter-face) block-side t) 50 52 (face (whitespace-line) block-side t) 52 56 (face (whitespace-line web-mode-block-string-face) font-lock-face web-mode-block-string-face block-token string block-side t) 56 57 (face (whitespace-line) block-side t) 57 58 (face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 58 59 (face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t rear-nonsticky nil)) . 855) (undo-tree-id22 . -38) (undo-tree-id23 . -37) (nil face (whitespace-line web-mode-html-tag-bracket-face) 855 . 856) (nil tag-name "i" 855 . 856) (nil face (whitespace-line web-mode-html-tag-face) 856 . 857) (nil tag-name "i" 856 . 857) (nil face (whitespace-line) 857 . 858) (nil tag-name "i" 857 . 858) (nil face (whitespace-line web-mode-html-attr-name-face) 858 . 859) (nil tag-name "i" 858 . 859) (nil face (whitespace-line web-mode-html-attr-name-face) 862 . 863) (nil face (whitespace-line web-mode-html-attr-name-face) 859 . 862) (nil tag-name "i" 862 . 863) (nil tag-name "i" 859 . 862) (nil face (whitespace-line web-mode-html-attr-equal-face) 863 . 864) (nil tag-name "i" 863 . 864) (nil face (whitespace-line web-mode-html-attr-value-face) 864 . 880) (nil tag-name "i" 864 . 880) (nil face (whitespace-line web-mode-html-attr-value-face) 880 . 881) (nil tag-name "i" 880 . 881) (nil face (whitespace-line web-mode-html-tag-bracket-face) 881 . 882) (nil tag-name "i" 881 . 882) (nil face (whitespace-line web-mode-html-tag-bracket-face) 882 . 883) (nil tag-name "i" 882 . 883) (nil face (whitespace-line web-mode-html-tag-bracket-face) 883 . 884) (nil tag-name "i" 883 . 884) (nil face (whitespace-line web-mode-html-tag-face) 884 . 885) (nil tag-name "i" 884 . 885) (nil face (whitespace-line web-mode-html-tag-bracket-face) 885 . 886) (nil tag-name "i" 885 . 886) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 886 . 887) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 887 . 888) (nil face (whitespace-line) 888 . 889) (nil face (whitespace-line web-mode-variable-name-face) 892 . 893) (nil face (whitespace-line web-mode-variable-name-face) 891 . 892) (nil face (whitespace-line web-mode-variable-name-face) 890 . 891) (nil face (whitespace-line web-mode-variable-name-face) 889 . 890) (nil face (whitespace-line) 893 . 894) (nil face (whitespace-line web-mode-variable-name-face) 894 . 898) (nil face (whitespace-line) 898 . 901) (nil face (whitespace-line web-mode-filter-face) 901 . 905) (nil face (whitespace-line) 905 . 907) (nil face (whitespace-line web-mode-block-string-face) 907 . 911) (nil face (whitespace-line) 911 . 912) (nil face (rainbow-delimiters-depth-2-face whitespace-line web-mode-block-delimiter-face) 912 . 913) (nil face (rainbow-delimiters-depth-1-face whitespace-line web-mode-block-delimiter-face) 913 . 914) (nil rear-nonsticky t 913 . 914)) (25670 61683 715676 306000) 0 nil])
([nil nil ((#("a" 0 1 (face web-mode-variable-name-face block-side t)) . -798) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("g" 0 1 (face web-mode-variable-name-face block-side t)) . -799) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (face web-mode-variable-name-face block-side t)) . -800) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 801) nil (25670 61696 946289 724000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line web-mode-variable-name-face) block-side t)) . -892) (undo-tree-id4 . -1) 893) ((892 . 893)) (25670 61683 530182 720000) 0 nil])
([nil nil ((798 . 801)) nil (25670 61696 946282 86000) 0 nil])
([nil nil ((#("a" 0 1 (face (whitespace-line web-mode-variable-name-face) block-side t)) . -890) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("g" 0 1 (face (whitespace-line web-mode-variable-name-face) block-side t)) . -891) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 892) ((890 . 892)) (25670 61683 272001 583000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-variable-name-face block-side t)) . -798) (undo-tree-id32 . -1) (#("o" 0 1 (face web-mode-variable-name-face block-side t)) . -799) (undo-tree-id33 . -1) (#("s" 0 1 (face web-mode-variable-name-face block-side t)) . -800) (undo-tree-id34 . -1) 801) nil (25670 61696 946280 81000) 0 nil])
([nil nil ((890 . 893)) ((#("ost" 0 3 (face (whitespace-line web-mode-variable-name-face) block-side t)) . 890) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3)) (25670 61682 939996 621000) 0 nil])
([nil nil ((798 . 801)) nil (25670 61696 946266 612000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing)) . -915) 893) ((915 . 921) (t 25670 61626 689823 662000)) (25670 61682 690379 267000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing)) . -823) 801) nil (25670 61696 946259 155000) 0 nil])
([nil nil ((#("<i class=\"fas fa-clock\"></i>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 2 3 (tag-type start tag-name "i") 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 4 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 9 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 26 27 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 27 28 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i")) . 726) (undo-tree-id12 . -28) (undo-tree-id13 . -28) (t 25670 61626 689823 662000)) ((726 . 754)) (25670 61682 688682 791000) 0 nil])
([nil nil ((1440 . 1442) (t 25670 61696 954288 649000)) nil (25672 17898 972139 138000) 0 nil])
nil
([nil nil ((1442 . 1459)) nil (25672 17898 972137 914000) 0 nil])
([nil nil ((1452 . 1454) (#("  " 0 2 (part-side javascript face whitespace-trailing)) . 1451) (undo-tree-id13 . -2) (1451 . 1454) (#("  " 0 2 (part-side javascript face whitespace-trailing)) . 1451) (1451 . 1453) (1450 . 1452)) nil (25672 17898 972136 151000) 0 nil])
([nil nil ((1451 . 1453)) nil (25672 17898 972132 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1778 . 1779) (nil part-side javascript 1778 . 1779) (nil face (rainbow-delimiters-depth-1-face) 1778 . 1779) (nil part-side javascript 1776 . 1778) (nil part-side javascript 1775 . 1776) (nil face (rainbow-delimiters-depth-2-face) 1775 . 1776) (nil part-side javascript 1771 . 1775) (nil part-side javascript 1770 . 1771) (nil syntax-table (12) 1770 . 1771) (nil part-side javascript 1757 . 1770) (nil part-token comment 1757 . 1770) (nil font-lock-face web-mode-javascript-comment-face 1757 . 1770) (nil part-side javascript 1756 . 1757) (nil part-token comment 1756 . 1757) (nil syntax-table (11) 1756 . 1757) (nil font-lock-face web-mode-javascript-comment-face 1756 . 1757) (nil part-side javascript 1748 . 1756) (nil part-side javascript 1747 . 1748) (nil face (rainbow-delimiters-depth-2-face) 1747 . 1748) (nil part-side javascript 1746 . 1747) (nil part-side javascript 1745 . 1746) (nil face (rainbow-delimiters-depth-2-face) 1745 . 1746) (nil part-side javascript 1744 . 1745) (nil part-token string 1744 . 1745) (nil syntax-table (15) 1744 . 1745) (nil font-lock-face web-mode-javascript-string-face 1744 . 1745) (nil part-side javascript 1742 . 1744) (nil part-token string 1742 . 1744) (nil font-lock-face web-mode-javascript-string-face 1742 . 1744) (nil part-side javascript 1741 . 1742) (nil part-token string 1741 . 1742) (nil syntax-table (15) 1741 . 1742) (nil font-lock-face web-mode-javascript-string-face 1741 . 1742) (nil part-side javascript 1728 . 1741) (nil part-side javascript 1727 . 1728) (nil face (rainbow-delimiters-depth-2-face) 1727 . 1728) (nil part-side javascript 1726 . 1727) (nil part-side javascript 1724 . 1726) (nil face web-mode-keyword-face 1724 . 1726) (nil part-side javascript 1723 . 1724) (nil part-side javascript 1719 . 1723) (nil face web-mode-keyword-face 1719 . 1723) (nil part-side javascript 1714 . 1719) (nil part-side javascript 1713 . 1714) (nil face (rainbow-delimiters-depth-2-face) 1713 . 1714) (nil part-side javascript 1709 . 1713) (nil part-side javascript 1708 . 1709) (nil syntax-table (12) 1708 . 1709) (nil part-side javascript 1696 . 1708) (nil part-token comment 1696 . 1708) (nil font-lock-face web-mode-javascript-comment-face 1696 . 1708) (nil part-side javascript 1695 . 1696) (nil part-token comment 1695 . 1696) (nil syntax-table (11) 1695 . 1696) (nil font-lock-face web-mode-javascript-comment-face 1695 . 1696) (nil part-side javascript 1687 . 1695) (nil part-side javascript 1686 . 1687) (nil face (rainbow-delimiters-depth-2-face) 1686 . 1687) (nil part-side javascript 1685 . 1686) (nil part-side javascript 1684 . 1685) (nil face (rainbow-delimiters-depth-2-face) 1684 . 1685) (nil part-side javascript 1683 . 1684) (nil part-token string 1683 . 1684) (nil syntax-table (15) 1683 . 1684) (nil font-lock-face web-mode-javascript-string-face 1683 . 1684) (nil part-side javascript 1681 . 1683) (nil part-token string 1681 . 1683) (nil font-lock-face web-mode-javascript-string-face 1681 . 1683) (nil part-side javascript 1680 . 1681) (nil part-token string 1680 . 1681) (nil syntax-table (15) 1680 . 1681) (nil font-lock-face web-mode-javascript-string-face 1680 . 1681) (nil part-side javascript 1667 . 1680) (nil part-side javascript 1666 . 1667) (nil face (rainbow-delimiters-depth-2-face) 1666 . 1667) (nil part-side javascript 1665 . 1666) (nil part-side javascript 1663 . 1665) (nil face web-mode-keyword-face 1663 . 1665) (nil part-side javascript 1662 . 1663) (nil part-side javascript 1658 . 1662) (nil face web-mode-keyword-face 1658 . 1662) (nil part-side javascript 1653 . 1658) (nil part-side javascript 1652 . 1653) (nil face (rainbow-delimiters-depth-2-face) 1652 . 1653) (nil part-side javascript 1648 . 1652) (nil part-side javascript 1647 . 1648) (nil syntax-table (12) 1647 . 1648) (nil part-side javascript 1635 . 1647) (nil part-token comment 1635 . 1647) (nil font-lock-face web-mode-javascript-comment-face 1635 . 1647) (nil part-side javascript 1634 . 1635) (nil part-token comment 1634 . 1635) (nil syntax-table (11) 1634 . 1635) (nil font-lock-face web-mode-javascript-comment-face 1634 . 1635) (nil part-side javascript 1625 . 1634) (nil part-side javascript 1624 . 1625) (nil face (rainbow-delimiters-depth-2-face) 1624 . 1625) (nil part-side javascript 1623 . 1624) (nil part-side javascript 1622 . 1623) (nil face (rainbow-delimiters-depth-2-face) 1622 . 1623) (nil part-side javascript 1621 . 1622) (nil part-token string 1621 . 1622) (nil syntax-table (15) 1621 . 1622) (nil font-lock-face web-mode-javascript-string-face 1621 . 1622) (nil part-side javascript 1619 . 1621) (nil part-token string 1619 . 1621) (nil font-lock-face web-mode-javascript-string-face 1619 . 1621) (nil part-side javascript 1618 . 1619) (nil part-token string 1618 . 1619) (nil syntax-table (15) 1618 . 1619) (nil font-lock-face web-mode-javascript-string-face 1618 . 1619) (nil part-side javascript 1605 . 1618) (nil part-side javascript 1604 . 1605) (nil face (rainbow-delimiters-depth-2-face) 1604 . 1605) (nil part-side javascript 1603 . 1604) (nil part-side javascript 1601 . 1603) (nil face web-mode-keyword-face 1601 . 1603) (nil part-side javascript 1600 . 1601) (nil part-side javascript 1596 . 1600) (nil face web-mode-keyword-face 1596 . 1600) (nil part-side javascript 1591 . 1596) (nil part-side javascript 1590 . 1591) (nil face (rainbow-delimiters-depth-2-face) 1590 . 1591) (nil part-side javascript 1586 . 1590) (nil part-side javascript 1585 . 1586) (nil syntax-table (12) 1585 . 1586) (nil part-side javascript 1575 . 1585) (nil part-token comment 1575 . 1585) (nil font-lock-face web-mode-javascript-comment-face 1575 . 1585) (nil part-side javascript 1574 . 1575) (nil part-token comment 1574 . 1575) (nil syntax-table (11) 1574 . 1575) (nil font-lock-face web-mode-javascript-comment-face 1574 . 1575) (nil part-side javascript 1565 . 1574) (nil part-side javascript 1564 . 1565) (nil face (rainbow-delimiters-depth-2-face) 1564 . 1565) (nil part-side javascript 1563 . 1564) (nil part-side javascript 1562 . 1563) (nil face (rainbow-delimiters-depth-2-face) 1562 . 1563) (nil part-side javascript 1561 . 1562) (nil part-token string 1561 . 1562) (nil syntax-table (15) 1561 . 1562) (nil font-lock-face web-mode-javascript-string-face 1561 . 1562) (nil part-side javascript 1559 . 1561) (nil part-token string 1559 . 1561) (nil font-lock-face web-mode-javascript-string-face 1559 . 1561) (nil part-side javascript 1558 . 1559) (nil part-token string 1558 . 1559) (nil syntax-table (15) 1558 . 1559) (nil font-lock-face web-mode-javascript-string-face 1558 . 1559) (nil part-side javascript 1545 . 1558) (nil part-side javascript 1544 . 1545) (nil face (rainbow-delimiters-depth-2-face) 1544 . 1545) (nil part-side javascript 1543 . 1544) (nil part-side javascript 1541 . 1543) (nil face web-mode-keyword-face 1541 . 1543) (nil part-side javascript 1507 . 1541) (nil part-side javascript 1506 . 1507) (nil face (rainbow-delimiters-depth-1-face) 1506 . 1507) (nil part-side javascript 1505 . 1506) (nil part-side javascript 1504 . 1505) (nil face (rainbow-delimiters-depth-1-face) 1504 . 1505) (nil part-side javascript 1503 . 1504) (nil part-side javascript 1502 . 1503) (nil face (rainbow-delimiters-depth-1-face) 1502 . 1503) (nil part-side javascript 1494 . 1502) (nil face web-mode-function-name-face 1494 . 1502) (nil part-side javascript 1493 . 1494) (nil part-side javascript 1485 . 1493) (nil face web-mode-keyword-face 1485 . 1493) (nil part-side javascript 1453 . 1485) (1453 . 1779)) nil (25672 17898 972123 92000) 0 nil])
([nil nil ((1774 . 1776) (#(" " 0 1 (part-side javascript)) . -1752) (#(" " 0 1 (part-side javascript)) . -1692) (#("  " 0 2 (part-side javascript)) . -1632) (#("  " 0 2 (part-side javascript)) . -1574) (1485 . 1487) 1451) nil (25672 17898 972082 929000) 0 nil])
([nil nil ((#("
    else if (e.keyCode == '40') {
      // down arrow
    }" 0 1 (part-side javascript) 1 5 (part-side javascript) 5 9 (part-side javascript face web-mode-keyword-face) 9 10 (part-side javascript) 10 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-2-face)) 14 27 (part-side javascript) 27 28 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 28 30 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript face (rainbow-delimiters-depth-2-face)) 32 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-2-face)) 34 35 (part-side javascript) 35 41 (part-side javascript) 41 42 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 42 54 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 54 55 (part-side javascript syntax-table (12)) 55 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-2-face))) . 1591) (undo-tree-id10 . -1) (undo-tree-id11 . -60) (undo-tree-id12 . -60)) nil (25672 17898 972080 484000) 0 nil])
([nil nil ((#("
    if (e.keyCode == '38') {
      // up arrow
    }" 0 5 (part-side javascript) 5 7 (part-side javascript face web-mode-keyword-face) 7 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-2-face)) 9 22 (part-side javascript) 22 23 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 23 25 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 25 26 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 26 27 (part-side javascript face (rainbow-delimiters-depth-2-face)) 27 28 (part-side javascript) 28 29 (part-side javascript face (rainbow-delimiters-depth-2-face)) 29 30 (part-side javascript) 30 36 (part-side javascript) 36 37 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 37 47 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 47 48 (part-side javascript syntax-table (12)) 48 52 (part-side javascript) 52 53 (part-side javascript face (rainbow-delimiters-depth-2-face))) . 1538) (undo-tree-id6 . -1) (undo-tree-id7 . -53) (undo-tree-id8 . -53) (undo-tree-id9 . -53)) nil (25672 17898 972076 130000) 0 nil])
([nil nil ((#("lse " 0 3 (part-side javascript face web-mode-keyword-face) 3 4 (part-side javascript)) . 1544) (undo-tree-id4 . -4) (undo-tree-id5 . -4)) nil (25672 17898 972071 151000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript face web-mode-function-name-face)) . -1543) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1544) nil (25672 17898 972067 767000) 0 nil])
([nil nil ((1587 . 1594)) nil (25672 17898 972064 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1622 . 1623) (nil part-side javascript 1622 . 1623) (nil part-side javascript 1621 . 1622) (nil part-token string 1621 . 1622) (nil syntax-table (15) 1621 . 1622) (nil font-lock-face web-mode-javascript-string-face 1621 . 1622) (nil part-side javascript 1618 . 1621) (nil part-token string 1618 . 1621) (nil font-lock-face web-mode-javascript-string-face 1618 . 1621) (nil part-side javascript 1617 . 1618) (nil part-token string 1617 . 1618) (nil syntax-table (15) 1617 . 1618) (nil font-lock-face web-mode-javascript-string-face 1617 . 1618) (nil part-side javascript 1594 . 1617) (1594 . 1623)) nil (25672 17898 972062 737000) 0 nil])
([nil nil ((1684 . 1691)) nil (25672 17898 972058 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1719 . 1720) (nil part-side javascript 1719 . 1720) (nil part-side javascript 1718 . 1719) (nil part-token string 1718 . 1719) (nil syntax-table (15) 1718 . 1719) (nil font-lock-face web-mode-javascript-string-face 1718 . 1719) (nil part-side javascript 1715 . 1718) (nil part-token string 1715 . 1718) (nil font-lock-face web-mode-javascript-string-face 1715 . 1718) (nil part-side javascript 1714 . 1715) (nil part-token string 1714 . 1715) (nil syntax-table (15) 1714 . 1715) (nil font-lock-face web-mode-javascript-string-face 1714 . 1715) (nil part-side javascript 1691 . 1714) (1691 . 1720)) nil (25672 17898 972057 195000) 0 nil])
([nil nil ((#("..." 0 3 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 1618) (undo-tree-id0 . -3) (undo-tree-id1 . -3)) nil (25672 17898 973986 149000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1696 . 1697) (nil block-side t 1696 . 1697) (nil block-end t 1696 . 1697) (nil block-token delimiter-end 1696 . 1697) (nil part-side javascript 1696 . 1697) (nil part-token string 1696 . 1697) (nil font-lock-face web-mode-block-delimiter-face 1696 . 1697) (nil block-side t 1695 . 1696) (nil block-token delimiter-end 1695 . 1696) (nil part-side javascript 1695 . 1696) (nil part-token string 1695 . 1696) (nil font-lock-face web-mode-block-delimiter-face 1695 . 1696) (nil block-side t 1694 . 1695) (nil part-side javascript 1694 . 1695) (nil part-token string 1694 . 1695) (nil block-side t 1691 . 1694) (nil block-token string 1691 . 1694) (nil part-side javascript 1691 . 1694) (nil part-token string 1691 . 1694) (nil font-lock-face web-mode-block-string-face 1691 . 1694) (nil block-side t 1689 . 1691) (nil part-side javascript 1689 . 1691) (nil part-token string 1689 . 1691) (nil block-side t 1685 . 1689) (nil block-token string 1685 . 1689) (nil part-side javascript 1685 . 1689) (nil part-token string 1685 . 1689) (nil font-lock-face web-mode-block-string-face 1685 . 1689) (nil block-side t 1683 . 1685) (nil part-side javascript 1683 . 1685) (nil part-token string 1683 . 1685) (nil block-side t 1676 . 1683) (nil part-side javascript 1676 . 1683) (nil part-token string 1676 . 1683) (nil face web-mode-filter-face 1676 . 1683) (nil block-side t 1673 . 1676) (nil part-side javascript 1673 . 1676) (nil part-token string 1673 . 1676) (nil block-side t 1666 . 1673) (nil part-side javascript 1666 . 1673) (nil part-token string 1666 . 1673) (nil face web-mode-variable-name-face 1666 . 1673) (nil block-side t 1665 . 1666) (nil part-side javascript 1665 . 1666) (nil part-token string 1665 . 1666) (nil block-side t 1661 . 1665) (nil part-side javascript 1661 . 1665) (nil part-token string 1661 . 1665) (nil face web-mode-variable-name-face 1661 . 1665) (nil block-side t 1659 . 1661) (nil part-side javascript 1659 . 1661) (nil part-token string 1659 . 1661) (nil block-side t 1652 . 1659) (nil part-side javascript 1652 . 1659) (nil part-token string 1652 . 1659) (nil face web-mode-filter-face 1652 . 1659) (nil block-side t 1649 . 1652) (nil part-side javascript 1649 . 1652) (nil part-token string 1649 . 1652) (nil block-side t 1631 . 1649) (nil part-side javascript 1631 . 1649) (nil part-token string 1631 . 1649) (nil face web-mode-variable-name-face 1631 . 1649) (nil block-side t 1630 . 1631) (nil part-side javascript 1630 . 1631) (nil part-token string 1630 . 1631) (nil block-side t 1621 . 1630) (nil part-side javascript 1621 . 1630) (nil part-token string 1621 . 1630) (nil face web-mode-variable-name-face 1621 . 1630) (nil block-side t 1620 . 1621) (nil part-side javascript 1620 . 1621) (nil part-token string 1620 . 1621) (nil block-side t 1619 . 1620) (nil block-token delimiter-beg 1619 . 1620) (nil part-side javascript 1619 . 1620) (nil part-token string 1619 . 1620) (nil font-lock-face web-mode-block-delimiter-face 1619 . 1620) (nil block-beg 0 1618 . 1619) (nil block-controls 0 1618 . 1619) (nil block-side t 1618 . 1619) (nil block-token delimiter-beg 1618 . 1619) (nil part-side javascript 1618 . 1619) (nil part-token string 1618 . 1619) (nil font-lock-face web-mode-block-delimiter-face 1618 . 1619) (1618 . 1697)) nil (25672 17912 141152 645000) 0 nil] [nil nil ((nil rear-nonsticky nil 1646 . 1647) (nil part-side javascript 1646 . 1647) (nil part-token string 1646 . 1647) (nil font-lock-face web-mode-javascript-string-face 1646 . 1647) (nil part-side javascript 1645 . 1646) (nil part-token string 1645 . 1646) (nil syntax-table (15) 1645 . 1646) (nil font-lock-face web-mode-javascript-string-face 1645 . 1646) (nil part-side javascript 1642 . 1645) (nil part-side javascript 1641 . 1642) (nil part-token string 1641 . 1642) (nil syntax-table (15) 1641 . 1642) (nil font-lock-face web-mode-javascript-string-face 1641 . 1642) (nil part-side javascript 1618 . 1641) (nil part-token string 1618 . 1641) (nil font-lock-face web-mode-javascript-string-face 1618 . 1641) (1618 . 1647)) ((#("window.location.href = '...';" 0 23 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 27 (part-side javascript) 27 28 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 28 29 (rear-nonsticky nil part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 1618) (undo-tree-id14 . -29) (nil syntax-table (15) 1641 . 1642) (nil syntax-table (15) 1645 . 1646) (nil rear-nonsticky t 1646 . 1647)) (25672 17898 972031 301000) 0 nil])
([nil nil ((#("..." 0 3 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 1791) (undo-tree-id15 . -3) (undo-tree-id16 . -3)) nil (25672 17912 141133 1000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1865 . 1866) (nil block-side t 1865 . 1866) (nil block-end t 1865 . 1866) (nil block-token delimiter-end 1865 . 1866) (nil part-side javascript 1865 . 1866) (nil part-token string 1865 . 1866) (nil font-lock-face web-mode-block-delimiter-face 1865 . 1866) (nil block-side t 1864 . 1865) (nil block-token delimiter-end 1864 . 1865) (nil part-side javascript 1864 . 1865) (nil part-token string 1864 . 1865) (nil font-lock-face web-mode-block-delimiter-face 1864 . 1865) (nil block-side t 1863 . 1864) (nil part-side javascript 1863 . 1864) (nil part-token string 1863 . 1864) (nil block-side t 1860 . 1863) (nil block-token string 1860 . 1863) (nil part-side javascript 1860 . 1863) (nil part-token string 1860 . 1863) (nil font-lock-face web-mode-block-string-face 1860 . 1863) (nil block-side t 1858 . 1860) (nil part-side javascript 1858 . 1860) (nil part-token string 1858 . 1860) (nil block-side t 1854 . 1858) (nil block-token string 1854 . 1858) (nil part-side javascript 1854 . 1858) (nil part-token string 1854 . 1858) (nil font-lock-face web-mode-block-string-face 1854 . 1858) (nil block-side t 1852 . 1854) (nil part-side javascript 1852 . 1854) (nil part-token string 1852 . 1854) (nil block-side t 1845 . 1852) (nil part-side javascript 1845 . 1852) (nil part-token string 1845 . 1852) (nil face web-mode-filter-face 1845 . 1852) (nil block-side t 1842 . 1845) (nil part-side javascript 1842 . 1845) (nil part-token string 1842 . 1845) (nil block-side t 1835 . 1842) (nil part-side javascript 1835 . 1842) (nil part-token string 1835 . 1842) (nil face web-mode-variable-name-face 1835 . 1842) (nil block-side t 1834 . 1835) (nil part-side javascript 1834 . 1835) (nil part-token string 1834 . 1835) (nil block-side t 1830 . 1834) (nil part-side javascript 1830 . 1834) (nil part-token string 1830 . 1834) (nil face web-mode-variable-name-face 1830 . 1834) (nil block-side t 1828 . 1830) (nil part-side javascript 1828 . 1830) (nil part-token string 1828 . 1830) (nil block-side t 1821 . 1828) (nil part-side javascript 1821 . 1828) (nil part-token string 1821 . 1828) (nil face web-mode-filter-face 1821 . 1828) (nil block-side t 1818 . 1821) (nil part-side javascript 1818 . 1821) (nil part-token string 1818 . 1821) (nil block-side t 1804 . 1818) (nil part-side javascript 1804 . 1818) (nil part-token string 1804 . 1818) (nil face web-mode-variable-name-face 1804 . 1818) (nil block-side t 1803 . 1804) (nil part-side javascript 1803 . 1804) (nil part-token string 1803 . 1804) (nil block-side t 1794 . 1803) (nil part-side javascript 1794 . 1803) (nil part-token string 1794 . 1803) (nil face web-mode-variable-name-face 1794 . 1803) (nil block-side t 1793 . 1794) (nil part-side javascript 1793 . 1794) (nil part-token string 1793 . 1794) (nil block-side t 1792 . 1793) (nil block-token delimiter-beg 1792 . 1793) (nil part-side javascript 1792 . 1793) (nil part-token string 1792 . 1793) (nil font-lock-face web-mode-block-delimiter-face 1792 . 1793) (nil block-beg 0 1791 . 1792) (nil block-controls 0 1791 . 1792) (nil block-side t 1791 . 1792) (nil block-token delimiter-beg 1791 . 1792) (nil part-side javascript 1791 . 1792) (nil part-token string 1791 . 1792) (nil font-lock-face web-mode-block-delimiter-face 1791 . 1792) (1791 . 1866)) nil (25672 17912 141118 916000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript face whitespace-trailing)) . -1880) 1866) nil (25672 17912 141093 16000) 0 nil])
([nil nil ((#("<script>
  document.onkeydown = checkKey;

  function checkKey(e) {

    e = e || window.event;

    if (e.keyCode == '37') {
      // left arrow
      window.location.href = '{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}';
    }
    else if (e.keyCode == '39') {
      // right arrow
      window.location.href = '{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}';
    }

  }

</script>" 0 1 (tag-name "script" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 7 (tag-name "script" tag-type start font-lock-face web-mode-html-tag-face) 7 8 (tag-name "script" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 8 9 (part-side javascript) 9 11 (part-side javascript) 11 42 (part-side javascript) 42 45 (part-side javascript) 45 53 (part-side javascript face web-mode-keyword-face) 53 54 (part-side javascript) 54 62 (part-side javascript face web-mode-function-name-face) 62 63 (part-side javascript face (rainbow-delimiters-depth-1-face)) 63 64 (part-side javascript) 64 65 (part-side javascript face (rainbow-delimiters-depth-1-face)) 65 66 (part-side javascript) 66 67 (part-side javascript face (rainbow-delimiters-depth-1-face)) 67 68 (part-side javascript) 68 96 (part-side javascript) 96 97 (part-side javascript) 97 101 (part-side javascript) 101 103 (part-side javascript face web-mode-keyword-face) 103 104 (part-side javascript) 104 105 (part-side javascript face (rainbow-delimiters-depth-2-face)) 105 118 (part-side javascript) 118 119 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 119 121 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 121 122 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 122 123 (part-side javascript face (rainbow-delimiters-depth-2-face)) 123 124 (part-side javascript) 124 125 (part-side javascript face (rainbow-delimiters-depth-2-face)) 125 126 (part-side javascript) 126 132 (part-side javascript) 132 133 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 133 145 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 145 146 (part-side javascript syntax-table (12)) 146 152 (part-side javascript) 152 175 (part-side javascript) 175 176 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 177 178 (block-side t block-token delimiter-beg part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 178 179 (block-side t part-side javascript part-token string) 179 188 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 188 189 (block-side t part-side javascript part-token string) 189 207 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 207 210 (block-side t part-side javascript part-token string) 210 217 (block-side t part-side javascript part-token string face web-mode-filter-face) 217 219 (block-side t part-side javascript part-token string) 219 223 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 223 224 (block-side t part-side javascript part-token string) 224 231 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 231 234 (block-side t part-side javascript part-token string) 234 241 (block-side t part-side javascript part-token string face web-mode-filter-face) 241 243 (block-side t part-side javascript part-token string) 243 247 (block-side t block-token string part-side javascript part-token string font-lock-face web-mode-block-string-face) 247 249 (block-side t part-side javascript part-token string) 249 252 (block-side t block-token string part-side javascript part-token string font-lock-face web-mode-block-string-face) 252 253 (block-side t part-side javascript part-token string) 253 254 (block-side t block-token delimiter-end part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 254 255 (rear-nonsticky t block-side t block-end t block-token delimiter-end part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 255 256 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 256 257 (rear-nonsticky t part-side javascript) 257 258 (part-side javascript) 258 262 (part-side javascript) 262 263 (part-side javascript face (rainbow-delimiters-depth-2-face)) 263 264 (part-side javascript) 264 268 (part-side javascript) 268 272 (part-side javascript face web-mode-keyword-face) 272 273 (part-side javascript) 273 275 (part-side javascript face web-mode-keyword-face) 275 276 (part-side javascript) 276 277 (part-side javascript face (rainbow-delimiters-depth-2-face)) 277 290 (part-side javascript) 290 291 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 291 293 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 293 294 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 294 295 (part-side javascript face (rainbow-delimiters-depth-2-face)) 295 296 (part-side javascript) 296 297 (part-side javascript face (rainbow-delimiters-depth-2-face)) 297 298 (part-side javascript) 298 304 (part-side javascript) 304 305 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 305 318 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 318 319 (part-side javascript syntax-table (12)) 319 325 (part-side javascript) 325 348 (part-side javascript) 348 349 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 349 350 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 350 351 (block-side t block-token delimiter-beg part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 351 352 (block-side t part-side javascript part-token string) 352 361 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 361 362 (block-side t part-side javascript part-token string) 362 376 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 376 379 (block-side t part-side javascript part-token string) 379 386 (block-side t part-side javascript part-token string face web-mode-filter-face) 386 388 (block-side t part-side javascript part-token string) 388 392 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 392 393 (block-side t part-side javascript part-token string) 393 400 (block-side t part-side javascript part-token string face web-mode-variable-name-face) 400 403 (block-side t part-side javascript part-token string) 403 410 (block-side t part-side javascript part-token string face web-mode-filter-face) 410 412 (block-side t part-side javascript part-token string) 412 416 (block-side t block-token string part-side javascript part-token string font-lock-face web-mode-block-string-face) 416 418 (block-side t part-side javascript part-token string) 418 421 (block-side t block-token string part-side javascript part-token string font-lock-face web-mode-block-string-face) 421 422 (block-side t part-side javascript part-token string) 422 423 (block-side t block-token delimiter-end part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 423 424 (rear-nonsticky t block-side t block-end t block-token delimiter-end part-side javascript part-token string font-lock-face web-mode-block-delimiter-face) 424 425 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 425 426 (rear-nonsticky t part-side javascript) 426 427 (part-side javascript) 427 431 (part-side javascript) 431 432 (part-side javascript face (rainbow-delimiters-depth-2-face)) 432 433 (part-side javascript) 433 436 (part-side javascript) 436 437 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-1-face)) 437 438 (part-side javascript) 438 439 (part-side javascript) 439 440 (tag-name "script" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 440 441 (tag-name "script" tag-type end font-lock-face web-mode-html-tag-bracket-face) 441 447 (tag-name "script" tag-type end font-lock-face web-mode-html-tag-face) 447 448 (tag-name "script" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1442) (undo-tree-id67 . -448) (undo-tree-id68 . -96) (undo-tree-id69 . -432) (undo-tree-id70 . -96) (undo-tree-id71 . -101) (undo-tree-id72 . -152) (undo-tree-id73 . -325) (undo-tree-id74 . -176) (undo-tree-id75 . -176) (undo-tree-id76 . -176) (undo-tree-id77 . -349) (undo-tree-id78 . -349) (undo-tree-id79 . -437) (undo-tree-id80 . -9) (undo-tree-id81 . -448) (undo-tree-id82 . -448) (t 25672 17912 143439 752000)) nil (25672 18207 637395 360000) 0 nil])
([nil current (("
" . -1440) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("
" 0 1 (face whitespace-empty)) . -1441) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 1442) nil (25672 18207 637371 406000) 0 nil])
nil
