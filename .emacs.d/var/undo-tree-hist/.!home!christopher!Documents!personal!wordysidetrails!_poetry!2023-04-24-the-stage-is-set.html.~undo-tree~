(undo-tree-save-format-version . 1)
"b60d459a4e363c9e6a1ea4e770963c6326025823"
[nil nil nil nil (25670 65140 575203 895000) 0 nil]
([nil nil ((#("From the dawn of my time, to the end of my road, i will try to exist, <br/>
to find my place of being. For though the privilege of youth in this day <br/>
and age is grand, i find my possibilities many, even sometime without
limit. Which should inflate me with joy and grit, that my life is open
in all directions. But though the sky is breached for me and me alone,
the blood and sweat of my ancestor weighs heavily upon me. For am
i blessed or cursed with a life without limits, surely i could not say
no, no in disrespect, in disbelieve. An insult to all that has been done
before me would it be, to simply pass on a chance so many before has
lived without, a chance they didn’t get.
The choice it weights me down from so young an age, í should
count myself blessed but instead feel myself pressed against the ground.
For with freedom comes responsibility, to take the correct road, to
make the right choice. I fear deeply i might spill my chance, i might
take the wrong door, though all are open and i see through them to
the end. My life before my eyes, how it would shape, how it would
tear in each and every direction. I feel myself punched down a road
splitting unto hundreds. Take a road, make a choice, your life and
future depends upon it, don’t waste your chance, your golden ticket,
that so many fought to give you. As i start to walk upon the dusty
road i feel panic and fear as my heart pumps and pumps away. I don’t
know which path to choose and soon there will be no more delay. My
heart jump and my focus i loose as the path must be chosen, for i
don’t know which road to take, which one to bet my chance on. Some-
times i wish for no chance at all, no choice or road to take, to throw
overboard my existential crisis, to just be happy, to just exist.
" 70 71 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 71 73 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 73 74 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 74 75 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 149 150 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 150 152 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 152 153 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 153 154 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 68) (undo-tree-id10 . -1770) (undo-tree-id11 . -76) (undo-tree-id12 . -1770) (undo-tree-id13 . -725) (undo-tree-id14 . -1770) (undo-tree-id15 . -725) (undo-tree-id16 . -1770) (t 25670 62269 947786 0)) nil (25670 65140 575201 638000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1477 . 1478) (nil face (whitespace-line whitespace-trailing) 1476 . 1478) (nil face (whitespace-line) 1009 . 1476) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 1008 . 1009) (nil face (whitespace-line) 1004 . 1008) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 1003 . 1004) (nil face (whitespace-line) 659 . 1003) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 658 . 659) (nil face (whitespace-line) 655 . 658) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 654 . 655) (nil face (whitespace-line) 645 . 654) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 644 . 645) (nil face (whitespace-line) 639 . 644) (nil face (rainbow-delimiters-depth-1-face whitespace-line) 638 . 639) (nil face (whitespace-line) 218 . 638) (68 . 1478)) nil (25670 65140 575191 902000) 0 nil])
([nil nil ((" " . 212) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (213 . 214)) nil (25670 65140 575187 628000) 0 nil])
([nil nil ((" " . 289) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (290 . 291)) nil (25670 65140 575183 994000) 0 nil])
([nil nil ((" " . 414) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (415 . 416)) nil (25670 65140 575180 237000) 0 nil])
([nil nil ((" " . 553) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (554 . 555)) nil (25670 65140 575176 747000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . 631) (undo-tree-id0 . -1) (undo-tree-id1 . -1) ("t" . 631) ("i" . 631) ("t" . 631) ("x" . 631) ("e" . 631) ("t" . 631) ("\\" . 631)) nil (25670 65140 575171 739000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 636)) nil (25670 65140 575153 782000) 0 nil])
([nil nil ((631 . 638)) nil (25670 65140 575890 162000) 0 nil])
([nil nil ((634 . 639)) nil (25670 65167 946052 281000) 0 nil] [nil nil ((634 . 638)) ((#("</i>" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 634)) (25670 65140 575145 398000) 0 nil])
([nil nil (("ready" . 643) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5)) nil (25670 65167 946051 93000) 0 nil])
nil
([nil nil ((#("\\textit{" 7 8 (face (rainbow-delimiters-depth-1-face))) . 645) (undo-tree-id20 . -8) (undo-tree-id21 . -8)) nil (25670 65167 946046 93000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . -648) (undo-tree-id19 . -1) 649) nil (25670 65168 554943 610000) 0 nil])
([nil nil ((645 . 652)) nil (25670 65223 474875 848000) 0 nil] [nil nil (("aim" . 645) (undo-tree-id17 . -3) (undo-tree-id18 . -3)) ((645 . 648)) (25670 65167 946762 595000) 0 nil])
([nil nil ((648 . 651)) nil (25670 65223 474874 786000) 0 nil])
([nil nil ((645 . 646)) (("<" . 645) (undo-tree-id25 . -1)) (25670 65167 946021 9000) 0 nil])
([nil nil (("aim" . 655) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3)) nil (25670 65223 474873 432000) 0 nil])
nil
([nil nil ((655 . 656)) nil (25670 65223 474868 54000) 0 nil])
([nil nil ((" " . -704) (703 . 704)) nil (25670 65223 474867 8000) 0 nil])
([nil nil ((" " . 825) (undo-tree-id39 . -1) (826 . 827)) nil (25670 65223 474865 530000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . 992) (undo-tree-id38 . -1) (993 . 994)) nil (25670 65223 474863 136000) 0 nil])
([nil nil ((" " . 1129) (undo-tree-id37 . -1) (1130 . 1131)) nil (25670 65223 474860 680000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line))) . 1294) (undo-tree-id36 . -1) (1295 . 1296)) nil (25670 65223 474858 151000) 0 nil])
([nil nil ((#("\\textit{" 7 8 (face (rainbow-delimiters-depth-1-face))) . 993) (undo-tree-id34 . -8) (undo-tree-id35 . -8)) nil (25670 65223 474855 494000) 0 nil])
([nil nil ((993 . 1000)) nil (25670 65223 474852 243000) 0 nil])
([nil nil ((#("</i>" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 996) (undo-tree-id32 . -4) (undo-tree-id33 . -4)) nil (25670 65223 474850 846000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 1000)) nil (25670 65223 474847 320000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1003 . 1004) (nil tag-name "i" 1003 . 1004) (nil tag-type end 1003 . 1004) (nil tag-end t 1003 . 1004) (nil font-lock-face web-mode-html-tag-bracket-face 1003 . 1004) (nil tag-name "i" 1002 . 1003) (nil tag-type end 1002 . 1003) (nil font-lock-face web-mode-html-tag-face 1002 . 1003) (nil tag-name "i" 1001 . 1002) (nil tag-type end 1001 . 1002) (nil font-lock-face web-mode-html-tag-bracket-face 1001 . 1002) (nil tag-name "i" 1000 . 1001) (nil tag-type end 1000 . 1001) (nil tag-beg 20 1000 . 1001) (nil font-lock-face web-mode-html-tag-bracket-face 1000 . 1001) (1000 . 1004)) nil (25670 65223 474845 428000) 0 nil])
([nil nil ((212 . 215)) nil (25670 65223 474840 897000) 0 nil])
([nil nil (("\\" . -212) (undo-tree-id26 . -1) (undo-tree-id27 . -1) ("b" . -213) (undo-tree-id28 . -1) (undo-tree-id29 . -1) ("r" . -214) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 215) nil (25670 65223 474838 856000) 0 nil])
([nil nil ((215 . 216) (212 . 216)) nil (25670 65223 474823 159000) 0 nil])
([nil nil ((nil rear-nonsticky nil 298 . 299) (nil tag-name "br" 298 . 299) (nil tag-type void 298 . 299) (nil tag-end t 298 . 299) (nil font-lock-face web-mode-html-tag-bracket-face 298 . 299) (nil tag-name "br" 297 . 298) (nil tag-type void 297 . 298) (nil font-lock-face web-mode-html-tag-bracket-face 297 . 298) (nil tag-name "br" 295 . 297) (nil tag-type void 295 . 297) (nil font-lock-face web-mode-html-tag-face 295 . 297) (nil tag-name "br" 294 . 295) (nil tag-type void 294 . 295) (nil tag-beg 24 294 . 295) (nil font-lock-face web-mode-html-tag-bracket-face 294 . 295) (294 . 299)) nil (25670 65223 474820 953000) 0 nil])
([nil nil ((nil rear-nonsticky nil 428 . 429) (nil tag-name "br" 428 . 429) (nil tag-type void 428 . 429) (nil tag-end t 428 . 429) (nil font-lock-face web-mode-html-tag-bracket-face 428 . 429) (nil tag-name "br" 427 . 428) (nil tag-type void 427 . 428) (nil font-lock-face web-mode-html-tag-bracket-face 427 . 428) (nil tag-name "br" 425 . 427) (nil tag-type void 425 . 427) (nil font-lock-face web-mode-html-tag-face 425 . 427) (nil tag-name "br" 424 . 425) (nil tag-type void 424 . 425) (nil tag-beg 24 424 . 425) (nil font-lock-face web-mode-html-tag-bracket-face 424 . 425) (424 . 429)) nil (25670 65223 474816 15000) 0 nil])
([nil nil ((nil rear-nonsticky nil 572 . 573) (nil tag-name "br" 572 . 573) (nil tag-type void 572 . 573) (nil tag-end t 572 . 573) (nil font-lock-face web-mode-html-tag-bracket-face 572 . 573) (nil tag-name "br" 571 . 572) (nil tag-type void 571 . 572) (nil font-lock-face web-mode-html-tag-bracket-face 571 . 572) (nil tag-name "br" 569 . 571) (nil tag-type void 569 . 571) (nil font-lock-face web-mode-html-tag-face 569 . 571) (nil tag-name "br" 568 . 569) (nil tag-type void 568 . 569) (nil tag-beg 24 568 . 569) (nil font-lock-face web-mode-html-tag-bracket-face 568 . 569) (568 . 573)) nil (25670 65223 474811 313000) 0 nil])
([nil nil ((nil rear-nonsticky nil 727 . 728) (nil tag-name "br" 727 . 728) (nil tag-type void 727 . 728) (nil tag-end t 727 . 728) (nil font-lock-face web-mode-html-tag-bracket-face 727 . 728) (nil face (whitespace-line web-mode-html-tag-bracket-face) 727 . 728) (nil tag-name "br" 726 . 727) (nil tag-type void 726 . 727) (nil font-lock-face web-mode-html-tag-bracket-face 726 . 727) (nil face (whitespace-line web-mode-html-tag-bracket-face) 726 . 727) (nil tag-name "br" 724 . 726) (nil tag-type void 724 . 726) (nil font-lock-face web-mode-html-tag-face 724 . 726) (nil face (whitespace-line web-mode-html-tag-face) 724 . 726) (nil tag-name "br" 723 . 724) (nil tag-type void 723 . 724) (nil tag-beg 24 723 . 724) (nil font-lock-face web-mode-html-tag-bracket-face 723 . 724) (723 . 728)) nil (25670 65223 474806 569000) 0 nil])
([nil nil ((nil rear-nonsticky nil 854 . 855) (nil tag-name "br" 854 . 855) (nil tag-type void 854 . 855) (nil tag-end t 854 . 855) (nil font-lock-face web-mode-html-tag-bracket-face 854 . 855) (nil tag-name "br" 853 . 854) (nil tag-type void 853 . 854) (nil font-lock-face web-mode-html-tag-bracket-face 853 . 854) (nil tag-name "br" 851 . 853) (nil tag-type void 851 . 853) (nil font-lock-face web-mode-html-tag-face 851 . 853) (nil tag-name "br" 850 . 851) (nil tag-type void 850 . 851) (nil tag-beg 24 850 . 851) (nil font-lock-face web-mode-html-tag-bracket-face 850 . 851) (850 . 855)) nil (25670 65223 474801 192000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1026 . 1027) (nil tag-name "br" 1026 . 1027) (nil tag-type void 1026 . 1027) (nil tag-end t 1026 . 1027) (nil font-lock-face web-mode-html-tag-bracket-face 1026 . 1027) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1026 . 1027) (nil tag-name "br" 1025 . 1026) (nil tag-type void 1025 . 1026) (nil font-lock-face web-mode-html-tag-bracket-face 1025 . 1026) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1025 . 1026) (nil tag-name "br" 1023 . 1025) (nil tag-type void 1023 . 1025) (nil font-lock-face web-mode-html-tag-face 1023 . 1025) (nil face (whitespace-line web-mode-html-tag-face) 1023 . 1025) (nil tag-name "br" 1022 . 1023) (nil tag-type void 1022 . 1023) (nil tag-beg 24 1022 . 1023) (nil font-lock-face web-mode-html-tag-bracket-face 1022 . 1023) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1022 . 1023) (1022 . 1027)) nil (25670 65223 474796 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1166 . 1167) (nil tag-name "br" 1166 . 1167) (nil tag-type void 1166 . 1167) (nil tag-end t 1166 . 1167) (nil font-lock-face web-mode-html-tag-bracket-face 1166 . 1167) (nil tag-name "br" 1165 . 1166) (nil tag-type void 1165 . 1166) (nil font-lock-face web-mode-html-tag-bracket-face 1165 . 1166) (nil tag-name "br" 1163 . 1165) (nil tag-type void 1163 . 1165) (nil font-lock-face web-mode-html-tag-face 1163 . 1165) (nil tag-name "br" 1162 . 1163) (nil tag-type void 1162 . 1163) (nil tag-beg 24 1162 . 1163) (nil font-lock-face web-mode-html-tag-bracket-face 1162 . 1163) (1162 . 1167)) nil (25670 65223 474790 412000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1336 . 1337) (nil tag-name "br" 1336 . 1337) (nil tag-type void 1336 . 1337) (nil tag-end t 1336 . 1337) (nil font-lock-face web-mode-html-tag-bracket-face 1336 . 1337) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1336 . 1337) (nil tag-name "br" 1335 . 1336) (nil tag-type void 1335 . 1336) (nil font-lock-face web-mode-html-tag-bracket-face 1335 . 1336) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1335 . 1336) (nil tag-name "br" 1333 . 1335) (nil tag-type void 1333 . 1335) (nil font-lock-face web-mode-html-tag-face 1333 . 1335) (nil face (whitespace-line web-mode-html-tag-face) 1333 . 1335) (nil tag-name "br" 1332 . 1333) (nil tag-type void 1332 . 1333) (nil tag-beg 24 1332 . 1333) (nil font-lock-face web-mode-html-tag-bracket-face 1332 . 1333) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1332 . 1333) (1332 . 1337)) nil (25670 65223 474784 742000) 0 nil])
([nil nil ((#("  " 0 1 (face (whitespace-line whitespace-trailing)) 1 2 (rear-nonsticky t face (whitespace-line whitespace-trailing))) . -1516) (1518 . 1519) 1337) nil (25670 65223 474773 398000) 0 nil])
([nil nil (("expectations" . 24) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (t 25670 65223 536275 60000)) nil (25670 65249 225997 584000) 0 nil])
([nil nil ((24 . 30)) nil (25670 65249 225993 626000) 0 nil])
([nil nil ((" " . -29) (undo-tree-id52 . -1) 30) nil (25670 65249 225992 272000) 0 nil])
([nil nil (("2" . -39) (undo-tree-id51 . -1) 40) nil (25670 65249 225989 898000) 0 nil])
([nil nil ((39 . 40)) nil (25670 65249 225987 500000) 0 nil])
([nil nil (("4" . -39) (undo-tree-id50 . -1) 40) nil (25670 65249 225986 202000) 0 nil])
([nil nil ((39 . 40)) nil (25670 65249 225983 669000) 0 nil])
([nil nil (("8" . -42) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 43) nil (25670 65249 225982 402000) 0 nil])
([nil nil ((42 . 43)) nil (25670 65249 225978 987000) 0 nil])
([nil nil (("2" . -44) (undo-tree-id46 . -1) ("7" . -45) (undo-tree-id47 . -1) 46) nil (25670 65249 225977 424000) 0 nil])
([nil nil ((44 . 46)) nil (25670 65249 225973 336000) 0 nil])
([nil nil (("0" . -47) (undo-tree-id44 . -1) ("8" . -48) (undo-tree-id45 . -1) 49) nil (25670 65249 225970 363000) 0 nil])
([nil current ((47 . 49)) nil (25670 65249 225951 935000) 0 nil])
nil
