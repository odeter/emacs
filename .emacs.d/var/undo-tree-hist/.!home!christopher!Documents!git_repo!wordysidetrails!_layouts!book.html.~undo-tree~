(undo-tree-save-format-version . 1)
"50a27c086f7219bd40c99f13aeace7735427a180"
[nil nil nil nil (25351 57875 607503 339000) 0 nil]
([nil nil ((#("{{ page.background | prepend: site.baseurl | replace: '//', '/' }}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 1 2 (block-side t block-token delimiter-beg tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 2 3 (block-side t tag-attr t tag-name "header" tag-type start) 3 7 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 7 8 (block-side t tag-attr t tag-name "header" tag-type start) 8 18 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 18 21 (block-side t tag-attr t tag-name "header" tag-type start) 21 28 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-filter-face) 28 30 (block-side t tag-attr t tag-name "header" tag-type start) 30 34 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 34 35 (block-side t tag-attr t tag-name "header" tag-type start) 35 42 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 42 45 (block-side t tag-attr t tag-name "header" tag-type start) 45 52 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-filter-face) 52 54 (block-side t tag-attr t tag-name "header" tag-type start) 54 58 (block-side t block-token string tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-string-face) 58 60 (block-side t tag-attr t tag-name "header" tag-type start) 60 63 (block-side t block-token string tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-string-face) 63 64 (block-side t tag-attr t tag-name "header" tag-type start) 64 65 (block-side t block-token delimiter-end tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 65 66 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face)) . 127) (undo-tree-id0 . -66) (undo-tree-id1 . -66) (undo-tree-id2 . -66) (undo-tree-id3 . -66) (undo-tree-id4 . -66) (t 24728 130 0 0)) nil (25351 57875 607500 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 152 . 153) (nil rear-nonsticky t 152 . 153) (nil block-side t 152 . 153) (nil block-end t 152 . 153) (nil block-token delimiter-end 152 . 153) (nil tag-attr t 152 . 153) (nil tag-name "header" 152 . 153) (nil tag-type start 152 . 153) (nil font-lock-face web-mode-block-delimiter-face 152 . 153) (nil block-side t 151 . 152) (nil block-token delimiter-end 151 . 152) (nil tag-attr t 151 . 152) (nil tag-name "header" 151 . 152) (nil tag-type start 151 . 152) (nil font-lock-face web-mode-block-delimiter-face 151 . 152) (nil block-side t 150 . 151) (nil tag-attr t 150 . 151) (nil tag-name "header" 150 . 151) (nil tag-type start 150 . 151) (nil block-side t 144 . 150) (nil tag-attr t 144 . 150) (nil tag-name "header" 144 . 150) (nil tag-type start 144 . 150) (nil face web-mode-filter-face 144 . 150) (nil block-side t 141 . 144) (nil tag-attr t 141 . 144) (nil tag-name "header" 141 . 144) (nil tag-type start 141 . 144) (nil block-side t 135 . 141) (nil tag-attr t 135 . 141) (nil tag-name "header" 135 . 141) (nil tag-type start 135 . 141) (nil face web-mode-variable-name-face 135 . 141) (nil block-side t 134 . 135) (nil tag-attr t 134 . 135) (nil tag-name "header" 134 . 135) (nil tag-type start 134 . 135) (nil block-side t 130 . 134) (nil tag-attr t 130 . 134) (nil tag-name "header" 130 . 134) (nil tag-type start 130 . 134) (nil face web-mode-variable-name-face 130 . 134) (nil block-side t 129 . 130) (nil tag-attr t 129 . 130) (nil tag-name "header" 129 . 130) (nil tag-type start 129 . 130) (nil block-side t 128 . 129) (nil block-token delimiter-beg 128 . 129) (nil tag-attr t 128 . 129) (nil tag-name "header" 128 . 129) (nil tag-type start 128 . 129) (nil font-lock-face web-mode-block-delimiter-face 128 . 129) (nil block-beg 0 127 . 128) (nil block-controls 0 127 . 128) (nil block-side t 127 . 128) (nil block-token delimiter-beg 127 . 128) (nil tag-attr t 127 . 128) (nil tag-name "header" 127 . 128) (nil tag-type start 127 . 128) (nil font-lock-face web-mode-block-delimiter-face 127 . 128) (127 . 153)) nil (25351 57875 607470 503000) 0 nil])
([nil nil ((#("{% if page.background %}
<header class=\"masthead\" style=\"background-image: url('{{ site.banner | escape }}')\">
  {% else %}
  <header class=\"masthead\">
    {% endif %}
    <div class=\"overlay\"></div>
    <div class=\"container\">
      <div class=\"row\">
        <div class=\"col-lg-8 col-md-10 mx-auto\">
          <div class=\"post-heading\">
            <h1>{{ page.title }}</h1>
            {% if page.subtitle %}
            <h2 class=\"subheading\">{{ page.subtitle }}</h2>
            {% endif %}
            <span class=\"meta\">Posted by
              <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
              on {{ page.date | date: '%B %d, %Y' }} &middot; {% include read_time.html
              content=page.content %}
            </span>
          </div>
        </div>
      </div>
    </div>
  </header>" 0 1 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2 3 (block-side t) 3 5 (face web-mode-block-control-face block-side t) 5 6 (block-side t) 6 21 (face web-mode-variable-name-face block-side t) 21 22 (block-side t) 22 23 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 23 24 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header") 26 32 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header") 32 33 (tag-type start tag-name "header") 33 34 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0) 34 38 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t) 39 48 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 5 tag-attr t) 49 50 (tag-type start tag-name "header") 50 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0) 51 55 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t) 55 56 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t) 56 80 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 80 81 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 81 82 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t) 82 83 (tag-type start tag-name "header" tag-attr t block-side t) 83 87 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 87 88 (tag-type start tag-name "header" tag-attr t block-side t) 88 94 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 94 97 (tag-type start tag-name "header" tag-attr t block-side t) 97 103 (face web-mode-filter-face tag-type start tag-name "header" tag-attr t block-side t) 103 104 (tag-type start tag-name "header" tag-attr t block-side t) 104 105 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-side t) 105 106 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-end t block-side t) 106 108 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 108 109 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 5 tag-attr t) 109 110 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header") 113 114 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 114 115 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 115 116 (block-side t) 116 120 (face web-mode-block-control-face block-side t) 120 121 (block-side t) 121 122 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 122 123 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 126 127 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "header") 127 133 (font-lock-face web-mode-html-tag-face tag-type start tag-name "header") 133 134 (tag-type start tag-name "header") 134 135 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t tag-attr-beg 0) 135 139 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "header" tag-attr t) 139 140 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "header" tag-attr t) 140 149 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr t) 149 150 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "header" tag-attr-end 5 tag-attr t) 150 151 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "header") 156 157 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 157 158 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 158 159 (block-side t) 159 164 (face web-mode-block-control-face block-side t) 164 165 (block-side t) 165 166 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 166 167 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 172 173 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 173 176 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 176 177 (tag-type start tag-name "div") 177 178 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 178 182 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 182 183 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 183 191 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 191 192 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 192 193 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 193 194 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 194 195 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 195 198 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 198 199 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 204 205 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 205 208 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 208 209 (tag-type start tag-name "div") 209 210 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 210 214 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 214 215 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 215 225 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 225 226 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 226 227 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 234 235 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 235 238 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 238 239 (tag-type start tag-name "div") 239 240 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 240 244 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 244 245 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 245 249 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 249 250 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 250 251 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 260 261 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 261 264 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 264 265 (tag-type start tag-name "div") 265 266 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 266 270 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 270 271 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 271 298 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 298 299 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 299 300 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 311 312 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 312 315 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 315 316 (tag-type start tag-name "div") 316 317 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 317 321 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 321 322 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 322 335 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 335 336 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 336 337 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 350 351 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1") 351 353 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1") 353 354 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1") 354 355 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 355 356 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 356 357 (block-side t) 357 361 (face web-mode-variable-name-face block-side t) 361 362 (block-side t) 362 367 (face web-mode-variable-name-face block-side t) 367 368 (block-side t) 368 369 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 369 370 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 370 371 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1") 371 372 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1") 372 374 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1") 374 375 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1") 388 389 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 389 390 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 390 391 (block-side t) 391 393 (face web-mode-block-control-face block-side t) 393 394 (block-side t) 394 407 (face web-mode-variable-name-face block-side t) 407 408 (block-side t) 408 409 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 409 410 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 423 424 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2") 424 426 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2") 426 427 (tag-type start tag-name "h2") 427 428 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0) 428 432 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t) 432 433 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t) 433 444 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t) 444 445 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 5 tag-attr t) 445 446 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2") 446 447 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 447 448 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 448 449 (block-side t) 449 453 (face web-mode-variable-name-face block-side t) 453 454 (block-side t) 454 462 (face web-mode-variable-name-face block-side t) 462 463 (block-side t) 463 464 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 464 465 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 465 466 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2") 466 467 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2") 467 469 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2") 469 470 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2") 483 484 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 484 485 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 485 486 (block-side t) 486 491 (face web-mode-block-control-face block-side t) 491 492 (block-side t) 492 493 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 493 494 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 507 508 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 508 512 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 512 513 (tag-type start tag-name "span") 513 514 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 514 518 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 518 519 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 519 524 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 524 525 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 525 526 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 550 551 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 551 552 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 552 553 (tag-type start tag-name "a") 553 554 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 554 557 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 557 558 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 558 560 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 560 561 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 561 562 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 562 563 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 563 564 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 564 565 (block-side t) 565 567 (face web-mode-block-control-face block-side t) 567 568 (block-side t) 568 579 (face web-mode-variable-name-face block-side t) 579 580 (block-side t) 580 581 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 581 582 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 582 583 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 583 584 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 584 585 (block-side t) 585 589 (face web-mode-variable-name-face block-side t) 589 590 (block-side t) 590 596 (face web-mode-variable-name-face block-side t) 596 597 (block-side t) 597 598 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 598 599 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 599 600 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 600 601 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 601 602 (block-side t) 602 606 (face web-mode-block-control-face block-side t) 606 607 (block-side t) 607 608 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 608 609 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 609 610 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 610 611 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 611 612 (block-side t) 612 616 (face web-mode-variable-name-face block-side t) 616 617 (block-side t) 617 623 (face web-mode-variable-name-face block-side t) 623 624 (block-side t) 624 625 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 625 626 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 626 627 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 627 628 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 628 629 (block-side t) 629 634 (face web-mode-block-control-face block-side t) 634 635 (block-side t) 635 636 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 636 637 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 637 638 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 638 639 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 639 640 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 640 641 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 659 660 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 660 661 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 661 662 (block-side t) 662 666 (face web-mode-variable-name-face block-side t) 666 667 (block-side t) 667 671 (face web-mode-variable-name-face block-side t) 671 674 (block-side t) 674 678 (face web-mode-filter-face block-side t) 678 680 (block-side t) 680 682 (font-lock-face web-mode-block-string-face block-token string block-side t) 682 683 (font-lock-face web-mode-block-string-face block-token string block-side t) 683 685 (font-lock-face web-mode-block-string-face block-token string block-side t) 685 686 (font-lock-face web-mode-block-string-face block-token string block-side t) 686 689 (font-lock-face web-mode-block-string-face block-token string block-side t) 689 690 (font-lock-face web-mode-block-string-face block-token string block-side t) 690 691 (font-lock-face web-mode-block-string-face block-token string block-side t) 691 692 (block-side t) 692 693 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 693 694 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 695 703 (font-lock-face (web-mode-html-entity-face)) 704 705 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 705 706 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 706 707 (block-side t) 707 714 (face web-mode-block-control-face block-side t) 714 715 (block-side t) 715 729 (face web-mode-variable-name-face block-side t) 729 744 (block-side t) 744 751 (face web-mode-variable-name-face block-side t) 751 752 (block-side t) 752 764 (face web-mode-variable-name-face block-side t) 764 765 (block-side t) 765 766 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 766 767 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 780 781 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 781 782 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 782 786 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 786 787 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 798 799 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 799 800 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 800 803 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 803 804 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 813 814 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 814 815 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 815 818 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 818 819 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 826 827 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 827 828 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 828 831 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 831 832 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 837 838 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 838 839 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 839 842 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 842 843 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div") 846 847 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "header") 847 848 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "header") 848 854 (font-lock-face web-mode-html-tag-face tag-type end tag-name "header") 854 855 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "header")) . 47) (undo-tree-id0 . -855) (undo-tree-id1 . -338) (undo-tree-id2 . -338) (undo-tree-id3 . -338) (undo-tree-id4 . -189) (undo-tree-id5 . -25) (undo-tree-id6 . -189) (undo-tree-id7 . -855) (undo-tree-id8 . -251) (undo-tree-id9 . -855) (t 25351 57875 852017 599000)) nil (25353 16432 705693 506000) 0 nil])
([nil nil ((nil rear-nonsticky nil 183 . 184) (nil rear-nonsticky t 183 . 184) (nil tag-name "header" 183 . 184) (nil tag-type end 183 . 184) (nil tag-end t 183 . 184) (nil font-lock-face web-mode-html-tag-bracket-face 183 . 184) (nil tag-name "header" 177 . 183) (nil tag-type end 177 . 183) (nil font-lock-face web-mode-html-tag-face 177 . 183) (nil tag-name "header" 176 . 177) (nil tag-type end 176 . 177) (nil font-lock-face web-mode-html-tag-bracket-face 176 . 177) (nil tag-name "header" 175 . 176) (nil tag-type end 175 . 176) (nil tag-beg 20 175 . 176) (nil font-lock-face web-mode-html-tag-bracket-face 175 . 176) (nil tag-name "div" 173 . 174) (nil tag-type end 173 . 174) (nil tag-end t 173 . 174) (nil font-lock-face web-mode-html-tag-bracket-face 173 . 174) (nil tag-name "div" 170 . 173) (nil tag-type end 170 . 173) (nil font-lock-face web-mode-html-tag-face 170 . 173) (nil tag-name "div" 169 . 170) (nil tag-type end 169 . 170) (nil font-lock-face web-mode-html-tag-bracket-face 169 . 170) (nil tag-name "div" 168 . 169) (nil tag-type end 168 . 169) (nil tag-beg 20 168 . 169) (nil font-lock-face web-mode-html-tag-bracket-face 168 . 169) (nil tag-name "div" 164 . 165) (nil tag-type start 164 . 165) (nil tag-end t 164 . 165) (nil font-lock-face web-mode-html-tag-bracket-face 164 . 165) (nil tag-attr t 163 . 164) (nil tag-attr-end 5 163 . 164) (nil tag-name "div" 163 . 164) (nil tag-type start 163 . 164) (nil font-lock-face web-mode-html-attr-value-face 163 . 164) (nil tag-attr t 147 . 163) (nil tag-name "div" 147 . 163) (nil tag-type start 147 . 163) (nil font-lock-face web-mode-html-attr-value-face 147 . 163) (nil tag-attr t 146 . 147) (nil tag-name "div" 146 . 147) (nil tag-type start 146 . 147) (nil font-lock-face web-mode-html-attr-equal-face 146 . 147) (nil tag-attr t 142 . 146) (nil tag-name "div" 142 . 146) (nil tag-type start 142 . 146) (nil font-lock-face web-mode-html-attr-name-face 142 . 146) (nil tag-attr-beg 0 141 . 142) (nil tag-attr t 141 . 142) (nil tag-name "div" 141 . 142) (nil tag-type start 141 . 142) (nil font-lock-face web-mode-html-attr-name-face 141 . 142) (nil tag-name "div" 140 . 141) (nil tag-type start 140 . 141) (nil tag-name "div" 137 . 140) (nil tag-type start 137 . 140) (nil font-lock-face web-mode-html-tag-face 137 . 140) (nil tag-name "div" 136 . 137) (nil tag-type start 136 . 137) (nil tag-beg 17 136 . 137) (nil font-lock-face web-mode-html-tag-bracket-face 136 . 137) (nil tag-name "header" 132 . 133) (nil tag-type start 132 . 133) (nil tag-end t 132 . 133) (nil font-lock-face web-mode-html-tag-bracket-face 132 . 133) (nil tag-attr t 131 . 132) (nil tag-attr-end 5 131 . 132) (nil tag-name "header" 131 . 132) (nil tag-type start 131 . 132) (nil font-lock-face web-mode-html-attr-value-face 131 . 132) (nil tag-attr t 129 . 131) (nil tag-name "header" 129 . 131) (nil tag-type start 129 . 131) (nil font-lock-face web-mode-html-attr-value-face 129 . 131) (nil block-side t 128 . 129) (nil block-end t 128 . 129) (nil block-token delimiter-end 128 . 129) (nil tag-attr t 128 . 129) (nil tag-name "header" 128 . 129) (nil tag-type start 128 . 129) (nil font-lock-face web-mode-block-delimiter-face 128 . 129) (nil block-side t 127 . 128) (nil block-token delimiter-end 127 . 128) (nil tag-attr t 127 . 128) (nil tag-name "header" 127 . 128) (nil tag-type start 127 . 128) (nil font-lock-face web-mode-block-delimiter-face 127 . 128) (nil block-side t 126 . 127) (nil tag-attr t 126 . 127) (nil tag-name "header" 126 . 127) (nil tag-type start 126 . 127) (nil block-side t 120 . 126) (nil tag-attr t 120 . 126) (nil tag-name "header" 120 . 126) (nil tag-type start 120 . 126) (nil face web-mode-filter-face 120 . 126) (nil block-side t 117 . 120) (nil tag-attr t 117 . 120) (nil tag-name "header" 117 . 120) (nil tag-type start 117 . 120) (nil block-side t 111 . 117) (nil tag-attr t 111 . 117) (nil tag-name "header" 111 . 117) (nil tag-type start 111 . 117) (nil face web-mode-variable-name-face 111 . 117) (nil block-side t 110 . 111) (nil tag-attr t 110 . 111) (nil tag-name "header" 110 . 111) (nil tag-type start 110 . 111) (nil block-side t 106 . 110) (nil tag-attr t 106 . 110) (nil tag-name "header" 106 . 110) (nil tag-type start 106 . 110) (nil face web-mode-variable-name-face 106 . 110) (nil block-side t 105 . 106) (nil tag-attr t 105 . 106) (nil tag-name "header" 105 . 106) (nil tag-type start 105 . 106) (nil block-side t 104 . 105) (nil block-token delimiter-beg 104 . 105) (nil tag-attr t 104 . 105) (nil tag-name "header" 104 . 105) (nil tag-type start 104 . 105) (nil font-lock-face web-mode-block-delimiter-face 104 . 105) (nil block-beg 0 103 . 104) (nil block-controls 0 103 . 104) (nil block-side t 103 . 104) (nil block-token delimiter-beg 103 . 104) (nil tag-attr t 103 . 104) (nil tag-name "header" 103 . 104) (nil tag-type start 103 . 104) (nil font-lock-face web-mode-block-delimiter-face 103 . 104) (nil tag-attr t 79 . 103) (nil tag-name "header" 79 . 103) (nil tag-type start 79 . 103) (nil font-lock-face web-mode-html-attr-value-face 79 . 103) (nil tag-attr t 78 . 79) (nil tag-name "header" 78 . 79) (nil tag-type start 78 . 79) (nil font-lock-face web-mode-html-attr-equal-face 78 . 79) (nil tag-attr t 74 . 78) (nil tag-name "header" 74 . 78) (nil tag-type start 74 . 78) (nil font-lock-face web-mode-html-attr-name-face 74 . 78) (nil tag-attr-beg 0 73 . 74) (nil tag-attr t 73 . 74) (nil tag-name "header" 73 . 74) (nil tag-type start 73 . 74) (nil font-lock-face web-mode-html-attr-name-face 73 . 74) (nil tag-name "header" 72 . 73) (nil tag-type start 72 . 73) (nil tag-attr t 71 . 72) (nil tag-attr-end 5 71 . 72) (nil tag-name "header" 71 . 72) (nil tag-type start 71 . 72) (nil font-lock-face web-mode-html-attr-value-face 71 . 72) (nil tag-attr t 61 . 71) (nil tag-name "header" 61 . 71) (nil tag-type start 61 . 71) (nil font-lock-face web-mode-html-attr-value-face 61 . 71) (nil tag-attr t 60 . 61) (nil tag-name "header" 60 . 61) (nil tag-type start 60 . 61) (nil font-lock-face web-mode-html-attr-equal-face 60 . 61) (nil tag-attr t 56 . 60) (nil tag-name "header" 56 . 60) (nil tag-type start 56 . 60) (nil font-lock-face web-mode-html-attr-name-face 56 . 60) (nil tag-attr-beg 0 55 . 56) (nil tag-attr t 55 . 56) (nil tag-name "header" 55 . 56) (nil tag-type start 55 . 56) (nil font-lock-face web-mode-html-attr-name-face 55 . 56) (nil tag-name "header" 54 . 55) (nil tag-type start 54 . 55) (nil tag-name "header" 48 . 54) (nil tag-type start 48 . 54) (nil font-lock-face web-mode-html-tag-face 48 . 54) (nil tag-name "header" 47 . 48) (nil tag-type start 47 . 48) (nil tag-beg 17 47 . 48) (nil font-lock-face web-mode-html-tag-bracket-face 47 . 48) (47 . 184)) nil (25353 16432 705638 207000) 0 nil])
([nil nil ((282 . 290) ("        " . 281) (undo-tree-id10 . -8) (280 . 290) (t 25353 16432 712873 871000)) nil (25353 16451 237198 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 754 . 755) (nil rear-nonsticky t 754 . 755) (nil tag-name "span" 754 . 755) (nil tag-type end 754 . 755) (nil tag-end t 754 . 755) (nil font-lock-face web-mode-html-tag-bracket-face 754 . 755) (nil tag-name "span" 750 . 754) (nil tag-type end 750 . 754) (nil font-lock-face web-mode-html-tag-face 750 . 754) (nil tag-name "span" 749 . 750) (nil tag-type end 749 . 750) (nil font-lock-face web-mode-html-tag-bracket-face 749 . 750) (nil tag-name "span" 748 . 749) (nil tag-type end 748 . 749) (nil tag-beg 20 748 . 749) (nil font-lock-face web-mode-html-tag-bracket-face 748 . 749) (nil block-side t 738 . 739) (nil block-end t 738 . 739) (nil block-token delimiter-end 738 . 739) (nil font-lock-face web-mode-block-delimiter-face 738 . 739) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 738 . 739) (nil block-side t 737 . 738) (nil block-token delimiter-end 737 . 738) (nil font-lock-face web-mode-block-delimiter-face 737 . 738) (nil block-side t 736 . 737) (nil block-side t 724 . 736) (nil face web-mode-variable-name-face 724 . 736) (nil block-side t 723 . 724) (nil block-side t 716 . 723) (nil face web-mode-variable-name-face 716 . 723) (nil block-side t 655 . 716) (nil block-side t 641 . 655) (nil face web-mode-variable-name-face 641 . 655) (nil block-side t 640 . 641) (nil block-side t 633 . 640) (nil face web-mode-block-control-face 633 . 640) (nil block-side t 632 . 633) (nil block-side t 631 . 632) (nil block-token delimiter-beg 631 . 632) (nil font-lock-face web-mode-block-delimiter-face 631 . 632) (nil block-beg 0 630 . 631) (nil block-controls 0 630 . 631) (nil block-side t 630 . 631) (nil block-token delimiter-beg 630 . 631) (nil font-lock-face web-mode-block-delimiter-face 630 . 631) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 630 . 631) (nil font-lock-face (web-mode-html-entity-face) 621 . 629) (nil block-side t 619 . 620) (nil block-end t 619 . 620) (nil block-token delimiter-end 619 . 620) (nil font-lock-face web-mode-block-delimiter-face 619 . 620) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 619 . 620) (nil block-side t 618 . 619) (nil block-token delimiter-end 618 . 619) (nil font-lock-face web-mode-block-delimiter-face 618 . 619) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 618 . 619) (nil block-side t 617 . 618) (nil block-side t 616 . 617) (nil block-token string 616 . 617) (nil font-lock-face web-mode-block-string-face 616 . 617) (nil block-side t 615 . 616) (nil block-token string 615 . 616) (nil font-lock-face web-mode-block-string-face 615 . 616) (nil block-side t 612 . 615) (nil block-token string 612 . 615) (nil font-lock-face web-mode-block-string-face 612 . 615) (nil block-side t 611 . 612) (nil block-token string 611 . 612) (nil font-lock-face web-mode-block-string-face 611 . 612) (nil block-side t 609 . 611) (nil block-token string 609 . 611) (nil font-lock-face web-mode-block-string-face 609 . 611) (nil block-side t 608 . 609) (nil block-token string 608 . 609) (nil font-lock-face web-mode-block-string-face 608 . 609) (nil block-side t 606 . 608) (nil block-token string 606 . 608) (nil font-lock-face web-mode-block-string-face 606 . 608) (nil block-side t 604 . 606) (nil block-side t 600 . 604) (nil face web-mode-filter-face 600 . 604) (nil block-side t 597 . 600) (nil block-side t 593 . 597) (nil face web-mode-variable-name-face 593 . 597) (nil block-side t 592 . 593) (nil block-side t 588 . 592) (nil face web-mode-variable-name-face 588 . 592) (nil block-side t 587 . 588) (nil block-side t 586 . 587) (nil block-token delimiter-beg 586 . 587) (nil font-lock-face web-mode-block-delimiter-face 586 . 587) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 586 . 587) (nil block-beg 0 585 . 586) (nil block-controls 0 585 . 586) (nil block-side t 585 . 586) (nil block-token delimiter-beg 585 . 586) (nil font-lock-face web-mode-block-delimiter-face 585 . 586) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 585 . 586) (nil tag-name "a" 570 . 571) (nil tag-type end 570 . 571) (nil tag-end t 570 . 571) (nil font-lock-face web-mode-html-tag-bracket-face 570 . 571) (nil tag-name "a" 569 . 570) (nil tag-type end 569 . 570) (nil font-lock-face web-mode-html-tag-face 569 . 570) (nil tag-name "a" 568 . 569) (nil tag-type end 568 . 569) (nil font-lock-face web-mode-html-tag-bracket-face 568 . 569) (nil tag-name "a" 567 . 568) (nil tag-type end 567 . 568) (nil tag-beg 20 567 . 568) (nil font-lock-face web-mode-html-tag-bracket-face 567 . 568) (nil block-side t 566 . 567) (nil block-end t 566 . 567) (nil block-token delimiter-end 566 . 567) (nil font-lock-face web-mode-block-delimiter-face 566 . 567) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 566 . 567) (nil block-side t 565 . 566) (nil block-token delimiter-end 565 . 566) (nil font-lock-face web-mode-block-delimiter-face 565 . 566) (nil block-side t 564 . 565) (nil block-side t 559 . 564) (nil face web-mode-block-control-face 559 . 564) (nil block-side t 558 . 559) (nil block-side t 557 . 558) (nil block-token delimiter-beg 557 . 558) (nil font-lock-face web-mode-block-delimiter-face 557 . 558) (nil block-beg 0 556 . 557) (nil block-controls 0 556 . 557) (nil block-side t 556 . 557) (nil block-token delimiter-beg 556 . 557) (nil font-lock-face web-mode-block-delimiter-face 556 . 557) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 556 . 557) (nil block-side t 555 . 556) (nil block-end t 555 . 556) (nil block-token delimiter-end 555 . 556) (nil font-lock-face web-mode-block-delimiter-face 555 . 556) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 555 . 556) (nil block-side t 554 . 555) (nil block-token delimiter-end 554 . 555) (nil font-lock-face web-mode-block-delimiter-face 554 . 555) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 554 . 555) (nil block-side t 553 . 554) (nil block-side t 547 . 553) (nil face web-mode-variable-name-face 547 . 553) (nil block-side t 546 . 547) (nil block-side t 542 . 546) (nil face web-mode-variable-name-face 542 . 546) (nil block-side t 541 . 542) (nil block-side t 540 . 541) (nil block-token delimiter-beg 540 . 541) (nil font-lock-face web-mode-block-delimiter-face 540 . 541) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 540 . 541) (nil block-beg 0 539 . 540) (nil block-controls 0 539 . 540) (nil block-side t 539 . 540) (nil block-token delimiter-beg 539 . 540) (nil font-lock-face web-mode-block-delimiter-face 539 . 540) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 539 . 540) (nil block-side t 538 . 539) (nil block-end t 538 . 539) (nil block-token delimiter-end 538 . 539) (nil font-lock-face web-mode-block-delimiter-face 538 . 539) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 538 . 539) (nil block-side t 537 . 538) (nil block-token delimiter-end 537 . 538) (nil font-lock-face web-mode-block-delimiter-face 537 . 538) (nil block-side t 536 . 537) (nil block-side t 532 . 536) (nil face web-mode-block-control-face 532 . 536) (nil block-side t 531 . 532) (nil block-side t 530 . 531) (nil block-token delimiter-beg 530 . 531) (nil font-lock-face web-mode-block-delimiter-face 530 . 531) (nil block-beg 0 529 . 530) (nil block-controls 0 529 . 530) (nil block-side t 529 . 530) (nil block-token delimiter-beg 529 . 530) (nil font-lock-face web-mode-block-delimiter-face 529 . 530) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 529 . 530) (nil block-side t 528 . 529) (nil block-end t 528 . 529) (nil block-token delimiter-end 528 . 529) (nil font-lock-face web-mode-block-delimiter-face 528 . 529) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 528 . 529) (nil block-side t 527 . 528) (nil block-token delimiter-end 527 . 528) (nil font-lock-face web-mode-block-delimiter-face 527 . 528) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 527 . 528) (nil block-side t 526 . 527) (nil block-side t 520 . 526) (nil face web-mode-variable-name-face 520 . 526) (nil block-side t 519 . 520) (nil block-side t 515 . 519) (nil face web-mode-variable-name-face 515 . 519) (nil block-side t 514 . 515) (nil block-side t 513 . 514) (nil block-token delimiter-beg 513 . 514) (nil font-lock-face web-mode-block-delimiter-face 513 . 514) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 513 . 514) (nil block-beg 0 512 . 513) (nil block-controls 0 512 . 513) (nil block-side t 512 . 513) (nil block-token delimiter-beg 512 . 513) (nil font-lock-face web-mode-block-delimiter-face 512 . 513) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 512 . 513) (nil block-side t 511 . 512) (nil block-end t 511 . 512) (nil block-token delimiter-end 511 . 512) (nil font-lock-face web-mode-block-delimiter-face 511 . 512) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 511 . 512) (nil block-side t 510 . 511) (nil block-token delimiter-end 510 . 511) (nil font-lock-face web-mode-block-delimiter-face 510 . 511) (nil block-side t 509 . 510) (nil block-side t 498 . 509) (nil face web-mode-variable-name-face 498 . 509) (nil block-side t 497 . 498) (nil block-side t 495 . 497) (nil face web-mode-block-control-face 495 . 497) (nil block-side t 494 . 495) (nil block-side t 493 . 494) (nil block-token delimiter-beg 493 . 494) (nil font-lock-face web-mode-block-delimiter-face 493 . 494) (nil block-beg 0 492 . 493) (nil block-controls 0 492 . 493) (nil block-side t 492 . 493) (nil block-token delimiter-beg 492 . 493) (nil font-lock-face web-mode-block-delimiter-face 492 . 493) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 492 . 493) (nil tag-name "a" 491 . 492) (nil tag-type start 491 . 492) (nil tag-end t 491 . 492) (nil font-lock-face web-mode-html-tag-bracket-face 491 . 492) (nil tag-attr t 490 . 491) (nil tag-attr-end 4 490 . 491) (nil tag-name "a" 490 . 491) (nil tag-type start 490 . 491) (nil font-lock-face web-mode-html-attr-value-face 490 . 491) (nil tag-attr t 488 . 490) (nil tag-name "a" 488 . 490) (nil tag-type start 488 . 490) (nil font-lock-face web-mode-html-attr-value-face 488 . 490) (nil tag-attr t 487 . 488) (nil tag-name "a" 487 . 488) (nil tag-type start 487 . 488) (nil font-lock-face web-mode-html-attr-equal-face 487 . 488) (nil tag-attr t 484 . 487) (nil tag-name "a" 484 . 487) (nil tag-type start 484 . 487) (nil font-lock-face web-mode-html-attr-name-face 484 . 487) (nil tag-attr-beg 0 483 . 484) (nil tag-attr t 483 . 484) (nil tag-name "a" 483 . 484) (nil tag-type start 483 . 484) (nil font-lock-face web-mode-html-attr-name-face 483 . 484) (nil tag-name "a" 482 . 483) (nil tag-type start 482 . 483) (nil tag-name "a" 481 . 482) (nil tag-type start 481 . 482) (nil font-lock-face web-mode-html-tag-face 481 . 482) (nil tag-name "a" 480 . 481) (nil tag-type start 480 . 481) (nil tag-beg 17 480 . 481) (nil font-lock-face web-mode-html-tag-bracket-face 480 . 481) (nil tag-name "span" 459 . 460) (nil tag-type start 459 . 460) (nil tag-end t 459 . 460) (nil font-lock-face web-mode-html-tag-bracket-face 459 . 460) (nil tag-attr t 458 . 459) (nil tag-attr-end 5 458 . 459) (nil tag-name "span" 458 . 459) (nil tag-type start 458 . 459) (nil font-lock-face web-mode-html-attr-value-face 458 . 459) (nil tag-attr t 453 . 458) (nil tag-name "span" 453 . 458) (nil tag-type start 453 . 458) (nil font-lock-face web-mode-html-attr-value-face 453 . 458) (nil tag-attr t 452 . 453) (nil tag-name "span" 452 . 453) (nil tag-type start 452 . 453) (nil font-lock-face web-mode-html-attr-equal-face 452 . 453) (nil tag-attr t 448 . 452) (nil tag-name "span" 448 . 452) (nil tag-type start 448 . 452) (nil font-lock-face web-mode-html-attr-name-face 448 . 452) (nil tag-attr-beg 0 447 . 448) (nil tag-attr t 447 . 448) (nil tag-name "span" 447 . 448) (nil tag-type start 447 . 448) (nil font-lock-face web-mode-html-attr-name-face 447 . 448) (nil tag-name "span" 446 . 447) (nil tag-type start 446 . 447) (nil tag-name "span" 442 . 446) (nil tag-type start 442 . 446) (nil font-lock-face web-mode-html-tag-face 442 . 446) (nil tag-name "span" 441 . 442) (nil tag-type start 441 . 442) (nil tag-beg 17 441 . 442) (nil font-lock-face web-mode-html-tag-bracket-face 441 . 442) (nil block-side t 431 . 432) (nil block-end t 431 . 432) (nil block-token delimiter-end 431 . 432) (nil font-lock-face web-mode-block-delimiter-face 431 . 432) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 431 . 432) (nil block-side t 430 . 431) (nil block-token delimiter-end 430 . 431) (nil font-lock-face web-mode-block-delimiter-face 430 . 431) (nil block-side t 429 . 430) (nil block-side t 424 . 429) (nil face web-mode-block-control-face 424 . 429) (nil block-side t 423 . 424) (nil block-side t 422 . 423) (nil block-token delimiter-beg 422 . 423) (nil font-lock-face web-mode-block-delimiter-face 422 . 423) (nil block-beg 0 421 . 422) (nil block-controls 0 421 . 422) (nil block-side t 421 . 422) (nil block-token delimiter-beg 421 . 422) (nil font-lock-face web-mode-block-delimiter-face 421 . 422) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 421 . 422) (nil tag-name "h2" 411 . 412) (nil tag-type end 411 . 412) (nil tag-end t 411 . 412) (nil font-lock-face web-mode-html-tag-bracket-face 411 . 412) (nil tag-name "h2" 409 . 411) (nil tag-type end 409 . 411) (nil font-lock-face web-mode-html-tag-face 409 . 411) (nil tag-name "h2" 408 . 409) (nil tag-type end 408 . 409) (nil font-lock-face web-mode-html-tag-bracket-face 408 . 409) (nil tag-name "h2" 407 . 408) (nil tag-type end 407 . 408) (nil tag-beg 20 407 . 408) (nil font-lock-face web-mode-html-tag-bracket-face 407 . 408) (nil block-side t 406 . 407) (nil block-end t 406 . 407) (nil block-token delimiter-end 406 . 407) (nil font-lock-face web-mode-block-delimiter-face 406 . 407) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 406 . 407) (nil block-side t 405 . 406) (nil block-token delimiter-end 405 . 406) (nil font-lock-face web-mode-block-delimiter-face 405 . 406) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 405 . 406) (nil block-side t 404 . 405) (nil block-side t 396 . 404) (nil face web-mode-variable-name-face 396 . 404) (nil block-side t 395 . 396) (nil block-side t 391 . 395) (nil face web-mode-variable-name-face 391 . 395) (nil block-side t 390 . 391) (nil block-side t 389 . 390) (nil block-token delimiter-beg 389 . 390) (nil font-lock-face web-mode-block-delimiter-face 389 . 390) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 389 . 390) (nil block-beg 0 388 . 389) (nil block-controls 0 388 . 389) (nil block-side t 388 . 389) (nil block-token delimiter-beg 388 . 389) (nil font-lock-face web-mode-block-delimiter-face 388 . 389) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 388 . 389) (nil tag-name "h2" 387 . 388) (nil tag-type start 387 . 388) (nil tag-end t 387 . 388) (nil font-lock-face web-mode-html-tag-bracket-face 387 . 388) (nil tag-attr t 386 . 387) (nil tag-attr-end 5 386 . 387) (nil tag-name "h2" 386 . 387) (nil tag-type start 386 . 387) (nil font-lock-face web-mode-html-attr-value-face 386 . 387) (nil tag-attr t 375 . 386) (nil tag-name "h2" 375 . 386) (nil tag-type start 375 . 386) (nil font-lock-face web-mode-html-attr-value-face 375 . 386) (nil tag-attr t 374 . 375) (nil tag-name "h2" 374 . 375) (nil tag-type start 374 . 375) (nil font-lock-face web-mode-html-attr-equal-face 374 . 375) (nil tag-attr t 370 . 374) (nil tag-name "h2" 370 . 374) (nil tag-type start 370 . 374) (nil font-lock-face web-mode-html-attr-name-face 370 . 374) (nil tag-attr-beg 0 369 . 370) (nil tag-attr t 369 . 370) (nil tag-name "h2" 369 . 370) (nil tag-type start 369 . 370) (nil font-lock-face web-mode-html-attr-name-face 369 . 370) (nil tag-name "h2" 368 . 369) (nil tag-type start 368 . 369) (nil tag-name "h2" 366 . 368) (nil tag-type start 366 . 368) (nil font-lock-face web-mode-html-tag-face 366 . 368) (nil tag-name "h2" 365 . 366) (nil tag-type start 365 . 366) (nil tag-beg 17 365 . 366) (nil font-lock-face web-mode-html-tag-bracket-face 365 . 366) (nil block-side t 353 . 354) (nil block-end t 353 . 354) (nil block-token delimiter-end 353 . 354) (nil font-lock-face web-mode-block-delimiter-face 353 . 354) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 353 . 354) (nil block-side t 352 . 353) (nil block-token delimiter-end 352 . 353) (nil font-lock-face web-mode-block-delimiter-face 352 . 353) (nil block-side t 351 . 352) (nil block-side t 338 . 351) (nil face web-mode-variable-name-face 338 . 351) (nil block-side t 337 . 338) (nil block-side t 335 . 337) (nil face web-mode-block-control-face 335 . 337) (nil block-side t 334 . 335) (nil block-side t 333 . 334) (nil block-token delimiter-beg 333 . 334) (nil font-lock-face web-mode-block-delimiter-face 333 . 334) (nil block-beg 0 332 . 333) (nil block-controls 0 332 . 333) (nil block-side t 332 . 333) (nil block-token delimiter-beg 332 . 333) (nil font-lock-face web-mode-block-delimiter-face 332 . 333) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 332 . 333) (nil tag-name "h1" 322 . 323) (nil tag-type end 322 . 323) (nil tag-end t 322 . 323) (nil font-lock-face web-mode-html-tag-bracket-face 322 . 323) (nil tag-name "h1" 320 . 322) (nil tag-type end 320 . 322) (nil font-lock-face web-mode-html-tag-face 320 . 322) (nil tag-name "h1" 319 . 320) (nil tag-type end 319 . 320) (nil font-lock-face web-mode-html-tag-bracket-face 319 . 320) (nil tag-name "h1" 318 . 319) (nil tag-type end 318 . 319) (nil tag-beg 20 318 . 319) (nil font-lock-face web-mode-html-tag-bracket-face 318 . 319) (nil block-side t 317 . 318) (nil block-end t 317 . 318) (nil block-token delimiter-end 317 . 318) (nil font-lock-face web-mode-block-delimiter-face 317 . 318) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 317 . 318) (nil block-side t 316 . 317) (nil block-token delimiter-end 316 . 317) (nil font-lock-face web-mode-block-delimiter-face 316 . 317) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 316 . 317) (nil block-side t 315 . 316) (nil block-side t 310 . 315) (nil face web-mode-variable-name-face 310 . 315) (nil block-side t 309 . 310) (nil block-side t 305 . 309) (nil face web-mode-variable-name-face 305 . 309) (nil block-side t 304 . 305) (nil block-side t 303 . 304) (nil block-token delimiter-beg 303 . 304) (nil font-lock-face web-mode-block-delimiter-face 303 . 304) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 303 . 304) (nil block-beg 0 302 . 303) (nil block-controls 0 302 . 303) (nil block-side t 302 . 303) (nil block-token delimiter-beg 302 . 303) (nil font-lock-face web-mode-block-delimiter-face 302 . 303) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 302 . 303) (nil tag-name "h1" 301 . 302) (nil tag-type start 301 . 302) (nil tag-end t 301 . 302) (nil font-lock-face web-mode-html-tag-bracket-face 301 . 302) (nil tag-name "h1" 299 . 301) (nil tag-type start 299 . 301) (nil font-lock-face web-mode-html-tag-face 299 . 301) (nil tag-name "h1" 298 . 299) (nil tag-type start 298 . 299) (nil tag-beg 16 298 . 299) (nil font-lock-face web-mode-html-tag-bracket-face 298 . 299) (290 . 755)) nil (25353 16451 237152 772000) 0 nil])
([nil nil (("        " . -290) 304 (t 25353 16451 249068 15000)) nil (25353 16465 451098 871000) 0 nil])
([nil nil ((747 . 756)) nil (25353 16465 451093 845000) 0 nil])
([nil nil ((756 . 760)) nil (25353 16465 451089 441000) 0 nil])
([nil nil (("<" . -759) (undo-tree-id12 . -1) 760) nil (25353 16465 451083 927000) 0 nil])
([nil nil ((759 . 760) (759 . 760)) nil (25353 16465 451076 785000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr")) . -759) (undo-tree-id11 . -1) 760) nil (25353 16495 84810 485000) 0 nil])
([nil nil ((798 . 806) (#("          " 0 10 (face whitespace-trailing tag-type void tag-name "hr")) . 797) (undo-tree-id64 . -8) (undo-tree-id65 . 10) (805 . 807) (796 . 806) (t 25353 16465 457216 793000)) nil (25353 16529 552305 624000) 0 nil] [nil nil ((798 . 806) (#("          " 0 10 (face whitespace-trailing tag-type void tag-name "hr")) . 797) (undo-tree-id13 . -8) (undo-tree-id14 . 10) (805 . 807) (796 . 806) (t 25353 16465 457216 793000)) ((#("
        
" 0 1 (tag-type void tag-name "hr") 1 9 (face whitespace-trailing tag-type void tag-name "hr") 9 10 (tag-type void tag-name "hr")) . 796) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (#("  " 0 2 (face whitespace-trailing tag-type void tag-name "hr")) . 805) (797 . 807) (#("        " 0 8 (tag-type void tag-name "hr")) . 798) (undo-tree-id17 . -8)) (25353 16495 79447 703000) 0 nil])
([nil nil ((816 . 820) (806 . 817)) nil (25353 16529 552298 944000) 0 nil])
nil
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -817) (undo-tree-id61 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -818) (undo-tree-id62 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -819) (undo-tree-id63 . -1) 820) nil (25353 16529 552296 639000) 0 nil])
([nil nil ((817 . 819)) nil (25353 16529 552290 667000) 0 nil])
([nil nil ((821 . 822)) nil (25353 16529 552289 489000) 0 nil])
([nil nil ((">" . -821) (undo-tree-id60 . -1) 822) nil (25353 16529 552288 100000) 0 nil])
([nil nil ((821 . 825)) nil (25353 16529 552285 526000) 0 nil])
([nil nil ((821 . 824)) nil (25353 16529 552284 408000) 0 nil])
([nil nil ((824 . 843)) nil (25353 16529 552283 189000) 0 nil])
([nil nil (("l" . -822) (undo-tree-id22 . -1) (undo-tree-id23 . -1) ("i" . -823) (undo-tree-id24 . -1) (undo-tree-id25 . -1) ("c" . -824) (undo-tree-id26 . -1) (undo-tree-id27 . -1) ("k" . -825) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (" " . -826) (undo-tree-id30 . -1) (undo-tree-id31 . -1) ("h" . -827) (undo-tree-id32 . -1) (undo-tree-id33 . -1) ("e" . -828) (undo-tree-id34 . -1) (undo-tree-id35 . -1) ("r" . -829) (undo-tree-id36 . -1) (undo-tree-id37 . -1) ("e" . -830) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (" " . -831) (undo-tree-id40 . -1) (undo-tree-id41 . -1) ("t" . -832) (undo-tree-id42 . -1) (undo-tree-id43 . -1) ("o" . -833) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (" " . -834) (undo-tree-id46 . -1) (undo-tree-id47 . -1) ("r" . -835) (undo-tree-id48 . -1) (undo-tree-id49 . -1) ("e" . -836) (undo-tree-id50 . -1) (undo-tree-id51 . -1) ("a" . -837) (undo-tree-id52 . -1) (undo-tree-id53 . -1) ("d" . -838) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (" " . -839) (undo-tree-id56 . -1) ("o" . -840) (undo-tree-id57 . -1) ("n" . -841) (undo-tree-id58 . -1) (" " . -842) (undo-tree-id59 . -1) 843) nil (25353 16529 552275 454000) 0 nil])
([nil nil (("C" . -821) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 822) nil (25353 16529 552227 432000) 0 nil])
([nil nil ((821 . 830)) nil (25353 16529 552220 905000) 0 nil])
([nil nil (("W" . -829) (undo-tree-id19 . -1) 830) nil (25353 16529 552214 938000) 0 nil])
([nil nil ((829 . 833)) nil (25353 16529 552208 938000) 0 nil])
([nil nil ((833 . 837)) nil (25353 16529 552206 994000) 0 nil])
([nil nil ((" " . -836) (undo-tree-id18 . -1) 837) nil (25353 16529 552201 671000) 0 nil])
([nil nil ((815 . 816) (809 . 817) (t 25353 16529 557887 590000)) nil (25353 16554 967736 332000) 0 nil])
([nil nil ((828 . 829) (t 25353 16554 970153 364000)) nil (25353 16575 698982 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 839 . 840) (nil tag-attr t 829 . 840) (nil tag-name "a" 829 . 840) (nil tag-type start 829 . 840) (nil font-lock-face web-mode-html-attr-value-face 829 . 840) (829 . 840)) nil (25353 16575 698974 740000) 0 nil])
([nil nil ((796 . 797) (796 . 797) (t 25353 16575 702370 127000)) nil (25353 16604 576466 660000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr")) . -796) (undo-tree-id66 . -1) 797) nil (25353 16604 576460 755000) 0 nil])
([nil nil ((862 . 871) (t 25353 16604 586672 32000)) nil (25353 16622 293416 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 925 . 926) (nil tag-name "a" 925 . 926) (nil tag-type end 925 . 926) (nil tag-end t 925 . 926) (nil font-lock-face web-mode-html-tag-bracket-face 925 . 926) (nil tag-name "a" 924 . 925) (nil tag-type end 924 . 925) (nil font-lock-face web-mode-html-tag-face 924 . 925) (nil tag-name "a" 923 . 924) (nil tag-type end 923 . 924) (nil font-lock-face web-mode-html-tag-bracket-face 923 . 924) (nil tag-name "a" 922 . 923) (nil tag-type end 922 . 923) (nil tag-beg 20 922 . 923) (nil font-lock-face web-mode-html-tag-bracket-face 922 . 923) (nil tag-name "a" 906 . 907) (nil tag-type start 906 . 907) (nil tag-end t 906 . 907) (nil font-lock-face web-mode-html-tag-bracket-face 906 . 907) (nil tag-attr t 905 . 906) (nil tag-attr-end 5 905 . 906) (nil tag-name "a" 905 . 906) (nil tag-type start 905 . 906) (nil font-lock-face web-mode-html-attr-value-face 905 . 906) (nil rear-nonsticky t 904 . 905) (nil tag-attr t 904 . 905) (nil tag-name "a" 904 . 905) (nil tag-type start 904 . 905) (nil font-lock-face web-mode-html-attr-value-face 904 . 905) (nil tag-attr t 894 . 904) (nil tag-name "a" 894 . 904) (nil tag-type start 894 . 904) (nil font-lock-face web-mode-html-attr-value-face 894 . 904) (nil tag-attr t 889 . 894) (nil tag-name "a" 889 . 894) (nil tag-type start 889 . 894) (nil font-lock-face web-mode-html-attr-value-face 889 . 894) (nil tag-attr t 888 . 889) (nil tag-name "a" 888 . 889) (nil tag-type start 888 . 889) (nil font-lock-face web-mode-html-attr-equal-face 888 . 889) (nil tag-attr t 887 . 888) (nil tag-name "a" 887 . 888) (nil tag-type start 887 . 888) (nil font-lock-face web-mode-html-attr-name-face 887 . 888) (nil tag-attr t 886 . 887) (nil tag-name "a" 886 . 887) (nil tag-type start 886 . 887) (nil font-lock-face web-mode-html-attr-name-face 886 . 887) (nil tag-attr t 885 . 886) (nil tag-name "a" 885 . 886) (nil tag-type start 885 . 886) (nil font-lock-face web-mode-html-attr-name-face 885 . 886) (nil tag-attr t 884 . 885) (nil tag-name "a" 884 . 885) (nil tag-type start 884 . 885) (nil font-lock-face web-mode-html-attr-name-face 884 . 885) (nil tag-attr-beg 0 883 . 884) (nil tag-attr t 883 . 884) (nil tag-name "a" 883 . 884) (nil tag-type start 883 . 884) (nil font-lock-face web-mode-html-attr-name-face 883 . 884) (nil tag-name "a" 882 . 883) (nil tag-type start 882 . 883) (nil tag-attr t 881 . 882) (nil tag-attr-end 4 881 . 882) (nil tag-name "a" 881 . 882) (nil tag-type start 881 . 882) (nil font-lock-face web-mode-html-attr-value-face 881 . 882) (nil tag-attr t 879 . 881) (nil tag-name "a" 879 . 881) (nil tag-type start 879 . 881) (nil font-lock-face web-mode-html-attr-value-face 879 . 881) (nil tag-attr t 878 . 879) (nil tag-name "a" 878 . 879) (nil tag-type start 878 . 879) (nil font-lock-face web-mode-html-attr-equal-face 878 . 879) (nil tag-attr t 875 . 878) (nil tag-name "a" 875 . 878) (nil tag-type start 875 . 878) (nil font-lock-face web-mode-html-attr-name-face 875 . 878) (nil tag-attr-beg 0 874 . 875) (nil tag-attr t 874 . 875) (nil tag-name "a" 874 . 875) (nil tag-type start 874 . 875) (nil font-lock-face web-mode-html-attr-name-face 874 . 875) (nil tag-name "a" 873 . 874) (nil tag-type start 873 . 874) (nil tag-name "a" 872 . 873) (nil tag-type start 872 . 873) (nil font-lock-face web-mode-html-tag-face 872 . 873) (nil tag-name "a" 871 . 872) (nil tag-type start 871 . 872) (nil tag-beg 17 871 . 872) (nil font-lock-face web-mode-html-tag-bracket-face 871 . 872) (871 . 926)) nil (25353 16622 293409 445000) 0 nil])
([nil nil (("w" . -915) (undo-tree-id69 . -1) ("a" . -916) (undo-tree-id70 . -1) ("t" . -917) (undo-tree-id71 . -1) ("t" . -918) (undo-tree-id72 . -1) ("p" . -919) (undo-tree-id73 . -1) ("a" . -920) (undo-tree-id74 . -1) ("d" . -921) (undo-tree-id75 . -1) 922) nil (25353 16622 293384 159000) 0 nil])
([nil nil ((915 . 919)) nil (25353 16622 293373 182000) 0 nil])
([nil nil (("I" . -918) (undo-tree-id68 . -1) 919) nil (25353 16622 293371 482000) 0 nil])
([nil nil ((918 . 922)) nil (25353 16622 293367 507000) 0 nil])
([nil nil ((" " . -921) (undo-tree-id67 . -1) 922) nil (25353 16622 293362 448000) 0 nil])
([nil nil ((#("btn-primary" 0 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . 894) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (t 25353 16622 298857 114000)) nil (25353 16638 687264 183000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t)) . -893) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 894) nil (25353 16638 687258 967000) 0 nil])
([nil nil ((#(" btn-primary" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 1 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t rear-nonsticky t)) . 829) (undo-tree-id76 . -12) (undo-tree-id77 . -1) (undo-tree-id78 . -12)) nil (25353 16638 687250 463000) 0 nil])
([nil nil ((#("        {% if page.subtitle %}
          <h2 class=\"subheading\">{{ page.subtitle }}</h2>
        {% endif %}" 8 9 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((open . "if")) block-beg 0) 9 10 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 10 11 (block-side t) 11 13 (face web-mode-block-control-face block-side t) 13 14 (block-side t) 14 27 (face web-mode-variable-name-face block-side t) 27 28 (block-side t) 28 29 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 29 30 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 41 42 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2") 42 44 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2") 44 45 (tag-type start tag-name "h2") 45 46 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0) 46 50 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t) 50 51 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t) 51 62 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t) 62 63 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 5 tag-attr t) 63 64 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2") 64 65 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls nil block-beg 0) 65 66 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 66 67 (block-side t) 67 71 (face web-mode-variable-name-face block-side t) 71 72 (block-side t) 72 80 (face web-mode-variable-name-face block-side t) 80 81 (block-side t) 81 82 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 82 83 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 83 84 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2") 84 85 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2") 85 87 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2") 87 88 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2") 97 98 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls ((close . "if")) block-beg 0) 98 99 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 99 100 (block-side t) 100 105 (face web-mode-block-control-face block-side t) 105 106 (block-side t) 106 107 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 107 108 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 316) (undo-tree-id86 . -108) (undo-tree-id87 . -31) (undo-tree-id88 . -108) (t 25353 16638 695028 411000)) nil (25353 16660 169512 627000) 0 nil])
([nil nil (("
" . -315) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 316) nil (25353 16660 169502 809000) 0 nil])
([nil nil (("Posted" . 343) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (t 25353 16660 175252 781000)) nil (25353 16693 610346 792000) 0 nil])
([nil nil ((343 . 353)) nil (25353 16693 610343 38000) 0 nil])
([nil nil (("P" . -343) (undo-tree-id90 . -1) ("u" . -344) (undo-tree-id91 . -1) ("b" . -345) (undo-tree-id92 . -1) ("l" . -346) (undo-tree-id93 . -1) ("i" . -347) (undo-tree-id94 . -1) ("s" . -348) (undo-tree-id95 . -1) ("h" . -349) (undo-tree-id96 . -1) ("e" . -350) (undo-tree-id97 . -1) ("d" . -351) (undo-tree-id98 . -1) (" " . -352) (undo-tree-id99 . -1) 353) nil (25353 16693 610339 306000) 0 nil])
([nil nil ((343 . 351)) nil (25353 16693 610311 226000) 0 nil])
([nil nil ((" " . -350) (undo-tree-id89 . -1) 351) nil (25353 16693 610308 550000) 0 nil])
([nil nil ((466 . 480)) nil (25353 16693 610292 239000) 0 nil])
([nil nil ((#("&middot; {% include read_time.html
                                                            content=page.content %}" 0 8 (font-lock-face (web-mode-html-entity-face)) 9 10 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 10 11 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 11 12 (block-side t) 12 19 (face web-mode-block-control-face block-side t) 19 20 (block-side t) 20 34 (face web-mode-variable-name-face block-side t) 34 95 (block-side t) 95 102 (face web-mode-variable-name-face block-side t) 102 103 (block-side t) 103 115 (face web-mode-variable-name-face block-side t) 115 116 (block-side t) 116 117 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 117 118 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 519) (undo-tree-id104 . -118) (undo-tree-id105 . -35) (undo-tree-id106 . -118) (t 25353 16693 615601 972000)) nil (25353 16710 950769 275000) 0 nil])
([nil nil ((" " . -518) (undo-tree-id102 . -1) (undo-tree-id103 . -1) 519) nil (25353 16710 950757 987000) 0 nil])
([nil nil ((282 . 290) (#("        " 0 8 (face whitespace-trailing)) . 281) (281 . 289) (281 . 282) (t 25353 16710 955782 996000)) nil (25353 16847 878444 212000) 0 nil])
([nil nil ((282 . 290) (#("        " 0 8 (face whitespace-trailing)) . 281) (281 . 289) (281 . 282)) nil (25353 16847 878442 21000) 0 nil])
([nil nil ((296 . 302) (294 . 295) (290 . 295)) nil (25353 16847 878440 43000) 0 nil])
([nil nil ((#("/" 0 1 (tag-type void tag-name "img")) . -294) (undo-tree-id119 . -1) (#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "img")) . -295) (undo-tree-id120 . -1) ("<" . -296) (undo-tree-id121 . -1) ("/" . -297) (undo-tree-id122 . -1) (#("d" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type end tag-name "d")) . -298) (undo-tree-id123 . -1) (#("i" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type end tag-name "di")) . -299) (undo-tree-id124 . -1) (#("v" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type end tag-name "div")) . -300) (undo-tree-id125 . -1) (#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . -301) (undo-tree-id126 . -1) 302) nil (25353 16847 878436 643000) 0 nil])
([nil nil ((294 . 299)) nil (25353 16847 878422 753000) 0 nil])
([nil nil ((#("?" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type void tag-name "img" tag-attr-end 0 tag-attr t)) . -298) (undo-tree-id118 . -1) 299) nil (25353 16847 878421 306000) 0 nil])
([nil nil ((298 . 301)) nil (25353 16847 878418 831000) 0 nil])
([nil nil ((301 . 302) (301 . 302)) nil (25353 16847 878417 710000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-tag-face tag-type void tag-name "i")) . -291) (undo-tree-id115 . -1) (#("m" 0 1 (font-lock-face web-mode-html-tag-face tag-type void tag-name "im")) . -292) (undo-tree-id116 . -1) (#("g" 0 1 (font-lock-face web-mode-html-tag-face tag-type void tag-name "img")) . -293) (undo-tree-id117 . -1) 294) nil (25353 16847 878415 668000) 0 nil])
([nil nil ((291 . 294)) nil (25353 16847 878410 706000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-html-tag-face tag-type void tag-name "dv")) . -292) (undo-tree-id113 . -1) (#("i" 0 1 (font-lock-face web-mode-html-tag-face tag-type void tag-name "dvi")) . -293) (undo-tree-id114 . -1) 294) nil (25353 16847 878409 67000) 0 nil])
([nil nil ((292 . 294)) nil (25353 16847 878405 153000) 0 nil])
([nil nil ((#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 301) (#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "div")) . 301)) nil (25353 16847 878403 752000) 0 nil])
([nil nil ((301 . 308)) nil (25353 16847 878402 399000) 0 nil])
([nil nil ((#("src=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 3 tag-attr t)) . 295) (undo-tree-id107 . -6) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6)) nil (25353 16847 878400 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 350 . 351) (nil tag-name "div" 349 . 351) (nil tag-type start 349 . 351) (nil rear-nonsticky t 348 . 349) (nil block-side t 348 . 349) (nil block-end t 348 . 349) (nil block-token delimiter-end 348 . 349) (nil tag-name "div" 348 . 349) (nil tag-type start 348 . 349) (nil font-lock-face web-mode-block-delimiter-face 348 . 349) (nil block-side t 347 . 348) (nil block-token delimiter-end 347 . 348) (nil tag-name "div" 347 . 348) (nil tag-type start 347 . 348) (nil font-lock-face web-mode-block-delimiter-face 347 . 348) (nil block-side t 346 . 347) (nil tag-name "div" 346 . 347) (nil tag-type start 346 . 347) (nil block-side t 340 . 346) (nil tag-name "div" 340 . 346) (nil tag-type start 340 . 346) (nil face web-mode-filter-face 340 . 346) (nil block-side t 337 . 340) (nil tag-name "div" 337 . 340) (nil tag-type start 337 . 340) (nil block-side t 332 . 337) (nil tag-name "div" 332 . 337) (nil tag-type start 332 . 337) (nil face web-mode-variable-name-face 332 . 337) (nil block-side t 331 . 332) (nil tag-name "div" 331 . 332) (nil tag-type start 331 . 332) (nil block-side t 327 . 331) (nil tag-name "div" 327 . 331) (nil tag-type start 327 . 331) (nil face web-mode-variable-name-face 327 . 331) (nil block-side t 326 . 327) (nil tag-name "div" 326 . 327) (nil tag-type start 326 . 327) (nil block-side t 325 . 326) (nil block-token delimiter-beg 325 . 326) (nil tag-name "div" 325 . 326) (nil tag-type start 325 . 326) (nil font-lock-face web-mode-block-delimiter-face 325 . 326) (nil block-beg 0 324 . 325) (nil block-controls 0 324 . 325) (nil block-side t 324 . 325) (nil block-token delimiter-beg 324 . 325) (nil tag-name "div" 324 . 325) (nil tag-type start 324 . 325) (nil font-lock-face web-mode-block-delimiter-face 324 . 325) (nil tag-name "div" 323 . 324) (nil tag-type start 323 . 324) (nil tag-name "div" 302 . 323) (nil tag-type start 302 . 323) (nil tag-name "div" 301 . 302) (nil tag-type start 301 . 302) (nil tag-attr t 300 . 301) (nil tag-attr-end 5 300 . 301) (nil tag-name "div" 300 . 301) (nil tag-type start 300 . 301) (nil font-lock-face web-mode-html-attr-equal-face 300 . 301) (nil tag-attr t 299 . 300) (nil tag-name "div" 299 . 300) (nil tag-type start 299 . 300) (nil font-lock-face web-mode-html-attr-name-face 299 . 300) (nil tag-attr t 298 . 299) (nil tag-name "div" 298 . 299) (nil tag-type start 298 . 299) (nil font-lock-face web-mode-html-attr-name-face 298 . 299) (nil tag-attr t 297 . 298) (nil tag-name "div" 297 . 298) (nil tag-type start 297 . 298) (nil font-lock-face web-mode-html-attr-name-face 297 . 298) (nil tag-attr t 296 . 297) (nil tag-name "div" 296 . 297) (nil tag-type start 296 . 297) (nil font-lock-face web-mode-html-attr-name-face 296 . 297) (nil tag-attr-beg 0 295 . 296) (nil tag-attr t 295 . 296) (nil tag-name "div" 295 . 296) (nil tag-type start 295 . 296) (nil font-lock-face web-mode-html-attr-name-face 295 . 296) (295 . 351)) nil (25353 16847 878380 109000) 0 nil])
([nil nil ((351 . 352)) nil (25353 16847 878359 74000) 0 nil])
([nil nil ((#("        " 0 7 (face whitespace-trailing) 7 8 (face whitespace-trailing)) . -360) 352) nil (25353 16847 878350 999000) 0 nil])
([nil nil ((302 . 314) (t 25353 16847 885211 534000)) nil (25353 16871 886679 638000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -313) (undo-tree-id127 . -1) 314) nil (25353 16871 886676 525000) 0 nil])
([nil nil ((312 . 314)) nil (25353 16871 886659 976000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -342) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("t" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -343) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 344 (t 25353 16871 893461 843000)) nil (25353 16897 708256 203000) 0 nil])
([nil nil ((342 . 345)) nil (25353 16897 708249 297000) 0 nil])
([nil nil ((#("o" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -341) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("a" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -342) (undo-tree-id130 . -1) (#("g" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -343) (undo-tree-id131 . -1) (#("e" 0 1 (face web-mode-variable-name-face tag-type start tag-name "div" tag-attr t block-side t)) . -344) (undo-tree-id132 . -1) 345) nil (25353 16897 708245 508000) 0 nil])
([nil nil ((341 . 344)) nil (25353 16911 461443 208000) 0 nil])
([nil nil ((315 . 336)) nil (25353 16948 313737 107000) 0 nil] [nil nil ((#("height:830px;" 0 13 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 302) (undo-tree-id137 . -13) (undo-tree-id138 . -13) (t 25353 16897 713731 15000)) ((302 . 315) (t 25353 16907 237830 284000)) (25353 16907 232501 697000) 0 nil])
([nil nil ((336 . 340)) nil (25353 16948 313734 543000) 0 nil])
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -339) (undo-tree-id139 . -1) 340) nil (25353 16948 313730 434000) 0 nil])
([nil nil ((339 . 341)) nil (25353 16948 313712 185000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -332) (undo-tree-id140 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -333) (undo-tree-id141 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -334) (undo-tree-id142 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -335) (undo-tree-id143 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -336) (undo-tree-id144 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -337) (undo-tree-id145 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -338) (undo-tree-id146 . -1) 339 (t 25353 16948 318258 413000)) nil (25353 16964 93345 826000) 0 nil])
([nil nil ((332 . 335)) nil (25353 16964 93320 204000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -332) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -333) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -334) (undo-tree-id152 . -1) 335 (t 25353 16964 98422 837000)) nil (25353 17038 627146 946000) 0 nil])
([nil nil ((332 . 338)) nil (25353 17038 627109 395000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -337) (undo-tree-id147 . -1) 338) nil (25353 17038 627103 722000) 0 nil])
([nil nil ((#("over" 0 4 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 333) (undo-tree-id154 . -4) (undo-tree-id155 . -3) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (t 25353 17038 635199 293000)) nil (25353 17059 968171 966000) 0 nil])
([nil nil ((333 . 340)) nil (25353 17059 968162 750000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -339) (undo-tree-id153 . -1) 340) nil (25353 17059 968157 308000) 0 nil])
([nil nil ((302 . 315) (t 25353 17059 975421 544000)) nil (25353 17079 570604 30000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -308) (undo-tree-id160 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -309) (undo-tree-id161 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id162 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -311) (undo-tree-id163 . -1) (#(":" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -312) (undo-tree-id164 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -313) (undo-tree-id165 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -314) (undo-tree-id166 . -1) 315) nil (25353 17079 570600 960000) 0 nil])
([nil nil ((308 . 312)) nil (25353 17079 570589 945000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id158 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -311) (undo-tree-id159 . -1) 312) nil (25353 17079 570587 159000) 0 nil])
([nil nil ((310 . 316)) nil (25353 17079 570556 621000) 0 nil])
([nil nil ((311 . 312) (t 25353 17079 575625 649000)) nil (25353 17085 482216 884000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id167 . -1) (#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -311) (undo-tree-id168 . -1) 312) nil (25353 17085 482213 485000) 0 nil])
([nil nil ((310 . 311)) nil (25353 17085 482195 575000) 0 nil])
([nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 324) (t 25353 17085 487687 210000)) nil (25353 17094 375481 731000) 0 nil])
([nil nil ((324 . 325)) nil (25353 17094 375474 68000) 0 nil])
([nil nil ((316 . 321) (t 25353 17094 379779 799000)) nil (25353 17162 330722 593000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -318) (undo-tree-id169 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -319) (undo-tree-id170 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -320) (undo-tree-id171 . -1) 321) nil (25353 17162 330719 132000) 0 nil])
([nil nil ((318 . 328)) nil (25353 17162 330700 286000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -323) (undo-tree-id172 . -1) 324 (t 25353 17162 336487 268000)) nil (25353 17172 87940 364000) 0 nil])
([nil nil ((323 . 324)) nil (25353 17172 87925 77000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -323) (undo-tree-id173 . -1) 324 (t 25353 17172 96588 860000)) nil (25353 17184 533141 675000) 0 nil])
([nil nil ((323 . 324)) nil (25353 17184 533125 606000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id175 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -311) (undo-tree-id176 . -1) 312 (t 25353 17184 540718 384000)) nil (25353 17193 48785 541000) 0 nil])
([nil nil ((310 . 314)) nil (25353 17193 48780 608000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -313) (undo-tree-id174 . -1) 314) nil (25353 17193 48777 923000) 0 nil])
([nil nil ((#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 313) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 313)) nil (25353 17193 48762 912000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id177 . -1) 311 (t 25353 17193 56807 22000)) nil (25353 17203 100253 200000) 0 nil])
([nil nil ((310 . 311)) nil (25353 17203 100236 838000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 334) (t 25353 17203 108911 640000)) nil (25353 17224 196666 934000) 0 nil])
([nil nil ((334 . 335)) nil (25353 17224 196659 786000) 0 nil])
([nil nil ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -334) (undo-tree-id178 . -1) 335 (t 25353 17224 205131 186000)) nil (25353 17234 641228 375000) 0 nil])
([nil nil ((334 . 335)) nil (25353 17234 641217 873000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 335)) nil (25353 17234 641215 549000) 0 nil])
([nil nil ((335 . 336)) nil (25353 17234 641208 662000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -335) (undo-tree-id179 . -1) 336 (t 25353 17234 649239 870000)) nil (25353 17239 840183 726000) 0 nil])
([nil nil ((335 . 336)) nil (25353 17239 840167 259000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -359) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -360) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -361) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -362) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -363) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 364 (t 25353 17239 853294 25000)) nil (25353 17250 541486 225000) 0 nil])
([nil nil ((359 . 362)) nil (25353 17267 749277 511000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -322) (undo-tree-id202 . -1) 323) nil (25353 17271 7080 911000) 0 nil] [nil nil ((#("3" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -310) (undo-tree-id200 . -1) 311 (t 25353 17250 553405 373000)) ((310 . 311)) (25353 17267 348164 659000) 0 nil])
([nil nil ((322 . 323)) nil (25353 17271 7064 449000) 0 nil])
([nil nil ((310 . 311)) ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 310) (undo-tree-id201 . -1) (t 25353 17260 45504 143000)) (25353 17260 34965 966000) 0 nil])
([nil nil ((#("8" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 334) (t 25353 17271 9618 226000)) nil (25353 17281 355171 698000) 0 nil])
nil
([nil nil ((334 . 335)) nil (25353 17281 355170 69000) 0 nil])
([nil nil ((#("7" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 335)) nil (25353 17281 355167 877000) 0 nil])
([nil nil ((335 . 336)) nil (25353 17281 355160 613000) 0 nil])
([nil nil ((421 . 430) (t 25353 17281 365725 993000)) nil (25354 20776 542556 73000) 0 nil])
([nil nil ((434 . 435) (430 . 435)) nil (25354 20776 542554 610000) 0 nil])
([nil nil ((434 . 442)) nil (25354 20776 542552 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 464 . 465) (nil block-side t 464 . 465) (nil block-end t 464 . 465) (nil block-token delimiter-end 464 . 465) (nil tag-attr t 464 . 465) (nil tag-name "img" 464 . 465) (nil tag-type void 464 . 465) (nil font-lock-face web-mode-block-delimiter-face 464 . 465) (nil block-side t 463 . 464) (nil block-token delimiter-end 463 . 464) (nil tag-attr t 463 . 464) (nil tag-name "img" 463 . 464) (nil tag-type void 463 . 464) (nil font-lock-face web-mode-block-delimiter-face 463 . 464) (nil block-side t 462 . 463) (nil tag-attr t 462 . 463) (nil tag-name "img" 462 . 463) (nil tag-type void 462 . 463) (nil block-side t 456 . 462) (nil tag-attr t 456 . 462) (nil tag-name "img" 456 . 462) (nil tag-type void 456 . 462) (nil face web-mode-filter-face 456 . 462) (nil block-side t 453 . 456) (nil tag-attr t 453 . 456) (nil tag-name "img" 453 . 456) (nil tag-type void 453 . 456) (nil block-side t 448 . 453) (nil tag-attr t 448 . 453) (nil tag-name "img" 448 . 453) (nil tag-type void 448 . 453) (nil face web-mode-variable-name-face 448 . 453) (nil block-side t 447 . 448) (nil tag-attr t 447 . 448) (nil tag-name "img" 447 . 448) (nil tag-type void 447 . 448) (nil block-side t 443 . 447) (nil tag-attr t 443 . 447) (nil tag-name "img" 443 . 447) (nil tag-type void 443 . 447) (nil face web-mode-variable-name-face 443 . 447) (nil block-side t 442 . 443) (nil tag-attr t 442 . 443) (nil tag-name "img" 442 . 443) (nil tag-type void 442 . 443) (nil block-side t 441 . 442) (nil block-token delimiter-beg 441 . 442) (nil tag-attr t 441 . 442) (nil tag-name "img" 441 . 442) (nil tag-type void 441 . 442) (nil font-lock-face web-mode-block-delimiter-face 441 . 442) (nil block-beg 0 440 . 441) (nil block-controls 0 440 . 441) (nil block-side t 440 . 441) (nil block-token delimiter-beg 440 . 441) (nil tag-attr t 440 . 441) (nil tag-name "img" 440 . 441) (nil tag-type void 440 . 441) (nil font-lock-face web-mode-block-delimiter-face 440 . 441) (440 . 465)) nil (25354 20776 542547 378000) 0 nil])
([nil nil ((290 . 430) (#("<div style=\"margin: 3vw; width: 70%; height:700px;background-size: cover; background-image: url({{ page.cover | escape }});\"></div>" 0 1 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "div" tag-type start) 5 6 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 11 96 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 96 97 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 97 98 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 98 99 (block-side t tag-attr t tag-name "div" tag-type start) 99 103 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 103 104 (block-side t tag-attr t tag-name "div" tag-type start) 104 109 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 109 112 (block-side t tag-attr t tag-name "div" tag-type start) 112 118 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 118 119 (block-side t tag-attr t tag-name "div" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 121 123 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 123 124 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 124 125 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 125 126 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 126 127 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 127 130 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 130 131 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 290) (undo-tree-id0 . -131) (undo-tree-id1 . -88) (undo-tree-id2 . -131) (undo-tree-id3 . -121) (undo-tree-id4 . -121) (undo-tree-id5 . -131) (undo-tree-id6 . -131)) nil (25354 20776 542515 346000) 0 nil])
([nil nil ((444 . 453) (t 25354 20776 548251 994000)) nil (25354 20800 667080 825000) 0 nil])
([nil nil ((451 . 455)) nil (25354 20800 667078 802000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -453) (undo-tree-id7 . -1) (#("e" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -454) (undo-tree-id8 . -1) 455) nil (25354 20800 667075 641000) 0 nil])
([nil nil ((453 . 455)) nil (25354 20800 667057 230000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -451) (undo-tree-id9 . -1) 452 (t 25354 20800 676513 191000)) nil (25354 20805 170381 387000) 0 nil])
([nil nil ((451 . 453)) nil (25354 20805 170364 630000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -451) (undo-tree-id13 . -1) (#("5" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -452) (undo-tree-id14 . -1) 453 (t 25354 20805 176562 135000)) nil (25354 20819 340925 865000) 0 nil])
([nil nil ((451 . 453)) nil (25354 20819 340920 566000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -453) (undo-tree-id10 . -1) (#("e" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -454) (undo-tree-id11 . -1) (#("m" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -455) (undo-tree-id12 . -1) 456) nil (25354 20819 340917 78000) 0 nil])
([nil nil ((453 . 455)) nil (25354 20819 340896 988000) 0 nil])
([nil nil ((453 . 454) (t 25354 20819 348716 733000)) nil (25354 20824 177396 953000) 0 nil])
([nil nil ((#("7" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -451) (undo-tree-id16 . -1) 452 (t 25354 20824 184769 640000)) nil (25354 20838 205927 271000) 0 nil])
([nil nil ((451 . 452)) nil (25354 20838 205923 450000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -451) (undo-tree-id15 . -1) 452) nil (25354 20838 205920 582000) 0 nil])
([nil nil ((451 . 452)) nil (25354 20838 205904 812000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -451) (undo-tree-id17 . -1) 452 (t 25354 20838 212923 551000)) nil (25354 20849 174424 7000) 0 nil])
([nil nil ((451 . 452)) nil (25354 20849 174406 716000) 0 nil])
([nil nil ((432 . 440) ("        " . 431) (undo-tree-id58 . -8) (430 . 440) (t 25354 20849 181044 338000)) nil (25354 20888 776712 698000) 0 nil])
([nil nil ((440 . 442)) nil (25354 20888 776709 333000) 0 nil])
([nil nil ((#("v" 0 1 (tag-name "v" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -441) (undo-tree-id57 . -1) 442) nil (25354 20888 776707 813000) 0 nil])
([nil nil ((441 . 451)) nil (25354 20888 776705 177000) 0 nil])
([nil nil ((446 . 456) (447 . 455) (#("          " 0 10 (face whitespace-trailing)) . 446) (446 . 456) (446 . 447) ("        " . 446) (445 . 454)) nil (25354 20888 776703 295000) 0 nil])
([nil nil ((#("        <img width=\"200vw\" src=\"{{ page.cover | escape }}\" />
" 8 9 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 9 12 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 12 13 (tag-name "img" tag-type void) 13 14 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 19 25 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "img" tag-type void) 27 28 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 31 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t tag-attr t tag-name "img" tag-type void) 35 36 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 36 39 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 39 40 (block-side t tag-attr t tag-name "img" tag-type void) 40 44 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 45 48 (block-side t tag-attr t tag-name "img" tag-type void) 48 49 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 49 53 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 53 54 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 54 55 (block-side t tag-attr t tag-name "img" tag-type void) 55 56 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 56 57 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 57 58 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 58 59 (tag-name "img" tag-type void) 59 60 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 534) (undo-tree-id52 . -31) (undo-tree-id53 . -32) (undo-tree-id54 . -32) (undo-tree-id55 . -13) (519 . 534) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 457) (undo-tree-id56 . -10) (472 . 534) 467) nil (25354 20888 776699 453000) 0 nil])
([nil nil (("
" . 535) (520 . 535) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 519) (undo-tree-id51 . -10) (534 . 535) 529) nil (25354 20888 776691 75000) 0 nil])
([nil nil ((#("        <h1>{{ page.title }}</h1>
" 8 9 (tag-name "h1" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 9 11 (tag-name "h1" tag-type start font-lock-face web-mode-html-tag-face) 11 12 (tag-name "h1" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 12 13 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 13 14 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 14 15 (block-side t) 15 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t) 20 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t) 26 27 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 27 28 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 28 29 (tag-name "h1" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 32 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-face) 32 33 (tag-name "h1" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 569) (554 . 569) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 520) (undo-tree-id50 . -10) (535 . 569) 530) nil (25354 20888 776686 989000) 0 nil])
([nil nil ((#("        <span class=\"meta\">Written by
" 8 9 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 13 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 13 14 (tag-name "span" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 15 19 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 20 25 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 607) (592 . 607) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 554) (undo-tree-id49 . -10) (569 . 607) 564) nil (25354 20888 776682 761000) 0 nil])
([nil nil ((#("          <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
" 10 11 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "a" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 14 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 18 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t) 25 27 (block-side t face web-mode-block-control-face) 27 28 (block-side t) 28 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t) 40 41 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 42 43 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 43 44 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 44 45 (block-side t) 45 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t) 50 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t) 57 58 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 58 59 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 59 60 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 60 61 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 61 62 (block-side t) 62 66 (block-side t face web-mode-block-control-face) 66 67 (block-side t) 67 68 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 68 69 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 69 70 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 70 71 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 71 72 (block-side t) 72 76 (block-side t face web-mode-variable-name-face) 76 77 (block-side t) 77 83 (block-side t face web-mode-variable-name-face) 83 84 (block-side t) 84 85 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 85 86 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 86 87 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 87 88 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 88 89 (block-side t) 89 94 (block-side t face web-mode-block-control-face) 94 95 (block-side t) 95 96 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 96 97 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 97 98 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 98 99 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 99 100 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 100 101 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 709) (694 . 709) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 592) (607 . 709) 602) nil (25354 20888 776678 910000) 0 nil])
([nil nil ((#("          and published on {{ page.date | date: '%B %d, %Y' }}
" 27 28 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 29 30 (block-side t) 30 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t) 35 39 (block-side t face web-mode-variable-name-face) 39 42 (block-side t) 42 46 (block-side t face web-mode-filter-face) 46 48 (block-side t) 48 50 (block-side t block-token string font-lock-face web-mode-block-string-face) 50 51 (block-side t block-token string font-lock-face web-mode-block-string-face) 51 53 (block-side t block-token string font-lock-face web-mode-block-string-face) 53 54 (block-side t block-token string font-lock-face web-mode-block-string-face) 54 57 (block-side t block-token string font-lock-face web-mode-block-string-face) 57 58 (block-side t block-token string font-lock-face web-mode-block-string-face) 58 59 (block-side t block-token string font-lock-face web-mode-block-string-face) 59 60 (block-side t) 60 61 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 61 62 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 772) (757 . 772) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 694) (undo-tree-id48 . -10) (709 . 772) 704) nil (25354 20888 776675 915000) 0 nil])
([nil nil ((#("        </span>
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 788) (773 . 788) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 757) (undo-tree-id47 . -10) (772 . 788) 767) nil (25354 20888 776671 654000) 0 nil])
([nil nil ((#("        <hr>
" 8 9 (tag-name "hr" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 9 11 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 11 12 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 801) (786 . 801) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 773) (undo-tree-id46 . -10) (788 . 801) 783) nil (25354 20888 776667 837000) 0 nil])
([nil nil (("
" . 802) (787 . 802) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 786) (undo-tree-id45 . -10) (801 . 802) 796) nil (25354 20888 776664 172000) 0 nil])
([nil nil ((#("        {{ content }}
" 8 9 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 9 10 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 10 11 (block-side t) 11 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 824) (809 . 824) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 787) (undo-tree-id44 . -10) (802 . 824) 797) nil (25354 20888 776660 394000) 0 nil])
([nil nil (("
" . 825) (810 . 825) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 809) (undo-tree-id43 . -10) (824 . 825) 819) nil (25354 20888 776649 942000) 0 nil])
([nil nil ((#("        <hr>
" 8 9 (tag-name "hr" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 9 11 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 11 12 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 838) (823 . 838) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 810) (undo-tree-id42 . -10) (825 . 838) 820) nil (25354 20888 776643 41000) 0 nil])
([nil nil (("
" . 839) (824 . 839) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 823) (undo-tree-id41 . -10) (838 . 839) 833) nil (25354 20888 776638 946000) 0 nil])
([nil nil ((#("        <a href=\"#\" class=\"btn\">Read on wattpad</a>
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 18 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-name "a" tag-type start) 20 21 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 25 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 26 30 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 48 49 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 49 50 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 50 51 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 891) (876 . 891) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 824) (undo-tree-id40 . -10) (839 . 891) 834) nil (25354 20888 776635 68000) 0 nil])
([nil nil ((#("        <a href=\"#\" class=\"btn\">Read on Inkitt</a>
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 18 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-name "a" tag-type start) 20 21 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 25 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 26 30 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 46 47 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 48 49 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 49 50 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 942) (927 . 942) (#("        </row>
" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 876) (undo-tree-id39 . -10) (891 . 942) 886) nil (25354 20888 776631 125000) 0 nil])
([nil nil ((522 . 532) ("          " . 521) (undo-tree-id38 . -10) (521 . 532) (465 . 467) (518 . 519)) nil (25354 20888 776626 784000) 0 nil])
([nil nil (("  " . -530) (532 . 538)) nil (25354 20888 776623 241000) 0 nil])
([nil nil ((536 . 545)) nil (25354 20888 776621 722000) 0 nil])
([nil nil ((545 . 549)) nil (25354 20888 776620 531000) 0 nil])
([nil nil ((#("v" 0 1 (tag-name "v" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -546) (undo-tree-id35 . -1) (#("-" 0 1 (tag-name "v-" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -547) (undo-tree-id36 . -1) (#("r" 0 1 (tag-name "v-r" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -548) (undo-tree-id37 . -1) 549) nil (25354 20888 776618 573000) 0 nil])
([nil nil ((546 . 548)) nil (25354 20888 776613 216000) 0 nil])
([nil nil ((#("w" 0 1 (tag-name "rw" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -547) (undo-tree-id34 . -1) 548) nil (25354 20888 776611 710000) 0 nil])
([nil nil ((547 . 556)) nil (25354 20888 776609 68000) 0 nil])
([nil nil ((">" . 550) ("w" . 550) ("o" . 550) ("r" . 550) ("/" . 550) (#("<" 0 1 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face)) . 550)) nil (25354 20888 776606 988000) 0 nil])
([nil nil ((#("        </row>
        <row>" 8 9 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "row" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 24 27 (tag-name "row" tag-type start font-lock-face web-mode-html-tag-face) 27 28 (tag-name "row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 522) (undo-tree-id31 . -15) (undo-tree-id32 . -28) (undo-tree-id33 . -28)) nil (25354 20888 776604 179000) 0 nil])
([nil nil (("
" . -520) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) ("
" . -521) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 522) nil (25354 20889 631877 990000) 0 nil])
([nil nil ((#("        <!-- <div style=\"margin: 3vw; width: 70%; height:700px;background-size: cover; background-image: url({{ page.cover | escape }});\"></div> -->

        <row>" 8 9 (tag-type comment tag-beg 0 font-lock-face web-mode-comment-face) 9 109 (tag-type comment font-lock-face web-mode-comment-face) 109 110 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 110 111 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 111 112 (block-side t tag-type comment) 112 116 (block-side t tag-type comment face web-mode-variable-name-face) 116 117 (block-side t tag-type comment) 117 122 (block-side t tag-type comment face web-mode-variable-name-face) 122 125 (block-side t tag-type comment) 125 131 (block-side t tag-type comment face web-mode-filter-face) 131 132 (block-side t tag-type comment) 132 133 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 133 134 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 134 147 (tag-type comment font-lock-face web-mode-comment-face) 147 148 (tag-type comment tag-end t font-lock-face web-mode-comment-face) 158 159 (tag-name "row" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 159 162 (tag-name "row" tag-type start font-lock-face web-mode-html-tag-face) 162 163 (tag-name "row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 282) (undo-tree-id105 . -163) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -4) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -163) (undo-tree-id115 . -149) (undo-tree-id116 . -163)) nil (25354 21144 789071 702000) 0 nil] [nil nil ((456 . 471)) ((#("<v-col></v-col>" 0 1 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 1 6 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 6 7 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 8 9 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 9 14 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 14 15 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 456) (undo-tree-id72 . -7)) (25354 20889 296400 759000) 0 nil])
([nil nil (("
" . -280) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) ("
" . -281) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 282) nil (25354 21144 789055 146000) 0 nil])
([nil nil ((464 . 476) (465 . 475) (#("            " 0 12 (face whitespace-trailing)) . 464) (464 . 476) (464 . 465) ("          " . 464) (463 . 474)) (("
          " . 463) (undo-tree-id70 . -1) (464 . 474) ("
" . 464) (undo-tree-id71 . -1) (#("            " 0 12 (face whitespace-trailing)) . 464) (464 . 476) ("          " . 465) (#("            " 0 12 (face whitespace-trailing)) . 464)) (25354 20889 38990 74000) 0 nil])
([nil nil ((355 . 363) ("        " . 354) (undo-tree-id78 . -8) (354 . 363) ("  " . -300) (355 . 356)) nil (25354 21144 788975 448000) 0 nil])
([nil nil ((#("          <img width=\"200vw\" src=\"{{ page.cover | escape }}\" />
" 10 11 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 14 15 (tag-name "img" tag-type void) 15 16 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 21 27 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "img" tag-type void) 29 30 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 30 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 33 34 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t tag-attr t tag-name "img" tag-type void) 37 38 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 38 41 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "img" tag-type void) 42 46 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 47 50 (block-side t tag-attr t tag-name "img" tag-type void) 50 51 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 51 55 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 55 56 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 56 57 (block-side t tag-attr t tag-name "img" tag-type void) 57 58 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 58 59 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 59 60 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 60 61 (tag-name "img" tag-type void) 61 62 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 560) (undo-tree-id22 . -63) (undo-tree-id23 . -63) (541 . 560) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 477) (undo-tree-id24 . -12) (496 . 560) 489) ((#("          <img width=\"200vw\" src=\"{{ page.cover | escape }}\" />
" 10 11 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 14 15 (tag-name "img" tag-type void) 15 16 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 21 27 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "img" tag-type void) 29 30 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 30 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 33 34 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t tag-attr t tag-name "img" tag-type void) 37 38 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 38 41 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "img" tag-type void) 42 46 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 47 50 (block-side t tag-attr t tag-name "img" tag-type void) 50 51 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 51 55 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 55 56 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 56 57 (block-side t tag-attr t tag-name "img" tag-type void) 57 58 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 58 59 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 59 60 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 60 61 (tag-name "img" tag-type void) 61 62 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 496) (undo-tree-id63 . -64) (undo-tree-id64 . -64) (undo-tree-id65 . -64) (undo-tree-id66 . -64) (undo-tree-id67 . -64) (477 . 496) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 541) (undo-tree-id68 . -12) (undo-tree-id69 . -19) (560 . 624)) (25354 20888 778922 636000) 0 nil])
([nil nil (("  " . -361) (363 . 369)) nil (25354 21144 788971 853000) 0 nil])
([nil nil ((#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 560) (undo-tree-id18 . -19) (undo-tree-id19 . -19) (undo-tree-id20 . -12) (undo-tree-id21 . -19) (496 . 560) (#("          <img width=\"200vw\" src=\"{{ page.cover | escape }}\" />
" 10 11 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 14 15 (tag-name "img" tag-type void) 15 16 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 21 27 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "img" tag-type void) 29 30 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 30 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 33 34 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t tag-attr t tag-name "img" tag-type void) 37 38 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 38 41 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "img" tag-type void) 42 46 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 47 50 (block-side t tag-attr t tag-name "img" tag-type void) 50 51 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 51 55 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 55 56 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 56 57 (block-side t tag-attr t tag-name "img" tag-type void) 57 58 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 58 59 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 59 60 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 60 61 (tag-name "img" tag-type void) 61 62 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 477) (541 . 560) 553) ((#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 541) (undo-tree-id59 . -12) (undo-tree-id60 . -12) (undo-tree-id61 . -12) (undo-tree-id62 . -19) (477 . 541) (#("          <img width=\"200vw\" src=\"{{ page.cover | escape }}\" />
" 10 11 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 14 15 (tag-name "img" tag-type void) 15 16 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 21 27 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "img" tag-type void) 29 30 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 30 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 33 34 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t tag-attr t tag-name "img" tag-type void) 37 38 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 38 41 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "img" tag-type void) 42 46 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 47 50 (block-side t tag-attr t tag-name "img" tag-type void) 50 51 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 51 55 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 55 56 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-filter-face) 56 57 (block-side t tag-attr t tag-name "img" tag-type void) 57 58 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 58 59 (rear-nonsticky t block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 59 60 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 60 61 (tag-name "img" tag-type void) 61 62 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 496) (560 . 579)) (25354 20888 776572 682000) 0 nil])
([nil nil ((367 . 374)) nil (25354 21144 788970 512000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 413 . 414) (nil tag-name "div" 413 . 414) (nil tag-type start 413 . 414) (nil tag-end t 413 . 414) (nil font-lock-face web-mode-html-tag-bracket-face 413 . 414) (nil tag-attr t 412 . 413) (nil tag-attr-end 5 412 . 413) (nil tag-name "div" 412 . 413) (nil tag-type start 412 . 413) (nil font-lock-face web-mode-html-attr-value-face 412 . 413) (nil tag-attr t 385 . 412) (nil tag-name "div" 385 . 412) (nil tag-type start 385 . 412) (nil font-lock-face web-mode-html-attr-value-face 385 . 412) (nil tag-attr t 384 . 385) (nil tag-name "div" 384 . 385) (nil tag-type start 384 . 385) (nil font-lock-face web-mode-html-attr-equal-face 384 . 385) (nil tag-attr t 380 . 384) (nil tag-name "div" 380 . 384) (nil tag-type start 380 . 384) (nil font-lock-face web-mode-html-attr-name-face 380 . 384) (nil tag-attr-beg 0 379 . 380) (nil tag-attr t 379 . 380) (nil tag-name "div" 379 . 380) (nil tag-type start 379 . 380) (nil font-lock-face web-mode-html-attr-name-face 379 . 380) (nil tag-name "div" 378 . 379) (nil tag-type start 378 . 379) (nil tag-name "div" 375 . 378) (nil tag-type start 375 . 378) (nil font-lock-face web-mode-html-tag-face 375 . 378) (nil tag-name "div" 374 . 375) (nil tag-type start 374 . 375) (nil tag-beg 17 374 . 375) (nil font-lock-face web-mode-html-tag-bracket-face 374 . 375) (374 . 414)) nil (25354 21144 788967 79000) 0 nil])
([nil nil (("  " . -1539) ("  " . -1532) ("  " . -1523) (1219 . 1221) (882 . 884) ("  " . -744) ("  " . -694) ("  " . -682) ("  " . -661) ("  " . -649) ("  " . -635) ("  " . -576) ("  " . -476) ("  " . -438) ("  " . -406) ("  " . -358) (undo-tree-id77 . -2) ("  " . -347) ("  " . -288) (#("    " 0 4 (face whitespace-trailing)) . -281) ("  " . -234) ("  " . -212) ("  " . -186) 166) nil (25354 21144 788953 888000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 253)) nil (25354 21144 788945 959000) 0 nil])
([nil nil ((253 . 254)) nil (25354 21144 788944 846000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 262) (#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 262)) nil (25354 21144 788943 546000) 0 nil])
([nil nil ((262 . 263)) nil (25354 21144 788942 169000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -253) (undo-tree-id76 . -1) 254) nil (25354 21144 788940 725000) 0 nil])
([nil nil ((253 . 254)) nil (25354 21144 788937 957000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -376) (undo-tree-id75 . -1) 377) nil (25354 21144 788936 596000) 0 nil])
([nil nil ((376 . 378)) nil (25354 21144 788933 832000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -376) (undo-tree-id73 . -1) (#("2" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -377) (undo-tree-id74 . -1) 378) nil (25354 21144 788932 34000) 0 nil])
([nil nil ((376 . 377)) nil (25354 21144 788920 308000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 385) (#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 385)) nil (25354 21144 788918 671000) 0 nil])
([nil nil ((385 . 386)) nil (25354 21144 788916 505000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing)) . -274) 386) nil (25354 21144 788908 377000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -253) (undo-tree-id120 . -1) 254 (t 25354 21144 796420 676000)) nil (25354 21163 584470 234000) 0 nil])
([nil nil ((253 . 254)) nil (25354 21163 584463 606000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -262) (undo-tree-id119 . -1) 263) nil (25354 21163 584459 553000) 0 nil])
([nil nil ((262 . 263)) nil (25354 21163 584453 887000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -262) (undo-tree-id118 . -1) 263) nil (25354 21163 584451 923000) 0 nil])
([nil nil ((262 . 263)) nil (25354 21163 584447 985000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -370) (undo-tree-id117 . -1) 371) nil (25354 21163 584445 81000) 0 nil])
([nil nil ((370 . 372)) nil (25354 21185 220938 507000) 0 nil])
([nil nil ((398 . 411) (390 . 399) (t 25354 21186 460911 494000)) nil (25354 21200 462187 803000) 0 nil] [nil nil ((#("o" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("u" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("a" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("x" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (#("m" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 382) (t 25354 21163 596641 775000)) ((382 . 383) (382 . 383) (382 . 383) (382 . 383) (382 . 383) (382 . 383) (382 . 383) (t 25354 21182 680866 842000)) (25354 21182 672997 375000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -410) (undo-tree-id123 . -1) 411) nil (25354 21200 462185 756000) 0 nil])
nil
([nil nil ((410 . 417)) nil (25354 21200 462182 408000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -416) (undo-tree-id122 . -1) 417) nil (25354 21200 462180 577000) 0 nil])
([nil nil ((416 . 418)) nil (25354 21200 462176 451000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -417) (undo-tree-id121 . -1) 418) nil (25354 21200 462171 144000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -405) (undo-tree-id124 . -1) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -406) (undo-tree-id125 . -1) (#("g" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -407) (undo-tree-id126 . -1) (#("h" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -408) (undo-tree-id127 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -409) (undo-tree-id128 . -1) 410 (t 25354 21200 469077 170000)) nil (25354 21206 220249 15000) 0 nil])
([nil nil ((405 . 409)) nil (25354 21206 220226 553000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 411) (t 25354 21206 229145 385000)) nil (25354 21209 847989 752000) 0 nil])
([nil nil ((411 . 412)) nil (25354 21209 847981 939000) 0 nil])
([nil nil ((#("style=\"margin-left: 20px;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 25 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 391) (undo-tree-id135 . -26) (undo-tree-id136 . -17) (undo-tree-id137 . -26) (t 25354 21209 857188 379000)) nil (25354 21249 946214 733000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -390) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 391) nil (25354 21249 946209 464000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -293) (undo-tree-id129 . -1) (#("0" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -294) (undo-tree-id130 . -1) (#("0" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . -295) (undo-tree-id131 . -1) 296) nil (25354 21249 946203 102000) 0 nil])
([nil nil ((293 . 297)) nil (25354 21249 946188 157000) 0 nil])
([nil nil ((#("w" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . 297) (#("v" 0 1 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . 297)) nil (25354 21249 946180 841000) 0 nil])
([nil nil ((#("width=\"100%\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 6 11 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-attr-end 5 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . 286) (undo-tree-id138 . -12) (undo-tree-id139 . -12) (undo-tree-id140 . -12) (t 25354 21249 957664 930000)) nil (25354 21350 684786 962000) 0 nil])
([nil nil ((286 . 294)) nil (25354 21350 684772 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 302 . 303) (nil fontified t 293 . 303) (nil tag-attr t 293 . 303) (nil tag-name "img" 293 . 303) (nil tag-type void 293 . 303) (nil font-lock-face web-mode-html-attr-value-face 293 . 303) (293 . 303)) nil (25354 21350 684765 466000) 0 nil])
([nil nil ((714 . 726) (t 25354 21350 698872 54000)) nil (25354 21438 671919 838000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -725) (undo-tree-id141 . -1) 726) nil (25354 21438 671917 208000) 0 nil])
([nil nil ((775 . 776)) nil (25354 22151 967949 772000) 0 nil])
([nil nil ((nil rear-nonsticky nil 785 . 786) (nil tag-name "a" 776 . 785) (nil tag-name "a" 785 . 786) (776 . 786)) ((#("book_links" 0 9 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (rear-nonsticky nil tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 776) (nil tag-name "a" 785 . 786) (nil tag-name "a" 776 . 785) (nil rear-nonsticky t 785 . 786)) (25354 22155 475207 696000) 0 nil])
([nil nil ((#("btn " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 711) (undo-tree-id181 . -4) (undo-tree-id182 . -3) (undo-tree-id183 . -4)) ((711 . 715)) (25354 22155 868796 449000) 0 nil] [nil nil ((#("tn " 0 3 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 712) (undo-tree-id154 . -3) (undo-tree-id155 . -2) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (t 25354 21661 282661 12000)) ((712 . 715)) (25354 22129 770966 695000) 0 nil] [nil nil ((#("a" 0 1 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face)) . -693) (undo-tree-id145 . -1) 694 (t 25354 21438 679936 298000)) ((693 . 694)) (25354 21659 936991 148000) 0 nil])
([nil nil ((721 . 725)) ((#(" btn" 0 4 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 721)) (25354 22157 468077 201000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -711) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 712) ((711 . 712)) (25354 22129 223814 308000) 0 nil])
([nil nil ((693 . 699)) ((#("button" 0 6 (tag-name "button" tag-type start font-lock-face web-mode-html-tag-face)) . 693)) (25354 21659 654866 393000) 0 nil])
([nil nil ((786 . 790)) ((#(" btn" 0 4 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 786)) (25354 22490 242730 200000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 768) (undo-tree-id149 . -1) (#("n" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 768) (#("t" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 768) (#("b" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 768)) ((768 . 769) (768 . 769) (768 . 769) (768 . 769) (t 25354 22120 488372 366000)) (25354 22120 475322 189000) 0 nil])
([nil nil ((#("a" 0 1 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face)) . -759) (undo-tree-id144 . -1) 760) ((759 . 760)) (25354 21659 348188 159000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 772) (undo-tree-id564 . -1) (#("n" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 772) (#("t" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 772) (#("b" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 772)) nil (25354 22646 516869 53000) 0 nil] [nil nil ((#("btn " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 772) (undo-tree-id184 . -4)) ((772 . 776)) (25354 22489 782845 52000) 0 nil])
nil
([nil nil ((759 . 765)) ((#("button" 0 6 (tag-name "button" tag-type start font-lock-face web-mode-html-tag-face)) . 759)) (25354 21659 48047 603000) 0 nil])
([nil nil ((#("
        </row>" 9 10 (tag-name "row" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "row" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 806) (undo-tree-id560 . -15) (undo-tree-id561 . -15) (undo-tree-id562 . -1) (undo-tree-id563 . -15)) nil (25354 22646 516865 494000) 0 nil])
([nil nil ((855 . 865) (#("          " 0 10 (face whitespace-trailing)) . 854) (854 . 864) (854 . 855) (t 25354 22283 118411 877000)) (("
" . 854) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("          " 0 10 (face whitespace-trailing)) . 854) (854 . 864) ("          " . 855) (undo-tree-id452 . -10) (undo-tree-id453 . -10) (undo-tree-id454 . -10)) (25354 22489 404483 652000) 0 nil] [nil nil ((#("n" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 782) (#("t" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 782) (#("b" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 782) (#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 782) (t 25354 22140 172618 891000)) ((782 . 783) (782 . 783) (782 . 783) (782 . 783)) (25354 22281 881756 318000) 0 nil])
([nil nil ((#("a" 0 1 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face)) . -814) (undo-tree-id143 . -1) 815) ((814 . 815)) (25354 21658 763089 621000) 0 nil])
([nil nil (("  " . -1496) ("  " . -1477) ("  " . -1446) ("  " . -1212) ("  " . -1179) ("  " . -1159) ("  " . -1135) ("  " . -883) ("  " . -846) ("  " . -814) 175) nil (25354 22646 516820 337000) 0 nil])
([nil nil ((865 . 870)) ((#("<div-" 0 1 (tag-name "div-" tag-type start tag-beg 3 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div-" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 4 5 (tag-name "div-" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 865) (undo-tree-id445 . -4) (undo-tree-id446 . -5) (undo-tree-id447 . -4)) (25354 22489 126571 715000) 0 nil])
([nil nil ((#("n" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 721) (#("t" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 721) (#("b" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 721) (#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 721)) ((721 . 722) (721 . 722) (721 . 722) (721 . 722) (t 25354 22163 884915 993000)) (25354 22163 877445 403000) 0 nil])
([nil nil ((814 . 820)) ((#("button" 0 6 (tag-name "button" tag-type end font-lock-face web-mode-html-tag-face)) . 814) (undo-tree-id148 . -4)) (25354 21658 450089 207000) 0 nil])
([nil nil ((684 . 691)) nil (25354 22646 516816 799000) 0 nil])
([nil nil ((#("-" 0 1 (tag-name "div-" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -869) (undo-tree-id291 . -1) 870) ((869 . 870)) (25354 22488 902201 879000) 0 nil])
nil
([nil nil ((#("a" 0 1 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face)) . -749) (undo-tree-id142 . -1) 750) ((749 . 750)) (25354 21658 29792 454000) 0 nil])
([nil nil ((691 . 692)) nil (25354 22646 516815 661000) 0 nil])
([nil nil ((877 . 880) (869 . 878)) ((#(" class=\"\"" 0 1 (tag-name "div" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-attr-value-face)) . 869) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (#("cnb" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 877) (undo-tree-id442 . -1) (undo-tree-id443 . -3) (undo-tree-id444 . -1)) (25354 22488 691954 547000) 0 nil])
([nil nil ((749 . 755)) ((#("button" 0 6 (tag-name "button" tag-type end font-lock-face web-mode-html-tag-face)) . 749) (undo-tree-id147 . -5) (t 25354 21528 313028 528000)) (25354 21528 302223 385000) 0 nil])
([nil nil (("  " . -689) (692 . 697)) nil (25354 22646 516814 394000) 0 nil])
([nil nil ((#("n" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -878) (undo-tree-id289 . -1) (#("b" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -879) (undo-tree-id290 . -1) 880) ((878 . 880)) (25354 22488 516371 513000) 0 nil])
nil
([nil nil ((1507 . 1509) ("  " . -1500) ("  " . -1493) ("  " . -1483) ("  " . -1466) ("  " . -1437) ("  " . -1205) ("  " . -1174) ("  " . -1156) ("  " . -1134) ("  " . -884) ("  " . -849) ("  " . -819) ("  " . -760) ("  " . -701) 186) nil (25354 22646 516810 426000) 0 nil])
([nil nil ((878 . 887)) ((#("ontainer " 0 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 878) (undo-tree-id436 . -8) (undo-tree-id437 . -9) (undo-tree-id438 . -8)) (25354 22488 328954 120000) 0 nil])
([nil nil ((695 . 700)) nil (25354 22646 516805 755000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -886) (undo-tree-id288 . -1) 887) ((886 . 887)) (25354 22488 159001 839000) 0 nil])
([nil nil (("  " . -698) (700 . 706)) nil (25354 22646 516804 422000) 0 nil])
([nil nil ((887 . 888) (886 . 893)) ((#("></div>" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 886) (undo-tree-id434 . -1) (#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 887) (undo-tree-id435 . -1)) (25354 22487 979991 800000) 0 nil])
([nil nil ((704 . 707)) nil (25354 22646 516802 969000) 0 nil])
([nil nil ((#(">" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -886) (undo-tree-id286 . -1) (#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -887) (undo-tree-id287 . -1) 888) ((886 . 888)) (25354 22487 780489 178000) 0 nil])
([nil nil ((719 . 723) (707 . 720)) nil (25354 22646 516801 753000) 0 nil])
([nil nil ((886 . 887) (886 . 887)) ((#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-attr-value-face)) . 886) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("\\" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 886)) (25354 22487 543285 633000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -722) (undo-tree-id559 . -1) 723) nil (25354 22646 516800 81000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-attr-value-face)) . 888) (#(">" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888) (#("v" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888) (#("d" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888) (#("/" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888) (#("<" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 888)) ((888 . 889) (888 . 889) (888 . 889) (888 . 889) (888 . 889) (888 . 889) (888 . 889)) (25354 22487 474803 59000) 0 nil])
([nil nil ((723 . 730)) nil (25354 22646 516797 660000) 0 nil])
([nil nil ((#("\\" 0 1 (tag-name "div" tag-type start)) . -886) (undo-tree-id285 . -1) 887) ((886 . 887)) (25354 22487 446134 810000) 0 nil])
([nil nil ((725 . 729) (726 . 728) (#("    " 0 4 (face whitespace-trailing)) . 725) (725 . 729) (725 . 726) ("  " . 725) (724 . 727)) nil (25354 22646 516795 888000) 0 nil])
([nil nil ((887 . 888)) (("<" . 887) (undo-tree-id430 . -1)) (25354 22487 417534 420000) 0 nil])
([nil nil (("
" . 740) (731 . 740) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 730) (undo-tree-id558 . -4) (739 . 740) 734) nil (25354 22646 516792 856000) 0 nil])
([nil nil (("<" . -887) (undo-tree-id284 . -1) 888) ((887 . 888)) (25354 22487 395002 663000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on wattpad</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 33 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 57 58 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 799) (undo-tree-id554 . -33) (undo-tree-id555 . -23) (undo-tree-id556 . -23) (790 . 799) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 731) (undo-tree-id557 . -4) (740 . 799) 735) nil (25354 22646 516788 830000) 0 nil])
([nil nil ((887 . 894)) ((#("></div>" 0 1 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 3 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 887) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1)) (25354 22487 374053 583000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on Inkitt</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 32 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 56 57 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 857) (undo-tree-id550 . -23) (undo-tree-id551 . -57) (undo-tree-id552 . -57) (848 . 857) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 790) (undo-tree-id553 . -4) (799 . 857) 794) nil (25354 22646 516781 511000) 0 nil])
([nil nil ((889 . 901) (890 . 900) (#("            " 0 12 (face whitespace-trailing)) . 889) (889 . 901) (889 . 890) ("          " . 889) (888 . 899)) (("
          " . 888) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (889 . 899) ("
" . 889) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("            " 0 12 (face whitespace-trailing)) . 889) (889 . 901) ("          " . 890) (#("            " 0 12 (face whitespace-trailing)) . 889)) (25354 22487 351021 886000) 0 nil])
([nil nil (("
" . 858) (849 . 858) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 848) (undo-tree-id549 . -4) (857 . 858) 852) nil (25354 22646 516773 842000) 0 nil])
([nil nil ((#("          {% if page.previous.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 17 (block-side t face web-mode-variable-name-face) 17 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 956) (939 . 956) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 902) (undo-tree-id283 . -12) (919 . 956) 914) ((#("          {% if page.previous.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 17 (block-side t face web-mode-variable-name-face) 17 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 919) (undo-tree-id418 . -37) (undo-tree-id419 . -37) (undo-tree-id420 . -37) (902 . 919) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 939) (undo-tree-id421 . -12) (undo-tree-id422 . -17) (956 . 993)) (25354 22487 312503 567000) 0 nil])
([nil nil ((#("    <div class=\"clearfix\">
" 4 5 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 8 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "div" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 15 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 885) (undo-tree-id547 . -27) (876 . 885) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 849) (undo-tree-id548 . -4) (858 . 885) 853) nil (25354 22646 516770 147000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1208) (1191 . 1208) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 939) (undo-tree-id282 . -12) (956 . 1208) 951) ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 956) (undo-tree-id413 . -252) (undo-tree-id414 . -252) (undo-tree-id415 . -252) (939 . 956) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1191) (undo-tree-id416 . -12) (undo-tree-id417 . -17) (1208 . 1460)) (25354 22486 829601 309000) 0 nil])
([nil nil (("
" . 886) (877 . 886) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 876) (undo-tree-id546 . -4) (885 . 886) 880) nil (25354 22646 516765 453000) 0 nil])
([nil nil ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1238) (1221 . 1238) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1191) (undo-tree-id281 . -12) (1208 . 1238) 1203) ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1208) (undo-tree-id408 . -30) (undo-tree-id409 . -30) (undo-tree-id410 . -30) (1191 . 1208) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1221) (undo-tree-id411 . -12) (undo-tree-id412 . -17) (1238 . 1268)) (25354 22486 634641 244000) 0 nil])
([nil nil ((#("      {% if page.previous.url %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 10 (block-side t face web-mode-block-control-face) 10 11 (block-side t face web-mode-block-control-face) 11 12 (block-side t) 12 13 (block-side t face web-mode-variable-name-face) 13 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 919) (910 . 919) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 877) (undo-tree-id545 . -4) (886 . 919) 881) nil (25354 22646 516761 654000) 0 nil])
([nil nil ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1260) (1243 . 1260) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1221) (undo-tree-id280 . -12) (1238 . 1260) 1233) ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1238) (undo-tree-id403 . -22) (undo-tree-id404 . -22) (undo-tree-id405 . -22) (1221 . 1238) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1243) (undo-tree-id406 . -12) (undo-tree-id407 . -17) (1260 . 1282)) (25354 22486 478312 208000) 0 nil])
([nil nil ((#("        <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 44 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-name "a" tag-type start) 46 47 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 47 50 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 51 52 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 59 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 68 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "a" tag-type start) 69 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 75 (block-side t tag-attr t tag-name "a" tag-type start) 75 82 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 82 84 (block-side t tag-attr t tag-name "a" tag-type start) 84 88 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 88 89 (block-side t tag-attr t tag-name "a" tag-type start) 89 96 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 96 99 (block-side t tag-attr t tag-name "a" tag-type start) 99 106 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 106 108 (block-side t tag-attr t tag-name "a" tag-type start) 108 112 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 112 114 (block-side t tag-attr t tag-name "a" tag-type start) 114 117 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 117 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 119 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 119 120 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 121 122 (tag-name "a" tag-type start) 122 123 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 123 133 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 133 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 134 142 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 142 143 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-name "a" tag-type start) 144 145 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 145 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 148 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 148 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 158 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 158 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 159 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 163 164 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-name "a" tag-type start face (whitespace-line)) 165 166 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 166 170 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 172 173 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 173 174 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 175 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 179 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 180 188 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 188 189 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 189 194 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 194 195 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 195 196 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 196 197 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 197 198 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 198 199 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 199 205 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 205 214 (face (whitespace-line)) 214 215 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 215 219 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 219 220 (tag-name "span" tag-type start face (whitespace-line)) 220 221 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 221 225 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 226 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 226 245 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 245 246 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 246 247 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1167) (1158 . 1167) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 910) (undo-tree-id544 . -4) (919 . 1167) 914) nil (25354 22646 516757 977000) 0 nil])
([nil nil ((#("          {% if page.next.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1293) (1276 . 1293) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1243) (1260 . 1293) 1255) ((#("          {% if page.next.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1260) (undo-tree-id398 . -33) (undo-tree-id399 . -33) (undo-tree-id400 . -33) (1243 . 1260) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1276) (undo-tree-id401 . -12) (undo-tree-id402 . -17) (1293 . 1326)) (25354 22486 349321 775000) 0 nil])
([nil nil ((#("          Post</span></a>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1193) (1184 . 1193) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1158) (undo-tree-id543 . -4) (1167 . 1193) 1162) nil (25354 22646 516754 250000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1527) (1510 . 1527) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1276) (1293 . 1527) 1288) ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1293) (undo-tree-id393 . -234) (undo-tree-id394 . -234) (undo-tree-id395 . -234) (1276 . 1293) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1510) (undo-tree-id396 . -12) (undo-tree-id397 . -17) (1527 . 1761)) (25354 22486 227521 912000) 0 nil])
([nil nil ((#("      {% endif %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t) 15 16 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1211) (1202 . 1211) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1184) (undo-tree-id542 . -4) (1193 . 1211) 1188) nil (25354 22646 516750 486000) 0 nil])
([nil nil ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1564) (1547 . 1564) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1510) (undo-tree-id279 . -12) (1527 . 1564) 1522) ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1527) (undo-tree-id388 . -37) (undo-tree-id389 . -37) (undo-tree-id390 . -37) (1510 . 1527) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1547) (undo-tree-id391 . -12) (undo-tree-id392 . -17) (1564 . 1601)) (25354 22486 34355 342000) 0 nil])
([nil nil ((#("      {% if page.next.url %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 11 (block-side t face web-mode-block-control-face) 11 12 (block-side t) 12 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t) 26 27 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1240) (1231 . 1240) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1202) (undo-tree-id541 . -4) (1211 . 1240) 1206) nil (25354 22646 516746 804000) 0 nil])
([nil nil ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1586) (1569 . 1586) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1547) (undo-tree-id278 . -12) (1564 . 1586) 1559) ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1564) (1547 . 1564) (#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1569) (1586 . 1608)) (25354 22485 885339 590000) 0 nil])
([nil nil ((#("        <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 45 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-name "a" tag-type start) 47 48 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 48 51 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 52 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 52 53 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t tag-attr t tag-name "a" tag-type start) 56 60 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "a" tag-type start) 61 65 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "a" tag-type start) 66 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 72 (block-side t tag-attr t tag-name "a" tag-type start) 72 79 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 79 81 (block-side t tag-attr t tag-name "a" tag-type start) 81 85 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 85 86 (block-side t tag-attr t tag-name "a" tag-type start) 86 93 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 93 96 (block-side t tag-attr t tag-name "a" tag-type start) 96 103 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 103 105 (block-side t tag-attr t tag-name "a" tag-type start) 105 109 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 109 111 (block-side t tag-attr t tag-name "a" tag-type start) 111 114 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 114 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 116 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 116 117 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 117 118 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 118 119 (tag-name "a" tag-type start) 119 120 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 120 130 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 130 131 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 131 139 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 140 141 (tag-name "a" tag-type start) 141 142 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 142 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 148 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 148 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 155 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 155 156 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 156 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 160 161 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 161 162 (tag-name "a" tag-type start face (whitespace-line)) 162 163 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 168 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 168 169 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 169 170 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 170 171 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 171 172 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 172 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 176 177 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 177 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 181 182 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 182 187 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 187 188 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 188 189 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 189 190 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 190 191 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 191 192 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 192 196 (face (whitespace-line)) 196 197 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 197 201 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 201 202 (tag-name "span" tag-type start face (whitespace-line)) 202 203 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 203 207 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 208 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 208 227 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 227 228 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 228 229 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1470) (1461 . 1470) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1231) (undo-tree-id540 . -4) (1240 . 1470) 1235) nil (25354 22646 516741 449000) 0 nil])
([nil nil ((901 . 903)) ((#("<v" 0 1 (tag-name "v" tag-type start tag-beg 1 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "v" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 901) (undo-tree-id387 . -2)) (25354 22485 721521 303000) 0 nil])
([nil nil ((#("          Post</span> &rarr;</a>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 22 28 (font-lock-face (web-mode-html-entity-face)) 28 29 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 31 32 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1503) (1494 . 1503) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1461) (undo-tree-id539 . -4) (1470 . 1503) 1465) nil (25354 22646 516737 722000) 0 nil])
([nil nil ((#("v" 0 1 (tag-name "v" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -902) (undo-tree-id277 . -1) 903) ((902 . 903)) (25354 22485 575867 866000) 0 nil])
([nil nil ((#("      {% endif %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t) 15 16 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1521) (1512 . 1521) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1494) (undo-tree-id538 . -4) (1503 . 1521) 1498) nil (25354 22646 516733 460000) 0 nil])
([nil nil ((913 . 916) (902 . 914)) ((#("div class=\"\"" 0 3 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 3 4 (tag-name "div" tag-type start) 4 5 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 902) (undo-tree-id386 . -12) (#("row" 0 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 913)) (25354 22485 415806 149000) 0 nil])
([nil nil (("
" . 1522) (1513 . 1522) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1512) (undo-tree-id537 . -4) (1521 . 1522) 1516) nil (25354 22646 516729 811000) 0 nil])
([nil nil ((917 . 924)) ((#("></div>" 0 1 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 3 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 917) (undo-tree-id385 . -1)) (25354 22485 273498 321000) 0 nil])
([nil nil ((#("    </div>
" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1533) (1524 . 1533) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1513) (undo-tree-id536 . -4) (1522 . 1533) 1517) nil (25354 22646 516726 172000) 0 nil])
([nil nil ((919 . 933) (920 . 932) (#("              " 0 14 (face whitespace-trailing)) . 919) (919 . 933) (919 . 920) ("            " . 919) (918 . 931)) (("
            " . 918) (undo-tree-id383 . -1) (919 . 931) ("
" . 919) (undo-tree-id384 . -1) (#("              " 0 14 (face whitespace-trailing)) . 919) (919 . 933) ("            " . 920) (#("              " 0 14 (face whitespace-trailing)) . 919)) (25354 22485 127676 254000) 0 nil])
([nil nil (("
" . 1534) (1525 . 1534) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1524) (undo-tree-id535 . -4) (1533 . 1534) 1528) nil (25354 22646 516722 479000) 0 nil])
([nil nil ((#("          {% if page.previous.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 17 (block-side t face web-mode-variable-name-face) 17 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 990) (971 . 990) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 934) (undo-tree-id276 . -14) (953 . 990) 948) ((#("          {% if page.previous.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 17 (block-side t face web-mode-variable-name-face) 17 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 953) (undo-tree-id376 . -37) (undo-tree-id377 . -37) (undo-tree-id378 . -37) (undo-tree-id379 . -37) (934 . 953) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 971) (undo-tree-id380 . -19) (undo-tree-id381 . -14) (undo-tree-id382 . -19) (990 . 1027)) (25354 22484 979809 326000) 0 nil])
([nil nil ((#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1543) (1534 . 1543) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1525) (undo-tree-id534 . -4) (1534 . 1543) 1529) nil (25354 22646 516718 862000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1242) (1223 . 1242) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 971) (undo-tree-id275 . -14) (990 . 1242) 985) ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 990) (undo-tree-id369 . -252) (undo-tree-id370 . -252) (undo-tree-id371 . -252) (undo-tree-id372 . -252) (971 . 990) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1223) (undo-tree-id373 . -19) (undo-tree-id374 . -14) (undo-tree-id375 . -19) (1242 . 1494)) (25354 22484 827829 93000) 0 nil])
([nil nil ((#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1550) (undo-tree-id532 . -6) (1541 . 1550) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1534) (undo-tree-id533 . -4) (1543 . 1550) 1538) nil (25354 22646 516715 182000) 0 nil])
([nil nil ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1272) (1253 . 1272) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1223) (undo-tree-id274 . -14) (1242 . 1272) 1237) ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1242) (undo-tree-id362 . -30) (undo-tree-id363 . -30) (undo-tree-id364 . -30) (undo-tree-id365 . -30) (1223 . 1242) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1253) (undo-tree-id366 . -19) (undo-tree-id367 . -14) (undo-tree-id368 . -19) (1272 . 1302)) (25354 22484 629077 250000) 0 nil])
([nil nil ((#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1550) (undo-tree-id529 . -4) (undo-tree-id530 . -9) (undo-tree-id531 . -9) (1543 . 1550) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1534) (1541 . 1550) 1545) nil (25354 22646 516710 223000) 0 nil])
([nil nil ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1294) (1275 . 1294) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1253) (1272 . 1294) 1267) ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1272) (undo-tree-id355 . -22) (undo-tree-id356 . -22) (undo-tree-id357 . -22) (undo-tree-id358 . -22) (1253 . 1272) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1275) (undo-tree-id359 . -19) (undo-tree-id360 . -14) (undo-tree-id361 . -19) (1294 . 1316)) (25354 22484 440300 982000) 0 nil])
([nil nil ((1541 . 1543) ("  " . -1534) 26) nil (25354 22646 516704 644000) 0 nil])
([nil nil ((#("          {% if page.next.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1327) (1308 . 1327) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1275) (1294 . 1327) 1289) ((#("          {% if page.next.url %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 15 (block-side t face web-mode-block-control-face) 15 16 (block-side t) 16 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1294) (undo-tree-id349 . -32) (undo-tree-id350 . -33) (undo-tree-id351 . -33) (undo-tree-id352 . -33) (1275 . 1294) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1308) (undo-tree-id353 . -14) (undo-tree-id354 . -19) (1327 . 1360)) (25354 22484 231991 946000) 0 nil])
([nil nil ((#("
  </div>
  </div>" 3 4 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 5 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 8 9 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1540) (undo-tree-id522 . -18) (undo-tree-id523 . -1) (undo-tree-id524 . -10) (undo-tree-id525 . -18) (undo-tree-id526 . -18) (undo-tree-id527 . -18) (undo-tree-id528 . -18)) nil (25354 22646 516702 487000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1561) (1542 . 1561) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1308) (undo-tree-id273 . -14) (1327 . 1561) 1322) ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1327) (undo-tree-id344 . -234) (undo-tree-id345 . -234) (undo-tree-id346 . -234) (1308 . 1327) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1542) (undo-tree-id347 . -14) (undo-tree-id348 . -19) (1561 . 1795)) (25354 22483 928345 29000) 0 nil])
([nil nil ((847 . 852)) nil (25354 22646 516693 691000) 0 nil])
([nil nil ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1598) (1579 . 1598) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1542) (undo-tree-id272 . -14) (1561 . 1598) 1556) ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1561) (undo-tree-id339 . -37) (undo-tree-id340 . -37) (undo-tree-id341 . -37) (1542 . 1561) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1579) (undo-tree-id342 . -14) (undo-tree-id343 . -19) (1598 . 1635)) (25354 22483 738509 783000) 0 nil])
([nil nil ((852 . 853)) nil (25354 22646 516692 596000) 0 nil])
([nil nil ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1620) (1601 . 1620) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1579) (undo-tree-id271 . -14) (1598 . 1620) 1593) ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1598) (1579 . 1598) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1601) (1620 . 1642)) (25354 22483 543341 778000) 0 nil])
([nil nil ((853 . 854)) nil (25354 22646 516691 526000) 0 nil])
([nil nil (("
" . 933) (undo-tree-id269 . -1) (undo-tree-id270 . 1)) ((933 . 934)) (25354 22483 342076 131000) 0 nil])
([nil nil ((#("d" 0 1 (tag-name "d" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -853) (undo-tree-id521 . -1) 854) nil (25354 22646 516690 109000) 0 nil])
([nil nil (("          " . -933)) ((933 . 943)) (25354 22483 162087 736000) 0 nil])
([nil nil (("  " . -850) (853 . 858)) nil (25354 22646 516687 371000) 0 nil])
([nil nil ((959 . 976)) (("
                " . 959) (undo-tree-id336 . -17) (undo-tree-id337 . -1) (undo-tree-id338 . -1)) (25354 22482 951899 940000) 0 nil])
([nil nil ((856 . 859)) nil (25354 22646 516686 14000) 0 nil])
([nil nil ((976 . 979)) (("div" . 976) (undo-tree-id335 . -3)) (25354 22482 681543 415000) 0 nil])
([nil nil ((859 . 864)) nil (25354 22646 516684 921000) 0 nil])
([nil nil (("d" . -976) (undo-tree-id266 . -1) ("i" . -977) (undo-tree-id267 . -1) ("v" . -978) (undo-tree-id268 . -1) 979) ((976 . 979)) (25354 22482 365805 837000) 0 nil])
([nil nil ((#("u" 0 1 (tag-name "du" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -861) (undo-tree-id518 . -1) (#("v" 0 1 (tag-name "duv" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -862) (undo-tree-id519 . -1) (#("c" 0 1 (tag-name "duvc" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -863) (undo-tree-id520 . -1) 864) nil (25354 22646 516683 24000) 0 nil])
([nil nil ((976 . 979)) ((#("<id" 0 1 (tag-name "id" tag-type start tag-beg 0 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "id" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 2 3 (tag-name "id" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 976) (undo-tree-id334 . -3)) (25354 22482 75556 679000) 0 nil])
([nil nil ((871 . 875) (861 . 872)) nil (25354 22646 516676 57000) 0 nil])
([nil nil ((#("i" 0 1 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -977) (undo-tree-id264 . -1) (#("d" 0 1 (tag-name "id" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -978) (undo-tree-id265 . -1) 979) ((977 . 979)) (25354 22481 765333 202000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -874) (undo-tree-id517 . -1) 875) nil (25354 22646 516674 264000) 0 nil])
([nil nil ((977 . 980)) ((#("div" 0 3 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 977) (undo-tree-id333 . -3)) (25354 22481 511978 50000) 0 nil])
([nil nil ((875 . 882)) nil (25354 22646 516671 748000) 0 nil])
([nil nil ((980 . 987)) ((#("></div>" 0 1 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 3 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 980)) (25354 22481 289582 796000) 0 nil])
([nil nil ((877 . 881) (878 . 880) (#("    " 0 4 (face whitespace-trailing)) . 877) (877 . 881) (877 . 878) ("  " . 877) (876 . 879)) nil (25354 22646 516669 954000) 0 nil])
([nil nil ((980 . 981)) ((#("c" 0 1 (tag-name "divc" tag-type start font-lock-face web-mode-html-tag-face)) . 980) (undo-tree-id332 . -1)) (25354 22481 31437 460000) 0 nil])
([nil nil (("
" . 892) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (883 . 892) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 882) (undo-tree-id516 . -4) (891 . 892) 886) nil (25354 22646 516666 504000) 0 nil])
([nil nil ((#("c" 0 1 (tag-name "divc" tag-type start font-lock-face web-mode-html-tag-face)) . -980) (undo-tree-id263 . -1) 981) ((980 . 981)) (25354 22480 703038 530000) 0 nil])
([nil nil ((#("    <div class=\"clearfix\">
" 4 5 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 8 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "div" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 15 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 919) (910 . 919) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 883) (undo-tree-id512 . -4) (892 . 919) 887) nil (25354 22646 516659 728000) 0 nil])
([nil nil ((980 . 984)) ((#(" coi" 0 1 (tag-name "div" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . 980) (undo-tree-id331 . -4)) (25354 22480 513616 593000) 0 nil])
([nil nil (("
" . 920) (undo-tree-id510 . -1) (911 . 920) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 910) (undo-tree-id511 . -4) (919 . 920) 914) nil (25354 22646 516655 900000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -981) (undo-tree-id260 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -982) (undo-tree-id261 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -983) (undo-tree-id262 . -1) 984) ((981 . 984)) (25354 22480 338021 598000) 0 nil])
([nil nil ((#("      {% if page.previous.url %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 10 (block-side t face web-mode-block-control-face) 10 11 (block-side t face web-mode-block-control-face) 11 12 (block-side t) 12 13 (block-side t face web-mode-variable-name-face) 13 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 953) (944 . 953) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 911) (920 . 953) 915) nil (25354 22646 516651 64000) 0 nil])
([nil nil ((981 . 985)) ((#("col " 0 1 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-name "div" tag-type start)) . 981) (undo-tree-id330 . -4)) (25354 22480 154818 835000) 0 nil])
([nil nil ((#("        <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 44 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-name "a" tag-type start) 46 47 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 47 50 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 51 52 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 59 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 68 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "a" tag-type start) 69 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 75 (block-side t tag-attr t tag-name "a" tag-type start) 75 82 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 82 84 (block-side t tag-attr t tag-name "a" tag-type start) 84 88 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 88 89 (block-side t tag-attr t tag-name "a" tag-type start) 89 96 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 96 99 (block-side t tag-attr t tag-name "a" tag-type start) 99 106 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 106 108 (block-side t tag-attr t tag-name "a" tag-type start) 108 112 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 112 114 (block-side t tag-attr t tag-name "a" tag-type start) 114 117 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 117 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 119 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 119 120 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 121 122 (tag-name "a" tag-type start) 122 123 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 123 133 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 133 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 134 142 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 142 143 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-name "a" tag-type start) 144 145 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 145 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 148 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 148 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 158 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 158 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 159 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 163 164 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-name "a" tag-type start face (whitespace-line)) 165 166 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 166 170 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 172 173 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 173 174 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 175 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 179 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 180 188 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 188 189 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 189 194 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 194 195 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 195 196 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 196 197 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 197 198 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 198 199 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 199 205 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 205 214 (face (whitespace-line)) 214 215 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 215 219 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 219 220 (tag-name "span" tag-type start face (whitespace-line)) 220 221 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 221 225 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 226 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 226 245 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 245 246 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 246 247 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1201) (1192 . 1201) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 944) (undo-tree-id509 . -4) (953 . 1201) 948) nil (25354 22646 516648 470000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -984) (undo-tree-id259 . -1) 985) ((984 . 985)) (25354 22479 976761 234000) 0 nil])
([nil nil ((#("          Post</span></a>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1227) (1218 . 1227) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1192) (undo-tree-id508 . -4) (1201 . 1227) 1196) nil (25354 22646 516644 730000) 0 nil])
([nil nil ((#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -982) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -983) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 984) ((982 . 984)) (25354 22479 825946 988000) 0 nil])
([nil nil ((#("      {% endif %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t) 15 16 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1245) (1236 . 1245) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1218) (undo-tree-id507 . -4) (1227 . 1245) 1222) nil (25354 22646 516640 524000) 0 nil])
([nil nil ((982 . 984)) ((#("cl" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . 982) (undo-tree-id329 . -2)) (25354 22479 617593 417000) 0 nil])
([nil nil ((#("      {% if page.next.url %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 11 (block-side t face web-mode-block-control-face) 11 12 (block-side t) 12 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t) 26 27 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1274) (1265 . 1274) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1236) (undo-tree-id506 . -4) (1245 . 1274) 1240) nil (25354 22646 516636 833000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -982) (undo-tree-id253 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -983) (undo-tree-id254 . -1) 984) ((982 . 984)) (25354 22479 447634 719000) 0 nil])
([nil nil ((#("        <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 45 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-name "a" tag-type start) 47 48 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 48 51 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 52 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 52 53 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t tag-attr t tag-name "a" tag-type start) 56 60 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "a" tag-type start) 61 65 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "a" tag-type start) 66 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 72 (block-side t tag-attr t tag-name "a" tag-type start) 72 79 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 79 81 (block-side t tag-attr t tag-name "a" tag-type start) 81 85 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 85 86 (block-side t tag-attr t tag-name "a" tag-type start) 86 93 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 93 96 (block-side t tag-attr t tag-name "a" tag-type start) 96 103 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 103 105 (block-side t tag-attr t tag-name "a" tag-type start) 105 109 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 109 111 (block-side t tag-attr t tag-name "a" tag-type start) 111 114 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 114 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 116 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 116 117 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 117 118 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 118 119 (tag-name "a" tag-type start) 119 120 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 120 130 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 130 131 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 131 139 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 140 141 (tag-name "a" tag-type start) 141 142 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 142 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 148 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 148 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 155 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 155 156 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 156 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 160 161 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 161 162 (tag-name "a" tag-type start face (whitespace-line)) 162 163 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 168 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 168 169 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 169 170 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 170 171 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 171 172 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 172 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 176 177 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 177 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 181 182 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 182 187 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 187 188 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 188 189 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 189 190 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 190 191 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 191 192 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 192 196 (face (whitespace-line)) 196 197 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 197 201 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 201 202 (tag-name "span" tag-type start face (whitespace-line)) 202 203 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 203 207 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 208 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 208 227 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 227 228 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 228 229 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1504) (1495 . 1504) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1265) (undo-tree-id505 . -4) (1274 . 1504) 1269) nil (25354 22646 516632 794000) 0 nil])
([nil nil ((988 . 991) (982 . 989)) ((#("lass=\"\"" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 982) (undo-tree-id327 . -6) (#("coo" 0 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 988) (undo-tree-id328 . -3)) (25354 22479 286825 292000) 0 nil])
([nil nil ((#("          Post</span> &rarr;</a>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 22 28 (font-lock-face (web-mode-html-entity-face)) 28 29 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 31 32 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1537) (1528 . 1537) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1495) (undo-tree-id504 . -4) (1504 . 1537) 1499) nil (25354 22646 516629 239000) 0 nil])
([nil nil ((#("o" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -990) (undo-tree-id252 . -1) 991) ((990 . 991)) (25354 22479 119790 27000) 0 nil])
([nil nil ((#("      {% endif %}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t) 9 14 (block-side t face web-mode-block-control-face) 14 15 (block-side t) 15 16 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1555) (1546 . 1555) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1528) (undo-tree-id503 . -4) (1537 . 1555) 1532) nil (25354 22646 516625 512000) 0 nil])
([nil nil ((990 . 992)) ((#("l " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 990) (undo-tree-id326 . -2)) (25354 22478 943780 507000) 0 nil])
([nil nil (("
" . 1556) (1547 . 1556) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1546) (undo-tree-id502 . -4) (1555 . 1556) 1550) nil (25354 22646 516621 644000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -991) (undo-tree-id251 . -1) 992) ((991 . 992)) (25354 22478 827140 400000) 0 nil])
([nil nil ((#("    </div>
" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1567) (1558 . 1567) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1547) (undo-tree-id501 . -4) (1556 . 1567) 1551) nil (25354 22646 516617 665000) 0 nil])
([nil nil ((994 . 1012) (995 . 1011) (#("                  " 0 18 (face whitespace-trailing)) . 994) (994 . 1012) (994 . 995) ("                " . 994) (993 . 1010)) (("
                " . 993) (undo-tree-id324 . -1) (994 . 1010) ("
" . 994) (undo-tree-id325 . -1) (#("                  " 0 18 (face whitespace-trailing)) . 994) (994 . 1012) ("                " . 995) (#("                  " 0 1 (face whitespace-trailing) 1 2 (face whitespace-trailing) 2 3 (face whitespace-trailing) 3 4 (face whitespace-trailing) 4 5 (face whitespace-trailing) 5 6 (face whitespace-trailing) 6 7 (face whitespace-trailing) 7 8 (face whitespace-trailing) 8 9 (face whitespace-trailing) 9 10 (face whitespace-trailing) 10 11 (face whitespace-trailing) 11 12 (face whitespace-trailing) 12 13 (face whitespace-trailing) 13 14 (face whitespace-trailing) 14 15 (face whitespace-trailing) 15 16 (face whitespace-trailing) 16 17 (face whitespace-trailing) 17 18 (face whitespace-trailing)) . 994)) (25354 22478 623470 537000) 0 nil])
([nil nil (("
" . 1568) (1559 . 1568) (#("  </div>
" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1558) (undo-tree-id500 . -4) (1567 . 1568) 1562) nil (25354 22646 516613 768000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1288) (1265 . 1288) (#("                </div>
" 16 17 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1013) (undo-tree-id250 . -18) (1036 . 1288) 1031) ((#("            <a class=\"btn btn-primary float-left\" href=\"{{ page.previous.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.previous.title }}\">&larr; Previous<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 48 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "a" tag-type start) 50 51 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 51 54 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 63 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 72 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "a" tag-type start) 73 76 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 76 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 86 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 86 88 (block-side t tag-attr t tag-name "a" tag-type start) 88 92 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 92 93 (block-side t tag-attr t tag-name "a" tag-type start) 93 100 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 100 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 110 112 (block-side t tag-attr t tag-name "a" tag-type start) 112 116 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 116 118 (block-side t tag-attr t tag-name "a" tag-type start) 118 121 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 125 126 (tag-name "a" tag-type start) 126 127 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 127 137 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 137 138 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 138 144 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 146 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (tag-name "a" tag-type start) 148 149 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 149 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 163 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 167 168 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 168 169 (tag-name "a" tag-type start face (whitespace-line)) 169 170 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 170 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 174 175 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 175 176 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 176 177 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 177 178 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 178 179 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 179 183 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 183 184 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 184 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 192 193 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 193 198 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 198 199 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 199 200 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 200 201 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 201 202 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 202 203 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 203 209 (font-lock-face (web-mode-html-entity-face) face (whitespace-line web-mode-html-entity-face)) 209 218 (face (whitespace-line)) 218 219 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 219 223 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 223 224 (tag-name "span" tag-type start face (whitespace-line)) 224 225 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 225 229 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 229 230 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 230 249 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 249 250 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 250 251 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1036) (undo-tree-id319 . -252) (undo-tree-id320 . -252) (undo-tree-id321 . -252) (1013 . 1036) (#("                </div>
" 16 17 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1265) (undo-tree-id322 . -18) (undo-tree-id323 . -23) (1288 . 1540)) (25354 22478 488283 974000) 0 nil])
([nil nil (("
" . -724) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (" " . -725) (undo-tree-id496 . -1) (" " . -726) (undo-tree-id497 . -1) (" " . -727) (undo-tree-id498 . -1) (" " . -728) (undo-tree-id499 . -1) 729) nil (25354 22646 516609 84000) 0 nil])
([nil nil ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1318) (1295 . 1318) (#("                </div>
" 16 17 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1265) (undo-tree-id249 . -18) (1288 . 1318) 1283) ((#("              Post</span></a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1288) (1265 . 1288) (#("                </div>
" 16 17 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1295) (1318 . 1348)) (25354 22478 314085 759000) 0 nil])
([nil nil ((726 . 730) (#("    " 0 4 (face whitespace-trailing)) . 725) (725 . 729) (725 . 726)) nil (25354 22646 516597 185000) 0 nil])
([nil nil ((1372 . 1385)) (("
            " . 1372) (undo-tree-id315 . -13) (undo-tree-id316 . -13) (undo-tree-id317 . -1) (undo-tree-id318 . -1)) (25354 22478 140266 282000) 0 nil])
([nil nil ((730 . 741)) nil (25354 22646 516595 359000) 0 nil])
([nil nil ((1385 . 1388)) ((#("<di" 0 1 (tag-name "di" tag-type start tag-beg 0 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "di" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 1385) (undo-tree-id313 . -3) (undo-tree-id314 . -3)) (25354 22477 952619 154000) 0 nil])
([nil nil ((736 . 742) (737 . 741) (#("      " 0 6 (face whitespace-trailing)) . 736) (736 . 742) (736 . 737) ("    " . 736) (735 . 740)) nil (25354 22646 516593 604000) 0 nil])
([nil nil ((1397 . 1400) (1388 . 1398)) ((#("v class=\"\"" 0 1 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 1 2 (tag-name "div" tag-type start) 2 3 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1388) (undo-tree-id310 . -9) (undo-tree-id311 . -10) (#("col" 0 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1397) (undo-tree-id312 . -3)) (25354 22477 710865 489000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on wattpad</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 33 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 57 58 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 813) (undo-tree-id492 . -6) (undo-tree-id493 . -59) (802 . 813) (#("    </div>
" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 743) (754 . 813) 760) nil (25354 22646 516590 456000) 0 nil])
([nil nil ((1401 . 1408)) ((#("></div>" 0 1 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 3 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1401) (undo-tree-id309 . -1)) (25354 22477 482575 380000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on wattpad</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 33 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 57 58 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 802) (undo-tree-id489 . -59) (undo-tree-id490 . -6) (undo-tree-id491 . -59) (795 . 802) (#("      
" 0 6 (face whitespace-trailing)) . 736) (743 . 802) 749) nil (25354 22646 516585 48000) 0 nil])
([nil nil ((1403 . 1417) (1404 . 1416) (#("              " 0 14 (face whitespace-trailing)) . 1403) (1403 . 1417) (1403 . 1404) ("            " . 1403) (1402 . 1415)) (("
            " . 1402) (undo-tree-id307 . -1) (1403 . 1415) ("
" . 1403) (undo-tree-id308 . -1) (#("              " 0 14 (face whitespace-trailing)) . 1403) (1403 . 1417) ("            " . 1404) (#("              " 0 14 (face whitespace-trailing)) . 1403)) (25354 22477 282731 270000) 0 nil])
([nil nil ((812 . 817)) nil (25354 22646 516579 523000) 0 nil])
([nil nil ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1671) (1652 . 1671) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1418) (undo-tree-id248 . -14) (1437 . 1671) 1432) ((#("            <a class=\"btn btn-primary float-right\" href=\"{{ page.next.url | prepend: site.baseurl | replace: '//', '/' }}\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ page.next.title }}\">Next<span class=\"d-none d-md-inline\">
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 49 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "a" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 52 55 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 56 57 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 64 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "a" tag-type start) 65 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "a" tag-type start) 76 83 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "a" tag-type start) 85 89 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "a" tag-type start) 90 97 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "a" tag-type start) 100 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "a" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "a" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "a" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 123 (tag-name "a" tag-type start) 123 124 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 124 134 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 134 135 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 135 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (tag-attr t tag-attr-end 11 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-name "a" tag-type start) 145 146 (tag-attr-beg 1 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 146 150 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face) 150 152 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 152 159 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-custom-face face (whitespace-line web-mode-html-attr-custom-face)) 159 160 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 160 162 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 162 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 164 165 (tag-attr t tag-attr-end 14 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 165 166 (tag-name "a" tag-type start face (whitespace-line)) 166 167 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 167 171 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 171 172 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 172 173 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 173 174 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 174 175 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 175 176 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 176 180 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 180 181 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 181 185 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 185 186 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 186 191 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line web-mode-variable-name-face)) 191 192 (block-side t tag-attr t tag-name "a" tag-type start face (whitespace-line)) 192 193 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 193 194 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face face (whitespace-line web-mode-block-delimiter-face)) 194 195 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 195 196 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 196 200 (face (whitespace-line)) 200 201 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face)) 201 205 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face face (whitespace-line web-mode-html-tag-face)) 205 206 (tag-name "span" tag-type start face (whitespace-line)) 206 207 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 207 211 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face face (whitespace-line web-mode-html-attr-name-face)) 211 212 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face face (whitespace-line web-mode-html-attr-equal-face)) 212 231 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 231 232 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 232 233 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face face (whitespace-line web-mode-html-tag-bracket-face))) . 1437) (undo-tree-id302 . -234) (undo-tree-id303 . -234) (undo-tree-id304 . -234) (1418 . 1437) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1652) (undo-tree-id305 . -14) (undo-tree-id306 . -19) (1671 . 1905)) (25354 22477 105479 97000) 0 nil])
([nil nil ((817 . 819)) nil (25354 22646 516578 399000) 0 nil])
([nil nil ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1708) (1689 . 1708) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1652) (undo-tree-id247 . -14) (1671 . 1708) 1666) ((#("              Post</span> &rarr;</a>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 32 (font-lock-face (web-mode-html-entity-face)) 32 33 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1671) (undo-tree-id297 . -37) (undo-tree-id298 . -37) (undo-tree-id299 . -37) (1652 . 1671) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1689) (undo-tree-id300 . -14) (undo-tree-id301 . -19) (1708 . 1745)) (25354 22476 833577 447000) 0 nil])
([nil nil ((#("u" 0 1 (tag-name "u" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -818) (undo-tree-id488 . -1) 819) nil (25354 22646 516576 959000) 0 nil])
([nil nil ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1730) (1711 . 1730) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1689) (undo-tree-id246 . -14) (1708 . 1730) 1703) ((#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1708) (undo-tree-id292 . -22) (undo-tree-id293 . -22) (undo-tree-id294 . -22) (1689 . 1708) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1711) (undo-tree-id295 . -14) (undo-tree-id296 . -19) (1730 . 1752)) (25354 22476 430912 25000) 0 nil])
([nil nil ((818 . 828)) nil (25354 22646 516574 293000) 0 nil])
([nil nil ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1730) (undo-tree-id244 . -14) (undo-tree-id245 . -19) (1708 . 1730) (#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1689) (1711 . 1730) 1725) ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1711) (1689 . 1711) (#("          {% endif %}
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t) 13 18 (block-side t face web-mode-block-control-face) 18 19 (block-side t) 19 20 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 1708) (1730 . 1749)) (25354 22476 246185 156000) 0 nil])
([nil nil ((823 . 829) (824 . 828) (#("      " 0 6 (face whitespace-trailing)) . 823) (823 . 829) (823 . 824) ("    " . 823) (822 . 827)) nil (25354 22646 516572 499000) 0 nil])
([nil nil ((1762 . 1766) (1729 . 1745) ("            " . 1729) (1686 . 1706) ("              " . 1686) (1446 . 1464) ("            " . 1446) (1427 . 1445) (#("              " 0 14 (face whitespace-trailing)) . 1427) (1393 . 1409) ("            " . 1393) (1366 . 1370) (1340 . 1344) (1271 . 1291) ("              " . 1271) (1013 . 1031) ("            " . 1013) 652) ((1013 . 1025) ("                  " . 1013) (1271 . 1285) ("                    " . 1271) ("    " . 1340) ("    " . 1366) (1393 . 1405) ("                " . 1393) (1427 . 1441) (#("                  " 0 1 (face whitespace-trailing) 1 2 (face whitespace-trailing) 2 3 (face whitespace-trailing) 3 4 (face whitespace-trailing) 4 5 (face whitespace-trailing) 5 6 (face whitespace-trailing) 6 7 (face whitespace-trailing) 7 8 (face whitespace-trailing) 8 9 (face whitespace-trailing) 9 10 (face whitespace-trailing) 10 11 (face whitespace-trailing) 11 12 (face whitespace-trailing) 12 13 (face whitespace-trailing) 13 14 (face whitespace-trailing) 14 15 (face whitespace-trailing) 15 16 (face whitespace-trailing) 16 17 (face whitespace-trailing) 17 18 (face whitespace-trailing)) . 1427) (1446 . 1458) ("                  " . 1446) (1686 . 1700) ("                    " . 1686) (1729 . 1741) ("                " . 1729) ("    " . 1762)) (25354 22475 886002 965000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on Inkitt</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 32 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 56 57 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 899) (undo-tree-id486 . -6) (undo-tree-id487 . -58) (888 . 899) (#("    </div>
" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 830) (841 . 899) 847) nil (25354 22646 516569 234000) 0 nil])
([nil nil (("
" . -993) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (" " . -994) (undo-tree-id226 . -1) (" " . -995) (undo-tree-id227 . -1) (" " . -996) (undo-tree-id228 . -1) (" " . -997) (undo-tree-id229 . -1) (" " . -998) (undo-tree-id230 . -1) (" " . -999) (undo-tree-id231 . -1) (" " . -1000) (undo-tree-id232 . -1) (" " . -1001) (undo-tree-id233 . -1) (" " . -1002) (undo-tree-id234 . -1) (" " . -1003) (undo-tree-id235 . -1) (" " . -1004) (undo-tree-id236 . -1) (" " . -1005) (undo-tree-id237 . -1) (" " . -1006) (undo-tree-id238 . -1) (" " . -1007) (undo-tree-id239 . -1) (" " . -1008) (undo-tree-id240 . -1) (" " . -1009) (undo-tree-id241 . -1) (" " . -1010) (undo-tree-id242 . -1) (" " . -1011) (undo-tree-id243 . -1) 1012) ((993 . 1012)) (25354 22475 245075 453000) 0 nil])
([nil nil ((#("    <a href=\"#\" class=\"book_links btn\">Read on Inkitt</a>
" 4 5 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 6 7 (tag-name "a" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 8 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 23 32 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 56 57 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 888) (undo-tree-id484 . -6) (undo-tree-id485 . -58) (881 . 888) (#("      
" 0 6 (face whitespace-trailing)) . 823) (830 . 888) 836) nil (25354 22646 516560 896000) 0 nil])
([nil nil (("
" . -1407) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (" " . -1408) (undo-tree-id188 . -1) (" " . -1409) (undo-tree-id190 . -1) (" " . -1410) (undo-tree-id192 . -1) (" " . -1411) (undo-tree-id194 . -1) (" " . -1412) (undo-tree-id196 . -1) (" " . -1413) (undo-tree-id198 . -1) (" " . -1414) (undo-tree-id200 . -1) (" " . -1415) (undo-tree-id202 . -1) (" " . -1416) (undo-tree-id204 . -1) (" " . -1417) (undo-tree-id206 . -1) (" " . -1418) (undo-tree-id208 . -1) (" " . -1419) (undo-tree-id210 . -1) (" " . -1420) (undo-tree-id212 . -1) (" " . -1421) (undo-tree-id214 . -1) (" " . -1422) (undo-tree-id216 . -1) (" " . -1423) (undo-tree-id218 . -1) (" " . -1424) (undo-tree-id220 . -1) (" " . -1425) (undo-tree-id222 . -1) 1426) ((1407 . 1426) (t 25354 22441 584404 151000)) (25354 22441 568654 431000) 0 nil])
([nil nil ((742 . 745) (734 . 743)) nil (25354 22646 516553 723000) 0 nil])
nil
([nil nil ((823 . 829)) nil (25354 22646 516550 974000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type end)) . -823) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "div" tag-type end font-lock-face web-mode-html-attr-name-face)) . -824) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type end font-lock-face web-mode-html-attr-name-face)) . -825) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type end font-lock-face web-mode-html-attr-name-face)) . -826) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("s" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type end font-lock-face web-mode-html-attr-name-face)) . -827) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("s" 0 1 (tag-attr t tag-attr-end 0 tag-name "div" tag-type end font-lock-face web-mode-html-attr-name-face)) . -828) (undo-tree-id483 . -1) 829) nil (25354 22646 516547 79000) 0 nil])
([nil nil ((841 . 845) (833 . 842)) nil (25354 22646 516530 885000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -844) (undo-tree-id472 . -1) 845) nil (25354 22646 516529 220000) 0 nil])
([nil nil ((853 . 855) (752 . 754) 674) nil (25354 22646 516526 535000) 0 nil])
([nil nil ((1654 . 1656) ("  " . -1647) 186) nil (25354 22646 516524 335000) 0 nil])
([nil nil (("
" . -955) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (" " . -956) (undo-tree-id466 . -1) (" " . -957) (undo-tree-id467 . -1) (" " . -958) (undo-tree-id468 . -1) (" " . -959) (undo-tree-id469 . -1) ("
" . -960) (undo-tree-id470 . -1) (undo-tree-id471 . -1) 961) nil (25354 22646 516520 563000) 0 nil])
([nil nil ((#("
  </div>" 3 4 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 5 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 8 9 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1647) (undo-tree-id455 . -9) (undo-tree-id456 . -1) (undo-tree-id457 . -9) (undo-tree-id458 . -9) (undo-tree-id459 . -9) (undo-tree-id460 . -9) (undo-tree-id461 . -9) (undo-tree-id462 . -9) (undo-tree-id463 . -9)) nil (25354 22646 516506 988000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing)) . -903) (#("      " 0 6 (face whitespace-trailing)) . -809) 186) nil (25354 22646 516480 120000) 0 nil])
([nil nil ((#("
    </div>
  </div>" 5 6 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 6 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 19 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 19 20 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 684) (undo-tree-id584 . -20) (undo-tree-id585 . -1) (undo-tree-id586 . -20) (undo-tree-id587 . -20) (t 25354 22646 537724 953000)) nil (25354 22739 478600 908000) 0 nil])
([nil nil ((925 . 929) (908 . 916) ("    " . 908) (843 . 853) ("      " . 843) (817 . 825) ("    " . 817) (802 . 810) ("    " . 802) (736 . 746) ("      " . 736) (710 . 718) ("    " . 710) (687 . 691) 674) nil (25354 22739 478592 869000) 0 nil])
([nil nil ((398 . 404) ("      " . 397) (undo-tree-id583 . -6) (396 . 404)) nil (25354 22739 478587 151000) 0 nil])
([nil nil ((416 . 420) (404 . 417)) nil (25354 22739 478583 982000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -419) (undo-tree-id582 . -1) 420) nil (25354 22739 478582 299000) 0 nil])
([nil nil ((420 . 427)) nil (25354 22739 478579 778000) 0 nil])
([nil nil ((422 . 430) (423 . 429) (#("        " 0 8 (face whitespace-trailing)) . 422) (422 . 430) (422 . 423) ("      " . 422) (421 . 428)) nil (25354 22739 478577 932000) 0 nil])
([nil nil (("
" . 445) (432 . 445) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 431) (undo-tree-id581 . -8) (444 . 445) 439) nil (25354 22739 478574 367000) 0 nil])
([nil nil ((#("      <h1>{{ page.title }}</h1>
" 6 7 (tag-name "h1" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 7 9 (tag-name "h1" tag-type start font-lock-face web-mode-html-tag-face) 9 10 (tag-name "h1" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 12 13 (block-side t) 13 17 (block-side t face web-mode-variable-name-face) 17 18 (block-side t) 18 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t) 24 25 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 25 26 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 26 27 (tag-name "h1" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 30 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-face) 30 31 (tag-name "h1" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 477) (464 . 477) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 432) (undo-tree-id580 . -8) (445 . 477) 440) nil (25354 22739 478570 454000) 0 nil])
([nil nil ((#("      <span class=\"meta\">Written by
" 6 7 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 11 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 11 12 (tag-name "span" tag-type start) 12 13 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 13 17 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 18 23 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 513) (500 . 513) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 464) (477 . 513) 472) nil (25354 22739 478565 982000) 0 nil])
([nil nil ((#("        <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 18 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t) 23 25 (block-side t face web-mode-block-control-face) 25 26 (block-side t) 26 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t) 38 39 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 41 42 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 42 43 (block-side t) 43 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t) 48 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t) 55 56 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 56 57 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 57 58 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 58 59 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 59 60 (block-side t) 60 64 (block-side t face web-mode-block-control-face) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 67 68 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 68 69 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 69 70 (block-side t) 70 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t) 75 81 (block-side t face web-mode-variable-name-face) 81 82 (block-side t) 82 83 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 83 84 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 84 85 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 85 86 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 86 87 (block-side t) 87 92 (block-side t face web-mode-block-control-face) 92 93 (block-side t) 93 94 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 94 95 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 95 96 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 97 98 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 98 99 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 613) (600 . 613) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 500) (undo-tree-id579 . -8) (513 . 613) 508) nil (25354 22739 478563 171000) 0 nil])
([nil nil ((#("        and published on {{ page.date | date: '%B %d, %Y' }}
" 25 26 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 27 28 (block-side t) 28 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 37 (block-side t face web-mode-variable-name-face) 37 40 (block-side t) 40 44 (block-side t face web-mode-filter-face) 44 46 (block-side t) 46 48 (block-side t block-token string font-lock-face web-mode-block-string-face) 48 49 (block-side t block-token string font-lock-face web-mode-block-string-face) 49 51 (block-side t block-token string font-lock-face web-mode-block-string-face) 51 52 (block-side t block-token string font-lock-face web-mode-block-string-face) 52 55 (block-side t block-token string font-lock-face web-mode-block-string-face) 55 56 (block-side t block-token string font-lock-face web-mode-block-string-face) 56 57 (block-side t block-token string font-lock-face web-mode-block-string-face) 57 58 (block-side t) 58 59 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 59 60 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 674) (661 . 674) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 600) (613 . 674) 608) nil (25354 22739 478559 160000) 0 nil])
([nil nil ((#("      </span>
" 6 7 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 12 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 12 13 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 688) (675 . 688) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 661) (674 . 688) 669) nil (25354 22739 478556 278000) 0 nil])
([nil nil ((#("      <hr>
" 6 7 (tag-name "hr" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 7 9 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 9 10 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 699) (686 . 699) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 675) (undo-tree-id578 . -8) (688 . 699) 683) nil (25354 22739 478550 527000) 0 nil])
([nil nil (("
" . 700) (687 . 700) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 686) (undo-tree-id577 . -8) (699 . 700) 694) nil (25354 22739 478541 27000) 0 nil])
([nil nil ((#("      {{ content }}
" 6 7 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 7 8 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 8 9 (block-side t) 9 16 (block-side t face web-mode-variable-name-face) 16 17 (block-side t) 17 18 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 720) (707 . 720) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 687) (undo-tree-id576 . -8) (700 . 720) 695) nil (25354 22739 478534 953000) 0 nil])
([nil nil (("
" . 721) (708 . 721) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 707) (undo-tree-id575 . -8) (720 . 721) 715) nil (25354 22739 478530 620000) 0 nil])
([nil nil ((#("      <hr>
" 6 7 (tag-name "hr" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 7 9 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 9 10 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 732) (undo-tree-id572 . -10) (undo-tree-id573 . -10) (719 . 732) (#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 708) (undo-tree-id574 . -8) (721 . 732) 716) nil (25354 22739 478526 233000) 0 nil])
([nil nil ((722 . 730) ("      " . 722) (699 . 707) ("      " . 699) (685 . 693) ("      " . 685) (669 . 677) ("      " . 669) (614 . 616) (512 . 514) (466 . 474) ("      " . 466) (432 . 440) ("      " . 432) 398) nil (25354 22739 478518 173000) 0 nil])
([nil nil ((#("
        <hr>" 9 10 (tag-name "hr" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 10 12 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 12 13 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 721) (undo-tree-id569 . -13) (undo-tree-id570 . -1) (undo-tree-id571 . -13)) nil (25354 22739 478512 804000) 0 nil])
([nil nil (("
" . -720) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 721) nil (25354 22739 478507 363000) 0 nil])
([nil nil ((984 . 991)) nil (25354 22739 478500 384000) 0 nil])
([nil nil ((992 . 994) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face))) . -992) (991 . 993)) nil (25354 22739 478498 837000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face))) . -992) (undo-tree-id565 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face))) . 993)) nil (25354 22739 478496 543000) 0 nil])
([nil nil (("  " . -989) (992 . 997)) nil (25354 22739 478485 457000) 0 nil])
([nil nil ((995 . 1000)) nil (25354 22739 478483 745000) 0 nil])
([nil nil (("  " . -998) (1000 . 1006)) nil (25354 22739 478481 604000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing)) . -422) 186) nil (25354 22739 478473 289000) 0 nil])
([nil nil ((#("
      <div class=\"row\">" 7 8 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type start) 12 13 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 18 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 397) (undo-tree-id596 . -24) (undo-tree-id597 . -21) (undo-tree-id598 . -1) (undo-tree-id599 . -24) (t 25354 22739 502387 278000)) nil (25354 22783 547183 772000) 0 nil])
([nil nil (("
" . -396) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) 397) nil (25354 22783 547175 457000) 0 nil])
([nil nil ((#("
      </div>" 7 8 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 8 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 9 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 12 13 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 687) (undo-tree-id588 . -13) (undo-tree-id589 . -1) (undo-tree-id590 . -13) (undo-tree-id591 . -13)) nil (25354 22783 547164 820000) 0 nil])
([nil nil ((687 . 696) (t 25354 22783 574725 94000)) nil (25354 22796 982441 387000) 0 nil])
([nil nil ((701 . 702) (699 . 700) (696 . 700)) nil (25354 22796 982438 933000) 0 nil])
([nil nil ((" " . -701) (undo-tree-id600 . -1) 702) nil (25354 22796 982432 485000) 0 nil])
([nil nil ((952 . 959) (t 25354 22797 6830 815000)) nil (25354 22827 77444 562000) 0 nil])
([nil nil ((nil rear-nonsticky nil 963 . 964) (nil tag-name "hr" 963 . 964) (nil tag-type void 963 . 964) (nil tag-end t 963 . 964) (nil font-lock-face web-mode-html-tag-bracket-face 963 . 964) (nil tag-name "hr" 962 . 963) (nil tag-type void 962 . 963) (nil font-lock-face web-mode-html-tag-bracket-face 962 . 963) (nil tag-name "hr" 960 . 962) (nil tag-type void 960 . 962) (nil font-lock-face web-mode-html-tag-face 960 . 962) (nil tag-name "hr" 959 . 960) (nil tag-type void 959 . 960) (nil tag-beg 24 959 . 960) (nil font-lock-face web-mode-html-tag-bracket-face 959 . 960) (959 . 964)) nil (25354 22827 77436 22000) 0 nil])
([nil nil ((964 . 971) (t 25354 22827 103072 114000)) nil (25354 22837 826837 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 975 . 976) (nil tag-name "hr" 975 . 976) (nil tag-type void 975 . 976) (nil tag-end t 975 . 976) (nil font-lock-face web-mode-html-tag-bracket-face 975 . 976) (nil tag-name "hr" 974 . 975) (nil tag-type void 974 . 975) (nil font-lock-face web-mode-html-tag-bracket-face 974 . 975) (nil tag-name "hr" 972 . 974) (nil tag-type void 972 . 974) (nil font-lock-face web-mode-html-tag-face 972 . 974) (nil tag-name "hr" 971 . 972) (nil tag-type void 971 . 972) (nil tag-beg 24 971 . 972) (nil font-lock-face web-mode-html-tag-bracket-face 971 . 972) (971 . 976)) nil (25354 22837 826828 842000) 0 nil])
([nil nil ((723 . 724) (t 25354 22837 851159 721000)) nil (25354 22897 859546 399000) 0 nil])
([nil nil ((nil rear-nonsticky nil 748 . 749) (nil tag-attr t 724 . 749) (nil tag-name "div" 724 . 749) (nil tag-type start 724 . 749) (nil font-lock-face web-mode-html-attr-value-face 724 . 749) (724 . 749)) nil (25354 22897 859543 629000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -723) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("r" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -724) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("o" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -725) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("w" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -726) (undo-tree-id608 . -1) (undo-tree-id609 . -1) 727) nil (25354 22897 859536 97000) 0 nil])
([nil nil ((772 . 774) (t 25354 22897 883661 971000)) nil (25354 22954 233689 389000) 0 nil])
([nil nil ((881 . 883)) nil (25354 22954 233681 936000) 0 nil])
([nil nil ((#("      <div class=\"row justify-content-start\">

        <div class=\"col-4\">" 6 7 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 21 42 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 56 59 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 59 60 (tag-name "div" tag-type start) 60 61 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 61 62 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 62 63 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 63 64 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 64 65 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 65 66 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 66 72 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 702) (undo-tree-id645 . -74) (undo-tree-id646 . -46) (undo-tree-id647 . -21) (undo-tree-id648 . -74) (t 25354 22954 256152 51000)) nil (25354 23035 387730 181000) 0 nil])
([nil nil (("
" . -701) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) 702) nil (25354 23035 387724 35000) 0 nil])
([nil nil ((#("        </div>" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 768) (undo-tree-id639 . -14) (undo-tree-id640 . -14)) nil (25354 23035 387718 55000) 0 nil])
([nil nil (("
" . -767) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 768) nil (25354 23035 387714 256000) 0 nil])
([nil nil ((#("
        <div class=\"col-4\">" 9 10 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 20 26 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 767) (undo-tree-id632 . -28) (undo-tree-id633 . -1) (undo-tree-id634 . -28)) nil (25354 23035 387708 16000) 0 nil])
([nil nil (("
" . -766) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 767) nil (25354 23035 387702 898000) 0 nil])
([nil nil ((#("
        </div>" 9 10 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 831) (undo-tree-id623 . -15) (undo-tree-id624 . -1) (undo-tree-id625 . -15) (undo-tree-id626 . -15)) nil (25354 23035 387695 291000) 0 nil])
([nil nil (("
" . -830) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) 831) nil (25354 23035 387688 331000) 0 nil])
([nil nil ((#("      </div>" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 831) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -12) (undo-tree-id618 . -12)) nil (25354 23035 387681 862000) 0 nil])
([nil nil (("
" . -830) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) 831) nil (25354 23035 387674 634000) 0 nil])
([nil nil (("    " . -753) ("    " . -692) ("  " . -680) ("  " . -660) ("  " . -648) ("  " . -634) ("  " . -575) ("  " . -475) ("  " . -437) ("  " . -405) 185) nil (25354 23035 387645 225000) 0 nil])
([nil nil ((742 . 743) (t 25354 23035 408885 131000)) nil (25354 23163 927968 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 807 . 808) (nil tag-name "img" 807 . 808) (nil tag-type void 807 . 808) (nil tag-end t 807 . 808) (nil font-lock-face web-mode-html-tag-bracket-face 807 . 808) (nil tag-name "img" 806 . 807) (nil tag-type void 806 . 807) (nil font-lock-face web-mode-html-tag-bracket-face 806 . 807) (nil tag-attr t 805 . 806) (nil tag-attr-end 3 805 . 806) (nil tag-name "img" 805 . 806) (nil tag-type void 805 . 806) (nil font-lock-face web-mode-html-attr-value-face 805 . 806) (nil block-side t 804 . 805) (nil block-end t 804 . 805) (nil block-token delimiter-end 804 . 805) (nil tag-attr t 804 . 805) (nil tag-name "img" 804 . 805) (nil tag-type void 804 . 805) (nil font-lock-face web-mode-block-delimiter-face 804 . 805) (nil block-side t 803 . 804) (nil block-token delimiter-end 803 . 804) (nil tag-attr t 803 . 804) (nil tag-name "img" 803 . 804) (nil tag-type void 803 . 804) (nil font-lock-face web-mode-block-delimiter-face 803 . 804) (nil block-side t 802 . 803) (nil tag-attr t 802 . 803) (nil tag-name "img" 802 . 803) (nil tag-type void 802 . 803) (nil block-side t 789 . 802) (nil tag-attr t 789 . 802) (nil tag-name "img" 789 . 802) (nil tag-type void 789 . 802) (nil face web-mode-variable-name-face 789 . 802) (nil block-side t 788 . 789) (nil tag-attr t 788 . 789) (nil tag-name "img" 788 . 789) (nil tag-type void 788 . 789) (nil block-side t 784 . 788) (nil tag-attr t 784 . 788) (nil tag-name "img" 784 . 788) (nil tag-type void 784 . 788) (nil face web-mode-variable-name-face 784 . 788) (nil block-side t 783 . 784) (nil tag-attr t 783 . 784) (nil tag-name "img" 783 . 784) (nil tag-type void 783 . 784) (nil block-side t 782 . 783) (nil block-token delimiter-beg 782 . 783) (nil tag-attr t 782 . 783) (nil tag-name "img" 782 . 783) (nil tag-type void 782 . 783) (nil font-lock-face web-mode-block-delimiter-face 782 . 783) (nil block-beg 0 781 . 782) (nil block-controls 0 781 . 782) (nil block-side t 781 . 782) (nil block-token delimiter-beg 781 . 782) (nil tag-attr t 781 . 782) (nil tag-name "img" 781 . 782) (nil tag-type void 781 . 782) (nil font-lock-face web-mode-block-delimiter-face 781 . 782) (nil tag-attr t 780 . 781) (nil tag-name "img" 780 . 781) (nil tag-type void 780 . 781) (nil font-lock-face web-mode-html-attr-value-face 780 . 781) (nil tag-attr t 779 . 780) (nil tag-name "img" 779 . 780) (nil tag-type void 779 . 780) (nil font-lock-face web-mode-html-attr-equal-face 779 . 780) (nil tag-attr t 777 . 779) (nil tag-name "img" 777 . 779) (nil tag-type void 777 . 779) (nil font-lock-face web-mode-html-attr-name-face 777 . 779) (nil tag-attr-beg 0 776 . 777) (nil tag-attr t 776 . 777) (nil tag-name "img" 776 . 777) (nil tag-type void 776 . 777) (nil font-lock-face web-mode-html-attr-name-face 776 . 777) (nil tag-name "img" 775 . 776) (nil tag-type void 775 . 776) (nil tag-attr t 774 . 775) (nil tag-attr-end 4 774 . 775) (nil tag-name "img" 774 . 775) (nil tag-type void 774 . 775) (nil font-lock-face web-mode-html-attr-value-face 774 . 775) (nil tag-attr t 764 . 774) (nil tag-name "img" 764 . 774) (nil tag-type void 764 . 774) (nil font-lock-face web-mode-html-attr-value-face 764 . 774) (nil tag-attr t 763 . 764) (nil tag-name "img" 763 . 764) (nil tag-type void 763 . 764) (nil font-lock-face web-mode-html-attr-equal-face 763 . 764) (nil tag-attr t 760 . 763) (nil tag-name "img" 760 . 763) (nil tag-type void 760 . 763) (nil font-lock-face web-mode-html-attr-name-face 760 . 763) (nil tag-attr-beg 0 759 . 760) (nil tag-attr t 759 . 760) (nil tag-name "img" 759 . 760) (nil tag-type void 759 . 760) (nil font-lock-face web-mode-html-attr-name-face 759 . 760) (nil tag-name "img" 758 . 759) (nil tag-type void 758 . 759) (nil tag-attr t 757 . 758) (nil tag-attr-end 3 757 . 758) (nil tag-name "img" 757 . 758) (nil tag-type void 757 . 758) (nil font-lock-face web-mode-html-attr-value-face 757 . 758) (nil tag-attr t 752 . 757) (nil tag-name "img" 752 . 757) (nil tag-type void 752 . 757) (nil font-lock-face web-mode-html-attr-value-face 752 . 757) (nil tag-attr t 751 . 752) (nil tag-name "img" 751 . 752) (nil tag-type void 751 . 752) (nil font-lock-face web-mode-html-attr-equal-face 751 . 752) (nil tag-attr t 749 . 751) (nil tag-name "img" 749 . 751) (nil tag-type void 749 . 751) (nil font-lock-face web-mode-html-attr-name-face 749 . 751) (nil tag-attr-beg 0 748 . 749) (nil tag-attr t 748 . 749) (nil tag-name "img" 748 . 749) (nil tag-type void 748 . 749) (nil font-lock-face web-mode-html-attr-name-face 748 . 749) (nil tag-name "img" 747 . 748) (nil tag-type void 747 . 748) (nil tag-name "img" 744 . 747) (nil tag-type void 744 . 747) (nil font-lock-face web-mode-html-tag-face 744 . 747) (nil tag-name "img" 743 . 744) (nil tag-type void 743 . 744) (nil tag-beg 25 743 . 744) (nil font-lock-face web-mode-html-tag-bracket-face 743 . 744) (743 . 808)) nil (25354 23163 927951 685000) 0 nil])
([nil nil ((#("<img rel=\"icon\" type=\"image/png\" src=\"{{ site.commaful_icon }}\"/>" 0 1 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 4 5 (tag-name "img" tag-type void) 5 6 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 6 8 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 8 9 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 9 14 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 15 16 (tag-name "img" tag-type void) 16 17 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 17 20 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 21 31 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-attr-end 4 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 32 33 (tag-name "img" tag-type void) 33 34 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 34 36 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 37 38 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 38 39 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t tag-attr t tag-name "img" tag-type void) 41 45 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 45 46 (block-side t tag-attr t tag-name "img" tag-type void) 46 59 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "img" tag-type void) 60 61 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 61 62 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 62 63 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 63 64 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 64 65 (rear-nonsticky t tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 743) (undo-tree-id649 . -65) (undo-tree-id650 . -65) (undo-tree-id651 . -65) (t 25354 23163 954102 435000)) nil (25354 23179 217527 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 806 . 807) (nil tag-name "img" 806 . 807) (nil tag-type void 806 . 807) (nil tag-end t 806 . 807) (nil font-lock-face web-mode-html-tag-bracket-face 806 . 807) (nil tag-name "img" 805 . 806) (nil tag-type void 805 . 806) (nil font-lock-face web-mode-html-tag-bracket-face 805 . 806) (nil tag-attr t 804 . 805) (nil tag-attr-end 3 804 . 805) (nil tag-name "img" 804 . 805) (nil tag-type void 804 . 805) (nil font-lock-face web-mode-html-attr-value-face 804 . 805) (nil block-side t 803 . 804) (nil block-end t 803 . 804) (nil block-token delimiter-end 803 . 804) (nil tag-attr t 803 . 804) (nil tag-name "img" 803 . 804) (nil tag-type void 803 . 804) (nil font-lock-face web-mode-block-delimiter-face 803 . 804) (nil block-side t 802 . 803) (nil block-token delimiter-end 802 . 803) (nil tag-attr t 802 . 803) (nil tag-name "img" 802 . 803) (nil tag-type void 802 . 803) (nil font-lock-face web-mode-block-delimiter-face 802 . 803) (nil block-side t 801 . 802) (nil tag-attr t 801 . 802) (nil tag-name "img" 801 . 802) (nil tag-type void 801 . 802) (nil block-side t 789 . 801) (nil tag-attr t 789 . 801) (nil tag-name "img" 789 . 801) (nil tag-type void 789 . 801) (nil face web-mode-variable-name-face 789 . 801) (nil block-side t 788 . 789) (nil tag-attr t 788 . 789) (nil tag-name "img" 788 . 789) (nil tag-type void 788 . 789) (nil block-side t 784 . 788) (nil tag-attr t 784 . 788) (nil tag-name "img" 784 . 788) (nil tag-type void 784 . 788) (nil face web-mode-variable-name-face 784 . 788) (nil block-side t 783 . 784) (nil tag-attr t 783 . 784) (nil tag-name "img" 783 . 784) (nil tag-type void 783 . 784) (nil block-side t 782 . 783) (nil block-token delimiter-beg 782 . 783) (nil tag-attr t 782 . 783) (nil tag-name "img" 782 . 783) (nil tag-type void 782 . 783) (nil font-lock-face web-mode-block-delimiter-face 782 . 783) (nil block-beg 0 781 . 782) (nil block-controls 0 781 . 782) (nil block-side t 781 . 782) (nil block-token delimiter-beg 781 . 782) (nil tag-attr t 781 . 782) (nil tag-name "img" 781 . 782) (nil tag-type void 781 . 782) (nil font-lock-face web-mode-block-delimiter-face 781 . 782) (nil tag-attr t 780 . 781) (nil tag-name "img" 780 . 781) (nil tag-type void 780 . 781) (nil font-lock-face web-mode-html-attr-value-face 780 . 781) (nil tag-attr t 779 . 780) (nil tag-name "img" 779 . 780) (nil tag-type void 779 . 780) (nil font-lock-face web-mode-html-attr-equal-face 779 . 780) (nil tag-attr t 777 . 779) (nil tag-name "img" 777 . 779) (nil tag-type void 777 . 779) (nil font-lock-face web-mode-html-attr-name-face 777 . 779) (nil tag-attr-beg 0 776 . 777) (nil tag-attr t 776 . 777) (nil tag-name "img" 776 . 777) (nil tag-type void 776 . 777) (nil font-lock-face web-mode-html-attr-name-face 776 . 777) (nil tag-name "img" 775 . 776) (nil tag-type void 775 . 776) (nil tag-attr t 774 . 775) (nil tag-attr-end 4 774 . 775) (nil tag-name "img" 774 . 775) (nil tag-type void 774 . 775) (nil font-lock-face web-mode-html-attr-value-face 774 . 775) (nil tag-attr t 764 . 774) (nil tag-name "img" 764 . 774) (nil tag-type void 764 . 774) (nil font-lock-face web-mode-html-attr-value-face 764 . 774) (nil tag-attr t 763 . 764) (nil tag-name "img" 763 . 764) (nil tag-type void 763 . 764) (nil font-lock-face web-mode-html-attr-equal-face 763 . 764) (nil tag-attr t 760 . 763) (nil tag-name "img" 760 . 763) (nil tag-type void 760 . 763) (nil font-lock-face web-mode-html-attr-name-face 760 . 763) (nil tag-attr-beg 0 759 . 760) (nil tag-attr t 759 . 760) (nil tag-name "img" 759 . 760) (nil tag-type void 759 . 760) (nil font-lock-face web-mode-html-attr-name-face 759 . 760) (nil tag-name "img" 758 . 759) (nil tag-type void 758 . 759) (nil tag-attr t 757 . 758) (nil tag-attr-end 3 757 . 758) (nil tag-name "img" 757 . 758) (nil tag-type void 757 . 758) (nil font-lock-face web-mode-html-attr-value-face 757 . 758) (nil tag-attr t 752 . 757) (nil tag-name "img" 752 . 757) (nil tag-type void 752 . 757) (nil font-lock-face web-mode-html-attr-value-face 752 . 757) (nil tag-attr t 751 . 752) (nil tag-name "img" 751 . 752) (nil tag-type void 751 . 752) (nil font-lock-face web-mode-html-attr-equal-face 751 . 752) (nil tag-attr t 749 . 751) (nil tag-name "img" 749 . 751) (nil tag-type void 749 . 751) (nil font-lock-face web-mode-html-attr-name-face 749 . 751) (nil tag-attr-beg 0 748 . 749) (nil tag-attr t 748 . 749) (nil tag-name "img" 748 . 749) (nil tag-type void 748 . 749) (nil font-lock-face web-mode-html-attr-name-face 748 . 749) (nil tag-name "img" 747 . 748) (nil tag-type void 747 . 748) (nil tag-name "img" 744 . 747) (nil tag-type void 744 . 747) (nil font-lock-face web-mode-html-tag-face 744 . 747) (nil tag-name "img" 743 . 744) (nil tag-type void 743 . 744) (nil tag-beg 25 743 . 744) (nil font-lock-face web-mode-html-tag-bracket-face 743 . 744) (743 . 807)) nil (25354 23179 217497 860000) 0 nil])
([nil nil ((#(" <img rel=\"icon\" type=\"image/png\" src=\"{{ site.wattpad_icon }}\"/>" 1 2 (tag-name "img" tag-type void tag-beg 25 font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-face) 5 6 (tag-name "img" tag-type void) 6 7 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 7 9 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 10 15 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 15 16 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 16 17 (tag-name "img" tag-type void) 17 18 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 18 21 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 22 32 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-attr-end 4 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 33 34 (tag-name "img" tag-type void) 34 35 (tag-attr-beg 0 tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 35 37 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-name-face) 37 38 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-equal-face) 38 39 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 39 40 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t tag-attr t tag-name "img" tag-type void) 42 46 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 46 47 (block-side t tag-attr t tag-name "img" tag-type void) 47 59 (block-side t tag-attr t tag-name "img" tag-type void face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "img" tag-type void) 60 61 (block-side t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 61 62 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "img" tag-type void font-lock-face web-mode-block-delimiter-face) 62 63 (tag-attr t tag-attr-end 3 tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face) 63 64 (tag-name "img" tag-type void font-lock-face web-mode-html-tag-bracket-face) 64 65 (rear-nonsticky t tag-name "img" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 742) (undo-tree-id652 . -65) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -65) (undo-tree-id656 . -65) (undo-tree-id657 . -65) (undo-tree-id658 . -1) (undo-tree-id659 . -65) (t 25354 23179 242251 159000)) nil (25354 23245 57692 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 791 . 792) (nil rear-nonsticky t 791 . 792) (nil tag-name "img" 791 . 792) (nil tag-type void 791 . 792) (nil tag-end t 791 . 792) (nil font-lock-face web-mode-html-tag-bracket-face 791 . 792) (nil tag-name "img" 790 . 791) (nil tag-type void 790 . 791) (nil font-lock-face web-mode-html-tag-bracket-face 790 . 791) (nil tag-attr t 789 . 790) (nil tag-attr-end 3 789 . 790) (nil tag-name "img" 789 . 790) (nil tag-type void 789 . 790) (nil font-lock-face web-mode-html-attr-value-face 789 . 790) (nil block-side t 788 . 789) (nil block-end t 788 . 789) (nil block-token delimiter-end 788 . 789) (nil tag-attr t 788 . 789) (nil tag-name "img" 788 . 789) (nil tag-type void 788 . 789) (nil font-lock-face web-mode-block-delimiter-face 788 . 789) (nil block-side t 787 . 788) (nil block-token delimiter-end 787 . 788) (nil tag-attr t 787 . 788) (nil tag-name "img" 787 . 788) (nil tag-type void 787 . 788) (nil font-lock-face web-mode-block-delimiter-face 787 . 788) (nil block-side t 786 . 787) (nil tag-attr t 786 . 787) (nil tag-name "img" 786 . 787) (nil tag-type void 786 . 787) (nil block-side t 774 . 786) (nil tag-attr t 774 . 786) (nil tag-name "img" 774 . 786) (nil tag-type void 774 . 786) (nil face web-mode-variable-name-face 774 . 786) (nil block-side t 773 . 774) (nil tag-attr t 773 . 774) (nil tag-name "img" 773 . 774) (nil tag-type void 773 . 774) (nil block-side t 769 . 773) (nil tag-attr t 769 . 773) (nil tag-name "img" 769 . 773) (nil tag-type void 769 . 773) (nil face web-mode-variable-name-face 769 . 773) (nil block-side t 768 . 769) (nil tag-attr t 768 . 769) (nil tag-name "img" 768 . 769) (nil tag-type void 768 . 769) (nil block-side t 767 . 768) (nil block-token delimiter-beg 767 . 768) (nil tag-attr t 767 . 768) (nil tag-name "img" 767 . 768) (nil tag-type void 767 . 768) (nil font-lock-face web-mode-block-delimiter-face 767 . 768) (nil block-beg 0 766 . 767) (nil block-controls 0 766 . 767) (nil block-side t 766 . 767) (nil block-token delimiter-beg 766 . 767) (nil tag-attr t 766 . 767) (nil tag-name "img" 766 . 767) (nil tag-type void 766 . 767) (nil font-lock-face web-mode-block-delimiter-face 766 . 767) (nil tag-attr t 765 . 766) (nil tag-name "img" 765 . 766) (nil tag-type void 765 . 766) (nil font-lock-face web-mode-html-attr-value-face 765 . 766) (nil tag-attr t 764 . 765) (nil tag-name "img" 764 . 765) (nil tag-type void 764 . 765) (nil font-lock-face web-mode-html-attr-equal-face 764 . 765) (nil tag-attr t 762 . 764) (nil tag-name "img" 762 . 764) (nil tag-type void 762 . 764) (nil font-lock-face web-mode-html-attr-name-face 762 . 764) (nil tag-attr-beg 0 761 . 762) (nil tag-attr t 761 . 762) (nil tag-name "img" 761 . 762) (nil tag-type void 761 . 762) (nil font-lock-face web-mode-html-attr-name-face 761 . 762) (nil tag-name "img" 760 . 761) (nil tag-type void 760 . 761) (nil tag-attr t 759 . 760) (nil tag-attr-end 4 759 . 760) (nil tag-name "img" 759 . 760) (nil tag-type void 759 . 760) (nil font-lock-face web-mode-html-attr-value-face 759 . 760) (nil tag-attr t 749 . 759) (nil tag-name "img" 749 . 759) (nil tag-type void 749 . 759) (nil font-lock-face web-mode-html-attr-value-face 749 . 759) (nil tag-attr t 748 . 749) (nil tag-name "img" 748 . 749) (nil tag-type void 748 . 749) (nil font-lock-face web-mode-html-attr-equal-face 748 . 749) (nil tag-attr t 745 . 748) (nil tag-name "img" 745 . 748) (nil tag-type void 745 . 748) (nil font-lock-face web-mode-html-attr-name-face 745 . 748) (nil tag-attr-beg 0 744 . 745) (nil tag-attr t 744 . 745) (nil tag-name "img" 744 . 745) (nil tag-type void 744 . 745) (nil font-lock-face web-mode-html-attr-name-face 744 . 745) (nil tag-name "img" 743 . 744) (nil tag-type void 743 . 744) (nil tag-attr t 742 . 743) (nil tag-attr-end 3 742 . 743) (nil tag-name "img" 742 . 743) (nil tag-type void 742 . 743) (nil font-lock-face web-mode-html-attr-value-face 742 . 743) (nil tag-attr t 737 . 742) (nil tag-name "img" 737 . 742) (nil tag-type void 737 . 742) (nil font-lock-face web-mode-html-attr-value-face 737 . 742) (nil tag-attr t 736 . 737) (nil tag-name "img" 736 . 737) (nil tag-type void 736 . 737) (nil font-lock-face web-mode-html-attr-equal-face 736 . 737) (nil tag-attr t 734 . 736) (nil tag-name "img" 734 . 736) (nil tag-type void 734 . 736) (nil font-lock-face web-mode-html-attr-name-face 734 . 736) (nil tag-attr-beg 0 733 . 734) (nil tag-attr t 733 . 734) (nil tag-name "img" 733 . 734) (nil tag-type void 733 . 734) (nil font-lock-face web-mode-html-attr-name-face 733 . 734) (nil tag-name "img" 732 . 733) (nil tag-type void 732 . 733) (nil tag-name "img" 729 . 732) (nil tag-type void 729 . 732) (nil font-lock-face web-mode-html-tag-face 729 . 732) (nil tag-name "img" 728 . 729) (nil tag-type void 728 . 729) (nil tag-beg 25 728 . 729) (nil font-lock-face web-mode-html-tag-bracket-face 728 . 729) (727 . 792)) nil (25354 23245 57663 496000) 0 nil])
([nil nil ((792 . 793)) nil (25354 23245 57619 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 916 . 917) (nil tag-name "img" 916 . 917) (nil tag-type void 916 . 917) (nil tag-end t 916 . 917) (nil font-lock-face web-mode-html-tag-bracket-face 916 . 917) (nil tag-name "img" 915 . 916) (nil tag-type void 915 . 916) (nil font-lock-face web-mode-html-tag-bracket-face 915 . 916) (nil tag-attr t 914 . 915) (nil tag-attr-end 3 914 . 915) (nil tag-name "img" 914 . 915) (nil tag-type void 914 . 915) (nil font-lock-face web-mode-html-attr-value-face 914 . 915) (nil block-side t 913 . 914) (nil block-end t 913 . 914) (nil block-token delimiter-end 913 . 914) (nil tag-attr t 913 . 914) (nil tag-name "img" 913 . 914) (nil tag-type void 913 . 914) (nil font-lock-face web-mode-block-delimiter-face 913 . 914) (nil block-side t 912 . 913) (nil block-token delimiter-end 912 . 913) (nil tag-attr t 912 . 913) (nil tag-name "img" 912 . 913) (nil tag-type void 912 . 913) (nil font-lock-face web-mode-block-delimiter-face 912 . 913) (nil block-side t 911 . 912) (nil tag-attr t 911 . 912) (nil tag-name "img" 911 . 912) (nil tag-type void 911 . 912) (nil block-side t 900 . 911) (nil tag-attr t 900 . 911) (nil tag-name "img" 900 . 911) (nil tag-type void 900 . 911) (nil face web-mode-variable-name-face 900 . 911) (nil block-side t 899 . 900) (nil tag-attr t 899 . 900) (nil tag-name "img" 899 . 900) (nil tag-type void 899 . 900) (nil block-side t 895 . 899) (nil tag-attr t 895 . 899) (nil tag-name "img" 895 . 899) (nil tag-type void 895 . 899) (nil face web-mode-variable-name-face 895 . 899) (nil block-side t 894 . 895) (nil tag-attr t 894 . 895) (nil tag-name "img" 894 . 895) (nil tag-type void 894 . 895) (nil block-side t 893 . 894) (nil block-token delimiter-beg 893 . 894) (nil tag-attr t 893 . 894) (nil tag-name "img" 893 . 894) (nil tag-type void 893 . 894) (nil font-lock-face web-mode-block-delimiter-face 893 . 894) (nil block-beg 0 892 . 893) (nil block-controls 0 892 . 893) (nil block-side t 892 . 893) (nil block-token delimiter-beg 892 . 893) (nil tag-attr t 892 . 893) (nil tag-name "img" 892 . 893) (nil tag-type void 892 . 893) (nil font-lock-face web-mode-block-delimiter-face 892 . 893) (nil tag-attr t 891 . 892) (nil tag-name "img" 891 . 892) (nil tag-type void 891 . 892) (nil font-lock-face web-mode-html-attr-value-face 891 . 892) (nil tag-attr t 890 . 891) (nil tag-name "img" 890 . 891) (nil tag-type void 890 . 891) (nil font-lock-face web-mode-html-attr-equal-face 890 . 891) (nil tag-attr t 888 . 890) (nil tag-name "img" 888 . 890) (nil tag-type void 888 . 890) (nil font-lock-face web-mode-html-attr-name-face 888 . 890) (nil tag-attr-beg 0 887 . 888) (nil tag-attr t 887 . 888) (nil tag-name "img" 887 . 888) (nil tag-type void 887 . 888) (nil font-lock-face web-mode-html-attr-name-face 887 . 888) (nil tag-name "img" 886 . 887) (nil tag-type void 886 . 887) (nil tag-attr t 885 . 886) (nil tag-attr-end 4 885 . 886) (nil tag-name "img" 885 . 886) (nil tag-type void 885 . 886) (nil font-lock-face web-mode-html-attr-value-face 885 . 886) (nil tag-attr t 875 . 885) (nil tag-name "img" 875 . 885) (nil tag-type void 875 . 885) (nil font-lock-face web-mode-html-attr-value-face 875 . 885) (nil tag-attr t 874 . 875) (nil tag-name "img" 874 . 875) (nil tag-type void 874 . 875) (nil font-lock-face web-mode-html-attr-equal-face 874 . 875) (nil tag-attr t 871 . 874) (nil tag-name "img" 871 . 874) (nil tag-type void 871 . 874) (nil font-lock-face web-mode-html-attr-name-face 871 . 874) (nil tag-attr-beg 0 870 . 871) (nil tag-attr t 870 . 871) (nil tag-name "img" 870 . 871) (nil tag-type void 870 . 871) (nil font-lock-face web-mode-html-attr-name-face 870 . 871) (nil tag-name "img" 869 . 870) (nil tag-type void 869 . 870) (nil tag-attr t 868 . 869) (nil tag-attr-end 3 868 . 869) (nil tag-name "img" 868 . 869) (nil tag-type void 868 . 869) (nil font-lock-face web-mode-html-attr-value-face 868 . 869) (nil tag-attr t 863 . 868) (nil tag-name "img" 863 . 868) (nil tag-type void 863 . 868) (nil font-lock-face web-mode-html-attr-value-face 863 . 868) (nil tag-attr t 862 . 863) (nil tag-name "img" 862 . 863) (nil tag-type void 862 . 863) (nil font-lock-face web-mode-html-attr-equal-face 862 . 863) (nil tag-attr t 860 . 862) (nil tag-name "img" 860 . 862) (nil tag-type void 860 . 862) (nil font-lock-face web-mode-html-attr-name-face 860 . 862) (nil tag-attr-beg 0 859 . 860) (nil tag-attr t 859 . 860) (nil tag-name "img" 859 . 860) (nil tag-type void 859 . 860) (nil font-lock-face web-mode-html-attr-name-face 859 . 860) (nil tag-name "img" 858 . 859) (nil tag-type void 858 . 859) (nil tag-name "img" 855 . 858) (nil tag-type void 855 . 858) (nil font-lock-face web-mode-html-tag-face 855 . 858) (nil tag-name "img" 854 . 855) (nil tag-type void 854 . 855) (nil tag-beg 25 854 . 855) (nil font-lock-face web-mode-html-tag-bracket-face 854 . 855) (854 . 917) (t 25354 23245 78899 971000)) nil (25354 23261 587611 213000) 0 nil])
([nil nil ((917 . 918)) nil (25354 23261 587557 915000) 0 nil])
([nil nil (("Read on wattpad" . 793) (undo-tree-id675 . -15) (undo-tree-id676 . -15) (undo-tree-id677 . -15) (undo-tree-id678 . -15) (undo-tree-id679 . -15) (undo-tree-id680 . -15) (undo-tree-id681 . -15) (undo-tree-id682 . -15) (undo-tree-id683 . -15) (undo-tree-id684 . -15) (t 25354 23261 611064 891000)) nil (25354 23388 879611 674000) 0 nil])
([nil nil ((" " . -792) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 793) nil (25354 23388 879597 886000) 0 nil])
([nil nil ((727 . 742)) nil (25354 23388 879584 237000) 0 nil])
([nil nil (("Read on Inkitt" . 917) (undo-tree-id663 . -14) (undo-tree-id664 . -14)) nil (25354 23388 879582 383000) 0 nil])
([nil nil ((" " . -916) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) 917) nil (25354 23388 879577 377000) 0 nil])
([nil nil ((853 . 867)) nil (25354 23388 879561 515000) 0 nil])
([nil nil ((867 . 868)) nil (25354 23388 879554 622000) 0 nil])
([nil nil ((685 . 692) (t 25354 23388 900358 152000)) nil (25354 23485 99214 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 717 . 718) (nil block-side t 717 . 718) (nil block-end t 717 . 718) (nil block-token delimiter-end 717 . 718) (nil font-lock-face web-mode-block-delimiter-face 717 . 718) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 717 . 718) (nil block-side t 716 . 717) (nil block-token delimiter-end 716 . 717) (nil font-lock-face web-mode-block-delimiter-face 716 . 717) (nil block-side t 715 . 716) (nil block-side t 714 . 715) (nil face web-mode-variable-name-face 714 . 715) (nil block-side t 699 . 714) (nil face web-mode-variable-name-face 699 . 714) (nil block-side t 698 . 699) (nil face web-mode-variable-name-face 698 . 699) (nil block-side t 697 . 698) (nil block-side t 696 . 697) (nil face web-mode-block-control-face 696 . 697) (nil block-side t 695 . 696) (nil face web-mode-block-control-face 695 . 696) (nil block-side t 694 . 695) (nil block-side t 693 . 694) (nil block-token delimiter-beg 693 . 694) (nil font-lock-face web-mode-block-delimiter-face 693 . 694) (nil block-beg 0 692 . 693) (nil block-controls 0 692 . 693) (nil block-side t 692 . 693) (nil block-token delimiter-beg 692 . 693) (nil font-lock-face web-mode-block-delimiter-face 692 . 693) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 692 . 693) (692 . 718)) nil (25354 23485 99211 104000) 0 nil])
([nil nil ((#("page.previous.url" 0 17 (block-side t face web-mode-variable-name-face)) . 698) (undo-tree-id692 . -17) (undo-tree-id693 . -17) (undo-tree-id694 . -17) (undo-tree-id695 . -17)) nil (25354 23485 99201 453000) 0 nil])
([nil nil ((nil rear-nonsticky nil 709 . 710) (nil block-side t 698 . 710) (nil face web-mode-variable-name-face 698 . 710) (698 . 710)) nil (25354 23485 99195 390000) 0 nil])
([nil nil ((698 . 704)) nil (25354 23485 99193 404000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -703) (undo-tree-id691 . -1) 704) nil (25354 23485 99191 820000) 0 nil])
([nil nil ((847 . 855) (719 . 727) ("      " . 719) (844 . 845)) nil (25354 23485 99188 820000) 0 nil])
([nil nil ((nil rear-nonsticky nil 880 . 881) (nil rear-nonsticky t 880 . 881) (nil block-side t 880 . 881) (nil block-end t 880 . 881) (nil block-token delimiter-end 880 . 881) (nil font-lock-face web-mode-block-delimiter-face 880 . 881) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 880 . 881) (nil block-side t 879 . 880) (nil block-token delimiter-end 879 . 880) (nil font-lock-face web-mode-block-delimiter-face 879 . 880) (nil block-side t 878 . 879) (nil rear-nonsticky t 877 . 878) (nil block-side t 877 . 878) (nil face web-mode-variable-name-face 877 . 878) (nil block-side t 866 . 877) (nil face web-mode-variable-name-face 866 . 877) (nil block-side t 861 . 866) (nil face web-mode-variable-name-face 861 . 866) (nil block-side t 860 . 861) (nil block-side t 858 . 860) (nil face web-mode-block-control-face 858 . 860) (nil block-side t 857 . 858) (nil block-side t 856 . 857) (nil block-token delimiter-beg 856 . 857) (nil font-lock-face web-mode-block-delimiter-face 856 . 857) (nil block-beg 0 855 . 856) (nil block-controls 0 855 . 856) (nil block-side t 855 . 856) (nil block-token delimiter-beg 855 . 856) (nil font-lock-face web-mode-block-delimiter-face 855 . 856) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 855 . 856) (855 . 881)) nil (25354 23485 99184 862000) 0 nil])
([nil nil ((#("wattpad_link " 0 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t)) . 866) (undo-tree-id688 . -13) (undo-tree-id689 . -13) (undo-tree-id690 . -13)) nil (25354 23485 99175 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 876 . 877) (nil block-side t 866 . 877) (nil face web-mode-variable-name-face 866 . 877) (866 . 877)) nil (25354 23485 99170 652000) 0 nil])
([nil nil ((877 . 878)) nil (25354 23485 99168 833000) 0 nil])
([nil nil ((1009 . 1019) (881 . 891) ("      " . 881) (1004 . 1005)) nil (25354 23485 99167 392000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1029 . 1030) (nil block-side t 1029 . 1030) (nil block-end t 1029 . 1030) (nil block-token delimiter-end 1029 . 1030) (nil font-lock-face web-mode-block-delimiter-face 1029 . 1030) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1029 . 1030) (nil block-side t 1028 . 1029) (nil block-token delimiter-end 1028 . 1029) (nil font-lock-face web-mode-block-delimiter-face 1028 . 1029) (nil block-side t 1027 . 1028) (nil block-side t 1022 . 1027) (nil face web-mode-block-control-face 1022 . 1027) (nil block-side t 1021 . 1022) (nil block-side t 1020 . 1021) (nil block-token delimiter-beg 1020 . 1021) (nil font-lock-face web-mode-block-delimiter-face 1020 . 1021) (nil block-beg 0 1019 . 1020) (nil block-controls 0 1019 . 1020) (nil block-side t 1019 . 1020) (nil block-token delimiter-beg 1019 . 1020) (nil font-lock-face web-mode-block-delimiter-face 1019 . 1020) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1019 . 1020) (1019 . 1030)) nil (25354 23485 99163 977000) 0 nil])
([nil nil ((846 . 855)) nil (25354 23485 99157 166000) 0 nil])
([nil nil ((nil rear-nonsticky nil 865 . 866) (nil block-side t 865 . 866) (nil block-end t 865 . 866) (nil block-token delimiter-end 865 . 866) (nil font-lock-face web-mode-block-delimiter-face 865 . 866) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 865 . 866) (nil block-side t 864 . 865) (nil block-token delimiter-end 864 . 865) (nil font-lock-face web-mode-block-delimiter-face 864 . 865) (nil block-side t 863 . 864) (nil block-side t 858 . 863) (nil face web-mode-block-control-face 858 . 863) (nil block-side t 857 . 858) (nil block-side t 856 . 857) (nil block-token delimiter-beg 856 . 857) (nil font-lock-face web-mode-block-delimiter-face 856 . 857) (nil block-beg 0 855 . 856) (nil block-controls 0 855 . 856) (nil block-side t 855 . 856) (nil block-token delimiter-beg 855 . 856) (nil font-lock-face web-mode-block-delimiter-face 855 . 856) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 855 . 856) (855 . 866)) nil (25354 23485 99153 808000) 0 nil])
([nil nil (("    " . -1029) (undo-tree-id685 . -4) ("  " . -905) ("  " . -871) (undo-tree-id686 . -2) ("  " . -853) (undo-tree-id687 . -2) 398) nil (25354 23485 99142 371000) 0 nil])
([nil nil ((#("
  <div class=\"row\">" 3 4 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 18 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1084) (undo-tree-id699 . -20) (undo-tree-id700 . -20) (undo-tree-id701 . -1) (undo-tree-id702 . -20) (t 25354 23485 125359 440000)) nil (25354 23573 561234 309000) 0 nil])
([nil nil ((#("
    </div>" 5 6 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 6 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1748) (undo-tree-id696 . -11) (undo-tree-id697 . -1) (undo-tree-id698 . -11)) nil (25354 23573 561226 651000) 0 nil])
([nil nil (("  " . -1718) ("  " . -1691) ("  " . -1461) ("  " . -1432) ("  " . -1416) ("  " . -1396) ("  " . -1148) ("  " . -1115) ("  " . -1087) 186) nil (25354 23573 561205 204000) 0 nil])
([nil nil (("P" . -1396) (undo-tree-id705 . -1) ("o" . -1397) (undo-tree-id706 . -1) ("s" . -1398) (undo-tree-id707 . -1) ("t" . -1399) (undo-tree-id708 . -1) 1400 (t 25354 23573 586294 563000)) nil (25354 23605 683442 898000) 0 nil])
([nil nil ((1396 . 1400)) nil (25354 23605 683435 488000) 0 nil])
([nil nil (("b" . -1396) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 1397) nil (25354 23605 683433 798000) 0 nil])
([nil nil ((1396 . 1397)) nil (25354 23605 683421 898000) 0 nil])
([nil nil (("t" . 1691) ("s" . 1691) ("o" . 1691) ("P" . 1691)) nil (25354 23605 683415 390000) 0 nil])
([nil nil ((1691 . 1695)) nil (25354 23605 683399 923000) 0 nil])
([nil nil (("Book" . 1396) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (t 25354 23605 710637 154000)) nil (25354 26026 686620 664000) 0 nil])
([nil nil ((1396 . 1401)) nil (25354 26026 686616 313000) 0 nil])
([nil nil (("B" . -1692) (undo-tree-id710 . -1) ("o" . -1693) (undo-tree-id711 . -1) ("o" . -1694) (undo-tree-id712 . -1) ("k" . -1695) (undo-tree-id713 . -1) 1696) nil (25354 26026 686613 411000) 0 nil])
([nil nil ((1692 . 1698)) nil (25354 26026 686602 985000) 0 nil])
([nil nil ((" " . -1697) (undo-tree-id709 . -1) 1698) nil (25354 26026 686597 602000) 0 nil])
([nil nil ((654 . 660) ("      " . 653) (undo-tree-id13 . -6) (652 . 660) (t 25354 26026 713307 523000)) nil (25354 31263 329937 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 685 . 686) (nil block-side t 685 . 686) (nil block-end t 685 . 686) (nil block-token delimiter-end 685 . 686) (nil font-lock-face web-mode-block-delimiter-face 685 . 686) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 685 . 686) (nil block-side t 684 . 685) (nil block-token delimiter-end 684 . 685) (nil font-lock-face web-mode-block-delimiter-face 684 . 685) (nil block-side t 683 . 684) (nil block-side t 666 . 683) (nil face web-mode-variable-name-face 666 . 683) (nil block-side t 665 . 666) (nil block-side t 663 . 665) (nil face web-mode-block-control-face 663 . 665) (nil block-side t 662 . 663) (nil block-side t 661 . 662) (nil block-token delimiter-beg 661 . 662) (nil font-lock-face web-mode-block-delimiter-face 661 . 662) (nil block-beg 0 660 . 661) (nil block-controls 0 660 . 661) (nil block-side t 660 . 661) (nil block-token delimiter-beg 660 . 661) (nil font-lock-face web-mode-block-delimiter-face 660 . 661) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 660 . 661) (660 . 686)) nil (25354 31263 329932 539000) 0 nil])
([nil nil ((688 . 696) ("        " . 687) (undo-tree-id12 . -8) (686 . 696)) nil (25354 31263 329924 223000) 0 nil])
([nil nil ((nil rear-nonsticky nil 706 . 707) (nil block-side t 706 . 707) (nil block-end t 706 . 707) (nil block-token delimiter-end 706 . 707) (nil font-lock-face web-mode-block-delimiter-face 706 . 707) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 706 . 707) (nil block-side t 705 . 706) (nil block-token delimiter-end 705 . 706) (nil font-lock-face web-mode-block-delimiter-face 705 . 706) (nil block-side t 704 . 705) (nil block-side t 699 . 704) (nil face web-mode-block-control-face 699 . 704) (nil block-side t 698 . 699) (nil block-side t 697 . 698) (nil block-token delimiter-beg 697 . 698) (nil font-lock-face web-mode-block-delimiter-face 697 . 698) (nil block-beg 0 696 . 697) (nil block-controls 0 696 . 697) (nil block-side t 696 . 697) (nil block-token delimiter-beg 696 . 697) (nil font-lock-face web-mode-block-delimiter-face 696 . 697) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 696 . 697) (696 . 707)) nil (25354 31263 329919 875000) 0 nil])
([nil nil ((#("wattpad_link" 0 12 (face web-mode-variable-name-face block-side t)) . 671) (undo-tree-id8 . -12) (undo-tree-id9 . -12) (undo-tree-id10 . -12) (undo-tree-id11 . -12)) nil (25354 31263 329912 112000) 0 nil])
([nil nil ((nil rear-nonsticky nil 681 . 682) (nil block-side t 671 . 682) (nil face web-mode-variable-name-face 671 . 682) (671 . 682)) nil (25354 31263 329905 737000) 0 nil])
([nil nil (("  " . -693) (undo-tree-id6 . -2) (undo-tree-id7 . -2) 706) nil (25354 31263 329903 134000) 0 nil])
([nil nil ((686 . 694)) nil (25354 31263 329898 858000) 0 nil])
([nil nil ((nil rear-nonsticky nil 912 . 913) (nil tag-name "blockquote" 912 . 913) (nil tag-type end 912 . 913) (nil tag-end t 912 . 913) (nil font-lock-face web-mode-html-tag-bracket-face 912 . 913) (nil tag-name "blockquote" 902 . 912) (nil tag-type end 902 . 912) (nil font-lock-face web-mode-html-tag-face 902 . 912) (nil tag-name "blockquote" 901 . 902) (nil tag-type end 901 . 902) (nil font-lock-face web-mode-html-tag-bracket-face 901 . 902) (nil tag-name "blockquote" 900 . 901) (nil tag-type end 900 . 901) (nil tag-beg 20 900 . 901) (nil font-lock-face web-mode-html-tag-bracket-face 900 . 901) (nil tag-name "br" 860 . 861) (nil tag-type void 860 . 861) (nil tag-end t 860 . 861) (nil font-lock-face web-mode-html-tag-bracket-face 860 . 861) (nil tag-name "br" 859 . 860) (nil tag-type void 859 . 860) (nil font-lock-face web-mode-html-tag-bracket-face 859 . 860) (nil tag-name "br" 857 . 859) (nil tag-type void 857 . 859) (nil font-lock-face web-mode-html-tag-face 857 . 859) (nil tag-name "br" 856 . 857) (nil tag-type void 856 . 857) (nil tag-beg 24 856 . 857) (nil font-lock-face web-mode-html-tag-bracket-face 856 . 857) (nil tag-name "br" 808 . 809) (nil tag-type void 808 . 809) (nil tag-end t 808 . 809) (nil font-lock-face web-mode-html-tag-bracket-face 808 . 809) (nil tag-name "br" 807 . 808) (nil tag-type void 807 . 808) (nil font-lock-face web-mode-html-tag-bracket-face 807 . 808) (nil tag-name "br" 805 . 807) (nil tag-type void 805 . 807) (nil font-lock-face web-mode-html-tag-face 805 . 807) (nil tag-name "br" 804 . 805) (nil tag-type void 804 . 805) (nil tag-beg 24 804 . 805) (nil font-lock-face web-mode-html-tag-bracket-face 804 . 805) (nil tag-name "blockquote" 751 . 752) (nil tag-type start 751 . 752) (nil tag-end t 751 . 752) (nil font-lock-face web-mode-html-tag-bracket-face 751 . 752) (nil tag-attr t 750 . 751) (nil tag-attr-end 5 750 . 751) (nil tag-name "blockquote" 750 . 751) (nil tag-type start 750 . 751) (nil font-lock-face web-mode-html-attr-value-face 750 . 751) (nil tag-attr t 739 . 750) (nil tag-name "blockquote" 739 . 750) (nil tag-type start 739 . 750) (nil font-lock-face web-mode-html-attr-value-face 739 . 750) (nil tag-attr t 738 . 739) (nil tag-name "blockquote" 738 . 739) (nil tag-type start 738 . 739) (nil font-lock-face web-mode-html-attr-equal-face 738 . 739) (nil tag-attr t 734 . 738) (nil tag-name "blockquote" 734 . 738) (nil tag-type start 734 . 738) (nil font-lock-face web-mode-html-attr-name-face 734 . 738) (nil tag-attr-beg 0 733 . 734) (nil tag-attr t 733 . 734) (nil tag-name "blockquote" 733 . 734) (nil tag-type start 733 . 734) (nil font-lock-face web-mode-html-attr-name-face 733 . 734) (nil tag-name "blockquote" 732 . 733) (nil tag-type start 732 . 733) (nil tag-attr t 731 . 732) (nil tag-attr-end 5 731 . 732) (nil tag-name "blockquote" 731 . 732) (nil tag-type start 731 . 732) (nil font-lock-face web-mode-html-attr-value-face 731 . 732) (nil tag-attr t 712 . 731) (nil tag-name "blockquote" 712 . 731) (nil tag-type start 712 . 731) (nil font-lock-face web-mode-html-attr-value-face 712 . 731) (nil tag-attr t 711 . 712) (nil tag-name "blockquote" 711 . 712) (nil tag-type start 711 . 712) (nil font-lock-face web-mode-html-attr-equal-face 711 . 712) (nil tag-attr t 707 . 711) (nil tag-name "blockquote" 707 . 711) (nil tag-type start 707 . 711) (nil font-lock-face web-mode-html-attr-name-face 707 . 711) (nil tag-attr-beg 0 706 . 707) (nil tag-attr t 706 . 707) (nil tag-name "blockquote" 706 . 707) (nil tag-type start 706 . 707) (nil font-lock-face web-mode-html-attr-name-face 706 . 707) (nil tag-name "blockquote" 705 . 706) (nil tag-type start 705 . 706) (nil tag-name "blockquote" 695 . 705) (nil tag-type start 695 . 705) (nil font-lock-face web-mode-html-tag-face 695 . 705) (nil tag-name "blockquote" 694 . 695) (nil tag-type start 694 . 695) (nil tag-beg 17 694 . 695) (nil font-lock-face web-mode-html-tag-bracket-face 694 . 695) (694 . 913)) nil (25354 31263 329890 674000) 0 nil])
([nil nil ((#("style=\"text-align:center;\" " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "blockquote" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "blockquote" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "blockquote" tag-attr t) 6 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "blockquote" tag-attr t) 25 26 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "blockquote" tag-attr-end 5 tag-attr t) 26 27 (tag-type start tag-name "blockquote")) . 706) (undo-tree-id4 . -27) (undo-tree-id5 . -27)) nil (25354 31263 329859 433000) 0 nil])
([nil nil ((#("Come one, come all, look at the yester jungle a ball<br/>
  It aint too impressive or overly progressive<br/>
  But its better than no jungle at all" 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 53 55 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br") 104 105 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 105 107 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 107 108 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 108 109 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br")) . 725) (undo-tree-id1 . -148) (undo-tree-id2 . -58) (undo-tree-id3 . -148)) nil (25354 31263 329854 807000) 0 nil])
([nil nil ((726 . 728) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -726) (726 . 727) (725 . 727) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -725) (725 . 726)) nil (25354 31263 329847 920000) 0 nil])
([nil nil ((nil rear-nonsticky nil 742 . 743) (nil rear-nonsticky t 742 . 743) (nil block-side t 742 . 743) (nil face web-mode-variable-name-face 742 . 743) (nil block-side t 732 . 742) (nil face web-mode-variable-name-face 732 . 742) (nil block-side t 731 . 732) (nil block-side t 727 . 731) (nil face web-mode-variable-name-face 727 . 731) (727 . 743)) nil (25354 31263 329844 249000) 0 nil])
([nil nil ((743 . 754)) nil (25354 31263 329839 351000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -753) (undo-tree-id0 . -1) 754) nil (25354 31263 329834 73000) 0 nil])
([nil nil ((#("#" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -870) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 871 (t 25354 31263 355206 561000)) nil (25354 36924 436263 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 892 . 893) (nil block-side t 892 . 893) (nil block-end t 892 . 893) (nil block-token delimiter-end 892 . 893) (nil tag-attr t 892 . 893) (nil tag-name "a" 892 . 893) (nil tag-type start 892 . 893) (nil font-lock-face web-mode-block-delimiter-face 892 . 893) (nil block-side t 891 . 892) (nil block-token delimiter-end 891 . 892) (nil tag-attr t 891 . 892) (nil tag-name "a" 891 . 892) (nil tag-type start 891 . 892) (nil font-lock-face web-mode-block-delimiter-face 891 . 892) (nil block-side t 890 . 891) (nil tag-attr t 890 . 891) (nil tag-name "a" 890 . 891) (nil tag-type start 890 . 891) (nil block-side t 878 . 890) (nil tag-attr t 878 . 890) (nil tag-name "a" 878 . 890) (nil tag-type start 878 . 890) (nil face web-mode-variable-name-face 878 . 890) (nil block-side t 877 . 878) (nil tag-attr t 877 . 878) (nil tag-name "a" 877 . 878) (nil tag-type start 877 . 878) (nil block-side t 873 . 877) (nil tag-attr t 873 . 877) (nil tag-name "a" 873 . 877) (nil tag-type start 873 . 877) (nil face web-mode-variable-name-face 873 . 877) (nil block-side t 872 . 873) (nil tag-attr t 872 . 873) (nil tag-name "a" 872 . 873) (nil tag-type start 872 . 873) (nil block-side t 871 . 872) (nil block-token delimiter-beg 871 . 872) (nil tag-attr t 871 . 872) (nil tag-name "a" 871 . 872) (nil tag-type start 871 . 872) (nil font-lock-face web-mode-block-delimiter-face 871 . 872) (nil block-beg 0 870 . 871) (nil block-controls 0 870 . 871) (nil block-side t 870 . 871) (nil block-token delimiter-beg 870 . 871) (nil tag-attr t 870 . 871) (nil tag-name "a" 870 . 871) (nil tag-type start 870 . 871) (nil font-lock-face web-mode-block-delimiter-face 870 . 871) (870 . 893)) nil (25354 36924 436254 603000) 0 nil])
([nil nil ((#("site.wattpad_icon" 0 4 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 4 5 (block-side t tag-attr t tag-name "a" tag-type start) 5 17 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . 873) (undo-tree-id9 . -17) (undo-tree-id10 . -17) (undo-tree-id11 . -17)) nil (25354 36924 436239 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 889 . 890) (nil block-side t 878 . 890) (nil tag-attr t 878 . 890) (nil tag-name "a" 878 . 890) (nil tag-type start 878 . 890) (nil face web-mode-variable-name-face 878 . 890) (nil block-side t 877 . 878) (nil tag-attr t 877 . 878) (nil tag-name "a" 877 . 878) (nil tag-type start 877 . 878) (nil block-side t 873 . 877) (nil tag-attr t 873 . 877) (nil tag-name "a" 873 . 877) (nil tag-type start 873 . 877) (nil face web-mode-variable-name-face 873 . 877) (873 . 890)) nil (25354 36924 436234 442000) 0 nil])
([nil nil ((#("#" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1070) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 1071) nil (25354 36924 436228 804000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1092 . 1093) (nil rear-nonsticky t 1092 . 1093) (nil block-side t 1092 . 1093) (nil block-end t 1092 . 1093) (nil block-token delimiter-end 1092 . 1093) (nil tag-attr t 1092 . 1093) (nil tag-name "a" 1092 . 1093) (nil tag-type start 1092 . 1093) (nil font-lock-face web-mode-block-delimiter-face 1092 . 1093) (nil block-side t 1091 . 1092) (nil block-token delimiter-end 1091 . 1092) (nil tag-attr t 1091 . 1092) (nil tag-name "a" 1091 . 1092) (nil tag-type start 1091 . 1092) (nil font-lock-face web-mode-block-delimiter-face 1091 . 1092) (nil block-side t 1090 . 1091) (nil tag-attr t 1090 . 1091) (nil tag-name "a" 1090 . 1091) (nil tag-type start 1090 . 1091) (nil rear-nonsticky t 1089 . 1090) (nil block-side t 1089 . 1090) (nil tag-attr t 1089 . 1090) (nil tag-name "a" 1089 . 1090) (nil tag-type start 1089 . 1090) (nil face web-mode-variable-name-face 1089 . 1090) (nil block-side t 1078 . 1089) (nil tag-attr t 1078 . 1089) (nil tag-name "a" 1078 . 1089) (nil tag-type start 1078 . 1089) (nil face web-mode-variable-name-face 1078 . 1089) (nil block-side t 1077 . 1078) (nil tag-attr t 1077 . 1078) (nil tag-name "a" 1077 . 1078) (nil tag-type start 1077 . 1078) (nil block-side t 1073 . 1077) (nil tag-attr t 1073 . 1077) (nil tag-name "a" 1073 . 1077) (nil tag-type start 1073 . 1077) (nil face web-mode-variable-name-face 1073 . 1077) (nil block-side t 1072 . 1073) (nil tag-attr t 1072 . 1073) (nil tag-name "a" 1072 . 1073) (nil tag-type start 1072 . 1073) (nil block-side t 1071 . 1072) (nil block-token delimiter-beg 1071 . 1072) (nil tag-attr t 1071 . 1072) (nil tag-name "a" 1071 . 1072) (nil tag-type start 1071 . 1072) (nil font-lock-face web-mode-block-delimiter-face 1071 . 1072) (nil block-beg 0 1070 . 1071) (nil block-controls 0 1070 . 1071) (nil block-side t 1070 . 1071) (nil block-token delimiter-beg 1070 . 1071) (nil tag-attr t 1070 . 1071) (nil tag-name "a" 1070 . 1071) (nil tag-type start 1070 . 1071) (nil font-lock-face web-mode-block-delimiter-face 1070 . 1071) (1070 . 1093)) nil (25354 36924 436220 740000) 0 nil])
([nil nil ((#("w" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1078) (undo-tree-id0 . -1) (#("a" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1079) (undo-tree-id1 . -1) (#("t" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1080) (undo-tree-id2 . -1) (#("t" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1081) (undo-tree-id3 . -1) (#("p" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1082) (undo-tree-id4 . -1) (#("a" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1083) (undo-tree-id5 . -1) (#("d" 0 1 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face)) . -1084) (undo-tree-id6 . -1) 1085) nil (25354 36924 436202 4000) 0 nil])
([nil current ((1078 . 1084)) nil (25354 36924 436147 475000) 0 nil])
nil
