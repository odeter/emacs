(undo-tree-save-format-version . 1)
"65c6c02658b17e33bc60b9c8fc8f85d34a820f3d"
[nil nil nil nil (25671 38426 836129 911000) 0 nil]
([nil nil ((5245 . 5258) (t 25642 53455 517522 858000)) nil (25671 38426 836128 147000) 0 nil])
([nil nil ((5258 . 5267)) nil (25671 38426 836126 986000) 0 nil])
([nil nil ((5263 . 5277) (5264 . 5276) (#("              " 0 14 (face whitespace-trailing)) . 5263) (5263 . 5277) (5263 . 5264) ("            " . 5263) (5262 . 5275)) nil (25671 38426 836125 589000) 0 nil])
([nil nil ((5262 . 5277)) nil (25671 38426 836123 466000) 0 nil])
([nil nil ((5277 . 5286)) nil (25671 38426 836122 557000) 0 nil])
([nil nil ((5282 . 5298) (5283 . 5297) (#("                " 0 16 (face whitespace-trailing)) . 5282) (5282 . 5298) (5282 . 5283) ("              " . 5282) (5281 . 5296)) nil (25671 38426 836120 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5460 . 5461) (nil tag-name "v-btn" 5460 . 5461) (nil tag-type end 5460 . 5461) (nil tag-end t 5460 . 5461) (nil font-lock-face web-mode-html-tag-bracket-face 5460 . 5461) (nil tag-name "v-btn" 5455 . 5460) (nil tag-type end 5455 . 5460) (nil font-lock-face web-mode-html-tag-custom-face 5455 . 5460) (nil tag-name "v-btn" 5454 . 5455) (nil tag-type end 5454 . 5455) (nil font-lock-face web-mode-html-tag-bracket-face 5454 . 5455) (nil tag-name "v-btn" 5453 . 5454) (nil tag-type end 5453 . 5454) (nil tag-beg 22 5453 . 5454) (nil font-lock-face web-mode-html-tag-bracket-face 5453 . 5454) (nil tag-name "v-icon" 5431 . 5432) (nil tag-type end 5431 . 5432) (nil tag-end t 5431 . 5432) (nil font-lock-face web-mode-html-tag-bracket-face 5431 . 5432) (nil tag-name "v-icon" 5425 . 5431) (nil tag-type end 5425 . 5431) (nil font-lock-face web-mode-html-tag-custom-face 5425 . 5431) (nil tag-name "v-icon" 5424 . 5425) (nil tag-type end 5424 . 5425) (nil font-lock-face web-mode-html-tag-bracket-face 5424 . 5425) (nil tag-name "v-icon" 5423 . 5424) (nil tag-type end 5423 . 5424) (nil tag-beg 22 5423 . 5424) (nil font-lock-face web-mode-html-tag-bracket-face 5423 . 5424) (nil tag-name "v-icon" 5405 . 5406) (nil tag-type start 5405 . 5406) (nil tag-end t 5405 . 5406) (nil font-lock-face web-mode-html-tag-bracket-face 5405 . 5406) (nil tag-attr t 5404 . 5405) (nil tag-attr-end 4 5404 . 5405) (nil tag-name "v-icon" 5404 . 5405) (nil tag-type start 5404 . 5405) (nil font-lock-face web-mode-html-attr-value-face 5404 . 5405) (nil tag-attr t 5399 . 5404) (nil tag-name "v-icon" 5399 . 5404) (nil tag-type start 5399 . 5404) (nil font-lock-face web-mode-html-attr-value-face 5399 . 5404) (nil tag-attr t 5398 . 5399) (nil tag-name "v-icon" 5398 . 5399) (nil tag-type start 5398 . 5399) (nil font-lock-face web-mode-html-attr-equal-face 5398 . 5399) (nil tag-attr t 5395 . 5398) (nil tag-name "v-icon" 5395 . 5398) (nil tag-type start 5395 . 5398) (nil font-lock-face web-mode-html-attr-name-face 5395 . 5398) (nil tag-attr-beg 0 5394 . 5395) (nil tag-attr t 5394 . 5395) (nil tag-name "v-icon" 5394 . 5395) (nil tag-type start 5394 . 5395) (nil font-lock-face web-mode-html-attr-name-face 5394 . 5395) (nil tag-name "v-icon" 5393 . 5394) (nil tag-type start 5393 . 5394) (nil tag-name "v-icon" 5387 . 5393) (nil tag-type start 5387 . 5393) (nil font-lock-face web-mode-html-tag-custom-face 5387 . 5393) (nil tag-name "v-icon" 5386 . 5387) (nil tag-type start 5386 . 5387) (nil tag-beg 19 5386 . 5387) (nil font-lock-face web-mode-html-tag-bracket-face 5386 . 5387) (nil tag-name "v-btn" 5362 . 5363) (nil tag-type start 5362 . 5363) (nil tag-end t 5362 . 5363) (nil font-lock-face web-mode-html-tag-bracket-face 5362 . 5363) (nil block-side t 5361 . 5362) (nil block-end t 5361 . 5362) (nil block-token delimiter-end 5361 . 5362) (nil tag-attr t 5361 . 5362) (nil tag-attr-end 5 5361 . 5362) (nil tag-name "v-btn" 5361 . 5362) (nil tag-type start 5361 . 5362) (nil font-lock-face web-mode-block-delimiter-face 5361 . 5362) (nil block-side t 5359 . 5361) (nil tag-attr t 5359 . 5361) (nil tag-name "v-btn" 5359 . 5361) (nil tag-type start 5359 . 5361) (nil block-side t 5358 . 5359) (nil tag-attr t 5358 . 5359) (nil tag-name "v-btn" 5358 . 5359) (nil tag-type start 5358 . 5359) (nil face web-mode-variable-name-face 5358 . 5359) (nil block-side t 5357 . 5358) (nil tag-attr t 5357 . 5358) (nil tag-name "v-btn" 5357 . 5358) (nil tag-type start 5357 . 5358) (nil face web-mode-variable-name-face 5357 . 5358) (nil block-side t 5356 . 5357) (nil tag-attr t 5356 . 5357) (nil tag-name "v-btn" 5356 . 5357) (nil tag-type start 5356 . 5357) (nil face web-mode-variable-name-face 5356 . 5357) (nil block-side t 5355 . 5356) (nil tag-attr t 5355 . 5356) (nil tag-name "v-btn" 5355 . 5356) (nil tag-type start 5355 . 5356) (nil face web-mode-variable-name-face 5355 . 5356) (nil block-side t 5354 . 5355) (nil tag-attr t 5354 . 5355) (nil tag-name "v-btn" 5354 . 5355) (nil tag-type start 5354 . 5355) (nil face web-mode-variable-name-face 5354 . 5355) (nil block-side t 5353 . 5354) (nil tag-attr t 5353 . 5354) (nil tag-name "v-btn" 5353 . 5354) (nil tag-type start 5353 . 5354) (nil face web-mode-variable-name-face 5353 . 5354) (nil block-side t 5352 . 5353) (nil tag-attr t 5352 . 5353) (nil tag-name "v-btn" 5352 . 5353) (nil tag-type start 5352 . 5353) (nil face web-mode-variable-name-face 5352 . 5353) (nil block-side t 5351 . 5352) (nil tag-attr t 5351 . 5352) (nil tag-name "v-btn" 5351 . 5352) (nil tag-type start 5351 . 5352) (nil face web-mode-variable-name-face 5351 . 5352) (nil block-side t 5350 . 5351) (nil tag-attr t 5350 . 5351) (nil tag-name "v-btn" 5350 . 5351) (nil tag-type start 5350 . 5351) (nil block-side t 5349 . 5350) (nil tag-attr t 5349 . 5350) (nil tag-name "v-btn" 5349 . 5350) (nil tag-type start 5349 . 5350) (nil face web-mode-variable-name-face 5349 . 5350) (nil block-side t 5348 . 5349) (nil tag-attr t 5348 . 5349) (nil tag-name "v-btn" 5348 . 5349) (nil tag-type start 5348 . 5349) (nil face web-mode-variable-name-face 5348 . 5349) (nil block-side t 5347 . 5348) (nil tag-attr t 5347 . 5348) (nil tag-name "v-btn" 5347 . 5348) (nil tag-type start 5347 . 5348) (nil face web-mode-variable-name-face 5347 . 5348) (nil block-side t 5346 . 5347) (nil tag-attr t 5346 . 5347) (nil tag-name "v-btn" 5346 . 5347) (nil tag-type start 5346 . 5347) (nil face web-mode-variable-name-face 5346 . 5347) (nil block-side t 5345 . 5346) (nil tag-attr t 5345 . 5346) (nil tag-name "v-btn" 5345 . 5346) (nil tag-type start 5345 . 5346) (nil face web-mode-variable-name-face 5345 . 5346) (nil block-side t 5344 . 5345) (nil tag-attr t 5344 . 5345) (nil tag-name "v-btn" 5344 . 5345) (nil tag-type start 5344 . 5345) (nil face web-mode-variable-name-face 5344 . 5345) (nil block-side t 5343 . 5344) (nil tag-attr t 5343 . 5344) (nil tag-name "v-btn" 5343 . 5344) (nil tag-type start 5343 . 5344) (nil face web-mode-variable-name-face 5343 . 5344) (nil block-side t 5342 . 5343) (nil tag-attr t 5342 . 5343) (nil tag-name "v-btn" 5342 . 5343) (nil tag-type start 5342 . 5343) (nil block-side t 5341 . 5342) (nil tag-attr t 5341 . 5342) (nil tag-name "v-btn" 5341 . 5342) (nil tag-type start 5341 . 5342) (nil face web-mode-variable-name-face 5341 . 5342) (nil block-side t 5340 . 5341) (nil tag-attr t 5340 . 5341) (nil tag-name "v-btn" 5340 . 5341) (nil tag-type start 5340 . 5341) (nil face web-mode-variable-name-face 5340 . 5341) (nil block-side t 5339 . 5340) (nil tag-attr t 5339 . 5340) (nil tag-name "v-btn" 5339 . 5340) (nil tag-type start 5339 . 5340) (nil face web-mode-variable-name-face 5339 . 5340) (nil block-side t 5338 . 5339) (nil tag-attr t 5338 . 5339) (nil tag-name "v-btn" 5338 . 5339) (nil tag-type start 5338 . 5339) (nil face web-mode-variable-name-face 5338 . 5339) (nil block-side t 5336 . 5338) (nil tag-attr t 5336 . 5338) (nil tag-name "v-btn" 5336 . 5338) (nil tag-type start 5336 . 5338) (nil block-side t 5326 . 5336) (nil tag-attr t 5326 . 5336) (nil tag-name "v-btn" 5326 . 5336) (nil tag-type start 5326 . 5336) (nil face web-mode-function-call-face 5326 . 5336) (nil block-side t 5325 . 5326) (nil block-token delimiter-beg 5325 . 5326) (nil tag-attr t 5325 . 5326) (nil tag-name "v-btn" 5325 . 5326) (nil tag-type start 5325 . 5326) (nil font-lock-face web-mode-block-delimiter-face 5325 . 5326) (nil block-side t 5324 . 5325) (nil block-token delimiter-beg 5324 . 5325) (nil tag-attr t 5324 . 5325) (nil tag-name "v-btn" 5324 . 5325) (nil tag-type start 5324 . 5325) (nil font-lock-face web-mode-block-delimiter-face 5324 . 5325) (nil block-side t 5323 . 5324) (nil block-token delimiter-beg 5323 . 5324) (nil tag-attr t 5323 . 5324) (nil tag-name "v-btn" 5323 . 5324) (nil tag-type start 5323 . 5324) (nil font-lock-face web-mode-block-delimiter-face 5323 . 5324) (nil block-side t 5322 . 5323) (nil block-token delimiter-beg 5322 . 5323) (nil tag-attr t 5322 . 5323) (nil tag-name "v-btn" 5322 . 5323) (nil tag-type start 5322 . 5323) (nil font-lock-face web-mode-block-delimiter-face 5322 . 5323) (nil block-side t 5321 . 5322) (nil block-token delimiter-beg 5321 . 5322) (nil tag-attr t 5321 . 5322) (nil tag-name "v-btn" 5321 . 5322) (nil tag-type start 5321 . 5322) (nil font-lock-face web-mode-block-delimiter-face 5321 . 5322) (nil block-side t 5320 . 5321) (nil block-token delimiter-beg 5320 . 5321) (nil tag-attr t 5320 . 5321) (nil tag-name "v-btn" 5320 . 5321) (nil tag-type start 5320 . 5321) (nil font-lock-face web-mode-block-delimiter-face 5320 . 5321) (nil block-side t 5319 . 5320) (nil block-token delimiter-beg 5319 . 5320) (nil tag-attr-beg 0 5319 . 5320) (nil tag-attr t 5319 . 5320) (nil tag-name "v-btn" 5319 . 5320) (nil tag-type start 5319 . 5320) (nil font-lock-face web-mode-block-delimiter-face 5319 . 5320) (nil block-beg 0 5318 . 5319) (nil block-controls 0 5318 . 5319) (nil block-side t 5318 . 5319) (nil block-token delimiter-beg 5318 . 5319) (nil tag-name "v-btn" 5318 . 5319) (nil tag-type start 5318 . 5319) (nil font-lock-face web-mode-block-delimiter-face 5318 . 5319) (nil tag-name "v-btn" 5317 . 5318) (nil tag-type start 5317 . 5318) (nil tag-attr t 5316 . 5317) (nil tag-attr-end 0 5316 . 5317) (nil tag-name "v-btn" 5316 . 5317) (nil tag-type start 5316 . 5317) (nil font-lock-face web-mode-html-attr-name-face 5316 . 5317) (nil tag-attr t 5311 . 5316) (nil tag-name "v-btn" 5311 . 5316) (nil tag-type start 5311 . 5316) (nil font-lock-face web-mode-html-attr-name-face 5311 . 5316) (nil tag-attr-beg 0 5310 . 5311) (nil tag-attr t 5310 . 5311) (nil tag-name "v-btn" 5310 . 5311) (nil tag-type start 5310 . 5311) (nil font-lock-face web-mode-html-attr-name-face 5310 . 5311) (nil tag-name "v-btn" 5309 . 5310) (nil tag-type start 5309 . 5310) (nil tag-attr t 5308 . 5309) (nil tag-attr-end 0 5308 . 5309) (nil tag-name "v-btn" 5308 . 5309) (nil tag-type start 5308 . 5309) (nil font-lock-face web-mode-html-attr-name-face 5308 . 5309) (nil tag-attr t 5306 . 5308) (nil tag-name "v-btn" 5306 . 5308) (nil tag-type start 5306 . 5308) (nil font-lock-face web-mode-html-attr-name-face 5306 . 5308) (nil tag-attr-beg 0 5305 . 5306) (nil tag-attr t 5305 . 5306) (nil tag-name "v-btn" 5305 . 5306) (nil tag-type start 5305 . 5306) (nil font-lock-face web-mode-html-attr-name-face 5305 . 5306) (nil tag-name "v-btn" 5304 . 5305) (nil tag-type start 5304 . 5305) (nil tag-name "v-btn" 5299 . 5304) (nil tag-type start 5299 . 5304) (nil font-lock-face web-mode-html-tag-custom-face 5299 . 5304) (nil tag-name "v-btn" 5298 . 5299) (nil tag-type start 5298 . 5299) (nil tag-beg 19 5298 . 5299) (nil font-lock-face web-mode-html-tag-bracket-face 5298 . 5299) (5298 . 5461)) nil (25671 38426 836105 158000) 0 nil])
([nil nil ((5458 . 5474) ("    " . -5449) (5461 . 5462)) nil (25671 38426 836047 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5533 . 5534) (nil tag-name "b" 5533 . 5534) (nil tag-type end 5533 . 5534) (nil tag-end t 5533 . 5534) (nil font-lock-face web-mode-html-tag-bracket-face 5533 . 5534) (nil tag-name "b" 5532 . 5533) (nil tag-type end 5532 . 5533) (nil font-lock-face web-mode-html-tag-face 5532 . 5533) (nil tag-name "b" 5531 . 5532) (nil tag-type end 5531 . 5532) (nil font-lock-face web-mode-html-tag-bracket-face 5531 . 5532) (nil tag-name "b" 5530 . 5531) (nil tag-type end 5530 . 5531) (nil tag-beg 20 5530 . 5531) (nil font-lock-face web-mode-html-tag-bracket-face 5530 . 5531) (nil block-side t 5528 . 5529) (nil block-end t 5528 . 5529) (nil block-token delimiter-end 5528 . 5529) (nil font-lock-face web-mode-block-delimiter-face 5528 . 5529) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5528 . 5529) (nil block-side t 5527 . 5528) (nil block-token delimiter-end 5527 . 5528) (nil font-lock-face web-mode-block-delimiter-face 5527 . 5528) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5527 . 5528) (nil block-side t 5526 . 5527) (nil block-side t 5525 . 5526) (nil face (rainbow-delimiters-depth-3-face) 5525 . 5526) (nil block-side t 5524 . 5525) (nil block-side t 5523 . 5524) (nil face web-mode-variable-name-face 5523 . 5524) (nil block-side t 5522 . 5523) (nil face web-mode-variable-name-face 5522 . 5523) (nil block-side t 5521 . 5522) (nil face web-mode-variable-name-face 5521 . 5522) (nil block-side t 5520 . 5521) (nil face web-mode-variable-name-face 5520 . 5521) (nil block-side t 5519 . 5520) (nil face web-mode-variable-name-face 5519 . 5520) (nil block-side t 5518 . 5519) (nil face web-mode-variable-name-face 5518 . 5519) (nil block-side t 5517 . 5518) (nil face web-mode-variable-name-face 5517 . 5518) (nil block-side t 5516 . 5517) (nil face web-mode-variable-name-face 5516 . 5517) (nil block-side t 5515 . 5516) (nil face web-mode-variable-name-face 5515 . 5516) (nil block-side t 5514 . 5515) (nil face web-mode-variable-name-face 5514 . 5515) (nil block-side t 5513 . 5514) (nil face web-mode-variable-name-face 5513 . 5514) (nil block-side t 5512 . 5513) (nil block-side t 5511 . 5512) (nil face web-mode-variable-name-face 5511 . 5512) (nil block-side t 5510 . 5511) (nil face web-mode-variable-name-face 5510 . 5511) (nil block-side t 5509 . 5510) (nil face web-mode-variable-name-face 5509 . 5510) (nil block-side t 5508 . 5509) (nil face web-mode-variable-name-face 5508 . 5509) (nil block-side t 5507 . 5508) (nil face web-mode-variable-name-face 5507 . 5508) (nil block-side t 5506 . 5507) (nil face web-mode-variable-name-face 5506 . 5507) (nil block-side t 5505 . 5506) (nil face web-mode-variable-name-face 5505 . 5506) (nil block-side t 5504 . 5505) (nil face web-mode-variable-name-face 5504 . 5505) (nil block-side t 5503 . 5504) (nil face web-mode-variable-name-face 5503 . 5504) (nil block-side t 5502 . 5503) (nil face web-mode-variable-name-face 5502 . 5503) (nil block-side t 5501 . 5502) (nil face web-mode-variable-name-face 5501 . 5502) (nil block-side t 5500 . 5501) (nil face web-mode-variable-name-face 5500 . 5501) (nil block-side t 5499 . 5500) (nil block-side t 5498 . 5499) (nil face web-mode-variable-name-face 5498 . 5499) (nil block-side t 5497 . 5498) (nil face web-mode-variable-name-face 5497 . 5498) (nil block-side t 5496 . 5497) (nil face web-mode-variable-name-face 5496 . 5497) (nil block-side t 5495 . 5496) (nil face web-mode-variable-name-face 5495 . 5496) (nil block-side t 5494 . 5495) (nil face web-mode-variable-name-face 5494 . 5495) (nil block-side t 5493 . 5494) (nil face web-mode-variable-name-face 5493 . 5494) (nil block-side t 5492 . 5493) (nil face web-mode-variable-name-face 5492 . 5493) (nil block-side t 5491 . 5492) (nil face web-mode-variable-name-face 5491 . 5492) (nil block-side t 5490 . 5491) (nil face web-mode-variable-name-face 5490 . 5491) (nil block-side t 5489 . 5490) (nil face web-mode-variable-name-face 5489 . 5490) (nil block-side t 5488 . 5489) (nil face web-mode-variable-name-face 5488 . 5489) (nil block-side t 5487 . 5488) (nil face web-mode-variable-name-face 5487 . 5488) (nil block-side t 5486 . 5487) (nil face web-mode-variable-name-face 5486 . 5487) (nil block-side t 5485 . 5486) (nil face web-mode-variable-name-face 5485 . 5486) (nil block-side t 5484 . 5485) (nil block-side t 5483 . 5484) (nil face (rainbow-delimiters-depth-3-face) 5483 . 5484) (nil block-side t 5482 . 5483) (nil face web-mode-variable-name-face 5482 . 5483) (nil block-side t 5480 . 5482) (nil block-side t 5479 . 5480) (nil block-token delimiter-beg 5479 . 5480) (nil font-lock-face web-mode-block-delimiter-face 5479 . 5480) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5479 . 5480) (nil block-beg 0 5478 . 5479) (nil block-controls 0 5478 . 5479) (nil block-side t 5478 . 5479) (nil block-token delimiter-beg 5478 . 5479) (nil font-lock-face web-mode-block-delimiter-face 5478 . 5479) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5478 . 5479) (nil tag-name "b" 5476 . 5477) (nil tag-type start 5476 . 5477) (nil tag-end t 5476 . 5477) (nil font-lock-face web-mode-html-tag-bracket-face 5476 . 5477) (nil tag-name "b" 5475 . 5476) (nil tag-type start 5475 . 5476) (nil font-lock-face web-mode-html-tag-face 5475 . 5476) (nil tag-name "b" 5474 . 5475) (nil tag-type start 5474 . 5475) (nil tag-beg 16 5474 . 5475) (nil font-lock-face web-mode-html-tag-bracket-face 5474 . 5475) (5474 . 5534)) nil (25671 38426 836039 792000) 0 nil])
([nil nil ((5534 . 5551)) nil (25671 38426 836012 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5585 . 5586) (nil block-side t 5585 . 5586) (nil block-end t 5585 . 5586) (nil block-token delimiter-end 5585 . 5586) (nil font-lock-face web-mode-block-delimiter-face 5585 . 5586) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5585 . 5586) (nil block-side t 5584 . 5585) (nil block-token delimiter-end 5584 . 5585) (nil font-lock-face web-mode-block-delimiter-face 5584 . 5585) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5584 . 5585) (nil block-side t 5583 . 5584) (nil block-side t 5582 . 5583) (nil face (rainbow-delimiters-depth-3-face) 5582 . 5583) (nil block-side t 5581 . 5582) (nil block-side t 5580 . 5581) (nil face web-mode-variable-name-face 5580 . 5581) (nil block-side t 5579 . 5580) (nil face web-mode-variable-name-face 5579 . 5580) (nil block-side t 5578 . 5579) (nil face web-mode-variable-name-face 5578 . 5579) (nil block-side t 5577 . 5578) (nil face web-mode-variable-name-face 5577 . 5578) (nil block-side t 5576 . 5577) (nil face web-mode-variable-name-face 5576 . 5577) (nil block-side t 5575 . 5576) (nil face web-mode-variable-name-face 5575 . 5576) (nil block-side t 5574 . 5575) (nil face web-mode-variable-name-face 5574 . 5575) (nil block-side t 5573 . 5574) (nil face web-mode-variable-name-face 5573 . 5574) (nil block-side t 5572 . 5573) (nil block-side t 5571 . 5572) (nil face web-mode-variable-name-face 5571 . 5572) (nil block-side t 5570 . 5571) (nil face web-mode-variable-name-face 5570 . 5571) (nil block-side t 5569 . 5570) (nil face web-mode-variable-name-face 5569 . 5570) (nil block-side t 5568 . 5569) (nil face web-mode-variable-name-face 5568 . 5569) (nil block-side t 5567 . 5568) (nil face web-mode-variable-name-face 5567 . 5568) (nil block-side t 5566 . 5567) (nil face web-mode-variable-name-face 5566 . 5567) (nil block-side t 5565 . 5566) (nil face web-mode-variable-name-face 5565 . 5566) (nil block-side t 5564 . 5565) (nil block-side t 5563 . 5564) (nil face web-mode-variable-name-face 5563 . 5564) (nil block-side t 5562 . 5563) (nil face web-mode-variable-name-face 5562 . 5563) (nil block-side t 5561 . 5562) (nil face web-mode-variable-name-face 5561 . 5562) (nil block-side t 5560 . 5561) (nil face web-mode-variable-name-face 5560 . 5561) (nil block-side t 5559 . 5560) (nil block-side t 5558 . 5559) (nil face (rainbow-delimiters-depth-3-face) 5558 . 5559) (nil block-side t 5557 . 5558) (nil face web-mode-variable-name-face 5557 . 5558) (nil block-side t 5556 . 5557) (nil face web-mode-variable-name-face 5556 . 5557) (nil block-side t 5555 . 5556) (nil face web-mode-variable-name-face 5555 . 5556) (nil block-side t 5554 . 5555) (nil face web-mode-variable-name-face 5554 . 5555) (nil block-side t 5553 . 5554) (nil block-side t 5552 . 5553) (nil block-token delimiter-beg 5552 . 5553) (nil font-lock-face web-mode-block-delimiter-face 5552 . 5553) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5552 . 5553) (nil block-beg 0 5551 . 5552) (nil block-controls 0 5551 . 5552) (nil block-side t 5551 . 5552) (nil block-token delimiter-beg 5551 . 5552) (nil font-lock-face web-mode-block-delimiter-face 5551 . 5552) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5551 . 5552) (5551 . 5586)) nil (25671 38426 836006 723000) 0 nil])
([nil nil ((#("              " 0 13 (face whitespace-trailing) 13 14 (face whitespace-trailing)) . -5607) 5586) nil (25671 38426 835983 706000) 0 nil])
([nil nil ((5606 . 5621) (t 25671 38426 841723 198000)) nil (25671 38487 410048 712000) 0 nil])
([nil nil ((5621 . 5630)) nil (25671 38487 410047 480000) 0 nil])
([nil nil ((5626 . 5642) (5627 . 5641) (#("                " 0 16 (face whitespace-trailing)) . 5626) (5626 . 5642) (5626 . 5627) ("              " . 5626) (5625 . 5640)) nil (25671 38487 410045 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5858 . 5859) (nil tag-name "b" 5858 . 5859) (nil tag-type end 5858 . 5859) (nil tag-end t 5858 . 5859) (nil font-lock-face web-mode-html-tag-bracket-face 5858 . 5859) (nil tag-name "b" 5857 . 5858) (nil tag-type end 5857 . 5858) (nil font-lock-face web-mode-html-tag-face 5857 . 5858) (nil tag-name "b" 5856 . 5857) (nil tag-type end 5856 . 5857) (nil font-lock-face web-mode-html-tag-bracket-face 5856 . 5857) (nil tag-name "b" 5855 . 5856) (nil tag-type end 5855 . 5856) (nil tag-beg 20 5855 . 5856) (nil font-lock-face web-mode-html-tag-bracket-face 5855 . 5856) (nil block-side t 5854 . 5855) (nil block-end t 5854 . 5855) (nil block-token delimiter-end 5854 . 5855) (nil font-lock-face web-mode-block-delimiter-face 5854 . 5855) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5854 . 5855) (nil block-side t 5853 . 5854) (nil block-token delimiter-end 5853 . 5854) (nil font-lock-face web-mode-block-delimiter-face 5853 . 5854) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5853 . 5854) (nil block-side t 5852 . 5853) (nil block-side t 5851 . 5852) (nil face (rainbow-delimiters-depth-3-face) 5851 . 5852) (nil block-side t 5850 . 5851) (nil block-side t 5849 . 5850) (nil face web-mode-variable-name-face 5849 . 5850) (nil block-side t 5848 . 5849) (nil face web-mode-variable-name-face 5848 . 5849) (nil block-side t 5847 . 5848) (nil face web-mode-variable-name-face 5847 . 5848) (nil block-side t 5846 . 5847) (nil block-side t 5845 . 5846) (nil face web-mode-variable-name-face 5845 . 5846) (nil block-side t 5844 . 5845) (nil face web-mode-variable-name-face 5844 . 5845) (nil block-side t 5843 . 5844) (nil face web-mode-variable-name-face 5843 . 5844) (nil block-side t 5842 . 5843) (nil face web-mode-variable-name-face 5842 . 5843) (nil block-side t 5841 . 5842) (nil face web-mode-variable-name-face 5841 . 5842) (nil block-side t 5840 . 5841) (nil face web-mode-variable-name-face 5840 . 5841) (nil block-side t 5839 . 5840) (nil face web-mode-variable-name-face 5839 . 5840) (nil block-side t 5838 . 5839) (nil face web-mode-variable-name-face 5838 . 5839) (nil block-side t 5837 . 5838) (nil face web-mode-variable-name-face 5837 . 5838) (nil block-side t 5836 . 5837) (nil face web-mode-variable-name-face 5836 . 5837) (nil block-side t 5835 . 5836) (nil face web-mode-variable-name-face 5835 . 5836) (nil block-side t 5834 . 5835) (nil face web-mode-variable-name-face 5834 . 5835) (nil block-side t 5833 . 5834) (nil block-side t 5832 . 5833) (nil face web-mode-variable-name-face 5832 . 5833) (nil block-side t 5831 . 5832) (nil face web-mode-variable-name-face 5831 . 5832) (nil block-side t 5830 . 5831) (nil face web-mode-variable-name-face 5830 . 5831) (nil block-side t 5829 . 5830) (nil face web-mode-variable-name-face 5829 . 5830) (nil block-side t 5828 . 5829) (nil face web-mode-variable-name-face 5828 . 5829) (nil block-side t 5827 . 5828) (nil face web-mode-variable-name-face 5827 . 5828) (nil block-side t 5826 . 5827) (nil face web-mode-variable-name-face 5826 . 5827) (nil block-side t 5825 . 5826) (nil face web-mode-variable-name-face 5825 . 5826) (nil block-side t 5824 . 5825) (nil face web-mode-variable-name-face 5824 . 5825) (nil block-side t 5823 . 5824) (nil face web-mode-variable-name-face 5823 . 5824) (nil block-side t 5822 . 5823) (nil face web-mode-variable-name-face 5822 . 5823) (nil block-side t 5821 . 5822) (nil face web-mode-variable-name-face 5821 . 5822) (nil block-side t 5820 . 5821) (nil face web-mode-variable-name-face 5820 . 5821) (nil block-side t 5819 . 5820) (nil face web-mode-variable-name-face 5819 . 5820) (nil block-side t 5818 . 5819) (nil block-side t 5817 . 5818) (nil face (rainbow-delimiters-depth-3-face) 5817 . 5818) (nil block-side t 5816 . 5817) (nil face web-mode-variable-name-face 5816 . 5817) (nil block-side t 5814 . 5816) (nil block-side t 5813 . 5814) (nil block-token delimiter-beg 5813 . 5814) (nil font-lock-face web-mode-block-delimiter-face 5813 . 5814) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5813 . 5814) (nil block-beg 0 5812 . 5813) (nil block-controls 0 5812 . 5813) (nil block-side t 5812 . 5813) (nil block-token delimiter-beg 5812 . 5813) (nil font-lock-face web-mode-block-delimiter-face 5812 . 5813) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5812 . 5813) (nil tag-name "b" 5810 . 5811) (nil tag-type start 5810 . 5811) (nil tag-end t 5810 . 5811) (nil font-lock-face web-mode-html-tag-bracket-face 5810 . 5811) (nil tag-name "b" 5809 . 5810) (nil tag-type start 5809 . 5810) (nil font-lock-face web-mode-html-tag-face 5809 . 5810) (nil tag-name "b" 5808 . 5809) (nil tag-type start 5808 . 5809) (nil tag-beg 16 5808 . 5809) (nil font-lock-face web-mode-html-tag-bracket-face 5808 . 5809) (nil tag-name "v-btn" 5786 . 5787) (nil tag-type end 5786 . 5787) (nil tag-end t 5786 . 5787) (nil font-lock-face web-mode-html-tag-bracket-face 5786 . 5787) (nil tag-name "v-btn" 5781 . 5786) (nil tag-type end 5781 . 5786) (nil font-lock-face web-mode-html-tag-custom-face 5781 . 5786) (nil tag-name "v-btn" 5780 . 5781) (nil tag-type end 5780 . 5781) (nil font-lock-face web-mode-html-tag-bracket-face 5780 . 5781) (nil tag-name "v-btn" 5779 . 5780) (nil tag-type end 5779 . 5780) (nil tag-beg 22 5779 . 5780) (nil font-lock-face web-mode-html-tag-bracket-face 5779 . 5780) (nil tag-name "v-icon" 5757 . 5758) (nil tag-type end 5757 . 5758) (nil tag-end t 5757 . 5758) (nil font-lock-face web-mode-html-tag-bracket-face 5757 . 5758) (nil tag-name "v-icon" 5751 . 5757) (nil tag-type end 5751 . 5757) (nil font-lock-face web-mode-html-tag-custom-face 5751 . 5757) (nil tag-name "v-icon" 5750 . 5751) (nil tag-type end 5750 . 5751) (nil font-lock-face web-mode-html-tag-bracket-face 5750 . 5751) (nil tag-name "v-icon" 5749 . 5750) (nil tag-type end 5749 . 5750) (nil tag-beg 22 5749 . 5750) (nil font-lock-face web-mode-html-tag-bracket-face 5749 . 5750) (nil tag-name "v-icon" 5731 . 5732) (nil tag-type start 5731 . 5732) (nil tag-end t 5731 . 5732) (nil font-lock-face web-mode-html-tag-bracket-face 5731 . 5732) (nil tag-attr t 5730 . 5731) (nil tag-attr-end 4 5730 . 5731) (nil tag-name "v-icon" 5730 . 5731) (nil tag-type start 5730 . 5731) (nil font-lock-face web-mode-html-attr-value-face 5730 . 5731) (nil tag-attr t 5725 . 5730) (nil tag-name "v-icon" 5725 . 5730) (nil tag-type start 5725 . 5730) (nil font-lock-face web-mode-html-attr-value-face 5725 . 5730) (nil tag-attr t 5724 . 5725) (nil tag-name "v-icon" 5724 . 5725) (nil tag-type start 5724 . 5725) (nil font-lock-face web-mode-html-attr-equal-face 5724 . 5725) (nil tag-attr t 5721 . 5724) (nil tag-name "v-icon" 5721 . 5724) (nil tag-type start 5721 . 5724) (nil font-lock-face web-mode-html-attr-name-face 5721 . 5724) (nil tag-attr-beg 0 5720 . 5721) (nil tag-attr t 5720 . 5721) (nil tag-name "v-icon" 5720 . 5721) (nil tag-type start 5720 . 5721) (nil font-lock-face web-mode-html-attr-name-face 5720 . 5721) (nil tag-name "v-icon" 5719 . 5720) (nil tag-type start 5719 . 5720) (nil tag-name "v-icon" 5713 . 5719) (nil tag-type start 5713 . 5719) (nil font-lock-face web-mode-html-tag-custom-face 5713 . 5719) (nil tag-name "v-icon" 5712 . 5713) (nil tag-type start 5712 . 5713) (nil tag-beg 19 5712 . 5713) (nil font-lock-face web-mode-html-tag-bracket-face 5712 . 5713) (nil tag-name "v-btn" 5688 . 5689) (nil tag-type start 5688 . 5689) (nil tag-end t 5688 . 5689) (nil font-lock-face web-mode-html-tag-bracket-face 5688 . 5689) (nil block-side t 5687 . 5688) (nil block-end t 5687 . 5688) (nil block-token delimiter-end 5687 . 5688) (nil tag-attr t 5687 . 5688) (nil tag-attr-end 5 5687 . 5688) (nil tag-name "v-btn" 5687 . 5688) (nil tag-type start 5687 . 5688) (nil font-lock-face web-mode-block-delimiter-face 5687 . 5688) (nil block-side t 5685 . 5687) (nil tag-attr t 5685 . 5687) (nil tag-name "v-btn" 5685 . 5687) (nil tag-type start 5685 . 5687) (nil block-side t 5684 . 5685) (nil tag-attr t 5684 . 5685) (nil tag-name "v-btn" 5684 . 5685) (nil tag-type start 5684 . 5685) (nil face web-mode-variable-name-face 5684 . 5685) (nil block-side t 5683 . 5684) (nil tag-attr t 5683 . 5684) (nil tag-name "v-btn" 5683 . 5684) (nil tag-type start 5683 . 5684) (nil face web-mode-variable-name-face 5683 . 5684) (nil block-side t 5682 . 5683) (nil tag-attr t 5682 . 5683) (nil tag-name "v-btn" 5682 . 5683) (nil tag-type start 5682 . 5683) (nil face web-mode-variable-name-face 5682 . 5683) (nil block-side t 5680 . 5682) (nil tag-attr t 5680 . 5682) (nil tag-name "v-btn" 5680 . 5682) (nil tag-type start 5680 . 5682) (nil block-side t 5670 . 5680) (nil tag-attr t 5670 . 5680) (nil tag-name "v-btn" 5670 . 5680) (nil tag-type start 5670 . 5680) (nil face web-mode-function-call-face 5670 . 5680) (nil block-side t 5669 . 5670) (nil block-token delimiter-beg 5669 . 5670) (nil tag-attr t 5669 . 5670) (nil tag-name "v-btn" 5669 . 5670) (nil tag-type start 5669 . 5670) (nil font-lock-face web-mode-block-delimiter-face 5669 . 5670) (nil block-side t 5668 . 5669) (nil block-token delimiter-beg 5668 . 5669) (nil tag-attr t 5668 . 5669) (nil tag-name "v-btn" 5668 . 5669) (nil tag-type start 5668 . 5669) (nil font-lock-face web-mode-block-delimiter-face 5668 . 5669) (nil block-side t 5667 . 5668) (nil block-token delimiter-beg 5667 . 5668) (nil tag-attr t 5667 . 5668) (nil tag-name "v-btn" 5667 . 5668) (nil tag-type start 5667 . 5668) (nil font-lock-face web-mode-block-delimiter-face 5667 . 5668) (nil block-side t 5666 . 5667) (nil block-token delimiter-beg 5666 . 5667) (nil tag-attr t 5666 . 5667) (nil tag-name "v-btn" 5666 . 5667) (nil tag-type start 5666 . 5667) (nil font-lock-face web-mode-block-delimiter-face 5666 . 5667) (nil block-side t 5665 . 5666) (nil block-token delimiter-beg 5665 . 5666) (nil tag-attr t 5665 . 5666) (nil tag-name "v-btn" 5665 . 5666) (nil tag-type start 5665 . 5666) (nil font-lock-face web-mode-block-delimiter-face 5665 . 5666) (nil block-side t 5664 . 5665) (nil block-token delimiter-beg 5664 . 5665) (nil tag-attr t 5664 . 5665) (nil tag-name "v-btn" 5664 . 5665) (nil tag-type start 5664 . 5665) (nil font-lock-face web-mode-block-delimiter-face 5664 . 5665) (nil block-side t 5663 . 5664) (nil block-token delimiter-beg 5663 . 5664) (nil tag-attr-beg 0 5663 . 5664) (nil tag-attr t 5663 . 5664) (nil tag-name "v-btn" 5663 . 5664) (nil tag-type start 5663 . 5664) (nil font-lock-face web-mode-block-delimiter-face 5663 . 5664) (nil block-beg 0 5662 . 5663) (nil block-controls 0 5662 . 5663) (nil block-side t 5662 . 5663) (nil block-token delimiter-beg 5662 . 5663) (nil tag-name "v-btn" 5662 . 5663) (nil tag-type start 5662 . 5663) (nil font-lock-face web-mode-block-delimiter-face 5662 . 5663) (nil tag-name "v-btn" 5661 . 5662) (nil tag-type start 5661 . 5662) (nil tag-attr t 5660 . 5661) (nil tag-attr-end 0 5660 . 5661) (nil tag-name "v-btn" 5660 . 5661) (nil tag-type start 5660 . 5661) (nil font-lock-face web-mode-html-attr-name-face 5660 . 5661) (nil tag-attr t 5655 . 5660) (nil tag-name "v-btn" 5655 . 5660) (nil tag-type start 5655 . 5660) (nil font-lock-face web-mode-html-attr-name-face 5655 . 5660) (nil tag-attr-beg 0 5654 . 5655) (nil tag-attr t 5654 . 5655) (nil tag-name "v-btn" 5654 . 5655) (nil tag-type start 5654 . 5655) (nil font-lock-face web-mode-html-attr-name-face 5654 . 5655) (nil tag-name "v-btn" 5653 . 5654) (nil tag-type start 5653 . 5654) (nil tag-attr t 5652 . 5653) (nil tag-attr-end 0 5652 . 5653) (nil tag-name "v-btn" 5652 . 5653) (nil tag-type start 5652 . 5653) (nil font-lock-face web-mode-html-attr-name-face 5652 . 5653) (nil tag-attr t 5650 . 5652) (nil tag-name "v-btn" 5650 . 5652) (nil tag-type start 5650 . 5652) (nil font-lock-face web-mode-html-attr-name-face 5650 . 5652) (nil tag-attr-beg 0 5649 . 5650) (nil tag-attr t 5649 . 5650) (nil tag-name "v-btn" 5649 . 5650) (nil tag-type start 5649 . 5650) (nil font-lock-face web-mode-html-attr-name-face 5649 . 5650) (nil tag-name "v-btn" 5648 . 5649) (nil tag-type start 5648 . 5649) (nil tag-name "v-btn" 5643 . 5648) (nil tag-type start 5643 . 5648) (nil font-lock-face web-mode-html-tag-custom-face 5643 . 5648) (nil tag-name "v-btn" 5642 . 5643) (nil tag-type start 5642 . 5643) (nil tag-beg 19 5642 . 5643) (nil font-lock-face web-mode-html-tag-bracket-face 5642 . 5643) (5642 . 5859)) nil (25671 38487 410028 4000) 0 nil])
([nil nil ((5859 . 5880)) nil (25671 38487 409961 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5896 . 5897) (nil block-side t 5896 . 5897) (nil block-end t 5896 . 5897) (nil block-token delimiter-end 5896 . 5897) (nil font-lock-face web-mode-block-delimiter-face 5896 . 5897) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5896 . 5897) (nil block-side t 5895 . 5896) (nil block-token delimiter-end 5895 . 5896) (nil font-lock-face web-mode-block-delimiter-face 5895 . 5896) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5895 . 5896) (nil block-side t 5894 . 5895) (nil block-side t 5893 . 5894) (nil face (rainbow-delimiters-depth-3-face) 5893 . 5894) (nil block-side t 5892 . 5893) (nil block-side t 5891 . 5892) (nil face web-mode-variable-name-face 5891 . 5892) (nil block-side t 5890 . 5891) (nil face web-mode-variable-name-face 5890 . 5891) (nil block-side t 5889 . 5890) (nil face web-mode-variable-name-face 5889 . 5890) (nil block-side t 5888 . 5889) (nil block-side t 5887 . 5888) (nil face (rainbow-delimiters-depth-3-face) 5887 . 5888) (nil block-side t 5886 . 5887) (nil face web-mode-variable-name-face 5886 . 5887) (nil block-side t 5885 . 5886) (nil face web-mode-variable-name-face 5885 . 5886) (nil block-side t 5884 . 5885) (nil face web-mode-variable-name-face 5884 . 5885) (nil block-side t 5883 . 5884) (nil face web-mode-variable-name-face 5883 . 5884) (nil block-side t 5882 . 5883) (nil block-side t 5881 . 5882) (nil block-token delimiter-beg 5881 . 5882) (nil font-lock-face web-mode-block-delimiter-face 5881 . 5882) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5881 . 5882) (nil block-beg 0 5880 . 5881) (nil block-controls 0 5880 . 5881) (nil block-side t 5880 . 5881) (nil block-token delimiter-beg 5880 . 5881) (nil font-lock-face web-mode-block-delimiter-face 5880 . 5881) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5880 . 5881) (5880 . 5897)) nil (25671 38487 409957 723000) 0 nil])
([nil nil (("    " . -5864) (undo-tree-id0 . -4) ("    " . -5796) ("    " . -5771) ("    " . -5708) 5607) nil (25671 38487 409942 378000) 0 nil])
([nil nil ((5850 . 5851) (5847 . 5851) (t 25671 38487 411654 231000)) nil (25671 38499 682019 114000) 0 nil])
([nil nil ((5906 . 5921) (t 25671 38499 692045 754000)) nil (25671 38660 208422 544000) 0 nil])
([nil nil ((5921 . 5930)) nil (25671 38660 208421 473000) 0 nil])
([nil nil ((5926 . 5942) (5927 . 5941) (#("                " 0 16 (face whitespace-trailing)) . 5926) (5926 . 5942) (5926 . 5927) ("              " . 5926) (5925 . 5940)) nil (25671 38660 208419 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6171 . 6172) (nil tag-name "b" 6171 . 6172) (nil tag-type end 6171 . 6172) (nil tag-end t 6171 . 6172) (nil font-lock-face web-mode-html-tag-bracket-face 6171 . 6172) (nil tag-name "b" 6170 . 6171) (nil tag-type end 6170 . 6171) (nil font-lock-face web-mode-html-tag-face 6170 . 6171) (nil tag-name "b" 6169 . 6170) (nil tag-type end 6169 . 6170) (nil font-lock-face web-mode-html-tag-bracket-face 6169 . 6170) (nil tag-name "b" 6168 . 6169) (nil tag-type end 6168 . 6169) (nil tag-beg 20 6168 . 6169) (nil font-lock-face web-mode-html-tag-bracket-face 6168 . 6169) (nil block-side t 6167 . 6168) (nil block-end t 6167 . 6168) (nil block-token delimiter-end 6167 . 6168) (nil font-lock-face web-mode-block-delimiter-face 6167 . 6168) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6167 . 6168) (nil block-side t 6166 . 6167) (nil block-token delimiter-end 6166 . 6167) (nil font-lock-face web-mode-block-delimiter-face 6166 . 6167) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6166 . 6167) (nil block-side t 6165 . 6166) (nil block-side t 6164 . 6165) (nil face (rainbow-delimiters-depth-3-face) 6164 . 6165) (nil block-side t 6163 . 6164) (nil block-side t 6162 . 6163) (nil face web-mode-variable-name-face 6162 . 6163) (nil block-side t 6161 . 6162) (nil face web-mode-variable-name-face 6161 . 6162) (nil block-side t 6160 . 6161) (nil face web-mode-variable-name-face 6160 . 6161) (nil block-side t 6159 . 6160) (nil face web-mode-variable-name-face 6159 . 6160) (nil block-side t 6158 . 6159) (nil face web-mode-variable-name-face 6158 . 6159) (nil block-side t 6157 . 6158) (nil face web-mode-variable-name-face 6157 . 6158) (nil block-side t 6156 . 6157) (nil face web-mode-variable-name-face 6156 . 6157) (nil block-side t 6155 . 6156) (nil face web-mode-variable-name-face 6155 . 6156) (nil block-side t 6154 . 6155) (nil face web-mode-variable-name-face 6154 . 6155) (nil block-side t 6153 . 6154) (nil block-side t 6152 . 6153) (nil face web-mode-variable-name-face 6152 . 6153) (nil block-side t 6151 . 6152) (nil face web-mode-variable-name-face 6151 . 6152) (nil block-side t 6150 . 6151) (nil face web-mode-variable-name-face 6150 . 6151) (nil block-side t 6149 . 6150) (nil face web-mode-variable-name-face 6149 . 6150) (nil block-side t 6148 . 6149) (nil face web-mode-variable-name-face 6148 . 6149) (nil block-side t 6147 . 6148) (nil face web-mode-variable-name-face 6147 . 6148) (nil block-side t 6146 . 6147) (nil face web-mode-variable-name-face 6146 . 6147) (nil block-side t 6145 . 6146) (nil face web-mode-variable-name-face 6145 . 6146) (nil block-side t 6144 . 6145) (nil face web-mode-variable-name-face 6144 . 6145) (nil block-side t 6143 . 6144) (nil face web-mode-variable-name-face 6143 . 6144) (nil block-side t 6142 . 6143) (nil face web-mode-variable-name-face 6142 . 6143) (nil block-side t 6141 . 6142) (nil face web-mode-variable-name-face 6141 . 6142) (nil block-side t 6140 . 6141) (nil block-side t 6139 . 6140) (nil face web-mode-variable-name-face 6139 . 6140) (nil block-side t 6138 . 6139) (nil face web-mode-variable-name-face 6138 . 6139) (nil block-side t 6137 . 6138) (nil face web-mode-variable-name-face 6137 . 6138) (nil block-side t 6136 . 6137) (nil face web-mode-variable-name-face 6136 . 6137) (nil block-side t 6135 . 6136) (nil face web-mode-variable-name-face 6135 . 6136) (nil block-side t 6134 . 6135) (nil face web-mode-variable-name-face 6134 . 6135) (nil block-side t 6133 . 6134) (nil face web-mode-variable-name-face 6133 . 6134) (nil block-side t 6132 . 6133) (nil face web-mode-variable-name-face 6132 . 6133) (nil block-side t 6131 . 6132) (nil face web-mode-variable-name-face 6131 . 6132) (nil block-side t 6130 . 6131) (nil face web-mode-variable-name-face 6130 . 6131) (nil block-side t 6129 . 6130) (nil face web-mode-variable-name-face 6129 . 6130) (nil block-side t 6128 . 6129) (nil face web-mode-variable-name-face 6128 . 6129) (nil block-side t 6127 . 6128) (nil face web-mode-variable-name-face 6127 . 6128) (nil block-side t 6126 . 6127) (nil face web-mode-variable-name-face 6126 . 6127) (nil block-side t 6125 . 6126) (nil block-side t 6124 . 6125) (nil face (rainbow-delimiters-depth-3-face) 6124 . 6125) (nil block-side t 6123 . 6124) (nil face web-mode-variable-name-face 6123 . 6124) (nil block-side t 6121 . 6123) (nil block-side t 6120 . 6121) (nil block-token delimiter-beg 6120 . 6121) (nil font-lock-face web-mode-block-delimiter-face 6120 . 6121) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6120 . 6121) (nil block-beg 0 6119 . 6120) (nil block-controls 0 6119 . 6120) (nil block-side t 6119 . 6120) (nil block-token delimiter-beg 6119 . 6120) (nil font-lock-face web-mode-block-delimiter-face 6119 . 6120) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6119 . 6120) (nil tag-name "b" 6117 . 6118) (nil tag-type start 6117 . 6118) (nil tag-end t 6117 . 6118) (nil font-lock-face web-mode-html-tag-bracket-face 6117 . 6118) (nil tag-name "b" 6116 . 6117) (nil tag-type start 6116 . 6117) (nil font-lock-face web-mode-html-tag-face 6116 . 6117) (nil tag-name "b" 6115 . 6116) (nil tag-type start 6115 . 6116) (nil tag-beg 16 6115 . 6116) (nil font-lock-face web-mode-html-tag-bracket-face 6115 . 6116) (nil tag-name "v-btn" 6093 . 6094) (nil tag-type end 6093 . 6094) (nil tag-end t 6093 . 6094) (nil font-lock-face web-mode-html-tag-bracket-face 6093 . 6094) (nil tag-name "v-btn" 6088 . 6093) (nil tag-type end 6088 . 6093) (nil font-lock-face web-mode-html-tag-custom-face 6088 . 6093) (nil tag-name "v-btn" 6087 . 6088) (nil tag-type end 6087 . 6088) (nil font-lock-face web-mode-html-tag-bracket-face 6087 . 6088) (nil tag-name "v-btn" 6086 . 6087) (nil tag-type end 6086 . 6087) (nil tag-beg 22 6086 . 6087) (nil font-lock-face web-mode-html-tag-bracket-face 6086 . 6087) (nil tag-name "v-icon" 6064 . 6065) (nil tag-type end 6064 . 6065) (nil tag-end t 6064 . 6065) (nil font-lock-face web-mode-html-tag-bracket-face 6064 . 6065) (nil tag-name "v-icon" 6058 . 6064) (nil tag-type end 6058 . 6064) (nil font-lock-face web-mode-html-tag-custom-face 6058 . 6064) (nil tag-name "v-icon" 6057 . 6058) (nil tag-type end 6057 . 6058) (nil font-lock-face web-mode-html-tag-bracket-face 6057 . 6058) (nil tag-name "v-icon" 6056 . 6057) (nil tag-type end 6056 . 6057) (nil tag-beg 22 6056 . 6057) (nil font-lock-face web-mode-html-tag-bracket-face 6056 . 6057) (nil tag-name "v-icon" 6038 . 6039) (nil tag-type start 6038 . 6039) (nil tag-end t 6038 . 6039) (nil font-lock-face web-mode-html-tag-bracket-face 6038 . 6039) (nil tag-attr t 6037 . 6038) (nil tag-attr-end 4 6037 . 6038) (nil tag-name "v-icon" 6037 . 6038) (nil tag-type start 6037 . 6038) (nil font-lock-face web-mode-html-attr-value-face 6037 . 6038) (nil tag-attr t 6032 . 6037) (nil tag-name "v-icon" 6032 . 6037) (nil tag-type start 6032 . 6037) (nil font-lock-face web-mode-html-attr-value-face 6032 . 6037) (nil tag-attr t 6031 . 6032) (nil tag-name "v-icon" 6031 . 6032) (nil tag-type start 6031 . 6032) (nil font-lock-face web-mode-html-attr-equal-face 6031 . 6032) (nil tag-attr t 6028 . 6031) (nil tag-name "v-icon" 6028 . 6031) (nil tag-type start 6028 . 6031) (nil font-lock-face web-mode-html-attr-name-face 6028 . 6031) (nil tag-attr-beg 0 6027 . 6028) (nil tag-attr t 6027 . 6028) (nil tag-name "v-icon" 6027 . 6028) (nil tag-type start 6027 . 6028) (nil font-lock-face web-mode-html-attr-name-face 6027 . 6028) (nil tag-name "v-icon" 6026 . 6027) (nil tag-type start 6026 . 6027) (nil tag-name "v-icon" 6020 . 6026) (nil tag-type start 6020 . 6026) (nil font-lock-face web-mode-html-tag-custom-face 6020 . 6026) (nil tag-name "v-icon" 6019 . 6020) (nil tag-type start 6019 . 6020) (nil tag-beg 19 6019 . 6020) (nil font-lock-face web-mode-html-tag-bracket-face 6019 . 6020) (nil tag-name "v-btn" 5995 . 5996) (nil tag-type start 5995 . 5996) (nil tag-end t 5995 . 5996) (nil font-lock-face web-mode-html-tag-bracket-face 5995 . 5996) (nil block-side t 5994 . 5995) (nil block-end t 5994 . 5995) (nil block-token delimiter-end 5994 . 5995) (nil tag-attr t 5994 . 5995) (nil tag-attr-end 5 5994 . 5995) (nil tag-name "v-btn" 5994 . 5995) (nil tag-type start 5994 . 5995) (nil font-lock-face web-mode-block-delimiter-face 5994 . 5995) (nil block-side t 5992 . 5994) (nil tag-attr t 5992 . 5994) (nil tag-name "v-btn" 5992 . 5994) (nil tag-type start 5992 . 5994) (nil block-side t 5991 . 5992) (nil tag-attr t 5991 . 5992) (nil tag-name "v-btn" 5991 . 5992) (nil tag-type start 5991 . 5992) (nil face web-mode-variable-name-face 5991 . 5992) (nil block-side t 5990 . 5991) (nil tag-attr t 5990 . 5991) (nil tag-name "v-btn" 5990 . 5991) (nil tag-type start 5990 . 5991) (nil face web-mode-variable-name-face 5990 . 5991) (nil block-side t 5989 . 5990) (nil tag-attr t 5989 . 5990) (nil tag-name "v-btn" 5989 . 5990) (nil tag-type start 5989 . 5990) (nil face web-mode-variable-name-face 5989 . 5990) (nil block-side t 5988 . 5989) (nil tag-attr t 5988 . 5989) (nil tag-name "v-btn" 5988 . 5989) (nil tag-type start 5988 . 5989) (nil face web-mode-variable-name-face 5988 . 5989) (nil block-side t 5987 . 5988) (nil tag-attr t 5987 . 5988) (nil tag-name "v-btn" 5987 . 5988) (nil tag-type start 5987 . 5988) (nil face web-mode-variable-name-face 5987 . 5988) (nil block-side t 5986 . 5987) (nil tag-attr t 5986 . 5987) (nil tag-name "v-btn" 5986 . 5987) (nil tag-type start 5986 . 5987) (nil block-side t 5985 . 5986) (nil tag-attr t 5985 . 5986) (nil tag-name "v-btn" 5985 . 5986) (nil tag-type start 5985 . 5986) (nil face web-mode-variable-name-face 5985 . 5986) (nil block-side t 5984 . 5985) (nil tag-attr t 5984 . 5985) (nil tag-name "v-btn" 5984 . 5985) (nil tag-type start 5984 . 5985) (nil face web-mode-variable-name-face 5984 . 5985) (nil block-side t 5983 . 5984) (nil tag-attr t 5983 . 5984) (nil tag-name "v-btn" 5983 . 5984) (nil tag-type start 5983 . 5984) (nil face web-mode-variable-name-face 5983 . 5984) (nil block-side t 5982 . 5983) (nil tag-attr t 5982 . 5983) (nil tag-name "v-btn" 5982 . 5983) (nil tag-type start 5982 . 5983) (nil face web-mode-variable-name-face 5982 . 5983) (nil block-side t 5980 . 5982) (nil tag-attr t 5980 . 5982) (nil tag-name "v-btn" 5980 . 5982) (nil tag-type start 5980 . 5982) (nil block-side t 5970 . 5980) (nil tag-attr t 5970 . 5980) (nil tag-name "v-btn" 5970 . 5980) (nil tag-type start 5970 . 5980) (nil face web-mode-function-call-face 5970 . 5980) (nil block-side t 5969 . 5970) (nil block-token delimiter-beg 5969 . 5970) (nil tag-attr t 5969 . 5970) (nil tag-name "v-btn" 5969 . 5970) (nil tag-type start 5969 . 5970) (nil font-lock-face web-mode-block-delimiter-face 5969 . 5970) (nil block-side t 5968 . 5969) (nil block-token delimiter-beg 5968 . 5969) (nil tag-attr t 5968 . 5969) (nil tag-name "v-btn" 5968 . 5969) (nil tag-type start 5968 . 5969) (nil font-lock-face web-mode-block-delimiter-face 5968 . 5969) (nil block-side t 5967 . 5968) (nil block-token delimiter-beg 5967 . 5968) (nil tag-attr t 5967 . 5968) (nil tag-name "v-btn" 5967 . 5968) (nil tag-type start 5967 . 5968) (nil font-lock-face web-mode-block-delimiter-face 5967 . 5968) (nil block-side t 5966 . 5967) (nil block-token delimiter-beg 5966 . 5967) (nil tag-attr t 5966 . 5967) (nil tag-name "v-btn" 5966 . 5967) (nil tag-type start 5966 . 5967) (nil font-lock-face web-mode-block-delimiter-face 5966 . 5967) (nil block-side t 5965 . 5966) (nil block-token delimiter-beg 5965 . 5966) (nil tag-attr t 5965 . 5966) (nil tag-name "v-btn" 5965 . 5966) (nil tag-type start 5965 . 5966) (nil font-lock-face web-mode-block-delimiter-face 5965 . 5966) (nil block-side t 5964 . 5965) (nil block-token delimiter-beg 5964 . 5965) (nil tag-attr t 5964 . 5965) (nil tag-name "v-btn" 5964 . 5965) (nil tag-type start 5964 . 5965) (nil font-lock-face web-mode-block-delimiter-face 5964 . 5965) (nil block-side t 5963 . 5964) (nil block-token delimiter-beg 5963 . 5964) (nil tag-attr-beg 0 5963 . 5964) (nil tag-attr t 5963 . 5964) (nil tag-name "v-btn" 5963 . 5964) (nil tag-type start 5963 . 5964) (nil font-lock-face web-mode-block-delimiter-face 5963 . 5964) (nil block-beg 0 5962 . 5963) (nil block-controls 0 5962 . 5963) (nil block-side t 5962 . 5963) (nil block-token delimiter-beg 5962 . 5963) (nil tag-name "v-btn" 5962 . 5963) (nil tag-type start 5962 . 5963) (nil font-lock-face web-mode-block-delimiter-face 5962 . 5963) (nil tag-name "v-btn" 5961 . 5962) (nil tag-type start 5961 . 5962) (nil tag-attr t 5960 . 5961) (nil tag-attr-end 0 5960 . 5961) (nil tag-name "v-btn" 5960 . 5961) (nil tag-type start 5960 . 5961) (nil font-lock-face web-mode-html-attr-name-face 5960 . 5961) (nil tag-attr t 5955 . 5960) (nil tag-name "v-btn" 5955 . 5960) (nil tag-type start 5955 . 5960) (nil font-lock-face web-mode-html-attr-name-face 5955 . 5960) (nil tag-attr-beg 0 5954 . 5955) (nil tag-attr t 5954 . 5955) (nil tag-name "v-btn" 5954 . 5955) (nil tag-type start 5954 . 5955) (nil font-lock-face web-mode-html-attr-name-face 5954 . 5955) (nil tag-name "v-btn" 5953 . 5954) (nil tag-type start 5953 . 5954) (nil tag-attr t 5952 . 5953) (nil tag-attr-end 0 5952 . 5953) (nil tag-name "v-btn" 5952 . 5953) (nil tag-type start 5952 . 5953) (nil font-lock-face web-mode-html-attr-name-face 5952 . 5953) (nil tag-attr t 5950 . 5952) (nil tag-name "v-btn" 5950 . 5952) (nil tag-type start 5950 . 5952) (nil font-lock-face web-mode-html-attr-name-face 5950 . 5952) (nil tag-attr-beg 0 5949 . 5950) (nil tag-attr t 5949 . 5950) (nil tag-name "v-btn" 5949 . 5950) (nil tag-type start 5949 . 5950) (nil font-lock-face web-mode-html-attr-name-face 5949 . 5950) (nil tag-name "v-btn" 5948 . 5949) (nil tag-type start 5948 . 5949) (nil tag-name "v-btn" 5943 . 5948) (nil tag-type start 5943 . 5948) (nil font-lock-face web-mode-html-tag-custom-face 5943 . 5948) (nil tag-name "v-btn" 5942 . 5943) (nil tag-type start 5942 . 5943) (nil tag-beg 19 5942 . 5943) (nil font-lock-face web-mode-html-tag-bracket-face 5942 . 5943) (5942 . 6172)) nil (25671 38660 208399 742000) 0 nil])
([nil nil (("    " . -6103) ("    " . -6078) ("    " . -6015) 5909) nil (25671 38660 208323 92000) 0 nil])
([nil nil ((5847 . 5864)) nil (25671 38660 208321 549000) 0 nil])
([nil nil ((5534 . 5551)) nil (25671 38660 208320 613000) 0 nil])
([nil nil ((5554 . 5555) (5551 . 5555)) nil (25671 38660 208319 513000) 0 nil])
([nil nil ((6199 . 6216)) nil (25671 38660 208318 284000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6239 . 6240) (nil block-side t 6239 . 6240) (nil block-end t 6239 . 6240) (nil block-token delimiter-end 6239 . 6240) (nil font-lock-face web-mode-block-delimiter-face 6239 . 6240) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6239 . 6240) (nil block-side t 6238 . 6239) (nil block-token delimiter-end 6238 . 6239) (nil font-lock-face web-mode-block-delimiter-face 6238 . 6239) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6238 . 6239) (nil block-side t 6237 . 6238) (nil block-side t 6236 . 6237) (nil face (rainbow-delimiters-depth-3-face) 6236 . 6237) (nil block-side t 6235 . 6236) (nil block-side t 6234 . 6235) (nil face web-mode-variable-name-face 6234 . 6235) (nil block-side t 6233 . 6234) (nil face web-mode-variable-name-face 6233 . 6234) (nil block-side t 6232 . 6233) (nil face web-mode-variable-name-face 6232 . 6233) (nil block-side t 6231 . 6232) (nil face web-mode-variable-name-face 6231 . 6232) (nil block-side t 6230 . 6231) (nil face web-mode-variable-name-face 6230 . 6231) (nil block-side t 6229 . 6230) (nil block-side t 6228 . 6229) (nil face web-mode-variable-name-face 6228 . 6229) (nil block-side t 6227 . 6228) (nil face web-mode-variable-name-face 6227 . 6228) (nil block-side t 6226 . 6227) (nil face web-mode-variable-name-face 6226 . 6227) (nil block-side t 6225 . 6226) (nil face web-mode-variable-name-face 6225 . 6226) (nil block-side t 6224 . 6225) (nil block-side t 6223 . 6224) (nil face (rainbow-delimiters-depth-3-face) 6223 . 6224) (nil block-side t 6222 . 6223) (nil face web-mode-variable-name-face 6222 . 6223) (nil block-side t 6221 . 6222) (nil face web-mode-variable-name-face 6221 . 6222) (nil block-side t 6220 . 6221) (nil face web-mode-variable-name-face 6220 . 6221) (nil block-side t 6219 . 6220) (nil face web-mode-variable-name-face 6219 . 6220) (nil block-side t 6218 . 6219) (nil block-side t 6217 . 6218) (nil block-token delimiter-beg 6217 . 6218) (nil font-lock-face web-mode-block-delimiter-face 6217 . 6218) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6217 . 6218) (nil block-beg 0 6216 . 6217) (nil block-controls 0 6216 . 6217) (nil block-side t 6216 . 6217) (nil block-token delimiter-beg 6216 . 6217) (nil font-lock-face web-mode-block-delimiter-face 6216 . 6217) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6216 . 6217) (6216 . 6240)) nil (25671 38660 208314 471000) 0 nil])
([nil nil ((6199 . 6216)) nil (25671 38660 208301 435000) 0 nil])
([nil nil ((6216 . 6217)) nil (25671 38660 208300 364000) 0 nil])
([nil nil ((6219 . 6220) (6217 . 6220)) nil (25671 38660 208299 300000) 0 nil])
([nil nil ((6282 . 6297)) nil (25671 38660 208298 93000) 0 nil])
([nil nil ((6297 . 6306)) nil (25671 38660 208297 73000) 0 nil])
([nil nil ((6302 . 6318) (6303 . 6317) (#("                " 0 16 (face whitespace-trailing)) . 6302) (6302 . 6318) (6302 . 6303) ("              " . 6302) (6301 . 6316)) nil (25671 38660 208295 194000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6541 . 6542) (nil tag-name "b" 6541 . 6542) (nil tag-type end 6541 . 6542) (nil tag-end t 6541 . 6542) (nil font-lock-face web-mode-html-tag-bracket-face 6541 . 6542) (nil tag-name "b" 6540 . 6541) (nil tag-type end 6540 . 6541) (nil font-lock-face web-mode-html-tag-face 6540 . 6541) (nil tag-name "b" 6539 . 6540) (nil tag-type end 6539 . 6540) (nil font-lock-face web-mode-html-tag-bracket-face 6539 . 6540) (nil tag-name "b" 6538 . 6539) (nil tag-type end 6538 . 6539) (nil tag-beg 20 6538 . 6539) (nil font-lock-face web-mode-html-tag-bracket-face 6538 . 6539) (nil block-side t 6537 . 6538) (nil block-end t 6537 . 6538) (nil block-token delimiter-end 6537 . 6538) (nil font-lock-face web-mode-block-delimiter-face 6537 . 6538) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6537 . 6538) (nil block-side t 6536 . 6537) (nil block-token delimiter-end 6536 . 6537) (nil font-lock-face web-mode-block-delimiter-face 6536 . 6537) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6536 . 6537) (nil block-side t 6535 . 6536) (nil block-side t 6534 . 6535) (nil face (rainbow-delimiters-depth-3-face) 6534 . 6535) (nil block-side t 6533 . 6534) (nil block-side t 6532 . 6533) (nil face web-mode-variable-name-face 6532 . 6533) (nil block-side t 6531 . 6532) (nil face web-mode-variable-name-face 6531 . 6532) (nil block-side t 6530 . 6531) (nil face web-mode-variable-name-face 6530 . 6531) (nil block-side t 6529 . 6530) (nil face web-mode-variable-name-face 6529 . 6530) (nil block-side t 6528 . 6529) (nil face web-mode-variable-name-face 6528 . 6529) (nil block-side t 6527 . 6528) (nil face web-mode-variable-name-face 6527 . 6528) (nil block-side t 6526 . 6527) (nil block-side t 6525 . 6526) (nil face web-mode-variable-name-face 6525 . 6526) (nil block-side t 6524 . 6525) (nil face web-mode-variable-name-face 6524 . 6525) (nil block-side t 6523 . 6524) (nil face web-mode-variable-name-face 6523 . 6524) (nil block-side t 6522 . 6523) (nil face web-mode-variable-name-face 6522 . 6523) (nil block-side t 6521 . 6522) (nil face web-mode-variable-name-face 6521 . 6522) (nil block-side t 6520 . 6521) (nil face web-mode-variable-name-face 6520 . 6521) (nil block-side t 6519 . 6520) (nil face web-mode-variable-name-face 6519 . 6520) (nil block-side t 6518 . 6519) (nil face web-mode-variable-name-face 6518 . 6519) (nil block-side t 6517 . 6518) (nil face web-mode-variable-name-face 6517 . 6518) (nil block-side t 6516 . 6517) (nil face web-mode-variable-name-face 6516 . 6517) (nil block-side t 6515 . 6516) (nil face web-mode-variable-name-face 6515 . 6516) (nil block-side t 6514 . 6515) (nil face web-mode-variable-name-face 6514 . 6515) (nil block-side t 6513 . 6514) (nil block-side t 6512 . 6513) (nil face web-mode-variable-name-face 6512 . 6513) (nil block-side t 6511 . 6512) (nil face web-mode-variable-name-face 6511 . 6512) (nil block-side t 6510 . 6511) (nil face web-mode-variable-name-face 6510 . 6511) (nil block-side t 6509 . 6510) (nil face web-mode-variable-name-face 6509 . 6510) (nil block-side t 6508 . 6509) (nil face web-mode-variable-name-face 6508 . 6509) (nil block-side t 6507 . 6508) (nil face web-mode-variable-name-face 6507 . 6508) (nil block-side t 6506 . 6507) (nil face web-mode-variable-name-face 6506 . 6507) (nil block-side t 6505 . 6506) (nil face web-mode-variable-name-face 6505 . 6506) (nil block-side t 6504 . 6505) (nil face web-mode-variable-name-face 6504 . 6505) (nil block-side t 6503 . 6504) (nil face web-mode-variable-name-face 6503 . 6504) (nil block-side t 6502 . 6503) (nil face web-mode-variable-name-face 6502 . 6503) (nil block-side t 6501 . 6502) (nil face web-mode-variable-name-face 6501 . 6502) (nil block-side t 6500 . 6501) (nil face web-mode-variable-name-face 6500 . 6501) (nil block-side t 6499 . 6500) (nil face web-mode-variable-name-face 6499 . 6500) (nil block-side t 6498 . 6499) (nil block-side t 6497 . 6498) (nil face (rainbow-delimiters-depth-3-face) 6497 . 6498) (nil block-side t 6496 . 6497) (nil face web-mode-variable-name-face 6496 . 6497) (nil block-side t 6494 . 6496) (nil block-side t 6493 . 6494) (nil block-token delimiter-beg 6493 . 6494) (nil font-lock-face web-mode-block-delimiter-face 6493 . 6494) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6493 . 6494) (nil block-beg 0 6492 . 6493) (nil block-controls 0 6492 . 6493) (nil block-side t 6492 . 6493) (nil block-token delimiter-beg 6492 . 6493) (nil font-lock-face web-mode-block-delimiter-face 6492 . 6493) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6492 . 6493) (nil tag-name "b" 6490 . 6491) (nil tag-type start 6490 . 6491) (nil tag-end t 6490 . 6491) (nil font-lock-face web-mode-html-tag-bracket-face 6490 . 6491) (nil tag-name "b" 6489 . 6490) (nil tag-type start 6489 . 6490) (nil font-lock-face web-mode-html-tag-face 6489 . 6490) (nil tag-name "b" 6488 . 6489) (nil tag-type start 6488 . 6489) (nil tag-beg 16 6488 . 6489) (nil font-lock-face web-mode-html-tag-bracket-face 6488 . 6489) (nil tag-name "v-btn" 6466 . 6467) (nil tag-type end 6466 . 6467) (nil tag-end t 6466 . 6467) (nil font-lock-face web-mode-html-tag-bracket-face 6466 . 6467) (nil tag-name "v-btn" 6461 . 6466) (nil tag-type end 6461 . 6466) (nil font-lock-face web-mode-html-tag-custom-face 6461 . 6466) (nil tag-name "v-btn" 6460 . 6461) (nil tag-type end 6460 . 6461) (nil font-lock-face web-mode-html-tag-bracket-face 6460 . 6461) (nil tag-name "v-btn" 6459 . 6460) (nil tag-type end 6459 . 6460) (nil tag-beg 22 6459 . 6460) (nil font-lock-face web-mode-html-tag-bracket-face 6459 . 6460) (nil tag-name "v-icon" 6437 . 6438) (nil tag-type end 6437 . 6438) (nil tag-end t 6437 . 6438) (nil font-lock-face web-mode-html-tag-bracket-face 6437 . 6438) (nil tag-name "v-icon" 6431 . 6437) (nil tag-type end 6431 . 6437) (nil font-lock-face web-mode-html-tag-custom-face 6431 . 6437) (nil tag-name "v-icon" 6430 . 6431) (nil tag-type end 6430 . 6431) (nil font-lock-face web-mode-html-tag-bracket-face 6430 . 6431) (nil tag-name "v-icon" 6429 . 6430) (nil tag-type end 6429 . 6430) (nil tag-beg 22 6429 . 6430) (nil font-lock-face web-mode-html-tag-bracket-face 6429 . 6430) (nil tag-name "v-icon" 6411 . 6412) (nil tag-type start 6411 . 6412) (nil tag-end t 6411 . 6412) (nil font-lock-face web-mode-html-tag-bracket-face 6411 . 6412) (nil tag-attr t 6410 . 6411) (nil tag-attr-end 4 6410 . 6411) (nil tag-name "v-icon" 6410 . 6411) (nil tag-type start 6410 . 6411) (nil font-lock-face web-mode-html-attr-value-face 6410 . 6411) (nil tag-attr t 6405 . 6410) (nil tag-name "v-icon" 6405 . 6410) (nil tag-type start 6405 . 6410) (nil font-lock-face web-mode-html-attr-value-face 6405 . 6410) (nil tag-attr t 6404 . 6405) (nil tag-name "v-icon" 6404 . 6405) (nil tag-type start 6404 . 6405) (nil font-lock-face web-mode-html-attr-equal-face 6404 . 6405) (nil tag-attr t 6401 . 6404) (nil tag-name "v-icon" 6401 . 6404) (nil tag-type start 6401 . 6404) (nil font-lock-face web-mode-html-attr-name-face 6401 . 6404) (nil tag-attr-beg 0 6400 . 6401) (nil tag-attr t 6400 . 6401) (nil tag-name "v-icon" 6400 . 6401) (nil tag-type start 6400 . 6401) (nil font-lock-face web-mode-html-attr-name-face 6400 . 6401) (nil tag-name "v-icon" 6399 . 6400) (nil tag-type start 6399 . 6400) (nil tag-name "v-icon" 6393 . 6399) (nil tag-type start 6393 . 6399) (nil font-lock-face web-mode-html-tag-custom-face 6393 . 6399) (nil tag-name "v-icon" 6392 . 6393) (nil tag-type start 6392 . 6393) (nil tag-beg 19 6392 . 6393) (nil font-lock-face web-mode-html-tag-bracket-face 6392 . 6393) (nil tag-name "v-btn" 6368 . 6369) (nil tag-type start 6368 . 6369) (nil tag-end t 6368 . 6369) (nil font-lock-face web-mode-html-tag-bracket-face 6368 . 6369) (nil block-side t 6367 . 6368) (nil block-end t 6367 . 6368) (nil block-token delimiter-end 6367 . 6368) (nil tag-attr t 6367 . 6368) (nil tag-attr-end 5 6367 . 6368) (nil tag-name "v-btn" 6367 . 6368) (nil tag-type start 6367 . 6368) (nil font-lock-face web-mode-block-delimiter-face 6367 . 6368) (nil block-side t 6365 . 6367) (nil tag-attr t 6365 . 6367) (nil tag-name "v-btn" 6365 . 6367) (nil tag-type start 6365 . 6367) (nil block-side t 6364 . 6365) (nil tag-attr t 6364 . 6365) (nil tag-name "v-btn" 6364 . 6365) (nil tag-type start 6364 . 6365) (nil face web-mode-variable-name-face 6364 . 6365) (nil block-side t 6363 . 6364) (nil tag-attr t 6363 . 6364) (nil tag-name "v-btn" 6363 . 6364) (nil tag-type start 6363 . 6364) (nil face web-mode-variable-name-face 6363 . 6364) (nil block-side t 6362 . 6363) (nil tag-attr t 6362 . 6363) (nil tag-name "v-btn" 6362 . 6363) (nil tag-type start 6362 . 6363) (nil face web-mode-variable-name-face 6362 . 6363) (nil block-side t 6361 . 6362) (nil tag-attr t 6361 . 6362) (nil tag-name "v-btn" 6361 . 6362) (nil tag-type start 6361 . 6362) (nil block-side t 6360 . 6361) (nil tag-attr t 6360 . 6361) (nil tag-name "v-btn" 6360 . 6361) (nil tag-type start 6360 . 6361) (nil face web-mode-variable-name-face 6360 . 6361) (nil block-side t 6359 . 6360) (nil tag-attr t 6359 . 6360) (nil tag-name "v-btn" 6359 . 6360) (nil tag-type start 6359 . 6360) (nil face web-mode-variable-name-face 6359 . 6360) (nil block-side t 6358 . 6359) (nil tag-attr t 6358 . 6359) (nil tag-name "v-btn" 6358 . 6359) (nil tag-type start 6358 . 6359) (nil face web-mode-variable-name-face 6358 . 6359) (nil block-side t 6356 . 6358) (nil tag-attr t 6356 . 6358) (nil tag-name "v-btn" 6356 . 6358) (nil tag-type start 6356 . 6358) (nil block-side t 6346 . 6356) (nil tag-attr t 6346 . 6356) (nil tag-name "v-btn" 6346 . 6356) (nil tag-type start 6346 . 6356) (nil face web-mode-function-call-face 6346 . 6356) (nil block-side t 6345 . 6346) (nil block-token delimiter-beg 6345 . 6346) (nil tag-attr t 6345 . 6346) (nil tag-name "v-btn" 6345 . 6346) (nil tag-type start 6345 . 6346) (nil font-lock-face web-mode-block-delimiter-face 6345 . 6346) (nil block-side t 6344 . 6345) (nil block-token delimiter-beg 6344 . 6345) (nil tag-attr t 6344 . 6345) (nil tag-name "v-btn" 6344 . 6345) (nil tag-type start 6344 . 6345) (nil font-lock-face web-mode-block-delimiter-face 6344 . 6345) (nil block-side t 6343 . 6344) (nil block-token delimiter-beg 6343 . 6344) (nil tag-attr t 6343 . 6344) (nil tag-name "v-btn" 6343 . 6344) (nil tag-type start 6343 . 6344) (nil font-lock-face web-mode-block-delimiter-face 6343 . 6344) (nil block-side t 6342 . 6343) (nil block-token delimiter-beg 6342 . 6343) (nil tag-attr t 6342 . 6343) (nil tag-name "v-btn" 6342 . 6343) (nil tag-type start 6342 . 6343) (nil font-lock-face web-mode-block-delimiter-face 6342 . 6343) (nil block-side t 6341 . 6342) (nil block-token delimiter-beg 6341 . 6342) (nil tag-attr t 6341 . 6342) (nil tag-name "v-btn" 6341 . 6342) (nil tag-type start 6341 . 6342) (nil font-lock-face web-mode-block-delimiter-face 6341 . 6342) (nil block-side t 6340 . 6341) (nil block-token delimiter-beg 6340 . 6341) (nil tag-attr t 6340 . 6341) (nil tag-name "v-btn" 6340 . 6341) (nil tag-type start 6340 . 6341) (nil font-lock-face web-mode-block-delimiter-face 6340 . 6341) (nil block-side t 6339 . 6340) (nil block-token delimiter-beg 6339 . 6340) (nil tag-attr-beg 0 6339 . 6340) (nil tag-attr t 6339 . 6340) (nil tag-name "v-btn" 6339 . 6340) (nil tag-type start 6339 . 6340) (nil font-lock-face web-mode-block-delimiter-face 6339 . 6340) (nil block-beg 0 6338 . 6339) (nil block-controls 0 6338 . 6339) (nil block-side t 6338 . 6339) (nil block-token delimiter-beg 6338 . 6339) (nil tag-name "v-btn" 6338 . 6339) (nil tag-type start 6338 . 6339) (nil font-lock-face web-mode-block-delimiter-face 6338 . 6339) (nil tag-name "v-btn" 6337 . 6338) (nil tag-type start 6337 . 6338) (nil tag-attr t 6336 . 6337) (nil tag-attr-end 0 6336 . 6337) (nil tag-name "v-btn" 6336 . 6337) (nil tag-type start 6336 . 6337) (nil font-lock-face web-mode-html-attr-name-face 6336 . 6337) (nil tag-attr t 6331 . 6336) (nil tag-name "v-btn" 6331 . 6336) (nil tag-type start 6331 . 6336) (nil font-lock-face web-mode-html-attr-name-face 6331 . 6336) (nil tag-attr-beg 0 6330 . 6331) (nil tag-attr t 6330 . 6331) (nil tag-name "v-btn" 6330 . 6331) (nil tag-type start 6330 . 6331) (nil font-lock-face web-mode-html-attr-name-face 6330 . 6331) (nil tag-name "v-btn" 6329 . 6330) (nil tag-type start 6329 . 6330) (nil tag-attr t 6328 . 6329) (nil tag-attr-end 0 6328 . 6329) (nil tag-name "v-btn" 6328 . 6329) (nil tag-type start 6328 . 6329) (nil font-lock-face web-mode-html-attr-name-face 6328 . 6329) (nil tag-attr t 6326 . 6328) (nil tag-name "v-btn" 6326 . 6328) (nil tag-type start 6326 . 6328) (nil font-lock-face web-mode-html-attr-name-face 6326 . 6328) (nil tag-attr-beg 0 6325 . 6326) (nil tag-attr t 6325 . 6326) (nil tag-name "v-btn" 6325 . 6326) (nil tag-type start 6325 . 6326) (nil font-lock-face web-mode-html-attr-name-face 6325 . 6326) (nil tag-name "v-btn" 6324 . 6325) (nil tag-type start 6324 . 6325) (nil tag-name "v-btn" 6319 . 6324) (nil tag-type start 6319 . 6324) (nil font-lock-face web-mode-html-tag-custom-face 6319 . 6324) (nil tag-name "v-btn" 6318 . 6319) (nil tag-type start 6318 . 6319) (nil tag-beg 19 6318 . 6319) (nil font-lock-face web-mode-html-tag-bracket-face 6318 . 6319) (6318 . 6542)) nil (25671 38660 208276 67000) 0 nil])
([nil nil (("    " . -6476) ("    " . -6451) ("    " . -6388) 6318) nil (25671 38660 208200 970000) 0 nil])
([nil nil ((6530 . 6547)) nil (25671 38660 208199 42000) 0 nil])
([nil nil ((6550 . 6551) (6547 . 6551)) nil (25671 38660 208197 604000) 0 nil])
([nil nil ((6552 . 6569)) nil (25671 38660 208195 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6589 . 6590) (nil block-side t 6589 . 6590) (nil block-end t 6589 . 6590) (nil block-token delimiter-end 6589 . 6590) (nil font-lock-face web-mode-block-delimiter-face 6589 . 6590) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6589 . 6590) (nil block-side t 6588 . 6589) (nil block-token delimiter-end 6588 . 6589) (nil font-lock-face web-mode-block-delimiter-face 6588 . 6589) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6588 . 6589) (nil block-side t 6587 . 6588) (nil block-side t 6586 . 6587) (nil face (rainbow-delimiters-depth-3-face) 6586 . 6587) (nil block-side t 6585 . 6586) (nil block-side t 6584 . 6585) (nil face web-mode-variable-name-face 6584 . 6585) (nil block-side t 6583 . 6584) (nil face web-mode-variable-name-face 6583 . 6584) (nil block-side t 6582 . 6583) (nil face web-mode-variable-name-face 6582 . 6583) (nil block-side t 6581 . 6582) (nil block-side t 6580 . 6581) (nil face web-mode-variable-name-face 6580 . 6581) (nil block-side t 6579 . 6580) (nil face web-mode-variable-name-face 6579 . 6580) (nil block-side t 6578 . 6579) (nil face web-mode-variable-name-face 6578 . 6579) (nil block-side t 6577 . 6578) (nil block-side t 6576 . 6577) (nil face (rainbow-delimiters-depth-3-face) 6576 . 6577) (nil block-side t 6575 . 6576) (nil face web-mode-variable-name-face 6575 . 6576) (nil block-side t 6574 . 6575) (nil face web-mode-variable-name-face 6574 . 6575) (nil block-side t 6573 . 6574) (nil face web-mode-variable-name-face 6573 . 6574) (nil block-side t 6572 . 6573) (nil face web-mode-variable-name-face 6572 . 6573) (nil block-side t 6571 . 6572) (nil block-side t 6570 . 6571) (nil block-token delimiter-beg 6570 . 6571) (nil font-lock-face web-mode-block-delimiter-face 6570 . 6571) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6570 . 6571) (nil block-beg 0 6569 . 6570) (nil block-controls 0 6569 . 6570) (nil block-side t 6569 . 6570) (nil block-token delimiter-beg 6569 . 6570) (nil font-lock-face web-mode-block-delimiter-face 6569 . 6570) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6569 . 6570) (6569 . 6590)) nil (25671 38660 208184 645000) 0 nil])
([nil nil ((6610 . 6625) (t 25671 38660 217163 852000)) nil (25671 38745 202930 192000) 0 nil])
([nil nil ((6625 . 6634)) nil (25671 38745 202929 43000) 0 nil])
([nil nil ((6630 . 6646) (6631 . 6645) (#("                " 0 16 (face whitespace-trailing)) . 6630) (6630 . 6646) (6630 . 6631) ("              " . 6630) (6629 . 6644)) nil (25671 38745 202927 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6802 . 6803) (nil tag-name "v-btn" 6802 . 6803) (nil tag-type end 6802 . 6803) (nil tag-end t 6802 . 6803) (nil font-lock-face web-mode-html-tag-bracket-face 6802 . 6803) (nil tag-name "v-btn" 6797 . 6802) (nil tag-type end 6797 . 6802) (nil font-lock-face web-mode-html-tag-custom-face 6797 . 6802) (nil tag-name "v-btn" 6796 . 6797) (nil tag-type end 6796 . 6797) (nil font-lock-face web-mode-html-tag-bracket-face 6796 . 6797) (nil tag-name "v-btn" 6795 . 6796) (nil tag-type end 6795 . 6796) (nil tag-beg 22 6795 . 6796) (nil font-lock-face web-mode-html-tag-bracket-face 6795 . 6796) (nil tag-name "v-icon" 6773 . 6774) (nil tag-type end 6773 . 6774) (nil tag-end t 6773 . 6774) (nil font-lock-face web-mode-html-tag-bracket-face 6773 . 6774) (nil tag-name "v-icon" 6767 . 6773) (nil tag-type end 6767 . 6773) (nil font-lock-face web-mode-html-tag-custom-face 6767 . 6773) (nil tag-name "v-icon" 6766 . 6767) (nil tag-type end 6766 . 6767) (nil font-lock-face web-mode-html-tag-bracket-face 6766 . 6767) (nil tag-name "v-icon" 6765 . 6766) (nil tag-type end 6765 . 6766) (nil tag-beg 22 6765 . 6766) (nil font-lock-face web-mode-html-tag-bracket-face 6765 . 6766) (nil tag-name "v-icon" 6747 . 6748) (nil tag-type start 6747 . 6748) (nil tag-end t 6747 . 6748) (nil font-lock-face web-mode-html-tag-bracket-face 6747 . 6748) (nil tag-attr t 6746 . 6747) (nil tag-attr-end 4 6746 . 6747) (nil tag-name "v-icon" 6746 . 6747) (nil tag-type start 6746 . 6747) (nil font-lock-face web-mode-html-attr-value-face 6746 . 6747) (nil tag-attr t 6741 . 6746) (nil tag-name "v-icon" 6741 . 6746) (nil tag-type start 6741 . 6746) (nil font-lock-face web-mode-html-attr-value-face 6741 . 6746) (nil tag-attr t 6740 . 6741) (nil tag-name "v-icon" 6740 . 6741) (nil tag-type start 6740 . 6741) (nil font-lock-face web-mode-html-attr-equal-face 6740 . 6741) (nil tag-attr t 6737 . 6740) (nil tag-name "v-icon" 6737 . 6740) (nil tag-type start 6737 . 6740) (nil font-lock-face web-mode-html-attr-name-face 6737 . 6740) (nil tag-attr-beg 0 6736 . 6737) (nil tag-attr t 6736 . 6737) (nil tag-name "v-icon" 6736 . 6737) (nil tag-type start 6736 . 6737) (nil font-lock-face web-mode-html-attr-name-face 6736 . 6737) (nil tag-name "v-icon" 6735 . 6736) (nil tag-type start 6735 . 6736) (nil tag-name "v-icon" 6729 . 6735) (nil tag-type start 6729 . 6735) (nil font-lock-face web-mode-html-tag-custom-face 6729 . 6735) (nil tag-name "v-icon" 6728 . 6729) (nil tag-type start 6728 . 6729) (nil tag-beg 19 6728 . 6729) (nil font-lock-face web-mode-html-tag-bracket-face 6728 . 6729) (nil tag-name "v-btn" 6704 . 6705) (nil tag-type start 6704 . 6705) (nil tag-end t 6704 . 6705) (nil font-lock-face web-mode-html-tag-bracket-face 6704 . 6705) (nil block-side t 6703 . 6704) (nil block-end t 6703 . 6704) (nil block-token delimiter-end 6703 . 6704) (nil tag-attr t 6703 . 6704) (nil tag-attr-end 5 6703 . 6704) (nil tag-name "v-btn" 6703 . 6704) (nil tag-type start 6703 . 6704) (nil font-lock-face web-mode-block-delimiter-face 6703 . 6704) (nil block-side t 6701 . 6703) (nil tag-attr t 6701 . 6703) (nil tag-name "v-btn" 6701 . 6703) (nil tag-type start 6701 . 6703) (nil block-side t 6700 . 6701) (nil tag-attr t 6700 . 6701) (nil tag-name "v-btn" 6700 . 6701) (nil tag-type start 6700 . 6701) (nil face web-mode-variable-name-face 6700 . 6701) (nil block-side t 6699 . 6700) (nil tag-attr t 6699 . 6700) (nil tag-name "v-btn" 6699 . 6700) (nil tag-type start 6699 . 6700) (nil face web-mode-variable-name-face 6699 . 6700) (nil block-side t 6698 . 6699) (nil tag-attr t 6698 . 6699) (nil tag-name "v-btn" 6698 . 6699) (nil tag-type start 6698 . 6699) (nil face web-mode-variable-name-face 6698 . 6699) (nil block-side t 6697 . 6698) (nil tag-attr t 6697 . 6698) (nil tag-name "v-btn" 6697 . 6698) (nil tag-type start 6697 . 6698) (nil face web-mode-variable-name-face 6697 . 6698) (nil block-side t 6696 . 6697) (nil tag-attr t 6696 . 6697) (nil tag-name "v-btn" 6696 . 6697) (nil tag-type start 6696 . 6697) (nil face web-mode-variable-name-face 6696 . 6697) (nil block-side t 6695 . 6696) (nil tag-attr t 6695 . 6696) (nil tag-name "v-btn" 6695 . 6696) (nil tag-type start 6695 . 6696) (nil face web-mode-variable-name-face 6695 . 6696) (nil block-side t 6694 . 6695) (nil tag-attr t 6694 . 6695) (nil tag-name "v-btn" 6694 . 6695) (nil tag-type start 6694 . 6695) (nil block-side t 6693 . 6694) (nil tag-attr t 6693 . 6694) (nil tag-name "v-btn" 6693 . 6694) (nil tag-type start 6693 . 6694) (nil face web-mode-variable-name-face 6693 . 6694) (nil block-side t 6692 . 6693) (nil tag-attr t 6692 . 6693) (nil tag-name "v-btn" 6692 . 6693) (nil tag-type start 6692 . 6693) (nil face web-mode-variable-name-face 6692 . 6693) (nil block-side t 6691 . 6692) (nil tag-attr t 6691 . 6692) (nil tag-name "v-btn" 6691 . 6692) (nil tag-type start 6691 . 6692) (nil face web-mode-variable-name-face 6691 . 6692) (nil block-side t 6690 . 6691) (nil tag-attr t 6690 . 6691) (nil tag-name "v-btn" 6690 . 6691) (nil tag-type start 6690 . 6691) (nil face web-mode-variable-name-face 6690 . 6691) (nil block-side t 6689 . 6690) (nil tag-attr t 6689 . 6690) (nil tag-name "v-btn" 6689 . 6690) (nil tag-type start 6689 . 6690) (nil face web-mode-variable-name-face 6689 . 6690) (nil block-side t 6688 . 6689) (nil tag-attr t 6688 . 6689) (nil tag-name "v-btn" 6688 . 6689) (nil tag-type start 6688 . 6689) (nil face web-mode-variable-name-face 6688 . 6689) (nil block-side t 6687 . 6688) (nil tag-attr t 6687 . 6688) (nil tag-name "v-btn" 6687 . 6688) (nil tag-type start 6687 . 6688) (nil face web-mode-variable-name-face 6687 . 6688) (nil block-side t 6686 . 6687) (nil tag-attr t 6686 . 6687) (nil tag-name "v-btn" 6686 . 6687) (nil tag-type start 6686 . 6687) (nil face web-mode-variable-name-face 6686 . 6687) (nil block-side t 6684 . 6686) (nil tag-attr t 6684 . 6686) (nil tag-name "v-btn" 6684 . 6686) (nil tag-type start 6684 . 6686) (nil block-side t 6674 . 6684) (nil tag-attr t 6674 . 6684) (nil tag-name "v-btn" 6674 . 6684) (nil tag-type start 6674 . 6684) (nil face web-mode-function-call-face 6674 . 6684) (nil block-side t 6673 . 6674) (nil block-token delimiter-beg 6673 . 6674) (nil tag-attr t 6673 . 6674) (nil tag-name "v-btn" 6673 . 6674) (nil tag-type start 6673 . 6674) (nil font-lock-face web-mode-block-delimiter-face 6673 . 6674) (nil block-side t 6672 . 6673) (nil block-token delimiter-beg 6672 . 6673) (nil tag-attr t 6672 . 6673) (nil tag-name "v-btn" 6672 . 6673) (nil tag-type start 6672 . 6673) (nil font-lock-face web-mode-block-delimiter-face 6672 . 6673) (nil block-side t 6671 . 6672) (nil block-token delimiter-beg 6671 . 6672) (nil tag-attr t 6671 . 6672) (nil tag-name "v-btn" 6671 . 6672) (nil tag-type start 6671 . 6672) (nil font-lock-face web-mode-block-delimiter-face 6671 . 6672) (nil block-side t 6670 . 6671) (nil block-token delimiter-beg 6670 . 6671) (nil tag-attr t 6670 . 6671) (nil tag-name "v-btn" 6670 . 6671) (nil tag-type start 6670 . 6671) (nil font-lock-face web-mode-block-delimiter-face 6670 . 6671) (nil block-side t 6669 . 6670) (nil block-token delimiter-beg 6669 . 6670) (nil tag-attr t 6669 . 6670) (nil tag-name "v-btn" 6669 . 6670) (nil tag-type start 6669 . 6670) (nil font-lock-face web-mode-block-delimiter-face 6669 . 6670) (nil block-side t 6668 . 6669) (nil block-token delimiter-beg 6668 . 6669) (nil tag-attr t 6668 . 6669) (nil tag-name "v-btn" 6668 . 6669) (nil tag-type start 6668 . 6669) (nil font-lock-face web-mode-block-delimiter-face 6668 . 6669) (nil block-side t 6667 . 6668) (nil block-token delimiter-beg 6667 . 6668) (nil tag-attr-beg 0 6667 . 6668) (nil tag-attr t 6667 . 6668) (nil tag-name "v-btn" 6667 . 6668) (nil tag-type start 6667 . 6668) (nil font-lock-face web-mode-block-delimiter-face 6667 . 6668) (nil block-beg 0 6666 . 6667) (nil block-controls 0 6666 . 6667) (nil block-side t 6666 . 6667) (nil block-token delimiter-beg 6666 . 6667) (nil tag-name "v-btn" 6666 . 6667) (nil tag-type start 6666 . 6667) (nil font-lock-face web-mode-block-delimiter-face 6666 . 6667) (nil tag-name "v-btn" 6665 . 6666) (nil tag-type start 6665 . 6666) (nil tag-attr t 6664 . 6665) (nil tag-attr-end 0 6664 . 6665) (nil tag-name "v-btn" 6664 . 6665) (nil tag-type start 6664 . 6665) (nil font-lock-face web-mode-html-attr-name-face 6664 . 6665) (nil tag-attr t 6659 . 6664) (nil tag-name "v-btn" 6659 . 6664) (nil tag-type start 6659 . 6664) (nil font-lock-face web-mode-html-attr-name-face 6659 . 6664) (nil tag-attr-beg 0 6658 . 6659) (nil tag-attr t 6658 . 6659) (nil tag-name "v-btn" 6658 . 6659) (nil tag-type start 6658 . 6659) (nil font-lock-face web-mode-html-attr-name-face 6658 . 6659) (nil tag-name "v-btn" 6657 . 6658) (nil tag-type start 6657 . 6658) (nil tag-attr t 6656 . 6657) (nil tag-attr-end 0 6656 . 6657) (nil tag-name "v-btn" 6656 . 6657) (nil tag-type start 6656 . 6657) (nil font-lock-face web-mode-html-attr-name-face 6656 . 6657) (nil tag-attr t 6654 . 6656) (nil tag-name "v-btn" 6654 . 6656) (nil tag-type start 6654 . 6656) (nil font-lock-face web-mode-html-attr-name-face 6654 . 6656) (nil tag-attr-beg 0 6653 . 6654) (nil tag-attr t 6653 . 6654) (nil tag-name "v-btn" 6653 . 6654) (nil tag-type start 6653 . 6654) (nil font-lock-face web-mode-html-attr-name-face 6653 . 6654) (nil tag-name "v-btn" 6652 . 6653) (nil tag-type start 6652 . 6653) (nil tag-name "v-btn" 6647 . 6652) (nil tag-type start 6647 . 6652) (nil font-lock-face web-mode-html-tag-custom-face 6647 . 6652) (nil tag-name "v-btn" 6646 . 6647) (nil tag-type start 6646 . 6647) (nil tag-beg 19 6646 . 6647) (nil font-lock-face web-mode-html-tag-bracket-face 6646 . 6647) (6646 . 6803)) nil (25671 38745 202913 276000) 0 nil])
([nil nil ((6800 . 6816) ("    " . -6791) (6803 . 6804)) nil (25671 38745 202862 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6877 . 6878) (nil tag-name "b" 6877 . 6878) (nil tag-type end 6877 . 6878) (nil tag-end t 6877 . 6878) (nil font-lock-face web-mode-html-tag-bracket-face 6877 . 6878) (nil tag-name "b" 6876 . 6877) (nil tag-type end 6876 . 6877) (nil font-lock-face web-mode-html-tag-face 6876 . 6877) (nil tag-name "b" 6875 . 6876) (nil tag-type end 6875 . 6876) (nil font-lock-face web-mode-html-tag-bracket-face 6875 . 6876) (nil tag-name "b" 6874 . 6875) (nil tag-type end 6874 . 6875) (nil tag-beg 20 6874 . 6875) (nil font-lock-face web-mode-html-tag-bracket-face 6874 . 6875) (nil block-side t 6873 . 6874) (nil block-end t 6873 . 6874) (nil block-token delimiter-end 6873 . 6874) (nil font-lock-face web-mode-block-delimiter-face 6873 . 6874) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6873 . 6874) (nil block-side t 6872 . 6873) (nil block-token delimiter-end 6872 . 6873) (nil font-lock-face web-mode-block-delimiter-face 6872 . 6873) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6872 . 6873) (nil block-side t 6871 . 6872) (nil block-side t 6870 . 6871) (nil face (rainbow-delimiters-depth-3-face) 6870 . 6871) (nil block-side t 6869 . 6870) (nil block-side t 6868 . 6869) (nil face web-mode-variable-name-face 6868 . 6869) (nil block-side t 6867 . 6868) (nil face web-mode-variable-name-face 6867 . 6868) (nil block-side t 6866 . 6867) (nil face web-mode-variable-name-face 6866 . 6867) (nil block-side t 6865 . 6866) (nil face web-mode-variable-name-face 6865 . 6866) (nil block-side t 6864 . 6865) (nil face web-mode-variable-name-face 6864 . 6865) (nil block-side t 6863 . 6864) (nil face web-mode-variable-name-face 6863 . 6864) (nil block-side t 6862 . 6863) (nil face web-mode-variable-name-face 6862 . 6863) (nil block-side t 6861 . 6862) (nil face web-mode-variable-name-face 6861 . 6862) (nil block-side t 6860 . 6861) (nil face web-mode-variable-name-face 6860 . 6861) (nil block-side t 6859 . 6860) (nil face web-mode-variable-name-face 6859 . 6860) (nil block-side t 6858 . 6859) (nil face web-mode-variable-name-face 6858 . 6859) (nil block-side t 6857 . 6858) (nil face web-mode-variable-name-face 6857 . 6858) (nil block-side t 6856 . 6857) (nil face web-mode-variable-name-face 6856 . 6857) (nil block-side t 6855 . 6856) (nil face web-mode-variable-name-face 6855 . 6856) (nil block-side t 6854 . 6855) (nil block-side t 6853 . 6854) (nil face web-mode-variable-name-face 6853 . 6854) (nil block-side t 6852 . 6853) (nil face web-mode-variable-name-face 6852 . 6853) (nil block-side t 6851 . 6852) (nil face web-mode-variable-name-face 6851 . 6852) (nil block-side t 6850 . 6851) (nil face web-mode-variable-name-face 6850 . 6851) (nil block-side t 6849 . 6850) (nil face web-mode-variable-name-face 6849 . 6850) (nil block-side t 6848 . 6849) (nil face web-mode-variable-name-face 6848 . 6849) (nil block-side t 6847 . 6848) (nil face web-mode-variable-name-face 6847 . 6848) (nil block-side t 6846 . 6847) (nil face web-mode-variable-name-face 6846 . 6847) (nil block-side t 6845 . 6846) (nil face web-mode-variable-name-face 6845 . 6846) (nil block-side t 6844 . 6845) (nil face web-mode-variable-name-face 6844 . 6845) (nil block-side t 6843 . 6844) (nil face web-mode-variable-name-face 6843 . 6844) (nil block-side t 6842 . 6843) (nil face web-mode-variable-name-face 6842 . 6843) (nil block-side t 6841 . 6842) (nil block-side t 6840 . 6841) (nil face web-mode-variable-name-face 6840 . 6841) (nil block-side t 6839 . 6840) (nil face web-mode-variable-name-face 6839 . 6840) (nil block-side t 6838 . 6839) (nil face web-mode-variable-name-face 6838 . 6839) (nil block-side t 6837 . 6838) (nil face web-mode-variable-name-face 6837 . 6838) (nil block-side t 6836 . 6837) (nil face web-mode-variable-name-face 6836 . 6837) (nil block-side t 6835 . 6836) (nil face web-mode-variable-name-face 6835 . 6836) (nil block-side t 6834 . 6835) (nil face web-mode-variable-name-face 6834 . 6835) (nil block-side t 6833 . 6834) (nil face web-mode-variable-name-face 6833 . 6834) (nil block-side t 6832 . 6833) (nil face web-mode-variable-name-face 6832 . 6833) (nil block-side t 6831 . 6832) (nil face web-mode-variable-name-face 6831 . 6832) (nil block-side t 6830 . 6831) (nil face web-mode-variable-name-face 6830 . 6831) (nil block-side t 6829 . 6830) (nil face web-mode-variable-name-face 6829 . 6830) (nil block-side t 6828 . 6829) (nil face web-mode-variable-name-face 6828 . 6829) (nil block-side t 6827 . 6828) (nil face web-mode-variable-name-face 6827 . 6828) (nil block-side t 6826 . 6827) (nil block-side t 6825 . 6826) (nil face (rainbow-delimiters-depth-3-face) 6825 . 6826) (nil block-side t 6824 . 6825) (nil face web-mode-variable-name-face 6824 . 6825) (nil block-side t 6822 . 6824) (nil block-side t 6821 . 6822) (nil block-token delimiter-beg 6821 . 6822) (nil font-lock-face web-mode-block-delimiter-face 6821 . 6822) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6821 . 6822) (nil block-beg 0 6820 . 6821) (nil block-controls 0 6820 . 6821) (nil block-side t 6820 . 6821) (nil block-token delimiter-beg 6820 . 6821) (nil font-lock-face web-mode-block-delimiter-face 6820 . 6821) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6820 . 6821) (nil tag-name "b" 6818 . 6819) (nil tag-type start 6818 . 6819) (nil tag-end t 6818 . 6819) (nil font-lock-face web-mode-html-tag-bracket-face 6818 . 6819) (nil tag-name "b" 6817 . 6818) (nil tag-type start 6817 . 6818) (nil font-lock-face web-mode-html-tag-face 6817 . 6818) (nil tag-name "b" 6816 . 6817) (nil tag-type start 6816 . 6817) (nil tag-beg 16 6816 . 6817) (nil font-lock-face web-mode-html-tag-bracket-face 6816 . 6817) (6816 . 6878)) nil (25671 38745 202853 843000) 0 nil])
([nil nil ((6878 . 6895)) nil (25671 38745 205007 903000) 0 nil])
([nil nil ((6898 . 6899) (6895 . 6899)) nil (25671 38769 681033 586000) 0 nil] [nil nil (("  " . -6893) (6895 . 6900)) ((#("</td>" 0 1 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 4 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 4 5 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6895) (undo-tree-id1 . -5) (6893 . 6895)) (25671 38745 202818 138000) 0 nil])
([nil nil ((6900 . 6917)) nil (25671 38769 681029 685000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7434 . 7435) (nil tag-name "v-select" 7434 . 7435) (nil tag-type end 7434 . 7435) (nil tag-end t 7434 . 7435) (nil font-lock-face web-mode-html-tag-bracket-face 7434 . 7435) (nil tag-name "v-select" 7426 . 7434) (nil tag-type end 7426 . 7434) (nil font-lock-face web-mode-html-tag-custom-face 7426 . 7434) (nil tag-name "v-select" 7425 . 7426) (nil tag-type end 7425 . 7426) (nil font-lock-face web-mode-html-tag-bracket-face 7425 . 7426) (nil tag-name "v-select" 7424 . 7425) (nil tag-type end 7424 . 7425) (nil tag-beg 22 7424 . 7425) (nil font-lock-face web-mode-html-tag-bracket-face 7424 . 7425) (nil tag-name "v-select" 7423 . 7424) (nil tag-type start 7423 . 7424) (nil tag-end t 7423 . 7424) (nil font-lock-face web-mode-html-tag-bracket-face 7423 . 7424) (nil tag-name "v-select" 7402 . 7423) (nil tag-type start 7402 . 7423) (nil tag-attr t 7401 . 7402) (nil tag-attr-end 0 7401 . 7402) (nil tag-name "v-select" 7401 . 7402) (nil tag-type start 7401 . 7402) (nil font-lock-face web-mode-html-attr-name-face 7401 . 7402) (nil tag-attr t 7398 . 7401) (nil tag-name "v-select" 7398 . 7401) (nil tag-type start 7398 . 7401) (nil font-lock-face web-mode-html-attr-name-face 7398 . 7401) (nil tag-attr-beg 0 7397 . 7398) (nil tag-attr t 7397 . 7398) (nil tag-name "v-select" 7397 . 7398) (nil tag-type start 7397 . 7398) (nil font-lock-face web-mode-html-attr-name-face 7397 . 7398) (nil tag-name "v-select" 7374 . 7397) (nil tag-type start 7374 . 7397) (nil tag-attr t 7373 . 7374) (nil tag-attr-end 0 7373 . 7374) (nil tag-name "v-select" 7373 . 7374) (nil tag-type start 7373 . 7374) (nil font-lock-face web-mode-html-attr-name-face 7373 . 7374) (nil tag-attr t 7366 . 7373) (nil tag-name "v-select" 7366 . 7373) (nil tag-type start 7366 . 7373) (nil font-lock-face web-mode-html-attr-name-face 7366 . 7373) (nil tag-attr-beg 0 7365 . 7366) (nil tag-attr t 7365 . 7366) (nil tag-name "v-select" 7365 . 7366) (nil tag-type start 7365 . 7366) (nil font-lock-face web-mode-html-attr-name-face 7365 . 7366) (nil tag-name "v-select" 7342 . 7365) (nil tag-type start 7342 . 7365) (nil tag-attr t 7341 . 7342) (nil tag-attr-end 11 7341 . 7342) (nil tag-name "v-select" 7341 . 7342) (nil tag-type start 7341 . 7342) (nil font-lock-face web-mode-html-attr-value-face 7341 . 7342) (nil tag-attr t 7340 . 7341) (nil tag-name "v-select" 7340 . 7341) (nil tag-type start 7340 . 7341) (nil font-lock-face web-mode-html-attr-value-face 7340 . 7341) (nil tag-attr t 7339 . 7340) (nil tag-name "v-select" 7339 . 7340) (nil tag-type start 7339 . 7340) (nil font-lock-face web-mode-html-attr-equal-face 7339 . 7340) (nil tag-attr t 7329 . 7339) (nil tag-name "v-select" 7329 . 7339) (nil tag-type start 7329 . 7339) (nil font-lock-face web-mode-html-attr-engine-face 7329 . 7339) (nil tag-attr-beg 2 7328 . 7329) (nil tag-attr t 7328 . 7329) (nil tag-name "v-select" 7328 . 7329) (nil tag-type start 7328 . 7329) (nil font-lock-face web-mode-html-attr-engine-face 7328 . 7329) (nil tag-name "v-select" 7305 . 7328) (nil tag-type start 7305 . 7328) (nil block-side t 7304 . 7305) (nil block-end t 7304 . 7305) (nil block-token delimiter-end 7304 . 7305) (nil tag-attr t 7304 . 7305) (nil tag-attr-end 15 7304 . 7305) (nil tag-name "v-select" 7304 . 7305) (nil tag-type start 7304 . 7305) (nil font-lock-face web-mode-block-delimiter-face 7304 . 7305) (nil block-side t 7301 . 7304) (nil tag-attr t 7301 . 7304) (nil tag-name "v-select" 7301 . 7304) (nil tag-type start 7301 . 7304) (nil block-side t 7300 . 7301) (nil tag-attr t 7300 . 7301) (nil tag-name "v-select" 7300 . 7301) (nil tag-type start 7300 . 7301) (nil face web-mode-variable-name-face 7300 . 7301) (nil block-side t 7299 . 7300) (nil tag-attr t 7299 . 7300) (nil tag-name "v-select" 7299 . 7300) (nil tag-type start 7299 . 7300) (nil face web-mode-variable-name-face 7299 . 7300) (nil block-side t 7298 . 7299) (nil tag-attr t 7298 . 7299) (nil tag-name "v-select" 7298 . 7299) (nil tag-type start 7298 . 7299) (nil block-side t 7297 . 7298) (nil tag-attr t 7297 . 7298) (nil tag-name "v-select" 7297 . 7298) (nil tag-type start 7297 . 7298) (nil face web-mode-variable-name-face 7297 . 7298) (nil block-side t 7296 . 7297) (nil tag-attr t 7296 . 7297) (nil tag-name "v-select" 7296 . 7297) (nil tag-type start 7296 . 7297) (nil face web-mode-variable-name-face 7296 . 7297) (nil block-side t 7295 . 7296) (nil tag-attr t 7295 . 7296) (nil tag-name "v-select" 7295 . 7296) (nil tag-type start 7295 . 7296) (nil face web-mode-variable-name-face 7295 . 7296) (nil block-side t 7294 . 7295) (nil tag-attr t 7294 . 7295) (nil tag-name "v-select" 7294 . 7295) (nil tag-type start 7294 . 7295) (nil face web-mode-variable-name-face 7294 . 7295) (nil block-side t 7293 . 7294) (nil tag-attr t 7293 . 7294) (nil tag-name "v-select" 7293 . 7294) (nil tag-type start 7293 . 7294) (nil face web-mode-variable-name-face 7293 . 7294) (nil block-side t 7292 . 7293) (nil tag-attr t 7292 . 7293) (nil tag-name "v-select" 7292 . 7293) (nil tag-type start 7292 . 7293) (nil face web-mode-variable-name-face 7292 . 7293) (nil block-side t 7290 . 7292) (nil tag-attr t 7290 . 7292) (nil tag-name "v-select" 7290 . 7292) (nil tag-type start 7290 . 7292) (nil block-side t 7289 . 7290) (nil tag-attr t 7289 . 7290) (nil tag-name "v-select" 7289 . 7290) (nil tag-type start 7289 . 7290) (nil face web-mode-variable-name-face 7289 . 7290) (nil block-side t 7288 . 7289) (nil tag-attr t 7288 . 7289) (nil tag-name "v-select" 7288 . 7289) (nil tag-type start 7288 . 7289) (nil face web-mode-variable-name-face 7288 . 7289) (nil block-side t 7287 . 7288) (nil tag-attr t 7287 . 7288) (nil tag-name "v-select" 7287 . 7288) (nil tag-type start 7287 . 7288) (nil face web-mode-variable-name-face 7287 . 7288) (nil block-side t 7286 . 7287) (nil tag-attr t 7286 . 7287) (nil tag-name "v-select" 7286 . 7287) (nil tag-type start 7286 . 7287) (nil face web-mode-variable-name-face 7286 . 7287) (nil block-side t 7285 . 7286) (nil tag-attr t 7285 . 7286) (nil tag-name "v-select" 7285 . 7286) (nil tag-type start 7285 . 7286) (nil block-side t 7284 . 7285) (nil tag-attr t 7284 . 7285) (nil tag-name "v-select" 7284 . 7285) (nil tag-type start 7284 . 7285) (nil face web-mode-variable-name-face 7284 . 7285) (nil block-side t 7283 . 7284) (nil tag-attr t 7283 . 7284) (nil tag-name "v-select" 7283 . 7284) (nil tag-type start 7283 . 7284) (nil face web-mode-variable-name-face 7283 . 7284) (nil block-side t 7282 . 7283) (nil tag-attr t 7282 . 7283) (nil tag-name "v-select" 7282 . 7283) (nil tag-type start 7282 . 7283) (nil face web-mode-variable-name-face 7282 . 7283) (nil block-side t 7281 . 7282) (nil tag-attr t 7281 . 7282) (nil tag-name "v-select" 7281 . 7282) (nil tag-type start 7281 . 7282) (nil face web-mode-variable-name-face 7281 . 7282) (nil block-side t 7280 . 7281) (nil tag-attr t 7280 . 7281) (nil tag-name "v-select" 7280 . 7281) (nil tag-type start 7280 . 7281) (nil face web-mode-variable-name-face 7280 . 7281) (nil block-side t 7279 . 7280) (nil tag-attr t 7279 . 7280) (nil tag-name "v-select" 7279 . 7280) (nil tag-type start 7279 . 7280) (nil face web-mode-variable-name-face 7279 . 7280) (nil block-side t 7278 . 7279) (nil tag-attr t 7278 . 7279) (nil tag-name "v-select" 7278 . 7279) (nil tag-type start 7278 . 7279) (nil face web-mode-variable-name-face 7278 . 7279) (nil block-side t 7277 . 7278) (nil tag-attr t 7277 . 7278) (nil tag-name "v-select" 7277 . 7278) (nil tag-type start 7277 . 7278) (nil face web-mode-variable-name-face 7277 . 7278) (nil block-side t 7276 . 7277) (nil tag-attr t 7276 . 7277) (nil tag-name "v-select" 7276 . 7277) (nil tag-type start 7276 . 7277) (nil face web-mode-variable-name-face 7276 . 7277) (nil block-side t 7275 . 7276) (nil tag-attr t 7275 . 7276) (nil tag-name "v-select" 7275 . 7276) (nil tag-type start 7275 . 7276) (nil face web-mode-variable-name-face 7275 . 7276) (nil block-side t 7274 . 7275) (nil tag-attr t 7274 . 7275) (nil tag-name "v-select" 7274 . 7275) (nil tag-type start 7274 . 7275) (nil face web-mode-variable-name-face 7274 . 7275) (nil block-side t 7273 . 7274) (nil tag-attr t 7273 . 7274) (nil tag-name "v-select" 7273 . 7274) (nil tag-type start 7273 . 7274) (nil face web-mode-variable-name-face 7273 . 7274) (nil block-side t 7272 . 7273) (nil block-token delimiter-beg 7272 . 7273) (nil tag-attr t 7272 . 7273) (nil tag-name "v-select" 7272 . 7273) (nil tag-type start 7272 . 7273) (nil font-lock-face web-mode-block-delimiter-face 7272 . 7273) (nil block-side t 7271 . 7272) (nil block-token delimiter-beg 7271 . 7272) (nil tag-attr t 7271 . 7272) (nil tag-name "v-select" 7271 . 7272) (nil tag-type start 7271 . 7272) (nil font-lock-face web-mode-block-delimiter-face 7271 . 7272) (nil block-side t 7270 . 7271) (nil block-token delimiter-beg 7270 . 7271) (nil tag-attr t 7270 . 7271) (nil tag-name "v-select" 7270 . 7271) (nil tag-type start 7270 . 7271) (nil font-lock-face web-mode-block-delimiter-face 7270 . 7271) (nil block-side t 7269 . 7270) (nil block-token delimiter-beg 7269 . 7270) (nil tag-attr t 7269 . 7270) (nil tag-name "v-select" 7269 . 7270) (nil tag-type start 7269 . 7270) (nil font-lock-face web-mode-block-delimiter-face 7269 . 7270) (nil block-side t 7268 . 7269) (nil block-token delimiter-beg 7268 . 7269) (nil tag-attr t 7268 . 7269) (nil tag-name "v-select" 7268 . 7269) (nil tag-type start 7268 . 7269) (nil font-lock-face web-mode-block-delimiter-face 7268 . 7269) (nil block-side t 7267 . 7268) (nil block-token delimiter-beg 7267 . 7268) (nil tag-attr t 7267 . 7268) (nil tag-name "v-select" 7267 . 7268) (nil tag-type start 7267 . 7268) (nil font-lock-face web-mode-block-delimiter-face 7267 . 7268) (nil block-side t 7266 . 7267) (nil block-token delimiter-beg 7266 . 7267) (nil tag-attr t 7266 . 7267) (nil tag-name "v-select" 7266 . 7267) (nil tag-type start 7266 . 7267) (nil font-lock-face web-mode-block-delimiter-face 7266 . 7267) (nil block-side t 7265 . 7266) (nil block-token delimiter-beg 7265 . 7266) (nil tag-attr t 7265 . 7266) (nil tag-name "v-select" 7265 . 7266) (nil tag-type start 7265 . 7266) (nil font-lock-face web-mode-block-delimiter-face 7265 . 7266) (nil block-side t 7264 . 7265) (nil block-token delimiter-beg 7264 . 7265) (nil tag-attr t 7264 . 7265) (nil tag-name "v-select" 7264 . 7265) (nil tag-type start 7264 . 7265) (nil font-lock-face web-mode-block-delimiter-face 7264 . 7265) (nil block-side t 7263 . 7264) (nil block-token delimiter-beg 7263 . 7264) (nil tag-attr t 7263 . 7264) (nil tag-name "v-select" 7263 . 7264) (nil tag-type start 7263 . 7264) (nil font-lock-face web-mode-block-delimiter-face 7263 . 7264) (nil block-side t 7262 . 7263) (nil block-token delimiter-beg 7262 . 7263) (nil tag-attr t 7262 . 7263) (nil tag-name "v-select" 7262 . 7263) (nil tag-type start 7262 . 7263) (nil font-lock-face web-mode-block-delimiter-face 7262 . 7263) (nil block-side t 7261 . 7262) (nil block-token delimiter-beg 7261 . 7262) (nil tag-attr t 7261 . 7262) (nil tag-name "v-select" 7261 . 7262) (nil tag-type start 7261 . 7262) (nil font-lock-face web-mode-block-delimiter-face 7261 . 7262) (nil block-side t 7260 . 7261) (nil block-token delimiter-beg 7260 . 7261) (nil tag-attr t 7260 . 7261) (nil tag-name "v-select" 7260 . 7261) (nil tag-type start 7260 . 7261) (nil font-lock-face web-mode-block-delimiter-face 7260 . 7261) (nil block-side t 7259 . 7260) (nil block-token delimiter-beg 7259 . 7260) (nil tag-attr t 7259 . 7260) (nil tag-name "v-select" 7259 . 7260) (nil tag-type start 7259 . 7260) (nil font-lock-face web-mode-block-delimiter-face 7259 . 7260) (nil block-side t 7258 . 7259) (nil block-token delimiter-beg 7258 . 7259) (nil tag-attr t 7258 . 7259) (nil tag-name "v-select" 7258 . 7259) (nil tag-type start 7258 . 7259) (nil font-lock-face web-mode-block-delimiter-face 7258 . 7259) (nil block-side t 7257 . 7258) (nil block-token delimiter-beg 7257 . 7258) (nil tag-attr t 7257 . 7258) (nil tag-name "v-select" 7257 . 7258) (nil tag-type start 7257 . 7258) (nil font-lock-face web-mode-block-delimiter-face 7257 . 7258) (nil block-beg 0 7256 . 7257) (nil block-controls 0 7256 . 7257) (nil block-side t 7256 . 7257) (nil block-token delimiter-beg 7256 . 7257) (nil tag-attr-beg 2 7256 . 7257) (nil tag-attr t 7256 . 7257) (nil tag-name "v-select" 7256 . 7257) (nil tag-type start 7256 . 7257) (nil font-lock-face web-mode-block-delimiter-face 7256 . 7257) (nil tag-name "v-select" 7233 . 7256) (nil tag-type start 7233 . 7256) (nil block-side t 7232 . 7233) (nil block-end t 7232 . 7233) (nil block-token delimiter-end 7232 . 7233) (nil tag-attr t 7232 . 7233) (nil tag-attr-end 6 7232 . 7233) (nil tag-name "v-select" 7232 . 7233) (nil tag-type start 7232 . 7233) (nil font-lock-face web-mode-block-delimiter-face 7232 . 7233) (nil block-side t 7231 . 7232) (nil tag-attr t 7231 . 7232) (nil tag-name "v-select" 7231 . 7232) (nil tag-type start 7231 . 7232) (nil face web-mode-variable-name-face 7231 . 7232) (nil block-side t 7230 . 7231) (nil tag-attr t 7230 . 7231) (nil tag-name "v-select" 7230 . 7231) (nil tag-type start 7230 . 7231) (nil face web-mode-variable-name-face 7230 . 7231) (nil block-side t 7229 . 7230) (nil tag-attr t 7229 . 7230) (nil tag-name "v-select" 7229 . 7230) (nil tag-type start 7229 . 7230) (nil face web-mode-variable-name-face 7229 . 7230) (nil block-side t 7228 . 7229) (nil tag-attr t 7228 . 7229) (nil tag-name "v-select" 7228 . 7229) (nil tag-type start 7228 . 7229) (nil face web-mode-variable-name-face 7228 . 7229) (nil block-side t 7227 . 7228) (nil tag-attr t 7227 . 7228) (nil tag-name "v-select" 7227 . 7228) (nil tag-type start 7227 . 7228) (nil face web-mode-variable-name-face 7227 . 7228) (nil block-side t 7226 . 7227) (nil tag-attr t 7226 . 7227) (nil tag-name "v-select" 7226 . 7227) (nil tag-type start 7226 . 7227) (nil face web-mode-variable-name-face 7226 . 7227) (nil block-side t 7225 . 7226) (nil tag-attr t 7225 . 7226) (nil tag-name "v-select" 7225 . 7226) (nil tag-type start 7225 . 7226) (nil face web-mode-variable-name-face 7225 . 7226) (nil block-side t 7224 . 7225) (nil tag-attr t 7224 . 7225) (nil tag-name "v-select" 7224 . 7225) (nil tag-type start 7224 . 7225) (nil face web-mode-variable-name-face 7224 . 7225) (nil block-side t 7223 . 7224) (nil tag-attr t 7223 . 7224) (nil tag-name "v-select" 7223 . 7224) (nil tag-type start 7223 . 7224) (nil face web-mode-variable-name-face 7223 . 7224) (nil block-side t 7222 . 7223) (nil tag-attr t 7222 . 7223) (nil tag-name "v-select" 7222 . 7223) (nil tag-type start 7222 . 7223) (nil face web-mode-variable-name-face 7222 . 7223) (nil block-side t 7221 . 7222) (nil tag-attr t 7221 . 7222) (nil tag-name "v-select" 7221 . 7222) (nil tag-type start 7221 . 7222) (nil face web-mode-variable-name-face 7221 . 7222) (nil block-side t 7220 . 7221) (nil tag-attr t 7220 . 7221) (nil tag-name "v-select" 7220 . 7221) (nil tag-type start 7220 . 7221) (nil face web-mode-variable-name-face 7220 . 7221) (nil block-side t 7219 . 7220) (nil tag-attr t 7219 . 7220) (nil tag-name "v-select" 7219 . 7220) (nil tag-type start 7219 . 7220) (nil face web-mode-variable-name-face 7219 . 7220) (nil block-side t 7218 . 7219) (nil tag-attr t 7218 . 7219) (nil tag-name "v-select" 7218 . 7219) (nil tag-type start 7218 . 7219) (nil face web-mode-variable-name-face 7218 . 7219) (nil block-side t 7217 . 7218) (nil tag-attr t 7217 . 7218) (nil tag-name "v-select" 7217 . 7218) (nil tag-type start 7217 . 7218) (nil face web-mode-variable-name-face 7217 . 7218) (nil block-side t 7216 . 7217) (nil tag-attr t 7216 . 7217) (nil tag-name "v-select" 7216 . 7217) (nil tag-type start 7216 . 7217) (nil face web-mode-variable-name-face 7216 . 7217) (nil block-side t 7215 . 7216) (nil tag-attr t 7215 . 7216) (nil tag-name "v-select" 7215 . 7216) (nil tag-type start 7215 . 7216) (nil face web-mode-variable-name-face 7215 . 7216) (nil block-side t 7214 . 7215) (nil tag-attr t 7214 . 7215) (nil tag-name "v-select" 7214 . 7215) (nil tag-type start 7214 . 7215) (nil face web-mode-variable-name-face 7214 . 7215) (nil block-side t 7213 . 7214) (nil tag-attr t 7213 . 7214) (nil tag-name "v-select" 7213 . 7214) (nil tag-type start 7213 . 7214) (nil face web-mode-variable-name-face 7213 . 7214) (nil block-side t 7212 . 7213) (nil tag-attr t 7212 . 7213) (nil tag-name "v-select" 7212 . 7213) (nil tag-type start 7212 . 7213) (nil face web-mode-variable-name-face 7212 . 7213) (nil block-side t 7211 . 7212) (nil tag-attr t 7211 . 7212) (nil tag-name "v-select" 7211 . 7212) (nil tag-type start 7211 . 7212) (nil face web-mode-variable-name-face 7211 . 7212) (nil block-side t 7210 . 7211) (nil block-token delimiter-beg 7210 . 7211) (nil tag-attr t 7210 . 7211) (nil tag-name "v-select" 7210 . 7211) (nil tag-type start 7210 . 7211) (nil font-lock-face web-mode-block-delimiter-face 7210 . 7211) (nil block-side t 7209 . 7210) (nil block-token delimiter-beg 7209 . 7210) (nil tag-attr t 7209 . 7210) (nil tag-name "v-select" 7209 . 7210) (nil tag-type start 7209 . 7210) (nil font-lock-face web-mode-block-delimiter-face 7209 . 7210) (nil block-side t 7208 . 7209) (nil block-token delimiter-beg 7208 . 7209) (nil tag-attr t 7208 . 7209) (nil tag-name "v-select" 7208 . 7209) (nil tag-type start 7208 . 7209) (nil font-lock-face web-mode-block-delimiter-face 7208 . 7209) (nil block-side t 7207 . 7208) (nil block-token delimiter-beg 7207 . 7208) (nil tag-attr t 7207 . 7208) (nil tag-name "v-select" 7207 . 7208) (nil tag-type start 7207 . 7208) (nil font-lock-face web-mode-block-delimiter-face 7207 . 7208) (nil block-side t 7206 . 7207) (nil block-token delimiter-beg 7206 . 7207) (nil tag-attr t 7206 . 7207) (nil tag-name "v-select" 7206 . 7207) (nil tag-type start 7206 . 7207) (nil font-lock-face web-mode-block-delimiter-face 7206 . 7207) (nil block-side t 7205 . 7206) (nil block-token delimiter-beg 7205 . 7206) (nil tag-attr t 7205 . 7206) (nil tag-name "v-select" 7205 . 7206) (nil tag-type start 7205 . 7206) (nil font-lock-face web-mode-block-delimiter-face 7205 . 7206) (nil block-side t 7204 . 7205) (nil block-token delimiter-beg 7204 . 7205) (nil tag-attr t 7204 . 7205) (nil tag-name "v-select" 7204 . 7205) (nil tag-type start 7204 . 7205) (nil font-lock-face web-mode-block-delimiter-face 7204 . 7205) (nil block-beg 0 7203 . 7204) (nil block-controls 0 7203 . 7204) (nil block-side t 7203 . 7204) (nil block-token delimiter-beg 7203 . 7204) (nil tag-attr-beg 2 7203 . 7204) (nil tag-attr t 7203 . 7204) (nil tag-name "v-select" 7203 . 7204) (nil tag-type start 7203 . 7204) (nil font-lock-face web-mode-block-delimiter-face 7203 . 7204) (nil tag-name "v-select" 7180 . 7203) (nil tag-type start 7180 . 7203) (nil block-side t 7179 . 7180) (nil block-end t 7179 . 7180) (nil block-token delimiter-end 7179 . 7180) (nil tag-attr t 7179 . 7180) (nil tag-attr-end 7 7179 . 7180) (nil tag-name "v-select" 7179 . 7180) (nil tag-type start 7179 . 7180) (nil font-lock-face web-mode-block-delimiter-face 7179 . 7180) (nil block-side t 7176 . 7179) (nil tag-attr t 7176 . 7179) (nil tag-name "v-select" 7176 . 7179) (nil tag-type start 7176 . 7179) (nil block-side t 7175 . 7176) (nil tag-attr t 7175 . 7176) (nil tag-name "v-select" 7175 . 7176) (nil tag-type start 7175 . 7176) (nil face web-mode-variable-name-face 7175 . 7176) (nil block-side t 7174 . 7175) (nil tag-attr t 7174 . 7175) (nil tag-name "v-select" 7174 . 7175) (nil tag-type start 7174 . 7175) (nil face web-mode-variable-name-face 7174 . 7175) (nil block-side t 7173 . 7174) (nil tag-attr t 7173 . 7174) (nil tag-name "v-select" 7173 . 7174) (nil tag-type start 7173 . 7174) (nil block-side t 7172 . 7173) (nil tag-attr t 7172 . 7173) (nil tag-name "v-select" 7172 . 7173) (nil tag-type start 7172 . 7173) (nil face web-mode-variable-name-face 7172 . 7173) (nil block-side t 7171 . 7172) (nil tag-attr t 7171 . 7172) (nil tag-name "v-select" 7171 . 7172) (nil tag-type start 7171 . 7172) (nil face web-mode-variable-name-face 7171 . 7172) (nil block-side t 7170 . 7171) (nil tag-attr t 7170 . 7171) (nil tag-name "v-select" 7170 . 7171) (nil tag-type start 7170 . 7171) (nil face web-mode-variable-name-face 7170 . 7171) (nil block-side t 7169 . 7170) (nil tag-attr t 7169 . 7170) (nil tag-name "v-select" 7169 . 7170) (nil tag-type start 7169 . 7170) (nil face web-mode-variable-name-face 7169 . 7170) (nil block-side t 7168 . 7169) (nil tag-attr t 7168 . 7169) (nil tag-name "v-select" 7168 . 7169) (nil tag-type start 7168 . 7169) (nil face web-mode-variable-name-face 7168 . 7169) (nil block-side t 7167 . 7168) (nil tag-attr t 7167 . 7168) (nil tag-name "v-select" 7167 . 7168) (nil tag-type start 7167 . 7168) (nil face web-mode-variable-name-face 7167 . 7168) (nil block-side t 7165 . 7167) (nil tag-attr t 7165 . 7167) (nil tag-name "v-select" 7165 . 7167) (nil tag-type start 7165 . 7167) (nil block-side t 7164 . 7165) (nil tag-attr t 7164 . 7165) (nil tag-name "v-select" 7164 . 7165) (nil tag-type start 7164 . 7165) (nil face web-mode-variable-name-face 7164 . 7165) (nil block-side t 7163 . 7164) (nil tag-attr t 7163 . 7164) (nil tag-name "v-select" 7163 . 7164) (nil tag-type start 7163 . 7164) (nil face web-mode-variable-name-face 7163 . 7164) (nil block-side t 7162 . 7163) (nil tag-attr t 7162 . 7163) (nil tag-name "v-select" 7162 . 7163) (nil tag-type start 7162 . 7163) (nil face web-mode-variable-name-face 7162 . 7163) (nil block-side t 7161 . 7162) (nil tag-attr t 7161 . 7162) (nil tag-name "v-select" 7161 . 7162) (nil tag-type start 7161 . 7162) (nil face web-mode-variable-name-face 7161 . 7162) (nil block-side t 7160 . 7161) (nil tag-attr t 7160 . 7161) (nil tag-name "v-select" 7160 . 7161) (nil tag-type start 7160 . 7161) (nil block-side t 7138 . 7160) (nil tag-attr t 7138 . 7160) (nil tag-name "v-select" 7138 . 7160) (nil tag-type start 7138 . 7160) (nil face web-mode-function-call-face 7138 . 7160) (nil block-side t 7137 . 7138) (nil block-token delimiter-beg 7137 . 7138) (nil tag-attr t 7137 . 7138) (nil tag-name "v-select" 7137 . 7138) (nil tag-type start 7137 . 7138) (nil font-lock-face web-mode-block-delimiter-face 7137 . 7138) (nil block-side t 7136 . 7137) (nil block-token delimiter-beg 7136 . 7137) (nil tag-attr t 7136 . 7137) (nil tag-name "v-select" 7136 . 7137) (nil tag-type start 7136 . 7137) (nil font-lock-face web-mode-block-delimiter-face 7136 . 7137) (nil block-side t 7135 . 7136) (nil block-token delimiter-beg 7135 . 7136) (nil tag-attr t 7135 . 7136) (nil tag-name "v-select" 7135 . 7136) (nil tag-type start 7135 . 7136) (nil font-lock-face web-mode-block-delimiter-face 7135 . 7136) (nil block-side t 7134 . 7135) (nil block-token delimiter-beg 7134 . 7135) (nil tag-attr t 7134 . 7135) (nil tag-name "v-select" 7134 . 7135) (nil tag-type start 7134 . 7135) (nil font-lock-face web-mode-block-delimiter-face 7134 . 7135) (nil block-side t 7133 . 7134) (nil block-token delimiter-beg 7133 . 7134) (nil tag-attr t 7133 . 7134) (nil tag-name "v-select" 7133 . 7134) (nil tag-type start 7133 . 7134) (nil font-lock-face web-mode-block-delimiter-face 7133 . 7134) (nil block-side t 7132 . 7133) (nil block-token delimiter-beg 7132 . 7133) (nil tag-attr t 7132 . 7133) (nil tag-name "v-select" 7132 . 7133) (nil tag-type start 7132 . 7133) (nil font-lock-face web-mode-block-delimiter-face 7132 . 7133) (nil block-side t 7131 . 7132) (nil block-token delimiter-beg 7131 . 7132) (nil tag-attr t 7131 . 7132) (nil tag-name "v-select" 7131 . 7132) (nil tag-type start 7131 . 7132) (nil font-lock-face web-mode-block-delimiter-face 7131 . 7132) (nil block-side t 7130 . 7131) (nil block-token delimiter-beg 7130 . 7131) (nil tag-attr t 7130 . 7131) (nil tag-name "v-select" 7130 . 7131) (nil tag-type start 7130 . 7131) (nil font-lock-face web-mode-block-delimiter-face 7130 . 7131) (nil block-beg 0 7129 . 7130) (nil block-controls 0 7129 . 7130) (nil block-side t 7129 . 7130) (nil block-token delimiter-beg 7129 . 7130) (nil tag-attr-beg 2 7129 . 7130) (nil tag-attr t 7129 . 7130) (nil tag-name "v-select" 7129 . 7130) (nil tag-type start 7129 . 7130) (nil font-lock-face web-mode-block-delimiter-face 7129 . 7130) (nil tag-name "v-select" 7106 . 7129) (nil tag-type start 7106 . 7129) (nil block-side t 7105 . 7106) (nil block-end t 7105 . 7106) (nil block-token delimiter-end 7105 . 7106) (nil tag-attr t 7105 . 7106) (nil tag-attr-end 6 7105 . 7106) (nil tag-name "v-select" 7105 . 7106) (nil tag-type start 7105 . 7106) (nil font-lock-face web-mode-block-delimiter-face 7105 . 7106) (nil block-side t 7097 . 7105) (nil tag-attr t 7097 . 7105) (nil tag-name "v-select" 7097 . 7105) (nil tag-type start 7097 . 7105) (nil block-side t 7096 . 7097) (nil tag-attr t 7096 . 7097) (nil tag-name "v-select" 7096 . 7097) (nil tag-type start 7096 . 7097) (nil face web-mode-variable-name-face 7096 . 7097) (nil block-side t 7095 . 7096) (nil tag-attr t 7095 . 7096) (nil tag-name "v-select" 7095 . 7096) (nil tag-type start 7095 . 7096) (nil face web-mode-variable-name-face 7095 . 7096) (nil block-side t 7094 . 7095) (nil tag-attr t 7094 . 7095) (nil tag-name "v-select" 7094 . 7095) (nil tag-type start 7094 . 7095) (nil block-side t 7093 . 7094) (nil tag-attr t 7093 . 7094) (nil tag-name "v-select" 7093 . 7094) (nil tag-type start 7093 . 7094) (nil face web-mode-variable-name-face 7093 . 7094) (nil block-side t 7092 . 7093) (nil tag-attr t 7092 . 7093) (nil tag-name "v-select" 7092 . 7093) (nil tag-type start 7092 . 7093) (nil face web-mode-variable-name-face 7092 . 7093) (nil block-side t 7091 . 7092) (nil tag-attr t 7091 . 7092) (nil tag-name "v-select" 7091 . 7092) (nil tag-type start 7091 . 7092) (nil face web-mode-variable-name-face 7091 . 7092) (nil block-side t 7090 . 7091) (nil tag-attr t 7090 . 7091) (nil tag-name "v-select" 7090 . 7091) (nil tag-type start 7090 . 7091) (nil face web-mode-variable-name-face 7090 . 7091) (nil block-side t 7089 . 7090) (nil tag-attr t 7089 . 7090) (nil tag-name "v-select" 7089 . 7090) (nil tag-type start 7089 . 7090) (nil face web-mode-variable-name-face 7089 . 7090) (nil block-side t 7088 . 7089) (nil tag-attr t 7088 . 7089) (nil tag-name "v-select" 7088 . 7089) (nil tag-type start 7088 . 7089) (nil face web-mode-variable-name-face 7088 . 7089) (nil block-side t 7086 . 7088) (nil tag-attr t 7086 . 7088) (nil tag-name "v-select" 7086 . 7088) (nil tag-type start 7086 . 7088) (nil block-side t 7085 . 7086) (nil tag-attr t 7085 . 7086) (nil tag-name "v-select" 7085 . 7086) (nil tag-type start 7085 . 7086) (nil face web-mode-variable-name-face 7085 . 7086) (nil block-side t 7084 . 7085) (nil tag-attr t 7084 . 7085) (nil tag-name "v-select" 7084 . 7085) (nil tag-type start 7084 . 7085) (nil face web-mode-variable-name-face 7084 . 7085) (nil block-side t 7083 . 7084) (nil tag-attr t 7083 . 7084) (nil tag-name "v-select" 7083 . 7084) (nil tag-type start 7083 . 7084) (nil face web-mode-variable-name-face 7083 . 7084) (nil block-side t 7082 . 7083) (nil tag-attr t 7082 . 7083) (nil tag-name "v-select" 7082 . 7083) (nil tag-type start 7082 . 7083) (nil face web-mode-variable-name-face 7082 . 7083) (nil block-side t 7081 . 7082) (nil tag-attr t 7081 . 7082) (nil tag-name "v-select" 7081 . 7082) (nil tag-type start 7081 . 7082) (nil block-side t 7080 . 7081) (nil tag-attr t 7080 . 7081) (nil tag-name "v-select" 7080 . 7081) (nil tag-type start 7080 . 7081) (nil face web-mode-variable-name-face 7080 . 7081) (nil block-side t 7079 . 7080) (nil tag-attr t 7079 . 7080) (nil tag-name "v-select" 7079 . 7080) (nil tag-type start 7079 . 7080) (nil face web-mode-variable-name-face 7079 . 7080) (nil block-side t 7078 . 7079) (nil tag-attr t 7078 . 7079) (nil tag-name "v-select" 7078 . 7079) (nil tag-type start 7078 . 7079) (nil face web-mode-variable-name-face 7078 . 7079) (nil block-side t 7077 . 7078) (nil tag-attr t 7077 . 7078) (nil tag-name "v-select" 7077 . 7078) (nil tag-type start 7077 . 7078) (nil face web-mode-variable-name-face 7077 . 7078) (nil block-side t 7076 . 7077) (nil tag-attr t 7076 . 7077) (nil tag-name "v-select" 7076 . 7077) (nil tag-type start 7076 . 7077) (nil face web-mode-variable-name-face 7076 . 7077) (nil block-side t 7075 . 7076) (nil tag-attr t 7075 . 7076) (nil tag-name "v-select" 7075 . 7076) (nil tag-type start 7075 . 7076) (nil face web-mode-variable-name-face 7075 . 7076) (nil block-side t 7074 . 7075) (nil tag-attr t 7074 . 7075) (nil tag-name "v-select" 7074 . 7075) (nil tag-type start 7074 . 7075) (nil face web-mode-variable-name-face 7074 . 7075) (nil block-side t 7073 . 7074) (nil tag-attr t 7073 . 7074) (nil tag-name "v-select" 7073 . 7074) (nil tag-type start 7073 . 7074) (nil face web-mode-variable-name-face 7073 . 7074) (nil block-side t 7072 . 7073) (nil tag-attr t 7072 . 7073) (nil tag-name "v-select" 7072 . 7073) (nil tag-type start 7072 . 7073) (nil face web-mode-variable-name-face 7072 . 7073) (nil block-side t 7071 . 7072) (nil tag-attr t 7071 . 7072) (nil tag-name "v-select" 7071 . 7072) (nil tag-type start 7071 . 7072) (nil face web-mode-variable-name-face 7071 . 7072) (nil block-side t 7070 . 7071) (nil tag-attr t 7070 . 7071) (nil tag-name "v-select" 7070 . 7071) (nil tag-type start 7070 . 7071) (nil face web-mode-variable-name-face 7070 . 7071) (nil block-side t 7069 . 7070) (nil tag-attr t 7069 . 7070) (nil tag-name "v-select" 7069 . 7070) (nil tag-type start 7069 . 7070) (nil face web-mode-variable-name-face 7069 . 7070) (nil block-side t 7068 . 7069) (nil block-token delimiter-beg 7068 . 7069) (nil tag-attr t 7068 . 7069) (nil tag-name "v-select" 7068 . 7069) (nil tag-type start 7068 . 7069) (nil font-lock-face web-mode-block-delimiter-face 7068 . 7069) (nil block-side t 7067 . 7068) (nil block-token delimiter-beg 7067 . 7068) (nil tag-attr t 7067 . 7068) (nil tag-name "v-select" 7067 . 7068) (nil tag-type start 7067 . 7068) (nil font-lock-face web-mode-block-delimiter-face 7067 . 7068) (nil block-side t 7066 . 7067) (nil block-token delimiter-beg 7066 . 7067) (nil tag-attr t 7066 . 7067) (nil tag-name "v-select" 7066 . 7067) (nil tag-type start 7066 . 7067) (nil font-lock-face web-mode-block-delimiter-face 7066 . 7067) (nil block-side t 7065 . 7066) (nil block-token delimiter-beg 7065 . 7066) (nil tag-attr t 7065 . 7066) (nil tag-name "v-select" 7065 . 7066) (nil tag-type start 7065 . 7066) (nil font-lock-face web-mode-block-delimiter-face 7065 . 7066) (nil block-side t 7064 . 7065) (nil block-token delimiter-beg 7064 . 7065) (nil tag-attr t 7064 . 7065) (nil tag-name "v-select" 7064 . 7065) (nil tag-type start 7064 . 7065) (nil font-lock-face web-mode-block-delimiter-face 7064 . 7065) (nil block-side t 7063 . 7064) (nil block-token delimiter-beg 7063 . 7064) (nil tag-attr t 7063 . 7064) (nil tag-name "v-select" 7063 . 7064) (nil tag-type start 7063 . 7064) (nil font-lock-face web-mode-block-delimiter-face 7063 . 7064) (nil block-side t 7062 . 7063) (nil block-token delimiter-beg 7062 . 7063) (nil tag-attr t 7062 . 7063) (nil tag-name "v-select" 7062 . 7063) (nil tag-type start 7062 . 7063) (nil font-lock-face web-mode-block-delimiter-face 7062 . 7063) (nil block-beg 0 7061 . 7062) (nil block-controls 0 7061 . 7062) (nil block-side t 7061 . 7062) (nil block-token delimiter-beg 7061 . 7062) (nil tag-attr-beg 2 7061 . 7062) (nil tag-attr t 7061 . 7062) (nil tag-name "v-select" 7061 . 7062) (nil tag-type start 7061 . 7062) (nil font-lock-face web-mode-block-delimiter-face 7061 . 7062) (nil tag-name "v-select" 7038 . 7061) (nil tag-type start 7038 . 7061) (nil tag-attr t 7037 . 7038) (nil tag-attr-end 7 7037 . 7038) (nil tag-name "v-select" 7037 . 7038) (nil tag-type start 7037 . 7038) (nil font-lock-face web-mode-html-attr-value-face 7037 . 7038) (nil tag-attr t 7002 . 7037) (nil tag-name "v-select" 7002 . 7037) (nil tag-type start 7002 . 7037) (nil font-lock-face web-mode-html-attr-value-face 7002 . 7037) (nil tag-attr t 7001 . 7002) (nil tag-name "v-select" 7001 . 7002) (nil tag-type start 7001 . 7002) (nil font-lock-face web-mode-html-attr-equal-face 7001 . 7002) (nil tag-attr t 6995 . 7001) (nil tag-name "v-select" 6995 . 7001) (nil tag-type start 6995 . 7001) (nil font-lock-face web-mode-html-attr-engine-face 6995 . 7001) (nil tag-attr-beg 2 6994 . 6995) (nil tag-attr t 6994 . 6995) (nil tag-name "v-select" 6994 . 6995) (nil tag-type start 6994 . 6995) (nil font-lock-face web-mode-html-attr-engine-face 6994 . 6995) (nil tag-name "v-select" 6971 . 6994) (nil tag-type start 6971 . 6994) (nil tag-attr t 6970 . 6971) (nil tag-attr-end 5 6970 . 6971) (nil tag-name "v-select" 6970 . 6971) (nil tag-type start 6970 . 6971) (nil font-lock-face web-mode-html-attr-value-face 6970 . 6971) (nil tag-attr t 6955 . 6970) (nil tag-name "v-select" 6955 . 6970) (nil tag-type start 6955 . 6970) (nil font-lock-face web-mode-html-attr-value-face 6955 . 6970) (nil tag-attr t 6954 . 6955) (nil tag-name "v-select" 6954 . 6955) (nil tag-type start 6954 . 6955) (nil font-lock-face web-mode-html-attr-equal-face 6954 . 6955) (nil tag-attr t 6950 . 6954) (nil tag-name "v-select" 6950 . 6954) (nil tag-type start 6950 . 6954) (nil font-lock-face web-mode-html-attr-name-face 6950 . 6954) (nil tag-attr-beg 0 6949 . 6950) (nil tag-attr t 6949 . 6950) (nil tag-name "v-select" 6949 . 6950) (nil tag-type start 6949 . 6950) (nil font-lock-face web-mode-html-attr-name-face 6949 . 6950) (nil tag-name "v-select" 6926 . 6949) (nil tag-type start 6926 . 6949) (nil tag-name "v-select" 6918 . 6926) (nil tag-type start 6918 . 6926) (nil font-lock-face web-mode-html-tag-custom-face 6918 . 6926) (nil tag-name "v-select" 6917 . 6918) (nil tag-type start 6917 . 6918) (nil tag-beg 19 6917 . 6918) (nil font-lock-face web-mode-html-tag-bracket-face 6917 . 6918) (6917 . 7435)) nil (25671 38769 680810 555000) 0 nil])
([nil nil ((#("    " 0 4 (tag-name "v-select" tag-type start)) . -7419) 7435) nil (25671 38769 680158 186000) 0 nil])
([nil nil ((5245 . 5258) (t 25671 38769 688654 370000)) nil (25671 38841 421904 587000) 0 nil])
([nil nil ((5258 . 5267)) nil (25671 38841 421903 325000) 0 nil])
([nil nil ((5263 . 5277) (5264 . 5276) (#("              " 0 14 (face whitespace-trailing)) . 5263) (5263 . 5277) (5263 . 5264) ("            " . 5263) (5262 . 5275)) nil (25671 38841 421901 496000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5435 . 5436) (nil rear-nonsticky t 5435 . 5436) (nil tag-name "v-btn" 5435 . 5436) (nil tag-type end 5435 . 5436) (nil tag-end t 5435 . 5436) (nil font-lock-face web-mode-html-tag-bracket-face 5435 . 5436) (nil tag-name "v-btn" 5430 . 5435) (nil tag-type end 5430 . 5435) (nil font-lock-face web-mode-html-tag-custom-face 5430 . 5435) (nil tag-name "v-btn" 5429 . 5430) (nil tag-type end 5429 . 5430) (nil font-lock-face web-mode-html-tag-bracket-face 5429 . 5430) (nil tag-name "v-btn" 5428 . 5429) (nil tag-type end 5428 . 5429) (nil tag-beg 22 5428 . 5429) (nil font-lock-face web-mode-html-tag-bracket-face 5428 . 5429) (nil tag-name "v-icon" 5410 . 5411) (nil tag-type end 5410 . 5411) (nil tag-end t 5410 . 5411) (nil font-lock-face web-mode-html-tag-bracket-face 5410 . 5411) (nil tag-name "v-icon" 5404 . 5410) (nil tag-type end 5404 . 5410) (nil font-lock-face web-mode-html-tag-custom-face 5404 . 5410) (nil tag-name "v-icon" 5403 . 5404) (nil tag-type end 5403 . 5404) (nil font-lock-face web-mode-html-tag-bracket-face 5403 . 5404) (nil tag-name "v-icon" 5402 . 5403) (nil tag-type end 5402 . 5403) (nil tag-beg 22 5402 . 5403) (nil font-lock-face web-mode-html-tag-bracket-face 5402 . 5403) (nil tag-name "v-icon" 5384 . 5385) (nil tag-type start 5384 . 5385) (nil tag-end t 5384 . 5385) (nil font-lock-face web-mode-html-tag-bracket-face 5384 . 5385) (nil tag-attr t 5383 . 5384) (nil tag-attr-end 4 5383 . 5384) (nil tag-name "v-icon" 5383 . 5384) (nil tag-type start 5383 . 5384) (nil font-lock-face web-mode-html-attr-value-face 5383 . 5384) (nil tag-attr t 5378 . 5383) (nil tag-name "v-icon" 5378 . 5383) (nil tag-type start 5378 . 5383) (nil font-lock-face web-mode-html-attr-value-face 5378 . 5383) (nil tag-attr t 5377 . 5378) (nil tag-name "v-icon" 5377 . 5378) (nil tag-type start 5377 . 5378) (nil font-lock-face web-mode-html-attr-equal-face 5377 . 5378) (nil tag-attr t 5374 . 5377) (nil tag-name "v-icon" 5374 . 5377) (nil tag-type start 5374 . 5377) (nil font-lock-face web-mode-html-attr-name-face 5374 . 5377) (nil tag-attr-beg 0 5373 . 5374) (nil tag-attr t 5373 . 5374) (nil tag-name "v-icon" 5373 . 5374) (nil tag-type start 5373 . 5374) (nil font-lock-face web-mode-html-attr-name-face 5373 . 5374) (nil tag-name "v-icon" 5372 . 5373) (nil tag-type start 5372 . 5373) (nil tag-name "v-icon" 5366 . 5372) (nil tag-type start 5366 . 5372) (nil font-lock-face web-mode-html-tag-custom-face 5366 . 5372) (nil tag-name "v-icon" 5365 . 5366) (nil tag-type start 5365 . 5366) (nil tag-beg 19 5365 . 5366) (nil font-lock-face web-mode-html-tag-bracket-face 5365 . 5366) (nil tag-name "v-btn" 5341 . 5342) (nil tag-type start 5341 . 5342) (nil tag-end t 5341 . 5342) (nil font-lock-face web-mode-html-tag-bracket-face 5341 . 5342) (nil block-side t 5340 . 5341) (nil block-end t 5340 . 5341) (nil block-token delimiter-end 5340 . 5341) (nil tag-attr t 5340 . 5341) (nil tag-attr-end 5 5340 . 5341) (nil tag-name "v-btn" 5340 . 5341) (nil tag-type start 5340 . 5341) (nil font-lock-face web-mode-block-delimiter-face 5340 . 5341) (nil block-side t 5338 . 5340) (nil tag-attr t 5338 . 5340) (nil tag-name "v-btn" 5338 . 5340) (nil tag-type start 5338 . 5340) (nil block-side t 5337 . 5338) (nil tag-attr t 5337 . 5338) (nil tag-name "v-btn" 5337 . 5338) (nil tag-type start 5337 . 5338) (nil face web-mode-variable-name-face 5337 . 5338) (nil block-side t 5336 . 5337) (nil tag-attr t 5336 . 5337) (nil tag-name "v-btn" 5336 . 5337) (nil tag-type start 5336 . 5337) (nil face web-mode-variable-name-face 5336 . 5337) (nil block-side t 5335 . 5336) (nil tag-attr t 5335 . 5336) (nil tag-name "v-btn" 5335 . 5336) (nil tag-type start 5335 . 5336) (nil face web-mode-variable-name-face 5335 . 5336) (nil block-side t 5334 . 5335) (nil tag-attr t 5334 . 5335) (nil tag-name "v-btn" 5334 . 5335) (nil tag-type start 5334 . 5335) (nil face web-mode-variable-name-face 5334 . 5335) (nil block-side t 5333 . 5334) (nil tag-attr t 5333 . 5334) (nil tag-name "v-btn" 5333 . 5334) (nil tag-type start 5333 . 5334) (nil face web-mode-variable-name-face 5333 . 5334) (nil block-side t 5332 . 5333) (nil tag-attr t 5332 . 5333) (nil tag-name "v-btn" 5332 . 5333) (nil tag-type start 5332 . 5333) (nil face web-mode-variable-name-face 5332 . 5333) (nil block-side t 5331 . 5332) (nil tag-attr t 5331 . 5332) (nil tag-name "v-btn" 5331 . 5332) (nil tag-type start 5331 . 5332) (nil face web-mode-variable-name-face 5331 . 5332) (nil block-side t 5330 . 5331) (nil tag-attr t 5330 . 5331) (nil tag-name "v-btn" 5330 . 5331) (nil tag-type start 5330 . 5331) (nil face web-mode-variable-name-face 5330 . 5331) (nil block-side t 5329 . 5330) (nil tag-attr t 5329 . 5330) (nil tag-name "v-btn" 5329 . 5330) (nil tag-type start 5329 . 5330) (nil block-side t 5328 . 5329) (nil tag-attr t 5328 . 5329) (nil tag-name "v-btn" 5328 . 5329) (nil tag-type start 5328 . 5329) (nil face web-mode-variable-name-face 5328 . 5329) (nil block-side t 5327 . 5328) (nil tag-attr t 5327 . 5328) (nil tag-name "v-btn" 5327 . 5328) (nil tag-type start 5327 . 5328) (nil face web-mode-variable-name-face 5327 . 5328) (nil block-side t 5326 . 5327) (nil tag-attr t 5326 . 5327) (nil tag-name "v-btn" 5326 . 5327) (nil tag-type start 5326 . 5327) (nil face web-mode-variable-name-face 5326 . 5327) (nil block-side t 5325 . 5326) (nil tag-attr t 5325 . 5326) (nil tag-name "v-btn" 5325 . 5326) (nil tag-type start 5325 . 5326) (nil face web-mode-variable-name-face 5325 . 5326) (nil block-side t 5324 . 5325) (nil tag-attr t 5324 . 5325) (nil tag-name "v-btn" 5324 . 5325) (nil tag-type start 5324 . 5325) (nil face web-mode-variable-name-face 5324 . 5325) (nil block-side t 5323 . 5324) (nil tag-attr t 5323 . 5324) (nil tag-name "v-btn" 5323 . 5324) (nil tag-type start 5323 . 5324) (nil face web-mode-variable-name-face 5323 . 5324) (nil block-side t 5322 . 5323) (nil tag-attr t 5322 . 5323) (nil tag-name "v-btn" 5322 . 5323) (nil tag-type start 5322 . 5323) (nil face web-mode-variable-name-face 5322 . 5323) (nil block-side t 5321 . 5322) (nil tag-attr t 5321 . 5322) (nil tag-name "v-btn" 5321 . 5322) (nil tag-type start 5321 . 5322) (nil block-side t 5320 . 5321) (nil tag-attr t 5320 . 5321) (nil tag-name "v-btn" 5320 . 5321) (nil tag-type start 5320 . 5321) (nil face web-mode-variable-name-face 5320 . 5321) (nil block-side t 5319 . 5320) (nil tag-attr t 5319 . 5320) (nil tag-name "v-btn" 5319 . 5320) (nil tag-type start 5319 . 5320) (nil face web-mode-variable-name-face 5319 . 5320) (nil block-side t 5318 . 5319) (nil tag-attr t 5318 . 5319) (nil tag-name "v-btn" 5318 . 5319) (nil tag-type start 5318 . 5319) (nil face web-mode-variable-name-face 5318 . 5319) (nil block-side t 5317 . 5318) (nil tag-attr t 5317 . 5318) (nil tag-name "v-btn" 5317 . 5318) (nil tag-type start 5317 . 5318) (nil face web-mode-variable-name-face 5317 . 5318) (nil block-side t 5315 . 5317) (nil tag-attr t 5315 . 5317) (nil tag-name "v-btn" 5315 . 5317) (nil tag-type start 5315 . 5317) (nil block-side t 5305 . 5315) (nil tag-attr t 5305 . 5315) (nil tag-name "v-btn" 5305 . 5315) (nil tag-type start 5305 . 5315) (nil face web-mode-function-call-face 5305 . 5315) (nil block-side t 5304 . 5305) (nil block-token delimiter-beg 5304 . 5305) (nil tag-attr t 5304 . 5305) (nil tag-name "v-btn" 5304 . 5305) (nil tag-type start 5304 . 5305) (nil font-lock-face web-mode-block-delimiter-face 5304 . 5305) (nil block-side t 5303 . 5304) (nil block-token delimiter-beg 5303 . 5304) (nil tag-attr t 5303 . 5304) (nil tag-name "v-btn" 5303 . 5304) (nil tag-type start 5303 . 5304) (nil font-lock-face web-mode-block-delimiter-face 5303 . 5304) (nil block-side t 5302 . 5303) (nil block-token delimiter-beg 5302 . 5303) (nil tag-attr t 5302 . 5303) (nil tag-name "v-btn" 5302 . 5303) (nil tag-type start 5302 . 5303) (nil font-lock-face web-mode-block-delimiter-face 5302 . 5303) (nil block-side t 5301 . 5302) (nil block-token delimiter-beg 5301 . 5302) (nil tag-attr t 5301 . 5302) (nil tag-name "v-btn" 5301 . 5302) (nil tag-type start 5301 . 5302) (nil font-lock-face web-mode-block-delimiter-face 5301 . 5302) (nil block-side t 5300 . 5301) (nil block-token delimiter-beg 5300 . 5301) (nil tag-attr t 5300 . 5301) (nil tag-name "v-btn" 5300 . 5301) (nil tag-type start 5300 . 5301) (nil font-lock-face web-mode-block-delimiter-face 5300 . 5301) (nil block-side t 5299 . 5300) (nil block-token delimiter-beg 5299 . 5300) (nil tag-attr t 5299 . 5300) (nil tag-name "v-btn" 5299 . 5300) (nil tag-type start 5299 . 5300) (nil font-lock-face web-mode-block-delimiter-face 5299 . 5300) (nil block-side t 5298 . 5299) (nil block-token delimiter-beg 5298 . 5299) (nil tag-attr-beg 0 5298 . 5299) (nil tag-attr t 5298 . 5299) (nil tag-name "v-btn" 5298 . 5299) (nil tag-type start 5298 . 5299) (nil font-lock-face web-mode-block-delimiter-face 5298 . 5299) (nil block-beg 0 5297 . 5298) (nil block-controls 0 5297 . 5298) (nil block-side t 5297 . 5298) (nil block-token delimiter-beg 5297 . 5298) (nil tag-name "v-btn" 5297 . 5298) (nil tag-type start 5297 . 5298) (nil font-lock-face web-mode-block-delimiter-face 5297 . 5298) (nil tag-name "v-btn" 5296 . 5297) (nil tag-type start 5296 . 5297) (nil tag-attr t 5295 . 5296) (nil tag-attr-end 0 5295 . 5296) (nil tag-name "v-btn" 5295 . 5296) (nil tag-type start 5295 . 5296) (nil font-lock-face web-mode-html-attr-name-face 5295 . 5296) (nil tag-attr t 5290 . 5295) (nil tag-name "v-btn" 5290 . 5295) (nil tag-type start 5290 . 5295) (nil font-lock-face web-mode-html-attr-name-face 5290 . 5295) (nil tag-attr-beg 0 5289 . 5290) (nil tag-attr t 5289 . 5290) (nil tag-name "v-btn" 5289 . 5290) (nil tag-type start 5289 . 5290) (nil font-lock-face web-mode-html-attr-name-face 5289 . 5290) (nil tag-name "v-btn" 5288 . 5289) (nil tag-type start 5288 . 5289) (nil tag-attr t 5287 . 5288) (nil tag-attr-end 0 5287 . 5288) (nil tag-name "v-btn" 5287 . 5288) (nil tag-type start 5287 . 5288) (nil font-lock-face web-mode-html-attr-name-face 5287 . 5288) (nil tag-attr t 5285 . 5287) (nil tag-name "v-btn" 5285 . 5287) (nil tag-type start 5285 . 5287) (nil font-lock-face web-mode-html-attr-name-face 5285 . 5287) (nil tag-attr-beg 0 5284 . 5285) (nil tag-attr t 5284 . 5285) (nil tag-name "v-btn" 5284 . 5285) (nil tag-type start 5284 . 5285) (nil font-lock-face web-mode-html-attr-name-face 5284 . 5285) (nil tag-name "v-btn" 5283 . 5284) (nil tag-type start 5283 . 5284) (nil tag-name "v-btn" 5278 . 5283) (nil tag-type start 5278 . 5283) (nil font-lock-face web-mode-html-tag-custom-face 5278 . 5283) (nil tag-name "v-btn" 5277 . 5278) (nil tag-type start 5277 . 5278) (nil tag-beg 19 5277 . 5278) (nil font-lock-face web-mode-html-tag-bracket-face 5277 . 5278) (5277 . 5436)) nil (25671 38841 421885 296000) 0 nil])
([nil nil ((5435 . 5449) ("  " . -5426) (5436 . 5437)) nil (25671 38841 421824 584000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5499 . 5500) (nil block-side t 5499 . 5500) (nil block-end t 5499 . 5500) (nil block-token delimiter-end 5499 . 5500) (nil font-lock-face web-mode-block-delimiter-face 5499 . 5500) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5499 . 5500) (nil block-side t 5498 . 5499) (nil block-token delimiter-end 5498 . 5499) (nil font-lock-face web-mode-block-delimiter-face 5498 . 5499) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5498 . 5499) (nil block-side t 5497 . 5498) (nil block-side t 5496 . 5497) (nil face (rainbow-delimiters-depth-3-face) 5496 . 5497) (nil block-side t 5495 . 5496) (nil block-side t 5494 . 5495) (nil face web-mode-variable-name-face 5494 . 5495) (nil block-side t 5493 . 5494) (nil face web-mode-variable-name-face 5493 . 5494) (nil block-side t 5492 . 5493) (nil face web-mode-variable-name-face 5492 . 5493) (nil block-side t 5491 . 5492) (nil face web-mode-variable-name-face 5491 . 5492) (nil block-side t 5490 . 5491) (nil face web-mode-variable-name-face 5490 . 5491) (nil block-side t 5489 . 5490) (nil face web-mode-variable-name-face 5489 . 5490) (nil block-side t 5488 . 5489) (nil face web-mode-variable-name-face 5488 . 5489) (nil block-side t 5487 . 5488) (nil face web-mode-variable-name-face 5487 . 5488) (nil block-side t 5486 . 5487) (nil face web-mode-variable-name-face 5486 . 5487) (nil block-side t 5485 . 5486) (nil face web-mode-variable-name-face 5485 . 5486) (nil block-side t 5484 . 5485) (nil face web-mode-variable-name-face 5484 . 5485) (nil block-side t 5483 . 5484) (nil block-side t 5482 . 5483) (nil face web-mode-variable-name-face 5482 . 5483) (nil block-side t 5481 . 5482) (nil face web-mode-variable-name-face 5481 . 5482) (nil block-side t 5480 . 5481) (nil face web-mode-variable-name-face 5480 . 5481) (nil block-side t 5479 . 5480) (nil face web-mode-variable-name-face 5479 . 5480) (nil block-side t 5478 . 5479) (nil face web-mode-variable-name-face 5478 . 5479) (nil block-side t 5477 . 5478) (nil face web-mode-variable-name-face 5477 . 5478) (nil block-side t 5476 . 5477) (nil face web-mode-variable-name-face 5476 . 5477) (nil block-side t 5475 . 5476) (nil face web-mode-variable-name-face 5475 . 5476) (nil block-side t 5474 . 5475) (nil face web-mode-variable-name-face 5474 . 5475) (nil block-side t 5473 . 5474) (nil face web-mode-variable-name-face 5473 . 5474) (nil block-side t 5472 . 5473) (nil face web-mode-variable-name-face 5472 . 5473) (nil block-side t 5471 . 5472) (nil face web-mode-variable-name-face 5471 . 5472) (nil block-side t 5470 . 5471) (nil block-side t 5469 . 5470) (nil face web-mode-variable-name-face 5469 . 5470) (nil block-side t 5468 . 5469) (nil face web-mode-variable-name-face 5468 . 5469) (nil block-side t 5467 . 5468) (nil face web-mode-variable-name-face 5467 . 5468) (nil block-side t 5466 . 5467) (nil face web-mode-variable-name-face 5466 . 5467) (nil block-side t 5465 . 5466) (nil face web-mode-variable-name-face 5465 . 5466) (nil block-side t 5464 . 5465) (nil face web-mode-variable-name-face 5464 . 5465) (nil block-side t 5463 . 5464) (nil face web-mode-variable-name-face 5463 . 5464) (nil block-side t 5462 . 5463) (nil face web-mode-variable-name-face 5462 . 5463) (nil block-side t 5461 . 5462) (nil face web-mode-variable-name-face 5461 . 5462) (nil block-side t 5460 . 5461) (nil face web-mode-variable-name-face 5460 . 5461) (nil block-side t 5459 . 5460) (nil face web-mode-variable-name-face 5459 . 5460) (nil block-side t 5458 . 5459) (nil face web-mode-variable-name-face 5458 . 5459) (nil block-side t 5457 . 5458) (nil face web-mode-variable-name-face 5457 . 5458) (nil block-side t 5456 . 5457) (nil face web-mode-variable-name-face 5456 . 5457) (nil block-side t 5455 . 5456) (nil block-side t 5454 . 5455) (nil face (rainbow-delimiters-depth-3-face) 5454 . 5455) (nil block-side t 5453 . 5454) (nil face web-mode-variable-name-face 5453 . 5454) (nil block-side t 5451 . 5453) (nil block-side t 5450 . 5451) (nil block-token delimiter-beg 5450 . 5451) (nil font-lock-face web-mode-block-delimiter-face 5450 . 5451) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5450 . 5451) (nil block-beg 0 5449 . 5450) (nil block-controls 0 5449 . 5450) (nil block-side t 5449 . 5450) (nil block-token delimiter-beg 5449 . 5450) (nil font-lock-face web-mode-block-delimiter-face 5449 . 5450) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5449 . 5450) (5449 . 5500)) nil (25671 38841 421812 109000) 0 nil])
([nil nil ((5262 . 5277) (t 25671 38841 430941 934000)) nil (25671 38970 728103 958000) 0 nil])
([nil nil ((5277 . 5286)) nil (25671 38970 728102 820000) 0 nil])
([nil nil ((5282 . 5298) (5283 . 5297) (#("                " 0 16 (face whitespace-trailing)) . 5282) (5282 . 5298) (5282 . 5283) ("              " . 5282) (5281 . 5296)) nil (25671 38970 728101 273000) 0 nil])
([nil nil ((#("              <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
" 14 15 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 20 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 20 21 (tag-name "v-btn" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 22 24 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-name "v-btn" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 32 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 34 (tag-name "v-btn" tag-type start) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 52 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 52 54 (block-side t tag-attr t tag-name "v-btn" tag-type start) 54 55 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 55 56 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 56 57 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 57 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 58 59 (block-side t tag-attr t tag-name "v-btn" tag-type start) 59 60 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 77 (block-side t tag-attr t tag-name "v-btn" tag-type start) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5399) (undo-tree-id7 . -14) (5379 . 5399) (#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5299) (undo-tree-id8 . -16) (5319 . 5399) 5315) nil (25671 38970 728098 471000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5468) (5448 . 5468) (#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5379) (undo-tree-id6 . -16) (5399 . 5468) 5395) nil (25671 38970 728094 100000) 0 nil])
([nil nil ((#("              </v-btn>
" 14 15 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5491) (5471 . 5491) (#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5448) (undo-tree-id5 . -16) (5468 . 5491) 5464) nil (25671 38970 728090 624000) 0 nil])
([nil nil ((#("              {{ $t('SensorOverview.TableHeaders.LastPackage') }}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 18 (block-side t) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face (rainbow-delimiters-depth-3-face)) 20 21 (block-side t) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t) 61 62 (block-side t face (rainbow-delimiters-depth-3-face)) 62 63 (block-side t) 63 64 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 64 65 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5557) (undo-tree-id3 . -14) (5537 . 5557) (#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5471) (undo-tree-id4 . -16) (5491 . 5557) 5487) nil (25671 38970 728087 132000) 0 nil])
([nil nil ((5556 . 5571)) nil (25671 38970 728082 579000) 0 nil])
([nil nil ((5571 . 5580)) nil (25671 38970 728081 517000) 0 nil])
([nil nil ((5576 . 5592) (5577 . 5591) (#("                " 0 16 (face whitespace-trailing)) . 5576) (5576 . 5592) (5576 . 5577) ("              " . 5576) (5575 . 5590)) nil (25671 38970 728079 861000) 0 nil])
([nil nil (("
" . 5298) (undo-tree-id2 . -1)) nil (25671 38970 728077 372000) 0 nil])
([nil nil (("              " . -5298)) nil (25671 38970 728067 505000) 0 nil])
([nil nil (("    " . -5382) 5380) nil (25671 38970 728066 394000) 0 nil])
([nil nil ((5429 . 5445) ("              " . 5429) 5447) nil (25671 38970 728064 777000) 0 nil])
([nil nil ((5454 . 5470) ("              " . 5454) 5474) nil (25671 38970 728062 133000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5611 . 5612) (nil rear-nonsticky t 5611 . 5612) (nil block-side t 5611 . 5612) (nil block-end t 5611 . 5612) (nil block-token delimiter-end 5611 . 5612) (nil font-lock-face web-mode-block-delimiter-face 5611 . 5612) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5611 . 5612) (nil block-side t 5610 . 5611) (nil block-token delimiter-end 5610 . 5611) (nil font-lock-face web-mode-block-delimiter-face 5610 . 5611) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5610 . 5611) (nil block-side t 5609 . 5610) (nil block-side t 5608 . 5609) (nil face (rainbow-delimiters-depth-3-face) 5608 . 5609) (nil block-side t 5607 . 5608) (nil block-side t 5606 . 5607) (nil face web-mode-variable-name-face 5606 . 5607) (nil block-side t 5605 . 5606) (nil face web-mode-variable-name-face 5605 . 5606) (nil block-side t 5604 . 5605) (nil face web-mode-variable-name-face 5604 . 5605) (nil block-side t 5603 . 5604) (nil face web-mode-variable-name-face 5603 . 5604) (nil block-side t 5602 . 5603) (nil face web-mode-variable-name-face 5602 . 5603) (nil block-side t 5601 . 5602) (nil face web-mode-variable-name-face 5601 . 5602) (nil block-side t 5600 . 5601) (nil face web-mode-variable-name-face 5600 . 5601) (nil block-side t 5599 . 5600) (nil face web-mode-variable-name-face 5599 . 5600) (nil block-side t 5598 . 5599) (nil block-side t 5597 . 5598) (nil face web-mode-variable-name-face 5597 . 5598) (nil block-side t 5596 . 5597) (nil face web-mode-variable-name-face 5596 . 5597) (nil block-side t 5595 . 5596) (nil face web-mode-variable-name-face 5595 . 5596) (nil block-side t 5594 . 5595) (nil face web-mode-variable-name-face 5594 . 5595) (nil block-side t 5593 . 5594) (nil face web-mode-variable-name-face 5593 . 5594) (nil block-side t 5592 . 5593) (nil face web-mode-variable-name-face 5592 . 5593) (nil block-side t 5591 . 5592) (nil face web-mode-variable-name-face 5591 . 5592) (nil block-side t 5590 . 5591) (nil block-side t 5589 . 5590) (nil face web-mode-variable-name-face 5589 . 5590) (nil block-side t 5588 . 5589) (nil face web-mode-variable-name-face 5588 . 5589) (nil block-side t 5587 . 5588) (nil face web-mode-variable-name-face 5587 . 5588) (nil block-side t 5586 . 5587) (nil face web-mode-variable-name-face 5586 . 5587) (nil block-side t 5585 . 5586) (nil block-side t 5584 . 5585) (nil face (rainbow-delimiters-depth-3-face) 5584 . 5585) (nil block-side t 5583 . 5584) (nil face web-mode-variable-name-face 5583 . 5584) (nil block-side t 5582 . 5583) (nil face web-mode-variable-name-face 5582 . 5583) (nil block-side t 5581 . 5582) (nil face web-mode-variable-name-face 5581 . 5582) (nil block-side t 5580 . 5581) (nil face web-mode-variable-name-face 5580 . 5581) (nil block-side t 5579 . 5580) (nil block-side t 5578 . 5579) (nil block-token delimiter-beg 5578 . 5579) (nil font-lock-face web-mode-block-delimiter-face 5578 . 5579) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5578 . 5579) (nil block-beg 0 5577 . 5578) (nil block-controls 0 5577 . 5578) (nil block-side t 5577 . 5578) (nil block-token delimiter-beg 5577 . 5578) (nil font-lock-face web-mode-block-delimiter-face 5577 . 5578) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5577 . 5578) (5577 . 5612)) nil (25671 38970 728049 959000) 0 nil])
([nil nil ((5245 . 5258) (t 25671 38970 739065 117000)) nil (25671 39018 154055 503000) 0 nil])
([nil nil ((5258 . 5273)) nil (25671 39018 154054 180000) 0 nil])
([nil nil ((5266 . 5280) (5267 . 5279) (#("              " 0 14 (face whitespace-trailing)) . 5266) (5266 . 5280) (5266 . 5267) ("            " . 5266) (5265 . 5278)) nil (25671 39018 154052 400000) 0 nil])
([nil nil ((#("            <tr>
" 12 13 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 13 15 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 15 16 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5319) (5298 . 5319) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5281) (undo-tree-id38 . -14) (5302 . 5319) 5295) nil (25671 39018 154049 668000) 0 nil])
([nil nil ((#("              <td>
" 14 15 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 15 17 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5338) (5317 . 5338) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5298) (undo-tree-id37 . -14) (5319 . 5338) 5312) nil (25671 39018 154046 246000) 0 nil])
([nil nil ((#("                <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-btn" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-name "v-btn" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 29 34 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-name "v-btn" tag-type start) 36 37 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 54 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 54 56 (block-side t tag-attr t tag-name "v-btn" tag-type start) 56 57 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 57 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 58 59 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 77 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 77 79 (block-side t tag-attr t tag-name "v-btn" tag-type start) 79 80 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5420) (5399 . 5420) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5317) (undo-tree-id36 . -14) (5338 . 5420) 5331) nil (25671 39018 154042 627000) 0 nil])
([nil nil ((#("                  <v-icon size=\"17px\">mdi-select-search</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5485) (undo-tree-id34 . -65) (5464 . 5485) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5399) (undo-tree-id35 . -14) (5420 . 5485) 5413) nil (25671 39018 154039 187000) 0 nil])
([nil nil ((#("                </v-btn>
" 16 17 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5510) (5489 . 5510) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5464) (undo-tree-id33 . -14) (5485 . 5510) 5478) nil (25671 39018 154032 974000) 0 nil])
([nil nil ((#("                {{ $t('SensorOverview.TableHeaders.LastPackage') }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 20 (block-side t) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face (rainbow-delimiters-depth-3-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 64 (block-side t face (rainbow-delimiters-depth-3-face)) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5578) (5557 . 5578) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5489) (undo-tree-id32 . -14) (5510 . 5578) 5503) nil (25671 39018 154029 570000) 0 nil])
([nil nil ((#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5598) (5577 . 5598) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5557) (undo-tree-id31 . -14) (5578 . 5598) 5571) nil (25671 39018 154026 335000) 0 nil])
([nil nil ((#("              <td>
" 14 15 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 15 17 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5617) (5596 . 5617) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5577) (undo-tree-id30 . -14) (5598 . 5617) 5591) nil (25671 39018 154022 786000) 0 nil])
([nil nil ((#("                {{ item[\"Last Package Received\"] }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face (rainbow-delimiters-depth-3-face)) 24 25 (block-side t) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t) 47 48 (block-side t face (rainbow-delimiters-depth-3-face)) 48 49 (block-side t) 49 50 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 50 51 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5669) (undo-tree-id28 . -16) (5648 . 5669) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5596) (undo-tree-id29 . -14) (5617 . 5669) 5610) nil (25671 39018 154019 115000) 0 nil])
([nil nil ((#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5689) (undo-tree-id26 . -20) (5668 . 5689) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5648) (undo-tree-id27 . -14) (5669 . 5689) 5662) nil (25671 39018 154014 506000) 0 nil])
([nil nil ((#("            </tr>
" 12 13 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 16 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 16 17 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5707) (5686 . 5707) (#("            </v-row>
" 12 13 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5668) (undo-tree-id25 . -14) (5689 . 5707) 5682) nil (25671 39018 154009 953000) 0 nil])
([nil nil ((5280 . 5295)) nil (25671 39018 154006 840000) 0 nil])
([nil nil ((5288 . 5304) (5289 . 5303) (#("                " 0 16 (face whitespace-trailing)) . 5288) (5288 . 5304) (5288 . 5289) ("              " . 5288) (5287 . 5302)) nil (25671 39018 154005 227000) 0 nil])
([nil nil ((#("            <tr>
" 12 13 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 13 15 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 15 16 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5345) (5322 . 5345) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5305) (undo-tree-id24 . -16) (5328 . 5345) 5321) nil (25671 39018 154002 402000) 0 nil])
([nil nil ((#("              <td>
" 14 15 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 15 17 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5364) (5341 . 5364) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5322) (undo-tree-id23 . -16) (5345 . 5364) 5338) nil (25671 39018 153999 31000) 0 nil])
([nil nil ((#("                <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-btn" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-name "v-btn" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 29 34 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-name "v-btn" tag-type start) 36 37 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 54 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 54 56 (block-side t tag-attr t tag-name "v-btn" tag-type start) 56 57 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 57 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 58 59 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 77 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 77 79 (block-side t tag-attr t tag-name "v-btn" tag-type start) 79 80 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5446) (5423 . 5446) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5341) (undo-tree-id22 . -16) (5364 . 5446) 5357) nil (25671 39018 153995 652000) 0 nil])
([nil nil ((#("                  <v-icon size=\"17px\">mdi-select-search</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5511) (5488 . 5511) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5423) (undo-tree-id21 . -16) (5446 . 5511) 5439) nil (25671 39018 153992 247000) 0 nil])
([nil nil ((#("                </v-btn>
" 16 17 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5536) (undo-tree-id19 . -25) (5513 . 5536) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5488) (undo-tree-id20 . -16) (5511 . 5536) 5504) nil (25671 39018 153988 743000) 0 nil])
([nil nil ((#("                {{ $t('SensorOverview.TableHeaders.LastPackage') }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 20 (block-side t) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face (rainbow-delimiters-depth-3-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 64 (block-side t face (rainbow-delimiters-depth-3-face)) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5604) (5581 . 5604) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5513) (undo-tree-id18 . -16) (5536 . 5604) 5529) nil (25671 39018 153984 95000) 0 nil])
([nil nil ((#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5624) (5601 . 5624) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5581) (undo-tree-id17 . -16) (5604 . 5624) 5597) nil (25671 39018 153980 662000) 0 nil])
([nil nil ((#("              <td>
" 14 15 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 15 17 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5643) (5620 . 5643) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5601) (undo-tree-id16 . -16) (5624 . 5643) 5617) nil (25671 39018 153977 195000) 0 nil])
([nil nil ((#("                {{ item[\"Last Package Received\"] }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face (rainbow-delimiters-depth-3-face)) 24 25 (block-side t) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t) 47 48 (block-side t face (rainbow-delimiters-depth-3-face)) 48 49 (block-side t) 49 50 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 50 51 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5695) (5672 . 5695) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5620) (undo-tree-id15 . -16) (5643 . 5695) 5636) nil (25671 39018 153973 725000) 0 nil])
([nil nil ((#("              </td>
" 14 15 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 18 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5715) (undo-tree-id13 . -20) (5692 . 5715) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5672) (undo-tree-id14 . -16) (5695 . 5715) 5688) nil (25671 39018 153969 728000) 0 nil])
([nil nil ((#("            </tr>
" 12 13 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 16 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 16 17 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5733) (undo-tree-id11 . -18) (5710 . 5733) (#("              </v-col>
" 14 15 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 21 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5692) (undo-tree-id12 . -16) (5715 . 5733) 5708) nil (25671 39018 153964 785000) 0 nil])
([nil nil ((5732 . 5748) ("            " . 5732) (5708 . 5726) ("              " . 5708) (5668 . 5672) (5629 . 5647) ("              " . 5629) (5605 . 5623) ("              " . 5605) (5549 . 5553) (5520 . 5524) (5453 . 5457) (5365 . 5369) (5326 . 5344) ("              " . 5326) (5305 . 5321) ("            " . 5305) 5246) nil (25671 39018 153957 441000) 0 nil])
([nil nil (("
" . 5304) (undo-tree-id9 . -1) (undo-tree-id10 . 1)) nil (25671 39018 153952 453000) 0 nil])
([nil nil (("                " . -5304)) nil (25671 39018 153940 615000) 0 nil])
([nil nil ((5759 . 5774)) nil (25671 39018 153939 683000) 0 nil])
([nil nil ((5774 . 5789)) nil (25671 39018 153938 737000) 0 nil])
([nil nil ((5782 . 5798) (5783 . 5797) (#("                " 0 16 (face whitespace-trailing)) . 5782) (5782 . 5798) (5782 . 5783) ("              " . 5782) (5781 . 5796)) nil (25671 39018 153936 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6245 . 6246) (nil tag-name "tr" 6245 . 6246) (nil tag-type end 6245 . 6246) (nil tag-end t 6245 . 6246) (nil font-lock-face web-mode-html-tag-bracket-face 6245 . 6246) (nil tag-name "tr" 6243 . 6245) (nil tag-type end 6243 . 6245) (nil font-lock-face web-mode-html-tag-face 6243 . 6245) (nil tag-name "tr" 6242 . 6243) (nil tag-type end 6242 . 6243) (nil font-lock-face web-mode-html-tag-bracket-face 6242 . 6243) (nil tag-name "tr" 6241 . 6242) (nil tag-type end 6241 . 6242) (nil tag-beg 20 6241 . 6242) (nil font-lock-face web-mode-html-tag-bracket-face 6241 . 6242) (nil tag-name "td" 6223 . 6224) (nil tag-type end 6223 . 6224) (nil tag-end t 6223 . 6224) (nil font-lock-face web-mode-html-tag-bracket-face 6223 . 6224) (nil tag-name "td" 6221 . 6223) (nil tag-type end 6221 . 6223) (nil font-lock-face web-mode-html-tag-face 6221 . 6223) (nil tag-name "td" 6220 . 6221) (nil tag-type end 6220 . 6221) (nil font-lock-face web-mode-html-tag-bracket-face 6220 . 6221) (nil tag-name "td" 6219 . 6220) (nil tag-type end 6219 . 6220) (nil tag-beg 20 6219 . 6220) (nil font-lock-face web-mode-html-tag-bracket-face 6219 . 6220) (nil rear-nonsticky t 6199 . 6200) (nil block-side t 6199 . 6200) (nil block-end t 6199 . 6200) (nil block-token delimiter-end 6199 . 6200) (nil font-lock-face web-mode-block-delimiter-face 6199 . 6200) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6199 . 6200) (nil block-side t 6198 . 6199) (nil block-token delimiter-end 6198 . 6199) (nil font-lock-face web-mode-block-delimiter-face 6198 . 6199) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6198 . 6199) (nil block-side t 6197 . 6198) (nil block-side t 6196 . 6197) (nil face (rainbow-delimiters-depth-3-face) 6196 . 6197) (nil block-side t 6195 . 6196) (nil block-side t 6194 . 6195) (nil face web-mode-variable-name-face 6194 . 6195) (nil block-side t 6193 . 6194) (nil face web-mode-variable-name-face 6193 . 6194) (nil block-side t 6192 . 6193) (nil face web-mode-variable-name-face 6192 . 6193) (nil block-side t 6191 . 6192) (nil face web-mode-variable-name-face 6191 . 6192) (nil block-side t 6190 . 6191) (nil face web-mode-variable-name-face 6190 . 6191) (nil block-side t 6189 . 6190) (nil face web-mode-variable-name-face 6189 . 6190) (nil block-side t 6188 . 6189) (nil face web-mode-variable-name-face 6188 . 6189) (nil block-side t 6187 . 6188) (nil face web-mode-variable-name-face 6187 . 6188) (nil block-side t 6186 . 6187) (nil block-side t 6185 . 6186) (nil face web-mode-variable-name-face 6185 . 6186) (nil block-side t 6184 . 6185) (nil face web-mode-variable-name-face 6184 . 6185) (nil block-side t 6183 . 6184) (nil face web-mode-variable-name-face 6183 . 6184) (nil block-side t 6182 . 6183) (nil face web-mode-variable-name-face 6182 . 6183) (nil block-side t 6181 . 6182) (nil face web-mode-variable-name-face 6181 . 6182) (nil block-side t 6180 . 6181) (nil face web-mode-variable-name-face 6180 . 6181) (nil block-side t 6179 . 6180) (nil face web-mode-variable-name-face 6179 . 6180) (nil block-side t 6178 . 6179) (nil block-side t 6177 . 6178) (nil face web-mode-variable-name-face 6177 . 6178) (nil block-side t 6176 . 6177) (nil face web-mode-variable-name-face 6176 . 6177) (nil block-side t 6175 . 6176) (nil face web-mode-variable-name-face 6175 . 6176) (nil block-side t 6174 . 6175) (nil face web-mode-variable-name-face 6174 . 6175) (nil block-side t 6173 . 6174) (nil block-side t 6172 . 6173) (nil face (rainbow-delimiters-depth-3-face) 6172 . 6173) (nil block-side t 6171 . 6172) (nil face web-mode-variable-name-face 6171 . 6172) (nil block-side t 6170 . 6171) (nil face web-mode-variable-name-face 6170 . 6171) (nil block-side t 6169 . 6170) (nil face web-mode-variable-name-face 6169 . 6170) (nil block-side t 6168 . 6169) (nil face web-mode-variable-name-face 6168 . 6169) (nil block-side t 6167 . 6168) (nil block-side t 6166 . 6167) (nil block-token delimiter-beg 6166 . 6167) (nil font-lock-face web-mode-block-delimiter-face 6166 . 6167) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6166 . 6167) (nil block-beg 0 6165 . 6166) (nil block-controls 0 6165 . 6166) (nil block-side t 6165 . 6166) (nil block-token delimiter-beg 6165 . 6166) (nil font-lock-face web-mode-block-delimiter-face 6165 . 6166) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6165 . 6166) (nil tag-name "td" 6143 . 6144) (nil tag-type start 6143 . 6144) (nil tag-end t 6143 . 6144) (nil font-lock-face web-mode-html-tag-bracket-face 6143 . 6144) (nil tag-name "td" 6141 . 6143) (nil tag-type start 6141 . 6143) (nil font-lock-face web-mode-html-tag-face 6141 . 6143) (nil tag-name "td" 6140 . 6141) (nil tag-type start 6140 . 6141) (nil tag-beg 16 6140 . 6141) (nil font-lock-face web-mode-html-tag-bracket-face 6140 . 6141) (nil tag-name "td" 6120 . 6121) (nil tag-type end 6120 . 6121) (nil tag-end t 6120 . 6121) (nil font-lock-face web-mode-html-tag-bracket-face 6120 . 6121) (nil tag-name "td" 6118 . 6120) (nil tag-type end 6118 . 6120) (nil font-lock-face web-mode-html-tag-face 6118 . 6120) (nil tag-name "td" 6117 . 6118) (nil tag-type end 6117 . 6118) (nil font-lock-face web-mode-html-tag-bracket-face 6117 . 6118) (nil tag-name "td" 6116 . 6117) (nil tag-type end 6116 . 6117) (nil tag-beg 20 6116 . 6117) (nil font-lock-face web-mode-html-tag-bracket-face 6116 . 6117) (nil rear-nonsticky t 6096 . 6097) (nil block-side t 6096 . 6097) (nil block-end t 6096 . 6097) (nil block-token delimiter-end 6096 . 6097) (nil font-lock-face web-mode-block-delimiter-face 6096 . 6097) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6096 . 6097) (nil block-side t 6095 . 6096) (nil block-token delimiter-end 6095 . 6096) (nil font-lock-face web-mode-block-delimiter-face 6095 . 6096) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6095 . 6096) (nil block-side t 6094 . 6095) (nil block-side t 6093 . 6094) (nil face (rainbow-delimiters-depth-3-face) 6093 . 6094) (nil block-side t 6092 . 6093) (nil block-side t 6091 . 6092) (nil face web-mode-variable-name-face 6091 . 6092) (nil block-side t 6090 . 6091) (nil face web-mode-variable-name-face 6090 . 6091) (nil block-side t 6089 . 6090) (nil face web-mode-variable-name-face 6089 . 6090) (nil block-side t 6088 . 6089) (nil face web-mode-variable-name-face 6088 . 6089) (nil block-side t 6087 . 6088) (nil face web-mode-variable-name-face 6087 . 6088) (nil block-side t 6086 . 6087) (nil face web-mode-variable-name-face 6086 . 6087) (nil block-side t 6085 . 6086) (nil face web-mode-variable-name-face 6085 . 6086) (nil block-side t 6084 . 6085) (nil face web-mode-variable-name-face 6084 . 6085) (nil block-side t 6083 . 6084) (nil face web-mode-variable-name-face 6083 . 6084) (nil block-side t 6082 . 6083) (nil face web-mode-variable-name-face 6082 . 6083) (nil block-side t 6081 . 6082) (nil face web-mode-variable-name-face 6081 . 6082) (nil block-side t 6080 . 6081) (nil block-side t 6079 . 6080) (nil face web-mode-variable-name-face 6079 . 6080) (nil block-side t 6078 . 6079) (nil face web-mode-variable-name-face 6078 . 6079) (nil block-side t 6077 . 6078) (nil face web-mode-variable-name-face 6077 . 6078) (nil block-side t 6076 . 6077) (nil face web-mode-variable-name-face 6076 . 6077) (nil block-side t 6075 . 6076) (nil face web-mode-variable-name-face 6075 . 6076) (nil block-side t 6074 . 6075) (nil face web-mode-variable-name-face 6074 . 6075) (nil block-side t 6073 . 6074) (nil face web-mode-variable-name-face 6073 . 6074) (nil block-side t 6072 . 6073) (nil face web-mode-variable-name-face 6072 . 6073) (nil block-side t 6071 . 6072) (nil face web-mode-variable-name-face 6071 . 6072) (nil block-side t 6070 . 6071) (nil face web-mode-variable-name-face 6070 . 6071) (nil block-side t 6069 . 6070) (nil face web-mode-variable-name-face 6069 . 6070) (nil block-side t 6068 . 6069) (nil face web-mode-variable-name-face 6068 . 6069) (nil block-side t 6067 . 6068) (nil block-side t 6066 . 6067) (nil face web-mode-variable-name-face 6066 . 6067) (nil block-side t 6065 . 6066) (nil face web-mode-variable-name-face 6065 . 6066) (nil block-side t 6064 . 6065) (nil face web-mode-variable-name-face 6064 . 6065) (nil block-side t 6063 . 6064) (nil face web-mode-variable-name-face 6063 . 6064) (nil block-side t 6062 . 6063) (nil face web-mode-variable-name-face 6062 . 6063) (nil block-side t 6061 . 6062) (nil face web-mode-variable-name-face 6061 . 6062) (nil block-side t 6060 . 6061) (nil face web-mode-variable-name-face 6060 . 6061) (nil block-side t 6059 . 6060) (nil face web-mode-variable-name-face 6059 . 6060) (nil block-side t 6058 . 6059) (nil face web-mode-variable-name-face 6058 . 6059) (nil block-side t 6057 . 6058) (nil face web-mode-variable-name-face 6057 . 6058) (nil block-side t 6056 . 6057) (nil face web-mode-variable-name-face 6056 . 6057) (nil block-side t 6055 . 6056) (nil face web-mode-variable-name-face 6055 . 6056) (nil block-side t 6054 . 6055) (nil face web-mode-variable-name-face 6054 . 6055) (nil block-side t 6053 . 6054) (nil face web-mode-variable-name-face 6053 . 6054) (nil block-side t 6052 . 6053) (nil block-side t 6051 . 6052) (nil face (rainbow-delimiters-depth-3-face) 6051 . 6052) (nil block-side t 6050 . 6051) (nil face web-mode-variable-name-face 6050 . 6051) (nil block-side t 6048 . 6050) (nil block-side t 6047 . 6048) (nil block-token delimiter-beg 6047 . 6048) (nil font-lock-face web-mode-block-delimiter-face 6047 . 6048) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6047 . 6048) (nil block-beg 0 6046 . 6047) (nil block-controls 0 6046 . 6047) (nil block-side t 6046 . 6047) (nil block-token delimiter-beg 6046 . 6047) (nil font-lock-face web-mode-block-delimiter-face 6046 . 6047) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6046 . 6047) (nil rear-nonsticky t 6024 . 6025) (nil tag-name "v-btn" 6024 . 6025) (nil tag-type end 6024 . 6025) (nil tag-end t 6024 . 6025) (nil font-lock-face web-mode-html-tag-bracket-face 6024 . 6025) (nil tag-name "v-btn" 6019 . 6024) (nil tag-type end 6019 . 6024) (nil font-lock-face web-mode-html-tag-custom-face 6019 . 6024) (nil tag-name "v-btn" 6018 . 6019) (nil tag-type end 6018 . 6019) (nil font-lock-face web-mode-html-tag-bracket-face 6018 . 6019) (nil tag-name "v-btn" 6017 . 6018) (nil tag-type end 6017 . 6018) (nil tag-beg 22 6017 . 6018) (nil font-lock-face web-mode-html-tag-bracket-face 6017 . 6018) (nil tag-name "v-icon" 5995 . 5996) (nil tag-type end 5995 . 5996) (nil tag-end t 5995 . 5996) (nil font-lock-face web-mode-html-tag-bracket-face 5995 . 5996) (nil tag-name "v-icon" 5989 . 5995) (nil tag-type end 5989 . 5995) (nil font-lock-face web-mode-html-tag-custom-face 5989 . 5995) (nil tag-name "v-icon" 5988 . 5989) (nil tag-type end 5988 . 5989) (nil font-lock-face web-mode-html-tag-bracket-face 5988 . 5989) (nil tag-name "v-icon" 5987 . 5988) (nil tag-type end 5987 . 5988) (nil tag-beg 22 5987 . 5988) (nil font-lock-face web-mode-html-tag-bracket-face 5987 . 5988) (nil tag-name "v-icon" 5969 . 5970) (nil tag-type start 5969 . 5970) (nil tag-end t 5969 . 5970) (nil font-lock-face web-mode-html-tag-bracket-face 5969 . 5970) (nil tag-attr t 5968 . 5969) (nil tag-attr-end 4 5968 . 5969) (nil tag-name "v-icon" 5968 . 5969) (nil tag-type start 5968 . 5969) (nil font-lock-face web-mode-html-attr-value-face 5968 . 5969) (nil tag-attr t 5963 . 5968) (nil tag-name "v-icon" 5963 . 5968) (nil tag-type start 5963 . 5968) (nil font-lock-face web-mode-html-attr-value-face 5963 . 5968) (nil tag-attr t 5962 . 5963) (nil tag-name "v-icon" 5962 . 5963) (nil tag-type start 5962 . 5963) (nil font-lock-face web-mode-html-attr-equal-face 5962 . 5963) (nil tag-attr t 5959 . 5962) (nil tag-name "v-icon" 5959 . 5962) (nil tag-type start 5959 . 5962) (nil font-lock-face web-mode-html-attr-name-face 5959 . 5962) (nil tag-attr-beg 0 5958 . 5959) (nil tag-attr t 5958 . 5959) (nil tag-name "v-icon" 5958 . 5959) (nil tag-type start 5958 . 5959) (nil font-lock-face web-mode-html-attr-name-face 5958 . 5959) (nil tag-name "v-icon" 5957 . 5958) (nil tag-type start 5957 . 5958) (nil tag-name "v-icon" 5951 . 5957) (nil tag-type start 5951 . 5957) (nil font-lock-face web-mode-html-tag-custom-face 5951 . 5957) (nil tag-name "v-icon" 5950 . 5951) (nil tag-type start 5950 . 5951) (nil tag-beg 19 5950 . 5951) (nil font-lock-face web-mode-html-tag-bracket-face 5950 . 5951) (nil tag-name "v-btn" 5926 . 5927) (nil tag-type start 5926 . 5927) (nil tag-end t 5926 . 5927) (nil font-lock-face web-mode-html-tag-bracket-face 5926 . 5927) (nil block-side t 5925 . 5926) (nil block-end t 5925 . 5926) (nil block-token delimiter-end 5925 . 5926) (nil tag-attr t 5925 . 5926) (nil tag-attr-end 5 5925 . 5926) (nil tag-name "v-btn" 5925 . 5926) (nil tag-type start 5925 . 5926) (nil font-lock-face web-mode-block-delimiter-face 5925 . 5926) (nil block-side t 5923 . 5925) (nil tag-attr t 5923 . 5925) (nil tag-name "v-btn" 5923 . 5925) (nil tag-type start 5923 . 5925) (nil block-side t 5922 . 5923) (nil tag-attr t 5922 . 5923) (nil tag-name "v-btn" 5922 . 5923) (nil tag-type start 5922 . 5923) (nil face web-mode-variable-name-face 5922 . 5923) (nil block-side t 5921 . 5922) (nil tag-attr t 5921 . 5922) (nil tag-name "v-btn" 5921 . 5922) (nil tag-type start 5921 . 5922) (nil face web-mode-variable-name-face 5921 . 5922) (nil block-side t 5920 . 5921) (nil tag-attr t 5920 . 5921) (nil tag-name "v-btn" 5920 . 5921) (nil tag-type start 5920 . 5921) (nil face web-mode-variable-name-face 5920 . 5921) (nil block-side t 5919 . 5920) (nil tag-attr t 5919 . 5920) (nil tag-name "v-btn" 5919 . 5920) (nil tag-type start 5919 . 5920) (nil face web-mode-variable-name-face 5919 . 5920) (nil block-side t 5918 . 5919) (nil tag-attr t 5918 . 5919) (nil tag-name "v-btn" 5918 . 5919) (nil tag-type start 5918 . 5919) (nil face web-mode-variable-name-face 5918 . 5919) (nil block-side t 5917 . 5918) (nil tag-attr t 5917 . 5918) (nil tag-name "v-btn" 5917 . 5918) (nil tag-type start 5917 . 5918) (nil face web-mode-variable-name-face 5917 . 5918) (nil block-side t 5916 . 5917) (nil tag-attr t 5916 . 5917) (nil tag-name "v-btn" 5916 . 5917) (nil tag-type start 5916 . 5917) (nil face web-mode-variable-name-face 5916 . 5917) (nil block-side t 5915 . 5916) (nil tag-attr t 5915 . 5916) (nil tag-name "v-btn" 5915 . 5916) (nil tag-type start 5915 . 5916) (nil face web-mode-variable-name-face 5915 . 5916) (nil block-side t 5914 . 5915) (nil tag-attr t 5914 . 5915) (nil tag-name "v-btn" 5914 . 5915) (nil tag-type start 5914 . 5915) (nil block-side t 5913 . 5914) (nil tag-attr t 5913 . 5914) (nil tag-name "v-btn" 5913 . 5914) (nil tag-type start 5913 . 5914) (nil face web-mode-variable-name-face 5913 . 5914) (nil block-side t 5912 . 5913) (nil tag-attr t 5912 . 5913) (nil tag-name "v-btn" 5912 . 5913) (nil tag-type start 5912 . 5913) (nil face web-mode-variable-name-face 5912 . 5913) (nil block-side t 5911 . 5912) (nil tag-attr t 5911 . 5912) (nil tag-name "v-btn" 5911 . 5912) (nil tag-type start 5911 . 5912) (nil face web-mode-variable-name-face 5911 . 5912) (nil block-side t 5910 . 5911) (nil tag-attr t 5910 . 5911) (nil tag-name "v-btn" 5910 . 5911) (nil tag-type start 5910 . 5911) (nil face web-mode-variable-name-face 5910 . 5911) (nil block-side t 5909 . 5910) (nil tag-attr t 5909 . 5910) (nil tag-name "v-btn" 5909 . 5910) (nil tag-type start 5909 . 5910) (nil face web-mode-variable-name-face 5909 . 5910) (nil block-side t 5908 . 5909) (nil tag-attr t 5908 . 5909) (nil tag-name "v-btn" 5908 . 5909) (nil tag-type start 5908 . 5909) (nil face web-mode-variable-name-face 5908 . 5909) (nil block-side t 5907 . 5908) (nil tag-attr t 5907 . 5908) (nil tag-name "v-btn" 5907 . 5908) (nil tag-type start 5907 . 5908) (nil face web-mode-variable-name-face 5907 . 5908) (nil block-side t 5906 . 5907) (nil tag-attr t 5906 . 5907) (nil tag-name "v-btn" 5906 . 5907) (nil tag-type start 5906 . 5907) (nil block-side t 5905 . 5906) (nil tag-attr t 5905 . 5906) (nil tag-name "v-btn" 5905 . 5906) (nil tag-type start 5905 . 5906) (nil face web-mode-variable-name-face 5905 . 5906) (nil block-side t 5904 . 5905) (nil tag-attr t 5904 . 5905) (nil tag-name "v-btn" 5904 . 5905) (nil tag-type start 5904 . 5905) (nil face web-mode-variable-name-face 5904 . 5905) (nil block-side t 5903 . 5904) (nil tag-attr t 5903 . 5904) (nil tag-name "v-btn" 5903 . 5904) (nil tag-type start 5903 . 5904) (nil face web-mode-variable-name-face 5903 . 5904) (nil block-side t 5902 . 5903) (nil tag-attr t 5902 . 5903) (nil tag-name "v-btn" 5902 . 5903) (nil tag-type start 5902 . 5903) (nil face web-mode-variable-name-face 5902 . 5903) (nil block-side t 5900 . 5902) (nil tag-attr t 5900 . 5902) (nil tag-name "v-btn" 5900 . 5902) (nil tag-type start 5900 . 5902) (nil block-side t 5890 . 5900) (nil tag-attr t 5890 . 5900) (nil tag-name "v-btn" 5890 . 5900) (nil tag-type start 5890 . 5900) (nil face web-mode-function-call-face 5890 . 5900) (nil block-side t 5889 . 5890) (nil block-token delimiter-beg 5889 . 5890) (nil tag-attr t 5889 . 5890) (nil tag-name "v-btn" 5889 . 5890) (nil tag-type start 5889 . 5890) (nil font-lock-face web-mode-block-delimiter-face 5889 . 5890) (nil block-side t 5888 . 5889) (nil block-token delimiter-beg 5888 . 5889) (nil tag-attr t 5888 . 5889) (nil tag-name "v-btn" 5888 . 5889) (nil tag-type start 5888 . 5889) (nil font-lock-face web-mode-block-delimiter-face 5888 . 5889) (nil block-side t 5887 . 5888) (nil block-token delimiter-beg 5887 . 5888) (nil tag-attr t 5887 . 5888) (nil tag-name "v-btn" 5887 . 5888) (nil tag-type start 5887 . 5888) (nil font-lock-face web-mode-block-delimiter-face 5887 . 5888) (nil block-side t 5886 . 5887) (nil block-token delimiter-beg 5886 . 5887) (nil tag-attr t 5886 . 5887) (nil tag-name "v-btn" 5886 . 5887) (nil tag-type start 5886 . 5887) (nil font-lock-face web-mode-block-delimiter-face 5886 . 5887) (nil block-side t 5885 . 5886) (nil block-token delimiter-beg 5885 . 5886) (nil tag-attr t 5885 . 5886) (nil tag-name "v-btn" 5885 . 5886) (nil tag-type start 5885 . 5886) (nil font-lock-face web-mode-block-delimiter-face 5885 . 5886) (nil block-side t 5884 . 5885) (nil block-token delimiter-beg 5884 . 5885) (nil tag-attr t 5884 . 5885) (nil tag-name "v-btn" 5884 . 5885) (nil tag-type start 5884 . 5885) (nil font-lock-face web-mode-block-delimiter-face 5884 . 5885) (nil block-side t 5883 . 5884) (nil block-token delimiter-beg 5883 . 5884) (nil tag-attr-beg 0 5883 . 5884) (nil tag-attr t 5883 . 5884) (nil tag-name "v-btn" 5883 . 5884) (nil tag-type start 5883 . 5884) (nil font-lock-face web-mode-block-delimiter-face 5883 . 5884) (nil block-beg 0 5882 . 5883) (nil block-controls 0 5882 . 5883) (nil block-side t 5882 . 5883) (nil block-token delimiter-beg 5882 . 5883) (nil tag-name "v-btn" 5882 . 5883) (nil tag-type start 5882 . 5883) (nil font-lock-face web-mode-block-delimiter-face 5882 . 5883) (nil tag-name "v-btn" 5881 . 5882) (nil tag-type start 5881 . 5882) (nil tag-attr t 5880 . 5881) (nil tag-attr-end 0 5880 . 5881) (nil tag-name "v-btn" 5880 . 5881) (nil tag-type start 5880 . 5881) (nil font-lock-face web-mode-html-attr-name-face 5880 . 5881) (nil tag-attr t 5875 . 5880) (nil tag-name "v-btn" 5875 . 5880) (nil tag-type start 5875 . 5880) (nil font-lock-face web-mode-html-attr-name-face 5875 . 5880) (nil tag-attr-beg 0 5874 . 5875) (nil tag-attr t 5874 . 5875) (nil tag-name "v-btn" 5874 . 5875) (nil tag-type start 5874 . 5875) (nil font-lock-face web-mode-html-attr-name-face 5874 . 5875) (nil tag-name "v-btn" 5873 . 5874) (nil tag-type start 5873 . 5874) (nil tag-attr t 5872 . 5873) (nil tag-attr-end 0 5872 . 5873) (nil tag-name "v-btn" 5872 . 5873) (nil tag-type start 5872 . 5873) (nil font-lock-face web-mode-html-attr-name-face 5872 . 5873) (nil tag-attr t 5870 . 5872) (nil tag-name "v-btn" 5870 . 5872) (nil tag-type start 5870 . 5872) (nil font-lock-face web-mode-html-attr-name-face 5870 . 5872) (nil tag-attr-beg 0 5869 . 5870) (nil tag-attr t 5869 . 5870) (nil tag-name "v-btn" 5869 . 5870) (nil tag-type start 5869 . 5870) (nil font-lock-face web-mode-html-attr-name-face 5869 . 5870) (nil tag-name "v-btn" 5868 . 5869) (nil tag-type start 5868 . 5869) (nil tag-name "v-btn" 5863 . 5868) (nil tag-type start 5863 . 5868) (nil font-lock-face web-mode-html-tag-custom-face 5863 . 5868) (nil tag-name "v-btn" 5862 . 5863) (nil tag-type start 5862 . 5863) (nil tag-beg 19 5862 . 5863) (nil font-lock-face web-mode-html-tag-bracket-face 5862 . 5863) (nil tag-name "td" 5840 . 5841) (nil tag-type start 5840 . 5841) (nil tag-end t 5840 . 5841) (nil font-lock-face web-mode-html-tag-bracket-face 5840 . 5841) (nil tag-name "td" 5838 . 5840) (nil tag-type start 5838 . 5840) (nil font-lock-face web-mode-html-tag-face 5838 . 5840) (nil tag-name "td" 5837 . 5838) (nil tag-type start 5837 . 5838) (nil tag-beg 16 5837 . 5838) (nil font-lock-face web-mode-html-tag-bracket-face 5837 . 5838) (nil tag-name "tr" 5817 . 5818) (nil tag-type start 5817 . 5818) (nil tag-end t 5817 . 5818) (nil font-lock-face web-mode-html-tag-bracket-face 5817 . 5818) (nil tag-name "tr" 5815 . 5817) (nil tag-type start 5815 . 5817) (nil font-lock-face web-mode-html-tag-face 5815 . 5817) (nil tag-name "tr" 5814 . 5815) (nil tag-type start 5814 . 5815) (nil tag-beg 16 5814 . 5815) (nil font-lock-face web-mode-html-tag-bracket-face 5814 . 5815) (5798 . 6246)) nil (25671 39018 153907 103000) 0 nil])
([nil nil (("                " . -5798) 5760) nil (25671 39018 153781 30000) 0 nil])
([nil nil ((5245 . 5258) (t 25671 39018 164577 365000)) nil (25671 39268 73035 498000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5533 . 5534) (nil tag-name "tbody" 5533 . 5534) (nil tag-type start 5533 . 5534) (nil tag-end t 5533 . 5534) (nil font-lock-face web-mode-html-tag-bracket-face 5533 . 5534) (nil tag-name "tbody" 5528 . 5533) (nil tag-type start 5528 . 5533) (nil font-lock-face web-mode-html-tag-face 5528 . 5533) (nil tag-name "tbody" 5527 . 5528) (nil tag-type start 5527 . 5528) (nil tag-beg 16 5527 . 5528) (nil font-lock-face web-mode-html-tag-bracket-face 5527 . 5528) (nil tag-name "thead" 5517 . 5518) (nil tag-type end 5517 . 5518) (nil tag-end t 5517 . 5518) (nil font-lock-face web-mode-html-tag-bracket-face 5517 . 5518) (nil tag-name "thead" 5512 . 5517) (nil tag-type end 5512 . 5517) (nil font-lock-face web-mode-html-tag-face 5512 . 5517) (nil tag-name "thead" 5511 . 5512) (nil tag-type end 5511 . 5512) (nil font-lock-face web-mode-html-tag-bracket-face 5511 . 5512) (nil tag-name "thead" 5510 . 5511) (nil tag-type end 5510 . 5511) (nil tag-beg 20 5510 . 5511) (nil font-lock-face web-mode-html-tag-bracket-face 5510 . 5511) (nil tag-name "tr" 5500 . 5501) (nil tag-type end 5500 . 5501) (nil tag-end t 5500 . 5501) (nil font-lock-face web-mode-html-tag-bracket-face 5500 . 5501) (nil tag-name "tr" 5498 . 5500) (nil tag-type end 5498 . 5500) (nil font-lock-face web-mode-html-tag-face 5498 . 5500) (nil tag-name "tr" 5497 . 5498) (nil tag-type end 5497 . 5498) (nil font-lock-face web-mode-html-tag-bracket-face 5497 . 5498) (nil tag-name "tr" 5496 . 5497) (nil tag-type end 5496 . 5497) (nil tag-beg 20 5496 . 5497) (nil font-lock-face web-mode-html-tag-bracket-face 5496 . 5497) (nil tag-name "th" 5484 . 5485) (nil tag-type end 5484 . 5485) (nil tag-end t 5484 . 5485) (nil font-lock-face web-mode-html-tag-bracket-face 5484 . 5485) (nil tag-name "th" 5482 . 5484) (nil tag-type end 5482 . 5484) (nil font-lock-face web-mode-html-tag-face 5482 . 5484) (nil tag-name "th" 5481 . 5482) (nil tag-type end 5481 . 5482) (nil font-lock-face web-mode-html-tag-bracket-face 5481 . 5482) (nil tag-name "th" 5480 . 5481) (nil tag-type end 5480 . 5481) (nil tag-beg 20 5480 . 5481) (nil font-lock-face web-mode-html-tag-bracket-face 5480 . 5481) (nil tag-name "th" 5443 . 5444) (nil tag-type start 5443 . 5444) (nil tag-end t 5443 . 5444) (nil font-lock-face web-mode-html-tag-bracket-face 5443 . 5444) (nil tag-attr t 5442 . 5443) (nil tag-attr-end 5 5442 . 5443) (nil tag-name "th" 5442 . 5443) (nil tag-type start 5442 . 5443) (nil font-lock-face web-mode-html-attr-value-face 5442 . 5443) (nil tag-attr t 5432 . 5442) (nil tag-name "th" 5432 . 5442) (nil tag-type start 5432 . 5442) (nil font-lock-face web-mode-html-attr-value-face 5432 . 5442) (nil tag-attr t 5431 . 5432) (nil tag-name "th" 5431 . 5432) (nil tag-type start 5431 . 5432) (nil font-lock-face web-mode-html-attr-equal-face 5431 . 5432) (nil tag-attr t 5427 . 5431) (nil tag-name "th" 5427 . 5431) (nil tag-type start 5427 . 5431) (nil font-lock-face web-mode-html-attr-name-face 5427 . 5431) (nil tag-attr-beg 0 5426 . 5427) (nil tag-attr t 5426 . 5427) (nil tag-name "th" 5426 . 5427) (nil tag-type start 5426 . 5427) (nil font-lock-face web-mode-html-attr-name-face 5426 . 5427) (nil tag-name "th" 5425 . 5426) (nil tag-type start 5425 . 5426) (nil tag-name "th" 5423 . 5425) (nil tag-type start 5423 . 5425) (nil font-lock-face web-mode-html-tag-face 5423 . 5425) (nil tag-name "th" 5422 . 5423) (nil tag-type start 5422 . 5423) (nil tag-beg 17 5422 . 5423) (nil font-lock-face web-mode-html-tag-bracket-face 5422 . 5423) (nil tag-name "th" 5408 . 5409) (nil tag-type end 5408 . 5409) (nil tag-end t 5408 . 5409) (nil font-lock-face web-mode-html-tag-bracket-face 5408 . 5409) (nil tag-name "th" 5406 . 5408) (nil tag-type end 5406 . 5408) (nil font-lock-face web-mode-html-tag-face 5406 . 5408) (nil tag-name "th" 5405 . 5406) (nil tag-type end 5405 . 5406) (nil font-lock-face web-mode-html-tag-bracket-face 5405 . 5406) (nil tag-name "th" 5404 . 5405) (nil tag-type end 5404 . 5405) (nil tag-beg 20 5404 . 5405) (nil font-lock-face web-mode-html-tag-bracket-face 5404 . 5405) (nil tag-name "th" 5371 . 5372) (nil tag-type start 5371 . 5372) (nil tag-end t 5371 . 5372) (nil font-lock-face web-mode-html-tag-bracket-face 5371 . 5372) (nil tag-attr t 5370 . 5371) (nil tag-attr-end 5 5370 . 5371) (nil tag-name "th" 5370 . 5371) (nil tag-type start 5370 . 5371) (nil font-lock-face web-mode-html-attr-value-face 5370 . 5371) (nil tag-attr t 5360 . 5370) (nil tag-name "th" 5360 . 5370) (nil tag-type start 5360 . 5370) (nil font-lock-face web-mode-html-attr-value-face 5360 . 5370) (nil tag-attr t 5359 . 5360) (nil tag-name "th" 5359 . 5360) (nil tag-type start 5359 . 5360) (nil font-lock-face web-mode-html-attr-equal-face 5359 . 5360) (nil tag-attr t 5355 . 5359) (nil tag-name "th" 5355 . 5359) (nil tag-type start 5355 . 5359) (nil font-lock-face web-mode-html-attr-name-face 5355 . 5359) (nil tag-attr-beg 0 5354 . 5355) (nil tag-attr t 5354 . 5355) (nil tag-name "th" 5354 . 5355) (nil tag-type start 5354 . 5355) (nil font-lock-face web-mode-html-attr-name-face 5354 . 5355) (nil tag-name "th" 5353 . 5354) (nil tag-type start 5353 . 5354) (nil tag-name "th" 5351 . 5353) (nil tag-type start 5351 . 5353) (nil font-lock-face web-mode-html-tag-face 5351 . 5353) (nil tag-name "th" 5350 . 5351) (nil tag-type start 5350 . 5351) (nil tag-beg 17 5350 . 5351) (nil font-lock-face web-mode-html-tag-bracket-face 5350 . 5351) (nil tag-name "tr" 5336 . 5337) (nil tag-type start 5336 . 5337) (nil tag-end t 5336 . 5337) (nil font-lock-face web-mode-html-tag-bracket-face 5336 . 5337) (nil tag-name "tr" 5334 . 5336) (nil tag-type start 5334 . 5336) (nil font-lock-face web-mode-html-tag-face 5334 . 5336) (nil tag-name "tr" 5333 . 5334) (nil tag-type start 5333 . 5334) (nil tag-beg 16 5333 . 5334) (nil font-lock-face web-mode-html-tag-bracket-face 5333 . 5334) (nil tag-name "thead" 5321 . 5322) (nil tag-type start 5321 . 5322) (nil tag-end t 5321 . 5322) (nil font-lock-face web-mode-html-tag-bracket-face 5321 . 5322) (nil tag-name "thead" 5316 . 5321) (nil tag-type start 5316 . 5321) (nil font-lock-face web-mode-html-tag-face 5316 . 5321) (nil tag-name "thead" 5315 . 5316) (nil tag-type start 5315 . 5316) (nil tag-beg 16 5315 . 5316) (nil font-lock-face web-mode-html-tag-bracket-face 5315 . 5316) (nil tag-name "template" 5305 . 5306) (nil tag-type start 5305 . 5306) (nil tag-end t 5305 . 5306) (nil font-lock-face web-mode-html-tag-bracket-face 5305 . 5306) (nil tag-attr t 5304 . 5305) (nil tag-attr-end 0 5304 . 5305) (nil tag-name "template" 5304 . 5305) (nil tag-type start 5304 . 5305) (nil font-lock-face web-mode-html-attr-engine-face 5304 . 5305) (nil tag-attr t 5292 . 5304) (nil tag-name "template" 5292 . 5304) (nil tag-type start 5292 . 5304) (nil font-lock-face web-mode-html-attr-engine-face 5292 . 5304) (nil tag-attr-beg 2 5291 . 5292) (nil tag-attr t 5291 . 5292) (nil tag-name "template" 5291 . 5292) (nil tag-type start 5291 . 5292) (nil font-lock-face web-mode-html-attr-engine-face 5291 . 5292) (nil tag-name "template" 5290 . 5291) (nil tag-type start 5290 . 5291) (nil tag-name "template" 5282 . 5290) (nil tag-type start 5282 . 5290) (nil font-lock-face web-mode-html-tag-face 5282 . 5290) (nil tag-name "template" 5281 . 5282) (nil tag-type start 5281 . 5282) (nil tag-beg 17 5281 . 5282) (nil font-lock-face web-mode-html-tag-bracket-face 5281 . 5282) (nil tag-name "v-simple-table" 5273 . 5274) (nil tag-type start 5273 . 5274) (nil tag-end t 5273 . 5274) (nil font-lock-face web-mode-html-tag-bracket-face 5273 . 5274) (nil tag-name "v-simple-table" 5259 . 5273) (nil tag-type start 5259 . 5273) (nil font-lock-face web-mode-html-tag-custom-face 5259 . 5273) (nil tag-name "v-simple-table" 5258 . 5259) (nil tag-type start 5258 . 5259) (nil tag-beg 18 5258 . 5259) (nil font-lock-face web-mode-html-tag-bracket-face 5258 . 5259) (5258 . 5534)) nil (25671 39268 73025 540000) 0 nil])
([nil nil ((5607 . 5623) ("        " . 5607) (5582 . 5598) ("        " . 5582) (5558 . 5576) ("          " . 5558) (5532 . 5552) ("            " . 5532) (5501 . 5523) ("              " . 5501) (5458 . 5478) ("            " . 5458) (5432 . 5452) ("            " . 5432) (5405 . 5427) ("              " . 5405) (5362 . 5382) ("            " . 5362) (5339 . 5357) ("          " . 5339) (5315 . 5331) ("        " . 5315) (5275 . 5289) ("      " . 5275) 5246) nil (25671 39268 72985 351000) 0 nil])
([nil nil ((5630 . 5649)) nil (25671 39268 72979 737000) 0 nil])
([nil nil (("  " . -5647) (5649 . 5657)) nil (25671 39268 72978 422000) 0 nil])
([nil nil ((5655 . 5672)) nil (25671 39268 72977 311000) 0 nil])
([nil nil (("  " . -5670) (5672 . 5683)) nil (25671 39268 72976 327000) 0 nil])
([nil nil ((5681 . 5696)) nil (25671 39268 72975 257000) 0 nil])
([nil nil (("  " . -5694) (5696 . 5713)) nil (25671 39268 72974 264000) 0 nil])
([nil nil (("Name" . 5427) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4)) nil (25671 39268 72972 897000) 0 nil])
([nil nil ((5427 . 5433)) nil (25671 39268 72967 119000) 0 nil])
([nil nil ((" " . -5432) (undo-tree-id71 . -1) 5433) nil (25671 39268 72966 43000) 0 nil])
([nil nil (("C" . -5524) (undo-tree-id63 . -1) ("a" . -5525) (undo-tree-id64 . -1) ("l" . -5526) (undo-tree-id65 . -1) ("o" . -5527) (undo-tree-id66 . -1) ("r" . -5528) (undo-tree-id67 . -1) ("i" . -5529) (undo-tree-id68 . -1) ("e" . -5530) (undo-tree-id69 . -1) ("s" . -5531) (undo-tree-id70 . -1) 5532) nil (25671 39268 72962 111000) 0 nil])
([nil nil ((5524 . 5531)) nil (25671 39268 72952 539000) 0 nil])
([nil nil ((" " . -5530) (undo-tree-id62 . -1) 5531) nil (25671 39268 72951 410000) 0 nil])
([nil nil ((5629 . 5648)) nil (25671 39268 72949 496000) 0 nil])
([nil nil ((5648 . 5657)) nil (25671 39268 72948 730000) 0 nil])
([nil nil ((5653 . 5673) (5654 . 5672) (#("                    " 0 20 (face whitespace-trailing)) . 5653) (5653 . 5673) (5653 . 5654) ("                  " . 5653) (5652 . 5671)) nil (25671 39268 72947 200000) 0 nil])
([nil nil ((5673 . 5677)) nil (25671 39268 72945 238000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "td" tag-type start)) . -5676) (undo-tree-id61 . -1) 5677) nil (25671 39268 72944 34000) 0 nil])
([nil nil ((5676 . 5682)) nil (25671 39268 72941 610000) 0 nil])
([nil nil ((5678 . 5700) (5679 . 5699) (#("                      " 0 22 (face whitespace-trailing)) . 5678) (5678 . 5700) (5678 . 5679) ("                    " . 5678) (5677 . 5698)) nil (25671 39268 72940 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5750 . 5751) (nil rear-nonsticky t 5750 . 5751) (nil block-side t 5750 . 5751) (nil block-end t 5750 . 5751) (nil block-token delimiter-end 5750 . 5751) (nil font-lock-face web-mode-block-delimiter-face 5750 . 5751) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5750 . 5751) (nil block-side t 5749 . 5750) (nil block-token delimiter-end 5749 . 5750) (nil font-lock-face web-mode-block-delimiter-face 5749 . 5750) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5749 . 5750) (nil block-side t 5748 . 5749) (nil block-side t 5747 . 5748) (nil face (rainbow-delimiters-depth-3-face) 5747 . 5748) (nil block-side t 5746 . 5747) (nil block-side t 5745 . 5746) (nil face web-mode-variable-name-face 5745 . 5746) (nil block-side t 5744 . 5745) (nil face web-mode-variable-name-face 5744 . 5745) (nil block-side t 5743 . 5744) (nil face web-mode-variable-name-face 5743 . 5744) (nil block-side t 5742 . 5743) (nil face web-mode-variable-name-face 5742 . 5743) (nil block-side t 5741 . 5742) (nil face web-mode-variable-name-face 5741 . 5742) (nil block-side t 5740 . 5741) (nil face web-mode-variable-name-face 5740 . 5741) (nil block-side t 5739 . 5740) (nil face web-mode-variable-name-face 5739 . 5740) (nil block-side t 5738 . 5739) (nil face web-mode-variable-name-face 5738 . 5739) (nil block-side t 5737 . 5738) (nil face web-mode-variable-name-face 5737 . 5738) (nil block-side t 5736 . 5737) (nil face web-mode-variable-name-face 5736 . 5737) (nil block-side t 5735 . 5736) (nil face web-mode-variable-name-face 5735 . 5736) (nil block-side t 5734 . 5735) (nil block-side t 5733 . 5734) (nil face web-mode-variable-name-face 5733 . 5734) (nil block-side t 5732 . 5733) (nil face web-mode-variable-name-face 5732 . 5733) (nil block-side t 5731 . 5732) (nil face web-mode-variable-name-face 5731 . 5732) (nil block-side t 5730 . 5731) (nil face web-mode-variable-name-face 5730 . 5731) (nil block-side t 5729 . 5730) (nil face web-mode-variable-name-face 5729 . 5730) (nil block-side t 5728 . 5729) (nil face web-mode-variable-name-face 5728 . 5729) (nil block-side t 5727 . 5728) (nil face web-mode-variable-name-face 5727 . 5728) (nil block-side t 5726 . 5727) (nil face web-mode-variable-name-face 5726 . 5727) (nil block-side t 5725 . 5726) (nil face web-mode-variable-name-face 5725 . 5726) (nil block-side t 5724 . 5725) (nil face web-mode-variable-name-face 5724 . 5725) (nil block-side t 5723 . 5724) (nil face web-mode-variable-name-face 5723 . 5724) (nil block-side t 5722 . 5723) (nil face web-mode-variable-name-face 5722 . 5723) (nil block-side t 5721 . 5722) (nil block-side t 5720 . 5721) (nil face web-mode-variable-name-face 5720 . 5721) (nil block-side t 5719 . 5720) (nil face web-mode-variable-name-face 5719 . 5720) (nil block-side t 5718 . 5719) (nil face web-mode-variable-name-face 5718 . 5719) (nil block-side t 5717 . 5718) (nil face web-mode-variable-name-face 5717 . 5718) (nil block-side t 5716 . 5717) (nil face web-mode-variable-name-face 5716 . 5717) (nil block-side t 5715 . 5716) (nil face web-mode-variable-name-face 5715 . 5716) (nil block-side t 5714 . 5715) (nil face web-mode-variable-name-face 5714 . 5715) (nil block-side t 5713 . 5714) (nil face web-mode-variable-name-face 5713 . 5714) (nil block-side t 5712 . 5713) (nil face web-mode-variable-name-face 5712 . 5713) (nil block-side t 5711 . 5712) (nil face web-mode-variable-name-face 5711 . 5712) (nil block-side t 5710 . 5711) (nil face web-mode-variable-name-face 5710 . 5711) (nil block-side t 5709 . 5710) (nil face web-mode-variable-name-face 5709 . 5710) (nil block-side t 5708 . 5709) (nil face web-mode-variable-name-face 5708 . 5709) (nil block-side t 5707 . 5708) (nil face web-mode-variable-name-face 5707 . 5708) (nil block-side t 5706 . 5707) (nil block-side t 5705 . 5706) (nil face (rainbow-delimiters-depth-3-face) 5705 . 5706) (nil block-side t 5704 . 5705) (nil face web-mode-variable-name-face 5704 . 5705) (nil block-side t 5702 . 5704) (nil block-side t 5701 . 5702) (nil block-token delimiter-beg 5701 . 5702) (nil font-lock-face web-mode-block-delimiter-face 5701 . 5702) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 5701 . 5702) (nil block-beg 0 5700 . 5701) (nil block-controls 0 5700 . 5701) (nil block-side t 5700 . 5701) (nil block-token delimiter-beg 5700 . 5701) (nil font-lock-face web-mode-block-delimiter-face 5700 . 5701) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 5700 . 5701) (5700 . 5751)) nil (25671 39268 72933 645000) 0 nil])
([nil nil ((5677 . 5700)) nil (25671 39268 72912 819000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5862 . 5863) (nil rear-nonsticky t 5862 . 5863) (nil tag-name "v-btn" 5862 . 5863) (nil tag-type end 5862 . 5863) (nil tag-end t 5862 . 5863) (nil font-lock-face web-mode-html-tag-bracket-face 5862 . 5863) (nil tag-name "v-btn" 5857 . 5862) (nil tag-type end 5857 . 5862) (nil font-lock-face web-mode-html-tag-custom-face 5857 . 5862) (nil tag-name "v-btn" 5856 . 5857) (nil tag-type end 5856 . 5857) (nil font-lock-face web-mode-html-tag-bracket-face 5856 . 5857) (nil tag-name "v-btn" 5855 . 5856) (nil tag-type end 5855 . 5856) (nil tag-beg 22 5855 . 5856) (nil font-lock-face web-mode-html-tag-bracket-face 5855 . 5856) (nil tag-name "v-icon" 5833 . 5834) (nil tag-type end 5833 . 5834) (nil tag-end t 5833 . 5834) (nil font-lock-face web-mode-html-tag-bracket-face 5833 . 5834) (nil tag-name "v-icon" 5827 . 5833) (nil tag-type end 5827 . 5833) (nil font-lock-face web-mode-html-tag-custom-face 5827 . 5833) (nil tag-name "v-icon" 5826 . 5827) (nil tag-type end 5826 . 5827) (nil font-lock-face web-mode-html-tag-bracket-face 5826 . 5827) (nil tag-name "v-icon" 5825 . 5826) (nil tag-type end 5825 . 5826) (nil tag-beg 22 5825 . 5826) (nil font-lock-face web-mode-html-tag-bracket-face 5825 . 5826) (nil tag-name "v-icon" 5807 . 5808) (nil tag-type start 5807 . 5808) (nil tag-end t 5807 . 5808) (nil font-lock-face web-mode-html-tag-bracket-face 5807 . 5808) (nil tag-attr t 5806 . 5807) (nil tag-attr-end 4 5806 . 5807) (nil tag-name "v-icon" 5806 . 5807) (nil tag-type start 5806 . 5807) (nil font-lock-face web-mode-html-attr-value-face 5806 . 5807) (nil tag-attr t 5801 . 5806) (nil tag-name "v-icon" 5801 . 5806) (nil tag-type start 5801 . 5806) (nil font-lock-face web-mode-html-attr-value-face 5801 . 5806) (nil tag-attr t 5800 . 5801) (nil tag-name "v-icon" 5800 . 5801) (nil tag-type start 5800 . 5801) (nil font-lock-face web-mode-html-attr-equal-face 5800 . 5801) (nil tag-attr t 5797 . 5800) (nil tag-name "v-icon" 5797 . 5800) (nil tag-type start 5797 . 5800) (nil font-lock-face web-mode-html-attr-name-face 5797 . 5800) (nil tag-attr-beg 0 5796 . 5797) (nil tag-attr t 5796 . 5797) (nil tag-name "v-icon" 5796 . 5797) (nil tag-type start 5796 . 5797) (nil font-lock-face web-mode-html-attr-name-face 5796 . 5797) (nil tag-name "v-icon" 5795 . 5796) (nil tag-type start 5795 . 5796) (nil tag-name "v-icon" 5789 . 5795) (nil tag-type start 5789 . 5795) (nil font-lock-face web-mode-html-tag-custom-face 5789 . 5795) (nil tag-name "v-icon" 5788 . 5789) (nil tag-type start 5788 . 5789) (nil tag-beg 19 5788 . 5789) (nil font-lock-face web-mode-html-tag-bracket-face 5788 . 5789) (nil tag-name "v-btn" 5764 . 5765) (nil tag-type start 5764 . 5765) (nil tag-end t 5764 . 5765) (nil font-lock-face web-mode-html-tag-bracket-face 5764 . 5765) (nil block-side t 5763 . 5764) (nil block-end t 5763 . 5764) (nil block-token delimiter-end 5763 . 5764) (nil tag-attr t 5763 . 5764) (nil tag-attr-end 5 5763 . 5764) (nil tag-name "v-btn" 5763 . 5764) (nil tag-type start 5763 . 5764) (nil font-lock-face web-mode-block-delimiter-face 5763 . 5764) (nil block-side t 5761 . 5763) (nil tag-attr t 5761 . 5763) (nil tag-name "v-btn" 5761 . 5763) (nil tag-type start 5761 . 5763) (nil block-side t 5760 . 5761) (nil tag-attr t 5760 . 5761) (nil tag-name "v-btn" 5760 . 5761) (nil tag-type start 5760 . 5761) (nil face web-mode-variable-name-face 5760 . 5761) (nil block-side t 5759 . 5760) (nil tag-attr t 5759 . 5760) (nil tag-name "v-btn" 5759 . 5760) (nil tag-type start 5759 . 5760) (nil face web-mode-variable-name-face 5759 . 5760) (nil block-side t 5758 . 5759) (nil tag-attr t 5758 . 5759) (nil tag-name "v-btn" 5758 . 5759) (nil tag-type start 5758 . 5759) (nil face web-mode-variable-name-face 5758 . 5759) (nil block-side t 5757 . 5758) (nil tag-attr t 5757 . 5758) (nil tag-name "v-btn" 5757 . 5758) (nil tag-type start 5757 . 5758) (nil face web-mode-variable-name-face 5757 . 5758) (nil block-side t 5756 . 5757) (nil tag-attr t 5756 . 5757) (nil tag-name "v-btn" 5756 . 5757) (nil tag-type start 5756 . 5757) (nil face web-mode-variable-name-face 5756 . 5757) (nil block-side t 5755 . 5756) (nil tag-attr t 5755 . 5756) (nil tag-name "v-btn" 5755 . 5756) (nil tag-type start 5755 . 5756) (nil face web-mode-variable-name-face 5755 . 5756) (nil block-side t 5754 . 5755) (nil tag-attr t 5754 . 5755) (nil tag-name "v-btn" 5754 . 5755) (nil tag-type start 5754 . 5755) (nil face web-mode-variable-name-face 5754 . 5755) (nil block-side t 5753 . 5754) (nil tag-attr t 5753 . 5754) (nil tag-name "v-btn" 5753 . 5754) (nil tag-type start 5753 . 5754) (nil face web-mode-variable-name-face 5753 . 5754) (nil block-side t 5752 . 5753) (nil tag-attr t 5752 . 5753) (nil tag-name "v-btn" 5752 . 5753) (nil tag-type start 5752 . 5753) (nil block-side t 5751 . 5752) (nil tag-attr t 5751 . 5752) (nil tag-name "v-btn" 5751 . 5752) (nil tag-type start 5751 . 5752) (nil face web-mode-variable-name-face 5751 . 5752) (nil block-side t 5750 . 5751) (nil tag-attr t 5750 . 5751) (nil tag-name "v-btn" 5750 . 5751) (nil tag-type start 5750 . 5751) (nil face web-mode-variable-name-face 5750 . 5751) (nil block-side t 5749 . 5750) (nil tag-attr t 5749 . 5750) (nil tag-name "v-btn" 5749 . 5750) (nil tag-type start 5749 . 5750) (nil face web-mode-variable-name-face 5749 . 5750) (nil block-side t 5748 . 5749) (nil tag-attr t 5748 . 5749) (nil tag-name "v-btn" 5748 . 5749) (nil tag-type start 5748 . 5749) (nil face web-mode-variable-name-face 5748 . 5749) (nil block-side t 5747 . 5748) (nil tag-attr t 5747 . 5748) (nil tag-name "v-btn" 5747 . 5748) (nil tag-type start 5747 . 5748) (nil face web-mode-variable-name-face 5747 . 5748) (nil block-side t 5746 . 5747) (nil tag-attr t 5746 . 5747) (nil tag-name "v-btn" 5746 . 5747) (nil tag-type start 5746 . 5747) (nil face web-mode-variable-name-face 5746 . 5747) (nil block-side t 5745 . 5746) (nil tag-attr t 5745 . 5746) (nil tag-name "v-btn" 5745 . 5746) (nil tag-type start 5745 . 5746) (nil face web-mode-variable-name-face 5745 . 5746) (nil block-side t 5744 . 5745) (nil tag-attr t 5744 . 5745) (nil tag-name "v-btn" 5744 . 5745) (nil tag-type start 5744 . 5745) (nil block-side t 5743 . 5744) (nil tag-attr t 5743 . 5744) (nil tag-name "v-btn" 5743 . 5744) (nil tag-type start 5743 . 5744) (nil face web-mode-variable-name-face 5743 . 5744) (nil block-side t 5742 . 5743) (nil tag-attr t 5742 . 5743) (nil tag-name "v-btn" 5742 . 5743) (nil tag-type start 5742 . 5743) (nil face web-mode-variable-name-face 5742 . 5743) (nil block-side t 5741 . 5742) (nil tag-attr t 5741 . 5742) (nil tag-name "v-btn" 5741 . 5742) (nil tag-type start 5741 . 5742) (nil face web-mode-variable-name-face 5741 . 5742) (nil block-side t 5740 . 5741) (nil tag-attr t 5740 . 5741) (nil tag-name "v-btn" 5740 . 5741) (nil tag-type start 5740 . 5741) (nil face web-mode-variable-name-face 5740 . 5741) (nil block-side t 5738 . 5740) (nil tag-attr t 5738 . 5740) (nil tag-name "v-btn" 5738 . 5740) (nil tag-type start 5738 . 5740) (nil block-side t 5728 . 5738) (nil tag-attr t 5728 . 5738) (nil tag-name "v-btn" 5728 . 5738) (nil tag-type start 5728 . 5738) (nil face web-mode-function-call-face 5728 . 5738) (nil block-side t 5727 . 5728) (nil block-token delimiter-beg 5727 . 5728) (nil tag-attr t 5727 . 5728) (nil tag-name "v-btn" 5727 . 5728) (nil tag-type start 5727 . 5728) (nil font-lock-face web-mode-block-delimiter-face 5727 . 5728) (nil block-side t 5726 . 5727) (nil block-token delimiter-beg 5726 . 5727) (nil tag-attr t 5726 . 5727) (nil tag-name "v-btn" 5726 . 5727) (nil tag-type start 5726 . 5727) (nil font-lock-face web-mode-block-delimiter-face 5726 . 5727) (nil block-side t 5725 . 5726) (nil block-token delimiter-beg 5725 . 5726) (nil tag-attr t 5725 . 5726) (nil tag-name "v-btn" 5725 . 5726) (nil tag-type start 5725 . 5726) (nil font-lock-face web-mode-block-delimiter-face 5725 . 5726) (nil block-side t 5724 . 5725) (nil block-token delimiter-beg 5724 . 5725) (nil tag-attr t 5724 . 5725) (nil tag-name "v-btn" 5724 . 5725) (nil tag-type start 5724 . 5725) (nil font-lock-face web-mode-block-delimiter-face 5724 . 5725) (nil block-side t 5723 . 5724) (nil block-token delimiter-beg 5723 . 5724) (nil tag-attr t 5723 . 5724) (nil tag-name "v-btn" 5723 . 5724) (nil tag-type start 5723 . 5724) (nil font-lock-face web-mode-block-delimiter-face 5723 . 5724) (nil block-side t 5722 . 5723) (nil block-token delimiter-beg 5722 . 5723) (nil tag-attr t 5722 . 5723) (nil tag-name "v-btn" 5722 . 5723) (nil tag-type start 5722 . 5723) (nil font-lock-face web-mode-block-delimiter-face 5722 . 5723) (nil block-side t 5721 . 5722) (nil block-token delimiter-beg 5721 . 5722) (nil tag-attr-beg 0 5721 . 5722) (nil tag-attr t 5721 . 5722) (nil tag-name "v-btn" 5721 . 5722) (nil tag-type start 5721 . 5722) (nil font-lock-face web-mode-block-delimiter-face 5721 . 5722) (nil block-beg 0 5720 . 5721) (nil block-controls 0 5720 . 5721) (nil block-side t 5720 . 5721) (nil block-token delimiter-beg 5720 . 5721) (nil tag-name "v-btn" 5720 . 5721) (nil tag-type start 5720 . 5721) (nil font-lock-face web-mode-block-delimiter-face 5720 . 5721) (nil tag-name "v-btn" 5719 . 5720) (nil tag-type start 5719 . 5720) (nil tag-attr t 5718 . 5719) (nil tag-attr-end 0 5718 . 5719) (nil tag-name "v-btn" 5718 . 5719) (nil tag-type start 5718 . 5719) (nil font-lock-face web-mode-html-attr-name-face 5718 . 5719) (nil tag-attr t 5713 . 5718) (nil tag-name "v-btn" 5713 . 5718) (nil tag-type start 5713 . 5718) (nil font-lock-face web-mode-html-attr-name-face 5713 . 5718) (nil tag-attr-beg 0 5712 . 5713) (nil tag-attr t 5712 . 5713) (nil tag-name "v-btn" 5712 . 5713) (nil tag-type start 5712 . 5713) (nil font-lock-face web-mode-html-attr-name-face 5712 . 5713) (nil tag-name "v-btn" 5711 . 5712) (nil tag-type start 5711 . 5712) (nil tag-attr t 5710 . 5711) (nil tag-attr-end 0 5710 . 5711) (nil tag-name "v-btn" 5710 . 5711) (nil tag-type start 5710 . 5711) (nil font-lock-face web-mode-html-attr-name-face 5710 . 5711) (nil tag-attr t 5708 . 5710) (nil tag-name "v-btn" 5708 . 5710) (nil tag-type start 5708 . 5710) (nil font-lock-face web-mode-html-attr-name-face 5708 . 5710) (nil tag-attr-beg 0 5707 . 5708) (nil tag-attr t 5707 . 5708) (nil tag-name "v-btn" 5707 . 5708) (nil tag-type start 5707 . 5708) (nil font-lock-face web-mode-html-attr-name-face 5707 . 5708) (nil tag-name "v-btn" 5706 . 5707) (nil tag-type start 5706 . 5707) (nil tag-name "v-btn" 5701 . 5706) (nil tag-type start 5701 . 5706) (nil font-lock-face web-mode-html-tag-custom-face 5701 . 5706) (nil tag-name "v-btn" 5700 . 5701) (nil tag-type start 5700 . 5701) (nil tag-beg 19 5700 . 5701) (nil font-lock-face web-mode-html-tag-bracket-face 5700 . 5701) (5700 . 5863)) nil (25671 39268 72899 526000) 0 nil])
([nil nil ((5963 . 5984)) nil (25671 39268 72844 505000) 0 nil])
([nil nil ((5984 . 5993)) nil (25671 39268 72843 680000) 0 nil])
([nil nil ((5989 . 6011) (5990 . 6010) (#("                      " 0 22 (face whitespace-trailing)) . 5989) (5989 . 6011) (5989 . 5990) ("                    " . 5989) (5988 . 6009)) nil (25671 39268 72842 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6045 . 6046) (nil rear-nonsticky t 6045 . 6046) (nil block-side t 6045 . 6046) (nil block-end t 6045 . 6046) (nil block-token delimiter-end 6045 . 6046) (nil font-lock-face web-mode-block-delimiter-face 6045 . 6046) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6045 . 6046) (nil block-side t 6044 . 6045) (nil block-token delimiter-end 6044 . 6045) (nil font-lock-face web-mode-block-delimiter-face 6044 . 6045) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6044 . 6045) (nil block-side t 6043 . 6044) (nil block-side t 6042 . 6043) (nil face (rainbow-delimiters-depth-3-face) 6042 . 6043) (nil block-side t 6041 . 6042) (nil block-side t 6040 . 6041) (nil face web-mode-variable-name-face 6040 . 6041) (nil block-side t 6039 . 6040) (nil face web-mode-variable-name-face 6039 . 6040) (nil block-side t 6038 . 6039) (nil face web-mode-variable-name-face 6038 . 6039) (nil block-side t 6037 . 6038) (nil face web-mode-variable-name-face 6037 . 6038) (nil block-side t 6036 . 6037) (nil face web-mode-variable-name-face 6036 . 6037) (nil block-side t 6035 . 6036) (nil face web-mode-variable-name-face 6035 . 6036) (nil block-side t 6034 . 6035) (nil face web-mode-variable-name-face 6034 . 6035) (nil block-side t 6033 . 6034) (nil face web-mode-variable-name-face 6033 . 6034) (nil block-side t 6032 . 6033) (nil block-side t 6031 . 6032) (nil face web-mode-variable-name-face 6031 . 6032) (nil block-side t 6030 . 6031) (nil face web-mode-variable-name-face 6030 . 6031) (nil block-side t 6029 . 6030) (nil face web-mode-variable-name-face 6029 . 6030) (nil block-side t 6028 . 6029) (nil face web-mode-variable-name-face 6028 . 6029) (nil block-side t 6027 . 6028) (nil face web-mode-variable-name-face 6027 . 6028) (nil block-side t 6026 . 6027) (nil face web-mode-variable-name-face 6026 . 6027) (nil block-side t 6025 . 6026) (nil face web-mode-variable-name-face 6025 . 6026) (nil block-side t 6024 . 6025) (nil block-side t 6023 . 6024) (nil face web-mode-variable-name-face 6023 . 6024) (nil block-side t 6022 . 6023) (nil face web-mode-variable-name-face 6022 . 6023) (nil block-side t 6021 . 6022) (nil face web-mode-variable-name-face 6021 . 6022) (nil block-side t 6020 . 6021) (nil face web-mode-variable-name-face 6020 . 6021) (nil block-side t 6019 . 6020) (nil block-side t 6018 . 6019) (nil face (rainbow-delimiters-depth-3-face) 6018 . 6019) (nil block-side t 6017 . 6018) (nil face web-mode-variable-name-face 6017 . 6018) (nil block-side t 6016 . 6017) (nil face web-mode-variable-name-face 6016 . 6017) (nil block-side t 6015 . 6016) (nil face web-mode-variable-name-face 6015 . 6016) (nil block-side t 6014 . 6015) (nil face web-mode-variable-name-face 6014 . 6015) (nil block-side t 6013 . 6014) (nil block-side t 6012 . 6013) (nil block-token delimiter-beg 6012 . 6013) (nil font-lock-face web-mode-block-delimiter-face 6012 . 6013) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 6012 . 6013) (nil block-beg 0 6011 . 6012) (nil block-controls 0 6011 . 6012) (nil block-side t 6011 . 6012) (nil block-token delimiter-beg 6011 . 6012) (nil font-lock-face web-mode-block-delimiter-face 6011 . 6012) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 6011 . 6012) (6011 . 6046)) nil (25671 39268 72836 534000) 0 nil])
([nil nil ((#("            <v-row>
              <v-col>
                <tr>
                  <td>
                    <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
                      <v-icon size=\"17px\">mdi-select-search</v-icon>
                    </v-btn>
                    {{ $t('SensorOverview.TableHeaders.LastPackage') }}
                  </td>
                  <td>
                    {{ item[\"Last Package Received\"] }}
                  </td>
                </tr>
              </v-col>
              <v-col>
                <tr>
                  <td>
                    <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
                      <v-icon size=\"17px\">mdi-select-search</v-icon>
                    </v-btn>
                    {{ $t('SensorOverview.TableHeaders.LastPackage') }}
                  </td>
                  <td>
                    {{ item[\"Last Package Received\"] }}
                  </td>
                </tr>
              </v-col>
            </v-row>" 12 13 (tag-name "v-row" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 35 40 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 40 41 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 58 59 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 59 61 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 61 62 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 81 82 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 82 84 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 84 85 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 106 107 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 107 112 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 112 113 (tag-name "v-btn" tag-type start) 113 114 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 114 116 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 116 117 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 117 118 (tag-name "v-btn" tag-type start) 118 119 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 119 124 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 124 125 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 125 126 (tag-name "v-btn" tag-type start) 126 127 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 127 128 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 128 129 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 129 130 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 130 131 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 131 132 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 132 133 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 133 134 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 134 144 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 144 146 (block-side t tag-attr t tag-name "v-btn" tag-type start) 146 147 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 147 148 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 148 149 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 149 150 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 150 151 (block-side t tag-attr t tag-name "v-btn" tag-type start) 151 152 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 152 153 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 153 154 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 154 155 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 155 156 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 156 157 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 157 158 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 158 159 (block-side t tag-attr t tag-name "v-btn" tag-type start) 159 160 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 160 161 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 161 162 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 162 163 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 163 164 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 164 165 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 165 166 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 166 167 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 167 169 (block-side t tag-attr t tag-name "v-btn" tag-type start) 169 170 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 170 171 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 194 195 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 195 201 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 201 202 (tag-name "v-icon" tag-type start) 202 203 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 203 206 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 206 207 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 207 212 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 212 213 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 213 214 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 231 232 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 232 233 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 233 239 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 239 240 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 261 262 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 262 263 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 263 268 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 268 269 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 290 291 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 291 292 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 292 294 (block-side t) 294 295 (block-side t face web-mode-variable-name-face) 295 296 (block-side t face (rainbow-delimiters-depth-3-face)) 296 297 (block-side t) 297 298 (block-side t face web-mode-variable-name-face) 298 299 (block-side t face web-mode-variable-name-face) 299 300 (block-side t face web-mode-variable-name-face) 300 301 (block-side t face web-mode-variable-name-face) 301 302 (block-side t face web-mode-variable-name-face) 302 303 (block-side t face web-mode-variable-name-face) 303 304 (block-side t face web-mode-variable-name-face) 304 305 (block-side t face web-mode-variable-name-face) 305 306 (block-side t face web-mode-variable-name-face) 306 307 (block-side t face web-mode-variable-name-face) 307 308 (block-side t face web-mode-variable-name-face) 308 309 (block-side t face web-mode-variable-name-face) 309 310 (block-side t face web-mode-variable-name-face) 310 311 (block-side t face web-mode-variable-name-face) 311 312 (block-side t) 312 313 (block-side t face web-mode-variable-name-face) 313 314 (block-side t face web-mode-variable-name-face) 314 315 (block-side t face web-mode-variable-name-face) 315 316 (block-side t face web-mode-variable-name-face) 316 317 (block-side t face web-mode-variable-name-face) 317 318 (block-side t face web-mode-variable-name-face) 318 319 (block-side t face web-mode-variable-name-face) 319 320 (block-side t face web-mode-variable-name-face) 320 321 (block-side t face web-mode-variable-name-face) 321 322 (block-side t face web-mode-variable-name-face) 322 323 (block-side t face web-mode-variable-name-face) 323 324 (block-side t face web-mode-variable-name-face) 324 325 (block-side t) 325 326 (block-side t face web-mode-variable-name-face) 326 327 (block-side t face web-mode-variable-name-face) 327 328 (block-side t face web-mode-variable-name-face) 328 329 (block-side t face web-mode-variable-name-face) 329 330 (block-side t face web-mode-variable-name-face) 330 331 (block-side t face web-mode-variable-name-face) 331 332 (block-side t face web-mode-variable-name-face) 332 333 (block-side t face web-mode-variable-name-face) 333 334 (block-side t face web-mode-variable-name-face) 334 335 (block-side t face web-mode-variable-name-face) 335 336 (block-side t face web-mode-variable-name-face) 336 337 (block-side t) 337 338 (block-side t face (rainbow-delimiters-depth-3-face)) 338 339 (block-side t) 339 340 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 340 341 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 360 361 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 361 362 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 362 364 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 364 365 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 384 385 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 385 387 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 387 388 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 409 410 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 410 411 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 411 412 (block-side t) 412 413 (block-side t face web-mode-variable-name-face) 413 414 (block-side t face web-mode-variable-name-face) 414 415 (block-side t face web-mode-variable-name-face) 415 416 (block-side t face web-mode-variable-name-face) 416 417 (block-side t face (rainbow-delimiters-depth-3-face)) 417 418 (block-side t) 418 419 (block-side t face web-mode-variable-name-face) 419 420 (block-side t face web-mode-variable-name-face) 420 421 (block-side t face web-mode-variable-name-face) 421 422 (block-side t face web-mode-variable-name-face) 422 423 (block-side t) 423 424 (block-side t face web-mode-variable-name-face) 424 425 (block-side t face web-mode-variable-name-face) 425 426 (block-side t face web-mode-variable-name-face) 426 427 (block-side t face web-mode-variable-name-face) 427 428 (block-side t face web-mode-variable-name-face) 428 429 (block-side t face web-mode-variable-name-face) 429 430 (block-side t face web-mode-variable-name-face) 430 431 (block-side t) 431 432 (block-side t face web-mode-variable-name-face) 432 433 (block-side t face web-mode-variable-name-face) 433 434 (block-side t face web-mode-variable-name-face) 434 435 (block-side t face web-mode-variable-name-face) 435 436 (block-side t face web-mode-variable-name-face) 436 437 (block-side t face web-mode-variable-name-face) 437 438 (block-side t face web-mode-variable-name-face) 438 439 (block-side t face web-mode-variable-name-face) 439 440 (block-side t) 440 441 (block-side t face (rainbow-delimiters-depth-3-face)) 441 442 (block-side t) 442 443 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 443 444 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 463 464 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 464 465 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 465 467 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 467 468 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 485 486 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 486 487 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 487 489 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 489 490 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 505 506 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 506 507 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 507 512 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 512 513 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 528 529 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 529 534 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 534 535 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 552 553 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 553 555 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 555 556 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 575 576 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 576 578 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 578 579 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 600 601 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 601 606 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 606 607 (tag-name "v-btn" tag-type start) 607 608 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 608 610 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 610 611 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 611 612 (tag-name "v-btn" tag-type start) 612 613 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 613 618 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 618 619 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 619 620 (tag-name "v-btn" tag-type start) 620 621 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 621 622 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 622 623 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 623 624 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 624 625 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 625 626 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 626 627 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 627 628 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 628 638 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 638 640 (block-side t tag-attr t tag-name "v-btn" tag-type start) 640 641 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 641 642 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 642 643 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 643 644 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 644 645 (block-side t tag-attr t tag-name "v-btn" tag-type start) 645 646 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 646 647 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 647 648 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 648 649 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 649 650 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 650 651 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 651 652 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 652 653 (block-side t tag-attr t tag-name "v-btn" tag-type start) 653 654 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 654 655 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 655 656 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 656 657 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 657 658 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 658 659 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 659 660 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 660 661 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 661 663 (block-side t tag-attr t tag-name "v-btn" tag-type start) 663 664 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 664 665 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 688 689 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 689 695 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 695 696 (tag-name "v-icon" tag-type start) 696 697 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 697 700 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 700 701 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 701 706 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 706 707 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 707 708 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 725 726 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 726 727 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 727 733 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 733 734 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 755 756 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 756 757 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 757 762 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 762 763 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 784 785 (block-beg 0 block-controls nil block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 785 786 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 786 788 (block-side t) 788 789 (block-side t face web-mode-variable-name-face) 789 790 (block-side t face (rainbow-delimiters-depth-3-face)) 790 791 (block-side t) 791 792 (block-side t face web-mode-variable-name-face) 792 793 (block-side t face web-mode-variable-name-face) 793 794 (block-side t face web-mode-variable-name-face) 794 795 (block-side t face web-mode-variable-name-face) 795 796 (block-side t face web-mode-variable-name-face) 796 797 (block-side t face web-mode-variable-name-face) 797 798 (block-side t face web-mode-variable-name-face) 798 799 (block-side t face web-mode-variable-name-face) 799 800 (block-side t face web-mode-variable-name-face) 800 801 (block-side t face web-mode-variable-name-face) 801 802 (block-side t face web-mode-variable-name-face) 802 803 (block-side t face web-mode-variable-name-face) 803 804 (block-side t face web-mode-variable-name-face) 804 805 (block-side t face web-mode-variable-name-face) 805 806 (block-side t) 806 807 (block-side t face web-mode-variable-name-face) 807 808 (block-side t face web-mode-variable-name-face) 808 809 (block-side t face web-mode-variable-name-face) 809 810 (block-side t face web-mode-variable-name-face) 810 811 (block-side t face web-mode-variable-name-face) 811 812 (block-side t face web-mode-variable-name-face) 812 813 (block-side t face web-mode-variable-name-face) 813 814 (block-side t face web-mode-variable-name-face) 814 815 (block-side t face web-mode-variable-name-face) 815 816 (block-side t face web-mode-variable-name-face) 816 817 (block-side t face web-mode-variable-name-face) 817 818 (block-side t face web-mode-variable-name-face) 818 819 (block-side t) 819 820 (block-side t face web-mode-variable-name-face) 820 821 (block-side t face web-mode-variable-name-face) 821 822 (block-side t face web-mode-variable-name-face) 822 823 (block-side t face web-mode-variable-name-face) 823 824 (block-side t face web-mode-variable-name-face) 824 825 (block-side t face web-mode-variable-name-face) 825 826 (block-side t face web-mode-variable-name-face) 826 827 (block-side t face web-mode-variable-name-face) 827 828 (block-side t face web-mode-variable-name-face) 828 829 (block-side t face web-mode-variable-name-face) 829 830 (block-side t face web-mode-variable-name-face) 830 831 (block-side t) 831 832 (block-side t face (rainbow-delimiters-depth-3-face)) 832 833 (block-side t) 833 834 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 834 835 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 854 855 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 855 856 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 856 858 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 858 859 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 878 879 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 879 881 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 881 882 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 903 904 (block-beg 0 block-controls nil block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 904 905 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 905 906 (block-side t) 906 907 (block-side t face web-mode-variable-name-face) 907 908 (block-side t face web-mode-variable-name-face) 908 909 (block-side t face web-mode-variable-name-face) 909 910 (block-side t face web-mode-variable-name-face) 910 911 (block-side t face (rainbow-delimiters-depth-3-face)) 911 912 (block-side t) 912 913 (block-side t face web-mode-variable-name-face) 913 914 (block-side t face web-mode-variable-name-face) 914 915 (block-side t face web-mode-variable-name-face) 915 916 (block-side t face web-mode-variable-name-face) 916 917 (block-side t) 917 918 (block-side t face web-mode-variable-name-face) 918 919 (block-side t face web-mode-variable-name-face) 919 920 (block-side t face web-mode-variable-name-face) 920 921 (block-side t face web-mode-variable-name-face) 921 922 (block-side t face web-mode-variable-name-face) 922 923 (block-side t face web-mode-variable-name-face) 923 924 (block-side t face web-mode-variable-name-face) 924 925 (block-side t) 925 926 (block-side t face web-mode-variable-name-face) 926 927 (block-side t face web-mode-variable-name-face) 927 928 (block-side t face web-mode-variable-name-face) 928 929 (block-side t face web-mode-variable-name-face) 929 930 (block-side t face web-mode-variable-name-face) 930 931 (block-side t face web-mode-variable-name-face) 931 932 (block-side t face web-mode-variable-name-face) 932 933 (block-side t face web-mode-variable-name-face) 933 934 (block-side t) 934 935 (block-side t face (rainbow-delimiters-depth-3-face)) 935 936 (block-side t) 936 937 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 937 938 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 957 958 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 958 959 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 959 961 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 961 962 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 979 980 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 980 981 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 981 983 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 983 984 (rear-nonsticky t tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 999 1000 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1000 1001 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1001 1006 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 1006 1007 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1020 1021 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1021 1022 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1022 1027 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 1027 1028 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6178) (undo-tree-id50 . -1028) (undo-tree-id51 . -20) (undo-tree-id52 . -532) (undo-tree-id53 . -490) (undo-tree-id54 . -552) (undo-tree-id55 . -1007) (undo-tree-id56 . -338) (undo-tree-id57 . -341) (undo-tree-id58 . -269) (undo-tree-id59 . -444) (undo-tree-id60 . -1028)) nil (25671 39268 72817 757000) 0 nil])
([nil nil (("
" . -6177) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 6178) nil (25671 39268 72800 411000) 0 nil])
([nil nil ((#("            <v-simple-table>
              <template v-slot:default>
                <thead>
                  <tr>
                    <th class=\"text-left\">
                      names
                    </th>
                    <th class=\"text-left\">
                      values
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
                      <v-icon size=\"17px\">mdi-select-search</v-icon>
                    </v-btn>
                      {{ $t('SensorOverview.TableHeaders.LastPackage') }}
                    </td>
                    <td>
                      {{ item[\"Last Package Received\"] }}
                    </td>
                  </tr>
                </tbody>
              </template>
            </v-simple-table>" 12 13 (tag-name "v-simple-table" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 13 27 (tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-simple-table" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 44 52 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 52 53 (tag-name "template" tag-type start) 53 54 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 54 66 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 66 67 (tag-attr t tag-attr-end 0 tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 67 68 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 85 86 (tag-name "thead" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 86 91 (tag-name "thead" tag-type start font-lock-face web-mode-html-tag-face) 91 92 (tag-name "thead" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 111 112 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 112 114 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 114 115 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 136 137 (tag-name "th" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 137 139 (tag-name "th" tag-type start font-lock-face web-mode-html-tag-face) 139 140 (tag-name "th" tag-type start) 140 141 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 141 145 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 145 146 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 146 156 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 156 157 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 157 158 (tag-name "th" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 207 208 (tag-name "th" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 208 209 (tag-name "th" tag-type end font-lock-face web-mode-html-tag-bracket-face) 209 211 (tag-name "th" tag-type end font-lock-face web-mode-html-tag-face) 211 212 (tag-name "th" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 233 234 (tag-name "th" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 234 236 (tag-name "th" tag-type start font-lock-face web-mode-html-tag-face) 236 237 (tag-name "th" tag-type start) 237 238 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 238 242 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 242 243 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 243 253 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 253 254 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 254 255 (tag-name "th" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 305 306 (tag-name "th" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 306 307 (tag-name "th" tag-type end font-lock-face web-mode-html-tag-bracket-face) 307 309 (tag-name "th" tag-type end font-lock-face web-mode-html-tag-face) 309 310 (tag-name "th" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 329 330 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 330 331 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 331 333 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 333 334 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 351 352 (tag-name "thead" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 352 353 (tag-name "thead" tag-type end font-lock-face web-mode-html-tag-bracket-face) 353 358 (tag-name "thead" tag-type end font-lock-face web-mode-html-tag-face) 358 359 (tag-name "thead" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 376 377 (tag-name "tbody" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 377 382 (tag-name "tbody" tag-type start font-lock-face web-mode-html-tag-face) 382 383 (rear-nonsticky t tag-name "tbody" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 402 403 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 403 405 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 405 406 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 427 428 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 428 430 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 430 431 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 454 455 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 455 460 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 460 461 (tag-name "v-btn" tag-type start) 461 462 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 462 464 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 464 465 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 465 466 (tag-name "v-btn" tag-type start) 466 467 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 467 472 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 472 473 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 473 474 (tag-name "v-btn" tag-type start) 474 475 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 475 476 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 476 477 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 477 478 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 478 479 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 479 480 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 480 481 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 481 482 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 482 492 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 492 494 (block-side t tag-attr t tag-name "v-btn" tag-type start) 494 495 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 495 496 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 496 497 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 497 498 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 498 499 (block-side t tag-attr t tag-name "v-btn" tag-type start) 499 500 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 500 501 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 501 502 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 502 503 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 503 504 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 504 505 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 505 506 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 506 507 (block-side t tag-attr t tag-name "v-btn" tag-type start) 507 508 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 508 509 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 509 510 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 510 511 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 511 512 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 512 513 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 513 514 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 514 515 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 515 517 (block-side t tag-attr t tag-name "v-btn" tag-type start) 517 518 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 518 519 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 542 543 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 543 549 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 549 550 (tag-name "v-icon" tag-type start) 550 551 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 551 554 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 554 555 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 555 560 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 560 561 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 561 562 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 579 580 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 580 581 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 581 587 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 587 588 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 609 610 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 610 611 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 611 616 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 616 617 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 640 641 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 641 642 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 642 644 (block-side t) 644 645 (block-side t face web-mode-variable-name-face) 645 646 (block-side t face (rainbow-delimiters-depth-3-face)) 646 647 (block-side t) 647 648 (block-side t face web-mode-variable-name-face) 648 649 (block-side t face web-mode-variable-name-face) 649 650 (block-side t face web-mode-variable-name-face) 650 651 (block-side t face web-mode-variable-name-face) 651 652 (block-side t face web-mode-variable-name-face) 652 653 (block-side t face web-mode-variable-name-face) 653 654 (block-side t face web-mode-variable-name-face) 654 655 (block-side t face web-mode-variable-name-face) 655 656 (block-side t face web-mode-variable-name-face) 656 657 (block-side t face web-mode-variable-name-face) 657 658 (block-side t face web-mode-variable-name-face) 658 659 (block-side t face web-mode-variable-name-face) 659 660 (block-side t face web-mode-variable-name-face) 660 661 (block-side t face web-mode-variable-name-face) 661 662 (block-side t) 662 663 (block-side t face web-mode-variable-name-face) 663 664 (block-side t face web-mode-variable-name-face) 664 665 (block-side t face web-mode-variable-name-face) 665 666 (block-side t face web-mode-variable-name-face) 666 667 (block-side t face web-mode-variable-name-face) 667 668 (block-side t face web-mode-variable-name-face) 668 669 (block-side t face web-mode-variable-name-face) 669 670 (block-side t face web-mode-variable-name-face) 670 671 (block-side t face web-mode-variable-name-face) 671 672 (block-side t face web-mode-variable-name-face) 672 673 (block-side t face web-mode-variable-name-face) 673 674 (block-side t face web-mode-variable-name-face) 674 675 (block-side t) 675 676 (block-side t face web-mode-variable-name-face) 676 677 (block-side t face web-mode-variable-name-face) 677 678 (block-side t face web-mode-variable-name-face) 678 679 (block-side t face web-mode-variable-name-face) 679 680 (block-side t face web-mode-variable-name-face) 680 681 (block-side t face web-mode-variable-name-face) 681 682 (block-side t face web-mode-variable-name-face) 682 683 (block-side t face web-mode-variable-name-face) 683 684 (block-side t face web-mode-variable-name-face) 684 685 (block-side t face web-mode-variable-name-face) 685 686 (block-side t face web-mode-variable-name-face) 686 687 (block-side t) 687 688 (block-side t face (rainbow-delimiters-depth-3-face)) 688 689 (block-side t) 689 690 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 690 691 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 712 713 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 713 714 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 714 716 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 716 717 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 738 739 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 739 741 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 741 742 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 765 766 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 766 767 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 767 768 (block-side t) 768 769 (block-side t face web-mode-variable-name-face) 769 770 (block-side t face web-mode-variable-name-face) 770 771 (block-side t face web-mode-variable-name-face) 771 772 (block-side t face web-mode-variable-name-face) 772 773 (block-side t face (rainbow-delimiters-depth-3-face)) 773 774 (block-side t) 774 775 (block-side t face web-mode-variable-name-face) 775 776 (block-side t face web-mode-variable-name-face) 776 777 (block-side t face web-mode-variable-name-face) 777 778 (block-side t face web-mode-variable-name-face) 778 779 (block-side t) 779 780 (block-side t face web-mode-variable-name-face) 780 781 (block-side t face web-mode-variable-name-face) 781 782 (block-side t face web-mode-variable-name-face) 782 783 (block-side t face web-mode-variable-name-face) 783 784 (block-side t face web-mode-variable-name-face) 784 785 (block-side t face web-mode-variable-name-face) 785 786 (block-side t face web-mode-variable-name-face) 786 787 (block-side t) 787 788 (block-side t face web-mode-variable-name-face) 788 789 (block-side t face web-mode-variable-name-face) 789 790 (block-side t face web-mode-variable-name-face) 790 791 (block-side t face web-mode-variable-name-face) 791 792 (block-side t face web-mode-variable-name-face) 792 793 (block-side t face web-mode-variable-name-face) 793 794 (block-side t face web-mode-variable-name-face) 794 795 (block-side t face web-mode-variable-name-face) 795 796 (block-side t) 796 797 (block-side t face (rainbow-delimiters-depth-3-face)) 797 798 (block-side t) 798 799 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 799 800 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 821 822 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 822 823 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 823 825 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 825 826 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 845 846 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 846 847 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 847 849 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 849 850 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 867 868 (tag-name "tbody" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 868 869 (tag-name "tbody" tag-type end font-lock-face web-mode-html-tag-bracket-face) 869 874 (tag-name "tbody" tag-type end font-lock-face web-mode-html-tag-face) 874 875 (tag-name "tbody" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 890 891 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 891 892 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 892 900 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 900 901 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 914 915 (tag-name "v-simple-table" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 915 916 (tag-name "v-simple-table" tag-type end font-lock-face web-mode-html-tag-bracket-face) 916 930 (tag-name "v-simple-table" tag-type end font-lock-face web-mode-html-tag-custom-face) 930 931 (tag-name "v-simple-table" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5246) (undo-tree-id96 . -931) (undo-tree-id97 . -405) (undo-tree-id98 . -29) (undo-tree-id99 . -931) (undo-tree-id100 . -931) (undo-tree-id101 . -931) (undo-tree-id102 . -12) (undo-tree-id103 . -383) (undo-tree-id104 . -383) (undo-tree-id105 . -212) (undo-tree-id106 . -181) (undo-tree-id107 . -931) (undo-tree-id108 . -181) (undo-tree-id109 . -931) (undo-tree-id110 . -640) (undo-tree-id111 . -931) (undo-tree-id112 . -454) (undo-tree-id113 . -931) (undo-tree-id114 . -765) (undo-tree-id115 . -931) (undo-tree-id116 . -931) (t 25671 39268 84546 588000)) nil (25671 39326 367547 527000) 0 nil])
([nil nil (("
" . -5245) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 5246) nil (25671 39497 395788 453000) 0 nil])
([nil nil ((9034 . 9051)) nil (25671 39581 470365 125000) 0 nil] [nil nil ((5245 . 5258) (t 25671 39326 382405 548000)) (("
            " . 5245) (undo-tree-id200 . -13) (undo-tree-id201 . -13) (undo-tree-id202 . -13) (undo-tree-id203 . -1) (undo-tree-id204 . -13) (undo-tree-id205 . -1)) (25671 39496 681641 259000) 0 nil] [nil nil ((5261 . 5262) (t 25671 39326 382405 548000)) ((#(" " 0 1 (tag-name "tr" tag-type start)) . 5261) (undo-tree-id117 . -1)) (25671 39344 13754 255000) 0 nil])
([nil nil ((9051 . 9066)) nil (25671 39581 470364 188000) 0 nil])
([nil nil ((5258 . 5267)) ((#("<tr></tr>" 0 1 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 3 4 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 8 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 8 9 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5258) (undo-tree-id185 . -4) (undo-tree-id186 . -3) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4)) (25671 39496 426527 232000) 0 nil])
nil
([nil nil ((9059 . 9077) (9060 . 9076) (#("                  " 0 18 (face whitespace-trailing)) . 9059) (9059 . 9077) (9059 . 9060) ("                " . 9059) (9058 . 9075)) nil (25671 39581 470362 701000) 0 nil])
([nil nil ((5263 . 5277) (5264 . 5276) (#("              " 0 14 (face whitespace-trailing)) . 5263) (5263 . 5277) (5263 . 5264) ("            " . 5263) (5262 . 5275)) (("
            " . 5262) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (5263 . 5275) ("
" . 5263) (undo-tree-id178 . -1) ("              " . 5263) (5263 . 5277) ("            " . 5264) ("              " . 5263) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14)) (25671 39495 994290 464000) 0 nil])
([nil nil ((9034 . 9051)) nil (25671 39581 470360 271000) 0 nil])
([nil nil ((5277 . 5286)) ((#("<td></td>" 0 1 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 3 4 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 8 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 8 9 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5277) (undo-tree-id140 . -3) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4)) (25671 39495 686691 20000) 0 nil])
([nil nil (("  " . -9049) (9051 . 9059)) nil (25671 39581 470359 198000) 0 nil])
([nil nil ((5282 . 5298) (5283 . 5297) (#("                " 0 16 (face whitespace-trailing)) . 5282) (5282 . 5298) (5282 . 5283) ("              " . 5282) (5281 . 5296)) (("
              " . 5281) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (5282 . 5296) ("
" . 5282) (#("                " 0 16 (face whitespace-trailing)) . 5282) (5282 . 5298) ("              " . 5283) (#("                " 0 16 (face whitespace-trailing)) . 5282) (undo-tree-id139 . -16)) (25671 39495 370789 428000) 0 nil])
([nil nil ((#("                </v-row>" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9101) (undo-tree-id212 . -24) (undo-tree-id213 . -24)) nil (25671 39581 470357 577000) 0 nil])
([nil nil ((5280 . 5281)) ((#(" " 0 1 (tag-name "td" tag-type start)) . 5280) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1)) (25671 39494 998301 354000) 0 nil])
([nil nil ((" " . -9099) (undo-tree-id207 . -1) (undo-tree-id208 . -1) ("
" . -9100) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 9101) nil (25671 39581 470353 939000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5305 . 5306) (nil block-side t 5305 . 5306) (nil block-end t 5305 . 5306) (nil block-token delimiter-end 5305 . 5306) (nil tag-attr t 5305 . 5306) (nil tag-attr-end 8 5305 . 5306) (nil tag-name "td" 5305 . 5306) (nil tag-type start 5305 . 5306) (nil font-lock-face web-mode-block-delimiter-face 5305 . 5306) (nil block-side t 5304 . 5305) (nil tag-attr t 5304 . 5305) (nil tag-name "td" 5304 . 5305) (nil tag-type start 5304 . 5305) (nil face web-mode-variable-name-face 5304 . 5305) (nil block-side t 5303 . 5304) (nil tag-attr t 5303 . 5304) (nil tag-name "td" 5303 . 5304) (nil tag-type start 5303 . 5304) (nil face web-mode-variable-name-face 5303 . 5304) (nil block-side t 5302 . 5303) (nil tag-attr t 5302 . 5303) (nil tag-name "td" 5302 . 5303) (nil tag-type start 5302 . 5303) (nil face web-mode-variable-name-face 5302 . 5303) (nil block-side t 5301 . 5302) (nil tag-attr t 5301 . 5302) (nil tag-name "td" 5301 . 5302) (nil tag-type start 5301 . 5302) (nil face web-mode-variable-name-face 5301 . 5302) (nil block-side t 5300 . 5301) (nil tag-attr t 5300 . 5301) (nil tag-name "td" 5300 . 5301) (nil tag-type start 5300 . 5301) (nil face web-mode-variable-name-face 5300 . 5301) (nil block-side t 5299 . 5300) (nil tag-attr t 5299 . 5300) (nil tag-name "td" 5299 . 5300) (nil tag-type start 5299 . 5300) (nil face web-mode-variable-name-face 5299 . 5300) (nil block-side t 5298 . 5299) (nil tag-attr t 5298 . 5299) (nil tag-name "td" 5298 . 5299) (nil tag-type start 5298 . 5299) (nil block-side t 5297 . 5298) (nil tag-attr t 5297 . 5298) (nil tag-name "td" 5297 . 5298) (nil tag-type start 5297 . 5298) (nil face web-mode-variable-name-face 5297 . 5298) (nil block-side t 5296 . 5297) (nil tag-attr t 5296 . 5297) (nil tag-name "td" 5296 . 5297) (nil tag-type start 5296 . 5297) (nil face web-mode-variable-name-face 5296 . 5297) (nil block-side t 5295 . 5296) (nil tag-attr t 5295 . 5296) (nil tag-name "td" 5295 . 5296) (nil tag-type start 5295 . 5296) (nil face web-mode-variable-name-face 5295 . 5296) (nil block-side t 5294 . 5295) (nil tag-attr t 5294 . 5295) (nil tag-name "td" 5294 . 5295) (nil tag-type start 5294 . 5295) (nil face web-mode-variable-name-face 5294 . 5295) (nil block-side t 5293 . 5294) (nil tag-attr t 5293 . 5294) (nil tag-name "td" 5293 . 5294) (nil tag-type start 5293 . 5294) (nil face web-mode-variable-name-face 5293 . 5294) (nil block-side t 5292 . 5293) (nil tag-attr t 5292 . 5293) (nil tag-name "td" 5292 . 5293) (nil tag-type start 5292 . 5293) (nil face web-mode-variable-name-face 5292 . 5293) (nil block-side t 5291 . 5292) (nil tag-attr t 5291 . 5292) (nil tag-name "td" 5291 . 5292) (nil tag-type start 5291 . 5292) (nil face web-mode-variable-name-face 5291 . 5292) (nil block-side t 5290 . 5291) (nil block-token delimiter-beg 5290 . 5291) (nil tag-attr t 5290 . 5291) (nil tag-name "td" 5290 . 5291) (nil tag-type start 5290 . 5291) (nil font-lock-face web-mode-block-delimiter-face 5290 . 5291) (nil block-side t 5289 . 5290) (nil block-token delimiter-beg 5289 . 5290) (nil tag-attr t 5289 . 5290) (nil tag-name "td" 5289 . 5290) (nil tag-type start 5289 . 5290) (nil font-lock-face web-mode-block-delimiter-face 5289 . 5290) (nil block-side t 5288 . 5289) (nil block-token delimiter-beg 5288 . 5289) (nil tag-attr t 5288 . 5289) (nil tag-name "td" 5288 . 5289) (nil tag-type start 5288 . 5289) (nil font-lock-face web-mode-block-delimiter-face 5288 . 5289) (nil block-side t 5287 . 5288) (nil block-token delimiter-beg 5287 . 5288) (nil tag-attr t 5287 . 5288) (nil tag-name "td" 5287 . 5288) (nil tag-type start 5287 . 5288) (nil font-lock-face web-mode-block-delimiter-face 5287 . 5288) (nil block-side t 5286 . 5287) (nil block-token delimiter-beg 5286 . 5287) (nil tag-attr t 5286 . 5287) (nil tag-name "td" 5286 . 5287) (nil tag-type start 5286 . 5287) (nil font-lock-face web-mode-block-delimiter-face 5286 . 5287) (nil block-side t 5285 . 5286) (nil block-token delimiter-beg 5285 . 5286) (nil tag-attr t 5285 . 5286) (nil tag-name "td" 5285 . 5286) (nil tag-type start 5285 . 5286) (nil font-lock-face web-mode-block-delimiter-face 5285 . 5286) (nil block-side t 5284 . 5285) (nil block-token delimiter-beg 5284 . 5285) (nil tag-attr t 5284 . 5285) (nil tag-name "td" 5284 . 5285) (nil tag-type start 5284 . 5285) (nil font-lock-face web-mode-block-delimiter-face 5284 . 5285) (nil block-side t 5283 . 5284) (nil block-token delimiter-beg 5283 . 5284) (nil tag-attr t 5283 . 5284) (nil tag-name "td" 5283 . 5284) (nil tag-type start 5283 . 5284) (nil font-lock-face web-mode-block-delimiter-face 5283 . 5284) (nil block-side t 5282 . 5283) (nil block-token delimiter-beg 5282 . 5283) (nil tag-attr t 5282 . 5283) (nil tag-name "td" 5282 . 5283) (nil tag-type start 5282 . 5283) (nil font-lock-face web-mode-block-delimiter-face 5282 . 5283) (nil block-beg 0 5281 . 5282) (nil block-controls 0 5281 . 5282) (nil block-side t 5281 . 5282) (nil block-token delimiter-beg 5281 . 5282) (nil tag-attr-beg 2 5281 . 5282) (nil tag-attr t 5281 . 5282) (nil tag-name "td" 5281 . 5282) (nil tag-type start 5281 . 5282) (nil font-lock-face web-mode-block-delimiter-face 5281 . 5282) (5281 . 5306)) ((#(":colspan=\"headers.length\"" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 1 2 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 2 3 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 3 4 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 4 5 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 5 6 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 6 7 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 7 8 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 8 9 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 9 10 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 10 11 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 11 12 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 12 13 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 13 14 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 14 15 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 15 16 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 16 17 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 17 18 (block-side t tag-attr t tag-name "td" tag-type start) 18 19 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 19 20 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 24 25 (rear-nonsticky nil block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face)) . 5281) (nil tag-name "td" 5281 . 5282) (nil tag-name "td" 5282 . 5283) (nil tag-name "td" 5283 . 5284) (nil tag-name "td" 5284 . 5285) (nil tag-name "td" 5285 . 5286) (nil tag-name "td" 5286 . 5287) (nil tag-name "td" 5287 . 5288) (nil tag-name "td" 5288 . 5289) (nil tag-name "td" 5289 . 5290) (nil tag-name "td" 5290 . 5291) (nil tag-name "td" 5291 . 5292) (nil tag-name "td" 5292 . 5293) (nil tag-name "td" 5293 . 5294) (nil tag-name "td" 5294 . 5295) (nil tag-name "td" 5295 . 5296) (nil tag-name "td" 5296 . 5297) (nil tag-name "td" 5297 . 5298) (nil tag-name "td" 5298 . 5299) (nil tag-name "td" 5299 . 5300) (nil tag-name "td" 5300 . 5301) (nil tag-name "td" 5301 . 5302) (nil tag-name "td" 5302 . 5303) (nil tag-name "td" 5303 . 5304) (nil tag-name "td" 5304 . 5305) (nil tag-name "td" 5305 . 5306) (nil rear-nonsticky t 5305 . 5306)) (25671 39494 606609 199000) 0 nil])
([nil nil (("  " . -9072) 9080) nil (25671 39581 470346 462000) 0 nil])
([nil nil (("                " . -5308) (undo-tree-id118 . -16) (undo-tree-id119 . -16) (undo-tree-id121 . -16) (undo-tree-id123 . -16) (undo-tree-id125 . -16) (undo-tree-id127 . -16) 5324) ((5308 . 5324) (t 25671 39362 843568 196000)) (25671 39362 827927 265000) 0 nil])
([nil nil (("
" . 9079) (undo-tree-id206 . -1)) nil (25671 39581 470344 884000) 0 nil])
nil
([nil nil ((12489 . 12506)) nil (25671 39581 470335 268000) 0 nil])
([nil nil (("  " . -12504) (12506 . 12514)) nil (25671 39581 470333 654000) 0 nil])
([nil nil ((12512 . 12527)) nil (25671 39581 475583 951000) 0 nil])
([nil nil ((12527 . 12542)) nil (25671 39611 880339 978000) 0 nil] [nil nil ((nil rear-nonsticky nil 12550 . 12551) (nil tag-name "v-row" 12550 . 12551) (nil tag-type end 12550 . 12551) (nil tag-end t 12550 . 12551) (nil font-lock-face web-mode-html-tag-bracket-face 12550 . 12551) (nil tag-name "v-row" 12545 . 12550) (nil tag-type end 12545 . 12550) (nil font-lock-face web-mode-html-tag-custom-face 12545 . 12550) (nil tag-name "v-row" 12544 . 12545) (nil tag-type end 12544 . 12545) (nil font-lock-face web-mode-html-tag-bracket-face 12544 . 12545) (nil tag-name "v-row" 12543 . 12544) (nil tag-type end 12543 . 12544) (nil tag-beg 22 12543 . 12544) (nil font-lock-face web-mode-html-tag-bracket-face 12543 . 12544) (12527 . 12551)) ((#("                </v-row>" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (rear-nonsticky nil tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12527) (undo-tree-id214 . -24) (nil tag-name "v-row" 12543 . 12544) (nil tag-name "v-row" 12544 . 12545) (nil tag-name "v-row" 12545 . 12550) (nil tag-name "v-row" 12550 . 12551) (nil rear-nonsticky t 12550 . 12551)) (25671 39581 470324 321000) 0 nil])
([nil nil ((">" . 12534) ("w" . 12534) ("o" . 12534) ("r" . 12534) ("-" . 12534) ("v" . 12534) ("/" . 12534) (#("<" 0 1 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face)) . 12534)) nil (25671 39611 880337 928000) 0 nil])
nil
([nil nil ((13935 . 13952)) nil (25671 39611 880335 676000) 0 nil])
([nil nil ((13952 . 13967)) nil (25671 39611 880334 784000) 0 nil])
([nil nil ((13960 . 13978) (13961 . 13977) (#("                  " 0 18 (face whitespace-trailing)) . 13960) (13960 . 13978) (13960 . 13961) ("                " . 13960) (13959 . 13976)) nil (25671 39611 880333 297000) 0 nil])
([nil nil ((13935 . 13952)) nil (25671 39611 880331 201000) 0 nil])
([nil nil (("  " . -13950) (13952 . 13960)) nil (25671 39611 880330 99000) 0 nil])
([nil nil ((#("
                  
                </v-row>" 1 19 (face whitespace-trailing) 36 37 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 38 43 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 43 44 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13982) (undo-tree-id238 . -44) (undo-tree-id239 . -1) (undo-tree-id240 . -44)) nil (25671 39611 880328 593000) 0 nil])
([nil nil ((15542 . 15559)) nil (25671 39611 880324 278000) 0 nil])
([nil nil ((15559 . 15574)) nil (25671 39611 880323 223000) 0 nil])
([nil nil ((15567 . 15585) (15568 . 15584) (#("                  " 0 18 (face whitespace-trailing)) . 15567) (15567 . 15585) (15567 . 15568) ("                " . 15567) (15566 . 15583)) nil (25671 39611 880321 11000) 0 nil])
([nil nil ((#("                  " 0 18 (face whitespace-trailing)) . -15550) (undo-tree-id215 . -18) (undo-tree-id216 . -18) (undo-tree-id217 . -18) (undo-tree-id218 . -18) (undo-tree-id219 . -18) (undo-tree-id220 . -18) (undo-tree-id221 . -18) (undo-tree-id222 . -18) (undo-tree-id223 . -18) (undo-tree-id224 . -18) (undo-tree-id225 . -18) (undo-tree-id226 . -18) (undo-tree-id227 . -18) (undo-tree-id228 . -18) (undo-tree-id229 . -18) (undo-tree-id230 . -18) (undo-tree-id231 . -18) (undo-tree-id232 . -18) (undo-tree-id233 . -18) (undo-tree-id234 . -18) (undo-tree-id235 . -18) (undo-tree-id236 . -18) (#("                 " 0 17 (face whitespace-trailing)) . -9079) (undo-tree-id237 . -17) 15585) nil (25671 39611 880313 786000) 0 nil])
([nil nil ((7625 . 7644) (t 25671 39611 891509 723000)) nil (25671 39700 797684 106000) 0 nil])
([nil nil ((7644 . 7659)) nil (25671 39700 797682 962000) 0 nil])
([nil nil ((7652 . 7672) (7653 . 7671) (#("                    " 0 20 (face whitespace-trailing)) . 7652) (7652 . 7672) (7652 . 7653) ("                  " . 7652) (7651 . 7670)) nil (25671 39700 797681 370000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7729) (7702 . 7729) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7673) (undo-tree-id279 . -20) (7700 . 7729) 7693) nil (25671 39700 797678 961000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 77 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 77 78 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 78 79 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 79 80 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 80 81 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 81 83 (block-side t tag-attr t tag-name "v-btn" tag-type start) 83 84 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 84 85 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7815) (7788 . 7815) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7702) (undo-tree-id278 . -20) (7729 . 7815) 7722) nil (25671 39700 797675 489000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7884) (7857 . 7884) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7788) (undo-tree-id277 . -20) (7815 . 7884) 7808) nil (25671 39700 797672 415000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7913) (7886 . 7913) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7857) (undo-tree-id276 . -20) (7884 . 7913) 7877) nil (25671 39700 797669 460000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.LastPackage') }} </b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t) 71 72 (block-side t face (rainbow-delimiters-depth-3-face)) 72 73 (block-side t) 73 74 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 74 75 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 76 77 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 77 78 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 78 79 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 79 80 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7994) (7967 . 7994) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7886) (undo-tree-id275 . -20) (7913 . 7994) 7906) nil (25671 39700 797666 404000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8024) (7997 . 8024) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7967) (undo-tree-id274 . -20) (7994 . 8024) 7987) nil (25671 39700 797663 194000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8066) (8039 . 8066) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7997) (undo-tree-id273 . -20) (8024 . 8066) 8017) nil (25671 39700 797659 865000) 0 nil])
([nil nil ((#("                    {{ item[\"Last Package Received\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t) 51 52 (block-side t face (rainbow-delimiters-depth-3-face)) 52 53 (block-side t) 53 54 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 54 55 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 8122) (8095 . 8122) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8039) (undo-tree-id272 . -20) (8066 . 8122) 8059) nil (25671 39700 797656 863000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8152) (8125 . 8152) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8095) (undo-tree-id271 . -20) (8122 . 8152) 8115) nil (25671 39700 797653 834000) 0 nil])
([nil nil ((7672 . 7687)) nil (25671 39700 797651 170000) 0 nil])
([nil nil ((7680 . 7702) (7681 . 7701) (#("                      " 0 22 (face whitespace-trailing)) . 7680) (7680 . 7702) (7680 . 7681) ("                    " . 7680) (7679 . 7700)) nil (25671 39700 797649 416000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7761) (7732 . 7761) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7703) (undo-tree-id270 . -22) (7732 . 7761) 7725) nil (25671 39700 797646 798000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 77 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 77 78 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 78 79 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 79 80 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 80 81 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 81 83 (block-side t tag-attr t tag-name "v-btn" tag-type start) 83 84 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 84 85 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7847) (7818 . 7847) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7732) (undo-tree-id269 . -22) (7761 . 7847) 7754) nil (25671 39700 797643 690000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7916) (7887 . 7916) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7818) (undo-tree-id268 . -22) (7847 . 7916) 7840) nil (25671 39700 797639 835000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7945) (7916 . 7945) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7887) (undo-tree-id267 . -22) (7916 . 7945) 7909) nil (25671 39700 797636 553000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.LastPackage') }} </b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t) 71 72 (block-side t face (rainbow-delimiters-depth-3-face)) 72 73 (block-side t) 73 74 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 74 75 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 76 77 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 77 78 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 78 79 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 79 80 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8026) (7997 . 8026) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7916) (undo-tree-id266 . -22) (7945 . 8026) 7938) nil (25671 39700 797633 524000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8056) (8027 . 8056) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7997) (undo-tree-id265 . -22) (8026 . 8056) 8019) nil (25671 39700 797630 319000) 0 nil])
([nil nil ((8055 . 8076)) nil (25671 39700 797627 524000) 0 nil])
([nil nil ((8076 . 8081)) nil (25671 39700 797626 342000) 0 nil])
([nil nil ((#("o" 0 1 (tag-name "v-o" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -8079) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("c" 0 1 (tag-name "v-oc" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -8080) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 8081) nil (25671 39700 797624 625000) 0 nil])
([nil nil ((8079 . 8091)) nil (25671 39700 797618 215000) 0 nil])
([nil nil ((8084 . 8106) (8085 . 8105) (#("                      " 0 22 (face whitespace-trailing)) . 8084) (8084 . 8106) (8084 . 8085) ("                    " . 8084) (8083 . 8104)) nil (25671 39700 797616 731000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8178) (8149 . 8178) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8107) (undo-tree-id259 . -22) (8136 . 8178) 8129) nil (25671 39700 797613 834000) 0 nil])
([nil nil ((#("                    {{ item[\"Last Package Received\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t) 51 52 (block-side t face (rainbow-delimiters-depth-3-face)) 52 53 (block-side t) 53 54 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 54 55 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 8234) (8205 . 8234) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8149) (undo-tree-id258 . -22) (8178 . 8234) 8171) nil (25671 39700 797610 304000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8264) (8235 . 8264) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8205) (undo-tree-id257 . -22) (8234 . 8264) 8227) nil (25671 39700 797606 606000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8204) (undo-tree-id254 . -30) (undo-tree-id255 . -1) (undo-tree-id256 . -30)) nil (25671 39700 797603 276000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8106) (undo-tree-id251 . -42) (undo-tree-id252 . -1) (undo-tree-id253 . -42)) nil (25671 39700 797598 845000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7702) (undo-tree-id248 . -29) (undo-tree-id249 . -1) (undo-tree-id250 . -29)) nil (25671 39700 797594 762000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7967) (undo-tree-id245 . -30) (undo-tree-id246 . -1) (undo-tree-id247 . -30)) nil (25671 39700 797590 344000) 0 nil])
([nil nil ((8076 . 8078) (7913 . 7915) (7882 . 7884) (7791 . 7815) ("                      " . 7791) (7723 . 7725) 7653) nil (25671 39700 797585 396000) 0 nil])
([nil nil (("
" . 7679) (undo-tree-id244 . -1)) nil (25671 39700 797582 722000) 0 nil])
([nil nil (("
" . 8031) (undo-tree-id243 . -1)) nil (25671 39700 797579 597000) 0 nil])
([nil nil ((#("                      " 0 22 (face whitespace-trailing)) . -8009) (undo-tree-id241 . -22) (#("                      " 0 22 (face whitespace-trailing)) . -7679) (undo-tree-id242 . -22) 8031) nil (25671 39700 797572 662000) 0 nil])
([nil nil ((8172 . 8191) (t 25671 39700 814345 258000)) nil (25671 39789 396166 63000) 0 nil])
([nil nil ((8191 . 8206)) nil (25671 39789 396164 915000) 0 nil])
([nil nil ((8199 . 8219) (8200 . 8218) (#("                    " 0 20 (face whitespace-trailing)) . 8199) (8199 . 8219) (8199 . 8200) ("                  " . 8199) (8198 . 8217)) nil (25671 39789 396163 548000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8276) (8249 . 8276) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8220) (undo-tree-id319 . -20) (8247 . 8276) 8240) nil (25671 39789 396161 41000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('TOC')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 65 (block-side t tag-attr t tag-name "v-btn" tag-type start) 65 66 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 66 67 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8344) (8317 . 8344) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8249) (undo-tree-id318 . -20) (8276 . 8344) 8269) nil (25671 39789 396157 870000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8413) (8386 . 8413) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8317) (undo-tree-id317 . -20) (8344 . 8413) 8337) nil (25671 39789 396154 739000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8442) (8415 . 8442) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8386) (undo-tree-id316 . -20) (8413 . 8442) 8406) nil (25671 39789 396151 833000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.toc') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 64 (block-side t face (rainbow-delimiters-depth-3-face)) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 67 68 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 68 69 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 69 70 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 70 71 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8514) (8487 . 8514) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8415) (undo-tree-id315 . -20) (8442 . 8514) 8435) nil (25671 39789 396148 777000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8544) (8517 . 8544) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8487) (undo-tree-id314 . -20) (8514 . 8544) 8507) nil (25671 39789 396145 607000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8586) (8559 . 8586) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8517) (undo-tree-id313 . -20) (8544 . 8586) 8537) nil (25671 39789 396142 378000) 0 nil])
([nil nil ((#("                    {{ item[\"TOC\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 34 (block-side t face (rainbow-delimiters-depth-3-face)) 34 35 (block-side t) 35 36 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 36 37 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 8624) (8597 . 8624) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8559) (undo-tree-id312 . -20) (8586 . 8624) 8579) nil (25671 39789 396139 336000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8654) (8627 . 8654) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8597) (undo-tree-id311 . -20) (8624 . 8654) 8617) nil (25671 39789 396136 332000) 0 nil])
([nil nil ((8219 . 8223)) nil (25671 39789 396133 767000) 0 nil])
([nil nil ((8223 . 8234)) nil (25671 39789 396132 924000) 0 nil])
([nil nil ((8227 . 8249) (8228 . 8248) (#("                      " 0 22 (face whitespace-trailing)) . 8227) (8227 . 8249) (8227 . 8228) ("                    " . 8227) (8226 . 8247)) nil (25671 39789 396131 442000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8308) (8279 . 8308) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8250) (undo-tree-id310 . -22) (8279 . 8308) 8272) nil (25671 39789 396128 948000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('TOC')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 65 (block-side t tag-attr t tag-name "v-btn" tag-type start) 65 66 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 66 67 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8376) (8347 . 8376) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8279) (undo-tree-id309 . -22) (8308 . 8376) 8301) nil (25671 39789 396124 765000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8445) (8416 . 8445) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8347) (undo-tree-id308 . -22) (8376 . 8445) 8369) nil (25671 39789 396121 830000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8474) (8445 . 8474) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8416) (undo-tree-id307 . -22) (8445 . 8474) 8438) nil (25671 39789 396118 727000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.toc') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 64 (block-side t face (rainbow-delimiters-depth-3-face)) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 67 68 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 68 69 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 69 70 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 70 71 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8546) (8517 . 8546) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8445) (undo-tree-id306 . -22) (8474 . 8546) 8467) nil (25671 39789 396115 526000) 0 nil])
([nil nil ((8545 . 8566)) nil (25671 39789 396112 659000) 0 nil])
([nil nil ((8566 . 8581)) nil (25671 39789 396111 789000) 0 nil])
([nil nil ((8574 . 8596) (8575 . 8595) (#("                      " 0 22 (face whitespace-trailing)) . 8574) (8574 . 8596) (8574 . 8575) ("                    " . 8574) (8573 . 8594)) nil (25671 39789 396110 347000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8656) (8627 . 8656) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8597) (undo-tree-id305 . -22) (8626 . 8656) 8619) nil (25671 39789 396107 451000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8698) (8669 . 8698) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8627) (undo-tree-id304 . -22) (8656 . 8698) 8649) nil (25671 39789 396103 472000) 0 nil])
([nil nil ((#("                    {{ item[\"TOC\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 34 (block-side t face (rainbow-delimiters-depth-3-face)) 34 35 (block-side t) 35 36 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 36 37 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 8736) (8707 . 8736) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8669) (undo-tree-id303 . -22) (8698 . 8736) 8691) nil (25671 39789 396099 741000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8766) (8737 . 8766) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8707) (undo-tree-id302 . -22) (8736 . 8766) 8729) nil (25671 39789 396096 656000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8706) (undo-tree-id299 . -30) (undo-tree-id300 . -1) (undo-tree-id301 . -30)) nil (25671 39789 396093 552000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8626) (undo-tree-id296 . -42) (undo-tree-id297 . -1) (undo-tree-id298 . -42)) nil (25671 39789 396089 356000) 0 nil])
([nil nil ((#("
                    </v-col>" 21 22 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 28 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8516) (undo-tree-id293 . -29) (undo-tree-id294 . -1) (undo-tree-id295 . -29)) nil (25671 39789 396085 311000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8249) (undo-tree-id290 . -29) (undo-tree-id291 . -1) (undo-tree-id292 . -29)) nil (25671 39789 396080 951000) 0 nil])
([nil nil ((8687 . 8691) (8633 . 8635) ("    " . -8595) ("  " . -8567) (8526 . 8550) (#("                      " 0 22 (face whitespace-trailing)) . 8526) (8516 . 8518) (8442 . 8444) (8411 . 8413) (8320 . 8344) ("                      " . 8320) (8270 . 8272) 8173) nil (25671 39789 396075 623000) 0 nil])
([nil nil (("
" . 8226) (undo-tree-id289 . -1)) nil (25671 39789 396071 787000) 0 nil])
([nil nil ((#("
                </v-layout>" 17 18 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 18 19 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8549) (undo-tree-id284 . -28) (undo-tree-id285 . -1) (undo-tree-id286 . -28) (undo-tree-id287 . 28) (undo-tree-id288 . -28)) nil (25671 39789 396069 48000) 0 nil])
([nil nil ((8550 . 8574) ("                " . 8550) 8574) nil (25671 39789 396038 814000) 0 nil])
([nil nil (("
" . 8524) (undo-tree-id283 . -1)) nil (25671 39789 396037 319000) 0 nil])
([nil nil ((8494 . 8517)) nil (25671 39789 396035 94000) 0 nil])
([nil nil (("  " . -8515) (8517 . 8525)) nil (25671 39789 396034 14000) 0 nil])
([nil nil (("  " . -8544) 8552) nil (25671 39789 396032 568000) 0 nil])
([nil nil (("  " . -8598) 8602) nil (25671 39789 396031 318000) 0 nil])
([nil nil (("  " . -8636) 8640) nil (25671 39789 396029 779000) 0 nil])
([nil nil (("    " . -8688) 8694) nil (25671 39789 396027 706000) 0 nil])
([nil nil ((#("                        " 0 24 (face whitespace-trailing)) . -8529) (undo-tree-id280 . -24) (undo-tree-id281 . -24) (#("                      " 0 22 (face whitespace-trailing)) . -8226) (undo-tree-id282 . -22) 8439) nil (25671 39789 396022 227000) 0 nil])
([nil nil ((#("            <tr>
              <td>
                <v-btn text x-small @click=\"setDynamic('Last Package Received')\">
                      <v-icon size=\"17px\">mdi-select-search</v-icon>
                </v-btn>
                <b> {{ $t('SensorOverview.TableHeaders.LastPackage') }} </b>
                <br/>
                {{ item[\"Last Package Received\"] }}
              </td>
              <td>
                <v-btn text x-small @click=\"setDynamic('TOC')\">
                  <v-icon size=\"17px\">mdi-select-search</v-icon>
                </v-btn>
                <b> {{ $t('SensorOverview.TableHeaders.toc') }}</b>
                <br/>
                {{ item[\"TOC\"] }}
              </td>
              <td>
                <v-btn text x-small @click=\"setDynamic('Last Alarm')\">
                  <v-icon size=\"17px\">mdi-select-search</v-icon>
                </v-btn>
                <b> {{ $t('SensorOverview.TableHeaders.lastAlarm') }}</b>
                <br/>
                {{ item[\"Last Alarm\"] }}
              </td>
              <td>
                <v-btn text x-small @click=\"setDynamic('API Key')\">
                  <v-icon size=\"17px\">mdi-select-search</v-icon>
                </v-btn>
                <b> {{ $t('SensorOverview.TableHeaders.apiKey') }}</b>
                <br/>
                {{ item[\"API Key\"] }}
              </td>
              <td>
                <v-btn text x-small @click=\"setDynamic('Delivery Status')\">
                      <v-icon size=\"17px\">mdi-select-search</v-icon>
                </v-btn>
                <b> {{ $t('SensorOverview.TableHeaders.deliveryStatus') }}</b>
                <br/>
                <v-select
                      class=\"inTableVselect\"
                      v-model=\"delivery_status[item['Sensor ID']]\"
                      @input=\"status_error[item['Sensor ID']] = ''\"
                      @change=\"change_delivery_status(item['Sensor ID'])\"
                      :items=\"delivery_status_items\"
                      :error-messages=\"status_error[item['Sensor ID']]\"
                      @click.stop=\"\"
                      clearable
                      dense
                ></v-select>
              </td>

            </tr>" 12 13 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 13 15 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 15 16 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 32 34 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 34 35 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 52 53 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 53 58 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 58 59 (tag-name "v-btn" tag-type start) 59 60 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 60 62 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 62 63 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 63 64 (tag-name "v-btn" tag-type start) 64 65 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 65 70 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 70 71 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 71 72 (tag-name "v-btn" tag-type start) 72 73 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 73 74 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 74 75 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 80 90 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 90 92 (block-side t tag-attr t tag-name "v-btn" tag-type start) 92 93 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 93 94 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 94 95 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 95 96 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 96 97 (block-side t tag-attr t tag-name "v-btn" tag-type start) 97 98 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 98 99 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 99 100 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 100 101 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 101 102 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 102 103 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 103 104 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 104 105 (block-side t tag-attr t tag-name "v-btn" tag-type start) 105 106 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 106 107 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 107 108 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 108 109 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 109 110 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 110 111 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 111 112 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 112 113 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 113 115 (block-side t tag-attr t tag-name "v-btn" tag-type start) 115 116 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 116 117 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 140 141 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 141 147 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 147 148 (tag-name "v-icon" tag-type start) 148 149 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 149 152 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 152 153 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 153 158 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 158 159 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 159 160 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 177 178 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 178 179 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 179 185 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 185 186 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 203 204 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 204 205 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 205 210 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 210 211 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 228 229 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 229 230 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 230 231 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 232 233 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 233 234 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 234 236 (block-side t) 236 237 (block-side t face web-mode-variable-name-face) 237 238 (block-side t face (rainbow-delimiters-depth-3-face)) 238 239 (block-side t) 239 240 (block-side t face web-mode-variable-name-face) 240 241 (block-side t face web-mode-variable-name-face) 241 242 (block-side t face web-mode-variable-name-face) 242 243 (block-side t face web-mode-variable-name-face) 243 244 (block-side t face web-mode-variable-name-face) 244 245 (block-side t face web-mode-variable-name-face) 245 246 (block-side t face web-mode-variable-name-face) 246 247 (block-side t face web-mode-variable-name-face) 247 248 (block-side t face web-mode-variable-name-face) 248 249 (block-side t face web-mode-variable-name-face) 249 250 (block-side t face web-mode-variable-name-face) 250 251 (block-side t face web-mode-variable-name-face) 251 252 (block-side t face web-mode-variable-name-face) 252 253 (block-side t face web-mode-variable-name-face) 253 254 (block-side t) 254 255 (block-side t face web-mode-variable-name-face) 255 256 (block-side t face web-mode-variable-name-face) 256 257 (block-side t face web-mode-variable-name-face) 257 258 (block-side t face web-mode-variable-name-face) 258 259 (block-side t face web-mode-variable-name-face) 259 260 (block-side t face web-mode-variable-name-face) 260 261 (block-side t face web-mode-variable-name-face) 261 262 (block-side t face web-mode-variable-name-face) 262 263 (block-side t face web-mode-variable-name-face) 263 264 (block-side t face web-mode-variable-name-face) 264 265 (block-side t face web-mode-variable-name-face) 265 266 (block-side t face web-mode-variable-name-face) 266 267 (block-side t) 267 268 (block-side t face web-mode-variable-name-face) 268 269 (block-side t face web-mode-variable-name-face) 269 270 (block-side t face web-mode-variable-name-face) 270 271 (block-side t face web-mode-variable-name-face) 271 272 (block-side t face web-mode-variable-name-face) 272 273 (block-side t face web-mode-variable-name-face) 273 274 (block-side t face web-mode-variable-name-face) 274 275 (block-side t face web-mode-variable-name-face) 275 276 (block-side t face web-mode-variable-name-face) 276 277 (block-side t face web-mode-variable-name-face) 277 278 (block-side t face web-mode-variable-name-face) 278 279 (block-side t) 279 280 (block-side t face (rainbow-delimiters-depth-3-face)) 280 281 (block-side t) 281 282 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 282 283 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 284 285 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 285 286 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 286 287 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 287 288 (rear-nonsticky t tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 305 306 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 306 308 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 308 309 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 309 310 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 327 328 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 328 329 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 329 330 (block-side t) 330 331 (block-side t face web-mode-variable-name-face) 331 332 (block-side t face web-mode-variable-name-face) 332 333 (block-side t face web-mode-variable-name-face) 333 334 (block-side t face web-mode-variable-name-face) 334 335 (block-side t face (rainbow-delimiters-depth-3-face)) 335 336 (block-side t) 336 337 (block-side t face web-mode-variable-name-face) 337 338 (block-side t face web-mode-variable-name-face) 338 339 (block-side t face web-mode-variable-name-face) 339 340 (block-side t face web-mode-variable-name-face) 340 341 (block-side t) 341 342 (block-side t face web-mode-variable-name-face) 342 343 (block-side t face web-mode-variable-name-face) 343 344 (block-side t face web-mode-variable-name-face) 344 345 (block-side t face web-mode-variable-name-face) 345 346 (block-side t face web-mode-variable-name-face) 346 347 (block-side t face web-mode-variable-name-face) 347 348 (block-side t face web-mode-variable-name-face) 348 349 (block-side t) 349 350 (block-side t face web-mode-variable-name-face) 350 351 (block-side t face web-mode-variable-name-face) 351 352 (block-side t face web-mode-variable-name-face) 352 353 (block-side t face web-mode-variable-name-face) 353 354 (block-side t face web-mode-variable-name-face) 354 355 (block-side t face web-mode-variable-name-face) 355 356 (block-side t face web-mode-variable-name-face) 356 357 (block-side t face web-mode-variable-name-face) 357 358 (block-side t) 358 359 (block-side t face (rainbow-delimiters-depth-3-face)) 359 360 (block-side t) 360 361 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 361 362 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 377 378 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 378 379 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 379 381 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 381 382 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 397 398 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 398 400 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 400 401 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 418 419 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 419 424 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 424 425 (tag-name "v-btn" tag-type start) 425 426 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 426 428 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 428 429 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 429 430 (tag-name "v-btn" tag-type start) 430 431 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 431 436 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 436 437 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 437 438 (tag-name "v-btn" tag-type start) 438 439 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 439 440 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 440 441 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 441 442 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 442 443 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 443 444 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 444 445 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 445 446 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 446 456 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 456 458 (block-side t tag-attr t tag-name "v-btn" tag-type start) 458 459 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 459 460 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 460 461 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 461 463 (block-side t tag-attr t tag-name "v-btn" tag-type start) 463 464 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 464 465 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 484 485 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 485 491 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 491 492 (tag-name "v-icon" tag-type start) 492 493 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 493 496 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 496 497 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 497 502 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 502 503 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 503 504 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 521 522 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 522 523 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 523 529 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 529 530 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 547 548 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 548 549 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 549 554 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 554 555 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 572 573 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 573 574 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 574 575 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 576 577 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 577 578 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 578 580 (block-side t) 580 581 (block-side t face web-mode-variable-name-face) 581 582 (block-side t face (rainbow-delimiters-depth-3-face)) 582 583 (block-side t) 583 584 (block-side t face web-mode-variable-name-face) 584 585 (block-side t face web-mode-variable-name-face) 585 586 (block-side t face web-mode-variable-name-face) 586 587 (block-side t face web-mode-variable-name-face) 587 588 (block-side t face web-mode-variable-name-face) 588 589 (block-side t face web-mode-variable-name-face) 589 590 (block-side t face web-mode-variable-name-face) 590 591 (block-side t face web-mode-variable-name-face) 591 592 (block-side t face web-mode-variable-name-face) 592 593 (block-side t face web-mode-variable-name-face) 593 594 (block-side t face web-mode-variable-name-face) 594 595 (block-side t face web-mode-variable-name-face) 595 596 (block-side t face web-mode-variable-name-face) 596 597 (block-side t face web-mode-variable-name-face) 597 598 (block-side t) 598 599 (block-side t face web-mode-variable-name-face) 599 600 (block-side t face web-mode-variable-name-face) 600 601 (block-side t face web-mode-variable-name-face) 601 602 (block-side t face web-mode-variable-name-face) 602 603 (block-side t face web-mode-variable-name-face) 603 604 (block-side t face web-mode-variable-name-face) 604 605 (block-side t face web-mode-variable-name-face) 605 606 (block-side t face web-mode-variable-name-face) 606 607 (block-side t face web-mode-variable-name-face) 607 608 (block-side t face web-mode-variable-name-face) 608 609 (block-side t face web-mode-variable-name-face) 609 610 (block-side t face web-mode-variable-name-face) 610 611 (block-side t) 611 612 (block-side t face web-mode-variable-name-face) 612 613 (block-side t face web-mode-variable-name-face) 613 614 (block-side t face web-mode-variable-name-face) 614 615 (block-side t) 615 616 (block-side t face (rainbow-delimiters-depth-3-face)) 616 617 (block-side t) 617 618 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 618 619 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 619 620 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 620 621 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 621 622 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 622 623 (rear-nonsticky t tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 640 641 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 641 643 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 643 644 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 644 645 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 662 663 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 663 664 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 664 665 (block-side t) 665 666 (block-side t face web-mode-variable-name-face) 666 667 (block-side t face web-mode-variable-name-face) 667 668 (block-side t face web-mode-variable-name-face) 668 669 (block-side t face web-mode-variable-name-face) 669 670 (block-side t face (rainbow-delimiters-depth-3-face)) 670 671 (block-side t) 671 672 (block-side t face web-mode-variable-name-face) 672 673 (block-side t face web-mode-variable-name-face) 673 674 (block-side t face web-mode-variable-name-face) 674 675 (block-side t) 675 676 (block-side t face (rainbow-delimiters-depth-3-face)) 676 677 (block-side t) 677 678 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 678 679 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 694 695 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 695 696 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 696 698 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 698 699 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 714 715 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 715 717 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 717 718 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 735 736 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 736 741 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 741 742 (tag-name "v-btn" tag-type start) 742 743 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 743 745 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 745 746 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 746 747 (tag-name "v-btn" tag-type start) 747 748 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 748 753 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 753 754 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 754 755 (tag-name "v-btn" tag-type start) 755 756 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 756 757 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 757 758 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 758 759 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 759 760 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 760 761 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 761 762 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 762 763 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 763 773 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 773 775 (block-side t tag-attr t tag-name "v-btn" tag-type start) 775 776 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 776 777 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 777 778 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 778 779 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 779 780 (block-side t tag-attr t tag-name "v-btn" tag-type start) 780 781 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 781 782 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 782 783 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 783 784 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 784 785 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 785 787 (block-side t tag-attr t tag-name "v-btn" tag-type start) 787 788 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 788 789 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 808 809 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 809 815 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 815 816 (tag-name "v-icon" tag-type start) 816 817 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 817 820 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 820 821 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 821 826 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 826 827 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 827 828 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 845 846 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 846 847 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 847 853 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 853 854 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 871 872 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 872 873 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 873 878 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 878 879 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 896 897 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 897 898 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 898 899 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 900 901 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 901 902 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 902 904 (block-side t) 904 905 (block-side t face web-mode-variable-name-face) 905 906 (block-side t face (rainbow-delimiters-depth-3-face)) 906 907 (block-side t) 907 908 (block-side t face web-mode-variable-name-face) 908 909 (block-side t face web-mode-variable-name-face) 909 910 (block-side t face web-mode-variable-name-face) 910 911 (block-side t face web-mode-variable-name-face) 911 912 (block-side t face web-mode-variable-name-face) 912 913 (block-side t face web-mode-variable-name-face) 913 914 (block-side t face web-mode-variable-name-face) 914 915 (block-side t face web-mode-variable-name-face) 915 916 (block-side t face web-mode-variable-name-face) 916 917 (block-side t face web-mode-variable-name-face) 917 918 (block-side t face web-mode-variable-name-face) 918 919 (block-side t face web-mode-variable-name-face) 919 920 (block-side t face web-mode-variable-name-face) 920 921 (block-side t face web-mode-variable-name-face) 921 922 (block-side t) 922 923 (block-side t face web-mode-variable-name-face) 923 924 (block-side t face web-mode-variable-name-face) 924 925 (block-side t face web-mode-variable-name-face) 925 926 (block-side t face web-mode-variable-name-face) 926 927 (block-side t face web-mode-variable-name-face) 927 928 (block-side t face web-mode-variable-name-face) 928 929 (block-side t face web-mode-variable-name-face) 929 930 (block-side t face web-mode-variable-name-face) 930 931 (block-side t face web-mode-variable-name-face) 931 932 (block-side t face web-mode-variable-name-face) 932 933 (block-side t face web-mode-variable-name-face) 933 934 (block-side t face web-mode-variable-name-face) 934 935 (block-side t) 935 936 (block-side t face web-mode-variable-name-face) 936 937 (block-side t face web-mode-variable-name-face) 937 938 (block-side t face web-mode-variable-name-face) 938 939 (block-side t face web-mode-variable-name-face) 939 940 (block-side t face web-mode-variable-name-face) 940 941 (block-side t face web-mode-variable-name-face) 941 942 (block-side t face web-mode-variable-name-face) 942 943 (block-side t face web-mode-variable-name-face) 943 944 (block-side t face web-mode-variable-name-face) 944 945 (block-side t) 945 946 (block-side t face (rainbow-delimiters-depth-3-face)) 946 947 (block-side t) 947 948 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 948 949 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 949 950 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 950 951 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 951 952 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 952 953 (rear-nonsticky t tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 970 971 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 971 973 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 973 974 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 974 975 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 992 993 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 993 994 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 994 995 (block-side t) 995 996 (block-side t face web-mode-variable-name-face) 996 997 (block-side t face web-mode-variable-name-face) 997 998 (block-side t face web-mode-variable-name-face) 998 999 (block-side t face web-mode-variable-name-face) 999 1000 (block-side t face (rainbow-delimiters-depth-3-face)) 1000 1001 (block-side t) 1001 1002 (block-side t face web-mode-variable-name-face) 1002 1003 (block-side t face web-mode-variable-name-face) 1003 1004 (block-side t face web-mode-variable-name-face) 1004 1005 (block-side t face web-mode-variable-name-face) 1005 1006 (block-side t) 1006 1007 (block-side t face web-mode-variable-name-face) 1007 1008 (block-side t face web-mode-variable-name-face) 1008 1009 (block-side t face web-mode-variable-name-face) 1009 1010 (block-side t face web-mode-variable-name-face) 1010 1011 (block-side t face web-mode-variable-name-face) 1011 1012 (block-side t) 1012 1013 (block-side t face (rainbow-delimiters-depth-3-face)) 1013 1014 (block-side t) 1014 1015 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1015 1016 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1031 1032 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1032 1033 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1033 1035 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 1035 1036 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1051 1052 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1052 1054 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 1054 1055 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1072 1073 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1073 1078 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 1078 1079 (tag-name "v-btn" tag-type start) 1079 1080 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1080 1082 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1082 1083 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1083 1084 (tag-name "v-btn" tag-type start) 1084 1085 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1085 1090 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1090 1091 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1091 1092 (tag-name "v-btn" tag-type start) 1092 1093 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1093 1094 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1094 1095 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1095 1096 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1096 1097 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1097 1098 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1098 1099 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1099 1100 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1100 1110 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 1110 1112 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1112 1113 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1113 1114 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1114 1115 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1115 1116 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1116 1117 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1117 1118 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1118 1119 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1119 1121 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1121 1122 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1122 1123 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1142 1143 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1143 1149 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 1149 1150 (tag-name "v-icon" tag-type start) 1150 1151 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 1151 1154 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 1154 1155 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 1155 1160 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 1160 1161 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 1161 1162 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1179 1180 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1180 1181 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1181 1187 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 1187 1188 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1205 1206 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1206 1207 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1207 1212 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 1212 1213 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1230 1231 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1231 1232 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 1232 1233 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1234 1235 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1235 1236 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1236 1238 (block-side t) 1238 1239 (block-side t face web-mode-variable-name-face) 1239 1240 (block-side t face (rainbow-delimiters-depth-3-face)) 1240 1241 (block-side t) 1241 1242 (block-side t face web-mode-variable-name-face) 1242 1243 (block-side t face web-mode-variable-name-face) 1243 1244 (block-side t face web-mode-variable-name-face) 1244 1245 (block-side t face web-mode-variable-name-face) 1245 1246 (block-side t face web-mode-variable-name-face) 1246 1247 (block-side t face web-mode-variable-name-face) 1247 1248 (block-side t face web-mode-variable-name-face) 1248 1249 (block-side t face web-mode-variable-name-face) 1249 1250 (block-side t face web-mode-variable-name-face) 1250 1251 (block-side t face web-mode-variable-name-face) 1251 1252 (block-side t face web-mode-variable-name-face) 1252 1253 (block-side t face web-mode-variable-name-face) 1253 1254 (block-side t face web-mode-variable-name-face) 1254 1255 (block-side t face web-mode-variable-name-face) 1255 1256 (block-side t) 1256 1257 (block-side t face web-mode-variable-name-face) 1257 1258 (block-side t face web-mode-variable-name-face) 1258 1259 (block-side t face web-mode-variable-name-face) 1259 1260 (block-side t face web-mode-variable-name-face) 1260 1261 (block-side t face web-mode-variable-name-face) 1261 1262 (block-side t face web-mode-variable-name-face) 1262 1263 (block-side t face web-mode-variable-name-face) 1263 1264 (block-side t face web-mode-variable-name-face) 1264 1265 (block-side t face web-mode-variable-name-face) 1265 1266 (block-side t face web-mode-variable-name-face) 1266 1267 (block-side t face web-mode-variable-name-face) 1267 1268 (block-side t face web-mode-variable-name-face) 1268 1269 (block-side t) 1269 1270 (block-side t face web-mode-variable-name-face) 1270 1271 (block-side t face web-mode-variable-name-face) 1271 1272 (block-side t face web-mode-variable-name-face) 1272 1273 (block-side t face web-mode-variable-name-face) 1273 1274 (block-side t face web-mode-variable-name-face) 1274 1275 (block-side t face web-mode-variable-name-face) 1275 1276 (block-side t) 1276 1277 (block-side t face (rainbow-delimiters-depth-3-face)) 1277 1278 (block-side t) 1278 1279 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1279 1280 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1280 1281 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1281 1282 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1282 1283 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 1283 1284 (rear-nonsticky t tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1301 1302 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1302 1304 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 1304 1305 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 1305 1306 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 1323 1324 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1324 1325 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1325 1326 (block-side t) 1326 1327 (block-side t face web-mode-variable-name-face) 1327 1328 (block-side t face web-mode-variable-name-face) 1328 1329 (block-side t face web-mode-variable-name-face) 1329 1330 (block-side t face web-mode-variable-name-face) 1330 1331 (block-side t face (rainbow-delimiters-depth-3-face)) 1331 1332 (block-side t) 1332 1333 (block-side t face web-mode-variable-name-face) 1333 1334 (block-side t face web-mode-variable-name-face) 1334 1335 (block-side t face web-mode-variable-name-face) 1335 1336 (block-side t) 1336 1337 (block-side t face web-mode-variable-name-face) 1337 1338 (block-side t face web-mode-variable-name-face) 1338 1339 (block-side t face web-mode-variable-name-face) 1339 1340 (block-side t) 1340 1341 (block-side t face (rainbow-delimiters-depth-3-face)) 1341 1342 (block-side t) 1342 1343 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1343 1344 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1359 1360 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1360 1361 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1361 1363 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 1363 1364 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1379 1380 (tag-name "td" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1380 1382 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 1382 1383 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1400 1401 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1401 1406 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 1406 1407 (tag-name "v-btn" tag-type start) 1407 1408 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1408 1410 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1410 1411 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1411 1412 (tag-name "v-btn" tag-type start) 1412 1413 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1413 1418 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1418 1419 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1419 1420 (tag-name "v-btn" tag-type start) 1420 1421 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1421 1422 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1422 1423 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1423 1424 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1424 1425 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1425 1426 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1426 1427 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1427 1428 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1428 1438 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 1438 1440 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1440 1441 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1441 1442 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1442 1443 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1443 1444 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1444 1445 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1445 1446 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1446 1447 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1447 1448 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1448 1449 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1449 1450 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1450 1451 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1451 1452 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1452 1453 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1453 1454 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1454 1455 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1455 1457 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1457 1458 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1458 1459 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1482 1483 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1483 1489 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 1489 1490 (tag-name "v-icon" tag-type start) 1490 1491 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 1491 1494 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 1494 1495 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 1495 1500 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 1500 1501 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 1501 1502 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1519 1520 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1520 1521 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1521 1527 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 1527 1528 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1545 1546 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1546 1547 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1547 1552 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 1552 1553 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1570 1571 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1571 1572 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 1572 1573 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1574 1575 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1575 1576 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1576 1578 (block-side t) 1578 1579 (block-side t face web-mode-variable-name-face) 1579 1580 (block-side t face (rainbow-delimiters-depth-3-face)) 1580 1581 (block-side t) 1581 1582 (block-side t face web-mode-variable-name-face) 1582 1583 (block-side t face web-mode-variable-name-face) 1583 1584 (block-side t face web-mode-variable-name-face) 1584 1585 (block-side t face web-mode-variable-name-face) 1585 1586 (block-side t face web-mode-variable-name-face) 1586 1587 (block-side t face web-mode-variable-name-face) 1587 1588 (block-side t face web-mode-variable-name-face) 1588 1589 (block-side t face web-mode-variable-name-face) 1589 1590 (block-side t face web-mode-variable-name-face) 1590 1591 (block-side t face web-mode-variable-name-face) 1591 1592 (block-side t face web-mode-variable-name-face) 1592 1593 (block-side t face web-mode-variable-name-face) 1593 1594 (block-side t face web-mode-variable-name-face) 1594 1595 (block-side t face web-mode-variable-name-face) 1595 1596 (block-side t) 1596 1597 (block-side t face web-mode-variable-name-face) 1597 1598 (block-side t face web-mode-variable-name-face) 1598 1599 (block-side t face web-mode-variable-name-face) 1599 1600 (block-side t face web-mode-variable-name-face) 1600 1601 (block-side t face web-mode-variable-name-face) 1601 1602 (block-side t face web-mode-variable-name-face) 1602 1603 (block-side t face web-mode-variable-name-face) 1603 1604 (block-side t face web-mode-variable-name-face) 1604 1605 (block-side t face web-mode-variable-name-face) 1605 1606 (block-side t face web-mode-variable-name-face) 1606 1607 (block-side t face web-mode-variable-name-face) 1607 1608 (block-side t face web-mode-variable-name-face) 1608 1609 (block-side t) 1609 1610 (block-side t face web-mode-variable-name-face) 1610 1611 (block-side t face web-mode-variable-name-face) 1611 1612 (block-side t face web-mode-variable-name-face) 1612 1613 (block-side t face web-mode-variable-name-face) 1613 1614 (block-side t face web-mode-variable-name-face) 1614 1615 (block-side t face web-mode-variable-name-face) 1615 1616 (block-side t face web-mode-variable-name-face) 1616 1617 (block-side t face web-mode-variable-name-face) 1617 1618 (block-side t face web-mode-variable-name-face) 1618 1619 (block-side t face web-mode-variable-name-face) 1619 1620 (block-side t face web-mode-variable-name-face) 1620 1621 (block-side t face web-mode-variable-name-face) 1621 1622 (block-side t face web-mode-variable-name-face) 1622 1623 (block-side t face web-mode-variable-name-face) 1623 1624 (block-side t) 1624 1625 (block-side t face (rainbow-delimiters-depth-3-face)) 1625 1626 (block-side t) 1626 1627 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1627 1628 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1628 1629 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1629 1630 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1630 1631 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 1631 1632 (rear-nonsticky t tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1649 1650 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1650 1652 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 1652 1653 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 1653 1654 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 1671 1672 (tag-name "v-select" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1672 1680 (tag-name "v-select" tag-type start font-lock-face web-mode-html-tag-custom-face) 1680 1703 (tag-name "v-select" tag-type start) 1703 1704 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 1704 1708 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 1708 1709 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 1709 1724 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 1724 1725 (tag-attr t tag-attr-end 5 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 1725 1748 (tag-name "v-select" tag-type start) 1748 1749 (tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 1749 1755 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 1755 1756 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 1756 1791 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 1791 1792 (tag-attr t tag-attr-end 7 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 1792 1815 (tag-name "v-select" tag-type start) 1815 1816 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1816 1817 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1817 1818 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1818 1819 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1819 1820 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1820 1821 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1821 1822 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1822 1823 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1823 1824 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1824 1825 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1825 1826 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1826 1827 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1827 1828 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1828 1829 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1829 1830 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1830 1831 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1831 1832 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1832 1833 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1833 1834 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1834 1835 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1835 1836 (block-side t tag-attr t tag-name "v-select" tag-type start) 1836 1837 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1837 1838 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1838 1839 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1839 1840 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1840 1842 (block-side t tag-attr t tag-name "v-select" tag-type start) 1842 1843 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1843 1844 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1844 1845 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1845 1846 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1846 1847 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1847 1848 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1848 1849 (block-side t tag-attr t tag-name "v-select" tag-type start) 1849 1850 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1850 1851 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1851 1859 (block-side t tag-attr t tag-name "v-select" tag-type start) 1859 1860 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1860 1883 (tag-name "v-select" tag-type start) 1883 1884 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1884 1885 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1885 1886 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1886 1887 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1887 1888 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1888 1889 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1889 1890 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1890 1891 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1891 1892 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1892 1914 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-function-call-face) 1914 1915 (block-side t tag-attr t tag-name "v-select" tag-type start) 1915 1916 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1916 1917 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1917 1918 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1918 1919 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1919 1921 (block-side t tag-attr t tag-name "v-select" tag-type start) 1921 1922 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1922 1923 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1923 1924 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1924 1925 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1925 1926 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1926 1927 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1927 1928 (block-side t tag-attr t tag-name "v-select" tag-type start) 1928 1929 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1929 1930 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1930 1933 (block-side t tag-attr t tag-name "v-select" tag-type start) 1933 1934 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 7 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1934 1957 (tag-name "v-select" tag-type start) 1957 1958 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1958 1959 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1959 1960 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1960 1961 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1961 1962 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1962 1963 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1963 1964 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1964 1965 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1965 1966 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1966 1967 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1967 1968 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1968 1969 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1969 1970 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1970 1971 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1971 1972 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1972 1973 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1973 1974 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1974 1975 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1975 1976 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1976 1977 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1977 1978 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1978 1979 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1979 1980 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1980 1981 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1981 1982 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1982 1983 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1983 1984 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1984 1985 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1985 1986 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 1986 1987 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 1987 2010 (tag-name "v-select" tag-type start) 2010 2011 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2011 2012 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2012 2013 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2013 2014 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2014 2015 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2015 2016 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2016 2017 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2017 2018 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2018 2019 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2019 2020 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2020 2021 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2021 2022 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2022 2023 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2023 2024 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2024 2025 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2025 2026 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2026 2027 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2027 2028 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2028 2029 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2029 2030 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2030 2031 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2031 2032 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2032 2033 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2033 2034 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2034 2035 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2035 2036 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2036 2037 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2037 2038 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2038 2039 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2039 2040 (block-side t tag-attr t tag-name "v-select" tag-type start) 2040 2041 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2041 2042 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2042 2043 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2043 2044 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2044 2046 (block-side t tag-attr t tag-name "v-select" tag-type start) 2046 2047 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2047 2048 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2048 2049 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2049 2050 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2050 2051 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2051 2052 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2052 2053 (block-side t tag-attr t tag-name "v-select" tag-type start) 2053 2054 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2054 2055 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 2055 2058 (block-side t tag-attr t tag-name "v-select" tag-type start) 2058 2059 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 15 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 2059 2082 (tag-name "v-select" tag-type start) 2082 2083 (tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 2083 2093 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 2093 2094 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 2094 2095 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 2095 2096 (tag-attr t tag-attr-end 11 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 2096 2119 (tag-name "v-select" tag-type start) 2119 2120 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2120 2127 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2127 2128 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2128 2151 (tag-name "v-select" tag-type start) 2151 2152 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2152 2155 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2155 2156 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2156 2173 (tag-name "v-select" tag-type start) 2173 2174 (tag-name "v-select" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2174 2175 (tag-name "v-select" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 2175 2176 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2176 2184 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-custom-face) 2184 2185 (rear-nonsticky t tag-name "v-select" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2200 2201 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2201 2202 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2202 2204 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 2204 2205 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2219 2220 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2220 2221 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2221 2223 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 2223 2224 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5246) (undo-tree-id328 . -2224) (undo-tree-id329 . -17) (undo-tree-id330 . -1861) (undo-tree-id331 . -2224) (t 25671 39789 413170 460000)) nil (25671 39856 332471 753000) 0 nil])
([nil nil ((5246 . 5258) (5246 . 5255)) nil (25671 39856 332466 485000) 0 nil])
([nil nil ((5263 . 5277) (5264 . 5276) (#("              " 0 14 (face whitespace-trailing)) . 5263) (5263 . 5277) (5263 . 5264) ("            " . 5263) (5262 . 5275)) nil (25671 39856 332464 816000) 0 nil])
([nil nil ((#("            </tr>" 12 13 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 16 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 16 17 (tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5278) (undo-tree-id326 . -17) (undo-tree-id327 . -17)) nil (25671 39856 332462 216000) 0 nil])
([nil nil ((" " . -5276) (undo-tree-id321 . -1) (undo-tree-id322 . -1) ("
" . -5277) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 5278) nil (25671 39856 332458 545000) 0 nil])
([nil nil (("
" . 5276) (undo-tree-id320 . -1)) nil (25671 39856 332450 851000) 0 nil])
([nil nil (("           " . -5277) 5276) nil (25671 39856 332440 710000) 0 nil])
([nil nil ((13505 . 13519) (13497 . 13499) (13502 . 13503)) nil (25671 39856 332438 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13535 . 13536) (nil tag-name "tr" 13535 . 13536) (nil tag-type end 13535 . 13536) (nil tag-end t 13535 . 13536) (nil font-lock-face web-mode-html-tag-bracket-face 13535 . 13536) (nil tag-name "tr" 13533 . 13535) (nil tag-type end 13533 . 13535) (nil font-lock-face web-mode-html-tag-face 13533 . 13535) (nil tag-name "tr" 13532 . 13533) (nil tag-type end 13532 . 13533) (nil font-lock-face web-mode-html-tag-bracket-face 13532 . 13533) (nil tag-name "tr" 13531 . 13532) (nil tag-type end 13531 . 13532) (nil tag-beg 20 13531 . 13532) (nil font-lock-face web-mode-html-tag-bracket-face 13531 . 13532) (13519 . 13536)) nil (25671 39856 332431 345000) 0 nil])
([nil nil (("              " . -13517) (undo-tree-id441 . -2) 13536 (t 25671 39856 355305 75000)) nil (25671 39924 860227 873000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6468) (undo-tree-id438 . -29) (undo-tree-id439 . -1) (undo-tree-id440 . -29)) nil (25671 39924 860225 10000) 0 nil])
([nil nil ((6468 . 6487)) nil (25671 39924 860220 736000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6521 . 6522) (nil tag-name "v-col" 6521 . 6522) (nil tag-type start 6521 . 6522) (nil tag-end t 6521 . 6522) (nil font-lock-face web-mode-html-tag-bracket-face 6521 . 6522) (nil tag-name "v-col" 6516 . 6521) (nil tag-type start 6516 . 6521) (nil font-lock-face web-mode-html-tag-custom-face 6516 . 6521) (nil tag-name "v-col" 6515 . 6516) (nil tag-type start 6515 . 6516) (nil tag-beg 18 6515 . 6516) (nil font-lock-face web-mode-html-tag-bracket-face 6515 . 6516) (nil tag-name "v-row" 6493 . 6494) (nil tag-type start 6493 . 6494) (nil tag-end t 6493 . 6494) (nil font-lock-face web-mode-html-tag-bracket-face 6493 . 6494) (nil tag-name "v-row" 6488 . 6493) (nil tag-type start 6488 . 6493) (nil font-lock-face web-mode-html-tag-custom-face 6488 . 6493) (nil tag-name "v-row" 6487 . 6488) (nil tag-type start 6487 . 6488) (nil tag-beg 18 6487 . 6488) (nil font-lock-face web-mode-html-tag-bracket-face 6487 . 6488) (6487 . 6522)) nil (25671 39924 860218 687000) 0 nil])
([nil nil ((6920 . 6939)) nil (25671 39924 860212 895000) 0 nil])
([nil nil ((6939 . 6941) (6939 . 6947)) nil (25671 39924 860211 953000) 0 nil])
([nil nil ((6949 . 6970)) nil (25671 39924 860210 688000) 0 nil])
([nil nil (("  " . -6968) (6970 . 6978)) nil (25671 39924 860209 715000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6890) (undo-tree-id435 . -30) (undo-tree-id436 . -1) (undo-tree-id437 . -30)) nil (25671 39924 860208 258000) 0 nil])
([nil nil ((#("
                  </v-layout>
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 49 50 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 50 58 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 58 59 (tag-name "v-layout" tag-type start) 59 60 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 60 70 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 70 71 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 71 72 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6773) (undo-tree-id431 . -72) (undo-tree-id432 . -1) (undo-tree-id433 . -30) (undo-tree-id434 . -72)) nil (25671 39924 860203 333000) 0 nil])
([nil nil ((6695 . 6716)) nil (25671 39924 860198 125000) 0 nil])
([nil nil ((6716 . 6724)) nil (25671 39924 860197 224000) 0 nil])
([nil nil ((6724 . 6745)) nil (25671 39924 860196 209000) 0 nil])
([nil nil (("  " . -6743) (6745 . 6753)) nil (25671 39924 860194 908000) 0 nil])
([nil nil (("/" . -6744) (undo-tree-id424 . -1) (#("v" 0 1 (tag-name "v" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -6745) (undo-tree-id425 . -1) (#("-" 0 1 (tag-name "v-" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -6746) (undo-tree-id426 . -1) (#("r" 0 1 (tag-name "v-r" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -6747) (undo-tree-id427 . -1) (#("o" 0 1 (tag-name "v-ro" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -6748) (undo-tree-id428 . -1) (#("w" 0 1 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -6749) (undo-tree-id429 . -1) (#(">" 0 1 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -6750) (undo-tree-id430 . -1) 6751) nil (25671 39924 860192 637000) 0 nil])
([nil nil ((6744 . 6746)) nil (25671 39924 860183 395000) 0 nil])
([nil nil ((#("c" 0 1 (tag-name "c" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -6744) (undo-tree-id422 . -1) (#("-" 0 1 (tag-name "c-" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -6745) (undo-tree-id423 . -1) 6746) nil (25671 39924 860182 75000) 0 nil])
([nil nil ((6743 . 6745) (6744 . 6758)) nil (25671 39924 860178 386000) 0 nil])
([nil nil ((6753 . 6775) (6754 . 6774) (#("                      " 0 22 (face whitespace-trailing)) . 6753) (6753 . 6775) (6753 . 6754) ("                    " . 6753) (6752 . 6773)) nil (25671 39924 860176 243000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.lastAlarm') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t) 69 70 (block-side t face (rainbow-delimiters-depth-3-face)) 70 71 (block-side t) 71 72 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 72 73 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 73 74 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 74 75 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 75 76 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 76 77 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6883) (undo-tree-id419 . -77) (undo-tree-id420 . -77) (6854 . 6883) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6776) (undo-tree-id421 . -22) (6805 . 6883) 6798) nil (25671 39924 860172 996000) 0 nil])
([nil nil ((#("                    {{ item[\"Last Alarm\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t) 40 41 (block-side t face (rainbow-delimiters-depth-3-face)) 41 42 (block-side t) 42 43 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 43 44 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 6928) (undo-tree-id417 . -44) (6899 . 6928) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6854) (undo-tree-id418 . -22) (6883 . 6928) 6876) nil (25671 39924 860167 228000) 0 nil])
([nil nil ((#("
                    </v-col>" 21 22 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 28 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6898) (undo-tree-id412 . -29) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -29)) nil (25671 39924 860162 732000) 0 nil])
([nil nil ((6882 . 6884) (6802 . 6804) (6691 . 6693) (6600 . 6624) ("                      " . 6600) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (6543 . 6545) 6445) nil (25671 39924 860154 445000) 0 nil])
([nil nil (("
" . 6758) (undo-tree-id408 . -1)) nil (25671 39924 860148 345000) 0 nil])
([nil nil ((#("                      <b> {{ $t('SensorOverview.TableHeaders.lastAlarm') }}</b>
" 22 23 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 24 25 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face (rainbow-delimiters-depth-3-face)) 32 33 (block-side t) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t) 71 72 (block-side t face (rainbow-delimiters-depth-3-face)) 72 73 (block-side t) 73 74 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 74 75 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 75 76 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 76 77 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 77 78 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 78 79 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6861) (undo-tree-id338 . -27) (undo-tree-id339 . -80) (undo-tree-id340 . -27) (undo-tree-id341 . -27) (undo-tree-id342 . -27) (undo-tree-id343 . -27) (undo-tree-id344 . -27) (undo-tree-id345 . -27) (6811 . 6861) (#("                    <v-col>                      
" 20 21 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 27 49 (face whitespace-trailing)) . 6731) (undo-tree-id346 . -25) (undo-tree-id347 . -24) (undo-tree-id348 . -27) (undo-tree-id349 . -27) (undo-tree-id350 . -27) (undo-tree-id351 . -27) (undo-tree-id352 . -27) (undo-tree-id353 . -27) (undo-tree-id354 . -27) (undo-tree-id355 . -27) (undo-tree-id356 . -27) (undo-tree-id357 . -27) (undo-tree-id358 . -27) (undo-tree-id359 . -27) (undo-tree-id360 . -27) (undo-tree-id361 . -27) (undo-tree-id362 . -27) (undo-tree-id363 . -27) (undo-tree-id364 . -27) (undo-tree-id365 . -27) (undo-tree-id366 . -27) (undo-tree-id367 . -27) (undo-tree-id368 . -27) (undo-tree-id369 . -27) (undo-tree-id370 . -27) (undo-tree-id371 . -27) (undo-tree-id372 . -27) (undo-tree-id373 . -27) (undo-tree-id374 . -27) (undo-tree-id375 . -27) (undo-tree-id376 . -27) (undo-tree-id377 . -27) (undo-tree-id378 . -27) (undo-tree-id379 . -27) (undo-tree-id380 . -27) (undo-tree-id381 . -27) (undo-tree-id382 . -27) (undo-tree-id383 . -27) (undo-tree-id384 . -27) (undo-tree-id385 . -27) (undo-tree-id386 . -27) (undo-tree-id387 . -27) (undo-tree-id388 . -27) (undo-tree-id389 . -27) (undo-tree-id390 . -27) (undo-tree-id391 . -27) (undo-tree-id392 . -27) (undo-tree-id393 . -27) (undo-tree-id394 . -27) (undo-tree-id395 . -27) (undo-tree-id396 . -27) (undo-tree-id397 . -27) (undo-tree-id398 . -27) (undo-tree-id399 . -27) (undo-tree-id400 . -27) (undo-tree-id401 . -27) (undo-tree-id402 . -27) (undo-tree-id403 . -27) (undo-tree-id404 . -27) (undo-tree-id405 . -27) (undo-tree-id406 . -27) (undo-tree-id407 . -27) (6781 . 6861) 6808) nil (25671 39924 860141 876000) 0 nil])
([nil nil ((#("                      <b> {{ $t('SensorOverview.TableHeaders.lastAlarm') }}</b>
" 22 23 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 24 25 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face (rainbow-delimiters-depth-3-face)) 32 33 (block-side t) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t) 71 72 (block-side t face (rainbow-delimiters-depth-3-face)) 72 73 (block-side t) 73 74 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 74 75 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 75 76 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 76 77 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 77 78 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 78 79 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6811) (undo-tree-id332 . -27) (undo-tree-id333 . -80) (undo-tree-id334 . -27) (undo-tree-id335 . -27) (undo-tree-id336 . -27) (undo-tree-id337 . -27) (6782 . 6811) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6702) (6731 . 6811) 6758) nil (25671 39924 860024 466000) 0 nil])
([nil nil ((#("                      " 0 22 (face whitespace-trailing)) . -6838)) nil (25671 39924 860003 256000) 0 nil])
([nil nil ((5261 . 5270) (t 25671 39924 885490 346000)) nil (25671 39989 389584 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5289 . 5290) (nil tag-attr t 5269 . 5290) (nil tag-name "tr" 5269 . 5290) (nil tag-type start 5269 . 5290) (nil font-lock-face web-mode-html-attr-value-face 5269 . 5290) (5269 . 5290)) nil (25671 39989 389575 125000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5285) (undo-tree-id442 . -1) (#("u" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5286) (undo-tree-id443 . -1) (#("t" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5287) (undo-tree-id444 . -1) (#("o" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5288) (undo-tree-id445 . -1) 5289 (t 25671 39989 411547 924000)) nil (25671 39998 783677 288000) 0 nil])
([nil nil ((5285 . 5289)) nil (25671 39998 783656 120000) 0 nil])
([nil nil ((#("none" 0 4 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5285) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (t 25671 39998 803847 423000)) nil (25671 40048 725614 913000) 0 nil])
([nil nil ((5285 . 5289)) nil (25671 40048 725597 122000) 0 nil])
([nil nil ((7065 . 7084) (t 25671 40048 745439 941000)) nil (25671 40098 729006 719000) 0 nil])
([nil nil ((7084 . 7099)) nil (25671 40098 729005 286000) 0 nil])
([nil nil ((7092 . 7112) (7093 . 7111) (#("                    " 0 20 (face whitespace-trailing)) . 7092) (7092 . 7112) (7092 . 7093) ("                  " . 7092) (7091 . 7110)) nil (25671 40098 729003 786000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7169) (7142 . 7169) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7113) (undo-tree-id483 . -20) (7140 . 7169) 7133) nil (25671 40098 729001 40000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('API Key')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7241) (7214 . 7241) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7142) (undo-tree-id482 . -20) (7169 . 7241) 7162) nil (25671 40098 728997 491000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7310) (7283 . 7310) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7214) (undo-tree-id481 . -20) (7241 . 7310) 7234) nil (25671 40098 728994 9000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7339) (7312 . 7339) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7283) (undo-tree-id480 . -20) (7310 . 7339) 7303) nil (25671 40098 728990 681000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.apiKey') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t) 66 67 (block-side t face (rainbow-delimiters-depth-3-face)) 67 68 (block-side t) 68 69 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 69 70 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 70 71 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 73 74 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7414) (7387 . 7414) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7312) (undo-tree-id479 . -20) (7339 . 7414) 7332) nil (25671 40098 728987 160000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7444) (7417 . 7444) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7387) (undo-tree-id478 . -20) (7414 . 7444) 7407) nil (25671 40098 728983 991000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7486) (7459 . 7486) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7417) (undo-tree-id477 . -20) (7444 . 7486) 7437) nil (25671 40098 728979 898000) 0 nil])
([nil nil ((#("                    {{ item[\"API Key\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t) 37 38 (block-side t face (rainbow-delimiters-depth-3-face)) 38 39 (block-side t) 39 40 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 40 41 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 7528) (7501 . 7528) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7459) (undo-tree-id476 . -20) (7486 . 7528) 7479) nil (25671 40098 728976 858000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7558) (7531 . 7558) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7501) (undo-tree-id475 . -20) (7528 . 7558) 7521) nil (25671 40098 728973 677000) 0 nil])
([nil nil ((#("                </v-col>
" 16 17 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7583) (7556 . 7583) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7531) (undo-tree-id474 . -20) (7558 . 7583) 7551) nil (25671 40098 728970 509000) 0 nil])
([nil nil ((#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7583) (undo-tree-id472 . -20) (undo-tree-id473 . -27) (7558 . 7583) (#("                </v-col>
" 16 17 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7531) (7556 . 7583) 7576) nil (25671 40098 728967 399000) 0 nil])
([nil nil ((7112 . 7127)) nil (25671 40098 728963 541000) 0 nil])
([nil nil ((7120 . 7142) (7121 . 7141) (#("                      " 0 22 (face whitespace-trailing)) . 7120) (7120 . 7142) (7120 . 7121) ("                    " . 7120) (7119 . 7140)) nil (25671 40098 728962 158000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7201) (7172 . 7201) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7143) (undo-tree-id471 . -22) (7172 . 7201) 7165) nil (25671 40098 728959 543000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('API Key')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7273) (7244 . 7273) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7172) (undo-tree-id470 . -22) (7201 . 7273) 7194) nil (25671 40098 728956 491000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7342) (7313 . 7342) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7244) (undo-tree-id469 . -22) (7273 . 7342) 7266) nil (25671 40098 728953 144000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7371) (7342 . 7371) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7313) (undo-tree-id468 . -22) (7342 . 7371) 7335) nil (25671 40098 728949 874000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.apiKey') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t) 66 67 (block-side t face (rainbow-delimiters-depth-3-face)) 67 68 (block-side t) 68 69 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 69 70 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 70 71 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 73 74 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7446) (7417 . 7446) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7342) (undo-tree-id467 . -22) (7371 . 7446) 7364) nil (25671 40098 728946 533000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7476) (7447 . 7476) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7417) (undo-tree-id466 . -22) (7446 . 7476) 7439) nil (25671 40098 728943 473000) 0 nil])
([nil nil ((7475 . 7496)) nil (25671 40098 728940 668000) 0 nil])
([nil nil ((7496 . 7511)) nil (25671 40098 728939 666000) 0 nil])
([nil nil ((7504 . 7526) (7505 . 7525) (#("                      " 0 22 (face whitespace-trailing)) . 7504) (7504 . 7526) (7504 . 7505) ("                    " . 7504) (7503 . 7524)) nil (25671 40098 728938 104000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7598) (7569 . 7598) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7527) (undo-tree-id465 . -22) (7556 . 7598) 7549) nil (25671 40098 728935 456000) 0 nil])
([nil nil ((#("                    {{ item[\"API Key\"] }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face (rainbow-delimiters-depth-3-face)) 28 29 (block-side t) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t) 37 38 (block-side t face (rainbow-delimiters-depth-3-face)) 38 39 (block-side t) 39 40 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 40 41 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 7640) (7611 . 7640) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7569) (undo-tree-id464 . -22) (7598 . 7640) 7591) nil (25671 40098 728932 264000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7670) (7641 . 7670) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7611) (undo-tree-id463 . -22) (7640 . 7670) 7633) nil (25671 40098 728928 701000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7526) (undo-tree-id460 . -42) (undo-tree-id461 . -1) (undo-tree-id462 . -42)) nil (25671 40098 728925 183000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7568) (undo-tree-id457 . -30) (undo-tree-id458 . -1) (undo-tree-id459 . -30)) nil (25671 40098 728920 931000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7416) (undo-tree-id454 . -30) (undo-tree-id455 . -1) (undo-tree-id456 . -30)) nil (25671 40098 728916 505000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7142) (undo-tree-id450 . -29) (undo-tree-id451 . -1) (undo-tree-id452 . 29) (undo-tree-id453 . -29)) nil (25671 40098 728911 860000) 0 nil])
([nil nil (("
" . 7142) (undo-tree-id448 . -1) (undo-tree-id449 . 1)) nil (25671 40098 730021 79000) 0 nil])
([nil nil (("
" . 7466) (undo-tree-id484 . -1)) nil (25671 40103 807311 384000) 0 nil] [nil nil ((#("A" 0 1 (block-side t face web-mode-variable-name-face)) . 7496)) ((7496 . 7497)) (25671 40098 728888 236000) 0 nil])
([nil nil (("                    " . -7452) (7316 . 7318) (7285 . 7287) (7194 . 7218) ("                      " . 7194) ("                    " . -7142) 7020) nil (25671 40103 807292 957000) 0 nil])
nil
([nil nil ((7578 . 7597) (t 25671 40103 831196 493000)) nil (25671 40195 401158 855000) 0 nil])
([nil nil ((7597 . 7598)) nil (25671 40195 401157 485000) 0 nil])
([nil nil (("<" . -7597) (undo-tree-id568 . -1) 7598) nil (25671 40195 401156 227000) 0 nil])
([nil nil ((7597 . 7598)) nil (25671 40195 401153 869000) 0 nil])
([nil nil (("v" . -7597) (undo-tree-id567 . -1) 7598) nil (25671 40195 401152 629000) 0 nil])
([nil nil ((7597 . 7612)) nil (25671 40195 401149 916000) 0 nil])
([nil nil ((7605 . 7625) (7606 . 7624) (#("                    " 0 20 (face whitespace-trailing)) . 7605) (7605 . 7625) (7605 . 7606) ("                  " . 7605) (7604 . 7623)) nil (25671 40195 401148 264000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7682) (7655 . 7682) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7626) (undo-tree-id566 . -20) (7653 . 7682) 7646) nil (25671 40195 401145 380000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('Delivery Status')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 77 (block-side t tag-attr t tag-name "v-btn" tag-type start) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7762) (7735 . 7762) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7655) (undo-tree-id565 . -20) (7682 . 7762) 7675) nil (25671 40195 401141 897000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7831) (7804 . 7831) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7735) (undo-tree-id564 . -20) (7762 . 7831) 7755) nil (25671 40195 401138 533000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7860) (7833 . 7860) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7804) (undo-tree-id563 . -20) (7831 . 7860) 7824) nil (25671 40195 401135 197000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.deliveryStatus') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t) 74 75 (block-side t face (rainbow-delimiters-depth-3-face)) 75 76 (block-side t) 76 77 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 77 78 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 78 79 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 79 80 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 80 81 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 81 82 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7943) (7916 . 7943) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7833) (undo-tree-id562 . -20) (7860 . 7943) 7853) nil (25671 40195 401131 688000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7973) (7946 . 7973) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7916) (undo-tree-id561 . -20) (7943 . 7973) 7936) nil (25671 40195 401127 961000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8002) (7975 . 8002) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7946) (undo-tree-id560 . -20) (7973 . 8002) 7966) nil (25671 40195 401124 656000) 0 nil])
([nil nil ((#("                    <v-select
" 20 21 (tag-name "v-select" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-select" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-select" tag-type start)) . 8032) (8005 . 8032) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7975) (undo-tree-id559 . -20) (8002 . 8032) 7995) nil (25671 40195 401121 91000) 0 nil])
([nil nil (("                      class=\"inTableVselect\"
" . 8077) (8050 . 8077) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8005) (undo-tree-id558 . -20) (8032 . 8077) 8025) nil (25671 40195 401117 188000) 0 nil])
([nil nil (("                      v-model=\"delivery_status[item['Sensor ID']]\"
" . 8144) (8117 . 8144) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8050) (8077 . 8144) 8070) nil (25671 40195 401113 556000) 0 nil])
([nil nil ((#("                      @input=\"status_error[item['Sensor ID']] = ''\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 49 (block-side t) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 66 (block-side t) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8212) (8185 . 8212) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8117) (undo-tree-id557 . -20) (8144 . 8212) 8137) nil (25671 40195 401111 24000) 0 nil])
([nil nil ((#("                      @change=\"change_delivery_status(item['Sensor ID'])\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 31 53 (block-side t face web-mode-function-call-face) 53 54 (block-side t) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 60 (block-side t) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 72 (block-side t) 72 73 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8286) (8259 . 8286) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8185) (undo-tree-id556 . -20) (8212 . 8286) 8205) nil (25671 40195 401107 316000) 0 nil])
([nil nil ((#("                      :items=\"delivery_status_items\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8339) (8312 . 8339) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8259) (undo-tree-id555 . -20) (8286 . 8339) 8279) nil (25671 40195 401103 786000) 0 nil])
([nil nil ((#("                      :error-messages=\"status_error[item['Sensor ID']]\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 32 33 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 58 (block-side t) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 70 (block-side t) 70 71 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8411) (8384 . 8411) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8312) (undo-tree-id554 . -20) (8339 . 8411) 8332) nil (25671 40195 401100 377000) 0 nil])
([nil nil (("                      @click.stop=\"\"
" . 8448) (8421 . 8448) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8384) (undo-tree-id553 . -20) (8411 . 8448) 8404) nil (25671 40195 401097 344000) 0 nil])
([nil nil (("                      clearable
" . 8480) (8453 . 8480) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8421) (undo-tree-id552 . -20) (8448 . 8480) 8441) nil (25671 40195 401094 265000) 0 nil])
([nil nil (("                      dense
" . 8508) (8481 . 8508) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8453) (undo-tree-id551 . -20) (8480 . 8508) 8473) nil (25671 40195 401090 722000) 0 nil])
([nil nil ((#("                    ></v-select>
" 21 22 (tag-name "v-select" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 31 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-custom-face) 31 32 (tag-name "v-select" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8541) (8514 . 8541) (#("                  </v-row>
" 0 17 (tag-name "v-select" tag-type start) 17 18 (tag-name "v-select" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8481) (undo-tree-id550 . -20) (8508 . 8541) 8501) nil (25671 40195 401045 757000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8571) (8544 . 8571) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8514) (undo-tree-id549 . -20) (8541 . 8571) 8534) nil (25671 40195 401042 761000) 0 nil])
([nil nil ((7625 . 7640)) nil (25671 40195 401040 50000) 0 nil])
([nil nil ((7633 . 7655) (7634 . 7654) (#("                      " 0 22 (face whitespace-trailing)) . 7633) (7633 . 7655) (7633 . 7634) ("                    " . 7633) (7632 . 7653)) nil (25671 40195 401038 638000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7714) (7685 . 7714) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7656) (undo-tree-id548 . -22) (7685 . 7714) 7678) nil (25671 40195 401036 119000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('Delivery Status')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 77 (block-side t tag-attr t tag-name "v-btn" tag-type start) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7794) (7765 . 7794) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7685) (undo-tree-id547 . -22) (7714 . 7794) 7707) nil (25671 40195 401033 40000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7863) (7834 . 7863) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7765) (undo-tree-id546 . -22) (7794 . 7863) 7787) nil (25671 40195 401030 40000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7892) (7863 . 7892) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7834) (undo-tree-id545 . -22) (7863 . 7892) 7856) nil (25671 40195 401027 14000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.deliveryStatus') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t) 74 75 (block-side t face (rainbow-delimiters-depth-3-face)) 75 76 (block-side t) 76 77 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 77 78 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 78 79 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 79 80 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 80 81 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 81 82 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7975) (7946 . 7975) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7863) (undo-tree-id544 . -22) (7892 . 7975) 7885) nil (25671 40195 401023 969000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8005) (7976 . 8005) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7946) (undo-tree-id543 . -22) (7975 . 8005) 7968) nil (25671 40195 401020 891000) 0 nil])
([nil nil ((8004 . 8025)) nil (25671 40195 401018 210000) 0 nil])
([nil nil ((8025 . 8040)) nil (25671 40195 401017 301000) 0 nil])
([nil nil ((8033 . 8055) (8034 . 8054) (#("                      " 0 22 (face whitespace-trailing)) . 8033) (8033 . 8055) (8033 . 8034) ("                    " . 8033) (8032 . 8053)) nil (25671 40195 401016 0) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8114) (8085 . 8114) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8056) (undo-tree-id542 . -22) (8085 . 8114) 8078) nil (25671 40195 401013 604000) 0 nil])
([nil nil ((#("                    <v-select
" 20 21 (tag-name "v-select" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-select" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-select" tag-type start)) . 8144) (8115 . 8144) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8085) (undo-tree-id541 . -22) (8114 . 8144) 8107) nil (25671 40195 401010 530000) 0 nil])
([nil nil (("                      class=\"inTableVselect\"
" . 8189) (8160 . 8189) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8115) (undo-tree-id540 . -22) (8144 . 8189) 8137) nil (25671 40195 401006 612000) 0 nil])
([nil nil (("                      v-model=\"delivery_status[item['Sensor ID']]\"
" . 8256) (8227 . 8256) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8160) (undo-tree-id539 . -22) (8189 . 8256) 8182) nil (25671 40195 401003 432000) 0 nil])
([nil nil ((#("                      @input=\"status_error[item['Sensor ID']] = ''\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 49 (block-side t) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 66 (block-side t) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8324) (8295 . 8324) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8227) (undo-tree-id538 . -22) (8256 . 8324) 8249) nil (25671 40195 401000 364000) 0 nil])
([nil nil ((#("                      @change=\"change_delivery_status(item['Sensor ID'])\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 31 53 (block-side t face web-mode-function-call-face) 53 54 (block-side t) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 60 (block-side t) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 72 (block-side t) 72 73 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8398) (8369 . 8398) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8295) (undo-tree-id537 . -22) (8324 . 8398) 8317) nil (25671 40195 400997 430000) 0 nil])
([nil nil ((#("                      :items=\"delivery_status_items\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8451) (8422 . 8451) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8369) (undo-tree-id536 . -22) (8398 . 8451) 8391) nil (25671 40195 400994 405000) 0 nil])
([nil nil ((#("                      :error-messages=\"status_error[item['Sensor ID']]\"
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 27 28 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 28 29 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 29 30 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 30 31 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 31 32 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 32 33 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 58 (block-side t) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 70 (block-side t) 70 71 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 8523) (8494 . 8523) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8422) (undo-tree-id535 . -22) (8451 . 8523) 8444) nil (25671 40195 400991 128000) 0 nil])
([nil nil (("                      @click.stop=\"\"
" . 8560) (8531 . 8560) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8494) (undo-tree-id534 . -22) (8523 . 8560) 8516) nil (25671 40195 400987 970000) 0 nil])
([nil nil (("                      clearable
" . 8592) (8563 . 8592) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8531) (undo-tree-id533 . -22) (8560 . 8592) 8553) nil (25671 40195 400984 876000) 0 nil])
([nil nil (("                      dense
" . 8620) (8591 . 8620) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8563) (undo-tree-id532 . -22) (8592 . 8620) 8585) nil (25671 40195 400981 809000) 0 nil])
([nil nil ((#("                    ></v-select>
" 21 22 (tag-name "v-select" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 22 23 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-bracket-face) 23 31 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-custom-face) 31 32 (tag-name "v-select" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8653) (8624 . 8653) (#("                    </v-col>
" 0 19 (tag-name "v-select" tag-type start) 19 20 (tag-name "v-select" tag-type start tag-end t) 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8591) (undo-tree-id531 . -22) (8620 . 8653) 8613) nil (25671 40195 400978 681000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8683) (8654 . 8683) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8624) (undo-tree-id530 . -22) (8653 . 8683) 8646) nil (25671 40195 400975 334000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8623) (undo-tree-id527 . -30) (undo-tree-id528 . -1) (undo-tree-id529 . -30)) nil (25671 40195 400972 272000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8055) (undo-tree-id524 . -29) (undo-tree-id525 . -1) (undo-tree-id526 . -29)) nil (25671 40195 400968 291000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7945) (undo-tree-id521 . -30) (undo-tree-id522 . -1) (undo-tree-id523 . -30)) nil (25671 40195 400964 311000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7655) (undo-tree-id518 . -29) (undo-tree-id519 . -1) (undo-tree-id520 . -29)) nil (25671 40195 400960 251000) 0 nil])
([nil nil (("
" . 7655) (undo-tree-id517 . -1)) nil (25671 40195 400954 888000) 0 nil])
([nil nil (("
" . 7995) (undo-tree-id515 . -1) (undo-tree-id516 . 1)) nil (25671 40195 400952 662000) 0 nil])
([nil nil ((8505 . 8507) (8455 . 8479) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8455) (8421 . 8445) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8421) (8382 . 8406) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8382) (8308 . 8332) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8308) (8253 . 8277) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8253) (8177 . 8201) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8177) (8107 . 8131) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8107) (8038 . 8062) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8038) (7991 . 8015) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 7991) ("                    " . -7981) (7837 . 7839) (7806 . 7808) (7715 . 7739) ("                      " . 7715) ("                    " . -7655) 7530) nil (25671 40195 400947 476000) 0 nil])
([nil nil ((8624 . 8643)) nil (25671 40195 400941 503000) 0 nil])
([nil nil ((8643 . 8658)) nil (25671 40195 400940 534000) 0 nil])
([nil nil ((8651 . 8671) (8652 . 8670) (#("                    " 0 20 (face whitespace-trailing)) . 8651) (8651 . 8671) (8651 . 8652) ("                  " . 8651) (8650 . 8669)) nil (25671 40195 400939 181000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8728) (8701 . 8728) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8672) (undo-tree-id514 . -20) (8699 . 8728) 8692) nil (25671 40195 400936 502000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.getConfVariables') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t) 76 77 (block-side t face (rainbow-delimiters-depth-3-face)) 77 78 (block-side t) 78 79 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 79 80 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 80 81 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 81 82 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 83 84 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8813) (8786 . 8813) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8701) (undo-tree-id513 . -20) (8728 . 8813) 8721) nil (25671 40195 400933 176000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8843) (8816 . 8843) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8786) (undo-tree-id512 . -20) (8813 . 8843) 8806) nil (25671 40195 400930 136000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8885) (8858 . 8885) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8816) (undo-tree-id511 . -20) (8843 . 8885) 8836) nil (25671 40195 400926 909000) 0 nil])
([nil nil ((#("                    <v-btn dark color=\"blue\" @click.stop=\"getConfVariables(item['API Key'])\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 37 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 38 43 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-btn" tag-type start) 45 46 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 46 56 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 56 57 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 57 91 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8979) (8952 . 8979) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8858) (undo-tree-id510 . -20) (8885 . 8979) 8878) nil (25671 40195 400923 594000) 0 nil])
([nil nil ((#("                      <v-icon>mdi-file-download-outline</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9044) (9017 . 9044) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8952) (undo-tree-id509 . -20) (8979 . 9044) 8972) nil (25671 40195 400919 448000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9073) (9046 . 9073) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9017) (undo-tree-id508 . -20) (9044 . 9073) 9037) nil (25671 40195 400916 258000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9103) (9076 . 9103) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9046) (undo-tree-id507 . -20) (9073 . 9103) 9066) nil (25671 40195 400912 904000) 0 nil])
([nil nil ((8671 . 8686)) nil (25671 40195 400910 234000) 0 nil])
([nil nil ((8679 . 8701) (8680 . 8700) (#("                      " 0 22 (face whitespace-trailing)) . 8679) (8679 . 8701) (8679 . 8680) ("                    " . 8679) (8678 . 8699)) nil (25671 40195 400908 789000) 0 nil])
([nil nil ((#("                  <v-layout>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8760) (8731 . 8760) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8702) (undo-tree-id506 . -22) (8731 . 8760) 8724) nil (25671 40195 400906 298000) 0 nil])
([nil nil ((#("                    <b> {{ $t('SensorOverview.TableHeaders.getConfVariables') }}</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 25 26 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 26 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face (rainbow-delimiters-depth-3-face)) 30 31 (block-side t) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t) 76 77 (block-side t face (rainbow-delimiters-depth-3-face)) 77 78 (block-side t) 78 79 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 79 80 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 80 81 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 81 82 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 83 84 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8845) (8816 . 8845) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8731) (undo-tree-id505 . -22) (8760 . 8845) 8753) nil (25671 40195 400903 44000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8875) (8846 . 8875) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8816) (undo-tree-id504 . -22) (8845 . 8875) 8838) nil (25671 40195 400899 682000) 0 nil])
([nil nil ((8874 . 8895)) nil (25671 40195 400896 911000) 0 nil])
([nil nil ((8895 . 8897)) nil (25671 40195 400895 952000) 0 nil])
([nil nil ((8897 . 8910)) nil (25671 40195 400895 24000) 0 nil])
([nil nil ((8903 . 8925) (8904 . 8924) (#("                      " 0 22 (face whitespace-trailing)) . 8903) (8903 . 8925) (8903 . 8904) ("                    " . 8903) (8902 . 8923)) nil (25671 40195 400893 530000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8997) (8968 . 8997) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8926) (undo-tree-id503 . -22) (8955 . 8997) 8948) nil (25671 40195 400891 58000) 0 nil])
([nil nil ((#("                    <v-btn dark color=\"blue\" @click.stop=\"getConfVariables(item['API Key'])\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 37 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 38 43 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-btn" tag-type start) 45 46 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 46 56 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 56 57 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 57 91 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9091) (9062 . 9091) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8968) (undo-tree-id502 . -22) (8997 . 9091) 8990) nil (25671 40195 400887 771000) 0 nil])
([nil nil ((#("                      <v-icon>mdi-file-download-outline</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9156) (9127 . 9156) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9062) (undo-tree-id501 . -22) (9091 . 9156) 9084) nil (25671 40195 400884 683000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9185) (9156 . 9185) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9127) (undo-tree-id500 . -22) (9156 . 9185) 9149) nil (25671 40195 400881 440000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9215) (9186 . 9215) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9156) (undo-tree-id499 . -22) (9185 . 9215) 9178) nil (25671 40195 400878 168000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9155) (undo-tree-id496 . -30) (undo-tree-id497 . -1) (undo-tree-id498 . -30)) nil (25671 40195 400874 795000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8925) (undo-tree-id493 . -42) (undo-tree-id494 . -1) (undo-tree-id495 . -42)) nil (25671 40195 400870 484000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8815) (undo-tree-id490 . -30) (undo-tree-id491 . -1) (undo-tree-id492 . -30)) nil (25671 40195 400866 278000) 0 nil])
([nil nil ((#("
                  <v-layout>" 19 20 (tag-name "v-layout" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8701) (undo-tree-id487 . -29) (undo-tree-id488 . -1) (undo-tree-id489 . -29)) nil (25671 40195 400861 768000) 0 nil])
([nil nil (("
" . 8701) (undo-tree-id486 . -1)) nil (25671 40195 400857 355000) 0 nil])
([nil nil (("
" . 8865) (undo-tree-id485 . -1)) nil (25671 40195 400854 105000) 0 nil])
([nil nil ((9006 . 9008) (8919 . 8943) ("                      " . 8919) ("                    " . -8845) ("                    " . -8701) 8603) nil (25671 40195 400838 238000) 0 nil])
([nil nil ((5432 . 5443) (5424 . 5433) (t 25671 40195 426117 228000)) nil (25671 40224 674402 842000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5442) (undo-tree-id570 . -1) 5443) nil (25671 40224 674400 786000) 0 nil])
([nil nil ((5442 . 5444)) nil (25671 40224 674396 908000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5443) (undo-tree-id569 . -1) 5444) nil (25671 40224 674391 35000) 0 nil])
([nil nil ((5432 . 5437) (t 25671 40224 703050 796000)) nil (25671 40232 204834 379000) 0 nil])
([nil nil ((5404 . 5420) ("              " . 5404) 5437 (t 25671 40232 227290 724000)) nil (25671 40254 422016 441000) 0 nil])
([nil nil ((5469 . 5471) 5476) nil (25671 40254 422014 142000) 0 nil])
([nil nil ((9303 . 9319) ("              " . 9303) (9292 . 9294) (9265 . 9267) (9236 . 9238) (9183 . 9207) ("                      " . 9183) (9138 . 9140) (9016 . 9040) ("                      " . 9016) (undo-tree-id571 . -22) (9006 . 9008) (8975 . 8977) (8866 . 8890) ("                      " . 8866) (undo-tree-id572 . -22) (undo-tree-id573 . -22) (8856 . 8858) (8826 . 8828) (8798 . 8800) (8771 . 8773) (8744 . 8746) (8715 . 8717) (8658 . 8682) (#("                      " 0 22 (tag-name "v-select" tag-type start)) . 8658) (8650 . 8652) (8614 . 8616) (8573 . 8575) (8497 . 8499) (8440 . 8442) (8362 . 8364) (8290 . 8292) (8219 . 8221) (8170 . 8172) (8112 . 8136) ("                      " . 8112) (undo-tree-id574 . -22) (8102 . 8104) (8071 . 8073) (7964 . 7988) ("                      " . 7964) (7931 . 7955) ("                      " . 7931) (7882 . 7884) (7774 . 7798) ("                      " . 7774) (undo-tree-id575 . -22) (7764 . 7766) (7734 . 7736) (7706 . 7708) (7679 . 7681) (7652 . 7654) (7623 . 7625) (7557 . 7581) ("                      " . 7557) (7547 . 7549) (7516 . 7518) (7417 . 7441) ("                      " . 7417) (7384 . 7408) ("                      " . 7384) (7335 . 7337) (7235 . 7259) ("                      " . 7235) (undo-tree-id576 . -22) (7225 . 7227) (7195 . 7197) (7167 . 7169) (7127 . 7143) ("              " . 7127) (7102 . 7118) ("              " . 7102) (7091 . 7093) (7064 . 7066) (7035 . 7037) (6966 . 6990) ("                      " . 6966) (6956 . 6958) (6925 . 6927) (6823 . 6847) ("                      " . 6823) (6790 . 6814) ("                      " . 6790) (6741 . 6743) (6638 . 6662) ("                      " . 6638) (6628 . 6630) (6598 . 6600) (6570 . 6572) (6543 . 6545) (6516 . 6518) (6487 . 6489) (6425 . 6449) ("                      " . 6425) (6415 . 6417) (6384 . 6386) (6288 . 6312) ("                      " . 6288) (6255 . 6279) ("                      " . 6255) (6206 . 6208) (6110 . 6134) ("                      " . 6110) (6100 . 6102) (6070 . 6072) (6042 . 6044) (6015 . 6017) (5988 . 5990) (5959 . 5961) (5879 . 5903) ("                      " . 5879) (5869 . 5871) (5838 . 5840) (5733 . 5757) ("                      " . 5733) (5700 . 5724) ("                      " . 5700) (5651 . 5653) (5537 . 5561) ("                      " . 5537) (5527 . 5529) (5497 . 5499) 5293) nil (25671 40254 421999 700000) 0 nil])
([nil nil ((5290 . 5291) (t 25671 40254 451999 426000)) nil (25671 40275 386448 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5306 . 5307) (nil tag-attr t 5291 . 5307) (nil tag-name "tr" 5291 . 5307) (nil tag-type start 5291 . 5307) (nil font-lock-face web-mode-html-attr-value-face 5291 . 5307) (5291 . 5307)) nil (25671 40275 386446 309000) 0 nil])
([nil nil ((#(" style=\"text-align:left;\"" 0 1 (tag-name "v-row" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 24 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5443) (undo-tree-id577 . -25) (undo-tree-id578 . -22) (undo-tree-id579 . -25) (undo-tree-id580 . -24) (undo-tree-id581 . -2) (undo-tree-id582 . -25) (undo-tree-id583 . -25)) nil (25671 40275 386440 3000) 0 nil])
([nil nil ((9365 . 9384) (t 25671 40275 412667 811000)) nil (25671 40476 447416 831000) 0 nil])
([nil nil ((9384 . 9399)) nil (25671 40476 447415 365000) 0 nil])
([nil nil ((9392 . 9412) (9393 . 9411) (#("                    " 0 20 (face whitespace-trailing)) . 9392) (9392 . 9412) (9392 . 9393) ("                  " . 9392) (9391 . 9410)) nil (25671 40476 447413 666000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9482) (9455 . 9482) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9413) (undo-tree-id744 . -20) (9440 . 9482) 9433) nil (25671 40476 447410 634000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('suricata_version')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 78 (block-side t tag-attr t tag-name "v-btn" tag-type start) 78 79 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9563) (9536 . 9563) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9455) (undo-tree-id743 . -20) (9482 . 9563) 9475) nil (25671 40476 447407 151000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9632) (9605 . 9632) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9536) (undo-tree-id742 . -20) (9563 . 9632) 9556) nil (25671 40476 447403 537000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9661) (9634 . 9661) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9605) (undo-tree-id741 . -20) (9632 . 9661) 9625) nil (25671 40476 447399 888000) 0 nil])
([nil nil ((#("                    <b>Suricata</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 34 35 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9697) (9670 . 9697) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9634) (undo-tree-id740 . -20) (9661 . 9697) 9654) nil (25671 40476 447396 417000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9727) (9700 . 9727) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9670) (undo-tree-id739 . -20) (9697 . 9727) 9690) nil (25671 40476 447392 599000) 0 nil])
([nil nil ((#("                  <v-layout justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start) 41 42 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 42 49 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 49 50 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-name "v-layout" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 52 56 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-equal-face) 57 76 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 76 77 (tag-attr t tag-attr-end 5 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9806) (9779 . 9806) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9700) (undo-tree-id738 . -20) (9727 . 9806) 9720) nil (25671 40476 447389 328000) 0 nil])
([nil nil ((#("                    {{ item.suricata_version }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t) 45 46 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 46 47 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 9854) (9827 . 9854) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9779) (undo-tree-id737 . -20) (9806 . 9854) 9799) nil (25671 40476 447385 876000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9884) (9857 . 9884) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9827) (undo-tree-id736 . -20) (9854 . 9884) 9847) nil (25671 40476 447382 339000) 0 nil])
([nil nil ((9412 . 9427)) nil (25671 40476 447378 863000) 0 nil])
([nil nil ((9420 . 9442) (9421 . 9441) (#("                      " 0 22 (face whitespace-trailing)) . 9420) (9420 . 9442) (9420 . 9421) ("                    " . 9420) (9419 . 9440)) nil (25671 40476 447377 167000) 0 nil])
([nil nil ((#("                  <v-layout justify-left>
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9514) (9485 . 9514) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9443) (undo-tree-id735 . -22) (9472 . 9514) 9465) nil (25671 40476 447373 876000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('suricata_version')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 75 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 75 76 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 76 78 (block-side t tag-attr t tag-name "v-btn" tag-type start) 78 79 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9595) (9566 . 9595) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9485) (undo-tree-id734 . -22) (9514 . 9595) 9507) nil (25671 40476 447370 288000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9664) (9635 . 9664) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9566) (undo-tree-id733 . -22) (9595 . 9664) 9588) nil (25671 40476 447366 969000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9693) (9664 . 9693) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9635) (undo-tree-id732 . -22) (9664 . 9693) 9657) nil (25671 40476 447363 425000) 0 nil])
([nil nil ((#("                    <b>Suricata</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 34 35 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9729) (9700 . 9729) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9664) (undo-tree-id731 . -22) (9693 . 9729) 9686) nil (25671 40476 447359 985000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9759) (9730 . 9759) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9700) (undo-tree-id730 . -22) (9729 . 9759) 9722) nil (25671 40476 447356 329000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left>" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9442) (undo-tree-id727 . -42) (undo-tree-id728 . -1) (undo-tree-id729 . -42)) nil (25671 40476 447352 342000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9657) (undo-tree-id724 . -30) (undo-tree-id725 . -1) (undo-tree-id726 . -30)) nil (25671 40476 447347 818000) 0 nil])
([nil nil ((9686 . 9707)) nil (25671 40476 447343 116000) 0 nil])
([nil nil ((9707 . 9722)) nil (25671 40476 447342 42000) 0 nil])
([nil nil ((9715 . 9737) (9716 . 9736) (#("                      " 0 22 (face whitespace-trailing)) . 9715) (9715 . 9737) (9715 . 9716) ("                    " . 9715) (9714 . 9735)) nil (25671 40476 447340 177000) 0 nil])
([nil nil ((#("                  <v-layout justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 27 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-layout" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 29 39 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-name "v-layout" tag-type start) 41 42 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 42 49 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 49 50 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-name "v-layout" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 52 56 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-equal-face) 57 76 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 76 77 (tag-attr t tag-attr-end 5 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9846) (9817 . 9846) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9738) (undo-tree-id723 . -22) (9767 . 9846) 9760) nil (25671 40476 447337 151000) 0 nil])
([nil nil ((#("                    {{ item.suricata_version }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t) 45 46 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 46 47 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 9894) (9865 . 9894) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9817) (undo-tree-id722 . -22) (9846 . 9894) 9839) nil (25671 40476 447303 252000) 0 nil])
([nil nil ((#("                  </v-layout>
" 18 19 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9924) (9895 . 9924) (#("                    </v-col>
" 20 21 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9865) (undo-tree-id721 . -22) (9894 . 9924) 9887) nil (25671 40476 447299 507000) 0 nil])
([nil nil ((#("
                  <v-layout justify-left text-left style=\"padding-left: 36px\">" 19 20 (tag-name "v-layout" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 20 28 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-layout" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 30 40 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-name "v-layout" tag-type start) 42 43 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 43 50 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-attr t tag-attr-end 0 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 51 52 (tag-name "v-layout" tag-type start) 52 53 (tag-attr-beg 0 tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 53 57 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-name-face) 57 58 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-equal-face) 58 77 (tag-attr t tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-attr t tag-attr-end 5 tag-name "v-layout" tag-type start font-lock-face web-mode-html-attr-value-face) 78 79 (tag-name "v-layout" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9737) (undo-tree-id718 . -79) (undo-tree-id719 . -1) (undo-tree-id720 . -79)) nil (25671 40476 447296 106000) 0 nil])
([nil nil ((#("
                  </v-layout>" 19 20 (tag-name "v-layout" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 29 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-layout" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9785) (undo-tree-id715 . -30) (undo-tree-id716 . -1) (undo-tree-id717 . -30)) nil (25671 40476 447291 509000) 0 nil])
([nil nil ((9925 . 9927) (9898 . 9900) (9871 . 9873) (9842 . 9844) (9770 . 9794) ("                    " . 9770) (9745 . 9769) (#("                      " 0 22 (face whitespace-trailing)) . 9745) (9735 . 9737) (9704 . 9706) (9644 . 9668) ("                    " . 9644) (9611 . 9635) ("                    " . 9611) (9538 . 9564) ("                      " . 9538) (9453 . 9477) ("                    " . 9453) (9428 . 9452) ("                      " . 9428) (9418 . 9420) (9388 . 9390) (9360 . 9362) (9320 . 9336) ("              " . 9320)) nil (25671 40476 447284 867000) 0 nil])
([nil nil (("
" . 9427) (undo-tree-id714 . -1)) nil (25671 40476 447277 241000) 0 nil])
([nil nil (("
" . 9743) (undo-tree-id713 . -1)) nil (25671 40476 447274 825000) 0 nil])
([nil nil ((nil tag-name "v-layout" 13814 . 13819) (nil tag-type end 13814 . 13819) (nil font-lock-face web-mode-html-tag-custom-face 13814 . 13819) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -13814) (13822 . 13827) (nil tag-name "v-layout" 13067 . 13072) (nil tag-type start 13067 . 13072) (nil font-lock-face web-mode-html-tag-custom-face 13067 . 13072) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -13067) (13075 . 13080) (nil tag-name "v-layout" 13041 . 13046) (nil tag-type end 13041 . 13046) (nil font-lock-face web-mode-html-tag-custom-face 13041 . 13046) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -13041) (13049 . 13054) (nil tag-name "v-layout" 12800 . 12805) (nil tag-type start 12800 . 12805) (nil font-lock-face web-mode-html-tag-custom-face 12800 . 12805) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -12800) (12808 . 12813) (nil tag-name "v-layout" 12725 . 12730) (nil tag-type end 12725 . 12730) (nil font-lock-face web-mode-html-tag-custom-face 12725 . 12730) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -12725) (12733 . 12738) (nil tag-name "v-layout" 12614 . 12619) (nil tag-type start 12614 . 12619) (nil font-lock-face web-mode-html-tag-custom-face 12614 . 12619) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -12614) (12622 . 12627) (nil tag-name "v-layout" 12588 . 12593) (nil tag-type end 12588 . 12593) (nil font-lock-face web-mode-html-tag-custom-face 12588 . 12593) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -12588) (12596 . 12601) (nil tag-name "v-layout" 12353 . 12358) (nil tag-type start 12353 . 12358) (nil font-lock-face web-mode-html-tag-custom-face 12353 . 12358) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -12353) (12361 . 12366) (nil tag-name "v-layout" 12231 . 12236) (nil tag-type end 12231 . 12236) (nil font-lock-face web-mode-html-tag-custom-face 12231 . 12236) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -12231) (12239 . 12244) (nil tag-name "v-layout" 12115 . 12120) (nil tag-type start 12115 . 12120) (nil font-lock-face web-mode-html-tag-custom-face 12115 . 12120) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -12115) (12123 . 12128) (nil tag-name "v-layout" 12089 . 12094) (nil tag-type end 12089 . 12094) (nil font-lock-face web-mode-html-tag-custom-face 12089 . 12094) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -12089) (12097 . 12102) (nil tag-name "v-layout" 11844 . 11849) (nil tag-type start 11844 . 11849) (nil font-lock-face web-mode-html-tag-custom-face 11844 . 11849) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -11844) (11852 . 11857) (nil tag-name "v-layout" 11769 . 11774) (nil tag-type end 11769 . 11774) (nil font-lock-face web-mode-html-tag-custom-face 11769 . 11774) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -11769) (11777 . 11782) (nil tag-name "v-layout" 11657 . 11662) (nil tag-type start 11657 . 11662) (nil font-lock-face web-mode-html-tag-custom-face 11657 . 11662) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -11657) (11665 . 11670) (nil tag-name "v-layout" 11631 . 11636) (nil tag-type end 11631 . 11636) (nil font-lock-face web-mode-html-tag-custom-face 11631 . 11636) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -11631) (11639 . 11644) (nil tag-name "v-layout" 11394 . 11399) (nil tag-type start 11394 . 11399) (nil font-lock-face web-mode-html-tag-custom-face 11394 . 11399) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -11394) (11402 . 11407) (nil tag-name "v-layout" 11319 . 11324) (nil tag-type end 11319 . 11324) (nil font-lock-face web-mode-html-tag-custom-face 11319 . 11324) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -11319) (11327 . 11332) (nil tag-name "v-layout" 11206 . 11211) (nil tag-type start 11206 . 11211) (nil font-lock-face web-mode-html-tag-custom-face 11206 . 11211) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -11206) (11214 . 11219) (nil tag-name "v-layout" 11180 . 11185) (nil tag-type end 11180 . 11185) (nil font-lock-face web-mode-html-tag-custom-face 11180 . 11185) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -11180) (11188 . 11193) (nil tag-name "v-layout" 10941 . 10946) (nil tag-type start 10941 . 10946) (nil font-lock-face web-mode-html-tag-custom-face 10941 . 10946) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -10941) (10949 . 10954) (nil tag-name "v-layout" 10821 . 10826) (nil tag-type end 10821 . 10826) (nil font-lock-face web-mode-html-tag-custom-face 10821 . 10826) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -10821) (10829 . 10834) (nil tag-name "v-layout" 10698 . 10703) (nil tag-type start 10698 . 10703) (nil font-lock-face web-mode-html-tag-custom-face 10698 . 10703) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -10698) (10706 . 10711) (nil tag-name "v-layout" 10672 . 10677) (nil tag-type end 10672 . 10677) (nil font-lock-face web-mode-html-tag-custom-face 10672 . 10677) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -10672) (10680 . 10685) (nil tag-name "v-layout" 10421 . 10426) (nil tag-type start 10421 . 10426) (nil font-lock-face web-mode-html-tag-custom-face 10421 . 10426) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -10421) (10429 . 10434) (nil tag-name "v-layout" 10346 . 10351) (nil tag-type end 10346 . 10351) (nil font-lock-face web-mode-html-tag-custom-face 10346 . 10351) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -10346) (10354 . 10359) (nil tag-name "v-layout" 10225 . 10230) (nil tag-type start 10225 . 10230) (nil font-lock-face web-mode-html-tag-custom-face 10225 . 10230) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -10225) (10233 . 10238) (nil tag-name "v-layout" 10199 . 10204) (nil tag-type end 10199 . 10204) (nil font-lock-face web-mode-html-tag-custom-face 10199 . 10204) (#("v-layout" 0 8 (tag-name "v-layout" tag-type end font-lock-face web-mode-html-tag-custom-face)) . -10199) (10207 . 10212) (nil tag-name "v-layout" 9952 . 9957) (nil tag-type start 9952 . 9957) (nil font-lock-face web-mode-html-tag-custom-face 9952 . 9957) (#("v-layout" 0 8 (tag-name "v-layout" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -9952) (9960 . 9965) 9933) nil (25671 40476 447262 929000) 0 nil])
([nil nil ((9932 . 9953)) nil (25671 40476 447228 674000) 0 nil])
([nil nil ((9953 . 9968)) nil (25671 40476 447227 576000) 0 nil])
([nil nil ((9961 . 9983) (9962 . 9982) (#("                      " 0 22 (face whitespace-trailing)) . 9961) (9961 . 9983) (9961 . 9962) ("                    " . 9961) (9960 . 9981)) nil (25671 40476 447225 765000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10052) (undo-tree-id711 . -37) (10023 . 10052) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9984) (undo-tree-id712 . -22) (10013 . 10052) 10006) nil (25671 40476 447222 623000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('zeek_version')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 74 (block-side t tag-attr t tag-name "v-btn" tag-type start) 74 75 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10129) (10100 . 10129) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10023) (undo-tree-id710 . -22) (10052 . 10129) 10045) nil (25671 40476 447218 231000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10198) (10169 . 10198) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10100) (undo-tree-id709 . -22) (10129 . 10198) 10122) nil (25671 40476 447214 437000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10227) (10198 . 10227) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10169) (undo-tree-id708 . -22) (10198 . 10227) 10191) nil (25671 40476 447210 433000) 0 nil])
([nil nil ((#("                    <b>Zeek</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 30 31 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10259) (10230 . 10259) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10198) (undo-tree-id707 . -22) (10227 . 10259) 10220) nil (25671 40476 447207 18000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10286) (10257 . 10286) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10230) (undo-tree-id706 . -22) (10259 . 10286) 10252) nil (25671 40476 447202 975000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10362) (10333 . 10362) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10257) (10286 . 10362) 10279) nil (25671 40476 447187 257000) 0 nil])
([nil nil ((#("                    {{ item.zeek_version }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t) 41 42 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 42 43 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 10406) (10377 . 10406) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10333) (undo-tree-id705 . -22) (10362 . 10406) 10355) nil (25671 40476 447184 462000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10433) (10404 . 10433) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10377) (undo-tree-id704 . -22) (10406 . 10433) 10399) nil (25671 40476 447181 34000) 0 nil])
([nil nil ((#("justify-left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 10009) (undo-tree-id702 . -12) (undo-tree-id703 . -12)) nil (25671 40476 447177 722000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -10008) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 10009) nil (25671 40476 447174 505000) 0 nil])
([nil nil ((#("justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-name "v-col" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 48 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 10269) (undo-tree-id698 . -49) (undo-tree-id699 . -49)) nil (25671 40476 447170 825000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -10268) (undo-tree-id696 . -1) (undo-tree-id697 . -1) 10269) nil (25671 40476 447167 460000) 0 nil])
([nil nil ((10418 . 10437)) nil (25671 40476 447163 845000) 0 nil])
([nil nil ((10437 . 10452)) nil (25671 40476 447162 741000) 0 nil])
([nil nil ((10445 . 10465) (10446 . 10464) (#("                    " 0 20 (face whitespace-trailing)) . 10445) (10445 . 10465) (10445 . 10446) ("                  " . 10445) (10444 . 10463)) nil (25671 40476 447160 978000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10532) (10505 . 10532) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10466) (undo-tree-id695 . -20) (10493 . 10532) 10486) nil (25671 40476 447158 79000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('sensor_version')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 69 70 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 70 71 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 71 72 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 72 73 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 73 74 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 74 76 (block-side t tag-attr t tag-name "v-btn" tag-type start) 76 77 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10611) (10584 . 10611) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10505) (undo-tree-id694 . -20) (10532 . 10611) 10525) nil (25671 40476 447154 650000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10680) (10653 . 10680) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10584) (undo-tree-id693 . -20) (10611 . 10680) 10604) nil (25671 40476 447151 148000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10709) (10682 . 10709) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10653) (undo-tree-id692 . -20) (10680 . 10709) 10673) nil (25671 40476 447147 621000) 0 nil])
([nil nil ((#("                    <b>Sensor</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 32 33 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10743) (10716 . 10743) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10682) (undo-tree-id691 . -20) (10709 . 10743) 10702) nil (25671 40476 447144 86000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10770) (10743 . 10770) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10716) (undo-tree-id690 . -20) (10743 . 10770) 10736) nil (25671 40476 447140 464000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10846) (10819 . 10846) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10743) (undo-tree-id689 . -20) (10770 . 10846) 10763) nil (25671 40476 447136 815000) 0 nil])
([nil nil ((#("                    {{ item.sensor_version }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 44 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 44 45 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 10892) (10865 . 10892) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10819) (undo-tree-id688 . -20) (10846 . 10892) 10839) nil (25671 40476 447133 180000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10919) (10892 . 10919) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10865) (undo-tree-id687 . -20) (10892 . 10919) 10885) nil (25671 40476 447129 114000) 0 nil])
([nil nil ((#("justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-name "v-col" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 48 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 10768) (undo-tree-id685 . -49) (undo-tree-id686 . -49)) nil (25671 40476 447125 840000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -10767) (undo-tree-id683 . -1) (undo-tree-id684 . -1) 10768) nil (25671 40476 447121 917000) 0 nil])
([nil nil ((#("justify-left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 10491) (undo-tree-id681 . -12) (undo-tree-id682 . -12)) nil (25671 40476 447117 997000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -10490) (undo-tree-id679 . -1) (undo-tree-id680 . -1) 10491) nil (25671 40476 447114 249000) 0 nil])
([nil nil ((10949 . 10968)) nil (25671 40476 447111 79000) 0 nil])
([nil nil ((10968 . 10983)) nil (25671 40476 447110 25000) 0 nil])
([nil nil ((10976 . 10996) (10977 . 10995) (#("                    " 0 20 (face whitespace-trailing)) . 10976) (10976 . 10996) (10976 . 10977) ("                  " . 10976) (10975 . 10994)) nil (25671 40476 447108 97000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11063) (11036 . 11063) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10997) (undo-tree-id678 . -20) (11024 . 11063) 11017) nil (25671 40476 447105 131000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('unit')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 66 (block-side t tag-attr t tag-name "v-btn" tag-type start) 66 67 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 67 68 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11132) (11105 . 11132) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11036) (undo-tree-id677 . -20) (11063 . 11132) 11056) nil (25671 40476 447101 635000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11201) (11174 . 11201) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11105) (undo-tree-id676 . -20) (11132 . 11201) 11125) nil (25671 40476 447097 754000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11230) (11203 . 11230) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11174) (undo-tree-id675 . -20) (11201 . 11230) 11194) nil (25671 40476 447093 912000) 0 nil])
([nil nil ((#("                    <b>Type</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 30 31 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11262) (11235 . 11262) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11203) (undo-tree-id674 . -20) (11230 . 11262) 11223) nil (25671 40476 447089 973000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11289) (11262 . 11289) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11235) (undo-tree-id673 . -20) (11262 . 11289) 11255) nil (25671 40476 447086 532000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11365) (11338 . 11365) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11262) (undo-tree-id672 . -20) (11289 . 11365) 11282) nil (25671 40476 447083 363000) 0 nil])
([nil nil ((#("                    {{ item.unit }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t) 33 34 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 34 35 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 11401) (11374 . 11401) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11338) (undo-tree-id671 . -20) (11365 . 11401) 11358) nil (25671 40476 447080 328000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11428) (11401 . 11428) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11374) (undo-tree-id670 . -20) (11401 . 11428) 11394) nil (25671 40476 447077 200000) 0 nil])
([nil nil ((#(" justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-name "v-col" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 15 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-name "v-col" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 49 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11286) (undo-tree-id668 . -50) (undo-tree-id669 . -50)) nil (25671 40476 447074 348000) 0 nil])
([nil nil ((#("justify-left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 11022) (undo-tree-id666 . -12) (undo-tree-id667 . -12)) nil (25671 40476 447071 307000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -11021) (undo-tree-id664 . -1) (undo-tree-id665 . -1) 11022) nil (25671 40476 447067 856000) 0 nil])
([nil nil ((11413 . 11432)) nil (25671 40476 447064 788000) 0 nil])
([nil nil ((11432 . 11447)) nil (25671 40476 447063 834000) 0 nil])
([nil nil ((11440 . 11460) (11441 . 11459) (#("                    " 0 20 (face whitespace-trailing)) . 11440) (11440 . 11460) (11440 . 11441) ("                  " . 11440) (11439 . 11458)) nil (25671 40476 447062 362000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11527) (11500 . 11527) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11461) (undo-tree-id663 . -20) (11488 . 11527) 11481) nil (25671 40476 447059 689000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('tap')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 65 (block-side t tag-attr t tag-name "v-btn" tag-type start) 65 66 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 66 67 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11595) (11568 . 11595) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11500) (undo-tree-id662 . -20) (11527 . 11595) 11520) nil (25671 40476 447056 576000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11664) (11637 . 11664) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11568) (undo-tree-id661 . -20) (11595 . 11664) 11588) nil (25671 40476 447053 517000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11693) (11666 . 11693) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11637) (undo-tree-id660 . -20) (11664 . 11693) 11657) nil (25671 40476 447050 390000) 0 nil])
([nil nil ((#("                    <b>Tap</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11724) (11697 . 11724) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11666) (undo-tree-id659 . -20) (11693 . 11724) 11686) nil (25671 40476 447047 330000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11751) (11724 . 11751) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11697) (undo-tree-id658 . -20) (11724 . 11751) 11717) nil (25671 40476 447044 156000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11827) (11800 . 11827) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11724) (undo-tree-id657 . -20) (11751 . 11827) 11744) nil (25671 40476 447041 147000) 0 nil])
([nil nil ((#("                    {{ item.tap }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t) 32 33 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 33 34 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 11862) (11835 . 11862) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11800) (undo-tree-id656 . -20) (11827 . 11862) 11820) nil (25671 40476 447038 95000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11889) (11862 . 11889) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11835) (undo-tree-id655 . -20) (11862 . 11889) 11855) nil (25671 40476 447034 933000) 0 nil])
([nil nil ((#("justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-name "v-col" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 48 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11749) (undo-tree-id653 . -49) (undo-tree-id654 . -49)) nil (25671 40476 447032 69000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -11748) (undo-tree-id651 . -1) (undo-tree-id652 . -1) 11749) nil (25671 40476 447028 917000) 0 nil])
([nil nil ((#(" justify-left" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 11485) (undo-tree-id649 . -13) (undo-tree-id650 . -13)) nil (25671 40476 447025 620000) 0 nil])
([nil nil (("
" . 11439) (undo-tree-id648 . -1)) nil (25671 40476 447022 566000) 0 nil])
([nil nil ((11873 . 11892)) nil (25671 40476 447020 642000) 0 nil])
([nil nil ((11892 . 11907)) nil (25671 40476 447019 749000) 0 nil])
([nil nil ((11900 . 11920) (11901 . 11919) (#("                    " 0 20 (face whitespace-trailing)) . 11900) (11900 . 11920) (11900 . 11901) ("                  " . 11900) (11899 . 11918)) nil (25671 40476 447018 345000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11987) (11960 . 11987) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11921) (undo-tree-id647 . -20) (11948 . 11987) 11941) nil (25671 40476 447015 718000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('storage')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12059) (12032 . 12059) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 11960) (undo-tree-id646 . -20) (11987 . 12059) 11980) nil (25671 40476 447012 563000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12128) (12101 . 12128) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12032) (undo-tree-id645 . -20) (12059 . 12128) 12052) nil (25671 40476 447008 607000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12157) (12130 . 12157) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12101) (undo-tree-id644 . -20) (12128 . 12157) 12121) nil (25671 40476 447005 553000) 0 nil])
([nil nil ((#("                    <b>Storage</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 33 34 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12192) (12165 . 12192) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12130) (undo-tree-id643 . -20) (12157 . 12192) 12150) nil (25671 40476 447002 381000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12219) (12192 . 12219) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12165) (undo-tree-id642 . -20) (12192 . 12219) 12185) nil (25671 40476 446999 318000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12295) (12268 . 12295) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12192) (undo-tree-id641 . -20) (12219 . 12295) 12212) nil (25671 40476 446996 160000) 0 nil])
([nil nil ((#("                    {{ item.storage }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t) 36 37 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 37 38 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 12334) (12307 . 12334) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12268) (undo-tree-id640 . -20) (12295 . 12334) 12288) nil (25671 40476 446993 159000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12361) (12334 . 12361) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12307) (undo-tree-id639 . -20) (12334 . 12361) 12327) nil (25671 40476 446989 573000) 0 nil])
([nil nil ((#(" justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-name "v-col" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 15 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-name "v-col" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 49 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12216) (undo-tree-id637 . -50) (undo-tree-id638 . -50)) nil (25671 40476 446986 537000) 0 nil])
([nil nil ((#("justify-left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 11946) (undo-tree-id635 . -12) (undo-tree-id636 . -12)) nil (25671 40476 446983 155000) 0 nil])
([nil nil (("
" . 11899) (undo-tree-id634 . -1)) nil (25671 40476 446980 111000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -11944) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 11945) nil (25671 40476 446977 988000) 0 nil])
([nil nil ((12395 . 12415) (12385 . 12387) (12392 . 12393)) nil (25671 40476 446974 837000) 0 nil])
([nil nil ((12415 . 12430)) nil (25671 40476 446973 409000) 0 nil])
([nil nil ((12423 . 12445) (12424 . 12444) (#("                      " 0 22 (face whitespace-trailing)) . 12423) (12423 . 12445) (12423 . 12424) ("                    " . 12423) (12422 . 12443)) nil (25671 40476 446972 102000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12514) (12485 . 12514) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12446) (undo-tree-id631 . -22) (12475 . 12514) 12468) nil (25671 40476 446969 567000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('os')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 64 (block-side t tag-attr t tag-name "v-btn" tag-type start) 64 65 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 65 66 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12581) (12552 . 12581) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12485) (undo-tree-id630 . -22) (12514 . 12581) 12507) nil (25671 40476 446966 452000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12650) (12621 . 12650) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12552) (undo-tree-id629 . -22) (12581 . 12650) 12574) nil (25671 40476 446963 195000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12679) (12650 . 12679) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12621) (undo-tree-id628 . -22) (12650 . 12679) 12643) nil (25671 40476 446959 939000) 0 nil])
([nil nil ((#("                    <b>Os</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 28 29 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12709) (12680 . 12709) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12650) (undo-tree-id627 . -22) (12679 . 12709) 12672) nil (25671 40476 446956 763000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12736) (12707 . 12736) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12680) (undo-tree-id626 . -22) (12709 . 12736) 12702) nil (25671 40476 446953 531000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12812) (12783 . 12812) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12707) (undo-tree-id625 . -22) (12736 . 12812) 12729) nil (25671 40476 446950 371000) 0 nil])
([nil nil ((#("                    {{ item.os }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t) 31 32 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 32 33 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 12846) (12817 . 12846) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12783) (undo-tree-id624 . -22) (12812 . 12846) 12805) nil (25671 40476 446945 933000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12873) (12844 . 12873) (#("                    </v-row>
" 20 21 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12817) (undo-tree-id623 . -22) (12846 . 12873) 12839) nil (25671 40476 446942 762000) 0 nil])
([nil nil ((#(" justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-name "v-col" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 15 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-name "v-col" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 49 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12731) (undo-tree-id621 . -50) (undo-tree-id622 . -50)) nil (25671 40476 446939 819000) 0 nil])
([nil nil ((#(" justify-left" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 12470) (undo-tree-id619 . -13) (undo-tree-id620 . -13)) nil (25671 40476 446936 432000) 0 nil])
([nil nil ((12858 . 12877)) nil (25671 40476 446933 457000) 0 nil])
([nil nil ((12877 . 12892)) nil (25671 40476 446932 513000) 0 nil])
([nil nil ((12885 . 12905) (12886 . 12904) (#("                    " 0 20 (face whitespace-trailing)) . 12885) (12885 . 12905) (12885 . 12886) ("                  " . 12885) (12884 . 12903)) nil (25671 40476 446931 30000) 0 nil])
([nil nil ((#("                  <v-col justify-left>
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12972) (12945 . 12972) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12906) (undo-tree-id618 . -20) (12933 . 12972) 12926) nil (25671 40476 446928 565000) 0 nil])
([nil nil ((#("                    <v-btn text x-small @click=\"setDynamic('notes')\">
" 20 21 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 26 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 26 27 (tag-name "v-btn" tag-type start) 27 28 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-btn" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-btn" tag-type start) 40 41 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 58 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 58 60 (block-side t tag-attr t tag-name "v-btn" tag-type start) 60 61 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 67 (block-side t tag-attr t tag-name "v-btn" tag-type start) 67 68 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 68 69 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13042) (13015 . 13042) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12945) (undo-tree-id617 . -20) (12972 . 13042) 12965) nil (25671 40476 446925 402000) 0 nil])
([nil nil ((#("                      <v-icon size=\"17px\">mdi-select-search</v-icon>
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start) 30 31 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13111) (13084 . 13111) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13015) (undo-tree-id616 . -20) (13042 . 13111) 13035) nil (25671 40476 446922 248000) 0 nil])
([nil nil ((#("                    </v-btn>
" 20 21 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13140) (13113 . 13140) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13084) (undo-tree-id615 . -20) (13111 . 13140) 13104) nil (25671 40476 446919 54000) 0 nil])
([nil nil ((#("                    <b>Notes</b>
" 20 21 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 31 32 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13173) (13146 . 13173) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13113) (undo-tree-id614 . -20) (13140 . 13173) 13133) nil (25671 40476 446915 957000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13200) (13173 . 13200) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13146) (undo-tree-id613 . -20) (13173 . 13200) 13166) nil (25671 40476 446912 720000) 0 nil])
([nil nil ((#("                  <v-col justify-left text-left style=\"padding-left: 36px\">
" 18 19 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 24 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-col" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 26 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 37 38 (tag-name "v-col" tag-type start) 38 39 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 39 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-name "v-col" tag-type start) 48 49 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 53 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 54 73 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13276) (13249 . 13276) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13173) (undo-tree-id612 . -20) (13200 . 13276) 13193) nil (25671 40476 446909 465000) 0 nil])
([nil nil ((#("                    <v-form ref=\"noteform\">
" 20 21 (tag-name "v-form" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 21 27 (tag-name "v-form" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-form" tag-type start) 28 29 (tag-attr-beg 0 tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-name-face) 29 31 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 41 (tag-attr t tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-attr t tag-attr-end 3 tag-name "v-form" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-name "v-form" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13320) (13293 . 13320) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13249) (undo-tree-id611 . -20) (13276 . 13320) 13269) nil (25671 40476 446906 244000) 0 nil])
([nil nil ((#("                      <v-textarea max-height=\"100\" class=\"pt-0\"  style=\"padding-right: 20px\"
" 22 23 (tag-name "v-textarea" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 33 (tag-name "v-textarea" tag-type start font-lock-face web-mode-html-tag-custom-face) 33 34 (tag-name "v-textarea" tag-type start) 34 35 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 35 44 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-equal-face) 45 49 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 10 tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-textarea" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 52 56 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-equal-face) 57 62 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 62 63 (tag-attr t tag-attr-end 5 tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 63 65 (tag-name "v-textarea" tag-type start) 65 66 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 66 70 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 70 71 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-equal-face) 71 91 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (tag-attr t tag-attr-end 5 tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-name "v-textarea" tag-type start)) . 13413) (13386 . 13413) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13293) (undo-tree-id610 . -20) (13320 . 13413) 13313) nil (25671 40476 446902 845000) 0 nil])
([nil nil (("                                  name=\"notes\"
" . 13460) (13433 . 13460) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13386) (undo-tree-id609 . -20) (13413 . 13460) 13406) nil (25671 40476 446899 827000) 0 nil])
([nil nil (("                                  v-model=\"sensor_notes[item['Sensor ID']]\"
" . 13536) (13509 . 13536) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13433) (undo-tree-id608 . -20) (13460 . 13536) 13453) nil (25671 40476 446896 486000) 0 nil])
([nil nil (("                                  placeholder=\"\"
" . 13585) (13558 . 13585) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13509) (undo-tree-id607 . -20) (13536 . 13585) 13529) nil (25671 40476 446893 421000) 0 nil])
([nil nil (("                                  counter=\"1000\"
" . 13634) (13607 . 13634) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13558) (undo-tree-id606 . -20) (13585 . 13634) 13578) nil (25671 40476 446890 313000) 0 nil])
([nil nil (("                                  rows=1
" . 13675) (13648 . 13675) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13607) (undo-tree-id605 . -20) (13634 . 13675) 13627) nil (25671 40476 446887 38000) 0 nil])
([nil nil ((#("                                  :auto-grow=\"true\"
" 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 44 45 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 13727) (13700 . 13727) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13648) (undo-tree-id604 . -20) (13675 . 13727) 13668) nil (25671 40476 446883 675000) 0 nil])
([nil nil ((#("                                  @blur=\"saveNote(sensor_notes[item['Sensor ID']], item['Sensor ID'])\"
" 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 41 49 (block-side t face web-mode-function-call-face) 49 50 (block-side t) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 69 (block-side t) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t) 76 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t face web-mode-variable-name-face) 78 83 (block-side t) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 89 (block-side t) 89 90 (block-side t face web-mode-variable-name-face) 90 91 (block-side t face web-mode-variable-name-face) 91 92 (block-side t face web-mode-variable-name-face) 92 93 (block-side t face web-mode-variable-name-face) 93 94 (block-side t face web-mode-variable-name-face) 94 95 (block-side t face web-mode-variable-name-face) 95 96 (block-side t) 96 97 (block-side t face web-mode-variable-name-face) 97 98 (block-side t face web-mode-variable-name-face) 98 101 (block-side t) 101 102 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 13830) (13803 . 13830) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13700) (undo-tree-id603 . -20) (13727 . 13830) 13720) nil (25671 40476 446880 273000) 0 nil])
([nil nil ((#("                                  :rules=\"rules\"
" 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 13879) (13852 . 13879) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13803) (undo-tree-id602 . -20) (13830 . 13879) 13823) nil (25671 40476 446877 99000) 0 nil])
([nil nil ((#("                      ></v-textarea>
" 23 24 (tag-name "v-textarea" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 24 25 (tag-name "v-textarea" tag-type end font-lock-face web-mode-html-tag-bracket-face) 25 35 (tag-name "v-textarea" tag-type end font-lock-face web-mode-html-tag-custom-face) 35 36 (tag-name "v-textarea" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13916) (13889 . 13916) (#("                  </v-row>
" 0 17 (tag-name "v-textarea" tag-type start) 17 18 (tag-name "v-textarea" tag-type start tag-end t) 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13852) (undo-tree-id601 . -20) (13879 . 13916) 13872) nil (25671 40476 446873 735000) 0 nil])
([nil nil ((#("                    </v-form>
" 20 21 (tag-name "v-form" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "v-form" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 28 (tag-name "v-form" tag-type end font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-form" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13946) (13919 . 13946) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13889) (undo-tree-id600 . -20) (13916 . 13946) 13909) nil (25671 40476 446870 579000) 0 nil])
([nil nil ((#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13973) (13946 . 13973) (#("                  </v-row>
" 18 19 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13919) (undo-tree-id599 . -20) (13946 . 13973) 13939) nil (25671 40476 446867 484000) 0 nil])
([nil nil ((#("justify-left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 12931) (undo-tree-id597 . -12) (undo-tree-id598 . -12)) nil (25671 40476 446864 543000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -12930) (undo-tree-id595 . -1) (undo-tree-id596 . -1) 12931) nil (25671 40476 446861 280000) 0 nil])
([nil nil ((#(" justify-left text-left style=\"padding-left: 36px\"" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 12 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-name "v-col" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 15 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-name "v-col" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 49 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13184) (undo-tree-id593 . -50) (undo-tree-id594 . -50)) nil (25671 40476 446858 32000) 0 nil])
([nil nil (("
" . 13958) (undo-tree-id592 . -1)) nil (25671 40476 446854 706000) 0 nil])
([nil nil (("
" . 12884) (undo-tree-id591 . -1)) nil (25671 40476 446852 710000) 0 nil])
([nil nil (("
" . 12422) (undo-tree-id590 . -1)) nil (25671 40476 446850 484000) 0 nil])
([nil nil ((14336 . 14352) ("              " . 14336) (14325 . 14327) (14299 . 14301) (14272 . 14274) (14245 . 14247) (14214 . 14218) (14162 . 14186) ("                    " . 14162) (14121 . 14147) (#("                      " 0 22 (tag-name "v-textarea" tag-type start)) . 14121) (14102 . 14106) (13995 . 13999) (13939 . 13943) (13894 . 13898) (13841 . 13845) (13788 . 13792) (13708 . 13712) (13657 . 13661) (13526 . 13552) ("                      " . 13526) (13478 . 13502) ("                    " . 13478) (13466 . 13470) (13435 . 13439) (13380 . 13404) ("                    " . 13380) (13347 . 13371) ("                    " . 13347) (13274 . 13300) ("                      " . 13274) (13200 . 13224) ("                    " . 13200) (13188 . 13192) (13140 . 13142) (13112 . 13114) (13085 . 13087) (13027 . 13031) (12971 . 12995) ("                    " . 12971) (12959 . 12963) (12928 . 12932) (12876 . 12900) ("                    " . 12876) (12843 . 12867) ("                    " . 12843) (12770 . 12796) ("                      " . 12770) (12699 . 12723) ("                    " . 12699) (12687 . 12691) (12544 . 12560) ("              " . 12544) (12533 . 12535) (12506 . 12508) (12475 . 12479) (12414 . 12438) ("                    " . 12414) (12402 . 12406) (12371 . 12375) (12314 . 12338) ("                    " . 12314) (12281 . 12305) ("                    " . 12281) (12208 . 12234) ("                      " . 12208) (12132 . 12156) ("                    " . 12132) (12120 . 12124) (12072 . 12074) (12044 . 12046) (12017 . 12019) (11990 . 11992) (11959 . 11963) (11902 . 11926) ("                    " . 11902) (11890 . 11894) (11859 . 11863) (11806 . 11830) ("                    " . 11806) (11773 . 11797) ("                    " . 11773) (11700 . 11726) ("                      " . 11700) (11628 . 11652) ("                    " . 11628) (11616 . 11620) (11568 . 11570) (11540 . 11542) (11513 . 11515) (11486 . 11488) (11455 . 11459) (11397 . 11421) ("                    " . 11397) (11385 . 11389) (11354 . 11358) (11300 . 11324) ("                    " . 11300) (11267 . 11291) ("                    " . 11267) (11194 . 11220) ("                      " . 11194) (11121 . 11145) ("                    " . 11121) (11109 . 11113) (11088 . 11090) (11058 . 11060) (11030 . 11032) (10990 . 11006) ("              " . 10990) (10965 . 10981) ("              " . 10965) (10954 . 10956) (10927 . 10929) (10896 . 10900) (10828 . 10852) ("                    " . 10828) (10816 . 10820) (10785 . 10789) (10729 . 10753) ("                    " . 10729) (10696 . 10720) ("                    " . 10696) (10623 . 10649) ("                      " . 10623) (10540 . 10564) ("                    " . 10540) (10528 . 10532) (10507 . 10509) (10477 . 10479) (10449 . 10451) (10422 . 10424) (10364 . 10368) (10298 . 10322) ("                    " . 10298) (10286 . 10290) (10255 . 10259) (10201 . 10225) ("                    " . 10201) (10168 . 10192) ("                    " . 10168) (10095 . 10121) ("                      " . 10095) (10014 . 10038) ("                    " . 10014) (10002 . 10006) 6280) nil (25671 40476 446835 899000) 0 nil])
([nil nil ((#("                    " 0 20 (face whitespace-trailing)) . -12973) (#("                      " 0 22 (face whitespace-trailing)) . -12492) (#("                    " 0 20 (face whitespace-trailing)) . -11947) (#("                    " 0 20 (face whitespace-trailing)) . -11463) (undo-tree-id584 . -11) (undo-tree-id585 . -11) (undo-tree-id586 . -11) (undo-tree-id587 . -11) (undo-tree-id588 . -11) (undo-tree-id589 . -11) (#("                      " 0 22 (face whitespace-trailing)) . -10976) (#("                      " 0 22 (face whitespace-trailing)) . -10417) (#("                      " 0 22 (face whitespace-trailing)) . -9913) (#("                        " 0 24 (face whitespace-trailing)) . -9719) (#("                        " 0 24 (face whitespace-trailing)) . -9427) 11588) nil (25671 40527 161041 168000) 0 nil])
([nil nil ((5269 . 5270) (5262 . 5271) (t 25671 40476 487079 592000)) nil (25671 40704 783053 346000) 0 nil] [nil nil ((5444 . 5452) (t 25671 40476 487079 592000)) ((#("</v-row>" 0 1 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 7 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 7 8 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5444)) (25671 40527 159932 506000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5269) (undo-tree-id755 . -1) 5270) nil (25671 40704 783051 5000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 5288 . 5289) (nil tag-attr t 5269 . 5289) (nil tag-name "tr" 5269 . 5289) (nil tag-type start 5269 . 5289) (nil font-lock-face web-mode-html-attr-value-face 5269 . 5289) (5269 . 5289)) nil (25671 40704 783048 30000) 0 nil])
([nil nil ((#("style=\"pointer-events: auto; text-align:left;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 7 21 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 24 27 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (rear-nonsticky t tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 30 44 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (rear-nonsticky t tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-attr-end 5 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5291) (undo-tree-id750 . -46) (undo-tree-id751 . -7) (undo-tree-id752 . -46) (undo-tree-id753 . -45) (undo-tree-id754 . -46)) nil (25671 40704 783044 833000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "tr" tag-type start)) . -5290) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) 5291) nil (25671 40704 783031 624000) 0 nil])
([nil nil ((5402 . 5419) (t 25671 40704 824225 538000)) nil (25671 45273 205015 925000) 0 nil])
([nil nil ((5426 . 5427) (5419 . 5434)) nil (25671 45273 205014 174000) 0 nil])
([nil nil ((#("v" 0 1 (tag-name "v" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -5420) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("-" 0 1 (tag-name "v-" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -5421) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (#("r" 0 1 (tag-name "v-r" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -5422) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("w" 0 1 (tag-name "v-rw" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -5423) (undo-tree-id795 . -1) (#("o" 0 1 (tag-name "v-rwo" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -5424) (undo-tree-id796 . -1) (#(">" 0 1 (tag-name "v-rwo" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -5425) (undo-tree-id797 . -1) (" " . -5426) (undo-tree-id798 . -1) 5427) nil (25671 45273 205011 105000) 0 nil])
([nil nil ((#("<" 0 1 (tag-name "v-rwo" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face)) . 5420)) nil (25671 45273 204994 381000) 0 nil])
([nil nil ((" " . -5418) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("<" 0 1 (tag-name "v-rwo" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face)) . -5419) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) 5420) nil (25671 45273 204992 965000) 0 nil])
([nil nil ((">" . 5418) ("o" . 5418) ("w" . 5418) ("r" . 5418) ("-" . 5418) ("v" . 5418) ("/" . 5418)) nil (25671 45273 204984 208000) 0 nil])
([nil nil ((5403 . 5419) ("               " . 5403) (undo-tree-id777 . -15) (undo-tree-id778 . -15) (undo-tree-id779 . -15) 5418) nil (25671 45273 204981 717000) 0 nil])
([nil nil (("
" . 5419) (undo-tree-id775 . -1) (undo-tree-id776 . 1)) nil (25671 45273 204976 992000) 0 nil])
([nil nil (("                " . -5419)) nil (25671 45273 204973 900000) 0 nil])
([nil nil ((5291 . 5306)) nil (25671 45273 204972 973000) 0 nil])
([nil nil ((5306 . 5310)) nil (25671 45273 204972 98000) 0 nil])
([nil nil ((" " . -5305) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) ("v" . -5306) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) ("-" . -5307) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) ("r" . -5308) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) ("o" . -5309) (undo-tree-id773 . -1) (undo-tree-id774 . -1) 5310) nil (25671 45273 204969 586000) 0 nil])
([nil nil ((5305 . 5306)) nil (25671 45273 204950 829000) 0 nil])
([nil nil ((5306 . 5310)) nil (25671 45273 204949 817000) 0 nil])
([nil nil ((#("o" 0 1 (tag-name "v-o" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -5309) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) 5310) nil (25671 45273 204948 409000) 0 nil])
([nil nil ((5309 . 5321)) nil (25671 45273 204943 486000) 0 nil])
([nil nil ((5314 . 5330) (5315 . 5329) (#("                " 0 16 (face whitespace-trailing)) . 5314) (5314 . 5330) (5314 . 5315) ("              " . 5314) (5313 . 5328)) nil (25671 45273 204941 753000) 0 nil])
([nil nil ((5330 . 5331)) nil (25671 45273 204939 218000) 0 nil])
([nil nil (("j" . -5330) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 5331) nil (25671 45273 204936 749000) 0 nil])
([nil nil ((5330 . 5334)) nil (25671 45273 204919 929000) 0 nil])
([nil nil ((5313 . 5330) (t 25671 45273 239854 25000)) nil (25671 45289 160779 243000) 0 nil])
([nil nil ((5330 . 5345)) nil (25671 45289 160777 949000) 0 nil])
([nil nil ((5338 . 5356) (5339 . 5355) (#("                  " 0 18 (face whitespace-trailing)) . 5338) (5338 . 5356) (5338 . 5339) ("                " . 5338) (5337 . 5354)) nil (25671 45289 160776 188000) 0 nil])
([nil nil (("                heyo
" . 5403) (undo-tree-id801 . -18) (undo-tree-id802 . -21) (undo-tree-id803 . -18) (undo-tree-id804 . -18) (undo-tree-id805 . -18) (undo-tree-id806 . -18) (undo-tree-id807 . -18) (undo-tree-id808 . -18) (5378 . 5403) (#("                </v-col>
" 16 17 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5357) (undo-tree-id809 . -18) (undo-tree-id810 . -18) (undo-tree-id811 . -18) (undo-tree-id812 . -18) (undo-tree-id813 . -18) (undo-tree-id814 . -18) (5382 . 5403) 5400) nil (25671 45289 160772 194000) 0 nil])
([nil nil (("                heyo
" . 5378) (undo-tree-id799 . -18) (undo-tree-id800 . -21) (5359 . 5378) (#("                  
" 0 18 (face whitespace-trailing)) . 5338) (5357 . 5378) 5375) nil (25671 45289 160753 308000) 0 nil])
([nil nil ((#("                  " 0 18 (face whitespace-trailing)) . -5359) 5358) nil (25671 45289 160733 382000) 0 nil])
([nil nil ((5336 . 5338) (t 25671 45289 195993 46000)) nil (25671 45376 386273 636000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5337) (undo-tree-id815 . -1) 5338) nil (25671 45376 386270 818000) 0 nil])
([nil nil ((5337 . 5345)) nil (25671 45376 386259 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5348 . 5349) (nil tag-attr t 5344 . 5349) (nil tag-name "v-col" 5344 . 5349) (nil tag-type start 5344 . 5349) (nil font-lock-face web-mode-html-attr-value-face 5344 . 5349) (5344 . 5349)) nil (25671 45376 386252 458000) 0 nil])
([nil nil ((#("              <v-row>
                <v-col class=\"vdrow\">
                heyo

                </v-col>
              </v-row>" 14 15 (tag-name "v-row" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 15 20 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 20 21 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 38 39 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 39 44 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 44 45 (tag-name "v-col" tag-type start) 45 46 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 48 49 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 49 50 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 50 51 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 51 52 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 52 56 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (rear-nonsticky t tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 58 59 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 98 99 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 99 100 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 100 105 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 105 106 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 121 122 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 122 123 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 123 128 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 128 129 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5292) (undo-tree-id826 . -129) (undo-tree-id827 . -44) (undo-tree-id828 . -52) (undo-tree-id829 . -22) (undo-tree-id830 . -129) (t 25671 45376 424734 396000)) nil (25671 45548 589785 964000) 0 nil])
([nil nil (("
" . -5291) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) 5292) nil (25671 45548 589778 83000) 0 nil])
([nil nil ((5425 . 5431)) nil (25671 45548 589771 110000) 0 nil])
([nil nil ((#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5427) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5428) (undo-tree-id818 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5429) (undo-tree-id819 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5430) (undo-tree-id820 . -1) 5431) nil (25671 45548 589768 591000) 0 nil])
([nil nil ((5427 . 5434)) nil (25671 45548 589751 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5460 . 5461) (nil rear-nonsticky t 5460 . 5461) (nil tag-attr t 5460 . 5461) (nil tag-name "v-row" 5460 . 5461) (nil tag-type start 5460 . 5461) (nil font-lock-face web-mode-html-attr-value-face 5460 . 5461) (nil rear-nonsticky t 5459 . 5460) (nil tag-attr t 5459 . 5460) (nil tag-name "v-row" 5459 . 5460) (nil tag-type start 5459 . 5460) (nil font-lock-face web-mode-html-attr-value-face 5459 . 5460) (nil tag-attr t 5447 . 5459) (nil tag-name "v-row" 5447 . 5459) (nil tag-type start 5447 . 5459) (nil font-lock-face web-mode-html-attr-value-face 5447 . 5459) (nil tag-attr t 5446 . 5447) (nil tag-name "v-row" 5446 . 5447) (nil tag-type start 5446 . 5447) (nil font-lock-face web-mode-html-attr-value-face 5446 . 5447) (nil tag-attr t 5433 . 5446) (nil tag-name "v-row" 5433 . 5446) (nil tag-type start 5433 . 5446) (nil font-lock-face web-mode-html-attr-value-face 5433 . 5446) (5433 . 5461)) nil (25671 45548 589742 998000) 0 nil])
([nil nil ((#("background-color: lightgrey;" 0 28 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5358) (undo-tree-id831 . -28) (undo-tree-id832 . -28) (t 25671 45548 626120 273000)) nil (25671 45562 645884 863000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5358)) nil (25671 45562 645866 846000) 0 nil])
([nil nil ((5517 . 5518) (t 25671 45562 682229 594000)) nil (25671 45625 652269 659000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5554 . 5555) (nil tag-attr t 5554 . 5555) (nil tag-attr-end 5 5554 . 5555) (nil tag-name "v-col" 5554 . 5555) (nil tag-type start 5554 . 5555) (nil font-lock-face web-mode-html-attr-value-face 5554 . 5555) (nil rear-nonsticky t 5553 . 5554) (nil tag-attr t 5553 . 5554) (nil tag-name "v-col" 5553 . 5554) (nil tag-type start 5553 . 5554) (nil font-lock-face web-mode-html-attr-value-face 5553 . 5554) (nil tag-attr t 5526 . 5553) (nil tag-name "v-col" 5526 . 5553) (nil tag-type start 5526 . 5553) (nil font-lock-face web-mode-html-attr-value-face 5526 . 5553) (nil tag-attr t 5525 . 5526) (nil tag-name "v-col" 5525 . 5526) (nil tag-type start 5525 . 5526) (nil font-lock-face web-mode-html-attr-value-face 5525 . 5526) (nil tag-attr t 5524 . 5525) (nil tag-name "v-col" 5524 . 5525) (nil tag-type start 5524 . 5525) (nil font-lock-face web-mode-html-attr-equal-face 5524 . 5525) (nil tag-attr t 5523 . 5524) (nil tag-name "v-col" 5523 . 5524) (nil tag-type start 5523 . 5524) (nil font-lock-face web-mode-html-attr-name-face 5523 . 5524) (nil tag-attr t 5522 . 5523) (nil tag-name "v-col" 5522 . 5523) (nil tag-type start 5522 . 5523) (nil font-lock-face web-mode-html-attr-name-face 5522 . 5523) (nil tag-attr t 5521 . 5522) (nil tag-name "v-col" 5521 . 5522) (nil tag-type start 5521 . 5522) (nil font-lock-face web-mode-html-attr-name-face 5521 . 5522) (nil tag-attr t 5520 . 5521) (nil tag-name "v-col" 5520 . 5521) (nil tag-type start 5520 . 5521) (nil font-lock-face web-mode-html-attr-name-face 5520 . 5521) (nil tag-attr-beg 0 5519 . 5520) (nil tag-attr t 5519 . 5520) (nil tag-name "v-col" 5519 . 5520) (nil tag-type start 5519 . 5520) (nil font-lock-face web-mode-html-attr-name-face 5519 . 5520) (nil tag-name "v-col" 5518 . 5519) (nil tag-type start 5518 . 5519) (5518 . 5555)) nil (25671 45625 652265 357000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . 5518)) nil (25671 45625 652247 654000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5385 . 5386) (nil tag-attr t 5358 . 5386) (nil tag-name "td" 5358 . 5386) (nil tag-type start 5358 . 5386) (nil font-lock-face web-mode-html-attr-value-face 5358 . 5386) (5358 . 5386) (t 25671 45625 690713 679000)) nil (25671 45663 314912 955000) 0 nil])
([nil nil ((5386 . 5387)) nil (25671 45663 314903 631000) 0 nil])
([nil nil ((#("border-style: 2px solid red;" 0 27 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5433) (undo-tree-id833 . -28) (undo-tree-id834 . -3) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -28) (undo-tree-id846 . -28) (t 25671 45663 350998 681000)) nil (25671 46022 819226 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5461 . 5462) (nil tag-attr t 5433 . 5462) (nil tag-name "v-row" 5433 . 5462) (nil tag-type start 5433 . 5462) (nil font-lock-face web-mode-html-attr-value-face 5433 . 5462) (5433 . 5462)) nil (25671 46022 819185 918000) 0 nil])
([nil nil ((5349 . 5350) (t 25671 46022 861596 811000)) nil (25671 46081 397003 601000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5357 . 5358) (nil tag-attr t 5350 . 5358) (nil tag-name "td" 5350 . 5358) (nil tag-type start 5350 . 5358) (nil font-lock-face web-mode-html-attr-value-face 5350 . 5358) (5350 . 5358)) nil (25671 46081 396996 654000) 0 nil])
([nil nil ((#("sensor_d" 0 7 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (rear-nonsticky t tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5350) (undo-tree-id868 . -8) (undo-tree-id869 . -8) (undo-tree-id870 . -8) (t 25671 46081 430004 431000)) nil (25671 46229 418567 711000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5349) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) 5350) nil (25671 46229 418542 903000) 0 nil])
([nil nil ((#("style=\"border: thick double #32a1ce;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 7 35 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5426) (undo-tree-id891 . -37) (undo-tree-id892 . -7) (undo-tree-id893 . -7) (undo-tree-id894 . -37) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -37) (undo-tree-id898 . -37) (t 25671 46229 463021 337000)) nil (25671 46459 907798 593000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -5425) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 5426) nil (25671 46459 907788 861000) 0 nil])
([nil nil ((#("style=\"border-style: 2px solid red;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 35 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5510) (undo-tree-id879 . -36) (undo-tree-id880 . -35) (undo-tree-id881 . -36)) nil (25671 46459 907777 632000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -5509) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 5510) nil (25671 46459 907772 696000) 0 nil])
([nil nil ((#("order-style: 2px solid red;" 0 26 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (rear-nonsticky t tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5359) (undo-tree-id873 . -27) (undo-tree-id874 . -27)) nil (25671 46459 907767 28000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5358) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 5359) nil (25671 46459 907762 320000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5358)) nil (25671 46942 890695 863000) 0 nil])
([nil nil ((8845 . 8859) (8837 . 8846) (t 25671 46596 721666 100000)) nil (25671 47031 775652 85000) 0 nil] [nil nil ((#("                        <v-btn text x-small @click=\"setDynamic('TOC')\">
                          <v-icon size=\"17px\">mdi-select-search</v-icon>
                        </v-btn>" 24 25 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 25 30 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 30 31 (tag-name "v-btn" tag-type start) 31 32 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 32 34 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-name "v-btn" tag-type start) 36 37 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 37 42 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 42 43 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-name "v-btn" tag-type start) 44 45 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 49 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 49 50 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 50 51 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 52 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 62 64 (block-side t tag-attr t tag-name "v-btn" tag-type start) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 98 99 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 99 105 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 105 106 (tag-name "v-icon" tag-type start) 106 107 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 107 110 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 110 111 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 111 116 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 116 117 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 117 118 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 135 136 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 136 137 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 137 143 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 143 144 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 169 170 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 170 171 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 171 176 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 176 177 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6055) (undo-tree-id1018 . -177) (undo-tree-id1019 . -72) (undo-tree-id1020 . -177) (t 25671 46596 721666 100000)) ((6055 . 6232)) (25671 46942 480796 527000) 0 nil] [nil nil ((5404 . 5407) (5396 . 5405) (t 25671 46459 944575 801000)) ((#(" class=\"\"" 0 1 (tag-name "v-row" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 8 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5396) (undo-tree-id939 . -8) (undo-tree-id940 . -8) (undo-tree-id941 . -8) (undo-tree-id942 . -8) (undo-tree-id943 . -8) (undo-tree-id944 . -8) (undo-tree-id945 . -8) (undo-tree-id946 . -8) (undo-tree-id947 . -8) (undo-tree-id948 . -8) (undo-tree-id949 . -8) (undo-tree-id950 . -8) (undo-tree-id951 . -8) (undo-tree-id952 . -8) (undo-tree-id953 . -8) (undo-tree-id954 . -8) (undo-tree-id955 . -8) (undo-tree-id956 . -8) (undo-tree-id957 . -8) (undo-tree-id958 . -8) (undo-tree-id959 . -8) (undo-tree-id960 . -8) (undo-tree-id961 . -8) (undo-tree-id962 . -8) (undo-tree-id963 . -8) (undo-tree-id964 . -8) (undo-tree-id965 . -8) (undo-tree-id966 . -8) (undo-tree-id967 . -8) (undo-tree-id968 . -8) (undo-tree-id969 . -8) (undo-tree-id970 . -8) (undo-tree-id971 . -8) (undo-tree-id972 . -8) (undo-tree-id973 . -8) (undo-tree-id974 . -8) (undo-tree-id975 . -8) (undo-tree-id976 . -8) (undo-tree-id977 . -8) (undo-tree-id978 . -8) (undo-tree-id979 . -8) (undo-tree-id980 . -8) (undo-tree-id981 . -8) (undo-tree-id982 . -8) (undo-tree-id983 . -8) (undo-tree-id984 . -8) (undo-tree-id985 . -8) (undo-tree-id986 . -8) (undo-tree-id987 . -8) (undo-tree-id988 . -8) (undo-tree-id989 . -8) (undo-tree-id990 . -8) (undo-tree-id991 . -8) (undo-tree-id992 . -8) (undo-tree-id993 . -8) (undo-tree-id994 . -8) (undo-tree-id995 . -8) (undo-tree-id996 . -8) (undo-tree-id997 . -8) (undo-tree-id998 . -8) (undo-tree-id999 . -8) (undo-tree-id1000 . -8) (undo-tree-id1001 . -8) (#("-no" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5404) (undo-tree-id1002 . -3) (undo-tree-id1003 . -3) (undo-tree-id1004 . -3) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) (undo-tree-id1007 . -3) (undo-tree-id1008 . -3) (undo-tree-id1009 . -3) (undo-tree-id1010 . -3) (undo-tree-id1011 . -3) (undo-tree-id1012 . -3) (undo-tree-id1013 . -3) (undo-tree-id1014 . -3)) (25671 46595 609871 87000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8839) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8840) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8841) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8842) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (#("=" 0 1 (tag-attr t tag-attr-end 5 tag-name "b" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -8843) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (#("\"" 0 1 (tag-name "b" tag-type start)) . -8844) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . 8845) (#("p" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8845) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (#("a" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8846) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (#("d" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8847) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (#("d" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8848) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (#("i" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (#("n" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8850) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#("g" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8851) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (#("-" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8852) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (#("r" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8853) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (#("i" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8854) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (#("g" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8855) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (#("h" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8856) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (#("t" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8857) (undo-tree-id1140 . -1) (#(":" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8858) (undo-tree-id1141 . -1) 8859) nil (25671 47031 775645 439000) 0 nil])
([nil nil (("
" . -6054) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) 6055) ((6054 . 6055)) (25671 46942 62950 822000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5404) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#("n" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5405) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (#("o" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5406) (undo-tree-id904 . -1) (undo-tree-id905 . -1) 5407) ((5404 . 5407)) (25671 46595 77310 260000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8838) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) 8839) nil (25671 47031 775590 598000) 0 nil])
([nil nil ((6130 . 6155)) (("
                        " . 6130) (undo-tree-id1023 . -25) (undo-tree-id1024 . -25) (undo-tree-id1025 . -1) (undo-tree-id1026 . -25) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -25) (undo-tree-id1039 . -25) (undo-tree-id1040 . -25) (undo-tree-id1041 . -25) (undo-tree-id1042 . -25) (undo-tree-id1043 . -25) (undo-tree-id1044 . -25)) (25671 46941 743888 842000) 0 nil])
([nil nil ((5404 . 5415)) ((#("no-gutters " 0 10 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5404) (undo-tree-id906 . -2) (undo-tree-id907 . -11) (undo-tree-id908 . -10) (undo-tree-id909 . -10) (undo-tree-id910 . -10) (undo-tree-id911 . -10) (undo-tree-id912 . -10) (undo-tree-id913 . -10) (undo-tree-id914 . -10) (undo-tree-id915 . -10) (undo-tree-id916 . -10) (undo-tree-id917 . -10) (undo-tree-id918 . -10) (undo-tree-id919 . -10) (undo-tree-id920 . -10) (undo-tree-id921 . -10) (undo-tree-id922 . -10) (undo-tree-id923 . -10) (undo-tree-id924 . -10) (undo-tree-id925 . -10) (undo-tree-id926 . -10) (undo-tree-id927 . -10) (undo-tree-id928 . -10) (undo-tree-id929 . -10) (undo-tree-id930 . -10) (undo-tree-id931 . -10) (undo-tree-id932 . -11) (undo-tree-id933 . -11) (undo-tree-id934 . -11) (undo-tree-id935 . -11) (undo-tree-id936 . -11) (undo-tree-id937 . -11) (undo-tree-id938 . -11)) (25671 46594 742201 691000) 0 nil])
([nil nil ((8845 . 8848) (8838 . 8846)) nil (25671 47031 775586 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6331 . 6332) (nil tag-name "v-btn" 6331 . 6332) (nil tag-type end 6331 . 6332) (nil tag-end t 6331 . 6332) (nil font-lock-face web-mode-html-tag-bracket-face 6331 . 6332) (nil tag-name "v-btn" 6326 . 6331) (nil tag-type end 6326 . 6331) (nil font-lock-face web-mode-html-tag-custom-face 6326 . 6331) (nil tag-name "v-btn" 6325 . 6326) (nil tag-type end 6325 . 6326) (nil font-lock-face web-mode-html-tag-bracket-face 6325 . 6326) (nil tag-name "v-btn" 6324 . 6325) (nil tag-type end 6324 . 6325) (nil tag-beg 22 6324 . 6325) (nil font-lock-face web-mode-html-tag-bracket-face 6324 . 6325) (nil tag-name "v-icon" 6298 . 6299) (nil tag-type end 6298 . 6299) (nil tag-end t 6298 . 6299) (nil font-lock-face web-mode-html-tag-bracket-face 6298 . 6299) (nil tag-name "v-icon" 6292 . 6298) (nil tag-type end 6292 . 6298) (nil font-lock-face web-mode-html-tag-custom-face 6292 . 6298) (nil tag-name "v-icon" 6291 . 6292) (nil tag-type end 6291 . 6292) (nil font-lock-face web-mode-html-tag-bracket-face 6291 . 6292) (nil tag-name "v-icon" 6290 . 6291) (nil tag-type end 6290 . 6291) (nil tag-beg 22 6290 . 6291) (nil font-lock-face web-mode-html-tag-bracket-face 6290 . 6291) (nil tag-name "v-icon" 6272 . 6273) (nil tag-type start 6272 . 6273) (nil tag-end t 6272 . 6273) (nil font-lock-face web-mode-html-tag-bracket-face 6272 . 6273) (nil tag-attr t 6271 . 6272) (nil tag-attr-end 4 6271 . 6272) (nil tag-name "v-icon" 6271 . 6272) (nil tag-type start 6271 . 6272) (nil font-lock-face web-mode-html-attr-value-face 6271 . 6272) (nil tag-attr t 6266 . 6271) (nil tag-name "v-icon" 6266 . 6271) (nil tag-type start 6266 . 6271) (nil font-lock-face web-mode-html-attr-value-face 6266 . 6271) (nil tag-attr t 6265 . 6266) (nil tag-name "v-icon" 6265 . 6266) (nil tag-type start 6265 . 6266) (nil font-lock-face web-mode-html-attr-equal-face 6265 . 6266) (nil tag-attr t 6262 . 6265) (nil tag-name "v-icon" 6262 . 6265) (nil tag-type start 6262 . 6265) (nil font-lock-face web-mode-html-attr-name-face 6262 . 6265) (nil tag-attr-beg 0 6261 . 6262) (nil tag-attr t 6261 . 6262) (nil tag-name "v-icon" 6261 . 6262) (nil tag-type start 6261 . 6262) (nil font-lock-face web-mode-html-attr-name-face 6261 . 6262) (nil tag-name "v-icon" 6260 . 6261) (nil tag-type start 6260 . 6261) (nil tag-name "v-icon" 6254 . 6260) (nil tag-type start 6254 . 6260) (nil font-lock-face web-mode-html-tag-custom-face 6254 . 6260) (nil tag-name "v-icon" 6253 . 6254) (nil tag-type start 6253 . 6254) (nil tag-beg 19 6253 . 6254) (nil font-lock-face web-mode-html-tag-bracket-face 6253 . 6254) (nil tag-name "v-btn" 6225 . 6226) (nil tag-type start 6225 . 6226) (nil tag-end t 6225 . 6226) (nil font-lock-face web-mode-html-tag-bracket-face 6225 . 6226) (nil block-side t 6224 . 6225) (nil block-end t 6224 . 6225) (nil block-token delimiter-end 6224 . 6225) (nil tag-attr t 6224 . 6225) (nil tag-attr-end 5 6224 . 6225) (nil tag-name "v-btn" 6224 . 6225) (nil tag-type start 6224 . 6225) (nil font-lock-face web-mode-block-delimiter-face 6224 . 6225) (nil block-side t 6222 . 6224) (nil tag-attr t 6222 . 6224) (nil tag-name "v-btn" 6222 . 6224) (nil tag-type start 6222 . 6224) (nil block-side t 6221 . 6222) (nil tag-attr t 6221 . 6222) (nil tag-name "v-btn" 6221 . 6222) (nil tag-type start 6221 . 6222) (nil face web-mode-variable-name-face 6221 . 6222) (nil block-side t 6220 . 6221) (nil tag-attr t 6220 . 6221) (nil tag-name "v-btn" 6220 . 6221) (nil tag-type start 6220 . 6221) (nil face web-mode-variable-name-face 6220 . 6221) (nil block-side t 6219 . 6220) (nil tag-attr t 6219 . 6220) (nil tag-name "v-btn" 6219 . 6220) (nil tag-type start 6219 . 6220) (nil face web-mode-variable-name-face 6219 . 6220) (nil block-side t 6217 . 6219) (nil tag-attr t 6217 . 6219) (nil tag-name "v-btn" 6217 . 6219) (nil tag-type start 6217 . 6219) (nil block-side t 6207 . 6217) (nil tag-attr t 6207 . 6217) (nil tag-name "v-btn" 6207 . 6217) (nil tag-type start 6207 . 6217) (nil face web-mode-function-call-face 6207 . 6217) (nil block-side t 6206 . 6207) (nil block-token delimiter-beg 6206 . 6207) (nil tag-attr t 6206 . 6207) (nil tag-name "v-btn" 6206 . 6207) (nil tag-type start 6206 . 6207) (nil font-lock-face web-mode-block-delimiter-face 6206 . 6207) (nil block-side t 6205 . 6206) (nil block-token delimiter-beg 6205 . 6206) (nil tag-attr t 6205 . 6206) (nil tag-name "v-btn" 6205 . 6206) (nil tag-type start 6205 . 6206) (nil font-lock-face web-mode-block-delimiter-face 6205 . 6206) (nil block-side t 6204 . 6205) (nil block-token delimiter-beg 6204 . 6205) (nil tag-attr t 6204 . 6205) (nil tag-name "v-btn" 6204 . 6205) (nil tag-type start 6204 . 6205) (nil font-lock-face web-mode-block-delimiter-face 6204 . 6205) (nil block-side t 6203 . 6204) (nil block-token delimiter-beg 6203 . 6204) (nil tag-attr t 6203 . 6204) (nil tag-name "v-btn" 6203 . 6204) (nil tag-type start 6203 . 6204) (nil font-lock-face web-mode-block-delimiter-face 6203 . 6204) (nil block-side t 6202 . 6203) (nil block-token delimiter-beg 6202 . 6203) (nil tag-attr t 6202 . 6203) (nil tag-name "v-btn" 6202 . 6203) (nil tag-type start 6202 . 6203) (nil font-lock-face web-mode-block-delimiter-face 6202 . 6203) (nil block-side t 6201 . 6202) (nil block-token delimiter-beg 6201 . 6202) (nil tag-attr t 6201 . 6202) (nil tag-name "v-btn" 6201 . 6202) (nil tag-type start 6201 . 6202) (nil font-lock-face web-mode-block-delimiter-face 6201 . 6202) (nil block-side t 6200 . 6201) (nil block-token delimiter-beg 6200 . 6201) (nil tag-attr-beg 0 6200 . 6201) (nil tag-attr t 6200 . 6201) (nil tag-name "v-btn" 6200 . 6201) (nil tag-type start 6200 . 6201) (nil font-lock-face web-mode-block-delimiter-face 6200 . 6201) (nil block-beg 0 6199 . 6200) (nil block-controls 0 6199 . 6200) (nil block-side t 6199 . 6200) (nil block-token delimiter-beg 6199 . 6200) (nil tag-name "v-btn" 6199 . 6200) (nil tag-type start 6199 . 6200) (nil font-lock-face web-mode-block-delimiter-face 6199 . 6200) (nil tag-name "v-btn" 6198 . 6199) (nil tag-type start 6198 . 6199) (nil tag-attr t 6197 . 6198) (nil tag-attr-end 0 6197 . 6198) (nil tag-name "v-btn" 6197 . 6198) (nil tag-type start 6197 . 6198) (nil font-lock-face web-mode-html-attr-name-face 6197 . 6198) (nil tag-attr t 6192 . 6197) (nil tag-name "v-btn" 6192 . 6197) (nil tag-type start 6192 . 6197) (nil font-lock-face web-mode-html-attr-name-face 6192 . 6197) (nil tag-attr-beg 0 6191 . 6192) (nil tag-attr t 6191 . 6192) (nil tag-name "v-btn" 6191 . 6192) (nil tag-type start 6191 . 6192) (nil font-lock-face web-mode-html-attr-name-face 6191 . 6192) (nil tag-name "v-btn" 6190 . 6191) (nil tag-type start 6190 . 6191) (nil tag-attr t 6189 . 6190) (nil tag-attr-end 0 6189 . 6190) (nil tag-name "v-btn" 6189 . 6190) (nil tag-type start 6189 . 6190) (nil font-lock-face web-mode-html-attr-name-face 6189 . 6190) (nil tag-attr t 6187 . 6189) (nil tag-name "v-btn" 6187 . 6189) (nil tag-type start 6187 . 6189) (nil font-lock-face web-mode-html-attr-name-face 6187 . 6189) (nil tag-attr-beg 0 6186 . 6187) (nil tag-attr t 6186 . 6187) (nil tag-name "v-btn" 6186 . 6187) (nil tag-type start 6186 . 6187) (nil font-lock-face web-mode-html-attr-name-face 6186 . 6187) (nil tag-name "v-btn" 6185 . 6186) (nil tag-type start 6185 . 6186) (nil tag-name "v-btn" 6180 . 6185) (nil tag-type start 6180 . 6185) (nil font-lock-face web-mode-html-tag-custom-face 6180 . 6185) (nil tag-name "v-btn" 6179 . 6180) (nil tag-type start 6179 . 6180) (nil tag-beg 19 6179 . 6180) (nil font-lock-face web-mode-html-tag-bracket-face 6179 . 6180) (6155 . 6332)) ((#("                        <v-btn text x-small @click=\"setDynamic('TOC')\">
                          <v-icon size=\"17px\">mdi-select-search</v-icon>
                        </v-btn>" 24 25 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 25 30 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 30 31 (tag-name "v-btn" tag-type start) 31 32 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 32 34 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-name "v-btn" tag-type start) 36 37 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 37 42 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 42 43 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-name "v-btn" tag-type start) 44 45 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 48 49 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 49 50 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 50 51 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 52 62 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 62 64 (block-side t tag-attr t tag-name "v-btn" tag-type start) 64 65 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "v-btn" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 98 99 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 99 105 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 105 106 (tag-name "v-icon" tag-type start) 106 107 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 107 110 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 110 111 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 111 116 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 116 117 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 117 118 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 135 136 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 136 137 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 137 143 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 143 144 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 169 170 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 170 171 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 171 176 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 176 177 (rear-nonsticky nil tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6155) (undo-tree-id1021 . -177) (undo-tree-id1022 . -72) (nil tag-name "v-btn" 6179 . 6180) (nil tag-name "v-btn" 6180 . 6185) (nil tag-name "v-btn" 6185 . 6186) (nil tag-name "v-btn" 6186 . 6187) (nil tag-name "v-btn" 6187 . 6189) (nil tag-name "v-btn" 6189 . 6190) (nil tag-name "v-btn" 6190 . 6191) (nil tag-name "v-btn" 6191 . 6192) (nil tag-name "v-btn" 6192 . 6197) (nil tag-name "v-btn" 6197 . 6198) (nil tag-name "v-btn" 6198 . 6199) (nil tag-name "v-btn" 6199 . 6200) (nil tag-name "v-btn" 6200 . 6201) (nil tag-name "v-btn" 6201 . 6202) (nil tag-name "v-btn" 6202 . 6203) (nil tag-name "v-btn" 6203 . 6204) (nil tag-name "v-btn" 6204 . 6205) (nil tag-name "v-btn" 6205 . 6206) (nil tag-name "v-btn" 6206 . 6207) (nil tag-name "v-btn" 6207 . 6217) (nil tag-name "v-btn" 6217 . 6219) (nil tag-name "v-btn" 6219 . 6220) (nil tag-name "v-btn" 6220 . 6221) (nil tag-name "v-btn" 6221 . 6222) (nil tag-name "v-btn" 6222 . 6224) (nil tag-name "v-btn" 6224 . 6225) (nil tag-name "v-btn" 6225 . 6226) (nil tag-name "v-icon" 6253 . 6254) (nil tag-name "v-icon" 6254 . 6260) (nil tag-name "v-icon" 6260 . 6261) (nil tag-name "v-icon" 6261 . 6262) (nil tag-name "v-icon" 6262 . 6265) (nil tag-name "v-icon" 6265 . 6266) (nil tag-name "v-icon" 6266 . 6271) (nil tag-name "v-icon" 6271 . 6272) (nil tag-name "v-icon" 6272 . 6273) (nil tag-name "v-icon" 6290 . 6291) (nil tag-name "v-icon" 6291 . 6292) (nil tag-name "v-icon" 6292 . 6298) (nil tag-name "v-icon" 6298 . 6299) (nil tag-name "v-btn" 6324 . 6325) (nil tag-name "v-btn" 6325 . 6326) (nil tag-name "v-btn" 6326 . 6331) (nil tag-name "v-btn" 6331 . 6332) (nil rear-nonsticky t 6331 . 6332)) (25671 46941 456478 116000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5414) (undo-tree-id899 . -1) 5415) ((5414 . 5415) (t 25671 46575 790217 401000)) (25671 46575 755600 719000) 0 nil])
([nil nil ((#("." 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8847) (undo-tree-id1091 . -1) 8848) nil (25671 47031 775584 916000) 0 nil])
([nil nil (("                        " . -6155) 6131) ((6155 . 6179)) (25671 46941 455287 968000) 0 nil])
nil
([nil nil ((8847 . 8851)) nil (25671 47031 775582 633000) 0 nil])
nil
([nil nil ((#("1" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8848) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (#("0" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (#(" " 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8850) (undo-tree-id1090 . -1) 8851) nil (25671 47031 775580 879000) 0 nil])
([nil nil ((8848 . 8849)) nil (25671 47031 775574 223000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8848) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) 8849) nil (25671 47031 775572 894000) 0 nil])
([nil nil ((8848 . 8850)) nil (25671 47031 775568 387000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8848) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (#(" " 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 8850) nil (25671 47031 775565 33000) 0 nil])
([nil nil ((8848 . 8850)) nil (25671 47031 775530 636000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) 8850) nil (25671 47031 775525 518000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8846) (undo-tree-id1142 . -1) 8847 (t 25671 47031 814165 280000)) nil (25671 47038 709570 102000) 0 nil])
([nil nil ((8846 . 8847)) nil (25671 47038 709553 69000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8848) (undo-tree-id1143 . -1) 8849 (t 25671 47038 746091 29000)) nil (25671 47045 416312 427000) 0 nil])
([nil nil ((8848 . 8850)) nil (25671 47045 416298 96000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 8850 (t 25671 47045 458020 125000)) nil (25671 47101 502190 78000) 0 nil])
([nil nil ((8849 . 8850)) nil (25671 47101 502133 952000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8849) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) 8850 (t 25671 47101 537464 31000)) nil (25671 47109 720523 203000) 0 nil])
([nil nil ((8849 . 8850)) nil (25671 47109 720483 852000) 0 nil])
([nil nil ((14169 . 14182) (t 25671 47109 757387 730000)) nil (25671 47341 898639 796000) 0 nil])
([nil nil ((14182 . 14191)) nil (25671 47341 898638 457000) 0 nil])
([nil nil ((14187 . 14201) (14188 . 14200) (#("              " 0 14 (face whitespace-trailing)) . 14187) (14187 . 14201) (14187 . 14188) ("            " . 14187) (14186 . 14199)) nil (25671 47341 898637 38000) 0 nil])
([nil nil ((14201 . 14210)) nil (25671 47341 898634 393000) 0 nil])
([nil nil ((14206 . 14222) (14207 . 14221) (#("                " 0 16 (face whitespace-trailing)) . 14206) (14206 . 14222) (14206 . 14207) ("              " . 14206) (14205 . 14220)) nil (25671 47341 899127 382000) 0 nil])
([nil nil ((14225 . 14233) (14222 . 14229)) nil (25671 47351 907387 490000) 0 nil] [nil nil ((14222 . 14231)) ((#("\\br></td>" 4 5 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 8 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 8 9 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14222) (undo-tree-id1203 . -9)) (25671 47341 898622 288000) 0 nil])
([nil nil ((" " . -14232) (undo-tree-id1204 . -1) 14233) nil (25671 47392 401423 918000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 14265 . 14266) (nil tag-attr t 14265 . 14266) (nil tag-attr-end 5 14265 . 14266) (nil tag-name "td:colspan" 14265 . 14266) (nil tag-type start 14265 . 14266) (nil font-lock-face web-mode-html-attr-value-face 14265 . 14266) (nil tag-attr t 14252 . 14265) (nil tag-name "td:colspan" 14252 . 14265) (nil tag-type start 14252 . 14265) (nil font-lock-face web-mode-html-attr-value-face 14252 . 14265) (nil tag-attr t 14251 . 14252) (nil tag-name "td:colspan" 14251 . 14252) (nil tag-type start 14251 . 14252) (nil font-lock-face web-mode-html-attr-value-face 14251 . 14252) (nil tag-attr t 14250 . 14251) (nil tag-name "td:colspan" 14250 . 14251) (nil tag-type start 14250 . 14251) (nil font-lock-face web-mode-html-attr-equal-face 14250 . 14251) (nil tag-attr t 14246 . 14250) (nil tag-name "td:colspan" 14246 . 14250) (nil tag-type start 14246 . 14250) (nil font-lock-face web-mode-html-attr-name-face 14246 . 14250) (nil tag-attr-beg 0 14245 . 14246) (nil tag-attr t 14245 . 14246) (nil tag-name "td:colspan" 14245 . 14246) (nil tag-type start 14245 . 14246) (nil font-lock-face web-mode-html-attr-name-face 14245 . 14246) (nil tag-name "td:colspan" 14244 . 14245) (nil tag-type start 14244 . 14245) (nil tag-attr t 14243 . 14244) (nil tag-attr-end 5 14243 . 14244) (nil tag-name "td:colspan" 14243 . 14244) (nil tag-type start 14243 . 14244) (nil font-lock-face web-mode-html-attr-value-face 14243 . 14244) (nil tag-attr t 14236 . 14243) (nil tag-name "td:colspan" 14236 . 14243) (nil tag-type start 14236 . 14243) (nil font-lock-face web-mode-html-attr-value-face 14236 . 14243) (nil tag-attr t 14235 . 14236) (nil tag-name "td:colspan" 14235 . 14236) (nil tag-type start 14235 . 14236) (nil font-lock-face web-mode-html-attr-equal-face 14235 . 14236) (nil tag-attr t 14231 . 14235) (nil tag-name "td:colspan" 14231 . 14235) (nil tag-type start 14231 . 14235) (nil font-lock-face web-mode-html-attr-name-face 14231 . 14235) (nil tag-attr-beg 0 14230 . 14231) (nil tag-attr t 14230 . 14231) (nil tag-name "td:colspan" 14230 . 14231) (nil tag-type start 14230 . 14231) (nil font-lock-face web-mode-html-attr-name-face 14230 . 14231) (nil tag-name "td:colspan" 14229 . 14230) (nil tag-type start 14229 . 14230) (nil block-side t 14228 . 14229) (nil block-end t 14228 . 14229) (nil block-token delimiter-end 14228 . 14229) (nil tag-name "td:colspan" 14228 . 14229) (nil tag-type start 14228 . 14229) (nil font-lock-face web-mode-block-delimiter-face 14228 . 14229) (nil block-side t 14227 . 14228) (nil tag-name "td:colspan" 14227 . 14228) (nil tag-type start 14227 . 14228) (nil face web-mode-variable-name-face 14227 . 14228) (nil block-side t 14226 . 14227) (nil tag-name "td:colspan" 14226 . 14227) (nil tag-type start 14226 . 14227) (nil face web-mode-variable-name-face 14226 . 14227) (nil block-side t 14225 . 14226) (nil tag-name "td:colspan" 14225 . 14226) (nil tag-type start 14225 . 14226) (nil face web-mode-variable-name-face 14225 . 14226) (nil block-side t 14224 . 14225) (nil tag-name "td:colspan" 14224 . 14225) (nil tag-type start 14224 . 14225) (nil face web-mode-variable-name-face 14224 . 14225) (nil block-side t 14223 . 14224) (nil tag-name "td:colspan" 14223 . 14224) (nil tag-type start 14223 . 14224) (nil face web-mode-variable-name-face 14223 . 14224) (nil block-side t 14222 . 14223) (nil tag-name "td:colspan" 14222 . 14223) (nil tag-type start 14222 . 14223) (nil face web-mode-variable-name-face 14222 . 14223) (nil block-side t 14221 . 14222) (nil tag-name "td:colspan" 14221 . 14222) (nil tag-type start 14221 . 14222) (nil block-side t 14220 . 14221) (nil tag-name "td:colspan" 14220 . 14221) (nil tag-type start 14220 . 14221) (nil face web-mode-variable-name-face 14220 . 14221) (nil block-side t 14219 . 14220) (nil tag-name "td:colspan" 14219 . 14220) (nil tag-type start 14219 . 14220) (nil face web-mode-variable-name-face 14219 . 14220) (nil block-side t 14218 . 14219) (nil tag-name "td:colspan" 14218 . 14219) (nil tag-type start 14218 . 14219) (nil face web-mode-variable-name-face 14218 . 14219) (nil block-side t 14217 . 14218) (nil tag-name "td:colspan" 14217 . 14218) (nil tag-type start 14217 . 14218) (nil face web-mode-variable-name-face 14217 . 14218) (nil block-side t 14216 . 14217) (nil tag-name "td:colspan" 14216 . 14217) (nil tag-type start 14216 . 14217) (nil face web-mode-variable-name-face 14216 . 14217) (nil block-side t 14215 . 14216) (nil tag-name "td:colspan" 14215 . 14216) (nil tag-type start 14215 . 14216) (nil face web-mode-variable-name-face 14215 . 14216) (nil block-side t 14214 . 14215) (nil tag-name "td:colspan" 14214 . 14215) (nil tag-type start 14214 . 14215) (nil face web-mode-variable-name-face 14214 . 14215) (nil block-side t 14213 . 14214) (nil block-token delimiter-beg 14213 . 14214) (nil tag-name "td:colspan" 14213 . 14214) (nil tag-type start 14213 . 14214) (nil font-lock-face web-mode-block-delimiter-face 14213 . 14214) (nil block-side t 14212 . 14213) (nil block-token delimiter-beg 14212 . 14213) (nil tag-name "td:colspan" 14212 . 14213) (nil tag-type start 14212 . 14213) (nil font-lock-face web-mode-block-delimiter-face 14212 . 14213) (nil block-side t 14211 . 14212) (nil block-token delimiter-beg 14211 . 14212) (nil tag-name "td:colspan" 14211 . 14212) (nil tag-type start 14211 . 14212) (nil font-lock-face web-mode-block-delimiter-face 14211 . 14212) (nil block-side t 14210 . 14211) (nil block-token delimiter-beg 14210 . 14211) (nil tag-name "td:colspan" 14210 . 14211) (nil tag-type start 14210 . 14211) (nil font-lock-face web-mode-block-delimiter-face 14210 . 14211) (nil block-side t 14209 . 14210) (nil block-token delimiter-beg 14209 . 14210) (nil tag-name "td:colspan" 14209 . 14210) (nil tag-type start 14209 . 14210) (nil font-lock-face web-mode-block-delimiter-face 14209 . 14210) (nil block-side t 14208 . 14209) (nil block-token delimiter-beg 14208 . 14209) (nil tag-name "td:colspan" 14208 . 14209) (nil tag-type start 14208 . 14209) (nil font-lock-face web-mode-block-delimiter-face 14208 . 14209) (nil block-side t 14207 . 14208) (nil block-token delimiter-beg 14207 . 14208) (nil tag-name "td:colspan" 14207 . 14208) (nil tag-type start 14207 . 14208) (nil font-lock-face web-mode-block-delimiter-face 14207 . 14208) (nil block-side t 14206 . 14207) (nil block-token delimiter-beg 14206 . 14207) (nil tag-name "td:colspan" 14206 . 14207) (nil tag-type start 14206 . 14207) (nil font-lock-face web-mode-block-delimiter-face 14206 . 14207) (nil block-side t 14205 . 14206) (nil block-token delimiter-beg 14205 . 14206) (nil tag-name "td:colspan" 14205 . 14206) (nil tag-type start 14205 . 14206) (nil font-lock-face web-mode-block-delimiter-face 14205 . 14206) (nil block-beg 0 14204 . 14205) (nil block-controls 0 14204 . 14205) (nil block-side t 14204 . 14205) (nil block-token delimiter-beg 14204 . 14205) (nil tag-name "td:colspan" 14204 . 14205) (nil tag-type start 14204 . 14205) (nil font-lock-face web-mode-block-delimiter-face 14204 . 14205) (14204 . 14266) (t 25671 47351 943631 760000)) nil (25671 47406 42702 687000) 0 nil] [nil nil ((nil rear-nonsticky nil 14212 . 14213) (nil tag-name "trclass" 14212 . 14213) (nil tag-type start 14212 . 14213) (nil rear-nonsticky t 14211 . 14212) (nil tag-name "trclass" 14211 . 14212) (nil tag-type start 14211 . 14212) (nil tag-name "trclass" 14192 . 14211) (nil tag-type start 14192 . 14211) (nil tag-name "trclass" 14191 . 14192) (nil tag-type start 14191 . 14192) (nil tag-name "trclass" 14190 . 14191) (nil tag-type start 14190 . 14191) (nil tag-name "trclass" 14186 . 14190) (nil tag-type start 14186 . 14190) (nil font-lock-face web-mode-html-tag-face 14186 . 14190) (nil tag-name "trclass" 14185 . 14186) (nil tag-type start 14185 . 14186) (nil font-lock-face web-mode-html-tag-face 14185 . 14186) (14185 . 14213) (t 25671 47351 943631 760000)) ((#("class=\"sensor_expanded_info\"" 0 1 (tag-name "trclass" tag-type start font-lock-face web-mode-html-tag-face) 1 5 (tag-name "trclass" tag-type start font-lock-face web-mode-html-tag-face) 5 6 (tag-name "trclass" tag-type start) 6 7 (tag-name "trclass" tag-type start) 7 26 (tag-name "trclass" tag-type start) 26 27 (rear-nonsticky t tag-name "trclass" tag-type start) 27 28 (rear-nonsticky nil tag-name "trclass" tag-type start)) . 14185) (undo-tree-id1205 . -28) (nil tag-name "trclass" 14185 . 14186) (nil tag-name "trclass" 14186 . 14190) (nil tag-name "trclass" 14190 . 14191) (nil tag-name "trclass" 14191 . 14192) (nil tag-name "trclass" 14192 . 14211) (nil tag-name "trclass" 14211 . 14212) (nil rear-nonsticky nil 14211 . 14212) (nil tag-name "trclass" 14212 . 14213) (nil rear-nonsticky t 14212 . 14213)) (25671 47392 398422 458000) 0 nil])
([nil nil ((14204 . 14205)) nil (25671 47406 42650 912000) 0 nil])
nil
([nil nil ((14185 . 14186) (t 25671 47406 83346 162000)) nil (25671 47418 400363 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14213 . 14214) (nil tag-attr t 14213 . 14214) (nil tag-attr-end 5 14213 . 14214) (nil tag-name "tr" 14213 . 14214) (nil tag-type start 14213 . 14214) (nil font-lock-face web-mode-html-attr-value-face 14213 . 14214) (nil rear-nonsticky t 14212 . 14213) (nil tag-attr t 14212 . 14213) (nil tag-name "tr" 14212 . 14213) (nil tag-type start 14212 . 14213) (nil font-lock-face web-mode-html-attr-value-face 14212 . 14213) (nil tag-attr t 14193 . 14212) (nil tag-name "tr" 14193 . 14212) (nil tag-type start 14193 . 14212) (nil font-lock-face web-mode-html-attr-value-face 14193 . 14212) (nil tag-attr t 14192 . 14193) (nil tag-name "tr" 14192 . 14193) (nil tag-type start 14192 . 14193) (nil font-lock-face web-mode-html-attr-value-face 14192 . 14193) (nil tag-attr t 14191 . 14192) (nil tag-name "tr" 14191 . 14192) (nil tag-type start 14191 . 14192) (nil font-lock-face web-mode-html-attr-equal-face 14191 . 14192) (nil tag-attr t 14187 . 14191) (nil tag-name "tr" 14187 . 14191) (nil tag-type start 14187 . 14191) (nil font-lock-face web-mode-html-attr-name-face 14187 . 14191) (nil tag-attr-beg 0 14186 . 14187) (nil tag-attr t 14186 . 14187) (nil tag-name "tr" 14186 . 14187) (nil tag-type start 14186 . 14187) (nil font-lock-face web-mode-html-attr-name-face 14186 . 14187) (14186 . 14214)) nil (25671 47418 400355 243000) 0 nil])
([nil nil ((14297 . 14314) (t 25671 47418 435285 449000)) nil (25671 47457 228034 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14359 . 14360) (nil tag-name "v-icon" 14359 . 14360) (nil tag-type end 14359 . 14360) (nil tag-end t 14359 . 14360) (nil font-lock-face web-mode-html-tag-bracket-face 14359 . 14360) (nil tag-name "v-icon" 14353 . 14359) (nil tag-type end 14353 . 14359) (nil font-lock-face web-mode-html-tag-custom-face 14353 . 14359) (nil tag-name "v-icon" 14352 . 14353) (nil tag-type end 14352 . 14353) (nil font-lock-face web-mode-html-tag-bracket-face 14352 . 14353) (nil tag-name "v-icon" 14351 . 14352) (nil tag-type end 14351 . 14352) (nil tag-beg 22 14351 . 14352) (nil font-lock-face web-mode-html-tag-bracket-face 14351 . 14352) (nil tag-name "v-icon" 14333 . 14334) (nil tag-type start 14333 . 14334) (nil tag-end t 14333 . 14334) (nil font-lock-face web-mode-html-tag-bracket-face 14333 . 14334) (nil tag-attr t 14332 . 14333) (nil tag-attr-end 4 14332 . 14333) (nil tag-name "v-icon" 14332 . 14333) (nil tag-type start 14332 . 14333) (nil font-lock-face web-mode-html-attr-value-face 14332 . 14333) (nil tag-attr t 14327 . 14332) (nil tag-name "v-icon" 14327 . 14332) (nil tag-type start 14327 . 14332) (nil font-lock-face web-mode-html-attr-value-face 14327 . 14332) (nil tag-attr t 14326 . 14327) (nil tag-name "v-icon" 14326 . 14327) (nil tag-type start 14326 . 14327) (nil font-lock-face web-mode-html-attr-equal-face 14326 . 14327) (nil tag-attr t 14323 . 14326) (nil tag-name "v-icon" 14323 . 14326) (nil tag-type start 14323 . 14326) (nil font-lock-face web-mode-html-attr-name-face 14323 . 14326) (nil tag-attr-beg 0 14322 . 14323) (nil tag-attr t 14322 . 14323) (nil tag-name "v-icon" 14322 . 14323) (nil tag-type start 14322 . 14323) (nil font-lock-face web-mode-html-attr-name-face 14322 . 14323) (nil tag-name "v-icon" 14321 . 14322) (nil tag-type start 14321 . 14322) (nil tag-name "v-icon" 14315 . 14321) (nil tag-type start 14315 . 14321) (nil font-lock-face web-mode-html-tag-custom-face 14315 . 14321) (nil tag-name "v-icon" 14314 . 14315) (nil tag-type start 14314 . 14315) (nil tag-beg 19 14314 . 14315) (nil font-lock-face web-mode-html-tag-bracket-face 14314 . 14315) (14314 . 14360)) nil (25671 47513 599750 71000) 0 nil])
([nil nil ((14329 . 14331) (14322 . 14331)) nil (25671 47529 801725 727000) 0 nil] [nil nil ((14297 . 14314) (t 25671 47457 267104 614000)) (("
                " . 14297) (undo-tree-id1433 . -17) (undo-tree-id1434 . -17) (undo-tree-id1435 . -17) (undo-tree-id1436 . -1) (undo-tree-id1437 . -17) (undo-tree-id1438 . -17) (undo-tree-id1439 . -17) (undo-tree-id1440 . -17) (undo-tree-id1441 . -17) (undo-tree-id1442 . -17) (undo-tree-id1443 . -17) (undo-tree-id1444 . -17) (undo-tree-id1445 . -17) (undo-tree-id1446 . -17) (undo-tree-id1447 . -17) (undo-tree-id1448 . -17) (undo-tree-id1449 . -17) (undo-tree-id1450 . -17) (undo-tree-id1451 . -17) (undo-tree-id1452 . -17) (undo-tree-id1453 . -17) (undo-tree-id1454 . -17) (undo-tree-id1455 . -17) (undo-tree-id1456 . -17) (undo-tree-id1457 . -17) (undo-tree-id1458 . -1)) (25671 47513 147747 332000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14329) (undo-tree-id1459 . -1) (#("r" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14330) (undo-tree-id1460 . -1) 14331) nil (25671 47529 801722 674000) 0 nil])
([nil nil ((14314 . 14318)) ((#("<v-c" 0 1 (tag-name "v-c" tag-type start tag-beg 2 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "v-c" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 3 4 (tag-name "v-c" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 14314) (undo-tree-id1403 . -4) (undo-tree-id1404 . -4) (undo-tree-id1405 . -4) (undo-tree-id1406 . -3) (undo-tree-id1407 . -3) (undo-tree-id1408 . -3) (undo-tree-id1409 . -3) (undo-tree-id1410 . -3) (undo-tree-id1411 . -3) (undo-tree-id1412 . -3) (undo-tree-id1413 . -3) (undo-tree-id1414 . -3) (undo-tree-id1415 . -3) (undo-tree-id1416 . -3) (undo-tree-id1417 . -3) (undo-tree-id1418 . -3) (undo-tree-id1419 . -3) (undo-tree-id1420 . -3) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4)) (25671 47512 857487 715000) 0 nil])
([nil nil ((14329 . 14333)) nil (25671 47529 801704 957000) 0 nil])
([nil nil ((#("c" 0 1 (tag-name "v-c" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -14317) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) 14318) ((14317 . 14318)) (25671 47512 544865 454000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14322) (undo-tree-id1461 . -1) (#("t" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14323) (undo-tree-id1462 . -1) (#("y" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14324) (undo-tree-id1463 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14325) (undo-tree-id1464 . -1) (#("e" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14326) (undo-tree-id1465 . -1) 14327 (t 25671 47529 842804 329000)) nil (25671 47541 814350 979000) 0 nil])
([nil nil ((14317 . 14320)) ((#("rwo" 0 1 (tag-name "v-rwo" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 1 2 (tag-name "v-rwo" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 2 3 (tag-name "v-rwo" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 14317) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -3) (undo-tree-id1396 . -3) (undo-tree-id1397 . -3) (undo-tree-id1398 . -3) (undo-tree-id1399 . -3) (undo-tree-id1400 . -3) (undo-tree-id1401 . -3) (undo-tree-id1402 . -3)) (25671 47512 200169 623000) 0 nil])
([nil nil ((14322 . 14327)) nil (25671 47541 814329 800000) 0 nil])
([nil nil ((#("w" 0 1 (tag-name "v-rw" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -14318) (undo-tree-id1242 . -1) (#("o" 0 1 (tag-name "v-rwo" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -14319) (undo-tree-id1243 . -1) 14320) ((14318 . 14320)) (25671 47511 799567 488000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14332) (undo-tree-id1466 . -1) (t 25671 47541 850759 21000)) nil (25671 47547 201993 809000) 0 nil])
([nil nil ((14318 . 14329)) ((#("ow></v-row>" 0 2 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 2 3 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 5 10 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 10 11 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14318) (undo-tree-id1379 . -3) (undo-tree-id1380 . -3) (undo-tree-id1381 . -3) (undo-tree-id1382 . -3) (undo-tree-id1383 . -3) (undo-tree-id1384 . -3) (undo-tree-id1385 . -3) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -3) (undo-tree-id1389 . -3) (undo-tree-id1390 . -3) (undo-tree-id1391 . -3) (undo-tree-id1392 . -3)) (25671 47511 473646 850000) 0 nil])
([nil nil ((14332 . 14333)) nil (25671 47547 201979 355000) 0 nil])
([nil nil ((14322 . 14340) (14323 . 14339) (#("                  " 0 18 (face whitespace-trailing)) . 14322) (14322 . 14340) (14322 . 14323) ("                " . 14322) (14321 . 14338)) (("
                " . 14321) (14322 . 14338) ("
" . 14322) (#("                  " 0 18 (face whitespace-trailing)) . 14322) (14322 . 14340) ("                " . 14323) (#("                  " 0 18 (face whitespace-trailing)) . 14322)) (25671 47511 189968 477000) 0 nil])
([nil nil ((14333 . 14338) (t 25671 47547 238739 69000)) nil (25671 47567 197864 66000) 0 nil])
([nil nil ((#("                <v-icon size=\"17px\">mdi-select-search</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 61 62 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14429) (undo-tree-id1239 . -16) (undo-tree-id1240 . -18) (undo-tree-id1241 . -63) (14404 . 14429) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14341) (14366 . 14429) 14384) ((#("                <v-icon size=\"17px\">mdi-select-search</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 61 62 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14366) (undo-tree-id1376 . -18) (undo-tree-id1377 . -63) (undo-tree-id1378 . -18) (14341 . 14366) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14404) (14429 . 14492)) (25671 47510 815174 621000) 0 nil])
([nil nil (("mdi-select-search" . 14352) (undo-tree-id1467 . -17) (undo-tree-id1468 . -17) (t 25671 47567 238667 19000)) nil (25671 47624 992410 306000) 0 nil])
([nil nil ((#("                <v-icon size=\"17px\">mdi-select-search</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 61 62 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14404) (undo-tree-id1237 . -18) (undo-tree-id1238 . -63) (14385 . 14404) (#("                  
" 0 18 (face whitespace-trailing)) . 14322) (14341 . 14404) 14359) ((#("                <v-icon size=\"17px\">mdi-select-search</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 34 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 55 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 61 62 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14341) (undo-tree-id1362 . -18) (undo-tree-id1363 . -63) (undo-tree-id1364 . -18) (undo-tree-id1365 . -18) (undo-tree-id1366 . -18) (undo-tree-id1367 . -18) (undo-tree-id1368 . -18) (undo-tree-id1369 . -18) (undo-tree-id1370 . -18) (undo-tree-id1371 . -18) (undo-tree-id1372 . -18) (undo-tree-id1373 . -18) (undo-tree-id1374 . -18) (undo-tree-id1375 . -18) (14322 . 14341) (#("                  
" 0 18 (face whitespace-trailing)) . 14385) (14404 . 14467)) (25671 47510 472331 627000) 0 nil])
([nil nil ((14352 . 14362)) nil (25671 47624 992389 407000) 0 nil])
([nil nil ((14338 . 14340) 14340) (("  " . 14338)) (25671 47510 150097 633000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14332) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) 14333 (t 25671 47625 42475 636000)) nil (25671 47647 539253 140000) 0 nil])
([nil nil ((#("                <b>Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14462) (undo-tree-id1235 . -20) (undo-tree-id1236 . -31) (14437 . 14462) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14406) (14431 . 14462) 14451) ((#("                <b>Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14431) (undo-tree-id1351 . -31) (undo-tree-id1352 . -20) (undo-tree-id1353 . -31) (undo-tree-id1354 . -20) (undo-tree-id1355 . -20) (undo-tree-id1356 . -20) (undo-tree-id1357 . -20) (undo-tree-id1358 . -20) (undo-tree-id1359 . -20) (undo-tree-id1360 . -20) (undo-tree-id1361 . -20) (14406 . 14431) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14437) (14462 . 14493)) (25671 47509 818188 922000) 0 nil])
([nil nil ((14332 . 14333)) nil (25671 47647 539232 533000) 0 nil])
([nil nil ((#("                <b>Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14437) (undo-tree-id1232 . -31) (undo-tree-id1233 . -20) (undo-tree-id1234 . -31) (14418 . 14437) (#("                  
" 0 18 (face whitespace-trailing)) . 14387) (14406 . 14437) 14426) ((#("                <b>Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 26 27 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 27 28 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14406) (undo-tree-id1341 . -20) (undo-tree-id1342 . -31) (undo-tree-id1343 . -20) (undo-tree-id1344 . -20) (undo-tree-id1345 . -20) (undo-tree-id1346 . -20) (undo-tree-id1347 . -20) (undo-tree-id1348 . -20) (undo-tree-id1349 . -20) (undo-tree-id1350 . -20) (14387 . 14406) (#("                  
" 0 18 (face whitespace-trailing)) . 14418) (14437 . 14468)) (25671 47509 548386 208000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14332) (undo-tree-id1474 . -1) 14333 (t 25671 47647 578407 376000)) nil (25671 47653 31594 678000) 0 nil])
([nil nil ((14403 . 14405) 14407) (("  " . 14403)) (25671 47509 178377 62000) 0 nil])
([nil nil ((14332 . 14333)) nil (25671 47653 31578 439000) 0 nil])
([nil nil ((14321 . 14340)) (("
                  " . 14321) (undo-tree-id1321 . -19) (undo-tree-id1322 . -19) (undo-tree-id1323 . -1) (undo-tree-id1324 . -19) (undo-tree-id1325 . -19) (undo-tree-id1326 . -19) (undo-tree-id1327 . -19) (undo-tree-id1328 . -1) (undo-tree-id1329 . -19) (undo-tree-id1330 . -19) (undo-tree-id1331 . -19) (undo-tree-id1332 . -19) (undo-tree-id1333 . -19) (undo-tree-id1334 . -19) (undo-tree-id1335 . -19) (undo-tree-id1336 . -19) (undo-tree-id1337 . -19) (undo-tree-id1338 . -19) (undo-tree-id1339 . -19) (undo-tree-id1340 . -19)) (25671 47508 862023 83000) 0 nil])
([nil nil ((14402 . 14419) (t 25671 47653 74391 240000)) nil (25671 47707 476128 194000) 0 nil])
([nil nil ((14340 . 14355)) ((#("<v-col></v-col>" 0 1 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 1 6 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 6 7 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 8 9 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 9 14 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 14 15 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14340) (undo-tree-id1315 . -5) (undo-tree-id1316 . -7) (undo-tree-id1317 . -7) (undo-tree-id1318 . -7) (undo-tree-id1319 . -7) (undo-tree-id1320 . -7)) (25671 47508 591529 409000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14432 . 14433) (nil block-side t 14432 . 14433) (nil block-end t 14432 . 14433) (nil block-token delimiter-end 14432 . 14433) (nil font-lock-face web-mode-block-delimiter-face 14432 . 14433) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14432 . 14433) (nil block-side t 14431 . 14432) (nil block-token delimiter-end 14431 . 14432) (nil font-lock-face web-mode-block-delimiter-face 14431 . 14432) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14431 . 14432) (nil block-side t 14430 . 14431) (nil block-side t 14429 . 14430) (nil face web-mode-variable-name-face 14429 . 14430) (nil block-side t 14428 . 14429) (nil face web-mode-variable-name-face 14428 . 14429) (nil block-side t 14427 . 14428) (nil face web-mode-variable-name-face 14427 . 14428) (nil block-side t 14426 . 14427) (nil block-side t 14425 . 14426) (nil face web-mode-variable-name-face 14425 . 14426) (nil block-side t 14424 . 14425) (nil face web-mode-variable-name-face 14424 . 14425) (nil block-side t 14423 . 14424) (nil face web-mode-variable-name-face 14423 . 14424) (nil block-side t 14422 . 14423) (nil face web-mode-variable-name-face 14422 . 14423) (nil block-side t 14421 . 14422) (nil block-side t 14420 . 14421) (nil block-token delimiter-beg 14420 . 14421) (nil font-lock-face web-mode-block-delimiter-face 14420 . 14421) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14420 . 14421) (nil block-beg 0 14419 . 14420) (nil block-controls 0 14419 . 14420) (nil block-side t 14419 . 14420) (nil block-token delimiter-beg 14419 . 14420) (nil font-lock-face web-mode-block-delimiter-face 14419 . 14420) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14419 . 14420) (14419 . 14433)) nil (25671 47707 476124 920000) 0 nil])
([nil nil ((14348 . 14368) (14349 . 14367) (#("                    " 0 20 (face whitespace-trailing)) . 14348) (14348 . 14368) (14348 . 14349) ("                  " . 14348) (14347 . 14366)) (("
                  " . 14347) (undo-tree-id1313 . -1) (14348 . 14366) ("
" . 14348) (undo-tree-id1314 . -1) (#("                    " 0 20 (face whitespace-trailing)) . 14348) (14348 . 14368) ("                  " . 14349) (#("                    " 0 20 (face whitespace-trailing)) . 14348)) (25671 47508 336478 219000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -14427) (undo-tree-id1476 . -1) (#("a" 0 1 (block-side t face web-mode-variable-name-face)) . -14428) (undo-tree-id1477 . -1) (#("p" 0 1 (block-side t face web-mode-variable-name-face)) . -14429) (undo-tree-id1478 . -1) 14430) nil (25671 47707 476114 71000) 0 nil])
([nil nil ((#("                  <v-icon size=\"17px\">mdi-select-search</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14461) (14434 . 14461) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14369) (undo-tree-id1231 . -20) (14396 . 14461) 14389) ((#("                  <v-icon size=\"17px\">mdi-select-search</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 36 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14396) (undo-tree-id1268 . -65) (undo-tree-id1269 . -65) (undo-tree-id1270 . -65) (undo-tree-id1271 . -65) (undo-tree-id1272 . -65) (undo-tree-id1273 . -65) (undo-tree-id1274 . -65) (undo-tree-id1275 . -65) (undo-tree-id1276 . -65) (undo-tree-id1277 . -65) (undo-tree-id1278 . -65) (undo-tree-id1279 . -65) (undo-tree-id1280 . -65) (undo-tree-id1281 . -65) (undo-tree-id1282 . -65) (undo-tree-id1283 . -65) (undo-tree-id1284 . -65) (undo-tree-id1285 . -65) (undo-tree-id1286 . -65) (undo-tree-id1287 . -65) (undo-tree-id1288 . -65) (undo-tree-id1289 . -65) (undo-tree-id1290 . -65) (14369 . 14396) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14434) (undo-tree-id1291 . -20) (undo-tree-id1292 . -27) (undo-tree-id1293 . -27) (undo-tree-id1294 . -27) (undo-tree-id1295 . -27) (undo-tree-id1296 . -27) (undo-tree-id1297 . -27) (undo-tree-id1298 . -27) (undo-tree-id1299 . -27) (undo-tree-id1300 . -27) (undo-tree-id1301 . -20) (undo-tree-id1302 . -20) (undo-tree-id1303 . -20) (undo-tree-id1304 . -20) (undo-tree-id1305 . -20) (undo-tree-id1306 . -20) (undo-tree-id1307 . -20) (undo-tree-id1308 . -20) (undo-tree-id1309 . -20) (undo-tree-id1310 . -20) (undo-tree-id1311 . -20) (undo-tree-id1312 . -20) (14461 . 14526)) (25671 47508 60539 631000) 0 nil])
([nil nil ((14427 . 14435)) nil (25671 47707 476107 587000) 0 nil])
([nil nil ((#("                  <b>Filters</b>
" 18 19 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 31 32 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14494) (14467 . 14494) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14434) (undo-tree-id1230 . -20) (14461 . 14494) 14454) ((#("                  <b>Filters</b>
" 18 19 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 31 32 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14461) (undo-tree-id1247 . -33) (undo-tree-id1248 . -33) (undo-tree-id1249 . -33) (undo-tree-id1250 . -33) (undo-tree-id1251 . -33) (undo-tree-id1252 . -33) (undo-tree-id1253 . -33) (undo-tree-id1254 . -33) (undo-tree-id1255 . -33) (undo-tree-id1256 . -33) (undo-tree-id1257 . -33) (14434 . 14461) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14467) (undo-tree-id1258 . -26) (undo-tree-id1259 . -27) (undo-tree-id1260 . -26) (undo-tree-id1261 . -26) (undo-tree-id1262 . -26) (undo-tree-id1263 . -26) (undo-tree-id1264 . -26) (undo-tree-id1265 . -26) (undo-tree-id1266 . -26) (undo-tree-id1267 . -26) (14494 . 14527)) (25671 47507 757470 544000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -14434) (undo-tree-id1475 . -1) 14435) nil (25671 47707 476102 623000) 0 nil])
([nil nil (("
" . 14493) (undo-tree-id1229 . -1)) ((14493 . 14494)) (25671 47507 475940 640000) 0 nil])
([nil nil ((24896 . 24897) (t 25671 47707 518241 675000)) nil (25671 48495 290392 48000) 0 nil])
([nil nil (("
" . 14347) (undo-tree-id1228 . -1)) ((14347 . 14348)) (25671 47507 233768 997000) 0 nil])
([nil nil ((24897 . 24916)) nil (25671 48495 290390 922000) 0 nil])
([nil nil ((14386 . 14388) 14393) (("  " . 14386)) (25671 47506 975442 54000) 0 nil])
([nil nil ((24916 . 24918)) nil (25671 48495 290390 29000) 0 nil])
([nil nil ((14453 . 14455) 14462) (("  " . 14453)) (25671 47506 669523 304000) 0 nil])
([nil nil ((24917 . 24922)) nil (25671 48495 290389 78000) 0 nil])
([nil nil ((#("                  " 0 18 (face whitespace-trailing)) . -14476) (undo-tree-id1206 . -3) (undo-tree-id1208 . -3) (undo-tree-id1210 . -3) (undo-tree-id1212 . -3) (undo-tree-id1214 . -3) (undo-tree-id1216 . -3) (undo-tree-id1218 . -3) (undo-tree-id1220 . -3) (undo-tree-id1222 . -3) (undo-tree-id1224 . -3) (undo-tree-id1226 . -3) (#("                    " 0 20 (face whitespace-trailing)) . -14347) 14499) ((14347 . 14367) (14476 . 14494) (t 25671 47497 638931 820000)) (25671 47497 599440 433000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24917) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24918) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (#("l" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24919) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24920) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24921) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) 24922) nil (25671 48495 290386 700000) 0 nil])
nil
([nil nil ((24917 . 24925)) nil (25671 48495 290373 876000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -24924) (undo-tree-id1483 . -1) 24925) nil (25671 48495 290372 708000) 0 nil])
([nil nil ((24925 . 24927)) nil (25671 48495 290370 546000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24943 . 24944) (nil part-side javascript 24943 . 24944) (nil face (rainbow-delimiters-depth-2-face) 24943 . 24944) (nil part-side javascript 24942 . 24943) (nil part-token string 24942 . 24943) (nil syntax-table (15) 24942 . 24943) (nil font-lock-face web-mode-javascript-string-face 24942 . 24943) (nil part-side javascript 24930 . 24942) (nil part-token string 24930 . 24942) (nil font-lock-face web-mode-javascript-string-face 24930 . 24942) (nil part-side javascript 24929 . 24930) (nil part-token string 24929 . 24930) (nil syntax-table (15) 24929 . 24930) (nil font-lock-face web-mode-javascript-string-face 24929 . 24930) (nil part-side javascript 24928 . 24929) (nil face (rainbow-delimiters-depth-2-face) 24928 . 24929) (nil part-side javascript 24927 . 24928) (24927 . 24944)) nil (25671 48495 290368 760000) 0 nil])
([nil nil ((#("Service Plan" 0 12 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 24930) (undo-tree-id1481 . -12) (undo-tree-id1482 . -12)) nil (25671 48495 290364 103000) 0 nil])
([nil nil ((24930 . 24937)) nil (25671 48495 290360 705000) 0 nil])
([nil nil ((14391 . 14398)) nil (25671 48495 290359 413000) 0 nil])
([nil nil (("s" . -12695) (undo-tree-id1480 . -1) 12696) nil (25671 48495 290357 965000) 0 nil])
([nil nil ((12695 . 12696)) nil (25671 48503 380123 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24009 . 24010) (nil part-side javascript 24009 . 24010) (nil face (rainbow-delimiters-depth-2-face) 24009 . 24010) (nil part-side javascript 24004 . 24009) (nil face web-mode-function-call-face 24004 . 24009) (nil part-side javascript 23999 . 24004) (23999 . 24010) (t 25671 48504 241357 694000)) nil (25671 48511 503595 788000) 0 nil] [nil nil ((nil rear-nonsticky nil 23589 . 23590) (nil part-side javascript 23589 . 23590) (nil face (rainbow-delimiters-depth-7-face) 23589 . 23590) (nil part-side javascript 23584 . 23589) (nil face web-mode-function-call-face 23584 . 23589) (nil part-side javascript 23579 . 23584) (23579 . 23590)) ((#("JSON.parse(" 0 5 (part-side javascript) 5 10 (part-side javascript face web-mode-function-call-face) 10 11 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-7-face))) . 23579) (nil face (rainbow-delimiters-depth-7-face) 23589 . 23590) (nil rear-nonsticky t 23589 . 23590)) (25671 48502 888358 785000) 0 nil])
([nil nil ((24036 . 24037)) nil (25671 48511 503587 240000) 0 nil])
([nil nil ((23612 . 23614)) ((#(") " 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1 2 (part-side javascript)) . 23612) (undo-tree-id1494 . -2) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2)) (25671 48502 472746 203000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -24036) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) 24037 (t 25671 48511 541356 84000)) nil (25671 48645 101957 798000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -23613) (undo-tree-id1479 . -1) 23614) ((23613 . 23614) (t 25671 48495 329359 748000)) (25671 48495 290345 781000) 0 nil])
([nil nil ((#("O" 0 1 (part-side javascript)) . -24001) (undo-tree-id1543 . -1) (#("N" 0 1 (part-side javascript)) . -24002) (undo-tree-id1544 . -1) (#("." 0 1 (part-side javascript)) . -24003) (undo-tree-id1545 . -1) (#("p" 0 1 (part-side javascript)) . -24004) (undo-tree-id1546 . -1) (#("a" 0 1 (part-side javascript)) . -24005) (undo-tree-id1547 . -1) (#("r" 0 1 (part-side javascript)) . -24006) (undo-tree-id1548 . -1) (#("s" 0 1 (part-side javascript)) . -24007) (undo-tree-id1549 . -1) (#("e" 0 1 (part-side javascript)) . -24008) (undo-tree-id1550 . -1) (#("(" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-2-face))) . -24009) (undo-tree-id1551 . -1) 24010) nil (25671 48645 101949 327000) 0 nil])
nil
([nil nil ((#("J" 0 1 (part-side javascript)) . -23999) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#("S" 0 1 (part-side javascript)) . -24000) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 24001) nil (25671 48645 101932 830000) 0 nil])
([nil nil ((24025 . 24028) (t 25671 48645 141337 123000)) nil (25671 48670 224040 953000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24053 . 24054) (nil part-side javascript 24053 . 24054) (nil face (rainbow-delimiters-depth-2-face) 24053 . 24054) (nil part-side javascript 24052 . 24053) (nil part-token string 24052 . 24053) (nil syntax-table (15) 24052 . 24053) (nil font-lock-face web-mode-javascript-string-face 24052 . 24053) (nil part-side javascript 24031 . 24052) (nil part-token string 24031 . 24052) (nil font-lock-face web-mode-javascript-string-face 24031 . 24052) (nil part-side javascript 24030 . 24031) (nil part-token string 24030 . 24031) (nil syntax-table (15) 24030 . 24031) (nil font-lock-face web-mode-javascript-string-face 24030 . 24031) (nil part-side javascript 24029 . 24030) (nil face (rainbow-delimiters-depth-2-face) 24029 . 24030) (nil part-side javascript 24028 . 24029) (24028 . 24054)) nil (25671 48670 224038 786000) 0 nil])
([nil nil ((24054 . 24062)) nil (25671 48670 224033 527000) 0 nil])
([nil nil ((24057 . 24058)) nil (25671 48670 224026 857000) 0 nil])
([nil nil ((24764 . 24765) (t 25671 48670 265335 572000)) nil (25671 48702 694273 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24801 . 24802) (nil part-side javascript 24801 . 24802) (nil part-token string 24801 . 24802) (nil syntax-table (15) 24801 . 24802) (nil font-lock-face web-mode-javascript-string-face 24801 . 24802) (nil part-side javascript 24797 . 24801) (nil part-token string 24797 . 24801) (nil font-lock-face web-mode-javascript-string-face 24797 . 24801) (nil part-side javascript 24796 . 24797) (nil part-token string 24796 . 24797) (nil syntax-table (15) 24796 . 24797) (nil font-lock-face web-mode-javascript-string-face 24796 . 24797) (nil part-side javascript 24793 . 24796) (nil rear-nonsticky t 24792 . 24793) (nil part-side javascript 24792 . 24793) (nil face (rainbow-delimiters-depth-2-face) 24792 . 24793) (nil part-side javascript 24791 . 24792) (nil part-token string 24791 . 24792) (nil syntax-table (15) 24791 . 24792) (nil font-lock-face web-mode-javascript-string-face 24791 . 24792) (nil part-side javascript 24770 . 24791) (nil part-token string 24770 . 24791) (nil font-lock-face web-mode-javascript-string-face 24770 . 24791) (nil part-side javascript 24769 . 24770) (nil part-token string 24769 . 24770) (nil syntax-table (15) 24769 . 24770) (nil font-lock-face web-mode-javascript-string-face 24769 . 24770) (nil part-side javascript 24768 . 24769) (nil face (rainbow-delimiters-depth-2-face) 24768 . 24769) (nil part-side javascript 24767 . 24768) (nil part-side javascript 24765 . 24767) (24765 . 24802)) nil (25671 48702 694270 801000) 0 nil])
([nil nil ((#("Last Package Received" 0 21 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 24770) (undo-tree-id1555 . -21) (undo-tree-id1556 . -21) (undo-tree-id1557 . -21)) nil (25671 48702 694262 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24779 . 24780) (nil part-side javascript 24770 . 24780) (nil part-token string 24770 . 24780) (nil font-lock-face web-mode-javascript-string-face 24770 . 24780) (24770 . 24780)) nil (25671 48702 694243 810000) 0 nil])
([nil nil ((25011 . 25012) (t 25671 48702 737334 373000)) nil (25671 50297 369005 946000) 0 nil])
([nil nil ((25012 . 25031)) nil (25671 50297 369004 840000) 0 nil])
([nil nil ((25031 . 25033)) nil (25671 50297 369003 950000) 0 nil])
([nil nil ((25032 . 25040)) nil (25671 50297 369003 78000) 0 nil])
([nil nil ((25044 . 25046) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25044) (25041 . 25045)) nil (25671 50297 369001 778000) 0 nil])
([nil nil ((#("2" 0 1 (part-side javascript)) . -25043) (undo-tree-id1559 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25044) (undo-tree-id1560 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . 25045)) nil (25671 50297 368999 805000) 0 nil])
([nil nil ((25045 . 25046) (25044 . 25046) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25044) (25043 . 25045)) nil (25671 50297 368995 121000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -25045) (undo-tree-id1558 . -1) 25046) nil (25671 50297 378074 581000) 0 nil])
([nil nil ((25045 . 25047)) nil (25671 50350 355050 124000) 0 nil] [nil nil ((nil rear-nonsticky nil 25060 . 25061) (nil fontified t 25045 . 25061) (nil part-side javascript 25045 . 25061) (25045 . 25061)) ((#("trigger_profiles" 0 15 (fontified t part-side javascript) 15 16 (rear-nonsticky nil fontified t part-side javascript)) . 25045) (undo-tree-id1561 . -16) (nil fontified nil 25060 . 25061) (nil fontified nil 25045 . 25060) (nil rear-nonsticky t 25060 . 25061)) (25671 50297 368976 149000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25061 . 25062) (nil fontified t 25046 . 25062) (nil part-side javascript 25046 . 25062) (nil part-token string 25046 . 25062) (nil font-lock-face web-mode-javascript-string-face 25046 . 25062) (25046 . 25062)) nil (25671 50350 355048 863000) 0 nil])
nil
([nil nil ((14482 . 14495)) nil (25671 50350 355046 861000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14794 . 14795) (nil tag-name "tr" 14794 . 14795) (nil tag-type end 14794 . 14795) (nil tag-end t 14794 . 14795) (nil font-lock-face web-mode-html-tag-bracket-face 14794 . 14795) (nil tag-name "tr" 14792 . 14794) (nil tag-type end 14792 . 14794) (nil font-lock-face web-mode-html-tag-face 14792 . 14794) (nil tag-name "tr" 14791 . 14792) (nil tag-type end 14791 . 14792) (nil font-lock-face web-mode-html-tag-bracket-face 14791 . 14792) (nil tag-name "tr" 14790 . 14791) (nil tag-type end 14790 . 14791) (nil tag-beg 20 14790 . 14791) (nil font-lock-face web-mode-html-tag-bracket-face 14790 . 14791) (nil tag-name "td" 14776 . 14777) (nil tag-type end 14776 . 14777) (nil tag-end t 14776 . 14777) (nil font-lock-face web-mode-html-tag-bracket-face 14776 . 14777) (nil tag-name "td" 14774 . 14776) (nil tag-type end 14774 . 14776) (nil font-lock-face web-mode-html-tag-face 14774 . 14776) (nil tag-name "td" 14773 . 14774) (nil tag-type end 14773 . 14774) (nil font-lock-face web-mode-html-tag-bracket-face 14773 . 14774) (nil tag-name "td" 14772 . 14773) (nil tag-type end 14772 . 14773) (nil tag-beg 20 14772 . 14773) (nil font-lock-face web-mode-html-tag-bracket-face 14772 . 14773) (nil rear-nonsticky t 14756 . 14757) (nil block-side t 14756 . 14757) (nil block-end t 14756 . 14757) (nil block-token delimiter-end 14756 . 14757) (nil font-lock-face web-mode-block-delimiter-face 14756 . 14757) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14756 . 14757) (nil block-side t 14755 . 14756) (nil block-token delimiter-end 14755 . 14756) (nil font-lock-face web-mode-block-delimiter-face 14755 . 14756) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14755 . 14756) (nil block-side t 14754 . 14755) (nil block-side t 14753 . 14754) (nil face web-mode-variable-name-face 14753 . 14754) (nil block-side t 14752 . 14753) (nil face web-mode-variable-name-face 14752 . 14753) (nil block-side t 14751 . 14752) (nil face web-mode-variable-name-face 14751 . 14752) (nil block-side t 14750 . 14751) (nil face web-mode-variable-name-face 14750 . 14751) (nil block-side t 14749 . 14750) (nil face web-mode-variable-name-face 14749 . 14750) (nil block-side t 14748 . 14749) (nil face web-mode-variable-name-face 14748 . 14749) (nil block-side t 14747 . 14748) (nil face web-mode-variable-name-face 14747 . 14748) (nil block-side t 14746 . 14747) (nil block-side t 14745 . 14746) (nil face web-mode-variable-name-face 14745 . 14746) (nil block-side t 14744 . 14745) (nil face web-mode-variable-name-face 14744 . 14745) (nil block-side t 14743 . 14744) (nil face web-mode-variable-name-face 14743 . 14744) (nil block-side t 14742 . 14743) (nil face web-mode-variable-name-face 14742 . 14743) (nil block-side t 14741 . 14742) (nil block-side t 14740 . 14741) (nil block-token delimiter-beg 14740 . 14741) (nil font-lock-face web-mode-block-delimiter-face 14740 . 14741) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 14740 . 14741) (nil block-beg 0 14739 . 14740) (nil block-controls 0 14739 . 14740) (nil block-side t 14739 . 14740) (nil block-token delimiter-beg 14739 . 14740) (nil font-lock-face web-mode-block-delimiter-face 14739 . 14740) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 14739 . 14740) (nil tag-name "b" 14721 . 14722) (nil tag-type end 14721 . 14722) (nil tag-end t 14721 . 14722) (nil font-lock-face web-mode-html-tag-bracket-face 14721 . 14722) (nil tag-name "b" 14720 . 14721) (nil tag-type end 14720 . 14721) (nil font-lock-face web-mode-html-tag-face 14720 . 14721) (nil tag-name "b" 14719 . 14720) (nil tag-type end 14719 . 14720) (nil font-lock-face web-mode-html-tag-bracket-face 14719 . 14720) (nil tag-name "b" 14718 . 14719) (nil tag-type end 14718 . 14719) (nil tag-beg 20 14718 . 14719) (nil font-lock-face web-mode-html-tag-bracket-face 14718 . 14719) (nil tag-name "b" 14703 . 14704) (nil tag-type start 14703 . 14704) (nil tag-end t 14703 . 14704) (nil font-lock-face web-mode-html-tag-bracket-face 14703 . 14704) (nil tag-name "b" 14702 . 14703) (nil tag-type start 14702 . 14703) (nil font-lock-face web-mode-html-tag-face 14702 . 14703) (nil tag-name "b" 14701 . 14702) (nil tag-type start 14701 . 14702) (nil tag-beg 16 14701 . 14702) (nil font-lock-face web-mode-html-tag-bracket-face 14701 . 14702) (nil rear-nonsticky t 14683 . 14684) (nil tag-name "v-icon" 14683 . 14684) (nil tag-type end 14683 . 14684) (nil tag-end t 14683 . 14684) (nil font-lock-face web-mode-html-tag-bracket-face 14683 . 14684) (nil tag-name "v-icon" 14677 . 14683) (nil tag-type end 14677 . 14683) (nil font-lock-face web-mode-html-tag-custom-face 14677 . 14683) (nil tag-name "v-icon" 14676 . 14677) (nil tag-type end 14676 . 14677) (nil font-lock-face web-mode-html-tag-bracket-face 14676 . 14677) (nil tag-name "v-icon" 14675 . 14676) (nil tag-type end 14675 . 14676) (nil tag-beg 22 14675 . 14676) (nil font-lock-face web-mode-html-tag-bracket-face 14675 . 14676) (nil tag-name "v-icon" 14664 . 14665) (nil tag-type start 14664 . 14665) (nil tag-end t 14664 . 14665) (nil font-lock-face web-mode-html-tag-bracket-face 14664 . 14665) (nil tag-attr t 14663 . 14664) (nil tag-attr-end 4 14663 . 14664) (nil tag-name "v-icon" 14663 . 14664) (nil tag-type start 14663 . 14664) (nil font-lock-face web-mode-html-attr-value-face 14663 . 14664) (nil tag-attr t 14658 . 14663) (nil tag-name "v-icon" 14658 . 14663) (nil tag-type start 14658 . 14663) (nil font-lock-face web-mode-html-attr-value-face 14658 . 14663) (nil tag-attr t 14657 . 14658) (nil tag-name "v-icon" 14657 . 14658) (nil tag-type start 14657 . 14658) (nil font-lock-face web-mode-html-attr-equal-face 14657 . 14658) (nil tag-attr t 14654 . 14657) (nil tag-name "v-icon" 14654 . 14657) (nil tag-type start 14654 . 14657) (nil font-lock-face web-mode-html-attr-name-face 14654 . 14657) (nil tag-attr-beg 0 14653 . 14654) (nil tag-attr t 14653 . 14654) (nil tag-name "v-icon" 14653 . 14654) (nil tag-type start 14653 . 14654) (nil font-lock-face web-mode-html-attr-name-face 14653 . 14654) (nil tag-name "v-icon" 14652 . 14653) (nil tag-type start 14652 . 14653) (nil tag-attr t 14651 . 14652) (nil tag-attr-end 5 14651 . 14652) (nil tag-name "v-icon" 14651 . 14652) (nil tag-type start 14651 . 14652) (nil font-lock-face web-mode-html-attr-value-face 14651 . 14652) (nil tag-attr t 14641 . 14651) (nil tag-name "v-icon" 14641 . 14651) (nil tag-type start 14641 . 14651) (nil font-lock-face web-mode-html-attr-value-face 14641 . 14651) (nil tag-attr t 14640 . 14641) (nil tag-name "v-icon" 14640 . 14641) (nil tag-type start 14640 . 14641) (nil font-lock-face web-mode-html-attr-equal-face 14640 . 14641) (nil tag-attr t 14636 . 14640) (nil tag-name "v-icon" 14636 . 14640) (nil tag-type start 14636 . 14640) (nil font-lock-face web-mode-html-attr-name-face 14636 . 14640) (nil tag-attr-beg 0 14635 . 14636) (nil tag-attr t 14635 . 14636) (nil tag-name "v-icon" 14635 . 14636) (nil tag-type start 14635 . 14636) (nil font-lock-face web-mode-html-attr-name-face 14635 . 14636) (nil tag-name "v-icon" 14634 . 14635) (nil tag-type start 14634 . 14635) (nil tag-name "v-icon" 14628 . 14634) (nil tag-type start 14628 . 14634) (nil font-lock-face web-mode-html-tag-custom-face 14628 . 14634) (nil tag-name "v-icon" 14627 . 14628) (nil tag-type start 14627 . 14628) (nil tag-beg 19 14627 . 14628) (nil font-lock-face web-mode-html-tag-bracket-face 14627 . 14628) (nil tag-name "td" 14609 . 14610) (nil tag-type start 14609 . 14610) (nil tag-end t 14609 . 14610) (nil font-lock-face web-mode-html-tag-bracket-face 14609 . 14610) (nil rear-nonsticky t 14608 . 14609) (nil tag-attr t 14608 . 14609) (nil tag-attr-end 5 14608 . 14609) (nil tag-name "td" 14608 . 14609) (nil tag-type start 14608 . 14609) (nil font-lock-face web-mode-html-attr-value-face 14608 . 14609) (nil tag-attr t 14594 . 14608) (nil tag-name "td" 14594 . 14608) (nil tag-type start 14594 . 14608) (nil font-lock-face web-mode-html-attr-value-face 14594 . 14608) (nil tag-attr t 14593 . 14594) (nil tag-name "td" 14593 . 14594) (nil tag-type start 14593 . 14594) (nil font-lock-face web-mode-html-attr-equal-face 14593 . 14594) (nil tag-attr t 14589 . 14593) (nil tag-name "td" 14589 . 14593) (nil tag-type start 14589 . 14593) (nil font-lock-face web-mode-html-attr-name-face 14589 . 14593) (nil tag-attr-beg 0 14588 . 14589) (nil tag-attr t 14588 . 14589) (nil tag-name "td" 14588 . 14589) (nil tag-type start 14588 . 14589) (nil font-lock-face web-mode-html-attr-name-face 14588 . 14589) (nil tag-name "td" 14587 . 14588) (nil tag-type start 14587 . 14588) (nil tag-attr t 14586 . 14587) (nil tag-attr-end 5 14586 . 14587) (nil tag-name "td" 14586 . 14587) (nil tag-type start 14586 . 14587) (nil font-lock-face web-mode-html-attr-value-face 14586 . 14587) (nil tag-attr t 14579 . 14586) (nil tag-name "td" 14579 . 14586) (nil tag-type start 14579 . 14586) (nil font-lock-face web-mode-html-attr-value-face 14579 . 14586) (nil tag-attr t 14578 . 14579) (nil tag-name "td" 14578 . 14579) (nil tag-type start 14578 . 14579) (nil font-lock-face web-mode-html-attr-equal-face 14578 . 14579) (nil tag-attr t 14574 . 14578) (nil tag-name "td" 14574 . 14578) (nil tag-type start 14574 . 14578) (nil font-lock-face web-mode-html-attr-name-face 14574 . 14578) (nil tag-attr-beg 0 14573 . 14574) (nil tag-attr t 14573 . 14574) (nil tag-name "td" 14573 . 14574) (nil tag-type start 14573 . 14574) (nil font-lock-face web-mode-html-attr-name-face 14573 . 14574) (nil tag-name "td" 14572 . 14573) (nil tag-type start 14572 . 14573) (nil block-side t 14571 . 14572) (nil block-end t 14571 . 14572) (nil block-token delimiter-end 14571 . 14572) (nil tag-attr t 14571 . 14572) (nil tag-attr-end 8 14571 . 14572) (nil tag-name "td" 14571 . 14572) (nil tag-type start 14571 . 14572) (nil font-lock-face web-mode-block-delimiter-face 14571 . 14572) (nil block-side t 14570 . 14571) (nil tag-attr t 14570 . 14571) (nil tag-name "td" 14570 . 14571) (nil tag-type start 14570 . 14571) (nil face web-mode-variable-name-face 14570 . 14571) (nil block-side t 14569 . 14570) (nil tag-attr t 14569 . 14570) (nil tag-name "td" 14569 . 14570) (nil tag-type start 14569 . 14570) (nil face web-mode-variable-name-face 14569 . 14570) (nil block-side t 14568 . 14569) (nil tag-attr t 14568 . 14569) (nil tag-name "td" 14568 . 14569) (nil tag-type start 14568 . 14569) (nil face web-mode-variable-name-face 14568 . 14569) (nil block-side t 14567 . 14568) (nil tag-attr t 14567 . 14568) (nil tag-name "td" 14567 . 14568) (nil tag-type start 14567 . 14568) (nil face web-mode-variable-name-face 14567 . 14568) (nil block-side t 14566 . 14567) (nil tag-attr t 14566 . 14567) (nil tag-name "td" 14566 . 14567) (nil tag-type start 14566 . 14567) (nil face web-mode-variable-name-face 14566 . 14567) (nil block-side t 14565 . 14566) (nil tag-attr t 14565 . 14566) (nil tag-name "td" 14565 . 14566) (nil tag-type start 14565 . 14566) (nil face web-mode-variable-name-face 14565 . 14566) (nil block-side t 14564 . 14565) (nil tag-attr t 14564 . 14565) (nil tag-name "td" 14564 . 14565) (nil tag-type start 14564 . 14565) (nil block-side t 14563 . 14564) (nil tag-attr t 14563 . 14564) (nil tag-name "td" 14563 . 14564) (nil tag-type start 14563 . 14564) (nil face web-mode-variable-name-face 14563 . 14564) (nil block-side t 14562 . 14563) (nil tag-attr t 14562 . 14563) (nil tag-name "td" 14562 . 14563) (nil tag-type start 14562 . 14563) (nil face web-mode-variable-name-face 14562 . 14563) (nil block-side t 14561 . 14562) (nil tag-attr t 14561 . 14562) (nil tag-name "td" 14561 . 14562) (nil tag-type start 14561 . 14562) (nil face web-mode-variable-name-face 14561 . 14562) (nil block-side t 14560 . 14561) (nil tag-attr t 14560 . 14561) (nil tag-name "td" 14560 . 14561) (nil tag-type start 14560 . 14561) (nil face web-mode-variable-name-face 14560 . 14561) (nil block-side t 14559 . 14560) (nil tag-attr t 14559 . 14560) (nil tag-name "td" 14559 . 14560) (nil tag-type start 14559 . 14560) (nil face web-mode-variable-name-face 14559 . 14560) (nil block-side t 14558 . 14559) (nil tag-attr t 14558 . 14559) (nil tag-name "td" 14558 . 14559) (nil tag-type start 14558 . 14559) (nil face web-mode-variable-name-face 14558 . 14559) (nil block-side t 14557 . 14558) (nil tag-attr t 14557 . 14558) (nil tag-name "td" 14557 . 14558) (nil tag-type start 14557 . 14558) (nil face web-mode-variable-name-face 14557 . 14558) (nil block-side t 14556 . 14557) (nil block-token delimiter-beg 14556 . 14557) (nil tag-attr t 14556 . 14557) (nil tag-name "td" 14556 . 14557) (nil tag-type start 14556 . 14557) (nil font-lock-face web-mode-block-delimiter-face 14556 . 14557) (nil block-side t 14555 . 14556) (nil block-token delimiter-beg 14555 . 14556) (nil tag-attr t 14555 . 14556) (nil tag-name "td" 14555 . 14556) (nil tag-type start 14555 . 14556) (nil font-lock-face web-mode-block-delimiter-face 14555 . 14556) (nil block-side t 14554 . 14555) (nil block-token delimiter-beg 14554 . 14555) (nil tag-attr t 14554 . 14555) (nil tag-name "td" 14554 . 14555) (nil tag-type start 14554 . 14555) (nil font-lock-face web-mode-block-delimiter-face 14554 . 14555) (nil block-side t 14553 . 14554) (nil block-token delimiter-beg 14553 . 14554) (nil tag-attr t 14553 . 14554) (nil tag-name "td" 14553 . 14554) (nil tag-type start 14553 . 14554) (nil font-lock-face web-mode-block-delimiter-face 14553 . 14554) (nil block-side t 14552 . 14553) (nil block-token delimiter-beg 14552 . 14553) (nil tag-attr t 14552 . 14553) (nil tag-name "td" 14552 . 14553) (nil tag-type start 14552 . 14553) (nil font-lock-face web-mode-block-delimiter-face 14552 . 14553) (nil block-side t 14551 . 14552) (nil block-token delimiter-beg 14551 . 14552) (nil tag-attr t 14551 . 14552) (nil tag-name "td" 14551 . 14552) (nil tag-type start 14551 . 14552) (nil font-lock-face web-mode-block-delimiter-face 14551 . 14552) (nil block-side t 14550 . 14551) (nil block-token delimiter-beg 14550 . 14551) (nil tag-attr t 14550 . 14551) (nil tag-name "td" 14550 . 14551) (nil tag-type start 14550 . 14551) (nil font-lock-face web-mode-block-delimiter-face 14550 . 14551) (nil block-side t 14549 . 14550) (nil block-token delimiter-beg 14549 . 14550) (nil tag-attr t 14549 . 14550) (nil tag-name "td" 14549 . 14550) (nil tag-type start 14549 . 14550) (nil font-lock-face web-mode-block-delimiter-face 14549 . 14550) (nil block-side t 14548 . 14549) (nil block-token delimiter-beg 14548 . 14549) (nil tag-attr t 14548 . 14549) (nil tag-name "td" 14548 . 14549) (nil tag-type start 14548 . 14549) (nil font-lock-face web-mode-block-delimiter-face 14548 . 14549) (nil block-beg 0 14547 . 14548) (nil block-controls 0 14547 . 14548) (nil block-side t 14547 . 14548) (nil block-token delimiter-beg 14547 . 14548) (nil tag-attr-beg 2 14547 . 14548) (nil tag-attr t 14547 . 14548) (nil tag-name "td" 14547 . 14548) (nil tag-type start 14547 . 14548) (nil font-lock-face web-mode-block-delimiter-face 14547 . 14548) (nil tag-name "td" 14546 . 14547) (nil tag-type start 14546 . 14547) (nil tag-name "td" 14544 . 14546) (nil tag-type start 14544 . 14546) (nil font-lock-face web-mode-html-tag-face 14544 . 14546) (nil tag-name "td" 14543 . 14544) (nil tag-type start 14543 . 14544) (nil tag-beg 17 14543 . 14544) (nil font-lock-face web-mode-html-tag-bracket-face 14543 . 14544) (nil tag-name "tr" 14527 . 14528) (nil tag-type start 14527 . 14528) (nil tag-end t 14527 . 14528) (nil font-lock-face web-mode-html-tag-bracket-face 14527 . 14528) (nil rear-nonsticky t 14526 . 14527) (nil tag-attr t 14526 . 14527) (nil tag-attr-end 5 14526 . 14527) (nil tag-name "tr" 14526 . 14527) (nil tag-type start 14526 . 14527) (nil font-lock-face web-mode-html-attr-value-face 14526 . 14527) (nil tag-attr t 14505 . 14526) (nil tag-name "tr" 14505 . 14526) (nil tag-type start 14505 . 14526) (nil font-lock-face web-mode-html-attr-value-face 14505 . 14526) (nil tag-attr t 14504 . 14505) (nil tag-name "tr" 14504 . 14505) (nil tag-type start 14504 . 14505) (nil font-lock-face web-mode-html-attr-equal-face 14504 . 14505) (nil tag-attr t 14500 . 14504) (nil tag-name "tr" 14500 . 14504) (nil tag-type start 14500 . 14504) (nil font-lock-face web-mode-html-attr-name-face 14500 . 14504) (nil tag-attr-beg 0 14499 . 14500) (nil tag-attr t 14499 . 14500) (nil tag-name "tr" 14499 . 14500) (nil tag-type start 14499 . 14500) (nil font-lock-face web-mode-html-attr-name-face 14499 . 14500) (nil tag-name "tr" 14498 . 14499) (nil tag-type start 14498 . 14499) (nil tag-name "tr" 14496 . 14498) (nil tag-type start 14496 . 14498) (nil font-lock-face web-mode-html-tag-face 14496 . 14498) (nil tag-name "tr" 14495 . 14496) (nil tag-type start 14495 . 14496) (nil tag-beg 17 14495 . 14496) (nil font-lock-face web-mode-html-tag-bracket-face 14495 . 14496) (14495 . 14795)) nil (25671 50350 355026 190000) 0 nil])
([nil nil (("Filters" . 14711) (undo-tree-id1566 . -7) (undo-tree-id1567 . -7)) nil (25671 50350 354940 918000) 0 nil])
([nil nil ((14711 . 14720)) nil (25671 50350 354937 830000) 0 nil])
([nil nil ((" " . -14719) (undo-tree-id1565 . -1) 14720) nil (25671 50350 354936 445000) 0 nil])
([nil nil ((#("filters" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face)) . 14748) (undo-tree-id1563 . -7) (undo-tree-id1564 . -7)) nil (25671 50350 354933 640000) 0 nil])
([nil nil ((14748 . 14757)) nil (25671 50350 354929 235000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -14756) (undo-tree-id1562 . -1) 14757) nil (25671 50350 354924 408000) 0 nil])
([nil nil ((#("f" 0 1 (block-side t face web-mode-variable-name-face)) . -14434) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) 14435 (t 25671 50350 398150 201000)) nil (25671 50364 919387 101000) 0 nil])
([nil nil ((14434 . 14435)) nil (25671 50364 919358 901000) 0 nil])
([nil nil ((25326 . 25327) (t 25671 50364 957327 584000)) nil (25671 50388 532221 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25352 . 25353) (nil rear-nonsticky t 25352 . 25353) (nil part-side javascript 25352 . 25353) (nil part-token string 25352 . 25353) (nil syntax-table (15) 25352 . 25353) (nil font-lock-face web-mode-javascript-string-face 25352 . 25353) (nil part-side javascript 25348 . 25352) (nil part-token string 25348 . 25352) (nil font-lock-face web-mode-javascript-string-face 25348 . 25352) (nil part-side javascript 25347 . 25348) (nil part-token string 25347 . 25348) (nil syntax-table (15) 25347 . 25348) (nil font-lock-face web-mode-javascript-string-face 25347 . 25348) (nil part-side javascript 25344 . 25347) (nil part-side javascript 25343 . 25344) (nil face (rainbow-delimiters-depth-2-face) 25343 . 25344) (nil part-side javascript 25342 . 25343) (nil part-token string 25342 . 25343) (nil syntax-table (15) 25342 . 25343) (nil font-lock-face web-mode-javascript-string-face 25342 . 25343) (nil rear-nonsticky t 25341 . 25342) (nil part-side javascript 25341 . 25342) (nil part-token string 25341 . 25342) (nil font-lock-face web-mode-javascript-string-face 25341 . 25342) (nil part-side javascript 25332 . 25341) (nil part-token string 25332 . 25341) (nil font-lock-face web-mode-javascript-string-face 25332 . 25341) (nil part-side javascript 25331 . 25332) (nil part-token string 25331 . 25332) (nil syntax-table (15) 25331 . 25332) (nil font-lock-face web-mode-javascript-string-face 25331 . 25332) (nil part-side javascript 25330 . 25331) (nil face (rainbow-delimiters-depth-2-face) 25330 . 25331) (nil part-side javascript 25327 . 25330) (25327 . 25353)) nil (25671 50388 532218 215000) 0 nil])
([nil nil ((25406 . 25407)) nil (25671 50388 532209 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25432 . 25433) (nil rear-nonsticky t 25432 . 25433) (nil part-side javascript 25432 . 25433) (nil part-token string 25432 . 25433) (nil font-lock-face web-mode-javascript-string-face 25432 . 25433) (nil part-side javascript 25428 . 25432) (nil part-token string 25428 . 25432) (nil font-lock-face web-mode-javascript-string-face 25428 . 25432) (nil part-side javascript 25427 . 25428) (nil part-token string 25427 . 25428) (nil syntax-table (15) 25427 . 25428) (nil font-lock-face web-mode-javascript-string-face 25427 . 25428) (nil part-side javascript 25424 . 25427) (nil part-side javascript 25423 . 25424) (nil face (rainbow-delimiters-depth-2-face) 25423 . 25424) (nil part-side javascript 25422 . 25423) (nil part-token string 25422 . 25423) (nil syntax-table (15) 25422 . 25423) (nil font-lock-face web-mode-javascript-string-face 25422 . 25423) (nil rear-nonsticky t 25421 . 25422) (nil part-side javascript 25421 . 25422) (nil part-token string 25421 . 25422) (nil font-lock-face web-mode-javascript-string-face 25421 . 25422) (nil part-side javascript 25412 . 25421) (nil part-token string 25412 . 25421) (nil font-lock-face web-mode-javascript-string-face 25412 . 25421) (nil part-side javascript 25411 . 25412) (nil part-token string 25411 . 25412) (nil syntax-table (15) 25411 . 25412) (nil font-lock-face web-mode-javascript-string-face 25411 . 25412) (nil part-side javascript 25410 . 25411) (nil face (rainbow-delimiters-depth-2-face) 25410 . 25411) (nil part-side javascript 25407 . 25410) (25407 . 25433)) nil (25671 50388 532206 486000) 0 nil])
([nil nil ((#("'Last Alarm'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 11 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 11 12 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 25331) (undo-tree-id1598 . -12) (undo-tree-id1599 . -12)) nil (25671 50388 532197 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25339 . 25340) (nil part-side javascript 25339 . 25340) (nil part-token string 25339 . 25340) (nil syntax-table (15) 25339 . 25340) (nil font-lock-face web-mode-javascript-string-face 25339 . 25340) (nil part-side javascript 25332 . 25339) (nil part-token string 25332 . 25339) (nil font-lock-face web-mode-javascript-string-face 25332 . 25339) (nil part-side javascript 25331 . 25332) (nil part-token string 25331 . 25332) (nil syntax-table (15) 25331 . 25332) (nil font-lock-face web-mode-javascript-string-face 25331 . 25332) (25331 . 25340)) nil (25671 50388 532193 527000) 0 nil])
([nil nil ((#("'Last Alarm'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 11 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 11 12 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 25408) (undo-tree-id1579 . -12) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -12) (undo-tree-id1597 . -12)) nil (25671 50388 532187 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25425 . 25426) (nil part-side javascript 25425 . 25426) (nil part-token string 25425 . 25426) (nil syntax-table (15) 25425 . 25426) (nil font-lock-face web-mode-javascript-string-face 25425 . 25426) (nil rear-nonsticky t 25424 . 25425) (nil part-side javascript 25424 . 25425) (nil part-token string 25424 . 25425) (nil font-lock-face web-mode-javascript-string-face 25424 . 25425) (nil part-side javascript 25409 . 25424) (nil part-token string 25409 . 25424) (nil font-lock-face web-mode-javascript-string-face 25409 . 25424) (nil part-side javascript 25408 . 25409) (nil part-token string 25408 . 25409) (nil syntax-table (15) 25408 . 25409) (nil font-lock-face web-mode-javascript-string-face 25408 . 25409) (25408 . 25426)) nil (25671 50388 532153 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25439 . 25440) (nil part-side javascript 25427 . 25440) (25427 . 25440) (t 25671 50388 574435 143000)) nil (25671 50439 803286 74000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -25427) (undo-tree-id1600 . -1) (#("a" 0 1 (part-side javascript)) . -25428) (undo-tree-id1601 . -1) (#("r" 0 1 (part-side javascript)) . -25429) (undo-tree-id1602 . -1) (#("r" 0 1 (part-side javascript)) . -25430) (undo-tree-id1603 . -1) (#("a" 0 1 (part-side javascript)) . -25431) (undo-tree-id1604 . -1) (#("y" 0 1 (part-side javascript)) . -25432) (undo-tree-id1605 . -1) 25433) nil (25671 50440 479840 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25409 . 25410) (nil rear-nonsticky t 25409 . 25410) (nil part-side javascript 25409 . 25410) (nil part-side javascript 25403 . 25409) (25403 . 25410)) nil (25671 50451 459170 14000) 0 nil] [nil nil ((25406 . 25407)) ((#("!" 0 1 (part-side javascript)) . 25406)) (25671 50439 812647 97000) 0 nil])
([nil nil ((25382 . 25383)) nil (25671 50451 459168 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25347 . 25348) (nil rear-nonsticky t 25347 . 25348) (nil part-side javascript 25347 . 25348) (nil part-side javascript 25341 . 25347) (25341 . 25348)) ((#(".length" 0 6 (part-side javascript) 6 7 (rear-nonsticky t part-side javascript)) . 25341) (undo-tree-id1606 . -7) (nil rear-nonsticky nil 25347 . 25348) (nil rear-nonsticky t 25347 . 25348)) (25671 50439 803257 449000) 0 nil])
([nil nil ((25314 . 25315)) nil (25671 50451 459167 128000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 25333 . 25334) (nil rear-nonsticky t 25333 . 25334) (nil part-side javascript 25333 . 25334) (nil part-side javascript 25327 . 25333) (25327 . 25334)) nil (25671 50451 459165 885000) 0 nil])
([nil nil ((#("length" 0 5 (part-side javascript) 5 6 (rear-nonsticky t part-side javascript)) . 25444) (undo-tree-id1610 . -6) (undo-tree-id1611 . -6) (undo-tree-id1612 . -6)) nil (25671 50451 459163 121000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -25443) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) 25444) nil (25671 50451 459154 649000) 0 nil])
([nil nil ((#("!e['Filters'].length " 0 1 (part-side javascript) 1 2 (part-side javascript) 2 3 (part-side javascript face (rainbow-delimiters-depth-2-face)) 3 4 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 4 11 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 11 12 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 12 13 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-2-face)) 13 19 (part-side javascript) 19 20 (rear-nonsticky t part-side javascript) 20 21 (part-side javascript)) . 25314) (undo-tree-id1634 . -21) (undo-tree-id1635 . -13) (undo-tree-id1636 . -21) (t 25671 50451 500417 512000)) nil (25671 50541 194357 935000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 25314) (#("?" 0 1 (part-side javascript)) . 25314)) nil (25671 50541 194352 809000) 0 nil])
([nil nil ((25326 . 25331)) nil (25671 50541 194351 566000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -25330) (undo-tree-id1633 . -1) 25331) nil (25671 50541 194350 143000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 25333) (25332 . 25333) (25331 . 25333) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25331) (25330 . 25332)) nil (25671 50541 194347 28000) 0 nil])
([nil nil ((25332 . 25333)) nil (25671 50541 194344 988000) 0 nil])
([nil nil ((25333 . 25334)) nil (25671 50541 194343 846000) 0 nil])
([nil nil ((25333 . 25334)) nil (25671 50541 194342 731000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25408 . 25409) (nil part-side javascript 25408 . 25409) (nil face (rainbow-delimiters-depth-2-face) 25408 . 25409) (nil part-side javascript 25407 . 25408) (nil part-token string 25407 . 25408) (nil syntax-table (15) 25407 . 25408) (nil font-lock-face web-mode-javascript-string-face 25407 . 25408) (nil part-side javascript 25406 . 25407) (nil part-token string 25406 . 25407) (nil font-lock-face web-mode-javascript-string-face 25406 . 25407) (nil part-side javascript 25405 . 25406) (nil part-token string 25405 . 25406) (nil syntax-table (15) 25405 . 25406) (nil font-lock-face web-mode-javascript-string-face 25405 . 25406) (nil part-side javascript 25404 . 25405) (nil face (rainbow-delimiters-depth-2-face) 25404 . 25405) (nil part-side javascript 25400 . 25404) (nil face web-mode-function-call-face 25400 . 25404) (nil part-side javascript 25399 . 25400) (25399 . 25409)) nil (25671 50541 194340 380000) 0 nil])
([nil nil ((#(".length ? e['trigger_profiles'] : 'None'" 0 6 (part-side javascript) 6 7 (rear-nonsticky t part-side javascript) 7 8 (part-side javascript) 8 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-2-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 29 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 29 30 (rear-nonsticky t part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript face (rainbow-delimiters-depth-2-face)) 31 34 (part-side javascript) 34 35 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 35 39 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 39 40 (rear-nonsticky t part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 25409) (undo-tree-id1626 . -40) (undo-tree-id1627 . -12) (undo-tree-id1628 . -12) (undo-tree-id1629 . -31) (undo-tree-id1630 . -31) (undo-tree-id1631 . -31) (undo-tree-id1632 . -40)) nil (25671 50541 194333 538000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -25377) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) 25378) nil (25671 50541 194319 64000) 0 nil])
([nil nil ((#(": 'None'" 0 2 (part-side javascript) 2 3 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 3 7 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 7 8 (rear-nonsticky t part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 25337) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (t 25671 50541 231461 510000)) nil (25671 50544 937505 774000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -25336) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) 25337) nil (25671 50544 937496 416000) 0 nil])
([nil nil (("mdi-filter" . 14665) (undo-tree-id1656 . -10) (undo-tree-id1657 . -9) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) (undo-tree-id1667 . -2) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -10) (undo-tree-id1672 . -10) (t 25671 50544 979038 88000)) nil (25671 51678 874041 787000) 0 nil])
([nil nil ((14665 . 14688)) nil (25671 51678 874008 598000) 0 nil])
([nil nil ((25410 . 25411) (t 25671 51678 916583 744000)) nil (25671 51710 865137 392000) 0 nil])
([nil nil ((25347 . 25348) (t 25671 51710 903532 190000)) nil (25671 51721 486426 944000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -25339) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#("j" 0 1 (part-side javascript)) . -25340) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (#("o" 0 1 (part-side javascript)) . -25341) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (#("i" 0 1 (part-side javascript)) . -25342) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (#("n" 0 1 (part-side javascript)) . -25343) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25344) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -25345) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#("," 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -25346) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -25347) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -25348) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-2-face))) . -25349) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 25350 (t 25671 51721 523180 488000)) nil (25671 51863 371671 108000) 0 nil])
([nil nil ((#(".join(', ')" 0 1 (part-side javascript) 1 5 (part-side javascript face web-mode-function-call-face) 5 6 (part-side javascript face (rainbow-delimiters-depth-2-face)) 6 7 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 7 9 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-2-face))) . 25392) (undo-tree-id1690 . -11) (undo-tree-id1691 . -11) (undo-tree-id1692 . -11)) nil (25671 51863 371643 977000) 0 nil])
([nil nil ((14409 . 14426)) nil (25671 51863 371639 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14450 . 14451) (nil tag-name "v-chip" 14450 . 14451) (nil tag-type end 14450 . 14451) (nil tag-end t 14450 . 14451) (nil font-lock-face web-mode-html-tag-bracket-face 14450 . 14451) (nil tag-name "v-chip" 14444 . 14450) (nil tag-type end 14444 . 14450) (nil font-lock-face web-mode-html-tag-custom-face 14444 . 14450) (nil tag-name "v-chip" 14443 . 14444) (nil tag-type end 14443 . 14444) (nil font-lock-face web-mode-html-tag-bracket-face 14443 . 14444) (nil tag-name "v-chip" 14442 . 14443) (nil tag-type end 14442 . 14443) (nil tag-beg 22 14442 . 14443) (nil font-lock-face web-mode-html-tag-bracket-face 14442 . 14443) (nil tag-name "v-chip" 14433 . 14434) (nil tag-type start 14433 . 14434) (nil tag-end t 14433 . 14434) (nil font-lock-face web-mode-html-tag-bracket-face 14433 . 14434) (nil tag-name "v-chip" 14427 . 14433) (nil tag-type start 14427 . 14433) (nil font-lock-face web-mode-html-tag-custom-face 14427 . 14433) (nil tag-name "v-chip" 14426 . 14427) (nil tag-type start 14426 . 14427) (nil tag-beg 18 14426 . 14427) (nil font-lock-face web-mode-html-tag-bracket-face 14426 . 14427) (14426 . 14451)) nil (25671 51863 371637 688000) 0 nil])
([nil nil ((14435 . 14453) ("  " . 14435) 14441) nil (25671 51863 371631 84000) 0 nil])
([nil nil ((14458 . 14474) 14467) nil (25671 51863 371629 727000) 0 nil])
([nil nil ((14433 . 14442)) nil (25671 51863 371628 573000) 0 nil])
([nil nil ((14441 . 14451)) nil (25671 51863 371627 330000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14462 . 14463) (nil tag-attr t 14462 . 14463) (nil tag-name "v-chip" 14462 . 14463) (nil tag-type start 14462 . 14463) (nil font-lock-face web-mode-html-attr-value-face 14462 . 14463) (nil tag-attr t 14461 . 14462) (nil tag-name "v-chip" 14461 . 14462) (nil tag-type start 14461 . 14462) (nil font-lock-face web-mode-html-attr-value-face 14461 . 14462) (nil tag-attr t 14460 . 14461) (nil tag-name "v-chip" 14460 . 14461) (nil tag-type start 14460 . 14461) (nil font-lock-face web-mode-html-attr-value-face 14460 . 14461) (nil tag-attr t 14459 . 14460) (nil tag-name "v-chip" 14459 . 14460) (nil tag-type start 14459 . 14460) (nil font-lock-face web-mode-html-attr-value-face 14459 . 14460) (nil tag-attr t 14458 . 14459) (nil tag-name "v-chip" 14458 . 14459) (nil tag-type start 14458 . 14459) (nil font-lock-face web-mode-html-attr-value-face 14458 . 14459) (nil tag-attr t 14457 . 14458) (nil tag-name "v-chip" 14457 . 14458) (nil tag-type start 14457 . 14458) (nil font-lock-face web-mode-html-attr-value-face 14457 . 14458) (nil tag-attr t 14456 . 14457) (nil tag-name "v-chip" 14456 . 14457) (nil tag-type start 14456 . 14457) (nil font-lock-face web-mode-html-attr-value-face 14456 . 14457) (nil tag-attr t 14455 . 14456) (nil tag-name "v-chip" 14455 . 14456) (nil tag-type start 14455 . 14456) (nil font-lock-face web-mode-html-attr-value-face 14455 . 14456) (nil tag-attr t 14454 . 14455) (nil tag-name "v-chip" 14454 . 14455) (nil tag-type start 14454 . 14455) (nil font-lock-face web-mode-html-attr-value-face 14454 . 14455) (nil tag-attr t 14453 . 14454) (nil tag-name "v-chip" 14453 . 14454) (nil tag-type start 14453 . 14454) (nil font-lock-face web-mode-html-attr-value-face 14453 . 14454) (nil tag-attr t 14452 . 14453) (nil tag-name "v-chip" 14452 . 14453) (nil tag-type start 14452 . 14453) (nil font-lock-face web-mode-html-attr-value-face 14452 . 14453) (nil tag-attr t 14451 . 14452) (nil tag-name "v-chip" 14451 . 14452) (nil tag-type start 14451 . 14452) (nil font-lock-face web-mode-html-attr-value-face 14451 . 14452) (14451 . 14463)) nil (25671 51863 371623 948000) 0 nil])
([nil nil ((#("item.Filters" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face)) . 14534) (undo-tree-id1687 . -12) (undo-tree-id1688 . -12) (undo-tree-id1689 . -12)) nil (25671 51863 371612 268000) 0 nil])
([nil nil ((14534 . 14540)) nil (25671 51863 371608 370000) 0 nil])
([nil nil ((#("                {{ filter }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t) 26 27 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 27 28 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 14544) (undo-tree-id1682 . -19) (undo-tree-id1683 . -29) (undo-tree-id1684 . -25) (undo-tree-id1685 . -25) (undo-tree-id1686 . -19) (14518 . 14544) (#("                </v-chip>
" 16 17 (tag-name "v-chip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 24 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-custom-face) 24 25 (rear-nonsticky t tag-name "v-chip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14489) (14515 . 14544) 14540) nil (25671 51863 371606 860000) 0 nil])
([nil nil (("
" . 14488) (undo-tree-id1681 . -1)) nil (25671 51863 371599 448000) 0 nil])
([nil nil ((" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) (" " . 14484) ("p" . 14484) ("i" . 14484) ("h" . 14484) ("C" . 14484)) nil (25671 51863 371594 612000) 0 nil])
([nil nil ((14814 . 14831)) nil (25671 51863 371589 913000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14869 . 14870) (nil tag-name "v-chip" 14869 . 14870) (nil tag-type start 14869 . 14870) (nil tag-end t 14869 . 14870) (nil font-lock-face web-mode-html-tag-bracket-face 14869 . 14870) (nil tag-attr t 14868 . 14869) (nil tag-attr-end 5 14868 . 14869) (nil tag-name "v-chip" 14868 . 14869) (nil tag-type start 14868 . 14869) (nil font-lock-face web-mode-html-attr-value-face 14868 . 14869) (nil rear-nonsticky t 14867 . 14868) (nil tag-attr t 14867 . 14868) (nil tag-name "v-chip" 14867 . 14868) (nil tag-type start 14867 . 14868) (nil font-lock-face web-mode-html-attr-value-face 14867 . 14868) (nil tag-attr t 14856 . 14867) (nil tag-name "v-chip" 14856 . 14867) (nil tag-type start 14856 . 14867) (nil font-lock-face web-mode-html-attr-value-face 14856 . 14867) (nil tag-attr t 14845 . 14856) (nil tag-name "v-chip" 14845 . 14856) (nil tag-type start 14845 . 14856) (nil font-lock-face web-mode-html-attr-value-face 14845 . 14856) (nil tag-attr t 14844 . 14845) (nil tag-name "v-chip" 14844 . 14845) (nil tag-type start 14844 . 14845) (nil font-lock-face web-mode-html-attr-equal-face 14844 . 14845) (nil tag-attr t 14843 . 14844) (nil tag-name "v-chip" 14843 . 14844) (nil tag-type start 14843 . 14844) (nil font-lock-face web-mode-html-attr-engine-face 14843 . 14844) (nil tag-attr t 14842 . 14843) (nil tag-name "v-chip" 14842 . 14843) (nil tag-type start 14842 . 14843) (nil font-lock-face web-mode-html-attr-engine-face 14842 . 14843) (nil tag-attr t 14841 . 14842) (nil tag-name "v-chip" 14841 . 14842) (nil tag-type start 14841 . 14842) (nil font-lock-face web-mode-html-attr-engine-face 14841 . 14842) (nil tag-attr t 14840 . 14841) (nil tag-name "v-chip" 14840 . 14841) (nil tag-type start 14840 . 14841) (nil font-lock-face web-mode-html-attr-engine-face 14840 . 14841) (nil tag-attr-beg 2 14839 . 14840) (nil tag-attr t 14839 . 14840) (nil tag-name "v-chip" 14839 . 14840) (nil tag-type start 14839 . 14840) (nil font-lock-face web-mode-html-attr-engine-face 14839 . 14840) (nil tag-name "v-chip" 14838 . 14839) (nil tag-type start 14838 . 14839) (nil tag-name "v-chip" 14832 . 14838) (nil tag-type start 14832 . 14838) (nil font-lock-face web-mode-html-tag-custom-face 14832 . 14838) (nil tag-name "v-chip" 14831 . 14832) (nil tag-type start 14831 . 14832) (nil tag-beg 19 14831 . 14832) (nil font-lock-face web-mode-html-tag-bracket-face 14831 . 14832) (14831 . 14870)) nil (25671 51863 371586 212000) 0 nil])
([nil nil ((14909 . 14927) (14887 . 14889) (14906 . 14907)) nil (25671 51863 371573 774000) 0 nil])
([nil nil (("  " . -14925) (14927 . 14936)) nil (25671 51863 371572 220000) 0 nil])
([nil nil ((#("filter" 0 6 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14846) (undo-tree-id1679 . -6) (undo-tree-id1680 . -6)) nil (25671 51863 371570 884000) 0 nil])
([nil nil ((14846 . 14853)) nil (25671 51863 371567 681000) 0 nil])
([nil nil ((#("Filters" 0 7 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14862) (undo-tree-id1677 . -7) (undo-tree-id1678 . -7)) nil (25671 51863 371566 506000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14869 . 14870) (nil tag-attr t 14869 . 14870) (nil tag-name "v-chip" 14869 . 14870) (nil tag-type start 14869 . 14870) (nil font-lock-face web-mode-html-attr-value-face 14869 . 14870) (nil tag-attr t 14868 . 14869) (nil tag-name "v-chip" 14868 . 14869) (nil tag-type start 14868 . 14869) (nil font-lock-face web-mode-html-attr-value-face 14868 . 14869) (nil tag-attr t 14867 . 14868) (nil tag-name "v-chip" 14867 . 14868) (nil tag-type start 14867 . 14868) (nil font-lock-face web-mode-html-attr-value-face 14867 . 14868) (nil tag-attr t 14866 . 14867) (nil tag-name "v-chip" 14866 . 14867) (nil tag-type start 14866 . 14867) (nil font-lock-face web-mode-html-attr-value-face 14866 . 14867) (nil tag-attr t 14865 . 14866) (nil tag-name "v-chip" 14865 . 14866) (nil tag-type start 14865 . 14866) (nil font-lock-face web-mode-html-attr-value-face 14865 . 14866) (nil tag-attr t 14864 . 14865) (nil tag-name "v-chip" 14864 . 14865) (nil tag-type start 14864 . 14865) (nil font-lock-face web-mode-html-attr-value-face 14864 . 14865) (nil tag-attr t 14863 . 14864) (nil tag-name "v-chip" 14863 . 14864) (nil tag-type start 14863 . 14864) (nil font-lock-face web-mode-html-attr-value-face 14863 . 14864) (nil tag-attr t 14862 . 14863) (nil tag-name "v-chip" 14862 . 14863) (nil tag-type start 14862 . 14863) (nil font-lock-face web-mode-html-attr-value-face 14862 . 14863) (14862 . 14870)) nil (25671 51863 371561 428000) 0 nil])
([nil nil ((#("item.Profiles" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face)) . 14894) (undo-tree-id1674 . -13) (undo-tree-id1675 . -13) (undo-tree-id1676 . -13)) nil (25671 51863 371553 348000) 0 nil])
([nil nil ((14894 . 14902)) nil (25671 51863 371547 617000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -14901) (undo-tree-id1673 . -1) 14902) nil (25671 51863 371542 820000) 0 nil])
([nil nil ((14846 . 14848) (14839 . 14848) (t 25671 51863 414383 176000)) nil (25671 51904 87766 262000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14846) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (#("l" 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14847) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) 14848) nil (25671 51904 87763 749000) 0 nil])
([nil nil ((14846 . 14849)) nil (25671 51904 87757 520000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14846) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (#("l" 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14847) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#("-" 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14848) (undo-tree-id1719 . -1) 14849) nil (25671 51904 87755 96000) 0 nil])
([nil nil ((14846 . 14848)) nil (25671 51904 87742 267000) 0 nil])
([nil nil ((14848 . 14850)) nil (25671 51904 87740 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14445 . 14446) (nil tag-attr t 14445 . 14446) (nil tag-attr-end 5 14445 . 14446) (nil tag-name "v-chip" 14445 . 14446) (nil tag-type start 14445 . 14446) (nil font-lock-face web-mode-html-attr-value-face 14445 . 14446) (nil tag-attr t 14440 . 14445) (nil tag-name "v-chip" 14440 . 14445) (nil tag-type start 14440 . 14445) (nil font-lock-face web-mode-html-attr-value-face 14440 . 14445) (nil tag-attr t 14439 . 14440) (nil tag-name "v-chip" 14439 . 14440) (nil tag-type start 14439 . 14440) (nil font-lock-face web-mode-html-attr-equal-face 14439 . 14440) (nil tag-attr t 14435 . 14439) (nil tag-name "v-chip" 14435 . 14439) (nil tag-type start 14435 . 14439) (nil font-lock-face web-mode-html-attr-name-face 14435 . 14439) (nil tag-attr-beg 0 14434 . 14435) (nil tag-attr t 14434 . 14435) (nil tag-name "v-chip" 14434 . 14435) (nil tag-type start 14434 . 14435) (nil font-lock-face web-mode-html-attr-name-face 14434 . 14435) (14434 . 14446)) nil (25671 51904 87737 809000) 0 nil])
([nil nil ((14446 . 14447)) nil (25671 51904 87724 388000) 0 nil])
([nil nil ((14445 . 14450) (t 25671 51904 131771 216000)) nil (25671 51917 212007 572000) 0 nil])
([nil nil ((2074 . 2085) (t 25671 51917 258909 680000)) nil (25671 53125 99108 600000) 0 nil])
([nil nil ((2085 . 2091)) nil (25671 53125 99104 674000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-data-table" tag-type start)) . -2090) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) 2091) nil (25671 53125 99097 437000) 0 nil])
([nil nil ((8106 . 8133) (t 25671 53125 143277 486000)) nil (25671 53441 176066 517000) 0 nil])
([nil nil ((#("
" 0 1 (tag-name "v-select" tag-type start)) . 8133) (undo-tree-id1735 . -1) (undo-tree-id1736 . 1)) nil (25671 53441 176064 636000) 0 nil])
([nil nil ((#("                          " 0 26 (tag-name "v-select" tag-type start)) . -8133)) nil (25671 53687 686620 406000) 0 nil])
([nil nil ((#("
                      <v-col>
                        <v-btn text x-small @click=\"setDynamic('Delivery Status')\">
                          <v-icon size=\"17px\">mdi-select-search</v-icon>
                        </v-btn>
                        <b> {{ $t('SensorOverview.TableHeaders.deliveryStatus') }}</b>
                      </v-col>
                      <v-col>
                        <v-select
                          class=\"inTableVselect\"
                          v-model=\"delivery_status[item['Sensor ID']]\"
                          @input=\"status_error[item['Sensor ID']] = ''\"
                          @change=\"change_delivery_status(item['Sensor ID'])\"
                          :items=\"delivery_status_items\"
                          :error-messages=\"status_error[item['Sensor ID']]\"
                          @click.stop=\"\"
                          clearable
                          dense
                        ></v-select>
                      </v-col>" 23 24 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 24 29 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 56 61 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 61 62 (tag-name "v-btn" tag-type start) 62 63 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 63 65 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 65 66 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 66 67 (tag-name "v-btn" tag-type start) 67 68 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 68 73 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 73 74 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 74 75 (tag-name "v-btn" tag-type start) 75 76 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 78 79 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 81 82 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 82 83 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 83 93 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 93 95 (block-side t tag-attr t tag-name "v-btn" tag-type start) 95 96 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 96 97 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 97 98 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 98 99 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 99 100 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 100 101 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 101 102 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 102 103 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 103 104 (block-side t tag-attr t tag-name "v-btn" tag-type start) 104 105 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 105 106 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 106 107 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 107 108 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 108 109 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 109 110 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 110 112 (block-side t tag-attr t tag-name "v-btn" tag-type start) 112 113 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 113 114 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 141 142 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 142 148 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 148 149 (tag-name "v-icon" tag-type start) 149 150 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 150 153 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 153 154 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 154 159 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 159 160 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 160 161 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 178 179 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 179 180 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 180 186 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 186 187 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 212 213 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 213 214 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 214 219 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 219 220 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 245 246 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 246 247 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 247 248 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 249 250 (block-beg 0 block-controls nil block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 250 251 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 251 253 (block-side t) 253 254 (block-side t face web-mode-variable-name-face) 254 255 (block-side t face (rainbow-delimiters-depth-3-face)) 255 256 (block-side t) 256 257 (block-side t face web-mode-variable-name-face) 257 258 (block-side t face web-mode-variable-name-face) 258 259 (block-side t face web-mode-variable-name-face) 259 260 (block-side t face web-mode-variable-name-face) 260 261 (block-side t face web-mode-variable-name-face) 261 262 (block-side t face web-mode-variable-name-face) 262 263 (block-side t face web-mode-variable-name-face) 263 264 (block-side t face web-mode-variable-name-face) 264 265 (block-side t face web-mode-variable-name-face) 265 266 (block-side t face web-mode-variable-name-face) 266 267 (block-side t face web-mode-variable-name-face) 267 268 (block-side t face web-mode-variable-name-face) 268 269 (block-side t face web-mode-variable-name-face) 269 270 (block-side t face web-mode-variable-name-face) 270 271 (block-side t) 271 272 (block-side t face web-mode-variable-name-face) 272 273 (block-side t face web-mode-variable-name-face) 273 274 (block-side t face web-mode-variable-name-face) 274 275 (block-side t face web-mode-variable-name-face) 275 276 (block-side t face web-mode-variable-name-face) 276 277 (block-side t face web-mode-variable-name-face) 277 278 (block-side t face web-mode-variable-name-face) 278 279 (block-side t face web-mode-variable-name-face) 279 280 (block-side t face web-mode-variable-name-face) 280 281 (block-side t face web-mode-variable-name-face) 281 282 (block-side t face web-mode-variable-name-face) 282 283 (block-side t face web-mode-variable-name-face) 283 284 (block-side t) 284 285 (block-side t face web-mode-variable-name-face) 285 286 (block-side t face web-mode-variable-name-face) 286 287 (block-side t face web-mode-variable-name-face) 287 288 (block-side t face web-mode-variable-name-face) 288 289 (block-side t face web-mode-variable-name-face) 289 290 (block-side t face web-mode-variable-name-face) 290 291 (block-side t face web-mode-variable-name-face) 291 292 (block-side t face web-mode-variable-name-face) 292 293 (block-side t face web-mode-variable-name-face) 293 294 (block-side t face web-mode-variable-name-face) 294 295 (block-side t face web-mode-variable-name-face) 295 296 (block-side t face web-mode-variable-name-face) 296 297 (block-side t face web-mode-variable-name-face) 297 298 (block-side t face web-mode-variable-name-face) 298 299 (block-side t) 299 300 (block-side t face (rainbow-delimiters-depth-3-face)) 300 301 (block-side t) 301 302 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 302 303 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 303 304 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 304 305 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 305 306 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 306 307 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 330 331 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 331 332 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 332 337 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 337 338 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 361 362 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 362 367 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 367 368 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 393 394 (tag-name "v-select" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 394 402 (tag-name "v-select" tag-type start font-lock-face web-mode-html-tag-custom-face) 402 403 (tag-name "v-select" tag-type start) 403 429 (tag-name "v-select" tag-type start) 429 430 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 430 434 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 434 435 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 435 450 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 450 451 (tag-attr t tag-attr-end 5 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 451 478 (tag-name "v-select" tag-type start) 478 479 (tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 479 485 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 485 486 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 486 521 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 521 522 (tag-attr t tag-attr-end 7 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 522 549 (tag-name "v-select" tag-type start) 549 550 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 550 551 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 551 552 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 552 553 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 553 554 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 554 555 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 555 556 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 556 557 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 557 558 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 558 559 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 559 560 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 560 561 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 561 562 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 562 563 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 563 564 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 564 565 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 565 566 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 566 567 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 567 568 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 568 569 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 569 570 (block-side t tag-attr t tag-name "v-select" tag-type start) 570 571 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 571 572 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 572 573 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 573 574 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 574 576 (block-side t tag-attr t tag-name "v-select" tag-type start) 576 577 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 577 578 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 578 579 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 579 580 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 580 581 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 581 582 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 582 583 (block-side t tag-attr t tag-name "v-select" tag-type start) 583 584 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 584 585 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 585 593 (block-side t tag-attr t tag-name "v-select" tag-type start) 593 594 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 594 621 (tag-name "v-select" tag-type start) 621 622 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 622 623 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 623 624 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 624 625 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 625 626 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 626 627 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 627 628 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 628 629 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 629 630 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 630 652 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-function-call-face) 652 653 (block-side t tag-attr t tag-name "v-select" tag-type start) 653 654 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 654 655 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 655 656 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 656 657 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 657 659 (block-side t tag-attr t tag-name "v-select" tag-type start) 659 660 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 660 661 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 661 662 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 662 663 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 663 664 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 664 665 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 665 666 (block-side t tag-attr t tag-name "v-select" tag-type start) 666 667 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 667 668 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 668 671 (block-side t tag-attr t tag-name "v-select" tag-type start) 671 672 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 7 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 672 699 (tag-name "v-select" tag-type start) 699 700 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 700 701 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 701 702 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 702 703 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 703 704 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 704 705 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 705 706 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 706 707 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 707 708 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 708 709 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 709 710 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 710 711 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 711 712 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 712 713 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 713 714 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 714 715 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 715 716 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 716 717 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 717 718 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 718 719 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 719 720 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 720 721 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 721 722 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 722 723 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 723 724 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 724 725 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 725 726 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 726 727 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 727 728 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 728 729 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 729 756 (tag-name "v-select" tag-type start) 756 757 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 757 758 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 758 759 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 759 760 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 760 761 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 761 762 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 762 763 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 763 764 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 764 765 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 765 766 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 766 767 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 767 768 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 768 769 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 769 770 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 770 771 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 771 772 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 772 773 (block-side t block-token delimiter-beg tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 773 774 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 774 775 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 775 776 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 776 777 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 777 778 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 778 779 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 779 780 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 780 781 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 781 782 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 782 783 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 783 784 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 784 785 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 785 786 (block-side t tag-attr t tag-name "v-select" tag-type start) 786 787 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 787 788 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 788 789 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 789 790 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 790 792 (block-side t tag-attr t tag-name "v-select" tag-type start) 792 793 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 793 794 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 794 795 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 795 796 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 796 797 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 797 798 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 798 799 (block-side t tag-attr t tag-name "v-select" tag-type start) 799 800 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 800 801 (block-side t tag-attr t tag-name "v-select" tag-type start face web-mode-variable-name-face) 801 804 (block-side t tag-attr t tag-name "v-select" tag-type start) 804 805 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 15 tag-name "v-select" tag-type start font-lock-face web-mode-block-delimiter-face) 805 832 (tag-name "v-select" tag-type start) 832 833 (tag-attr-beg 2 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 833 843 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-engine-face) 843 844 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 844 845 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 845 846 (tag-attr t tag-attr-end 11 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 846 873 (tag-name "v-select" tag-type start) 873 874 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 874 881 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 881 882 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 882 909 (tag-name "v-select" tag-type start) 909 910 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 910 913 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 913 914 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 914 939 (tag-name "v-select" tag-type start) 939 940 (tag-name "v-select" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 940 941 (tag-name "v-select" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 941 942 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-bracket-face) 942 950 (tag-name "v-select" tag-type end font-lock-face web-mode-html-tag-custom-face) 950 951 (tag-name "v-select" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 974 975 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 975 976 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 976 981 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 981 982 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 7704) (undo-tree-id2428 . -982) (undo-tree-id2429 . -338) (undo-tree-id2430 . -402) (undo-tree-id2431 . -1) (undo-tree-id2432 . -110) (undo-tree-id2433 . -110) (undo-tree-id2434 . -982) (t 25671 53688 564212 875000)) nil (25671 53751 373574 219000) 0 nil] [nil nil ((27968 . 27973)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 27968) (undo-tree-id2371 . -5) (undo-tree-id2372 . -5) (undo-tree-id2373 . -5) (undo-tree-id2374 . -1) (undo-tree-id2375 . -5) (undo-tree-id2376 . -5) (undo-tree-id2377 . -5) (undo-tree-id2378 . -5) (undo-tree-id2379 . -5) (undo-tree-id2380 . -5) (undo-tree-id2381 . -5) (undo-tree-id2382 . -5) (undo-tree-id2383 . -5) (undo-tree-id2384 . -5) (undo-tree-id2385 . -5) (undo-tree-id2386 . -5) (undo-tree-id2387 . -5) (undo-tree-id2388 . -5) (undo-tree-id2389 . -5) (undo-tree-id2390 . -5) (undo-tree-id2391 . -5) (undo-tree-id2392 . -5) (undo-tree-id2393 . -5) (undo-tree-id2394 . -5) (undo-tree-id2395 . -5) (undo-tree-id2396 . -5) (undo-tree-id2397 . -5) (undo-tree-id2398 . -5) (undo-tree-id2399 . -5) (undo-tree-id2400 . -5) (undo-tree-id2401 . -5) (undo-tree-id2402 . -5) (undo-tree-id2403 . -5) (undo-tree-id2404 . -5) (undo-tree-id2405 . -5) (undo-tree-id2406 . -5) (undo-tree-id2407 . -5) (undo-tree-id2408 . -5) (undo-tree-id2409 . -5) (undo-tree-id2410 . -5) (undo-tree-id2411 . -5) (undo-tree-id2412 . -5) (undo-tree-id2413 . -5) (undo-tree-id2414 . -5) (undo-tree-id2415 . -5) (undo-tree-id2416 . -5) (undo-tree-id2417 . -5) (undo-tree-id2418 . -5) (undo-tree-id2419 . -5)) (25671 53687 336142 539000) 0 nil])
([nil nil ((7704 . 7727)) nil (25671 53751 373564 538000) 0 nil])
([nil nil ((27973 . 27991)) ((#("margin-top: -5px; " 0 11 (part-side css face web-mode-css-property-name-face) 11 13 (part-side css) 13 14 (part-side css) 14 17 (part-side css) 17 18 (part-side css)) . 27973) (undo-tree-id2329 . -17) (undo-tree-id2330 . -17) (undo-tree-id2331 . -18) (undo-tree-id2332 . -17) (undo-tree-id2333 . -17) (undo-tree-id2334 . -17) (undo-tree-id2335 . -17) (undo-tree-id2336 . -17) (undo-tree-id2337 . -17) (undo-tree-id2338 . -17) (undo-tree-id2339 . -17) (undo-tree-id2340 . -17) (undo-tree-id2341 . -17) (undo-tree-id2342 . -17) (undo-tree-id2343 . -17) (undo-tree-id2344 . -17) (undo-tree-id2345 . -13) (undo-tree-id2346 . -13) (undo-tree-id2347 . -13) (undo-tree-id2348 . -13) (undo-tree-id2349 . -13) (undo-tree-id2350 . -13) (undo-tree-id2351 . -13) (undo-tree-id2352 . -14) (undo-tree-id2353 . -14) (undo-tree-id2354 . -14) (undo-tree-id2355 . -14) (undo-tree-id2356 . -14) (undo-tree-id2357 . -14) (undo-tree-id2358 . -14) (undo-tree-id2359 . -17) (undo-tree-id2360 . -18) (undo-tree-id2361 . -18) (undo-tree-id2362 . -18) (undo-tree-id2363 . -18) (undo-tree-id2364 . -18) (undo-tree-id2365 . -18) (undo-tree-id2366 . -18) (undo-tree-id2367 . -18) (undo-tree-id2368 . -18) (undo-tree-id2369 . -18) (undo-tree-id2370 . -18)) (25671 53687 81680 281000) 0 nil])
([nil nil ((11516 . 11539)) nil (25671 53751 373563 485000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27990) (undo-tree-id1727 . -1) (undo-tree-id1729 . -1) (undo-tree-id1731 . -1) (undo-tree-id1733 . -1) 27991) ((27990 . 27991)) (25671 53686 839874 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12520 . 12521) (nil tag-name "v-col" 12520 . 12521) (nil tag-type end 12520 . 12521) (nil tag-end t 12520 . 12521) (nil font-lock-face web-mode-html-tag-bracket-face 12520 . 12521) (nil tag-name "v-col" 12515 . 12520) (nil tag-type end 12515 . 12520) (nil font-lock-face web-mode-html-tag-custom-face 12515 . 12520) (nil tag-name "v-col" 12514 . 12515) (nil tag-type end 12514 . 12515) (nil font-lock-face web-mode-html-tag-bracket-face 12514 . 12515) (nil tag-name "v-col" 12513 . 12514) (nil tag-type end 12513 . 12514) (nil tag-beg 22 12513 . 12514) (nil font-lock-face web-mode-html-tag-bracket-face 12513 . 12514) (nil tag-name "v-select" 12489 . 12490) (nil tag-type end 12489 . 12490) (nil tag-end t 12489 . 12490) (nil font-lock-face web-mode-html-tag-bracket-face 12489 . 12490) (nil tag-name "v-select" 12481 . 12489) (nil tag-type end 12481 . 12489) (nil font-lock-face web-mode-html-tag-custom-face 12481 . 12489) (nil tag-name "v-select" 12480 . 12481) (nil tag-type end 12480 . 12481) (nil font-lock-face web-mode-html-tag-bracket-face 12480 . 12481) (nil tag-name "v-select" 12479 . 12480) (nil tag-type end 12479 . 12480) (nil tag-beg 22 12479 . 12480) (nil font-lock-face web-mode-html-tag-bracket-face 12479 . 12480) (nil tag-name "v-select" 12478 . 12479) (nil tag-type start 12478 . 12479) (nil tag-end t 12478 . 12479) (nil font-lock-face web-mode-html-tag-bracket-face 12478 . 12479) (nil tag-name "v-select" 12453 . 12478) (nil tag-type start 12453 . 12478) (nil tag-attr t 12452 . 12453) (nil tag-attr-end 0 12452 . 12453) (nil tag-name "v-select" 12452 . 12453) (nil tag-type start 12452 . 12453) (nil font-lock-face web-mode-html-attr-name-face 12452 . 12453) (nil tag-attr t 12449 . 12452) (nil tag-name "v-select" 12449 . 12452) (nil tag-type start 12449 . 12452) (nil font-lock-face web-mode-html-attr-name-face 12449 . 12452) (nil tag-attr-beg 0 12448 . 12449) (nil tag-attr t 12448 . 12449) (nil tag-name "v-select" 12448 . 12449) (nil tag-type start 12448 . 12449) (nil font-lock-face web-mode-html-attr-name-face 12448 . 12449) (nil tag-name "v-select" 12421 . 12448) (nil tag-type start 12421 . 12448) (nil tag-attr t 12420 . 12421) (nil tag-attr-end 0 12420 . 12421) (nil tag-name "v-select" 12420 . 12421) (nil tag-type start 12420 . 12421) (nil font-lock-face web-mode-html-attr-name-face 12420 . 12421) (nil tag-attr t 12413 . 12420) (nil tag-name "v-select" 12413 . 12420) (nil tag-type start 12413 . 12420) (nil font-lock-face web-mode-html-attr-name-face 12413 . 12420) (nil tag-attr-beg 0 12412 . 12413) (nil tag-attr t 12412 . 12413) (nil tag-name "v-select" 12412 . 12413) (nil tag-type start 12412 . 12413) (nil font-lock-face web-mode-html-attr-name-face 12412 . 12413) (nil tag-name "v-select" 12385 . 12412) (nil tag-type start 12385 . 12412) (nil tag-attr t 12384 . 12385) (nil tag-attr-end 11 12384 . 12385) (nil tag-name "v-select" 12384 . 12385) (nil tag-type start 12384 . 12385) (nil font-lock-face web-mode-html-attr-value-face 12384 . 12385) (nil tag-attr t 12383 . 12384) (nil tag-name "v-select" 12383 . 12384) (nil tag-type start 12383 . 12384) (nil font-lock-face web-mode-html-attr-value-face 12383 . 12384) (nil tag-attr t 12382 . 12383) (nil tag-name "v-select" 12382 . 12383) (nil tag-type start 12382 . 12383) (nil font-lock-face web-mode-html-attr-equal-face 12382 . 12383) (nil tag-attr t 12372 . 12382) (nil tag-name "v-select" 12372 . 12382) (nil tag-type start 12372 . 12382) (nil font-lock-face web-mode-html-attr-engine-face 12372 . 12382) (nil tag-attr-beg 2 12371 . 12372) (nil tag-attr t 12371 . 12372) (nil tag-name "v-select" 12371 . 12372) (nil tag-type start 12371 . 12372) (nil font-lock-face web-mode-html-attr-engine-face 12371 . 12372) (nil tag-name "v-select" 12344 . 12371) (nil tag-type start 12344 . 12371) (nil block-side t 12343 . 12344) (nil block-end t 12343 . 12344) (nil block-token delimiter-end 12343 . 12344) (nil tag-attr t 12343 . 12344) (nil tag-attr-end 15 12343 . 12344) (nil tag-name "v-select" 12343 . 12344) (nil tag-type start 12343 . 12344) (nil font-lock-face web-mode-block-delimiter-face 12343 . 12344) (nil block-side t 12340 . 12343) (nil tag-attr t 12340 . 12343) (nil tag-name "v-select" 12340 . 12343) (nil tag-type start 12340 . 12343) (nil block-side t 12339 . 12340) (nil tag-attr t 12339 . 12340) (nil tag-name "v-select" 12339 . 12340) (nil tag-type start 12339 . 12340) (nil face web-mode-variable-name-face 12339 . 12340) (nil block-side t 12338 . 12339) (nil tag-attr t 12338 . 12339) (nil tag-name "v-select" 12338 . 12339) (nil tag-type start 12338 . 12339) (nil face web-mode-variable-name-face 12338 . 12339) (nil block-side t 12337 . 12338) (nil tag-attr t 12337 . 12338) (nil tag-name "v-select" 12337 . 12338) (nil tag-type start 12337 . 12338) (nil block-side t 12336 . 12337) (nil tag-attr t 12336 . 12337) (nil tag-name "v-select" 12336 . 12337) (nil tag-type start 12336 . 12337) (nil face web-mode-variable-name-face 12336 . 12337) (nil block-side t 12335 . 12336) (nil tag-attr t 12335 . 12336) (nil tag-name "v-select" 12335 . 12336) (nil tag-type start 12335 . 12336) (nil face web-mode-variable-name-face 12335 . 12336) (nil block-side t 12334 . 12335) (nil tag-attr t 12334 . 12335) (nil tag-name "v-select" 12334 . 12335) (nil tag-type start 12334 . 12335) (nil face web-mode-variable-name-face 12334 . 12335) (nil block-side t 12333 . 12334) (nil tag-attr t 12333 . 12334) (nil tag-name "v-select" 12333 . 12334) (nil tag-type start 12333 . 12334) (nil face web-mode-variable-name-face 12333 . 12334) (nil block-side t 12332 . 12333) (nil tag-attr t 12332 . 12333) (nil tag-name "v-select" 12332 . 12333) (nil tag-type start 12332 . 12333) (nil face web-mode-variable-name-face 12332 . 12333) (nil block-side t 12331 . 12332) (nil tag-attr t 12331 . 12332) (nil tag-name "v-select" 12331 . 12332) (nil tag-type start 12331 . 12332) (nil face web-mode-variable-name-face 12331 . 12332) (nil block-side t 12329 . 12331) (nil tag-attr t 12329 . 12331) (nil tag-name "v-select" 12329 . 12331) (nil tag-type start 12329 . 12331) (nil block-side t 12328 . 12329) (nil tag-attr t 12328 . 12329) (nil tag-name "v-select" 12328 . 12329) (nil tag-type start 12328 . 12329) (nil face web-mode-variable-name-face 12328 . 12329) (nil block-side t 12327 . 12328) (nil tag-attr t 12327 . 12328) (nil tag-name "v-select" 12327 . 12328) (nil tag-type start 12327 . 12328) (nil face web-mode-variable-name-face 12327 . 12328) (nil block-side t 12326 . 12327) (nil tag-attr t 12326 . 12327) (nil tag-name "v-select" 12326 . 12327) (nil tag-type start 12326 . 12327) (nil face web-mode-variable-name-face 12326 . 12327) (nil block-side t 12325 . 12326) (nil tag-attr t 12325 . 12326) (nil tag-name "v-select" 12325 . 12326) (nil tag-type start 12325 . 12326) (nil face web-mode-variable-name-face 12325 . 12326) (nil block-side t 12324 . 12325) (nil tag-attr t 12324 . 12325) (nil tag-name "v-select" 12324 . 12325) (nil tag-type start 12324 . 12325) (nil block-side t 12323 . 12324) (nil tag-attr t 12323 . 12324) (nil tag-name "v-select" 12323 . 12324) (nil tag-type start 12323 . 12324) (nil face web-mode-variable-name-face 12323 . 12324) (nil block-side t 12322 . 12323) (nil tag-attr t 12322 . 12323) (nil tag-name "v-select" 12322 . 12323) (nil tag-type start 12322 . 12323) (nil face web-mode-variable-name-face 12322 . 12323) (nil block-side t 12321 . 12322) (nil tag-attr t 12321 . 12322) (nil tag-name "v-select" 12321 . 12322) (nil tag-type start 12321 . 12322) (nil face web-mode-variable-name-face 12321 . 12322) (nil block-side t 12320 . 12321) (nil tag-attr t 12320 . 12321) (nil tag-name "v-select" 12320 . 12321) (nil tag-type start 12320 . 12321) (nil face web-mode-variable-name-face 12320 . 12321) (nil block-side t 12319 . 12320) (nil tag-attr t 12319 . 12320) (nil tag-name "v-select" 12319 . 12320) (nil tag-type start 12319 . 12320) (nil face web-mode-variable-name-face 12319 . 12320) (nil block-side t 12318 . 12319) (nil tag-attr t 12318 . 12319) (nil tag-name "v-select" 12318 . 12319) (nil tag-type start 12318 . 12319) (nil face web-mode-variable-name-face 12318 . 12319) (nil block-side t 12317 . 12318) (nil tag-attr t 12317 . 12318) (nil tag-name "v-select" 12317 . 12318) (nil tag-type start 12317 . 12318) (nil face web-mode-variable-name-face 12317 . 12318) (nil block-side t 12316 . 12317) (nil tag-attr t 12316 . 12317) (nil tag-name "v-select" 12316 . 12317) (nil tag-type start 12316 . 12317) (nil face web-mode-variable-name-face 12316 . 12317) (nil block-side t 12315 . 12316) (nil tag-attr t 12315 . 12316) (nil tag-name "v-select" 12315 . 12316) (nil tag-type start 12315 . 12316) (nil face web-mode-variable-name-face 12315 . 12316) (nil block-side t 12314 . 12315) (nil tag-attr t 12314 . 12315) (nil tag-name "v-select" 12314 . 12315) (nil tag-type start 12314 . 12315) (nil face web-mode-variable-name-face 12314 . 12315) (nil block-side t 12313 . 12314) (nil tag-attr t 12313 . 12314) (nil tag-name "v-select" 12313 . 12314) (nil tag-type start 12313 . 12314) (nil face web-mode-variable-name-face 12313 . 12314) (nil block-side t 12312 . 12313) (nil tag-attr t 12312 . 12313) (nil tag-name "v-select" 12312 . 12313) (nil tag-type start 12312 . 12313) (nil face web-mode-variable-name-face 12312 . 12313) (nil block-side t 12311 . 12312) (nil block-token delimiter-beg 12311 . 12312) (nil tag-attr t 12311 . 12312) (nil tag-name "v-select" 12311 . 12312) (nil tag-type start 12311 . 12312) (nil font-lock-face web-mode-block-delimiter-face 12311 . 12312) (nil block-side t 12310 . 12311) (nil block-token delimiter-beg 12310 . 12311) (nil tag-attr t 12310 . 12311) (nil tag-name "v-select" 12310 . 12311) (nil tag-type start 12310 . 12311) (nil font-lock-face web-mode-block-delimiter-face 12310 . 12311) (nil block-side t 12309 . 12310) (nil block-token delimiter-beg 12309 . 12310) (nil tag-attr t 12309 . 12310) (nil tag-name "v-select" 12309 . 12310) (nil tag-type start 12309 . 12310) (nil font-lock-face web-mode-block-delimiter-face 12309 . 12310) (nil block-side t 12308 . 12309) (nil block-token delimiter-beg 12308 . 12309) (nil tag-attr t 12308 . 12309) (nil tag-name "v-select" 12308 . 12309) (nil tag-type start 12308 . 12309) (nil font-lock-face web-mode-block-delimiter-face 12308 . 12309) (nil block-side t 12307 . 12308) (nil block-token delimiter-beg 12307 . 12308) (nil tag-attr t 12307 . 12308) (nil tag-name "v-select" 12307 . 12308) (nil tag-type start 12307 . 12308) (nil font-lock-face web-mode-block-delimiter-face 12307 . 12308) (nil block-side t 12306 . 12307) (nil block-token delimiter-beg 12306 . 12307) (nil tag-attr t 12306 . 12307) (nil tag-name "v-select" 12306 . 12307) (nil tag-type start 12306 . 12307) (nil font-lock-face web-mode-block-delimiter-face 12306 . 12307) (nil block-side t 12305 . 12306) (nil block-token delimiter-beg 12305 . 12306) (nil tag-attr t 12305 . 12306) (nil tag-name "v-select" 12305 . 12306) (nil tag-type start 12305 . 12306) (nil font-lock-face web-mode-block-delimiter-face 12305 . 12306) (nil block-side t 12304 . 12305) (nil block-token delimiter-beg 12304 . 12305) (nil tag-attr t 12304 . 12305) (nil tag-name "v-select" 12304 . 12305) (nil tag-type start 12304 . 12305) (nil font-lock-face web-mode-block-delimiter-face 12304 . 12305) (nil block-side t 12303 . 12304) (nil block-token delimiter-beg 12303 . 12304) (nil tag-attr t 12303 . 12304) (nil tag-name "v-select" 12303 . 12304) (nil tag-type start 12303 . 12304) (nil font-lock-face web-mode-block-delimiter-face 12303 . 12304) (nil block-side t 12302 . 12303) (nil block-token delimiter-beg 12302 . 12303) (nil tag-attr t 12302 . 12303) (nil tag-name "v-select" 12302 . 12303) (nil tag-type start 12302 . 12303) (nil font-lock-face web-mode-block-delimiter-face 12302 . 12303) (nil block-side t 12301 . 12302) (nil block-token delimiter-beg 12301 . 12302) (nil tag-attr t 12301 . 12302) (nil tag-name "v-select" 12301 . 12302) (nil tag-type start 12301 . 12302) (nil font-lock-face web-mode-block-delimiter-face 12301 . 12302) (nil block-side t 12300 . 12301) (nil block-token delimiter-beg 12300 . 12301) (nil tag-attr t 12300 . 12301) (nil tag-name "v-select" 12300 . 12301) (nil tag-type start 12300 . 12301) (nil font-lock-face web-mode-block-delimiter-face 12300 . 12301) (nil block-side t 12299 . 12300) (nil block-token delimiter-beg 12299 . 12300) (nil tag-attr t 12299 . 12300) (nil tag-name "v-select" 12299 . 12300) (nil tag-type start 12299 . 12300) (nil font-lock-face web-mode-block-delimiter-face 12299 . 12300) (nil block-side t 12298 . 12299) (nil block-token delimiter-beg 12298 . 12299) (nil tag-attr t 12298 . 12299) (nil tag-name "v-select" 12298 . 12299) (nil tag-type start 12298 . 12299) (nil font-lock-face web-mode-block-delimiter-face 12298 . 12299) (nil block-side t 12297 . 12298) (nil block-token delimiter-beg 12297 . 12298) (nil tag-attr t 12297 . 12298) (nil tag-name "v-select" 12297 . 12298) (nil tag-type start 12297 . 12298) (nil font-lock-face web-mode-block-delimiter-face 12297 . 12298) (nil block-side t 12296 . 12297) (nil block-token delimiter-beg 12296 . 12297) (nil tag-attr t 12296 . 12297) (nil tag-name "v-select" 12296 . 12297) (nil tag-type start 12296 . 12297) (nil font-lock-face web-mode-block-delimiter-face 12296 . 12297) (nil block-beg 0 12295 . 12296) (nil block-controls 0 12295 . 12296) (nil block-side t 12295 . 12296) (nil block-token delimiter-beg 12295 . 12296) (nil tag-attr-beg 2 12295 . 12296) (nil tag-attr t 12295 . 12296) (nil tag-name "v-select" 12295 . 12296) (nil tag-type start 12295 . 12296) (nil font-lock-face web-mode-block-delimiter-face 12295 . 12296) (nil tag-name "v-select" 12268 . 12295) (nil tag-type start 12268 . 12295) (nil block-side t 12267 . 12268) (nil block-end t 12267 . 12268) (nil block-token delimiter-end 12267 . 12268) (nil tag-attr t 12267 . 12268) (nil tag-attr-end 6 12267 . 12268) (nil tag-name "v-select" 12267 . 12268) (nil tag-type start 12267 . 12268) (nil font-lock-face web-mode-block-delimiter-face 12267 . 12268) (nil block-side t 12266 . 12267) (nil tag-attr t 12266 . 12267) (nil tag-name "v-select" 12266 . 12267) (nil tag-type start 12266 . 12267) (nil face web-mode-variable-name-face 12266 . 12267) (nil block-side t 12265 . 12266) (nil tag-attr t 12265 . 12266) (nil tag-name "v-select" 12265 . 12266) (nil tag-type start 12265 . 12266) (nil face web-mode-variable-name-face 12265 . 12266) (nil block-side t 12264 . 12265) (nil tag-attr t 12264 . 12265) (nil tag-name "v-select" 12264 . 12265) (nil tag-type start 12264 . 12265) (nil face web-mode-variable-name-face 12264 . 12265) (nil block-side t 12263 . 12264) (nil tag-attr t 12263 . 12264) (nil tag-name "v-select" 12263 . 12264) (nil tag-type start 12263 . 12264) (nil face web-mode-variable-name-face 12263 . 12264) (nil block-side t 12262 . 12263) (nil tag-attr t 12262 . 12263) (nil tag-name "v-select" 12262 . 12263) (nil tag-type start 12262 . 12263) (nil face web-mode-variable-name-face 12262 . 12263) (nil block-side t 12261 . 12262) (nil tag-attr t 12261 . 12262) (nil tag-name "v-select" 12261 . 12262) (nil tag-type start 12261 . 12262) (nil face web-mode-variable-name-face 12261 . 12262) (nil block-side t 12260 . 12261) (nil tag-attr t 12260 . 12261) (nil tag-name "v-select" 12260 . 12261) (nil tag-type start 12260 . 12261) (nil face web-mode-variable-name-face 12260 . 12261) (nil block-side t 12259 . 12260) (nil tag-attr t 12259 . 12260) (nil tag-name "v-select" 12259 . 12260) (nil tag-type start 12259 . 12260) (nil face web-mode-variable-name-face 12259 . 12260) (nil block-side t 12258 . 12259) (nil tag-attr t 12258 . 12259) (nil tag-name "v-select" 12258 . 12259) (nil tag-type start 12258 . 12259) (nil face web-mode-variable-name-face 12258 . 12259) (nil block-side t 12257 . 12258) (nil tag-attr t 12257 . 12258) (nil tag-name "v-select" 12257 . 12258) (nil tag-type start 12257 . 12258) (nil face web-mode-variable-name-face 12257 . 12258) (nil block-side t 12256 . 12257) (nil tag-attr t 12256 . 12257) (nil tag-name "v-select" 12256 . 12257) (nil tag-type start 12256 . 12257) (nil face web-mode-variable-name-face 12256 . 12257) (nil block-side t 12255 . 12256) (nil tag-attr t 12255 . 12256) (nil tag-name "v-select" 12255 . 12256) (nil tag-type start 12255 . 12256) (nil face web-mode-variable-name-face 12255 . 12256) (nil block-side t 12254 . 12255) (nil tag-attr t 12254 . 12255) (nil tag-name "v-select" 12254 . 12255) (nil tag-type start 12254 . 12255) (nil face web-mode-variable-name-face 12254 . 12255) (nil block-side t 12253 . 12254) (nil tag-attr t 12253 . 12254) (nil tag-name "v-select" 12253 . 12254) (nil tag-type start 12253 . 12254) (nil face web-mode-variable-name-face 12253 . 12254) (nil block-side t 12252 . 12253) (nil tag-attr t 12252 . 12253) (nil tag-name "v-select" 12252 . 12253) (nil tag-type start 12252 . 12253) (nil face web-mode-variable-name-face 12252 . 12253) (nil block-side t 12251 . 12252) (nil tag-attr t 12251 . 12252) (nil tag-name "v-select" 12251 . 12252) (nil tag-type start 12251 . 12252) (nil face web-mode-variable-name-face 12251 . 12252) (nil block-side t 12250 . 12251) (nil tag-attr t 12250 . 12251) (nil tag-name "v-select" 12250 . 12251) (nil tag-type start 12250 . 12251) (nil face web-mode-variable-name-face 12250 . 12251) (nil block-side t 12249 . 12250) (nil tag-attr t 12249 . 12250) (nil tag-name "v-select" 12249 . 12250) (nil tag-type start 12249 . 12250) (nil face web-mode-variable-name-face 12249 . 12250) (nil block-side t 12248 . 12249) (nil tag-attr t 12248 . 12249) (nil tag-name "v-select" 12248 . 12249) (nil tag-type start 12248 . 12249) (nil face web-mode-variable-name-face 12248 . 12249) (nil block-side t 12247 . 12248) (nil tag-attr t 12247 . 12248) (nil tag-name "v-select" 12247 . 12248) (nil tag-type start 12247 . 12248) (nil face web-mode-variable-name-face 12247 . 12248) (nil block-side t 12246 . 12247) (nil tag-attr t 12246 . 12247) (nil tag-name "v-select" 12246 . 12247) (nil tag-type start 12246 . 12247) (nil face web-mode-variable-name-face 12246 . 12247) (nil block-side t 12245 . 12246) (nil block-token delimiter-beg 12245 . 12246) (nil tag-attr t 12245 . 12246) (nil tag-name "v-select" 12245 . 12246) (nil tag-type start 12245 . 12246) (nil font-lock-face web-mode-block-delimiter-face 12245 . 12246) (nil block-side t 12244 . 12245) (nil block-token delimiter-beg 12244 . 12245) (nil tag-attr t 12244 . 12245) (nil tag-name "v-select" 12244 . 12245) (nil tag-type start 12244 . 12245) (nil font-lock-face web-mode-block-delimiter-face 12244 . 12245) (nil block-side t 12243 . 12244) (nil block-token delimiter-beg 12243 . 12244) (nil tag-attr t 12243 . 12244) (nil tag-name "v-select" 12243 . 12244) (nil tag-type start 12243 . 12244) (nil font-lock-face web-mode-block-delimiter-face 12243 . 12244) (nil block-side t 12242 . 12243) (nil block-token delimiter-beg 12242 . 12243) (nil tag-attr t 12242 . 12243) (nil tag-name "v-select" 12242 . 12243) (nil tag-type start 12242 . 12243) (nil font-lock-face web-mode-block-delimiter-face 12242 . 12243) (nil block-side t 12241 . 12242) (nil block-token delimiter-beg 12241 . 12242) (nil tag-attr t 12241 . 12242) (nil tag-name "v-select" 12241 . 12242) (nil tag-type start 12241 . 12242) (nil font-lock-face web-mode-block-delimiter-face 12241 . 12242) (nil block-side t 12240 . 12241) (nil block-token delimiter-beg 12240 . 12241) (nil tag-attr t 12240 . 12241) (nil tag-name "v-select" 12240 . 12241) (nil tag-type start 12240 . 12241) (nil font-lock-face web-mode-block-delimiter-face 12240 . 12241) (nil block-side t 12239 . 12240) (nil block-token delimiter-beg 12239 . 12240) (nil tag-attr t 12239 . 12240) (nil tag-name "v-select" 12239 . 12240) (nil tag-type start 12239 . 12240) (nil font-lock-face web-mode-block-delimiter-face 12239 . 12240) (nil block-beg 0 12238 . 12239) (nil block-controls 0 12238 . 12239) (nil block-side t 12238 . 12239) (nil block-token delimiter-beg 12238 . 12239) (nil tag-attr-beg 2 12238 . 12239) (nil tag-attr t 12238 . 12239) (nil tag-name "v-select" 12238 . 12239) (nil tag-type start 12238 . 12239) (nil font-lock-face web-mode-block-delimiter-face 12238 . 12239) (nil tag-name "v-select" 12211 . 12238) (nil tag-type start 12211 . 12238) (nil block-side t 12210 . 12211) (nil block-end t 12210 . 12211) (nil block-token delimiter-end 12210 . 12211) (nil tag-attr t 12210 . 12211) (nil tag-attr-end 7 12210 . 12211) (nil tag-name "v-select" 12210 . 12211) (nil tag-type start 12210 . 12211) (nil font-lock-face web-mode-block-delimiter-face 12210 . 12211) (nil block-side t 12207 . 12210) (nil tag-attr t 12207 . 12210) (nil tag-name "v-select" 12207 . 12210) (nil tag-type start 12207 . 12210) (nil block-side t 12206 . 12207) (nil tag-attr t 12206 . 12207) (nil tag-name "v-select" 12206 . 12207) (nil tag-type start 12206 . 12207) (nil face web-mode-variable-name-face 12206 . 12207) (nil block-side t 12205 . 12206) (nil tag-attr t 12205 . 12206) (nil tag-name "v-select" 12205 . 12206) (nil tag-type start 12205 . 12206) (nil face web-mode-variable-name-face 12205 . 12206) (nil block-side t 12204 . 12205) (nil tag-attr t 12204 . 12205) (nil tag-name "v-select" 12204 . 12205) (nil tag-type start 12204 . 12205) (nil block-side t 12203 . 12204) (nil tag-attr t 12203 . 12204) (nil tag-name "v-select" 12203 . 12204) (nil tag-type start 12203 . 12204) (nil face web-mode-variable-name-face 12203 . 12204) (nil block-side t 12202 . 12203) (nil tag-attr t 12202 . 12203) (nil tag-name "v-select" 12202 . 12203) (nil tag-type start 12202 . 12203) (nil face web-mode-variable-name-face 12202 . 12203) (nil block-side t 12201 . 12202) (nil tag-attr t 12201 . 12202) (nil tag-name "v-select" 12201 . 12202) (nil tag-type start 12201 . 12202) (nil face web-mode-variable-name-face 12201 . 12202) (nil block-side t 12200 . 12201) (nil tag-attr t 12200 . 12201) (nil tag-name "v-select" 12200 . 12201) (nil tag-type start 12200 . 12201) (nil face web-mode-variable-name-face 12200 . 12201) (nil block-side t 12199 . 12200) (nil tag-attr t 12199 . 12200) (nil tag-name "v-select" 12199 . 12200) (nil tag-type start 12199 . 12200) (nil face web-mode-variable-name-face 12199 . 12200) (nil block-side t 12198 . 12199) (nil tag-attr t 12198 . 12199) (nil tag-name "v-select" 12198 . 12199) (nil tag-type start 12198 . 12199) (nil face web-mode-variable-name-face 12198 . 12199) (nil block-side t 12196 . 12198) (nil tag-attr t 12196 . 12198) (nil tag-name "v-select" 12196 . 12198) (nil tag-type start 12196 . 12198) (nil block-side t 12195 . 12196) (nil tag-attr t 12195 . 12196) (nil tag-name "v-select" 12195 . 12196) (nil tag-type start 12195 . 12196) (nil face web-mode-variable-name-face 12195 . 12196) (nil block-side t 12194 . 12195) (nil tag-attr t 12194 . 12195) (nil tag-name "v-select" 12194 . 12195) (nil tag-type start 12194 . 12195) (nil face web-mode-variable-name-face 12194 . 12195) (nil block-side t 12193 . 12194) (nil tag-attr t 12193 . 12194) (nil tag-name "v-select" 12193 . 12194) (nil tag-type start 12193 . 12194) (nil face web-mode-variable-name-face 12193 . 12194) (nil block-side t 12192 . 12193) (nil tag-attr t 12192 . 12193) (nil tag-name "v-select" 12192 . 12193) (nil tag-type start 12192 . 12193) (nil face web-mode-variable-name-face 12192 . 12193) (nil block-side t 12191 . 12192) (nil tag-attr t 12191 . 12192) (nil tag-name "v-select" 12191 . 12192) (nil tag-type start 12191 . 12192) (nil block-side t 12169 . 12191) (nil tag-attr t 12169 . 12191) (nil tag-name "v-select" 12169 . 12191) (nil tag-type start 12169 . 12191) (nil face web-mode-function-call-face 12169 . 12191) (nil block-side t 12168 . 12169) (nil block-token delimiter-beg 12168 . 12169) (nil tag-attr t 12168 . 12169) (nil tag-name "v-select" 12168 . 12169) (nil tag-type start 12168 . 12169) (nil font-lock-face web-mode-block-delimiter-face 12168 . 12169) (nil block-side t 12167 . 12168) (nil block-token delimiter-beg 12167 . 12168) (nil tag-attr t 12167 . 12168) (nil tag-name "v-select" 12167 . 12168) (nil tag-type start 12167 . 12168) (nil font-lock-face web-mode-block-delimiter-face 12167 . 12168) (nil block-side t 12166 . 12167) (nil block-token delimiter-beg 12166 . 12167) (nil tag-attr t 12166 . 12167) (nil tag-name "v-select" 12166 . 12167) (nil tag-type start 12166 . 12167) (nil font-lock-face web-mode-block-delimiter-face 12166 . 12167) (nil block-side t 12165 . 12166) (nil block-token delimiter-beg 12165 . 12166) (nil tag-attr t 12165 . 12166) (nil tag-name "v-select" 12165 . 12166) (nil tag-type start 12165 . 12166) (nil font-lock-face web-mode-block-delimiter-face 12165 . 12166) (nil block-side t 12164 . 12165) (nil block-token delimiter-beg 12164 . 12165) (nil tag-attr t 12164 . 12165) (nil tag-name "v-select" 12164 . 12165) (nil tag-type start 12164 . 12165) (nil font-lock-face web-mode-block-delimiter-face 12164 . 12165) (nil block-side t 12163 . 12164) (nil block-token delimiter-beg 12163 . 12164) (nil tag-attr t 12163 . 12164) (nil tag-name "v-select" 12163 . 12164) (nil tag-type start 12163 . 12164) (nil font-lock-face web-mode-block-delimiter-face 12163 . 12164) (nil block-side t 12162 . 12163) (nil block-token delimiter-beg 12162 . 12163) (nil tag-attr t 12162 . 12163) (nil tag-name "v-select" 12162 . 12163) (nil tag-type start 12162 . 12163) (nil font-lock-face web-mode-block-delimiter-face 12162 . 12163) (nil block-side t 12161 . 12162) (nil block-token delimiter-beg 12161 . 12162) (nil tag-attr t 12161 . 12162) (nil tag-name "v-select" 12161 . 12162) (nil tag-type start 12161 . 12162) (nil font-lock-face web-mode-block-delimiter-face 12161 . 12162) (nil block-beg 0 12160 . 12161) (nil block-controls 0 12160 . 12161) (nil block-side t 12160 . 12161) (nil block-token delimiter-beg 12160 . 12161) (nil tag-attr-beg 2 12160 . 12161) (nil tag-attr t 12160 . 12161) (nil tag-name "v-select" 12160 . 12161) (nil tag-type start 12160 . 12161) (nil font-lock-face web-mode-block-delimiter-face 12160 . 12161) (nil tag-name "v-select" 12133 . 12160) (nil tag-type start 12133 . 12160) (nil block-side t 12132 . 12133) (nil block-end t 12132 . 12133) (nil block-token delimiter-end 12132 . 12133) (nil tag-attr t 12132 . 12133) (nil tag-attr-end 6 12132 . 12133) (nil tag-name "v-select" 12132 . 12133) (nil tag-type start 12132 . 12133) (nil font-lock-face web-mode-block-delimiter-face 12132 . 12133) (nil block-side t 12124 . 12132) (nil tag-attr t 12124 . 12132) (nil tag-name "v-select" 12124 . 12132) (nil tag-type start 12124 . 12132) (nil block-side t 12123 . 12124) (nil tag-attr t 12123 . 12124) (nil tag-name "v-select" 12123 . 12124) (nil tag-type start 12123 . 12124) (nil face web-mode-variable-name-face 12123 . 12124) (nil block-side t 12122 . 12123) (nil tag-attr t 12122 . 12123) (nil tag-name "v-select" 12122 . 12123) (nil tag-type start 12122 . 12123) (nil face web-mode-variable-name-face 12122 . 12123) (nil block-side t 12121 . 12122) (nil tag-attr t 12121 . 12122) (nil tag-name "v-select" 12121 . 12122) (nil tag-type start 12121 . 12122) (nil block-side t 12120 . 12121) (nil tag-attr t 12120 . 12121) (nil tag-name "v-select" 12120 . 12121) (nil tag-type start 12120 . 12121) (nil face web-mode-variable-name-face 12120 . 12121) (nil block-side t 12119 . 12120) (nil tag-attr t 12119 . 12120) (nil tag-name "v-select" 12119 . 12120) (nil tag-type start 12119 . 12120) (nil face web-mode-variable-name-face 12119 . 12120) (nil block-side t 12118 . 12119) (nil tag-attr t 12118 . 12119) (nil tag-name "v-select" 12118 . 12119) (nil tag-type start 12118 . 12119) (nil face web-mode-variable-name-face 12118 . 12119) (nil block-side t 12117 . 12118) (nil tag-attr t 12117 . 12118) (nil tag-name "v-select" 12117 . 12118) (nil tag-type start 12117 . 12118) (nil face web-mode-variable-name-face 12117 . 12118) (nil block-side t 12116 . 12117) (nil tag-attr t 12116 . 12117) (nil tag-name "v-select" 12116 . 12117) (nil tag-type start 12116 . 12117) (nil face web-mode-variable-name-face 12116 . 12117) (nil block-side t 12115 . 12116) (nil tag-attr t 12115 . 12116) (nil tag-name "v-select" 12115 . 12116) (nil tag-type start 12115 . 12116) (nil face web-mode-variable-name-face 12115 . 12116) (nil block-side t 12113 . 12115) (nil tag-attr t 12113 . 12115) (nil tag-name "v-select" 12113 . 12115) (nil tag-type start 12113 . 12115) (nil block-side t 12112 . 12113) (nil tag-attr t 12112 . 12113) (nil tag-name "v-select" 12112 . 12113) (nil tag-type start 12112 . 12113) (nil face web-mode-variable-name-face 12112 . 12113) (nil block-side t 12111 . 12112) (nil tag-attr t 12111 . 12112) (nil tag-name "v-select" 12111 . 12112) (nil tag-type start 12111 . 12112) (nil face web-mode-variable-name-face 12111 . 12112) (nil block-side t 12110 . 12111) (nil tag-attr t 12110 . 12111) (nil tag-name "v-select" 12110 . 12111) (nil tag-type start 12110 . 12111) (nil face web-mode-variable-name-face 12110 . 12111) (nil block-side t 12109 . 12110) (nil tag-attr t 12109 . 12110) (nil tag-name "v-select" 12109 . 12110) (nil tag-type start 12109 . 12110) (nil face web-mode-variable-name-face 12109 . 12110) (nil block-side t 12108 . 12109) (nil tag-attr t 12108 . 12109) (nil tag-name "v-select" 12108 . 12109) (nil tag-type start 12108 . 12109) (nil block-side t 12107 . 12108) (nil tag-attr t 12107 . 12108) (nil tag-name "v-select" 12107 . 12108) (nil tag-type start 12107 . 12108) (nil face web-mode-variable-name-face 12107 . 12108) (nil block-side t 12106 . 12107) (nil tag-attr t 12106 . 12107) (nil tag-name "v-select" 12106 . 12107) (nil tag-type start 12106 . 12107) (nil face web-mode-variable-name-face 12106 . 12107) (nil block-side t 12105 . 12106) (nil tag-attr t 12105 . 12106) (nil tag-name "v-select" 12105 . 12106) (nil tag-type start 12105 . 12106) (nil face web-mode-variable-name-face 12105 . 12106) (nil block-side t 12104 . 12105) (nil tag-attr t 12104 . 12105) (nil tag-name "v-select" 12104 . 12105) (nil tag-type start 12104 . 12105) (nil face web-mode-variable-name-face 12104 . 12105) (nil block-side t 12103 . 12104) (nil tag-attr t 12103 . 12104) (nil tag-name "v-select" 12103 . 12104) (nil tag-type start 12103 . 12104) (nil face web-mode-variable-name-face 12103 . 12104) (nil block-side t 12102 . 12103) (nil tag-attr t 12102 . 12103) (nil tag-name "v-select" 12102 . 12103) (nil tag-type start 12102 . 12103) (nil face web-mode-variable-name-face 12102 . 12103) (nil block-side t 12101 . 12102) (nil tag-attr t 12101 . 12102) (nil tag-name "v-select" 12101 . 12102) (nil tag-type start 12101 . 12102) (nil face web-mode-variable-name-face 12101 . 12102) (nil block-side t 12100 . 12101) (nil tag-attr t 12100 . 12101) (nil tag-name "v-select" 12100 . 12101) (nil tag-type start 12100 . 12101) (nil face web-mode-variable-name-face 12100 . 12101) (nil block-side t 12099 . 12100) (nil tag-attr t 12099 . 12100) (nil tag-name "v-select" 12099 . 12100) (nil tag-type start 12099 . 12100) (nil face web-mode-variable-name-face 12099 . 12100) (nil block-side t 12098 . 12099) (nil tag-attr t 12098 . 12099) (nil tag-name "v-select" 12098 . 12099) (nil tag-type start 12098 . 12099) (nil face web-mode-variable-name-face 12098 . 12099) (nil block-side t 12097 . 12098) (nil tag-attr t 12097 . 12098) (nil tag-name "v-select" 12097 . 12098) (nil tag-type start 12097 . 12098) (nil face web-mode-variable-name-face 12097 . 12098) (nil block-side t 12096 . 12097) (nil tag-attr t 12096 . 12097) (nil tag-name "v-select" 12096 . 12097) (nil tag-type start 12096 . 12097) (nil face web-mode-variable-name-face 12096 . 12097) (nil block-side t 12095 . 12096) (nil block-token delimiter-beg 12095 . 12096) (nil tag-attr t 12095 . 12096) (nil tag-name "v-select" 12095 . 12096) (nil tag-type start 12095 . 12096) (nil font-lock-face web-mode-block-delimiter-face 12095 . 12096) (nil block-side t 12094 . 12095) (nil block-token delimiter-beg 12094 . 12095) (nil tag-attr t 12094 . 12095) (nil tag-name "v-select" 12094 . 12095) (nil tag-type start 12094 . 12095) (nil font-lock-face web-mode-block-delimiter-face 12094 . 12095) (nil block-side t 12093 . 12094) (nil block-token delimiter-beg 12093 . 12094) (nil tag-attr t 12093 . 12094) (nil tag-name "v-select" 12093 . 12094) (nil tag-type start 12093 . 12094) (nil font-lock-face web-mode-block-delimiter-face 12093 . 12094) (nil block-side t 12092 . 12093) (nil block-token delimiter-beg 12092 . 12093) (nil tag-attr t 12092 . 12093) (nil tag-name "v-select" 12092 . 12093) (nil tag-type start 12092 . 12093) (nil font-lock-face web-mode-block-delimiter-face 12092 . 12093) (nil block-side t 12091 . 12092) (nil block-token delimiter-beg 12091 . 12092) (nil tag-attr t 12091 . 12092) (nil tag-name "v-select" 12091 . 12092) (nil tag-type start 12091 . 12092) (nil font-lock-face web-mode-block-delimiter-face 12091 . 12092) (nil block-side t 12090 . 12091) (nil block-token delimiter-beg 12090 . 12091) (nil tag-attr t 12090 . 12091) (nil tag-name "v-select" 12090 . 12091) (nil tag-type start 12090 . 12091) (nil font-lock-face web-mode-block-delimiter-face 12090 . 12091) (nil block-side t 12089 . 12090) (nil block-token delimiter-beg 12089 . 12090) (nil tag-attr t 12089 . 12090) (nil tag-name "v-select" 12089 . 12090) (nil tag-type start 12089 . 12090) (nil font-lock-face web-mode-block-delimiter-face 12089 . 12090) (nil block-beg 0 12088 . 12089) (nil block-controls 0 12088 . 12089) (nil block-side t 12088 . 12089) (nil block-token delimiter-beg 12088 . 12089) (nil tag-attr-beg 2 12088 . 12089) (nil tag-attr t 12088 . 12089) (nil tag-name "v-select" 12088 . 12089) (nil tag-type start 12088 . 12089) (nil font-lock-face web-mode-block-delimiter-face 12088 . 12089) (nil tag-name "v-select" 12061 . 12088) (nil tag-type start 12061 . 12088) (nil tag-attr t 12060 . 12061) (nil tag-attr-end 7 12060 . 12061) (nil tag-name "v-select" 12060 . 12061) (nil tag-type start 12060 . 12061) (nil font-lock-face web-mode-html-attr-value-face 12060 . 12061) (nil tag-attr t 12025 . 12060) (nil tag-name "v-select" 12025 . 12060) (nil tag-type start 12025 . 12060) (nil font-lock-face web-mode-html-attr-value-face 12025 . 12060) (nil tag-attr t 12024 . 12025) (nil tag-name "v-select" 12024 . 12025) (nil tag-type start 12024 . 12025) (nil font-lock-face web-mode-html-attr-equal-face 12024 . 12025) (nil tag-attr t 12018 . 12024) (nil tag-name "v-select" 12018 . 12024) (nil tag-type start 12018 . 12024) (nil font-lock-face web-mode-html-attr-engine-face 12018 . 12024) (nil tag-attr-beg 2 12017 . 12018) (nil tag-attr t 12017 . 12018) (nil tag-name "v-select" 12017 . 12018) (nil tag-type start 12017 . 12018) (nil font-lock-face web-mode-html-attr-engine-face 12017 . 12018) (nil tag-name "v-select" 11990 . 12017) (nil tag-type start 11990 . 12017) (nil tag-attr t 11989 . 11990) (nil tag-attr-end 5 11989 . 11990) (nil tag-name "v-select" 11989 . 11990) (nil tag-type start 11989 . 11990) (nil font-lock-face web-mode-html-attr-value-face 11989 . 11990) (nil tag-attr t 11974 . 11989) (nil tag-name "v-select" 11974 . 11989) (nil tag-type start 11974 . 11989) (nil font-lock-face web-mode-html-attr-value-face 11974 . 11989) (nil tag-attr t 11973 . 11974) (nil tag-name "v-select" 11973 . 11974) (nil tag-type start 11973 . 11974) (nil font-lock-face web-mode-html-attr-equal-face 11973 . 11974) (nil tag-attr t 11969 . 11973) (nil tag-name "v-select" 11969 . 11973) (nil tag-type start 11969 . 11973) (nil font-lock-face web-mode-html-attr-name-face 11969 . 11973) (nil tag-attr-beg 0 11968 . 11969) (nil tag-attr t 11968 . 11969) (nil tag-name "v-select" 11968 . 11969) (nil tag-type start 11968 . 11969) (nil font-lock-face web-mode-html-attr-name-face 11968 . 11969) (nil tag-name "v-select" 11942 . 11968) (nil tag-type start 11942 . 11968) (nil tag-name "v-select" 11941 . 11942) (nil tag-type start 11941 . 11942) (nil tag-name "v-select" 11933 . 11941) (nil tag-type start 11933 . 11941) (nil font-lock-face web-mode-html-tag-custom-face 11933 . 11941) (nil tag-name "v-select" 11932 . 11933) (nil tag-type start 11932 . 11933) (nil tag-beg 19 11932 . 11933) (nil font-lock-face web-mode-html-tag-bracket-face 11932 . 11933) (nil tag-name "v-col" 11906 . 11907) (nil tag-type start 11906 . 11907) (nil tag-end t 11906 . 11907) (nil font-lock-face web-mode-html-tag-bracket-face 11906 . 11907) (nil tag-name "v-col" 11901 . 11906) (nil tag-type start 11901 . 11906) (nil font-lock-face web-mode-html-tag-custom-face 11901 . 11906) (nil tag-name "v-col" 11900 . 11901) (nil tag-type start 11900 . 11901) (nil tag-beg 18 11900 . 11901) (nil font-lock-face web-mode-html-tag-bracket-face 11900 . 11901) (nil tag-name "v-col" 11876 . 11877) (nil tag-type end 11876 . 11877) (nil tag-end t 11876 . 11877) (nil font-lock-face web-mode-html-tag-bracket-face 11876 . 11877) (nil tag-name "v-col" 11871 . 11876) (nil tag-type end 11871 . 11876) (nil font-lock-face web-mode-html-tag-custom-face 11871 . 11876) (nil tag-name "v-col" 11870 . 11871) (nil tag-type end 11870 . 11871) (nil font-lock-face web-mode-html-tag-bracket-face 11870 . 11871) (nil tag-name "v-col" 11869 . 11870) (nil tag-type end 11869 . 11870) (nil tag-beg 22 11869 . 11870) (nil font-lock-face web-mode-html-tag-bracket-face 11869 . 11870) (nil tag-name "b" 11845 . 11846) (nil tag-type end 11845 . 11846) (nil tag-end t 11845 . 11846) (nil font-lock-face web-mode-html-tag-bracket-face 11845 . 11846) (nil tag-name "b" 11844 . 11845) (nil tag-type end 11844 . 11845) (nil font-lock-face web-mode-html-tag-face 11844 . 11845) (nil tag-name "b" 11843 . 11844) (nil tag-type end 11843 . 11844) (nil font-lock-face web-mode-html-tag-bracket-face 11843 . 11844) (nil tag-name "b" 11842 . 11843) (nil tag-type end 11842 . 11843) (nil tag-beg 20 11842 . 11843) (nil font-lock-face web-mode-html-tag-bracket-face 11842 . 11843) (nil block-side t 11841 . 11842) (nil block-end t 11841 . 11842) (nil block-token delimiter-end 11841 . 11842) (nil font-lock-face web-mode-block-delimiter-face 11841 . 11842) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 11841 . 11842) (nil block-side t 11840 . 11841) (nil block-token delimiter-end 11840 . 11841) (nil font-lock-face web-mode-block-delimiter-face 11840 . 11841) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 11840 . 11841) (nil block-side t 11839 . 11840) (nil block-side t 11838 . 11839) (nil face (rainbow-delimiters-depth-3-face) 11838 . 11839) (nil block-side t 11837 . 11838) (nil block-side t 11836 . 11837) (nil face web-mode-variable-name-face 11836 . 11837) (nil block-side t 11835 . 11836) (nil face web-mode-variable-name-face 11835 . 11836) (nil block-side t 11834 . 11835) (nil face web-mode-variable-name-face 11834 . 11835) (nil block-side t 11833 . 11834) (nil face web-mode-variable-name-face 11833 . 11834) (nil block-side t 11832 . 11833) (nil face web-mode-variable-name-face 11832 . 11833) (nil block-side t 11831 . 11832) (nil face web-mode-variable-name-face 11831 . 11832) (nil block-side t 11830 . 11831) (nil face web-mode-variable-name-face 11830 . 11831) (nil block-side t 11829 . 11830) (nil face web-mode-variable-name-face 11829 . 11830) (nil block-side t 11828 . 11829) (nil face web-mode-variable-name-face 11828 . 11829) (nil block-side t 11827 . 11828) (nil face web-mode-variable-name-face 11827 . 11828) (nil block-side t 11826 . 11827) (nil face web-mode-variable-name-face 11826 . 11827) (nil block-side t 11825 . 11826) (nil face web-mode-variable-name-face 11825 . 11826) (nil block-side t 11824 . 11825) (nil face web-mode-variable-name-face 11824 . 11825) (nil block-side t 11823 . 11824) (nil face web-mode-variable-name-face 11823 . 11824) (nil block-side t 11822 . 11823) (nil block-side t 11821 . 11822) (nil face web-mode-variable-name-face 11821 . 11822) (nil block-side t 11820 . 11821) (nil face web-mode-variable-name-face 11820 . 11821) (nil block-side t 11819 . 11820) (nil face web-mode-variable-name-face 11819 . 11820) (nil block-side t 11818 . 11819) (nil face web-mode-variable-name-face 11818 . 11819) (nil block-side t 11817 . 11818) (nil face web-mode-variable-name-face 11817 . 11818) (nil block-side t 11816 . 11817) (nil face web-mode-variable-name-face 11816 . 11817) (nil block-side t 11815 . 11816) (nil face web-mode-variable-name-face 11815 . 11816) (nil block-side t 11814 . 11815) (nil face web-mode-variable-name-face 11814 . 11815) (nil block-side t 11813 . 11814) (nil face web-mode-variable-name-face 11813 . 11814) (nil block-side t 11812 . 11813) (nil face web-mode-variable-name-face 11812 . 11813) (nil block-side t 11811 . 11812) (nil face web-mode-variable-name-face 11811 . 11812) (nil block-side t 11810 . 11811) (nil face web-mode-variable-name-face 11810 . 11811) (nil block-side t 11809 . 11810) (nil block-side t 11808 . 11809) (nil face web-mode-variable-name-face 11808 . 11809) (nil block-side t 11807 . 11808) (nil face web-mode-variable-name-face 11807 . 11808) (nil block-side t 11806 . 11807) (nil face web-mode-variable-name-face 11806 . 11807) (nil block-side t 11805 . 11806) (nil face web-mode-variable-name-face 11805 . 11806) (nil block-side t 11804 . 11805) (nil face web-mode-variable-name-face 11804 . 11805) (nil block-side t 11803 . 11804) (nil face web-mode-variable-name-face 11803 . 11804) (nil block-side t 11802 . 11803) (nil face web-mode-variable-name-face 11802 . 11803) (nil block-side t 11801 . 11802) (nil face web-mode-variable-name-face 11801 . 11802) (nil block-side t 11800 . 11801) (nil face web-mode-variable-name-face 11800 . 11801) (nil block-side t 11799 . 11800) (nil face web-mode-variable-name-face 11799 . 11800) (nil block-side t 11798 . 11799) (nil face web-mode-variable-name-face 11798 . 11799) (nil block-side t 11797 . 11798) (nil face web-mode-variable-name-face 11797 . 11798) (nil block-side t 11796 . 11797) (nil face web-mode-variable-name-face 11796 . 11797) (nil block-side t 11795 . 11796) (nil face web-mode-variable-name-face 11795 . 11796) (nil block-side t 11794 . 11795) (nil block-side t 11793 . 11794) (nil face (rainbow-delimiters-depth-3-face) 11793 . 11794) (nil block-side t 11792 . 11793) (nil face web-mode-variable-name-face 11792 . 11793) (nil block-side t 11790 . 11792) (nil block-side t 11789 . 11790) (nil block-token delimiter-beg 11789 . 11790) (nil font-lock-face web-mode-block-delimiter-face 11789 . 11790) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 11789 . 11790) (nil block-beg 0 11788 . 11789) (nil block-controls 0 11788 . 11789) (nil block-side t 11788 . 11789) (nil block-token delimiter-beg 11788 . 11789) (nil font-lock-face web-mode-block-delimiter-face 11788 . 11789) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 11788 . 11789) (nil tag-name "b" 11786 . 11787) (nil tag-type start 11786 . 11787) (nil tag-end t 11786 . 11787) (nil font-lock-face web-mode-html-tag-bracket-face 11786 . 11787) (nil tag-name "b" 11785 . 11786) (nil tag-type start 11785 . 11786) (nil font-lock-face web-mode-html-tag-face 11785 . 11786) (nil tag-name "b" 11784 . 11785) (nil tag-type start 11784 . 11785) (nil tag-beg 16 11784 . 11785) (nil font-lock-face web-mode-html-tag-bracket-face 11784 . 11785) (nil tag-name "v-btn" 11758 . 11759) (nil tag-type end 11758 . 11759) (nil tag-end t 11758 . 11759) (nil font-lock-face web-mode-html-tag-bracket-face 11758 . 11759) (nil tag-name "v-btn" 11753 . 11758) (nil tag-type end 11753 . 11758) (nil font-lock-face web-mode-html-tag-custom-face 11753 . 11758) (nil tag-name "v-btn" 11752 . 11753) (nil tag-type end 11752 . 11753) (nil font-lock-face web-mode-html-tag-bracket-face 11752 . 11753) (nil tag-name "v-btn" 11751 . 11752) (nil tag-type end 11751 . 11752) (nil tag-beg 22 11751 . 11752) (nil font-lock-face web-mode-html-tag-bracket-face 11751 . 11752) (nil tag-name "v-icon" 11725 . 11726) (nil tag-type end 11725 . 11726) (nil tag-end t 11725 . 11726) (nil font-lock-face web-mode-html-tag-bracket-face 11725 . 11726) (nil tag-name "v-icon" 11719 . 11725) (nil tag-type end 11719 . 11725) (nil font-lock-face web-mode-html-tag-custom-face 11719 . 11725) (nil tag-name "v-icon" 11718 . 11719) (nil tag-type end 11718 . 11719) (nil font-lock-face web-mode-html-tag-bracket-face 11718 . 11719) (nil tag-name "v-icon" 11717 . 11718) (nil tag-type end 11717 . 11718) (nil tag-beg 22 11717 . 11718) (nil font-lock-face web-mode-html-tag-bracket-face 11717 . 11718) (nil tag-name "v-icon" 11699 . 11700) (nil tag-type start 11699 . 11700) (nil tag-end t 11699 . 11700) (nil font-lock-face web-mode-html-tag-bracket-face 11699 . 11700) (nil tag-attr t 11698 . 11699) (nil tag-attr-end 4 11698 . 11699) (nil tag-name "v-icon" 11698 . 11699) (nil tag-type start 11698 . 11699) (nil font-lock-face web-mode-html-attr-value-face 11698 . 11699) (nil tag-attr t 11693 . 11698) (nil tag-name "v-icon" 11693 . 11698) (nil tag-type start 11693 . 11698) (nil font-lock-face web-mode-html-attr-value-face 11693 . 11698) (nil tag-attr t 11692 . 11693) (nil tag-name "v-icon" 11692 . 11693) (nil tag-type start 11692 . 11693) (nil font-lock-face web-mode-html-attr-equal-face 11692 . 11693) (nil tag-attr t 11689 . 11692) (nil tag-name "v-icon" 11689 . 11692) (nil tag-type start 11689 . 11692) (nil font-lock-face web-mode-html-attr-name-face 11689 . 11692) (nil tag-attr-beg 0 11688 . 11689) (nil tag-attr t 11688 . 11689) (nil tag-name "v-icon" 11688 . 11689) (nil tag-type start 11688 . 11689) (nil font-lock-face web-mode-html-attr-name-face 11688 . 11689) (nil tag-name "v-icon" 11687 . 11688) (nil tag-type start 11687 . 11688) (nil tag-name "v-icon" 11681 . 11687) (nil tag-type start 11681 . 11687) (nil font-lock-face web-mode-html-tag-custom-face 11681 . 11687) (nil tag-name "v-icon" 11680 . 11681) (nil tag-type start 11680 . 11681) (nil tag-beg 19 11680 . 11681) (nil font-lock-face web-mode-html-tag-bracket-face 11680 . 11681) (nil tag-name "v-btn" 11652 . 11653) (nil tag-type start 11652 . 11653) (nil tag-end t 11652 . 11653) (nil font-lock-face web-mode-html-tag-bracket-face 11652 . 11653) (nil block-side t 11651 . 11652) (nil block-end t 11651 . 11652) (nil block-token delimiter-end 11651 . 11652) (nil tag-attr t 11651 . 11652) (nil tag-attr-end 5 11651 . 11652) (nil tag-name "v-btn" 11651 . 11652) (nil tag-type start 11651 . 11652) (nil font-lock-face web-mode-block-delimiter-face 11651 . 11652) (nil block-side t 11649 . 11651) (nil tag-attr t 11649 . 11651) (nil tag-name "v-btn" 11649 . 11651) (nil tag-type start 11649 . 11651) (nil block-side t 11648 . 11649) (nil tag-attr t 11648 . 11649) (nil tag-name "v-btn" 11648 . 11649) (nil tag-type start 11648 . 11649) (nil face web-mode-variable-name-face 11648 . 11649) (nil block-side t 11647 . 11648) (nil tag-attr t 11647 . 11648) (nil tag-name "v-btn" 11647 . 11648) (nil tag-type start 11647 . 11648) (nil face web-mode-variable-name-face 11647 . 11648) (nil block-side t 11646 . 11647) (nil tag-attr t 11646 . 11647) (nil tag-name "v-btn" 11646 . 11647) (nil tag-type start 11646 . 11647) (nil face web-mode-variable-name-face 11646 . 11647) (nil block-side t 11645 . 11646) (nil tag-attr t 11645 . 11646) (nil tag-name "v-btn" 11645 . 11646) (nil tag-type start 11645 . 11646) (nil face web-mode-variable-name-face 11645 . 11646) (nil block-side t 11644 . 11645) (nil tag-attr t 11644 . 11645) (nil tag-name "v-btn" 11644 . 11645) (nil tag-type start 11644 . 11645) (nil face web-mode-variable-name-face 11644 . 11645) (nil block-side t 11643 . 11644) (nil tag-attr t 11643 . 11644) (nil tag-name "v-btn" 11643 . 11644) (nil tag-type start 11643 . 11644) (nil face web-mode-variable-name-face 11643 . 11644) (nil block-side t 11642 . 11643) (nil tag-attr t 11642 . 11643) (nil tag-name "v-btn" 11642 . 11643) (nil tag-type start 11642 . 11643) (nil block-side t 11641 . 11642) (nil tag-attr t 11641 . 11642) (nil tag-name "v-btn" 11641 . 11642) (nil tag-type start 11641 . 11642) (nil face web-mode-variable-name-face 11641 . 11642) (nil block-side t 11640 . 11641) (nil tag-attr t 11640 . 11641) (nil tag-name "v-btn" 11640 . 11641) (nil tag-type start 11640 . 11641) (nil face web-mode-variable-name-face 11640 . 11641) (nil block-side t 11639 . 11640) (nil tag-attr t 11639 . 11640) (nil tag-name "v-btn" 11639 . 11640) (nil tag-type start 11639 . 11640) (nil face web-mode-variable-name-face 11639 . 11640) (nil block-side t 11638 . 11639) (nil tag-attr t 11638 . 11639) (nil tag-name "v-btn" 11638 . 11639) (nil tag-type start 11638 . 11639) (nil face web-mode-variable-name-face 11638 . 11639) (nil block-side t 11637 . 11638) (nil tag-attr t 11637 . 11638) (nil tag-name "v-btn" 11637 . 11638) (nil tag-type start 11637 . 11638) (nil face web-mode-variable-name-face 11637 . 11638) (nil block-side t 11636 . 11637) (nil tag-attr t 11636 . 11637) (nil tag-name "v-btn" 11636 . 11637) (nil tag-type start 11636 . 11637) (nil face web-mode-variable-name-face 11636 . 11637) (nil block-side t 11635 . 11636) (nil tag-attr t 11635 . 11636) (nil tag-name "v-btn" 11635 . 11636) (nil tag-type start 11635 . 11636) (nil face web-mode-variable-name-face 11635 . 11636) (nil block-side t 11634 . 11635) (nil tag-attr t 11634 . 11635) (nil tag-name "v-btn" 11634 . 11635) (nil tag-type start 11634 . 11635) (nil face web-mode-variable-name-face 11634 . 11635) (nil block-side t 11632 . 11634) (nil tag-attr t 11632 . 11634) (nil tag-name "v-btn" 11632 . 11634) (nil tag-type start 11632 . 11634) (nil block-side t 11622 . 11632) (nil tag-attr t 11622 . 11632) (nil tag-name "v-btn" 11622 . 11632) (nil tag-type start 11622 . 11632) (nil face web-mode-function-call-face 11622 . 11632) (nil block-side t 11621 . 11622) (nil block-token delimiter-beg 11621 . 11622) (nil tag-attr t 11621 . 11622) (nil tag-name "v-btn" 11621 . 11622) (nil tag-type start 11621 . 11622) (nil font-lock-face web-mode-block-delimiter-face 11621 . 11622) (nil block-side t 11620 . 11621) (nil block-token delimiter-beg 11620 . 11621) (nil tag-attr t 11620 . 11621) (nil tag-name "v-btn" 11620 . 11621) (nil tag-type start 11620 . 11621) (nil font-lock-face web-mode-block-delimiter-face 11620 . 11621) (nil block-side t 11619 . 11620) (nil block-token delimiter-beg 11619 . 11620) (nil tag-attr t 11619 . 11620) (nil tag-name "v-btn" 11619 . 11620) (nil tag-type start 11619 . 11620) (nil font-lock-face web-mode-block-delimiter-face 11619 . 11620) (nil block-side t 11618 . 11619) (nil block-token delimiter-beg 11618 . 11619) (nil tag-attr t 11618 . 11619) (nil tag-name "v-btn" 11618 . 11619) (nil tag-type start 11618 . 11619) (nil font-lock-face web-mode-block-delimiter-face 11618 . 11619) (nil block-side t 11617 . 11618) (nil block-token delimiter-beg 11617 . 11618) (nil tag-attr t 11617 . 11618) (nil tag-name "v-btn" 11617 . 11618) (nil tag-type start 11617 . 11618) (nil font-lock-face web-mode-block-delimiter-face 11617 . 11618) (nil block-side t 11616 . 11617) (nil block-token delimiter-beg 11616 . 11617) (nil tag-attr t 11616 . 11617) (nil tag-name "v-btn" 11616 . 11617) (nil tag-type start 11616 . 11617) (nil font-lock-face web-mode-block-delimiter-face 11616 . 11617) (nil block-side t 11615 . 11616) (nil block-token delimiter-beg 11615 . 11616) (nil tag-attr-beg 0 11615 . 11616) (nil tag-attr t 11615 . 11616) (nil tag-name "v-btn" 11615 . 11616) (nil tag-type start 11615 . 11616) (nil font-lock-face web-mode-block-delimiter-face 11615 . 11616) (nil block-beg 0 11614 . 11615) (nil block-controls 0 11614 . 11615) (nil block-side t 11614 . 11615) (nil block-token delimiter-beg 11614 . 11615) (nil tag-name "v-btn" 11614 . 11615) (nil tag-type start 11614 . 11615) (nil font-lock-face web-mode-block-delimiter-face 11614 . 11615) (nil tag-name "v-btn" 11613 . 11614) (nil tag-type start 11613 . 11614) (nil tag-attr t 11612 . 11613) (nil tag-attr-end 0 11612 . 11613) (nil tag-name "v-btn" 11612 . 11613) (nil tag-type start 11612 . 11613) (nil font-lock-face web-mode-html-attr-name-face 11612 . 11613) (nil tag-attr t 11607 . 11612) (nil tag-name "v-btn" 11607 . 11612) (nil tag-type start 11607 . 11612) (nil font-lock-face web-mode-html-attr-name-face 11607 . 11612) (nil tag-attr-beg 0 11606 . 11607) (nil tag-attr t 11606 . 11607) (nil tag-name "v-btn" 11606 . 11607) (nil tag-type start 11606 . 11607) (nil font-lock-face web-mode-html-attr-name-face 11606 . 11607) (nil tag-name "v-btn" 11605 . 11606) (nil tag-type start 11605 . 11606) (nil tag-attr t 11604 . 11605) (nil tag-attr-end 0 11604 . 11605) (nil tag-name "v-btn" 11604 . 11605) (nil tag-type start 11604 . 11605) (nil font-lock-face web-mode-html-attr-name-face 11604 . 11605) (nil tag-attr t 11602 . 11604) (nil tag-name "v-btn" 11602 . 11604) (nil tag-type start 11602 . 11604) (nil font-lock-face web-mode-html-attr-name-face 11602 . 11604) (nil tag-attr-beg 0 11601 . 11602) (nil tag-attr t 11601 . 11602) (nil tag-name "v-btn" 11601 . 11602) (nil tag-type start 11601 . 11602) (nil font-lock-face web-mode-html-attr-name-face 11601 . 11602) (nil tag-name "v-btn" 11600 . 11601) (nil tag-type start 11600 . 11601) (nil tag-name "v-btn" 11595 . 11600) (nil tag-type start 11595 . 11600) (nil font-lock-face web-mode-html-tag-custom-face 11595 . 11600) (nil tag-name "v-btn" 11594 . 11595) (nil tag-type start 11594 . 11595) (nil tag-beg 19 11594 . 11595) (nil font-lock-face web-mode-html-tag-bracket-face 11594 . 11595) (nil tag-name "v-col" 11568 . 11569) (nil tag-type start 11568 . 11569) (nil tag-end t 11568 . 11569) (nil font-lock-face web-mode-html-tag-bracket-face 11568 . 11569) (nil tag-name "v-col" 11563 . 11568) (nil tag-type start 11563 . 11568) (nil font-lock-face web-mode-html-tag-custom-face 11563 . 11568) (nil tag-name "v-col" 11562 . 11563) (nil tag-type start 11562 . 11563) (nil tag-beg 18 11562 . 11563) (nil font-lock-face web-mode-html-tag-bracket-face 11562 . 11563) (11539 . 12521)) nil (25671 53751 373496 991000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -27986) (undo-tree-id1737 . -1) (undo-tree-id1739 . -1) (undo-tree-id1741 . -1) (undo-tree-id1743 . -1) (undo-tree-id1745 . -1) (undo-tree-id1747 . -1) (undo-tree-id1749 . -1) (undo-tree-id1751 . -1) 27987 (t 25671 53441 226230 449000)) ((27986 . 27987)) (25671 53686 572367 577000) 0 nil])
([nil nil ((12521 . 12544)) nil (25671 53751 373213 169000) 0 nil])
([nil nil ((27986 . 27988)) ((#("10" 0 2 (part-side css)) . 27986)) (25671 53686 246853 326000) 0 nil])
([nil nil ((#("
                      
                      <v-col>
                        <v-btn text x-small @click=\"setDynamic('os')\">
                          <v-icon size=\"17px\">mdi-select-search</v-icon>
                        </v-btn>
                        <b>OS</b>
                      </v-col>
                      <v-col>
                        {{ item.os }}
                      </v-col>" 46 47 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 47 52 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 52 53 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 78 79 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 79 84 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 84 85 (tag-name "v-btn" tag-type start) 85 86 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 86 88 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 88 89 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 89 90 (tag-name "v-btn" tag-type start) 90 91 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 91 96 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 96 97 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 97 98 (tag-name "v-btn" tag-type start) 98 99 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 99 100 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 100 101 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 101 102 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 102 103 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 103 104 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 104 105 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 105 106 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 106 116 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 116 118 (block-side t tag-attr t tag-name "v-btn" tag-type start) 118 119 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 119 120 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 120 122 (block-side t tag-attr t tag-name "v-btn" tag-type start) 122 123 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 151 152 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 152 158 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 158 159 (tag-name "v-icon" tag-type start) 159 160 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 160 163 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 163 164 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 164 169 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 169 170 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 170 171 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 188 189 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 189 190 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 190 196 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 196 197 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 222 223 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 223 224 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 224 229 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 229 230 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 255 256 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 256 257 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 257 258 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 260 261 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 261 262 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 262 263 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 263 264 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 287 288 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 288 289 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 289 294 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 294 295 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 318 319 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 319 324 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 324 325 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 350 351 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 351 352 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 352 353 (block-side t) 353 354 (block-side t face web-mode-variable-name-face) 354 355 (block-side t face web-mode-variable-name-face) 355 356 (block-side t face web-mode-variable-name-face) 356 357 (block-side t face web-mode-variable-name-face) 357 358 (block-side t) 358 359 (block-side t face web-mode-variable-name-face) 359 360 (block-side t face web-mode-variable-name-face) 360 361 (block-side t) 361 362 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 362 363 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 386 387 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 387 388 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 388 393 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 393 394 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 12521) (undo-tree-id2425 . -394) (undo-tree-id2426 . -1) (undo-tree-id2427 . -394)) nil (25671 53751 373211 623000) 0 nil])
([nil nil ((27991 . 27996) (t 25671 53454 825676 189000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 27991) (undo-tree-id2239 . -5) (undo-tree-id2240 . -5) (undo-tree-id2241 . -5) (undo-tree-id2242 . -1) (undo-tree-id2243 . -5) (undo-tree-id2244 . -5) (undo-tree-id2245 . -5) (undo-tree-id2246 . -5) (undo-tree-id2247 . -5) (undo-tree-id2248 . -5) (undo-tree-id2249 . -5) (undo-tree-id2250 . -5) (undo-tree-id2251 . -5) (undo-tree-id2252 . -5) (undo-tree-id2253 . -5) (undo-tree-id2254 . -5) (undo-tree-id2255 . -5) (undo-tree-id2256 . -5) (undo-tree-id2257 . -5) (undo-tree-id2258 . -5) (undo-tree-id2259 . -5) (undo-tree-id2260 . -5) (undo-tree-id2261 . -5) (undo-tree-id2262 . -5) (undo-tree-id2263 . -5) (undo-tree-id2264 . -5) (undo-tree-id2265 . -5) (undo-tree-id2266 . -5) (undo-tree-id2267 . -5) (undo-tree-id2268 . -5) (undo-tree-id2269 . -5) (undo-tree-id2270 . -5) (undo-tree-id2271 . -5) (undo-tree-id2272 . -5) (undo-tree-id2273 . -5) (undo-tree-id2274 . -5) (undo-tree-id2275 . -5) (undo-tree-id2276 . -5) (undo-tree-id2277 . -5) (undo-tree-id2278 . -5) (undo-tree-id2279 . -5) (undo-tree-id2280 . -5) (undo-tree-id2281 . -5) (undo-tree-id2282 . -5) (undo-tree-id2283 . -5) (undo-tree-id2284 . -5) (undo-tree-id2285 . -5) (undo-tree-id2286 . -5) (undo-tree-id2287 . -5) (undo-tree-id2288 . -5) (undo-tree-id2289 . -5) (undo-tree-id2290 . -5) (undo-tree-id2291 . -5) (undo-tree-id2292 . -5) (undo-tree-id2293 . -5) (undo-tree-id2294 . -5) (undo-tree-id2295 . -5) (undo-tree-id2296 . -5) (undo-tree-id2297 . -5) (undo-tree-id2298 . -5) (undo-tree-id2299 . -5) (undo-tree-id2300 . -5) (undo-tree-id2301 . -5) (undo-tree-id2302 . -5) (undo-tree-id2303 . -5) (undo-tree-id2304 . -5) (undo-tree-id2305 . -5) (undo-tree-id2306 . -5) (undo-tree-id2307 . -5) (undo-tree-id2308 . -5) (undo-tree-id2309 . -5) (undo-tree-id2310 . -5) (undo-tree-id2311 . -5) (undo-tree-id2312 . -5) (undo-tree-id2313 . -5) (undo-tree-id2314 . -5) (undo-tree-id2315 . -5) (undo-tree-id2316 . -5) (undo-tree-id2317 . -5) (undo-tree-id2318 . -5) (undo-tree-id2319 . -5) (undo-tree-id2320 . -5) (undo-tree-id2321 . -1) (undo-tree-id2322 . -5) (undo-tree-id2323 . -5) (undo-tree-id2324 . -5) (undo-tree-id2325 . -5) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5)) (25671 53685 973983 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8120 . 8121) (nil tag-name "v-col" 8120 . 8121) (nil tag-type end 8120 . 8121) (nil tag-end t 8120 . 8121) (nil font-lock-face web-mode-html-tag-bracket-face 8120 . 8121) (nil tag-name "v-col" 8115 . 8120) (nil tag-type end 8115 . 8120) (nil font-lock-face web-mode-html-tag-custom-face 8115 . 8120) (nil tag-name "v-col" 8114 . 8115) (nil tag-type end 8114 . 8115) (nil font-lock-face web-mode-html-tag-bracket-face 8114 . 8115) (nil tag-name "v-col" 8113 . 8114) (nil tag-type end 8113 . 8114) (nil tag-beg 22 8113 . 8114) (nil font-lock-face web-mode-html-tag-bracket-face 8113 . 8114) (nil block-side t 8089 . 8090) (nil block-end t 8089 . 8090) (nil block-token delimiter-end 8089 . 8090) (nil font-lock-face web-mode-block-delimiter-face 8089 . 8090) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 8089 . 8090) (nil block-side t 8088 . 8089) (nil block-token delimiter-end 8088 . 8089) (nil font-lock-face web-mode-block-delimiter-face 8088 . 8089) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 8088 . 8089) (nil block-side t 8087 . 8088) (nil block-side t 8086 . 8087) (nil face web-mode-variable-name-face 8086 . 8087) (nil block-side t 8085 . 8086) (nil face web-mode-variable-name-face 8085 . 8086) (nil block-side t 8084 . 8085) (nil block-side t 8083 . 8084) (nil face web-mode-variable-name-face 8083 . 8084) (nil block-side t 8082 . 8083) (nil face web-mode-variable-name-face 8082 . 8083) (nil block-side t 8081 . 8082) (nil face web-mode-variable-name-face 8081 . 8082) (nil block-side t 8080 . 8081) (nil face web-mode-variable-name-face 8080 . 8081) (nil block-side t 8079 . 8080) (nil block-side t 8078 . 8079) (nil block-token delimiter-beg 8078 . 8079) (nil font-lock-face web-mode-block-delimiter-face 8078 . 8079) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 8078 . 8079) (nil block-beg 0 8077 . 8078) (nil block-controls 0 8077 . 8078) (nil block-side t 8077 . 8078) (nil block-token delimiter-beg 8077 . 8078) (nil font-lock-face web-mode-block-delimiter-face 8077 . 8078) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 8077 . 8078) (nil tag-name "v-col" 8051 . 8052) (nil tag-type start 8051 . 8052) (nil tag-end t 8051 . 8052) (nil font-lock-face web-mode-html-tag-bracket-face 8051 . 8052) (nil tag-name "v-col" 8046 . 8051) (nil tag-type start 8046 . 8051) (nil font-lock-face web-mode-html-tag-custom-face 8046 . 8051) (nil tag-name "v-col" 8045 . 8046) (nil tag-type start 8045 . 8046) (nil tag-beg 18 8045 . 8046) (nil font-lock-face web-mode-html-tag-bracket-face 8045 . 8046) (nil tag-name "v-col" 8021 . 8022) (nil tag-type end 8021 . 8022) (nil tag-end t 8021 . 8022) (nil font-lock-face web-mode-html-tag-bracket-face 8021 . 8022) (nil tag-name "v-col" 8016 . 8021) (nil tag-type end 8016 . 8021) (nil font-lock-face web-mode-html-tag-custom-face 8016 . 8021) (nil tag-name "v-col" 8015 . 8016) (nil tag-type end 8015 . 8016) (nil font-lock-face web-mode-html-tag-bracket-face 8015 . 8016) (nil tag-name "v-col" 8014 . 8015) (nil tag-type end 8014 . 8015) (nil tag-beg 22 8014 . 8015) (nil font-lock-face web-mode-html-tag-bracket-face 8014 . 8015) (nil tag-name "b" 7990 . 7991) (nil tag-type end 7990 . 7991) (nil tag-end t 7990 . 7991) (nil font-lock-face web-mode-html-tag-bracket-face 7990 . 7991) (nil tag-name "b" 7989 . 7990) (nil tag-type end 7989 . 7990) (nil font-lock-face web-mode-html-tag-face 7989 . 7990) (nil tag-name "b" 7988 . 7989) (nil tag-type end 7988 . 7989) (nil font-lock-face web-mode-html-tag-bracket-face 7988 . 7989) (nil tag-name "b" 7987 . 7988) (nil tag-type end 7987 . 7988) (nil tag-beg 20 7987 . 7988) (nil font-lock-face web-mode-html-tag-bracket-face 7987 . 7988) (nil tag-name "b" 7984 . 7985) (nil tag-type start 7984 . 7985) (nil tag-end t 7984 . 7985) (nil font-lock-face web-mode-html-tag-bracket-face 7984 . 7985) (nil tag-name "b" 7983 . 7984) (nil tag-type start 7983 . 7984) (nil font-lock-face web-mode-html-tag-face 7983 . 7984) (nil tag-name "b" 7982 . 7983) (nil tag-type start 7982 . 7983) (nil tag-beg 16 7982 . 7983) (nil font-lock-face web-mode-html-tag-bracket-face 7982 . 7983) (nil tag-name "v-btn" 7956 . 7957) (nil tag-type end 7956 . 7957) (nil tag-end t 7956 . 7957) (nil font-lock-face web-mode-html-tag-bracket-face 7956 . 7957) (nil tag-name "v-btn" 7951 . 7956) (nil tag-type end 7951 . 7956) (nil font-lock-face web-mode-html-tag-custom-face 7951 . 7956) (nil tag-name "v-btn" 7950 . 7951) (nil tag-type end 7950 . 7951) (nil font-lock-face web-mode-html-tag-bracket-face 7950 . 7951) (nil tag-name "v-btn" 7949 . 7950) (nil tag-type end 7949 . 7950) (nil tag-beg 22 7949 . 7950) (nil font-lock-face web-mode-html-tag-bracket-face 7949 . 7950) (nil tag-name "v-icon" 7923 . 7924) (nil tag-type end 7923 . 7924) (nil tag-end t 7923 . 7924) (nil font-lock-face web-mode-html-tag-bracket-face 7923 . 7924) (nil tag-name "v-icon" 7917 . 7923) (nil tag-type end 7917 . 7923) (nil font-lock-face web-mode-html-tag-custom-face 7917 . 7923) (nil tag-name "v-icon" 7916 . 7917) (nil tag-type end 7916 . 7917) (nil font-lock-face web-mode-html-tag-bracket-face 7916 . 7917) (nil tag-name "v-icon" 7915 . 7916) (nil tag-type end 7915 . 7916) (nil tag-beg 22 7915 . 7916) (nil font-lock-face web-mode-html-tag-bracket-face 7915 . 7916) (nil tag-name "v-icon" 7897 . 7898) (nil tag-type start 7897 . 7898) (nil tag-end t 7897 . 7898) (nil font-lock-face web-mode-html-tag-bracket-face 7897 . 7898) (nil tag-attr t 7896 . 7897) (nil tag-attr-end 4 7896 . 7897) (nil tag-name "v-icon" 7896 . 7897) (nil tag-type start 7896 . 7897) (nil font-lock-face web-mode-html-attr-value-face 7896 . 7897) (nil tag-attr t 7891 . 7896) (nil tag-name "v-icon" 7891 . 7896) (nil tag-type start 7891 . 7896) (nil font-lock-face web-mode-html-attr-value-face 7891 . 7896) (nil tag-attr t 7890 . 7891) (nil tag-name "v-icon" 7890 . 7891) (nil tag-type start 7890 . 7891) (nil font-lock-face web-mode-html-attr-equal-face 7890 . 7891) (nil tag-attr t 7887 . 7890) (nil tag-name "v-icon" 7887 . 7890) (nil tag-type start 7887 . 7890) (nil font-lock-face web-mode-html-attr-name-face 7887 . 7890) (nil tag-attr-beg 0 7886 . 7887) (nil tag-attr t 7886 . 7887) (nil tag-name "v-icon" 7886 . 7887) (nil tag-type start 7886 . 7887) (nil font-lock-face web-mode-html-attr-name-face 7886 . 7887) (nil tag-name "v-icon" 7885 . 7886) (nil tag-type start 7885 . 7886) (nil tag-name "v-icon" 7879 . 7885) (nil tag-type start 7879 . 7885) (nil font-lock-face web-mode-html-tag-custom-face 7879 . 7885) (nil tag-name "v-icon" 7878 . 7879) (nil tag-type start 7878 . 7879) (nil tag-beg 19 7878 . 7879) (nil font-lock-face web-mode-html-tag-bracket-face 7878 . 7879) (nil tag-name "v-btn" 7850 . 7851) (nil tag-type start 7850 . 7851) (nil tag-end t 7850 . 7851) (nil font-lock-face web-mode-html-tag-bracket-face 7850 . 7851) (nil block-side t 7849 . 7850) (nil block-end t 7849 . 7850) (nil block-token delimiter-end 7849 . 7850) (nil tag-attr t 7849 . 7850) (nil tag-attr-end 5 7849 . 7850) (nil tag-name "v-btn" 7849 . 7850) (nil tag-type start 7849 . 7850) (nil font-lock-face web-mode-block-delimiter-face 7849 . 7850) (nil block-side t 7847 . 7849) (nil tag-attr t 7847 . 7849) (nil tag-name "v-btn" 7847 . 7849) (nil tag-type start 7847 . 7849) (nil block-side t 7846 . 7847) (nil tag-attr t 7846 . 7847) (nil tag-name "v-btn" 7846 . 7847) (nil tag-type start 7846 . 7847) (nil face web-mode-variable-name-face 7846 . 7847) (nil block-side t 7845 . 7846) (nil tag-attr t 7845 . 7846) (nil tag-name "v-btn" 7845 . 7846) (nil tag-type start 7845 . 7846) (nil face web-mode-variable-name-face 7845 . 7846) (nil block-side t 7843 . 7845) (nil tag-attr t 7843 . 7845) (nil tag-name "v-btn" 7843 . 7845) (nil tag-type start 7843 . 7845) (nil block-side t 7833 . 7843) (nil tag-attr t 7833 . 7843) (nil tag-name "v-btn" 7833 . 7843) (nil tag-type start 7833 . 7843) (nil face web-mode-function-call-face 7833 . 7843) (nil block-side t 7832 . 7833) (nil block-token delimiter-beg 7832 . 7833) (nil tag-attr t 7832 . 7833) (nil tag-name "v-btn" 7832 . 7833) (nil tag-type start 7832 . 7833) (nil font-lock-face web-mode-block-delimiter-face 7832 . 7833) (nil block-side t 7831 . 7832) (nil block-token delimiter-beg 7831 . 7832) (nil tag-attr t 7831 . 7832) (nil tag-name "v-btn" 7831 . 7832) (nil tag-type start 7831 . 7832) (nil font-lock-face web-mode-block-delimiter-face 7831 . 7832) (nil block-side t 7830 . 7831) (nil block-token delimiter-beg 7830 . 7831) (nil tag-attr t 7830 . 7831) (nil tag-name "v-btn" 7830 . 7831) (nil tag-type start 7830 . 7831) (nil font-lock-face web-mode-block-delimiter-face 7830 . 7831) (nil block-side t 7829 . 7830) (nil block-token delimiter-beg 7829 . 7830) (nil tag-attr t 7829 . 7830) (nil tag-name "v-btn" 7829 . 7830) (nil tag-type start 7829 . 7830) (nil font-lock-face web-mode-block-delimiter-face 7829 . 7830) (nil block-side t 7828 . 7829) (nil block-token delimiter-beg 7828 . 7829) (nil tag-attr t 7828 . 7829) (nil tag-name "v-btn" 7828 . 7829) (nil tag-type start 7828 . 7829) (nil font-lock-face web-mode-block-delimiter-face 7828 . 7829) (nil block-side t 7827 . 7828) (nil block-token delimiter-beg 7827 . 7828) (nil tag-attr t 7827 . 7828) (nil tag-name "v-btn" 7827 . 7828) (nil tag-type start 7827 . 7828) (nil font-lock-face web-mode-block-delimiter-face 7827 . 7828) (nil block-side t 7826 . 7827) (nil block-token delimiter-beg 7826 . 7827) (nil tag-attr-beg 0 7826 . 7827) (nil tag-attr t 7826 . 7827) (nil tag-name "v-btn" 7826 . 7827) (nil tag-type start 7826 . 7827) (nil font-lock-face web-mode-block-delimiter-face 7826 . 7827) (nil block-beg 0 7825 . 7826) (nil block-controls 0 7825 . 7826) (nil block-side t 7825 . 7826) (nil block-token delimiter-beg 7825 . 7826) (nil tag-name "v-btn" 7825 . 7826) (nil tag-type start 7825 . 7826) (nil font-lock-face web-mode-block-delimiter-face 7825 . 7826) (nil tag-name "v-btn" 7824 . 7825) (nil tag-type start 7824 . 7825) (nil tag-attr t 7823 . 7824) (nil tag-attr-end 0 7823 . 7824) (nil tag-name "v-btn" 7823 . 7824) (nil tag-type start 7823 . 7824) (nil font-lock-face web-mode-html-attr-name-face 7823 . 7824) (nil tag-attr t 7818 . 7823) (nil tag-name "v-btn" 7818 . 7823) (nil tag-type start 7818 . 7823) (nil font-lock-face web-mode-html-attr-name-face 7818 . 7823) (nil tag-attr-beg 0 7817 . 7818) (nil tag-attr t 7817 . 7818) (nil tag-name "v-btn" 7817 . 7818) (nil tag-type start 7817 . 7818) (nil font-lock-face web-mode-html-attr-name-face 7817 . 7818) (nil tag-name "v-btn" 7816 . 7817) (nil tag-type start 7816 . 7817) (nil tag-attr t 7815 . 7816) (nil tag-attr-end 0 7815 . 7816) (nil tag-name "v-btn" 7815 . 7816) (nil tag-type start 7815 . 7816) (nil font-lock-face web-mode-html-attr-name-face 7815 . 7816) (nil tag-attr t 7813 . 7815) (nil tag-name "v-btn" 7813 . 7815) (nil tag-type start 7813 . 7815) (nil font-lock-face web-mode-html-attr-name-face 7813 . 7815) (nil tag-attr-beg 0 7812 . 7813) (nil tag-attr t 7812 . 7813) (nil tag-name "v-btn" 7812 . 7813) (nil tag-type start 7812 . 7813) (nil font-lock-face web-mode-html-attr-name-face 7812 . 7813) (nil tag-name "v-btn" 7811 . 7812) (nil tag-type start 7811 . 7812) (nil tag-name "v-btn" 7806 . 7811) (nil tag-type start 7806 . 7811) (nil font-lock-face web-mode-html-tag-custom-face 7806 . 7811) (nil tag-name "v-btn" 7805 . 7806) (nil tag-type start 7805 . 7806) (nil tag-beg 19 7805 . 7806) (nil font-lock-face web-mode-html-tag-bracket-face 7805 . 7806) (nil tag-name "v-col" 7779 . 7780) (nil tag-type start 7779 . 7780) (nil tag-end t 7779 . 7780) (nil font-lock-face web-mode-html-tag-bracket-face 7779 . 7780) (nil tag-name "v-col" 7774 . 7779) (nil tag-type start 7774 . 7779) (nil font-lock-face web-mode-html-tag-custom-face 7774 . 7779) (nil tag-name "v-col" 7773 . 7774) (nil tag-type start 7773 . 7774) (nil tag-beg 18 7773 . 7774) (nil font-lock-face web-mode-html-tag-bracket-face 7773 . 7774) (nil face whitespace-trailing 7728 . 7750) (7727 . 8121)) nil (25671 53751 373191 777000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28013 . 28014) (nil part-side css 28007 . 28014) (nil part-side css 27996 . 28007) (nil face web-mode-css-property-name-face 27996 . 28007) (27996 . 28014)) ((#("margin-top: -10px;" 0 7 (part-side css face web-mode-css-property-name-face) 7 8 (part-side css face web-mode-css-property-name-face) 8 9 (part-side css face web-mode-css-property-name-face) 9 10 (part-side css face web-mode-css-property-name-face) 10 11 (part-side css face web-mode-css-property-name-face) 11 13 (part-side css) 13 14 (part-side css) 14 17 (part-side css) 17 18 (rear-nonsticky nil part-side css)) . 27996) (undo-tree-id2159 . -18) (undo-tree-id2160 . -18) (undo-tree-id2161 . -10) (undo-tree-id2162 . -18) (undo-tree-id2163 . -18) (undo-tree-id2164 . -18) (undo-tree-id2165 . -18) (undo-tree-id2166 . -18) (undo-tree-id2167 . -18) (undo-tree-id2168 . -18) (undo-tree-id2169 . -18) (undo-tree-id2170 . -18) (undo-tree-id2171 . -18) (undo-tree-id2172 . -18) (undo-tree-id2173 . -18) (undo-tree-id2174 . -18) (undo-tree-id2175 . -18) (undo-tree-id2176 . -18) (undo-tree-id2177 . -18) (undo-tree-id2178 . -18) (undo-tree-id2179 . -18) (undo-tree-id2180 . -18) (undo-tree-id2181 . -18) (undo-tree-id2182 . -18) (undo-tree-id2183 . -18) (undo-tree-id2184 . -18) (undo-tree-id2185 . -18) (undo-tree-id2186 . -18) (undo-tree-id2187 . -18) (undo-tree-id2188 . -18) (undo-tree-id2189 . -18) (undo-tree-id2190 . -18) (undo-tree-id2191 . -18) (undo-tree-id2192 . -18) (undo-tree-id2193 . -18) (undo-tree-id2194 . -18) (undo-tree-id2195 . -18) (undo-tree-id2196 . -18) (undo-tree-id2197 . -18) (undo-tree-id2198 . -18) (undo-tree-id2199 . -18) (undo-tree-id2200 . -18) (undo-tree-id2201 . -18) (undo-tree-id2202 . -18) (undo-tree-id2203 . -18) (undo-tree-id2204 . -18) (undo-tree-id2205 . -18) (undo-tree-id2206 . -18) (undo-tree-id2207 . -13) (undo-tree-id2208 . -13) (undo-tree-id2209 . -13) (undo-tree-id2210 . -13) (undo-tree-id2211 . -13) (undo-tree-id2212 . -13) (undo-tree-id2213 . -13) (undo-tree-id2214 . -13) (undo-tree-id2215 . -13) (undo-tree-id2216 . -13) (undo-tree-id2217 . -13) (undo-tree-id2218 . -14) (undo-tree-id2219 . -14) (undo-tree-id2220 . -14) (undo-tree-id2221 . -14) (undo-tree-id2222 . -14) (undo-tree-id2223 . -14) (undo-tree-id2224 . -14) (undo-tree-id2225 . -7) (undo-tree-id2226 . -7) (undo-tree-id2227 . -7) (undo-tree-id2228 . -7) (undo-tree-id2229 . -7) (undo-tree-id2230 . -7) (undo-tree-id2231 . -7) (undo-tree-id2232 . -10) (undo-tree-id2233 . -10) (undo-tree-id2234 . -10) (undo-tree-id2235 . -10) (undo-tree-id2236 . -10) (undo-tree-id2237 . -10) (undo-tree-id2238 . -10) (nil rear-nonsticky t 28013 . 28014)) (25671 53685 749793 425000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing)) . 7704) (#(" " 0 1 (face whitespace-trailing)) . 7704) (#(" " 0 1 (face whitespace-trailing)) . 7704) ("
" . 7704) (undo-tree-id2424 . -1)) nil (25671 53751 373118 867000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css face web-mode-css-property-name-face)) . -28003) (undo-tree-id1753 . -1) (#("o" 0 1 (part-side css face web-mode-css-property-name-face)) . -28004) (undo-tree-id1754 . -1) (#("p" 0 1 (part-side css face web-mode-css-property-name-face)) . -28005) (undo-tree-id1755 . -1) 28006) ((28003 . 28006)) (25671 53685 543948 634000) 0 nil])
([nil nil (("
" . 7746) (undo-tree-id2422 . -1) (undo-tree-id2423 . 1)) nil (25671 53751 373115 609000) 0 nil])
([nil nil ((28003 . 28009)) ((#("bottom" 0 6 (part-side css face web-mode-css-property-name-face)) . 28003)) (25671 53685 325256 407000) 0 nil])
([nil nil (("                      " . -7746)) nil (25671 53751 373111 958000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28012) (undo-tree-id1756 . -1) (undo-tree-id1758 . -1) (undo-tree-id1760 . -1) (undo-tree-id1762 . -1) (undo-tree-id1764 . -1) (undo-tree-id1766 . -1) (undo-tree-id1768 . -1) (undo-tree-id1770 . -1) (undo-tree-id1772 . -1) (undo-tree-id1774 . -1) (undo-tree-id1776 . -1) (undo-tree-id1778 . -1) 28013 (t 25671 53475 216845 986000)) ((28012 . 28013)) (25671 53685 61378 319000) 0 nil])
([nil nil (("
" . 11906) (undo-tree-id2421 . -1)) nil (25671 53751 373110 543000) 0 nil])
([nil nil ((28012 . 28013)) ((#("2" 0 1 (part-side css)) . 28012)) (25671 53684 636815 162000) 0 nil])
([nil nil (("                      " . -11906)) nil (25671 53751 373106 783000) 0 nil])
([nil nil ((28017 . 28022) (t 25671 53486 744377 103000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 28017) (undo-tree-id2122 . -5) (undo-tree-id2123 . -5) (undo-tree-id2124 . -1) (undo-tree-id2125 . -5) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2128 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -5) (undo-tree-id2131 . -5) (undo-tree-id2132 . -5) (undo-tree-id2133 . -5) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -5) (undo-tree-id2137 . -5) (undo-tree-id2138 . -5) (undo-tree-id2139 . -5) (undo-tree-id2140 . -5) (undo-tree-id2141 . -5) (undo-tree-id2142 . -5) (undo-tree-id2143 . -5) (undo-tree-id2144 . -5) (undo-tree-id2145 . -5) (undo-tree-id2146 . -5) (undo-tree-id2147 . -1) (undo-tree-id2148 . -5) (undo-tree-id2149 . -5) (undo-tree-id2150 . -5) (undo-tree-id2151 . -5) (undo-tree-id2152 . -5) (undo-tree-id2153 . -5) (undo-tree-id2154 . -5) (undo-tree-id2155 . -5) (undo-tree-id2156 . -5) (undo-tree-id2157 . -5) (undo-tree-id2158 . -5)) (25671 53684 136956 17000) 0 nil])
([nil nil ((#("                   " 0 19 (face whitespace-trailing)) . -7704) (undo-tree-id2420 . -19) 11906) nil (25671 53751 373101 879000) 0 nil])
([nil nil ((28022 . 28032)) ((#("height:10p" 0 7 (part-side css face web-mode-css-property-name-face) 7 10 (part-side css)) . 28022) (undo-tree-id2101 . -9) (undo-tree-id2102 . -10) (undo-tree-id2103 . -10) (undo-tree-id2104 . -10) (undo-tree-id2105 . -10) (undo-tree-id2106 . -10) (undo-tree-id2107 . -10) (undo-tree-id2108 . -10) (undo-tree-id2109 . -10) (undo-tree-id2110 . -10) (undo-tree-id2111 . -10) (undo-tree-id2112 . -10) (undo-tree-id2113 . -10) (undo-tree-id2114 . -10) (undo-tree-id2115 . -10) (undo-tree-id2116 . -10) (undo-tree-id2117 . -10) (undo-tree-id2118 . -10) (undo-tree-id2119 . -10) (undo-tree-id2120 . -10) (undo-tree-id2121 . -10)) (25671 53683 837651 845000) 0 nil])
([nil nil ((13460 . 13499) (t 25671 53751 421684 598000)) nil (25671 53789 561319 437000) 0 nil])
([nil nil ((28032 . 28034)) ((#("x," 0 1 (part-side css) 1 2 (part-side css)) . 28032) (undo-tree-id2092 . -2) (undo-tree-id2093 . -1) (undo-tree-id2094 . -2) (undo-tree-id2095 . -2) (undo-tree-id2096 . -2) (undo-tree-id2097 . -2) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (undo-tree-id2100 . -2)) (25671 53683 623303 720000) 0 nil])
([nil nil ((13499 . 13505)) nil (25671 53789 561316 940000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -28033) (undo-tree-id1784 . -1) (undo-tree-id1786 . -1) (undo-tree-id1788 . -1) (undo-tree-id1790 . -1) (undo-tree-id1792 . -1) (undo-tree-id1794 . -1) 28034) ((28033 . 28034)) (25671 53683 385644 563000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-textarea" tag-type start)) . -13504) (undo-tree-id2435 . -1) 13505) nil (25671 53789 561311 696000) 0 nil])
([nil nil ((28033 . 28035)) ((#("; " 0 1 (part-side css) 1 2 (part-side css)) . 28033) (undo-tree-id2079 . -2) (undo-tree-id2080 . -1) (undo-tree-id2081 . -2) (undo-tree-id2082 . -2) (undo-tree-id2083 . -2) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2)) (25671 53683 52324 599000) 0 nil])
([nil nil ((13735 . 13774) (t 25671 53789 608151 403000)) nil (25671 53820 607059 594000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28034) (undo-tree-id1780 . -1) (undo-tree-id1782 . -1) 28035) ((28034 . 28035)) (25671 53681 401131 501000) 0 nil])
([nil nil ((13781 . 13785) (13774 . 13782)) nil (25671 53820 607057 984000) 0 nil])
([nil nil ((28040 . 28042) (#("  " 0 2 (part-side css)) . 28039) (undo-tree-id1827 . -2) (28038 . 28042) (t 25671 53497 631934 539000)) ((#("
  
" 0 1 (part-side css) 1 3 (part-side css face whitespace-trailing) 3 4 (part-side css)) . 28038) (undo-tree-id2054 . -3) (undo-tree-id2055 . -1) (undo-tree-id2056 . -4) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (28039 . 28041) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28040)) (25671 53681 82162 801000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13782) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (#("x" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13783) (undo-tree-id2447 . -1) (#("-" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13784) (undo-tree-id2448 . -1) 13785) nil (25671 53820 607055 467000) 0 nil])
([nil nil ((28040 . 28042) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28039) (28039 . 28041) (28039 . 28040)) ((#("
" 0 1 (part-side css)) . 28039) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . 1) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28039) (undo-tree-id2041 . 2) (28039 . 28041) (#("  " 0 2 (part-side css)) . 28040) (undo-tree-id2042 . -2) (undo-tree-id2043 . -2) (undo-tree-id2044 . -2) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2)) (25671 53680 871539 714000) 0 nil])
([nil nil ((13782 . 13800)) nil (25671 53820 607047 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28331 . 28332) (nil part-side css 28331 . 28332) (nil face (rainbow-delimiters-depth-1-face) 28331 . 28332) (nil part-side css 28330 . 28331) (nil part-side css 28320 . 28330) (nil face web-mode-css-priority-face 28320 . 28330) (nil part-side css 28313 . 28320) (nil part-side css 28301 . 28313) (nil face web-mode-css-property-name-face 28301 . 28313) (nil part-side css 28292 . 28301) (nil part-side css 28282 . 28292) (nil face web-mode-css-priority-face 28282 . 28292) (nil part-side css 28277 . 28282) (nil part-side css 28269 . 28277) (nil face web-mode-css-property-name-face 28269 . 28277) (nil part-side css 28260 . 28269) (nil part-side css 28250 . 28260) (nil face web-mode-css-priority-face 28250 . 28260) (nil part-side css 28244 . 28250) (nil part-side css 28233 . 28244) (nil face web-mode-css-property-name-face 28233 . 28244) (nil part-side css 28218 . 28233) (nil part-side css 28207 . 28218) (nil face web-mode-css-property-name-face 28207 . 28218) (nil part-side css 28195 . 28207) (nil part-side css 28188 . 28195) (nil face web-mode-css-property-name-face 28188 . 28195) (nil part-side css 28179 . 28188) (nil part-side css 28178 . 28179) (nil face (rainbow-delimiters-depth-1-face) 28178 . 28179) (nil part-side css 28177 . 28178) (nil part-side css 28163 . 28177) (nil face web-mode-css-selector-class-face 28163 . 28177) (nil part-side css 28160 . 28163) (nil part-side css 28143 . 28160) (nil face web-mode-css-selector-class-face 28143 . 28160) (nil part-side css 28140 . 28143) (nil part-side css 28104 . 28140) (nil face web-mode-css-selector-class-face 28104 . 28140) (nil part-side css 28103 . 28104) (nil part-side css 28102 . 28103) (nil face whitespace-trailing 28102 . 28103) (nil part-side css 28101 . 28102) (nil part-side css 28079 . 28101) (nil face web-mode-css-selector-class-face 28079 . 28101) (nil part-side css 28078 . 28079) (nil part-side css 28042 . 28078) (nil face web-mode-css-selector-class-face 28042 . 28078) (28042 . 28332)) ((#(".v-text-field.v-text-field--enclosed .v-text-field__details, 
.v-text-field.v-text-field--enclosed > .v-input__control > .v-input__slot {
        margin: 0;
        max-height: 32px;
        min-height: 32px !important;
       display: flex!important;
       align-items: center!important
}" 0 36 (part-side css face web-mode-css-selector-class-face) 36 37 (part-side css) 37 59 (part-side css face web-mode-css-selector-class-face) 59 60 (part-side css) 60 61 (part-side css face whitespace-trailing) 61 62 (part-side css) 62 98 (part-side css face web-mode-css-selector-class-face) 98 101 (part-side css) 101 118 (part-side css face web-mode-css-selector-class-face) 118 121 (part-side css) 121 135 (part-side css face web-mode-css-selector-class-face) 135 136 (part-side css) 136 137 (part-side css face (rainbow-delimiters-depth-1-face)) 137 146 (part-side css) 146 153 (part-side css face web-mode-css-property-name-face) 153 165 (part-side css) 165 176 (part-side css face web-mode-css-property-name-face) 176 191 (part-side css) 191 202 (part-side css face web-mode-css-property-name-face) 202 208 (part-side css) 208 218 (part-side css face web-mode-css-priority-face) 218 227 (part-side css) 227 235 (part-side css face web-mode-css-property-name-face) 235 240 (part-side css) 240 250 (part-side css face web-mode-css-priority-face) 250 259 (part-side css) 259 271 (part-side css face web-mode-css-property-name-face) 271 278 (part-side css) 278 288 (part-side css face web-mode-css-priority-face) 288 289 (part-side css) 289 290 (rear-nonsticky nil part-side css face (rainbow-delimiters-depth-1-face))) . 28042) (undo-tree-id2024 . -219) (undo-tree-id2025 . -288) (undo-tree-id2026 . -136) (nil face (rainbow-delimiters-depth-1-face) 28178 . 28179) (nil face (rainbow-delimiters-depth-1-face) 28331 . 28332) (nil rear-nonsticky t 28331 . 28332)) (25671 53680 609730 346000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13799) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) 13800) nil (25671 53820 607041 378000) 0 nil])
([nil nil ((27927 . 27929)) ((#("> " 0 1 (part-side css) 1 2 (part-side css)) . 27927) (undo-tree-id2017 . -2) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) (undo-tree-id2020 . -2) (undo-tree-id2021 . -2) (undo-tree-id2022 . -2) (undo-tree-id2023 . -2)) (25671 53680 444608 494000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13405 . 13406) (nil tag-attr t 13401 . 13406) (nil tag-name "v-textarea" 13401 . 13406) (nil tag-type start 13401 . 13406) (nil font-lock-face web-mode-html-attr-name-face 13401 . 13406) (nil tag-attr-beg 0 13400 . 13401) (nil tag-attr t 13400 . 13401) (nil tag-name "v-textarea" 13400 . 13401) (nil tag-type start 13400 . 13401) (nil font-lock-face web-mode-html-attr-name-face 13400 . 13401) (nil tag-name "v-textarea" 13399 . 13400) (nil tag-type start 13399 . 13400) (nil tag-attr t 13398 . 13399) (nil tag-attr-end 5 13398 . 13399) (nil tag-name "v-textarea" 13398 . 13399) (nil tag-type start 13398 . 13399) (nil font-lock-face web-mode-html-attr-value-face 13398 . 13399) (nil tag-attr t 13388 . 13398) (nil tag-name "v-textarea" 13388 . 13398) (nil tag-type start 13388 . 13398) (nil font-lock-face web-mode-html-attr-value-face 13388 . 13398) (13388 . 13406) (t 25671 53820 654906 264000)) nil (25671 53854 827241 915000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27928) (undo-tree-id1826 . -1) 27929) ((27928 . 27929)) (25671 53680 293249 361000) 0 nil])
([nil nil ((13406 . 13407)) nil (25671 53854 827235 212000) 0 nil])
([nil nil ((#("height:10px;" 0 7 (part-side css face web-mode-css-property-name-face) 7 12 (part-side css)) . 28023) (undo-tree-id1823 . -12) (undo-tree-id1824 . -9) (undo-tree-id1825 . -12)) ((28023 . 28035)) (25671 53680 142496 323000) 0 nil])
([nil nil ((#("x" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("0" 0 1 (tag-name "v-textarea" tag-type start)) . 13407) (#("2" 0 1 (tag-name "v-textarea" tag-type start)) . 13407) (#(" " 0 1 (tag-name "v-textarea" tag-type start)) . 13407) (#(":" 0 1 (tag-name "v-textarea" tag-type start)) . 13407) (#("t" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("h" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("g" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("i" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("r" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("-" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("g" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("n" 0 1 (tag-attr-beg 2 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-engine-face)) . 13407) (#("i" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("d" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("d" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("a" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face)) . 13407) (#("\"" 0 1 (tag-name "v-textarea" tag-type start)) . 13407)) nil (25671 53854 827230 835000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28076 . 28077) (nil part-side css 28076 . 28077) (nil part-side css 28066 . 28076) (nil face web-mode-css-priority-face 28066 . 28076) (nil part-side css 28060 . 28066) (nil part-side css 28049 . 28060) (nil face web-mode-css-property-name-face 28049 . 28060) (nil part-side css 28034 . 28049) (nil part-side css 28023 . 28034) (nil face web-mode-css-property-name-face 28023 . 28034) (28023 . 28077)) ((#("max-height: 32px;
        min-height: 32px !important;" 0 11 (part-side css face web-mode-css-property-name-face) 11 12 (part-side css) 12 13 (part-side css) 13 14 (part-side css) 14 22 (part-side css) 22 26 (part-side css) 26 37 (part-side css face web-mode-css-property-name-face) 37 38 (part-side css) 38 39 (part-side css) 39 40 (part-side css) 40 43 (part-side css) 43 53 (part-side css face web-mode-css-priority-face) 53 54 (rear-nonsticky nil part-side css)) . 28023) (undo-tree-id1976 . -54) (undo-tree-id1977 . -18) (undo-tree-id1978 . -54) (undo-tree-id1979 . -54) (undo-tree-id1980 . -54) (undo-tree-id1981 . -54) (undo-tree-id1982 . -54) (undo-tree-id1983 . -54) (undo-tree-id1984 . -54) (undo-tree-id1985 . -54) (undo-tree-id1986 . -54) (undo-tree-id1987 . -54) (undo-tree-id1988 . -54) (undo-tree-id1989 . -54) (undo-tree-id1990 . -54) (undo-tree-id1991 . -54) (undo-tree-id1992 . -54) (undo-tree-id1993 . -54) (undo-tree-id1994 . -54) (undo-tree-id1995 . -54) (undo-tree-id1996 . -54) (undo-tree-id1997 . -54) (undo-tree-id1998 . -54) (undo-tree-id1999 . -54) (undo-tree-id2000 . -54) (undo-tree-id2001 . -54) (undo-tree-id2002 . -54) (undo-tree-id2003 . -54) (undo-tree-id2004 . -54) (undo-tree-id2005 . -54) (undo-tree-id2006 . -54) (undo-tree-id2007 . -54) (undo-tree-id2008 . -54) (undo-tree-id2009 . -54) (undo-tree-id2010 . -54) (undo-tree-id2011 . -54) (undo-tree-id2012 . -54) (undo-tree-id2013 . -54) (undo-tree-id2014 . -54) (undo-tree-id2015 . -54) (undo-tree-id2016 . -54) (nil rear-nonsticky t 28076 . 28077)) (25671 53679 982121 250000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-textarea" tag-type start)) . -13406) (undo-tree-id2466 . -1) 13407) nil (25671 53854 827224 106000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -28045) 28077) ((28045 . 28049)) (25671 53679 853057 182000) 0 nil])
([nil nil ((13389 . 13390) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13389) (13388 . 13390) (#("\"" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13388) (13388 . 13389)) nil (25671 53854 827220 431000) 0 nil])
([nil nil ((28073 . 28078)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 28073) (undo-tree-id1949 . -5) (undo-tree-id1950 . -1) (undo-tree-id1951 . -5) (undo-tree-id1952 . -5) (undo-tree-id1953 . -5) (undo-tree-id1954 . -5) (undo-tree-id1955 . -5) (undo-tree-id1956 . -5) (undo-tree-id1957 . -5) (undo-tree-id1958 . -5) (undo-tree-id1959 . -5) (undo-tree-id1960 . -5) (undo-tree-id1961 . -5) (undo-tree-id1962 . -5) (undo-tree-id1963 . -5) (undo-tree-id1964 . -5) (undo-tree-id1965 . -5) (undo-tree-id1966 . -5) (undo-tree-id1967 . -5) (undo-tree-id1968 . -5) (undo-tree-id1969 . -5) (undo-tree-id1970 . -5) (undo-tree-id1971 . -5) (undo-tree-id1972 . -5) (undo-tree-id1973 . -5) (undo-tree-id1974 . -5) (undo-tree-id1975 . -5)) (25671 53679 731066 134000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13389)) nil (25671 53854 827217 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28146 . 28147) (nil part-side css 28137 . 28147) (nil face web-mode-css-priority-face 28137 . 28147) (nil part-side css 28130 . 28137) (nil part-side css 28118 . 28130) (nil face web-mode-css-property-name-face 28118 . 28130) (nil part-side css 28109 . 28118) (nil part-side css 28099 . 28109) (nil face web-mode-css-priority-face 28099 . 28109) (nil part-side css 28094 . 28099) (nil part-side css 28086 . 28094) (nil face web-mode-css-property-name-face 28086 . 28094) (nil part-side css 28078 . 28086) (28078 . 28147)) ((#("
       display: flex!important;
       align-items: center!important" 0 1 (part-side css) 1 8 (part-side css) 8 16 (part-side css face web-mode-css-property-name-face) 16 21 (part-side css) 21 31 (part-side css face web-mode-css-priority-face) 31 37 (part-side css) 37 40 (part-side css) 40 52 (part-side css face web-mode-css-property-name-face) 52 59 (part-side css) 59 68 (part-side css face web-mode-css-priority-face) 68 69 (rear-nonsticky nil part-side css face web-mode-css-priority-face)) . 28078) (undo-tree-id1937 . -1) (undo-tree-id1938 . -40) (undo-tree-id1939 . -40) (undo-tree-id1940 . -40) (undo-tree-id1941 . -8) (undo-tree-id1942 . -8) (undo-tree-id1943 . -8) (undo-tree-id1944 . -8) (undo-tree-id1945 . -8) (undo-tree-id1946 . -8) (undo-tree-id1947 . -8) (undo-tree-id1948 . 69) (nil rear-nonsticky t 28146 . 28147)) (25671 53679 430318 880000) 0 nil])
([nil nil ((#("
                                      style=\"margin-top: -10px;\"" 0 1 (tag-name "v-textarea" tag-type start) 1 39 (tag-name "v-textarea" tag-type start) 39 40 (tag-attr-beg 0 tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 40 41 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 42 43 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 43 44 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-equal-face) 45 64 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face) 64 65 (tag-attr t tag-attr-end 5 tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13734) (undo-tree-id2449 . -65) (undo-tree-id2450 . -1) (undo-tree-id2451 . -62) (undo-tree-id2452 . -49) (undo-tree-id2453 . -64) (undo-tree-id2454 . -65) (undo-tree-id2455 . -65) (undo-tree-id2456 . -65) (undo-tree-id2457 . -65) (undo-tree-id2458 . -65) (undo-tree-id2459 . -65) (undo-tree-id2460 . -65) (undo-tree-id2461 . -65) (undo-tree-id2462 . -65) (undo-tree-id2463 . -65) (undo-tree-id2464 . -65) (undo-tree-id2465 . -65)) nil (25671 53876 779099 324000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . 28078) (undo-tree-id1821 . -1) (undo-tree-id1822 . 1)) ((28078 . 28079)) (25671 53679 285855 524000) 0 nil])
([nil nil ((27951 . 27954) (t 25671 53854 873535 285000)) nil (25671 53894 143355 276000) 0 nil] [nil nil ((12315 . 12342) (t 25671 53854 873535 285000)) ((#("
                          " 0 1 (tag-name "v-select" tag-type start) 1 27 (tag-name "v-select" tag-type start)) . 12315) (undo-tree-id2511 . -1) (undo-tree-id2512 . -27) (undo-tree-id2513 . -27) (undo-tree-id2514 . -27) (undo-tree-id2515 . -27) (undo-tree-id2516 . -27) (undo-tree-id2517 . -27) (undo-tree-id2518 . -27) (undo-tree-id2519 . -27) (undo-tree-id2520 . -27) (undo-tree-id2521 . -27) (undo-tree-id2522 . -27) (undo-tree-id2523 . -27) (undo-tree-id2524 . -27) (undo-tree-id2525 . -27) (undo-tree-id2526 . -27) (undo-tree-id2527 . -27) (undo-tree-id2528 . -27) (undo-tree-id2529 . -27) (undo-tree-id2530 . -27) (undo-tree-id2531 . -27) (undo-tree-id2532 . -27) (undo-tree-id2533 . -27) (undo-tree-id2534 . -27) (undo-tree-id2535 . -27) (undo-tree-id2536 . -27) (undo-tree-id2537 . -27) (undo-tree-id2538 . -27) (undo-tree-id2539 . -27) (undo-tree-id2540 . -27) (undo-tree-id2541 . -27) (undo-tree-id2542 . -1) (undo-tree-id2543 . -27) (undo-tree-id2544 . -27) (undo-tree-id2545 . -27) (undo-tree-id2546 . -27) (undo-tree-id2547 . -27) (undo-tree-id2548 . -27) (undo-tree-id2549 . -27) (undo-tree-id2550 . -27) (undo-tree-id2551 . -27) (undo-tree-id2552 . -27) (undo-tree-id2553 . -27) (undo-tree-id2554 . -27)) (25671 53876 409048 829000) 0 nil])
([nil nil ((#("       " 0 7 (part-side css)) . -28078)) ((28078 . 28085)) (25671 53679 127091 69000) 0 nil])
([nil nil ((27954 . 27959)) nil (25671 53894 143353 977000) 0 nil])
([nil nil ((12342 . 12346)) ((#("stye" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face)) . 12342) (undo-tree-id2481 . -3) (undo-tree-id2482 . -4) (undo-tree-id2483 . -4) (undo-tree-id2484 . -4) (undo-tree-id2485 . -4) (undo-tree-id2486 . -4) (undo-tree-id2487 . -4) (undo-tree-id2488 . -4) (undo-tree-id2489 . -4) (undo-tree-id2490 . -4) (undo-tree-id2491 . -4) (undo-tree-id2492 . -4) (undo-tree-id2493 . -4) (undo-tree-id2494 . -4) (undo-tree-id2495 . -3) (undo-tree-id2496 . -3) (undo-tree-id2497 . -3) (undo-tree-id2498 . -3) (undo-tree-id2499 . -4) (undo-tree-id2500 . -4) (undo-tree-id2501 . -4) (undo-tree-id2502 . -4) (undo-tree-id2503 . -4) (undo-tree-id2504 . -4) (undo-tree-id2505 . -4) (undo-tree-id2506 . -4) (undo-tree-id2507 . -4) (undo-tree-id2508 . -4) (undo-tree-id2509 . -4) (undo-tree-id2510 . -4)) (25671 53876 65969 623000) 0 nil])
([nil nil ((#("   " 0 3 (part-side css)) . -28107)) ((28107 . 28110)) (25671 53678 927002 4000) 0 nil])
([nil nil ((27955 . 27969) (#("inTa" 0 4 (part-side css face web-mode-css-selector-class-face)) . -27955) (undo-tree-id2557 . -4) (undo-tree-id2558 . -4) 27959) nil (25671 53894 143352 156000) 0 nil])
([nil nil ((#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face)) . -12345) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) 12346) ((12345 . 12346)) (25671 53875 921739 995000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27962 . 27963) (nil part-side css 27962 . 27963) (nil part-side css 27948 . 27962) (nil face web-mode-css-selector-class-face 27948 . 27962) (nil part-side css 27946 . 27948) (27946 . 27963)) ((#("> .v-input__slot " 0 2 (part-side css) 2 16 (part-side css face web-mode-css-selector-class-face) 16 17 (rear-nonsticky nil part-side css)) . 27946) (undo-tree-id1914 . -17) (undo-tree-id1915 . -17) (undo-tree-id1916 . -17) (undo-tree-id1917 . -17) (undo-tree-id1918 . -17) (undo-tree-id1919 . -17) (undo-tree-id1920 . -17) (undo-tree-id1921 . -17) (undo-tree-id1922 . -17) (undo-tree-id1923 . -17) (undo-tree-id1924 . -17) (undo-tree-id1925 . -17) (undo-tree-id1926 . -17) (undo-tree-id1927 . -17) (undo-tree-id1928 . -17) (undo-tree-id1929 . -17) (undo-tree-id1930 . -17) (undo-tree-id1931 . -17) (undo-tree-id1932 . -17) (undo-tree-id1933 . -17) (undo-tree-id1934 . -17) (undo-tree-id1935 . -17) (undo-tree-id1936 . -17) (nil rear-nonsticky t 27962 . 27963)) (25671 53678 637408 811000) 0 nil])
([nil nil ((27970 . 27972) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -27970) (27969 . 27971)) nil (25671 53894 143347 647000) 0 nil])
([nil nil ((12345 . 12350)) ((#("le=\"\"" 0 1 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-equal-face) 3 4 (tag-attr t tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-attr-end 5 tag-name "v-select" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12345) (undo-tree-id2480 . -4)) (25671 53875 919733 118000) 0 nil])
([nil nil ((27963 . 27964)) ((#(" " 0 1 (part-side css)) . 27963) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1)) (25671 53678 272651 130000) 0 nil])
([nil nil ((27973 . 27975) (#("    " 0 4 (part-side css face whitespace-trailing)) . 27972) (undo-tree-id2555 . -2) (undo-tree-id2556 . 4) (27974 . 27976) (27971 . 27975)) nil (25671 53894 143345 74000) 0 nil])
nil
([nil nil ((#(" " 0 1 (part-side css)) . -27963) (undo-tree-id1820 . -1) 27964) ((27963 . 27964)) (25671 53678 89869 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27989 . 27990) (nil rear-nonsticky t 27989 . 27990) (nil part-side css 27989 . 27990) (nil part-side css 27985 . 27989) (nil part-side css 27984 . 27985) (nil part-side css 27983 . 27984) (nil part-side css 27982 . 27983) (nil face web-mode-css-property-name-face 27982 . 27983) (nil part-side css 27972 . 27982) (nil face web-mode-css-property-name-face 27972 . 27982) (27972 . 27990)) nil (25671 53894 143331 748000) 0 nil])
([nil nil ((#("
  .v-text-field.v-text-field--enclosed .v-text-field__details, 
.v-text-field.v-text-field--enclosed > .v-input__control > .v-input__slot {
        margin: 0;
        max-height: 32px;
        min-height: 32px !important;
       display: flex!important;
       align-items: center!important
}
  " 0 1 (part-side css) 1 3 (part-side css) 3 39 (part-side css face web-mode-css-selector-class-face) 39 40 (part-side css) 40 62 (part-side css face web-mode-css-selector-class-face) 62 63 (part-side css) 63 64 (part-side css face whitespace-trailing) 64 65 (part-side css) 65 101 (part-side css face web-mode-css-selector-class-face) 101 104 (part-side css) 104 121 (part-side css face web-mode-css-selector-class-face) 121 124 (part-side css) 124 138 (part-side css face web-mode-css-selector-class-face) 138 139 (part-side css) 139 140 (part-side css face (rainbow-delimiters-depth-1-face)) 140 149 (part-side css) 149 156 (part-side css face web-mode-css-property-name-face) 156 168 (part-side css) 168 179 (part-side css face web-mode-css-property-name-face) 179 194 (part-side css) 194 205 (part-side css face web-mode-css-property-name-face) 205 211 (part-side css) 211 221 (part-side css face web-mode-css-priority-face) 221 230 (part-side css) 230 238 (part-side css face web-mode-css-property-name-face) 238 243 (part-side css) 243 253 (part-side css face web-mode-css-priority-face) 253 262 (part-side css) 262 274 (part-side css face web-mode-css-property-name-face) 274 281 (part-side css) 281 291 (part-side css face web-mode-css-priority-face) 291 292 (part-side css) 292 293 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face)) 293 294 (part-side css) 294 296 (part-side css face whitespace-trailing)) . 28158) (undo-tree-id1813 . -296) (undo-tree-id1814 . -1) (undo-tree-id1815 . -3) (undo-tree-id1816 . -222) (undo-tree-id1817 . -291) (undo-tree-id1818 . -139) (undo-tree-id1819 . -296)) ((28158 . 28454)) (25671 53677 890521 715000) 0 nil])
([nil nil ((27972 . 27976) 27990) nil (25671 53894 143322 936000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28157) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) 28158) ((28157 . 28158)) (25671 53677 629945 310000) 0 nil])
([nil nil ((#("
                      <v-col>
                        <b class=\"pl-10\"> {{ $t('SensorOverview.TableHeaders.getConfVariables') }}</b>
                      </v-col>
                      <v-col>
                        <v-btn dark color=\"blue\" @click.stop=\"getConfVariables(item['API Key'])\">
                          <v-icon>mdi-file-download-outline</v-icon>
                        </v-btn>
                      </v-col>" 23 24 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 24 29 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "b" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 57 58 (tag-name "b" tag-type start) 58 59 (tag-attr-beg 0 tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 59 60 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 60 61 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 61 62 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 62 63 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 63 64 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-equal-face) 64 70 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (tag-attr t tag-attr-end 5 tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 73 74 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 74 75 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 75 77 (block-side t) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face (rainbow-delimiters-depth-3-face)) 79 80 (block-side t) 80 81 (block-side t face web-mode-variable-name-face) 81 82 (block-side t face web-mode-variable-name-face) 82 83 (block-side t face web-mode-variable-name-face) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 88 (block-side t face web-mode-variable-name-face) 88 89 (block-side t face web-mode-variable-name-face) 89 90 (block-side t face web-mode-variable-name-face) 90 91 (block-side t face web-mode-variable-name-face) 91 92 (block-side t face web-mode-variable-name-face) 92 93 (block-side t face web-mode-variable-name-face) 93 94 (block-side t face web-mode-variable-name-face) 94 95 (block-side t) 95 96 (block-side t face web-mode-variable-name-face) 96 97 (block-side t face web-mode-variable-name-face) 97 98 (block-side t face web-mode-variable-name-face) 98 99 (block-side t face web-mode-variable-name-face) 99 100 (block-side t face web-mode-variable-name-face) 100 101 (block-side t face web-mode-variable-name-face) 101 102 (block-side t face web-mode-variable-name-face) 102 103 (block-side t face web-mode-variable-name-face) 103 104 (block-side t face web-mode-variable-name-face) 104 105 (block-side t face web-mode-variable-name-face) 105 106 (block-side t face web-mode-variable-name-face) 106 107 (block-side t face web-mode-variable-name-face) 107 108 (block-side t) 108 109 (block-side t face web-mode-variable-name-face) 109 110 (block-side t face web-mode-variable-name-face) 110 111 (block-side t face web-mode-variable-name-face) 111 112 (block-side t face web-mode-variable-name-face) 112 113 (block-side t face web-mode-variable-name-face) 113 114 (block-side t face web-mode-variable-name-face) 114 115 (block-side t face web-mode-variable-name-face) 115 116 (block-side t face web-mode-variable-name-face) 116 117 (block-side t face web-mode-variable-name-face) 117 118 (block-side t face web-mode-variable-name-face) 118 119 (block-side t face web-mode-variable-name-face) 119 120 (block-side t face web-mode-variable-name-face) 120 121 (block-side t face web-mode-variable-name-face) 121 122 (block-side t face web-mode-variable-name-face) 122 123 (block-side t face web-mode-variable-name-face) 123 124 (block-side t face web-mode-variable-name-face) 124 125 (block-side t) 125 126 (block-side t face (rainbow-delimiters-depth-3-face)) 126 127 (block-side t) 127 128 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 128 129 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 129 130 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 130 131 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 131 132 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 132 133 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 156 157 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 157 158 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 158 163 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 163 164 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 187 188 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 188 193 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 193 194 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 219 220 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 220 225 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 225 226 (tag-name "v-btn" tag-type start) 226 227 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 227 229 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 229 230 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 230 231 (tag-name "v-btn" tag-type start) 231 232 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 232 236 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 236 237 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 237 242 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 242 243 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 243 244 (tag-name "v-btn" tag-type start) 244 245 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 245 255 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 255 256 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 256 290 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 290 291 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 291 292 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 319 320 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 320 326 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 326 327 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 352 353 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 353 354 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 354 360 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 360 361 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 386 387 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 387 388 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 388 393 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 393 394 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 417 418 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 418 419 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 419 424 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 424 425 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8185) (undo-tree-id2559 . -425) (undo-tree-id2560 . -1) (undo-tree-id2561 . -425) (t 25671 53894 187961 801000)) nil (25671 53978 806001 439000) 0 nil])
([nil nil ((28157 . 28160)) ((#("
  " 0 1 (part-side css) 1 3 (part-side css)) . 28157) (undo-tree-id1892 . -3) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -3) (undo-tree-id1896 . -3) (undo-tree-id1897 . -3) (undo-tree-id1898 . -3) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3)) (25671 53677 324302 881000) 0 nil])
([nil nil ((13713 . 13734)) nil (25671 53978 834698 703000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28158) (undo-tree-id1796 . -2) (undo-tree-id1798 . -2) (undo-tree-id1800 . -2) (undo-tree-id1802 . -2) (undo-tree-id1804 . -2) 28160) ((28158 . 28160)) (25671 53677 87880 774000) 0 nil])
([nil nil ((13734 . 13739)) nil (25671 54020 767538 580000) 0 nil] [nil nil ((nil rear-nonsticky nil 14158 . 14159) (nil tag-name "v-col" 14158 . 14159) (nil tag-type end 14158 . 14159) (nil tag-end t 14158 . 14159) (nil font-lock-face web-mode-html-tag-bracket-face 14158 . 14159) (nil tag-name "v-col" 14153 . 14158) (nil tag-type end 14153 . 14158) (nil font-lock-face web-mode-html-tag-custom-face 14153 . 14158) (nil tag-name "v-col" 14152 . 14153) (nil tag-type end 14152 . 14153) (nil font-lock-face web-mode-html-tag-bracket-face 14152 . 14153) (nil tag-name "v-col" 14151 . 14152) (nil tag-type end 14151 . 14152) (nil tag-beg 22 14151 . 14152) (nil font-lock-face web-mode-html-tag-bracket-face 14151 . 14152) (nil tag-name "v-btn" 14127 . 14128) (nil tag-type end 14127 . 14128) (nil tag-end t 14127 . 14128) (nil font-lock-face web-mode-html-tag-bracket-face 14127 . 14128) (nil tag-name "v-btn" 14122 . 14127) (nil tag-type end 14122 . 14127) (nil font-lock-face web-mode-html-tag-custom-face 14122 . 14127) (nil tag-name "v-btn" 14121 . 14122) (nil tag-type end 14121 . 14122) (nil font-lock-face web-mode-html-tag-bracket-face 14121 . 14122) (nil tag-name "v-btn" 14120 . 14121) (nil tag-type end 14120 . 14121) (nil tag-beg 22 14120 . 14121) (nil font-lock-face web-mode-html-tag-bracket-face 14120 . 14121) (nil tag-name "v-icon" 14094 . 14095) (nil tag-type end 14094 . 14095) (nil tag-end t 14094 . 14095) (nil font-lock-face web-mode-html-tag-bracket-face 14094 . 14095) (nil tag-name "v-icon" 14088 . 14094) (nil tag-type end 14088 . 14094) (nil font-lock-face web-mode-html-tag-custom-face 14088 . 14094) (nil tag-name "v-icon" 14087 . 14088) (nil tag-type end 14087 . 14088) (nil font-lock-face web-mode-html-tag-bracket-face 14087 . 14088) (nil tag-name "v-icon" 14086 . 14087) (nil tag-type end 14086 . 14087) (nil tag-beg 22 14086 . 14087) (nil font-lock-face web-mode-html-tag-bracket-face 14086 . 14087) (nil tag-name "v-icon" 14060 . 14061) (nil tag-type start 14060 . 14061) (nil tag-end t 14060 . 14061) (nil font-lock-face web-mode-html-tag-bracket-face 14060 . 14061) (nil tag-name "v-icon" 14054 . 14060) (nil tag-type start 14054 . 14060) (nil font-lock-face web-mode-html-tag-custom-face 14054 . 14060) (nil tag-name "v-icon" 14053 . 14054) (nil tag-type start 14053 . 14054) (nil tag-beg 18 14053 . 14054) (nil font-lock-face web-mode-html-tag-bracket-face 14053 . 14054) (nil tag-name "v-btn" 14025 . 14026) (nil tag-type start 14025 . 14026) (nil tag-end t 14025 . 14026) (nil font-lock-face web-mode-html-tag-bracket-face 14025 . 14026) (nil tag-attr t 14024 . 14025) (nil tag-attr-end 11 14024 . 14025) (nil tag-name "v-btn" 14024 . 14025) (nil tag-type start 14024 . 14025) (nil font-lock-face web-mode-html-attr-value-face 14024 . 14025) (nil tag-attr t 13990 . 14024) (nil tag-name "v-btn" 13990 . 14024) (nil tag-type start 13990 . 14024) (nil font-lock-face web-mode-html-attr-value-face 13990 . 14024) (nil tag-attr t 13989 . 13990) (nil tag-name "v-btn" 13989 . 13990) (nil tag-type start 13989 . 13990) (nil font-lock-face web-mode-html-attr-equal-face 13989 . 13990) (nil tag-attr t 13979 . 13989) (nil tag-name "v-btn" 13979 . 13989) (nil tag-type start 13979 . 13989) (nil font-lock-face web-mode-html-attr-engine-face 13979 . 13989) (nil tag-attr-beg 2 13978 . 13979) (nil tag-attr t 13978 . 13979) (nil tag-name "v-btn" 13978 . 13979) (nil tag-type start 13978 . 13979) (nil font-lock-face web-mode-html-attr-engine-face 13978 . 13979) (nil tag-name "v-btn" 13977 . 13978) (nil tag-type start 13977 . 13978) (nil tag-attr t 13976 . 13977) (nil tag-attr-end 5 13976 . 13977) (nil tag-name "v-btn" 13976 . 13977) (nil tag-type start 13976 . 13977) (nil font-lock-face web-mode-html-attr-value-face 13976 . 13977) (nil tag-attr t 13971 . 13976) (nil tag-name "v-btn" 13971 . 13976) (nil tag-type start 13971 . 13976) (nil font-lock-face web-mode-html-attr-value-face 13971 . 13976) (nil tag-attr t 13970 . 13971) (nil tag-name "v-btn" 13970 . 13971) (nil tag-type start 13970 . 13971) (nil font-lock-face web-mode-html-attr-equal-face 13970 . 13971) (nil tag-attr t 13966 . 13970) (nil tag-name "v-btn" 13966 . 13970) (nil tag-type start 13966 . 13970) (nil font-lock-face web-mode-html-attr-name-face 13966 . 13970) (nil tag-attr-beg 0 13965 . 13966) (nil tag-attr t 13965 . 13966) (nil tag-name "v-btn" 13965 . 13966) (nil tag-type start 13965 . 13966) (nil font-lock-face web-mode-html-attr-name-face 13965 . 13966) (nil tag-name "v-btn" 13964 . 13965) (nil tag-type start 13964 . 13965) (nil tag-attr t 13963 . 13964) (nil tag-attr-end 0 13963 . 13964) (nil tag-name "v-btn" 13963 . 13964) (nil tag-type start 13963 . 13964) (nil font-lock-face web-mode-html-attr-name-face 13963 . 13964) (nil tag-attr t 13961 . 13963) (nil tag-name "v-btn" 13961 . 13963) (nil tag-type start 13961 . 13963) (nil font-lock-face web-mode-html-attr-name-face 13961 . 13963) (nil tag-attr-beg 0 13960 . 13961) (nil tag-attr t 13960 . 13961) (nil tag-name "v-btn" 13960 . 13961) (nil tag-type start 13960 . 13961) (nil font-lock-face web-mode-html-attr-name-face 13960 . 13961) (nil tag-name "v-btn" 13959 . 13960) (nil tag-type start 13959 . 13960) (nil tag-name "v-btn" 13954 . 13959) (nil tag-type start 13954 . 13959) (nil font-lock-face web-mode-html-tag-custom-face 13954 . 13959) (nil tag-name "v-btn" 13953 . 13954) (nil tag-type start 13953 . 13954) (nil tag-beg 19 13953 . 13954) (nil font-lock-face web-mode-html-tag-bracket-face 13953 . 13954) (nil tag-name "v-col" 13927 . 13928) (nil tag-type start 13927 . 13928) (nil tag-end t 13927 . 13928) (nil font-lock-face web-mode-html-tag-bracket-face 13927 . 13928) (nil tag-name "v-col" 13922 . 13927) (nil tag-type start 13922 . 13927) (nil font-lock-face web-mode-html-tag-custom-face 13922 . 13927) (nil tag-name "v-col" 13921 . 13922) (nil tag-type start 13921 . 13922) (nil tag-beg 18 13921 . 13922) (nil font-lock-face web-mode-html-tag-bracket-face 13921 . 13922) (nil tag-name "v-col" 13897 . 13898) (nil tag-type end 13897 . 13898) (nil tag-end t 13897 . 13898) (nil font-lock-face web-mode-html-tag-bracket-face 13897 . 13898) (nil tag-name "v-col" 13892 . 13897) (nil tag-type end 13892 . 13897) (nil font-lock-face web-mode-html-tag-custom-face 13892 . 13897) (nil tag-name "v-col" 13891 . 13892) (nil tag-type end 13891 . 13892) (nil font-lock-face web-mode-html-tag-bracket-face 13891 . 13892) (nil tag-name "v-col" 13890 . 13891) (nil tag-type end 13890 . 13891) (nil tag-beg 22 13890 . 13891) (nil font-lock-face web-mode-html-tag-bracket-face 13890 . 13891) (nil tag-name "b" 13866 . 13867) (nil tag-type end 13866 . 13867) (nil tag-end t 13866 . 13867) (nil font-lock-face web-mode-html-tag-bracket-face 13866 . 13867) (nil tag-name "b" 13865 . 13866) (nil tag-type end 13865 . 13866) (nil font-lock-face web-mode-html-tag-face 13865 . 13866) (nil tag-name "b" 13864 . 13865) (nil tag-type end 13864 . 13865) (nil font-lock-face web-mode-html-tag-bracket-face 13864 . 13865) (nil tag-name "b" 13863 . 13864) (nil tag-type end 13863 . 13864) (nil tag-beg 20 13863 . 13864) (nil font-lock-face web-mode-html-tag-bracket-face 13863 . 13864) (nil block-side t 13862 . 13863) (nil block-end t 13862 . 13863) (nil block-token delimiter-end 13862 . 13863) (nil font-lock-face web-mode-block-delimiter-face 13862 . 13863) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13862 . 13863) (nil block-side t 13861 . 13862) (nil block-token delimiter-end 13861 . 13862) (nil font-lock-face web-mode-block-delimiter-face 13861 . 13862) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13861 . 13862) (nil block-side t 13860 . 13861) (nil block-side t 13859 . 13860) (nil face (rainbow-delimiters-depth-3-face) 13859 . 13860) (nil block-side t 13858 . 13859) (nil block-side t 13857 . 13858) (nil face web-mode-variable-name-face 13857 . 13858) (nil block-side t 13856 . 13857) (nil face web-mode-variable-name-face 13856 . 13857) (nil block-side t 13855 . 13856) (nil face web-mode-variable-name-face 13855 . 13856) (nil block-side t 13854 . 13855) (nil face web-mode-variable-name-face 13854 . 13855) (nil block-side t 13853 . 13854) (nil face web-mode-variable-name-face 13853 . 13854) (nil block-side t 13852 . 13853) (nil face web-mode-variable-name-face 13852 . 13853) (nil block-side t 13851 . 13852) (nil face web-mode-variable-name-face 13851 . 13852) (nil block-side t 13850 . 13851) (nil face web-mode-variable-name-face 13850 . 13851) (nil block-side t 13849 . 13850) (nil face web-mode-variable-name-face 13849 . 13850) (nil block-side t 13848 . 13849) (nil face web-mode-variable-name-face 13848 . 13849) (nil block-side t 13847 . 13848) (nil face web-mode-variable-name-face 13847 . 13848) (nil block-side t 13846 . 13847) (nil face web-mode-variable-name-face 13846 . 13847) (nil block-side t 13845 . 13846) (nil face web-mode-variable-name-face 13845 . 13846) (nil block-side t 13844 . 13845) (nil face web-mode-variable-name-face 13844 . 13845) (nil block-side t 13843 . 13844) (nil face web-mode-variable-name-face 13843 . 13844) (nil block-side t 13842 . 13843) (nil face web-mode-variable-name-face 13842 . 13843) (nil block-side t 13841 . 13842) (nil block-side t 13840 . 13841) (nil face web-mode-variable-name-face 13840 . 13841) (nil block-side t 13839 . 13840) (nil face web-mode-variable-name-face 13839 . 13840) (nil block-side t 13838 . 13839) (nil face web-mode-variable-name-face 13838 . 13839) (nil block-side t 13837 . 13838) (nil face web-mode-variable-name-face 13837 . 13838) (nil block-side t 13836 . 13837) (nil face web-mode-variable-name-face 13836 . 13837) (nil block-side t 13835 . 13836) (nil face web-mode-variable-name-face 13835 . 13836) (nil block-side t 13834 . 13835) (nil face web-mode-variable-name-face 13834 . 13835) (nil block-side t 13833 . 13834) (nil face web-mode-variable-name-face 13833 . 13834) (nil block-side t 13832 . 13833) (nil face web-mode-variable-name-face 13832 . 13833) (nil block-side t 13831 . 13832) (nil face web-mode-variable-name-face 13831 . 13832) (nil block-side t 13830 . 13831) (nil face web-mode-variable-name-face 13830 . 13831) (nil block-side t 13829 . 13830) (nil face web-mode-variable-name-face 13829 . 13830) (nil block-side t 13828 . 13829) (nil block-side t 13827 . 13828) (nil face web-mode-variable-name-face 13827 . 13828) (nil block-side t 13826 . 13827) (nil face web-mode-variable-name-face 13826 . 13827) (nil block-side t 13825 . 13826) (nil face web-mode-variable-name-face 13825 . 13826) (nil block-side t 13824 . 13825) (nil face web-mode-variable-name-face 13824 . 13825) (nil block-side t 13823 . 13824) (nil face web-mode-variable-name-face 13823 . 13824) (nil block-side t 13822 . 13823) (nil face web-mode-variable-name-face 13822 . 13823) (nil block-side t 13821 . 13822) (nil face web-mode-variable-name-face 13821 . 13822) (nil block-side t 13820 . 13821) (nil face web-mode-variable-name-face 13820 . 13821) (nil block-side t 13819 . 13820) (nil face web-mode-variable-name-face 13819 . 13820) (nil block-side t 13818 . 13819) (nil face web-mode-variable-name-face 13818 . 13819) (nil block-side t 13817 . 13818) (nil face web-mode-variable-name-face 13817 . 13818) (nil block-side t 13816 . 13817) (nil face web-mode-variable-name-face 13816 . 13817) (nil block-side t 13815 . 13816) (nil face web-mode-variable-name-face 13815 . 13816) (nil block-side t 13814 . 13815) (nil face web-mode-variable-name-face 13814 . 13815) (nil block-side t 13813 . 13814) (nil block-side t 13812 . 13813) (nil face (rainbow-delimiters-depth-3-face) 13812 . 13813) (nil block-side t 13811 . 13812) (nil face web-mode-variable-name-face 13811 . 13812) (nil block-side t 13809 . 13811) (nil block-side t 13808 . 13809) (nil block-token delimiter-beg 13808 . 13809) (nil font-lock-face web-mode-block-delimiter-face 13808 . 13809) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13808 . 13809) (nil block-beg 0 13807 . 13808) (nil block-controls 0 13807 . 13808) (nil block-side t 13807 . 13808) (nil block-token delimiter-beg 13807 . 13808) (nil font-lock-face web-mode-block-delimiter-face 13807 . 13808) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13807 . 13808) (nil tag-name "b" 13805 . 13806) (nil tag-type start 13805 . 13806) (nil tag-end t 13805 . 13806) (nil font-lock-face web-mode-html-tag-bracket-face 13805 . 13806) (nil tag-attr t 13804 . 13805) (nil tag-attr-end 5 13804 . 13805) (nil tag-name "b" 13804 . 13805) (nil tag-type start 13804 . 13805) (nil font-lock-face web-mode-html-attr-value-face 13804 . 13805) (nil tag-attr t 13798 . 13804) (nil tag-name "b" 13798 . 13804) (nil tag-type start 13798 . 13804) (nil font-lock-face web-mode-html-attr-value-face 13798 . 13804) (nil tag-attr t 13797 . 13798) (nil tag-name "b" 13797 . 13798) (nil tag-type start 13797 . 13798) (nil font-lock-face web-mode-html-attr-equal-face 13797 . 13798) (nil tag-attr t 13796 . 13797) (nil tag-name "b" 13796 . 13797) (nil tag-type start 13796 . 13797) (nil font-lock-face web-mode-html-attr-name-face 13796 . 13797) (nil tag-attr t 13795 . 13796) (nil tag-name "b" 13795 . 13796) (nil tag-type start 13795 . 13796) (nil font-lock-face web-mode-html-attr-name-face 13795 . 13796) (nil tag-attr t 13794 . 13795) (nil tag-name "b" 13794 . 13795) (nil tag-type start 13794 . 13795) (nil font-lock-face web-mode-html-attr-name-face 13794 . 13795) (nil tag-attr t 13793 . 13794) (nil tag-name "b" 13793 . 13794) (nil tag-type start 13793 . 13794) (nil font-lock-face web-mode-html-attr-name-face 13793 . 13794) (nil tag-attr-beg 0 13792 . 13793) (nil tag-attr t 13792 . 13793) (nil tag-name "b" 13792 . 13793) (nil tag-type start 13792 . 13793) (nil font-lock-face web-mode-html-attr-name-face 13792 . 13793) (nil tag-name "b" 13791 . 13792) (nil tag-type start 13791 . 13792) (nil tag-name "b" 13790 . 13791) (nil tag-type start 13790 . 13791) (nil font-lock-face web-mode-html-tag-face 13790 . 13791) (nil tag-name "b" 13789 . 13790) (nil tag-type start 13789 . 13790) (nil tag-beg 17 13789 . 13790) (nil font-lock-face web-mode-html-tag-bracket-face 13789 . 13790) (nil tag-name "v-col" 13763 . 13764) (nil tag-type start 13763 . 13764) (nil tag-end t 13763 . 13764) (nil font-lock-face web-mode-html-tag-bracket-face 13763 . 13764) (nil tag-name "v-col" 13758 . 13763) (nil tag-type start 13758 . 13763) (nil font-lock-face web-mode-html-tag-custom-face 13758 . 13763) (nil tag-name "v-col" 13757 . 13758) (nil tag-type start 13757 . 13758) (nil tag-beg 18 13757 . 13758) (nil font-lock-face web-mode-html-tag-bracket-face 13757 . 13758) (13734 . 14159)) ((#("
                      <v-col>
                        <b class=\"pl-10\"> {{ $t('SensorOverview.TableHeaders.getConfVariables') }}</b>
                      </v-col>
                      <v-col>
                        <v-btn dark color=\"blue\" @click.stop=\"getConfVariables(item['API Key'])\">
                          <v-icon>mdi-file-download-outline</v-icon>
                        </v-btn>
                      </v-col>" 23 24 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 24 29 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "b" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 57 58 (tag-name "b" tag-type start) 58 59 (tag-attr-beg 0 tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 59 60 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 60 61 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 61 62 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 62 63 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-name-face) 63 64 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-equal-face) 64 70 (tag-attr t tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (tag-attr t tag-attr-end 5 tag-name "b" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 73 74 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 74 75 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 75 77 (block-side t) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face (rainbow-delimiters-depth-3-face)) 79 80 (block-side t) 80 81 (block-side t face web-mode-variable-name-face) 81 82 (block-side t face web-mode-variable-name-face) 82 83 (block-side t face web-mode-variable-name-face) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 88 (block-side t face web-mode-variable-name-face) 88 89 (block-side t face web-mode-variable-name-face) 89 90 (block-side t face web-mode-variable-name-face) 90 91 (block-side t face web-mode-variable-name-face) 91 92 (block-side t face web-mode-variable-name-face) 92 93 (block-side t face web-mode-variable-name-face) 93 94 (block-side t face web-mode-variable-name-face) 94 95 (block-side t) 95 96 (block-side t face web-mode-variable-name-face) 96 97 (block-side t face web-mode-variable-name-face) 97 98 (block-side t face web-mode-variable-name-face) 98 99 (block-side t face web-mode-variable-name-face) 99 100 (block-side t face web-mode-variable-name-face) 100 101 (block-side t face web-mode-variable-name-face) 101 102 (block-side t face web-mode-variable-name-face) 102 103 (block-side t face web-mode-variable-name-face) 103 104 (block-side t face web-mode-variable-name-face) 104 105 (block-side t face web-mode-variable-name-face) 105 106 (block-side t face web-mode-variable-name-face) 106 107 (block-side t face web-mode-variable-name-face) 107 108 (block-side t) 108 109 (block-side t face web-mode-variable-name-face) 109 110 (block-side t face web-mode-variable-name-face) 110 111 (block-side t face web-mode-variable-name-face) 111 112 (block-side t face web-mode-variable-name-face) 112 113 (block-side t face web-mode-variable-name-face) 113 114 (block-side t face web-mode-variable-name-face) 114 115 (block-side t face web-mode-variable-name-face) 115 116 (block-side t face web-mode-variable-name-face) 116 117 (block-side t face web-mode-variable-name-face) 117 118 (block-side t face web-mode-variable-name-face) 118 119 (block-side t face web-mode-variable-name-face) 119 120 (block-side t face web-mode-variable-name-face) 120 121 (block-side t face web-mode-variable-name-face) 121 122 (block-side t face web-mode-variable-name-face) 122 123 (block-side t face web-mode-variable-name-face) 123 124 (block-side t face web-mode-variable-name-face) 124 125 (block-side t) 125 126 (block-side t face (rainbow-delimiters-depth-3-face)) 126 127 (block-side t) 127 128 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 128 129 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 129 130 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 130 131 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 131 132 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 132 133 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 156 157 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 157 158 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 158 163 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 163 164 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 187 188 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 188 193 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 193 194 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 219 220 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 220 225 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 225 226 (tag-name "v-btn" tag-type start) 226 227 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 227 229 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 229 230 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 230 231 (tag-name "v-btn" tag-type start) 231 232 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 232 236 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 236 237 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 237 242 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 242 243 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 243 244 (tag-name "v-btn" tag-type start) 244 245 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 245 255 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 255 256 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 256 290 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 290 291 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 291 292 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 319 320 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 320 326 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 326 327 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 352 353 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 353 354 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 354 360 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 360 361 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 386 387 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 387 388 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 388 393 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 393 394 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 417 418 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 418 419 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 419 424 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 424 425 (rear-nonsticky nil tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13734) (undo-tree-id2562 . -395) (undo-tree-id2563 . -425) (nil tag-name "v-col" 13757 . 13758) (nil tag-name "v-col" 13758 . 13763) (nil tag-name "v-col" 13763 . 13764) (nil tag-name "b" 13789 . 13790) (nil tag-name "b" 13790 . 13791) (nil tag-name "b" 13791 . 13792) (nil tag-name "b" 13792 . 13793) (nil tag-name "b" 13793 . 13794) (nil tag-name "b" 13794 . 13795) (nil tag-name "b" 13795 . 13796) (nil tag-name "b" 13796 . 13797) (nil tag-name "b" 13797 . 13798) (nil tag-name "b" 13798 . 13804) (nil tag-name "b" 13804 . 13805) (nil tag-name "b" 13805 . 13806) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13807 . 13808) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13808 . 13809) (nil face (rainbow-delimiters-depth-3-face) 13812 . 13813) (nil face (rainbow-delimiters-depth-3-face) 13859 . 13860) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13861 . 13862) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13862 . 13863) (nil tag-name "b" 13863 . 13864) (nil tag-name "b" 13864 . 13865) (nil tag-name "b" 13865 . 13866) (nil tag-name "b" 13866 . 13867) (nil tag-name "v-col" 13890 . 13891) (nil tag-name "v-col" 13891 . 13892) (nil tag-name "v-col" 13892 . 13897) (nil tag-name "v-col" 13897 . 13898) (nil tag-name "v-col" 13921 . 13922) (nil tag-name "v-col" 13922 . 13927) (nil tag-name "v-col" 13927 . 13928) (nil tag-name "v-btn" 13953 . 13954) (nil tag-name "v-btn" 13954 . 13959) (nil tag-name "v-btn" 13959 . 13960) (nil tag-name "v-btn" 13960 . 13961) (nil tag-name "v-btn" 13961 . 13963) (nil tag-name "v-btn" 13963 . 13964) (nil tag-name "v-btn" 13964 . 13965) (nil tag-name "v-btn" 13965 . 13966) (nil tag-name "v-btn" 13966 . 13970) (nil tag-name "v-btn" 13970 . 13971) (nil tag-name "v-btn" 13971 . 13976) (nil tag-name "v-btn" 13976 . 13977) (nil tag-name "v-btn" 13977 . 13978) (nil tag-name "v-btn" 13978 . 13979) (nil tag-name "v-btn" 13979 . 13989) (nil tag-name "v-btn" 13989 . 13990) (nil tag-name "v-btn" 13990 . 14024) (nil tag-name "v-btn" 14024 . 14025) (nil tag-name "v-btn" 14025 . 14026) (nil tag-name "v-icon" 14053 . 14054) (nil tag-name "v-icon" 14054 . 14060) (nil tag-name "v-icon" 14060 . 14061) (nil tag-name "v-icon" 14086 . 14087) (nil tag-name "v-icon" 14087 . 14088) (nil tag-name "v-icon" 14088 . 14094) (nil tag-name "v-icon" 14094 . 14095) (nil tag-name "v-btn" 14120 . 14121) (nil tag-name "v-btn" 14121 . 14122) (nil tag-name "v-btn" 14122 . 14127) (nil tag-name "v-btn" 14127 . 14128) (nil tag-name "v-col" 14151 . 14152) (nil tag-name "v-col" 14152 . 14153) (nil tag-name "v-col" 14153 . 14158) (nil tag-name "v-col" 14158 . 14159) (nil rear-nonsticky t 14158 . 14159)) (25671 53978 805964 462000) 0 nil])
([nil nil ((#("
    margin-top: -10px;
    margin-bottom: -20px;" 0 1 (part-side css) 1 5 (part-side css) 5 16 (part-side css face web-mode-css-property-name-face) 16 24 (part-side css) 24 28 (part-side css) 28 42 (part-side css face web-mode-css-property-name-face) 42 48 (part-side css) 48 49 (rear-nonsticky t part-side css)) . 27986) (undo-tree-id1869 . -49) (undo-tree-id1870 . -1) (undo-tree-id1871 . -23) (undo-tree-id1872 . -28) (undo-tree-id1873 . -49) (undo-tree-id1874 . -49) (t 25671 53622 806864 500000)) ((27986 . 28035)) (25671 53676 884472 266000) 0 nil])
([nil nil (("o" . -13737) (undo-tree-id2583 . -1) ("r" . -13738) (undo-tree-id2584 . -1) 13739) nil (25671 54020 767537 305000) 0 nil])
nil
([nil nil ((#("3" 0 1 (part-side css)) . -28003) (undo-tree-id1867 . -1) (#("2" 0 1 (part-side css)) . -28004) (undo-tree-id1868 . -1) 28005) ((28003 . 28005)) (25671 53676 676257 574000) 0 nil])
([nil nil ((13737 . 13739)) nil (25671 54020 767533 900000) 0 nil])
([nil nil ((28003 . 28005)) ((#("20" 0 1 (part-side css) 1 2 (part-side css)) . 28003) (undo-tree-id1884 . -2) (undo-tree-id1885 . -2) (undo-tree-id1886 . -2) (undo-tree-id1887 . -2) (undo-tree-id1888 . -2) (undo-tree-id1889 . -2) (undo-tree-id1890 . -2) (undo-tree-id1891 . -2)) (25671 53676 425099 25000) 0 nil])
([nil nil (("-" . -13735) (undo-tree-id2579 . -1) ("v" . -13736) (undo-tree-id2580 . -1) ("r" . -13737) (undo-tree-id2581 . -1) ("o" . -13738) (undo-tree-id2582 . -1) 13739) nil (25671 54020 767532 146000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -28003) (undo-tree-id1865 . -1) (#("0" 0 1 (part-side css)) . -28004) (undo-tree-id1866 . -1) 28005) ((28003 . 28005)) (25671 53676 256150 976000) 0 nil])
([nil nil ((13735 . 13749)) nil (25671 54020 767525 626000) 0 nil])
([nil nil ((28003 . 28005)) ((#("20" 0 2 (part-side css)) . 28003)) (25671 53676 79066 376000) 0 nil])
([nil nil ((13742 . 13764) (13743 . 13763) (#("                      " 0 22 (face whitespace-trailing)) . 13742) (13742 . 13764) (13742 . 13743) ("                    " . 13742) (13741 . 13762)) nil (25671 54020 767523 988000) 0 nil])
([nil nil ((#("3" 0 1 (part-side css)) . -28025) (undo-tree-id1828 . -1) (undo-tree-id1830 . -1) (undo-tree-id1832 . -1) (undo-tree-id1834 . -1) (undo-tree-id1836 . -1) (undo-tree-id1838 . -1) (undo-tree-id1840 . -1) (undo-tree-id1842 . -1) (undo-tree-id1844 . -1) (undo-tree-id1846 . -1) (undo-tree-id1848 . -1) (undo-tree-id1850 . -1) (undo-tree-id1852 . -1) (#("2" 0 1 (part-side css)) . -28026) (undo-tree-id1853 . -1) (undo-tree-id1855 . -1) (undo-tree-id1857 . -1) (undo-tree-id1859 . -1) (undo-tree-id1861 . -1) (undo-tree-id1863 . -1) 28027) ((28025 . 28027)) (25671 53675 870899 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14188 . 14189) (nil tag-name "v-col" 14188 . 14189) (nil tag-type end 14188 . 14189) (nil tag-end t 14188 . 14189) (nil font-lock-face web-mode-html-tag-bracket-face 14188 . 14189) (nil tag-name "v-col" 14183 . 14188) (nil tag-type end 14183 . 14188) (nil font-lock-face web-mode-html-tag-custom-face 14183 . 14188) (nil tag-name "v-col" 14182 . 14183) (nil tag-type end 14182 . 14183) (nil font-lock-face web-mode-html-tag-bracket-face 14182 . 14183) (nil tag-name "v-col" 14181 . 14182) (nil tag-type end 14181 . 14182) (nil tag-beg 22 14181 . 14182) (nil font-lock-face web-mode-html-tag-bracket-face 14181 . 14182) (nil tag-name "v-btn" 14157 . 14158) (nil tag-type end 14157 . 14158) (nil tag-end t 14157 . 14158) (nil font-lock-face web-mode-html-tag-bracket-face 14157 . 14158) (nil tag-name "v-btn" 14152 . 14157) (nil tag-type end 14152 . 14157) (nil font-lock-face web-mode-html-tag-custom-face 14152 . 14157) (nil tag-name "v-btn" 14151 . 14152) (nil tag-type end 14151 . 14152) (nil font-lock-face web-mode-html-tag-bracket-face 14151 . 14152) (nil tag-name "v-btn" 14150 . 14151) (nil tag-type end 14150 . 14151) (nil tag-beg 22 14150 . 14151) (nil font-lock-face web-mode-html-tag-bracket-face 14150 . 14151) (nil tag-name "v-icon" 14124 . 14125) (nil tag-type end 14124 . 14125) (nil tag-end t 14124 . 14125) (nil font-lock-face web-mode-html-tag-bracket-face 14124 . 14125) (nil tag-name "v-icon" 14118 . 14124) (nil tag-type end 14118 . 14124) (nil font-lock-face web-mode-html-tag-custom-face 14118 . 14124) (nil tag-name "v-icon" 14117 . 14118) (nil tag-type end 14117 . 14118) (nil font-lock-face web-mode-html-tag-bracket-face 14117 . 14118) (nil tag-name "v-icon" 14116 . 14117) (nil tag-type end 14116 . 14117) (nil tag-beg 22 14116 . 14117) (nil font-lock-face web-mode-html-tag-bracket-face 14116 . 14117) (nil tag-name "v-icon" 14090 . 14091) (nil tag-type start 14090 . 14091) (nil tag-end t 14090 . 14091) (nil font-lock-face web-mode-html-tag-bracket-face 14090 . 14091) (nil tag-name "v-icon" 14084 . 14090) (nil tag-type start 14084 . 14090) (nil font-lock-face web-mode-html-tag-custom-face 14084 . 14090) (nil tag-name "v-icon" 14083 . 14084) (nil tag-type start 14083 . 14084) (nil tag-beg 18 14083 . 14084) (nil font-lock-face web-mode-html-tag-bracket-face 14083 . 14084) (nil tag-name "v-btn" 14055 . 14056) (nil tag-type start 14055 . 14056) (nil tag-end t 14055 . 14056) (nil font-lock-face web-mode-html-tag-bracket-face 14055 . 14056) (nil tag-attr t 14054 . 14055) (nil tag-attr-end 11 14054 . 14055) (nil tag-name "v-btn" 14054 . 14055) (nil tag-type start 14054 . 14055) (nil font-lock-face web-mode-html-attr-value-face 14054 . 14055) (nil tag-attr t 14020 . 14054) (nil tag-name "v-btn" 14020 . 14054) (nil tag-type start 14020 . 14054) (nil font-lock-face web-mode-html-attr-value-face 14020 . 14054) (nil tag-attr t 14019 . 14020) (nil tag-name "v-btn" 14019 . 14020) (nil tag-type start 14019 . 14020) (nil font-lock-face web-mode-html-attr-equal-face 14019 . 14020) (nil tag-attr t 14009 . 14019) (nil tag-name "v-btn" 14009 . 14019) (nil tag-type start 14009 . 14019) (nil font-lock-face web-mode-html-attr-engine-face 14009 . 14019) (nil tag-attr-beg 2 14008 . 14009) (nil tag-attr t 14008 . 14009) (nil tag-name "v-btn" 14008 . 14009) (nil tag-type start 14008 . 14009) (nil font-lock-face web-mode-html-attr-engine-face 14008 . 14009) (nil tag-name "v-btn" 14007 . 14008) (nil tag-type start 14007 . 14008) (nil tag-attr t 14006 . 14007) (nil tag-attr-end 5 14006 . 14007) (nil tag-name "v-btn" 14006 . 14007) (nil tag-type start 14006 . 14007) (nil font-lock-face web-mode-html-attr-value-face 14006 . 14007) (nil tag-attr t 14001 . 14006) (nil tag-name "v-btn" 14001 . 14006) (nil tag-type start 14001 . 14006) (nil font-lock-face web-mode-html-attr-value-face 14001 . 14006) (nil tag-attr t 14000 . 14001) (nil tag-name "v-btn" 14000 . 14001) (nil tag-type start 14000 . 14001) (nil font-lock-face web-mode-html-attr-equal-face 14000 . 14001) (nil tag-attr t 13996 . 14000) (nil tag-name "v-btn" 13996 . 14000) (nil tag-type start 13996 . 14000) (nil font-lock-face web-mode-html-attr-name-face 13996 . 14000) (nil tag-attr-beg 0 13995 . 13996) (nil tag-attr t 13995 . 13996) (nil tag-name "v-btn" 13995 . 13996) (nil tag-type start 13995 . 13996) (nil font-lock-face web-mode-html-attr-name-face 13995 . 13996) (nil tag-name "v-btn" 13994 . 13995) (nil tag-type start 13994 . 13995) (nil tag-attr t 13993 . 13994) (nil tag-attr-end 0 13993 . 13994) (nil tag-name "v-btn" 13993 . 13994) (nil tag-type start 13993 . 13994) (nil font-lock-face web-mode-html-attr-name-face 13993 . 13994) (nil tag-attr t 13991 . 13993) (nil tag-name "v-btn" 13991 . 13993) (nil tag-type start 13991 . 13993) (nil font-lock-face web-mode-html-attr-name-face 13991 . 13993) (nil tag-attr-beg 0 13990 . 13991) (nil tag-attr t 13990 . 13991) (nil tag-name "v-btn" 13990 . 13991) (nil tag-type start 13990 . 13991) (nil font-lock-face web-mode-html-attr-name-face 13990 . 13991) (nil tag-name "v-btn" 13989 . 13990) (nil tag-type start 13989 . 13990) (nil tag-name "v-btn" 13984 . 13989) (nil tag-type start 13984 . 13989) (nil font-lock-face web-mode-html-tag-custom-face 13984 . 13989) (nil tag-name "v-btn" 13983 . 13984) (nil tag-type start 13983 . 13984) (nil tag-beg 19 13983 . 13984) (nil font-lock-face web-mode-html-tag-bracket-face 13983 . 13984) (nil tag-name "v-col" 13957 . 13958) (nil tag-type start 13957 . 13958) (nil tag-end t 13957 . 13958) (nil font-lock-face web-mode-html-tag-bracket-face 13957 . 13958) (nil tag-name "v-col" 13952 . 13957) (nil tag-type start 13952 . 13957) (nil font-lock-face web-mode-html-tag-custom-face 13952 . 13957) (nil tag-name "v-col" 13951 . 13952) (nil tag-type start 13951 . 13952) (nil tag-beg 18 13951 . 13952) (nil font-lock-face web-mode-html-tag-bracket-face 13951 . 13952) (nil tag-name "v-col" 13927 . 13928) (nil tag-type end 13927 . 13928) (nil tag-end t 13927 . 13928) (nil font-lock-face web-mode-html-tag-bracket-face 13927 . 13928) (nil tag-name "v-col" 13922 . 13927) (nil tag-type end 13922 . 13927) (nil font-lock-face web-mode-html-tag-custom-face 13922 . 13927) (nil tag-name "v-col" 13921 . 13922) (nil tag-type end 13921 . 13922) (nil font-lock-face web-mode-html-tag-bracket-face 13921 . 13922) (nil tag-name "v-col" 13920 . 13921) (nil tag-type end 13920 . 13921) (nil tag-beg 22 13920 . 13921) (nil font-lock-face web-mode-html-tag-bracket-face 13920 . 13921) (nil tag-name "b" 13896 . 13897) (nil tag-type end 13896 . 13897) (nil tag-end t 13896 . 13897) (nil font-lock-face web-mode-html-tag-bracket-face 13896 . 13897) (nil tag-name "b" 13895 . 13896) (nil tag-type end 13895 . 13896) (nil font-lock-face web-mode-html-tag-face 13895 . 13896) (nil tag-name "b" 13894 . 13895) (nil tag-type end 13894 . 13895) (nil font-lock-face web-mode-html-tag-bracket-face 13894 . 13895) (nil tag-name "b" 13893 . 13894) (nil tag-type end 13893 . 13894) (nil tag-beg 20 13893 . 13894) (nil font-lock-face web-mode-html-tag-bracket-face 13893 . 13894) (nil block-side t 13892 . 13893) (nil block-end t 13892 . 13893) (nil block-token delimiter-end 13892 . 13893) (nil font-lock-face web-mode-block-delimiter-face 13892 . 13893) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13892 . 13893) (nil block-side t 13891 . 13892) (nil block-token delimiter-end 13891 . 13892) (nil font-lock-face web-mode-block-delimiter-face 13891 . 13892) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13891 . 13892) (nil block-side t 13890 . 13891) (nil block-side t 13889 . 13890) (nil face (rainbow-delimiters-depth-3-face) 13889 . 13890) (nil block-side t 13888 . 13889) (nil block-side t 13887 . 13888) (nil face web-mode-variable-name-face 13887 . 13888) (nil block-side t 13886 . 13887) (nil face web-mode-variable-name-face 13886 . 13887) (nil block-side t 13885 . 13886) (nil face web-mode-variable-name-face 13885 . 13886) (nil block-side t 13884 . 13885) (nil face web-mode-variable-name-face 13884 . 13885) (nil block-side t 13883 . 13884) (nil face web-mode-variable-name-face 13883 . 13884) (nil block-side t 13882 . 13883) (nil face web-mode-variable-name-face 13882 . 13883) (nil block-side t 13881 . 13882) (nil face web-mode-variable-name-face 13881 . 13882) (nil block-side t 13880 . 13881) (nil face web-mode-variable-name-face 13880 . 13881) (nil block-side t 13879 . 13880) (nil face web-mode-variable-name-face 13879 . 13880) (nil block-side t 13878 . 13879) (nil face web-mode-variable-name-face 13878 . 13879) (nil block-side t 13877 . 13878) (nil face web-mode-variable-name-face 13877 . 13878) (nil block-side t 13876 . 13877) (nil face web-mode-variable-name-face 13876 . 13877) (nil block-side t 13875 . 13876) (nil face web-mode-variable-name-face 13875 . 13876) (nil block-side t 13874 . 13875) (nil face web-mode-variable-name-face 13874 . 13875) (nil block-side t 13873 . 13874) (nil face web-mode-variable-name-face 13873 . 13874) (nil block-side t 13872 . 13873) (nil face web-mode-variable-name-face 13872 . 13873) (nil block-side t 13871 . 13872) (nil block-side t 13870 . 13871) (nil face web-mode-variable-name-face 13870 . 13871) (nil block-side t 13869 . 13870) (nil face web-mode-variable-name-face 13869 . 13870) (nil block-side t 13868 . 13869) (nil face web-mode-variable-name-face 13868 . 13869) (nil block-side t 13867 . 13868) (nil face web-mode-variable-name-face 13867 . 13868) (nil block-side t 13866 . 13867) (nil face web-mode-variable-name-face 13866 . 13867) (nil block-side t 13865 . 13866) (nil face web-mode-variable-name-face 13865 . 13866) (nil block-side t 13864 . 13865) (nil face web-mode-variable-name-face 13864 . 13865) (nil block-side t 13863 . 13864) (nil face web-mode-variable-name-face 13863 . 13864) (nil block-side t 13862 . 13863) (nil face web-mode-variable-name-face 13862 . 13863) (nil block-side t 13861 . 13862) (nil face web-mode-variable-name-face 13861 . 13862) (nil block-side t 13860 . 13861) (nil face web-mode-variable-name-face 13860 . 13861) (nil block-side t 13859 . 13860) (nil face web-mode-variable-name-face 13859 . 13860) (nil block-side t 13858 . 13859) (nil block-side t 13857 . 13858) (nil face web-mode-variable-name-face 13857 . 13858) (nil block-side t 13856 . 13857) (nil face web-mode-variable-name-face 13856 . 13857) (nil block-side t 13855 . 13856) (nil face web-mode-variable-name-face 13855 . 13856) (nil block-side t 13854 . 13855) (nil face web-mode-variable-name-face 13854 . 13855) (nil block-side t 13853 . 13854) (nil face web-mode-variable-name-face 13853 . 13854) (nil block-side t 13852 . 13853) (nil face web-mode-variable-name-face 13852 . 13853) (nil block-side t 13851 . 13852) (nil face web-mode-variable-name-face 13851 . 13852) (nil block-side t 13850 . 13851) (nil face web-mode-variable-name-face 13850 . 13851) (nil block-side t 13849 . 13850) (nil face web-mode-variable-name-face 13849 . 13850) (nil block-side t 13848 . 13849) (nil face web-mode-variable-name-face 13848 . 13849) (nil block-side t 13847 . 13848) (nil face web-mode-variable-name-face 13847 . 13848) (nil block-side t 13846 . 13847) (nil face web-mode-variable-name-face 13846 . 13847) (nil block-side t 13845 . 13846) (nil face web-mode-variable-name-face 13845 . 13846) (nil block-side t 13844 . 13845) (nil face web-mode-variable-name-face 13844 . 13845) (nil block-side t 13843 . 13844) (nil block-side t 13842 . 13843) (nil face (rainbow-delimiters-depth-3-face) 13842 . 13843) (nil block-side t 13841 . 13842) (nil face web-mode-variable-name-face 13841 . 13842) (nil block-side t 13839 . 13841) (nil block-side t 13838 . 13839) (nil block-token delimiter-beg 13838 . 13839) (nil font-lock-face web-mode-block-delimiter-face 13838 . 13839) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 13838 . 13839) (nil block-beg 0 13837 . 13838) (nil block-controls 0 13837 . 13838) (nil block-side t 13837 . 13838) (nil block-token delimiter-beg 13837 . 13838) (nil font-lock-face web-mode-block-delimiter-face 13837 . 13838) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 13837 . 13838) (nil tag-name "b" 13835 . 13836) (nil tag-type start 13835 . 13836) (nil tag-end t 13835 . 13836) (nil font-lock-face web-mode-html-tag-bracket-face 13835 . 13836) (nil tag-attr t 13834 . 13835) (nil tag-attr-end 5 13834 . 13835) (nil tag-name "b" 13834 . 13835) (nil tag-type start 13834 . 13835) (nil font-lock-face web-mode-html-attr-value-face 13834 . 13835) (nil tag-attr t 13828 . 13834) (nil tag-name "b" 13828 . 13834) (nil tag-type start 13828 . 13834) (nil font-lock-face web-mode-html-attr-value-face 13828 . 13834) (nil tag-attr t 13827 . 13828) (nil tag-name "b" 13827 . 13828) (nil tag-type start 13827 . 13828) (nil font-lock-face web-mode-html-attr-equal-face 13827 . 13828) (nil tag-attr t 13826 . 13827) (nil tag-name "b" 13826 . 13827) (nil tag-type start 13826 . 13827) (nil font-lock-face web-mode-html-attr-name-face 13826 . 13827) (nil tag-attr t 13825 . 13826) (nil tag-name "b" 13825 . 13826) (nil tag-type start 13825 . 13826) (nil font-lock-face web-mode-html-attr-name-face 13825 . 13826) (nil tag-attr t 13824 . 13825) (nil tag-name "b" 13824 . 13825) (nil tag-type start 13824 . 13825) (nil font-lock-face web-mode-html-attr-name-face 13824 . 13825) (nil tag-attr t 13823 . 13824) (nil tag-name "b" 13823 . 13824) (nil tag-type start 13823 . 13824) (nil font-lock-face web-mode-html-attr-name-face 13823 . 13824) (nil tag-attr-beg 0 13822 . 13823) (nil tag-attr t 13822 . 13823) (nil tag-name "b" 13822 . 13823) (nil tag-type start 13822 . 13823) (nil font-lock-face web-mode-html-attr-name-face 13822 . 13823) (nil tag-name "b" 13821 . 13822) (nil tag-type start 13821 . 13822) (nil tag-name "b" 13820 . 13821) (nil tag-type start 13820 . 13821) (nil font-lock-face web-mode-html-tag-face 13820 . 13821) (nil tag-name "b" 13819 . 13820) (nil tag-type start 13819 . 13820) (nil tag-beg 17 13819 . 13820) (nil font-lock-face web-mode-html-tag-bracket-face 13819 . 13820) (nil tag-name "v-col" 13793 . 13794) (nil tag-type start 13793 . 13794) (nil tag-end t 13793 . 13794) (nil font-lock-face web-mode-html-tag-bracket-face 13793 . 13794) (nil tag-name "v-col" 13788 . 13793) (nil tag-type start 13788 . 13793) (nil font-lock-face web-mode-html-tag-custom-face 13788 . 13793) (nil tag-name "v-col" 13787 . 13788) (nil tag-type start 13787 . 13788) (nil tag-beg 18 13787 . 13788) (nil font-lock-face web-mode-html-tag-bracket-face 13787 . 13788) (13764 . 14189)) nil (25671 54020 767505 462000) 0 nil])
([nil nil ((28025 . 28027)) ((#("20" 0 2 (part-side css)) . 28025) (undo-tree-id1875 . -2) (undo-tree-id1876 . -2) (undo-tree-id1877 . -2) (undo-tree-id1878 . -2) (undo-tree-id1879 . -2) (undo-tree-id1880 . -2) (undo-tree-id1881 . -2) (undo-tree-id1882 . -2) (undo-tree-id1883 . -2) (t 25671 53643 202041 292000)) (25671 53643 159150 279000) 0 nil])
([nil nil (("
" . 13741) (undo-tree-id2578 . -1)) nil (25671 54020 767435 648000) 0 nil])
nil
([nil nil ((#("
                    <v-row>
                      <v-col>
                        <v-btn text x-small @click=\"setDynamic('storage')\">
                          <v-icon size=\"17px\">mdi-select-search</v-icon>
                        </v-btn>
                        <b>Storage</b>
                      </v-col>
                      <v-col>
                        {{ item.storage }}
                      </v-col>
                    </v-row>" 21 22 (tag-name "v-row" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 51 52 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 52 57 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 57 58 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 83 84 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 84 89 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 89 90 (tag-name "v-btn" tag-type start) 90 91 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 91 93 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 93 94 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 94 95 (tag-name "v-btn" tag-type start) 95 96 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 96 101 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 101 102 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 102 103 (tag-name "v-btn" tag-type start) 103 104 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 104 105 (block-side t block-token delimiter-beg tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 105 106 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 106 107 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 107 108 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 108 109 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 109 110 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 110 111 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 111 121 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 121 123 (block-side t tag-attr t tag-name "v-btn" tag-type start) 123 124 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 124 125 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 125 126 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 126 127 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 127 128 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 128 129 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 129 130 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 130 132 (block-side t tag-attr t tag-name "v-btn" tag-type start) 132 133 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 133 134 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 161 162 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 162 168 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 168 169 (tag-name "v-icon" tag-type start) 169 170 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 170 173 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 173 174 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 174 179 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 179 180 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 180 181 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 198 199 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 199 200 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 200 206 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 206 207 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 232 233 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 233 234 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 234 239 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 239 240 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 265 266 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 266 267 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 267 268 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 275 276 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 276 277 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 277 278 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 278 279 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 302 303 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 303 304 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 304 309 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 309 310 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 333 334 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 334 339 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 339 340 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 365 366 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 366 367 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 367 368 (block-side t) 368 369 (block-side t face web-mode-variable-name-face) 369 370 (block-side t face web-mode-variable-name-face) 370 371 (block-side t face web-mode-variable-name-face) 371 372 (block-side t face web-mode-variable-name-face) 372 373 (block-side t) 373 374 (block-side t face web-mode-variable-name-face) 374 375 (block-side t face web-mode-variable-name-face) 375 376 (block-side t face web-mode-variable-name-face) 376 377 (block-side t face web-mode-variable-name-face) 377 378 (block-side t face web-mode-variable-name-face) 378 379 (block-side t face web-mode-variable-name-face) 379 380 (block-side t face web-mode-variable-name-face) 380 381 (block-side t) 381 382 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 382 383 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 406 407 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 407 408 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 408 413 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 413 414 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 435 436 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 436 437 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 437 442 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 442 443 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 10866) (undo-tree-id2575 . -443) (undo-tree-id2576 . -1) (undo-tree-id2577 . -443)) nil (25671 54020 767433 339000) 0 nil])
([nil nil ((#("
                    <v-row>
                    </v-row>" 21 22 (tag-name "v-row" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 49 50 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 50 51 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 51 56 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 56 57 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 8157) (undo-tree-id2568 . -57) (undo-tree-id2569 . -1) (undo-tree-id2570 . -28) (undo-tree-id2571 . -28) (undo-tree-id2572 . -28) (undo-tree-id2573 . -28) (undo-tree-id2574 . -57)) nil (25671 54020 767427 552000) 0 nil])
([nil nil ((8157 . 8178)) nil (25671 54020 767418 312000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8620 . 8621) (nil tag-name "v-row" 8620 . 8621) (nil tag-type end 8620 . 8621) (nil tag-end t 8620 . 8621) (nil font-lock-face web-mode-html-tag-bracket-face 8620 . 8621) (nil tag-name "v-row" 8615 . 8620) (nil tag-type end 8615 . 8620) (nil font-lock-face web-mode-html-tag-custom-face 8615 . 8620) (nil tag-name "v-row" 8614 . 8615) (nil tag-type end 8614 . 8615) (nil font-lock-face web-mode-html-tag-bracket-face 8614 . 8615) (nil tag-name "v-row" 8613 . 8614) (nil tag-type end 8613 . 8614) (nil tag-beg 22 8613 . 8614) (nil font-lock-face web-mode-html-tag-bracket-face 8613 . 8614) (nil tag-name "v-col" 8591 . 8592) (nil tag-type end 8591 . 8592) (nil tag-end t 8591 . 8592) (nil font-lock-face web-mode-html-tag-bracket-face 8591 . 8592) (nil tag-name "v-col" 8586 . 8591) (nil tag-type end 8586 . 8591) (nil font-lock-face web-mode-html-tag-custom-face 8586 . 8591) (nil tag-name "v-col" 8585 . 8586) (nil tag-type end 8585 . 8586) (nil font-lock-face web-mode-html-tag-bracket-face 8585 . 8586) (nil tag-name "v-col" 8584 . 8585) (nil tag-type end 8584 . 8585) (nil tag-beg 22 8584 . 8585) (nil font-lock-face web-mode-html-tag-bracket-face 8584 . 8585) (nil block-side t 8560 . 8561) (nil block-end t 8560 . 8561) (nil block-token delimiter-end 8560 . 8561) (nil font-lock-face web-mode-block-delimiter-face 8560 . 8561) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 8560 . 8561) (nil block-side t 8559 . 8560) (nil block-token delimiter-end 8559 . 8560) (nil font-lock-face web-mode-block-delimiter-face 8559 . 8560) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 8559 . 8560) (nil block-side t 8558 . 8559) (nil block-side t 8557 . 8558) (nil face web-mode-variable-name-face 8557 . 8558) (nil block-side t 8556 . 8557) (nil face web-mode-variable-name-face 8556 . 8557) (nil block-side t 8555 . 8556) (nil face web-mode-variable-name-face 8555 . 8556) (nil block-side t 8554 . 8555) (nil face web-mode-variable-name-face 8554 . 8555) (nil block-side t 8553 . 8554) (nil face web-mode-variable-name-face 8553 . 8554) (nil block-side t 8552 . 8553) (nil face web-mode-variable-name-face 8552 . 8553) (nil block-side t 8551 . 8552) (nil face web-mode-variable-name-face 8551 . 8552) (nil block-side t 8550 . 8551) (nil block-side t 8549 . 8550) (nil face web-mode-variable-name-face 8549 . 8550) (nil block-side t 8548 . 8549) (nil face web-mode-variable-name-face 8548 . 8549) (nil block-side t 8547 . 8548) (nil face web-mode-variable-name-face 8547 . 8548) (nil block-side t 8546 . 8547) (nil face web-mode-variable-name-face 8546 . 8547) (nil block-side t 8545 . 8546) (nil block-side t 8544 . 8545) (nil block-token delimiter-beg 8544 . 8545) (nil font-lock-face web-mode-block-delimiter-face 8544 . 8545) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 8544 . 8545) (nil block-beg 0 8543 . 8544) (nil block-controls 0 8543 . 8544) (nil block-side t 8543 . 8544) (nil block-token delimiter-beg 8543 . 8544) (nil font-lock-face web-mode-block-delimiter-face 8543 . 8544) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 8543 . 8544) (nil tag-name "v-col" 8517 . 8518) (nil tag-type start 8517 . 8518) (nil tag-end t 8517 . 8518) (nil font-lock-face web-mode-html-tag-bracket-face 8517 . 8518) (nil tag-name "v-col" 8512 . 8517) (nil tag-type start 8512 . 8517) (nil font-lock-face web-mode-html-tag-custom-face 8512 . 8517) (nil tag-name "v-col" 8511 . 8512) (nil tag-type start 8511 . 8512) (nil tag-beg 18 8511 . 8512) (nil font-lock-face web-mode-html-tag-bracket-face 8511 . 8512) (nil tag-name "v-col" 8487 . 8488) (nil tag-type end 8487 . 8488) (nil tag-end t 8487 . 8488) (nil font-lock-face web-mode-html-tag-bracket-face 8487 . 8488) (nil tag-name "v-col" 8482 . 8487) (nil tag-type end 8482 . 8487) (nil font-lock-face web-mode-html-tag-custom-face 8482 . 8487) (nil tag-name "v-col" 8481 . 8482) (nil tag-type end 8481 . 8482) (nil font-lock-face web-mode-html-tag-bracket-face 8481 . 8482) (nil tag-name "v-col" 8480 . 8481) (nil tag-type end 8480 . 8481) (nil tag-beg 22 8480 . 8481) (nil font-lock-face web-mode-html-tag-bracket-face 8480 . 8481) (nil tag-name "b" 8456 . 8457) (nil tag-type end 8456 . 8457) (nil tag-end t 8456 . 8457) (nil font-lock-face web-mode-html-tag-bracket-face 8456 . 8457) (nil tag-name "b" 8455 . 8456) (nil tag-type end 8455 . 8456) (nil font-lock-face web-mode-html-tag-face 8455 . 8456) (nil tag-name "b" 8454 . 8455) (nil tag-type end 8454 . 8455) (nil font-lock-face web-mode-html-tag-bracket-face 8454 . 8455) (nil tag-name "b" 8453 . 8454) (nil tag-type end 8453 . 8454) (nil tag-beg 20 8453 . 8454) (nil font-lock-face web-mode-html-tag-bracket-face 8453 . 8454) (nil tag-name "b" 8445 . 8446) (nil tag-type start 8445 . 8446) (nil tag-end t 8445 . 8446) (nil font-lock-face web-mode-html-tag-bracket-face 8445 . 8446) (nil tag-name "b" 8444 . 8445) (nil tag-type start 8444 . 8445) (nil font-lock-face web-mode-html-tag-face 8444 . 8445) (nil tag-name "b" 8443 . 8444) (nil tag-type start 8443 . 8444) (nil tag-beg 16 8443 . 8444) (nil font-lock-face web-mode-html-tag-bracket-face 8443 . 8444) (nil tag-name "v-btn" 8417 . 8418) (nil tag-type end 8417 . 8418) (nil tag-end t 8417 . 8418) (nil font-lock-face web-mode-html-tag-bracket-face 8417 . 8418) (nil tag-name "v-btn" 8412 . 8417) (nil tag-type end 8412 . 8417) (nil font-lock-face web-mode-html-tag-custom-face 8412 . 8417) (nil tag-name "v-btn" 8411 . 8412) (nil tag-type end 8411 . 8412) (nil font-lock-face web-mode-html-tag-bracket-face 8411 . 8412) (nil tag-name "v-btn" 8410 . 8411) (nil tag-type end 8410 . 8411) (nil tag-beg 22 8410 . 8411) (nil font-lock-face web-mode-html-tag-bracket-face 8410 . 8411) (nil tag-name "v-icon" 8384 . 8385) (nil tag-type end 8384 . 8385) (nil tag-end t 8384 . 8385) (nil font-lock-face web-mode-html-tag-bracket-face 8384 . 8385) (nil tag-name "v-icon" 8378 . 8384) (nil tag-type end 8378 . 8384) (nil font-lock-face web-mode-html-tag-custom-face 8378 . 8384) (nil tag-name "v-icon" 8377 . 8378) (nil tag-type end 8377 . 8378) (nil font-lock-face web-mode-html-tag-bracket-face 8377 . 8378) (nil tag-name "v-icon" 8376 . 8377) (nil tag-type end 8376 . 8377) (nil tag-beg 22 8376 . 8377) (nil font-lock-face web-mode-html-tag-bracket-face 8376 . 8377) (nil tag-name "v-icon" 8358 . 8359) (nil tag-type start 8358 . 8359) (nil tag-end t 8358 . 8359) (nil font-lock-face web-mode-html-tag-bracket-face 8358 . 8359) (nil tag-attr t 8357 . 8358) (nil tag-attr-end 4 8357 . 8358) (nil tag-name "v-icon" 8357 . 8358) (nil tag-type start 8357 . 8358) (nil font-lock-face web-mode-html-attr-value-face 8357 . 8358) (nil tag-attr t 8352 . 8357) (nil tag-name "v-icon" 8352 . 8357) (nil tag-type start 8352 . 8357) (nil font-lock-face web-mode-html-attr-value-face 8352 . 8357) (nil tag-attr t 8351 . 8352) (nil tag-name "v-icon" 8351 . 8352) (nil tag-type start 8351 . 8352) (nil font-lock-face web-mode-html-attr-equal-face 8351 . 8352) (nil tag-attr t 8348 . 8351) (nil tag-name "v-icon" 8348 . 8351) (nil tag-type start 8348 . 8351) (nil font-lock-face web-mode-html-attr-name-face 8348 . 8351) (nil tag-attr-beg 0 8347 . 8348) (nil tag-attr t 8347 . 8348) (nil tag-name "v-icon" 8347 . 8348) (nil tag-type start 8347 . 8348) (nil font-lock-face web-mode-html-attr-name-face 8347 . 8348) (nil tag-name "v-icon" 8346 . 8347) (nil tag-type start 8346 . 8347) (nil tag-name "v-icon" 8340 . 8346) (nil tag-type start 8340 . 8346) (nil font-lock-face web-mode-html-tag-custom-face 8340 . 8346) (nil tag-name "v-icon" 8339 . 8340) (nil tag-type start 8339 . 8340) (nil tag-beg 19 8339 . 8340) (nil font-lock-face web-mode-html-tag-bracket-face 8339 . 8340) (nil tag-name "v-btn" 8311 . 8312) (nil tag-type start 8311 . 8312) (nil tag-end t 8311 . 8312) (nil font-lock-face web-mode-html-tag-bracket-face 8311 . 8312) (nil block-side t 8310 . 8311) (nil block-end t 8310 . 8311) (nil block-token delimiter-end 8310 . 8311) (nil tag-attr t 8310 . 8311) (nil tag-attr-end 5 8310 . 8311) (nil tag-name "v-btn" 8310 . 8311) (nil tag-type start 8310 . 8311) (nil font-lock-face web-mode-block-delimiter-face 8310 . 8311) (nil block-side t 8308 . 8310) (nil tag-attr t 8308 . 8310) (nil tag-name "v-btn" 8308 . 8310) (nil tag-type start 8308 . 8310) (nil block-side t 8307 . 8308) (nil tag-attr t 8307 . 8308) (nil tag-name "v-btn" 8307 . 8308) (nil tag-type start 8307 . 8308) (nil face web-mode-variable-name-face 8307 . 8308) (nil block-side t 8306 . 8307) (nil tag-attr t 8306 . 8307) (nil tag-name "v-btn" 8306 . 8307) (nil tag-type start 8306 . 8307) (nil face web-mode-variable-name-face 8306 . 8307) (nil block-side t 8305 . 8306) (nil tag-attr t 8305 . 8306) (nil tag-name "v-btn" 8305 . 8306) (nil tag-type start 8305 . 8306) (nil face web-mode-variable-name-face 8305 . 8306) (nil block-side t 8304 . 8305) (nil tag-attr t 8304 . 8305) (nil tag-name "v-btn" 8304 . 8305) (nil tag-type start 8304 . 8305) (nil face web-mode-variable-name-face 8304 . 8305) (nil block-side t 8303 . 8304) (nil tag-attr t 8303 . 8304) (nil tag-name "v-btn" 8303 . 8304) (nil tag-type start 8303 . 8304) (nil face web-mode-variable-name-face 8303 . 8304) (nil block-side t 8302 . 8303) (nil tag-attr t 8302 . 8303) (nil tag-name "v-btn" 8302 . 8303) (nil tag-type start 8302 . 8303) (nil face web-mode-variable-name-face 8302 . 8303) (nil block-side t 8301 . 8302) (nil tag-attr t 8301 . 8302) (nil tag-name "v-btn" 8301 . 8302) (nil tag-type start 8301 . 8302) (nil face web-mode-variable-name-face 8301 . 8302) (nil block-side t 8299 . 8301) (nil tag-attr t 8299 . 8301) (nil tag-name "v-btn" 8299 . 8301) (nil tag-type start 8299 . 8301) (nil block-side t 8289 . 8299) (nil tag-attr t 8289 . 8299) (nil tag-name "v-btn" 8289 . 8299) (nil tag-type start 8289 . 8299) (nil face web-mode-function-call-face 8289 . 8299) (nil block-side t 8288 . 8289) (nil block-token delimiter-beg 8288 . 8289) (nil tag-attr t 8288 . 8289) (nil tag-name "v-btn" 8288 . 8289) (nil tag-type start 8288 . 8289) (nil font-lock-face web-mode-block-delimiter-face 8288 . 8289) (nil block-side t 8287 . 8288) (nil block-token delimiter-beg 8287 . 8288) (nil tag-attr t 8287 . 8288) (nil tag-name "v-btn" 8287 . 8288) (nil tag-type start 8287 . 8288) (nil font-lock-face web-mode-block-delimiter-face 8287 . 8288) (nil block-side t 8286 . 8287) (nil block-token delimiter-beg 8286 . 8287) (nil tag-attr t 8286 . 8287) (nil tag-name "v-btn" 8286 . 8287) (nil tag-type start 8286 . 8287) (nil font-lock-face web-mode-block-delimiter-face 8286 . 8287) (nil block-side t 8285 . 8286) (nil block-token delimiter-beg 8285 . 8286) (nil tag-attr t 8285 . 8286) (nil tag-name "v-btn" 8285 . 8286) (nil tag-type start 8285 . 8286) (nil font-lock-face web-mode-block-delimiter-face 8285 . 8286) (nil block-side t 8284 . 8285) (nil block-token delimiter-beg 8284 . 8285) (nil tag-attr t 8284 . 8285) (nil tag-name "v-btn" 8284 . 8285) (nil tag-type start 8284 . 8285) (nil font-lock-face web-mode-block-delimiter-face 8284 . 8285) (nil block-side t 8283 . 8284) (nil block-token delimiter-beg 8283 . 8284) (nil tag-attr t 8283 . 8284) (nil tag-name "v-btn" 8283 . 8284) (nil tag-type start 8283 . 8284) (nil font-lock-face web-mode-block-delimiter-face 8283 . 8284) (nil block-side t 8282 . 8283) (nil block-token delimiter-beg 8282 . 8283) (nil tag-attr-beg 0 8282 . 8283) (nil tag-attr t 8282 . 8283) (nil tag-name "v-btn" 8282 . 8283) (nil tag-type start 8282 . 8283) (nil font-lock-face web-mode-block-delimiter-face 8282 . 8283) (nil block-beg 0 8281 . 8282) (nil block-controls 0 8281 . 8282) (nil block-side t 8281 . 8282) (nil block-token delimiter-beg 8281 . 8282) (nil tag-name "v-btn" 8281 . 8282) (nil tag-type start 8281 . 8282) (nil font-lock-face web-mode-block-delimiter-face 8281 . 8282) (nil tag-name "v-btn" 8280 . 8281) (nil tag-type start 8280 . 8281) (nil tag-attr t 8279 . 8280) (nil tag-attr-end 0 8279 . 8280) (nil tag-name "v-btn" 8279 . 8280) (nil tag-type start 8279 . 8280) (nil font-lock-face web-mode-html-attr-name-face 8279 . 8280) (nil tag-attr t 8274 . 8279) (nil tag-name "v-btn" 8274 . 8279) (nil tag-type start 8274 . 8279) (nil font-lock-face web-mode-html-attr-name-face 8274 . 8279) (nil tag-attr-beg 0 8273 . 8274) (nil tag-attr t 8273 . 8274) (nil tag-name "v-btn" 8273 . 8274) (nil tag-type start 8273 . 8274) (nil font-lock-face web-mode-html-attr-name-face 8273 . 8274) (nil tag-name "v-btn" 8272 . 8273) (nil tag-type start 8272 . 8273) (nil tag-attr t 8271 . 8272) (nil tag-attr-end 0 8271 . 8272) (nil tag-name "v-btn" 8271 . 8272) (nil tag-type start 8271 . 8272) (nil font-lock-face web-mode-html-attr-name-face 8271 . 8272) (nil tag-attr t 8269 . 8271) (nil tag-name "v-btn" 8269 . 8271) (nil tag-type start 8269 . 8271) (nil font-lock-face web-mode-html-attr-name-face 8269 . 8271) (nil tag-attr-beg 0 8268 . 8269) (nil tag-attr t 8268 . 8269) (nil tag-name "v-btn" 8268 . 8269) (nil tag-type start 8268 . 8269) (nil font-lock-face web-mode-html-attr-name-face 8268 . 8269) (nil tag-name "v-btn" 8267 . 8268) (nil tag-type start 8267 . 8268) (nil tag-name "v-btn" 8262 . 8267) (nil tag-type start 8262 . 8267) (nil font-lock-face web-mode-html-tag-custom-face 8262 . 8267) (nil tag-name "v-btn" 8261 . 8262) (nil tag-type start 8261 . 8262) (nil tag-beg 19 8261 . 8262) (nil font-lock-face web-mode-html-tag-bracket-face 8261 . 8262) (nil tag-name "v-col" 8235 . 8236) (nil tag-type start 8235 . 8236) (nil tag-end t 8235 . 8236) (nil font-lock-face web-mode-html-tag-bracket-face 8235 . 8236) (nil tag-name "v-col" 8230 . 8235) (nil tag-type start 8230 . 8235) (nil font-lock-face web-mode-html-tag-custom-face 8230 . 8235) (nil tag-name "v-col" 8229 . 8230) (nil tag-type start 8229 . 8230) (nil tag-beg 18 8229 . 8230) (nil font-lock-face web-mode-html-tag-bracket-face 8229 . 8230) (nil tag-name "v-row" 8205 . 8206) (nil tag-type start 8205 . 8206) (nil tag-end t 8205 . 8206) (nil font-lock-face web-mode-html-tag-bracket-face 8205 . 8206) (nil tag-name "v-row" 8200 . 8205) (nil tag-type start 8200 . 8205) (nil font-lock-face web-mode-html-tag-custom-face 8200 . 8205) (nil tag-name "v-row" 8199 . 8200) (nil tag-type start 8199 . 8200) (nil tag-beg 18 8199 . 8200) (nil font-lock-face web-mode-html-tag-bracket-face 8199 . 8200) (8178 . 8621)) nil (25671 54020 767399 894000) 0 nil])
([nil nil (("
" . 8157) (undo-tree-id2567 . -1)) nil (25671 54020 767324 599000) 0 nil])
([nil nil ((#("                      " 0 22 (face whitespace-trailing)) . -13684) (undo-tree-id2564 . -22) (#("                    " 0 20 (face whitespace-trailing)) . -8157) (undo-tree-id2565 . -20) (undo-tree-id2566 . -20)) nil (25671 54020 767317 877000) 0 nil])
([nil nil ((998 . 1009) (990 . 999) (t 25671 54020 816925 742000)) nil (25671 54141 348349 517000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1008) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) 1009) nil (25671 54166 398262 451000) 0 nil])
([nil nil ((982 . 986) (974 . 983) (t 25671 54141 405786 987000)) nil (25671 54175 136890 174000) 0 nil] [nil nil ((982 . 988) (974 . 983) (t 25671 54141 405786 987000)) ((#(" style=\"\"" 0 1 (tag-name "v-card-text" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 8 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-attr-end 5 tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . 974) (undo-tree-id2593 . -8) (undo-tree-id2594 . -8) (undo-tree-id2595 . -4) (#("margin" 0 6 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . 982) (undo-tree-id2596 . -5) (undo-tree-id2597 . -6)) (25671 54166 396024 307000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . -984) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . -985) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) 986) nil (25671 54175 136885 248000) 0 nil])
nil
([nil nil ((984 . 986)) nil (25671 54175 136864 264000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . -985) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) 986) nil (25671 54175 136857 666000) 0 nil])
([nil nil ((985 . 988) (t 25671 54175 189837 727000)) nil (25671 54198 847318 909000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . -987) (undo-tree-id2625 . -1) 988) nil (25671 54198 847315 819000) 0 nil])
([nil nil ((987 . 990)) nil (25671 54198 847299 30000) 0 nil])
([nil nil ((129 . 133) (121 . 130) (t 25671 54198 897829 68000)) nil (25671 54265 116592 611000) 0 nil])
([nil nil ((2108 . 2118) (2100 . 2109) (t 25671 54265 165626 166000)) nil (25671 54306 788969 83000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card-text" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2117) (undo-tree-id2626 . -1) 2118) nil (25671 54306 788962 895000) 0 nil])
([nil nil ((4709 . 4728) (t 25671 54306 837374 821000)) nil (25671 54375 796570 686000) 0 nil])
([nil nil ((4728 . 4734)) nil (25671 54375 796568 794000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-btn" tag-type start)) . -4733) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) 4734) nil (25671 54375 796563 570000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3755) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) 3756 (t 25671 54375 844771 333000)) nil (25671 54403 815914 315000) 0 nil])
([nil nil ((3755 . 3756)) nil (25671 54403 815895 24000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3754) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (#("0" 0 1 (tag-attr t tag-name "v-avatar" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3755) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) 3756 (t 25671 54403 864465 412000)) nil (25671 54412 571715 314000) 0 nil])
([nil nil ((3754 . 3756)) nil (25671 54412 571514 901000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5474) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) 5475 (t 25671 54412 620363 85000)) nil (25671 54933 28228 614000) 0 nil])
([nil nil ((5474 . 5476)) nil (25671 54933 28208 536000) 0 nil])
([nil nil ((#("tyle=\"padding: 10px;\"" 0 4 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 6 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 6 20 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5459) (undo-tree-id2719 . -21) (undo-tree-id2720 . -15) (undo-tree-id2721 . -21) (t 25671 54933 78166 781000)) nil (25671 54989 393628 169000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "td" tag-type start)) . -5457) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5458) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) 5459) nil (25671 54989 393623 128000) 0 nil])
([nil nil ((5456 . 5460)) nil (25671 54989 393614 569000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5459) (undo-tree-id2712 . -1) 5460) nil (25671 54989 393613 180000) 0 nil])
([nil nil ((5459 . 5462)) nil (25671 54989 393610 314000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2710 . -1) (#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5461) (undo-tree-id2711 . -1) 5462) nil (25671 54989 393608 204000) 0 nil])
([nil nil ((5460 . 5463)) nil (25671 54989 393603 428000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5462) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) 5463) nil (25671 54989 393597 460000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5461) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) 5462 (t 25671 54989 440729 106000)) nil (25671 55004 226723 125000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55004 226693 346000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) 5461 (t 25671 55004 276343 561000)) nil (25671 55009 504303 826000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55009 504259 273000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) 5461 (t 25671 55009 552205 771000)) nil (25671 55019 793082 407000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55019 793032 550000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) 5461 (t 25671 55019 839936 80000)) nil (25671 55029 185503 570000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55029 185458 432000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5456) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (#("p" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5457) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (#("t" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5458) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (#("-" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5459) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2848 . -1) 5461 (t 25671 55029 231688 731000)) nil (25671 55044 53385 44000) 0 nil])
([nil nil ((5457 . 5460)) nil (25671 55044 53371 964000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "td" tag-type start)) . -5457) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5458) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5459) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) 5460) nil (25671 55044 53369 693000) 0 nil])
([nil nil ((5456 . 5457)) nil (25671 55044 53361 929000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5456) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) 5457) nil (25671 55044 53359 297000) 0 nil])
([nil nil ((5456 . 5462)) nil (25671 55044 53337 573000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5461) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) 5462) nil (25671 55044 53331 789000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) 5461 (t 25671 55044 107294 786000)) nil (25671 55061 432806 415000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55061 432752 689000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2882 . -1) 5461 (t 25671 55061 486831 204000)) nil (25671 55082 213261 245000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55082 213245 734000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5456) (undo-tree-id2895 . -1) (#("p" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5457) (undo-tree-id2896 . -1) (#("a" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5458) (undo-tree-id2897 . -1) (#("-" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5459) (undo-tree-id2898 . -1) (#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2899 . -1) 5461 (t 25671 55082 262272 539000)) nil (25671 55106 543283 197000) 0 nil])
([nil nil ((5465 . 5479) (5457 . 5466)) nil (25671 55106 543275 728000) 0 nil])
([nil nil ((5479 . 5490)) nil (25671 55106 543274 600000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5489) (undo-tree-id2894 . -1) 5490) nil (25671 55120 171681 249000) 0 nil])
([nil nil ((#(" style=\"padding: 0px 0xp 0xp 0xp\"" 0 1 (tag-name "td" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 17 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 18 21 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 22 25 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 26 29 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 30 32 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5457) (undo-tree-id2947 . -33) (undo-tree-id2948 . -11) (undo-tree-id2949 . -14) (undo-tree-id2950 . -33)) nil (25671 55134 156319 301000) 0 nil] [nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5474) (undo-tree-id2893 . -1) 5475) ((5474 . 5475)) (25671 55119 938872 658000) 0 nil])
([nil nil ((5456 . 5460)) nil (25671 55134 156312 802000) 0 nil])
([nil nil ((5474 . 5475)) ((#("5" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5474)) (25671 55119 676299 142000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5458) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (#("-" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5459) (undo-tree-id2946 . -1) 5460) nil (25671 55134 156311 109000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5478) (undo-tree-id2892 . -1) 5479) ((5478 . 5479)) (25671 55119 340852 922000) 0 nil])
([nil nil ((5458 . 5464)) nil (25671 55134 156306 404000) 0 nil])
([nil nil ((5478 . 5479)) ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5478)) (25671 55119 29586 801000) 0 nil])
([nil nil ((5464 . 5477)) nil (25671 55134 156305 395000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5482) (undo-tree-id2891 . -1) 5483) ((5482 . 5483)) (25671 55118 689713 240000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5476) (undo-tree-id2943 . -1) 5477) nil (25671 55134 156304 5000) 0 nil])
([nil nil ((5482 . 5483)) ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5482)) (25671 55118 392705 702000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) 5461) nil (25671 55134 156299 65000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5486) (undo-tree-id2883 . -1) (undo-tree-id2885 . -1) (undo-tree-id2887 . -1) (undo-tree-id2889 . -1) 5487) ((5486 . 5487)) (25671 55118 44154 104000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55134 156262 595000) 0 nil])
([nil nil ((5486 . 5487)) ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5486) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (t 25671 55106 593612 260000)) (25671 55106 543235 676000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) 5461 (t 25671 55134 204855 493000)) nil (25671 55144 287594 874000) 0 nil])
nil
([nil nil ((5460 . 5461)) nil (25671 55144 287556 339000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5460) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) 5461 (t 25671 55144 336575 890000)) nil (25671 55148 697409 862000) 0 nil])
([nil nil ((5460 . 5461)) nil (25671 55148 697383 253000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5465) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) 5466 (t 25671 55148 748453 825000)) nil (25671 55160 599 92000) 0 nil])
([nil nil ((5465 . 5466)) nil (25671 55160 561 722000) 0 nil])
([nil nil ((5477 . 5486) (t 25671 55160 48140 345000)) nil (25671 55186 507136 575000) 0 nil])
([nil nil ((#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5479) (undo-tree-id3002 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5480) (undo-tree-id3003 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5481) (undo-tree-id3004 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -5482) (undo-tree-id3005 . -1) (#("=" 0 1 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -5483) (undo-tree-id3006 . -1) (#("\"" 0 1 (tag-name "td" tag-type start)) . -5484) (undo-tree-id3007 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5485)) nil (25671 55186 507134 172000) 0 nil])
([nil nil ((5485 . 5494) (5479 . 5486)) nil (25671 55186 507125 82000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5493) (undo-tree-id3001 . -1) 5494) nil (25671 55186 507123 476000) 0 nil])
([nil nil ((5493 . 5501)) nil (25671 55186 507120 204000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5500) (undo-tree-id3000 . -1) 5501) nil (25671 55186 507117 643000) 0 nil])
([nil nil ((5500 . 5501)) nil (25671 55186 507101 783000) 0 nil])
([nil nil ((13011 . 13017) (t 25671 55186 563400 62000)) nil (25671 55218 182173 96000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13016) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) 13017) nil (25671 55218 182167 619000) 0 nil])
([nil nil ((14029 . 14035) (t 25671 55218 234507 647000)) nil (25671 55229 277713 159000) 0 nil])
([nil nil ((14042 . 14052) (14035 . 14044) (t 25671 55229 330192 972000)) nil (25671 55246 328924 611000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14051) (undo-tree-id3012 . -1) 14052) nil (25671 55246 328918 749000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14045) (undo-tree-id3013 . -1) 14046 (t 25671 55246 377707 545000)) nil (25671 55257 672406 293000) 0 nil])
([nil nil ((14045 . 14046)) nil (25671 55257 672387 14000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14042) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) 14043 (t 25671 55257 725383 131000)) nil (25671 55270 997916 872000) 0 nil])
([nil nil ((14042 . 14043)) nil (25671 55270 997888 140000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14042) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) 14043 (t 25671 55271 45001 66000)) nil (25671 55280 420946 297000) 0 nil])
([nil nil ((14042 . 14043)) nil (25671 55280 420930 323000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14045) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) 14046) nil (25671 55280 420927 593000) 0 nil])
([nil nil ((14045 . 14046)) nil (25671 55280 420903 458000) 0 nil])
([nil nil ((#("
                  'Profiles': e['trigger_profiles']" 0 1 (part-side javascript) 1 19 (part-side javascript) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript) 30 32 (part-side javascript) 32 33 (part-side javascript face (rainbow-delimiters-depth-2-face)) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 49 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 49 50 (rear-nonsticky t part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 50 51 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 51 52 (part-side javascript face (rainbow-delimiters-depth-2-face))) . 25731) (undo-tree-id3107 . -52) (undo-tree-id3108 . -1) (undo-tree-id3109 . -52) (undo-tree-id3110 . -52) (t 25671 55280 468729 941000)) nil (25671 58681 802914 385000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -25730) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) 25731) nil (25671 58681 802908 976000) 0 nil])
([nil nil ((#("
            <tr class=\"sensor_expanded_info\">
              <td :colspan=\"headers.length\" class=\"body-2\" style=\"padding: 5px;\">
                <v-icon class=\"pl-2 pr-2\" size=\"17px\">mdi-filter-plus-outline</v-icon>
                <b>Active Profiles</b>
                <v-chip class=\"mr-1\" v-for=\"profile in item.Profiles\">
                  {{ profile }}
                </v-chip>
              </td>
            </tr>" 13 14 (tag-name "tr" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 14 16 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face) 16 17 (tag-name "tr" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 18 22 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 44 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-attr-end 5 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 61 62 (tag-name "td" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 62 64 (tag-name "td" tag-type start font-lock-face web-mode-html-tag-face) 64 65 (tag-name "td" tag-type start) 65 66 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 66 67 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 67 68 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 68 69 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 69 70 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 71 72 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 72 73 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 73 74 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 74 75 (block-side t block-token delimiter-beg tag-attr t tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 76 77 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 77 78 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 78 79 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 79 80 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 80 81 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 81 82 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 82 83 (block-side t tag-attr t tag-name "td" tag-type start) 83 84 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 84 85 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 85 86 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 86 87 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 87 88 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 88 89 (block-side t tag-attr t tag-name "td" tag-type start face web-mode-variable-name-face) 89 90 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "td" tag-type start font-lock-face web-mode-block-delimiter-face) 90 91 (tag-name "td" tag-type start) 91 92 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 92 96 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 96 97 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 97 104 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 104 105 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 105 106 (tag-name "td" tag-type start) 106 107 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 107 111 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 111 112 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 112 126 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 126 127 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 127 128 (tag-name "td" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 145 146 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 146 152 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 152 153 (tag-name "v-icon" tag-type start) 153 154 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 154 158 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 158 159 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 159 169 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 169 170 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 170 171 (tag-name "v-icon" tag-type start) 171 172 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 172 175 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 175 176 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 176 181 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 181 182 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 182 183 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 206 207 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 207 208 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 208 214 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 214 215 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 232 233 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 233 234 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 234 235 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 250 251 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 251 252 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 252 253 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 253 254 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 271 272 (tag-name "v-chip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 272 278 (tag-name "v-chip" tag-type start font-lock-face web-mode-html-tag-custom-face) 278 279 (tag-name "v-chip" tag-type start) 279 280 (tag-attr-beg 0 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 280 284 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 284 285 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 285 290 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 290 291 (tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 291 292 (tag-name "v-chip" tag-type start) 292 293 (tag-attr-beg 2 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 293 297 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 297 298 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 298 305 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 305 306 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 306 307 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 307 308 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 308 309 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 309 310 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 310 311 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 311 315 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 315 322 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 322 323 (rear-nonsticky t tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 323 324 (tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 324 325 (rear-nonsticky t tag-name "v-chip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 344 345 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 345 346 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 346 347 (block-side t) 347 348 (block-side t face web-mode-variable-name-face) 348 349 (block-side t face web-mode-variable-name-face) 349 350 (block-side t face web-mode-variable-name-face) 350 351 (block-side t face web-mode-variable-name-face) 351 352 (block-side t face web-mode-variable-name-face) 352 353 (block-side t face web-mode-variable-name-face) 353 354 (block-side t face web-mode-variable-name-face) 354 355 (block-side t) 355 356 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 356 357 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 374 375 (tag-name "v-chip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 375 376 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 376 382 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-custom-face) 382 383 (tag-name "v-chip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 398 399 (tag-name "td" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 399 400 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-bracket-face) 400 402 (tag-name "td" tag-type end font-lock-face web-mode-html-tag-face) 402 403 (tag-name "td" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 416 417 (tag-name "tr" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 417 418 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-bracket-face) 418 420 (tag-name "tr" tag-type end font-lock-face web-mode-html-tag-face) 420 421 (rear-nonsticky t tag-name "tr" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14780) (undo-tree-id3100 . -421) (undo-tree-id3101 . -183) (undo-tree-id3102 . -1) (undo-tree-id3103 . -421)) nil (25671 58681 802904 370000) 0 nil])
([nil nil ((14499 . 14516)) nil (25671 58681 802899 153000) 0 nil])
([nil nil ((14516 . 14531)) nil (25671 58681 802898 227000) 0 nil])
([nil nil ((14524 . 14542) (14525 . 14541) (#("                  " 0 18 (face whitespace-trailing)) . 14524) (14524 . 14542) (14524 . 14525) ("                " . 14524) (14523 . 14540)) nil (25671 58681 802896 758000) 0 nil])
([nil nil ((#("                <v-icon class=\"pl-2 pr-2\" size=\"17px\">mdi-filter</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start) 42 43 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 43 46 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 47 52 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 64 65 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 65 66 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 66 72 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 72 73 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14642) (14617 . 14642) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14543) (undo-tree-id3099 . -18) (14568 . 14642) 14561) nil (25671 58681 802893 141000) 0 nil])
([nil nil ((#("                <b>Active Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 36 37 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14680) (14655 . 14680) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14617) (undo-tree-id3098 . -18) (14642 . 14680) 14635) nil (25671 58681 802890 45000) 0 nil])
([nil nil ((#("                <v-chip class=\"mr-1 mt-1\" v-for=\"filter in item.Filters\">
" 16 17 (tag-name "v-chip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-chip" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-chip" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 40 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-chip" tag-type start) 42 43 (tag-attr-beg 2 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 43 44 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 44 45 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 45 46 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 46 47 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 47 48 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 48 56 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 58 59 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 59 60 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 60 70 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (rear-nonsticky t tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-name "v-chip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14754) (14729 . 14754) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14655) (undo-tree-id3097 . -18) (14680 . 14754) 14673) nil (25671 58681 802886 747000) 0 nil])
([nil nil ((#("                  {{ filter }}
" 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 29 30 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 14785) (14760 . 14785) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14729) (undo-tree-id3096 . -18) (14754 . 14785) 14747) nil (25671 58681 802883 457000) 0 nil])
([nil nil ((#("                </v-chip>
" 16 17 (tag-name "v-chip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 24 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-custom-face) 24 25 (rear-nonsticky t tag-name "v-chip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14811) (14786 . 14811) (#("                </v-row>
" 16 17 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 23 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14760) (undo-tree-id3095 . -18) (14785 . 14811) 14778) nil (25671 58681 802880 1000) 0 nil])
([nil nil ((14523 . 14542)) nil (25671 58681 802876 941000) 0 nil])
([nil nil ((14542 . 14557)) nil (25671 58681 802875 939000) 0 nil])
([nil nil ((14550 . 14570) (14551 . 14569) (#("                    " 0 20 (face whitespace-trailing)) . 14550) (14550 . 14570) (14550 . 14551) ("                  " . 14550) (14549 . 14568)) nil (25671 58681 802874 422000) 0 nil])
([nil nil ((#("                  
" 0 17 (face whitespace-trailing) 17 18 (face whitespace-trailing)) . 14617) (14590 . 14617) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14571) (undo-tree-id3094 . -20) (14598 . 14617) 14591) nil (25671 58681 802871 764000) 0 nil])
([nil nil ((#("                <v-icon class=\"pl-2 pr-2\" size=\"17px\">mdi-filter</v-icon>
" 16 17 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-icon" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start) 42 43 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 43 46 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 47 52 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-attr t tag-attr-end 4 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 64 65 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 65 66 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 66 72 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 72 73 (rear-nonsticky t tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14691) (14664 . 14691) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14590) (undo-tree-id3093 . -20) (14617 . 14691) 14610) nil (25671 58681 802868 362000) 0 nil])
([nil nil ((#("                <b>Active Filters</b>
" 16 17 (tag-name "b" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "b" tag-type start font-lock-face web-mode-html-tag-face) 18 19 (tag-name "b" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "b" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "b" tag-type end font-lock-face web-mode-html-tag-face) 36 37 (tag-name "b" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14729) (14702 . 14729) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14664) (undo-tree-id3092 . -20) (14691 . 14729) 14684) nil (25671 58681 802864 290000) 0 nil])
([nil nil ((#("                <v-chip class=\"mr-1 mt-1\" v-for=\"filter in item.Filters\">
" 16 17 (tag-name "v-chip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 23 (tag-name "v-chip" tag-type start font-lock-face web-mode-html-tag-custom-face) 23 24 (tag-name "v-chip" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 40 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-chip" tag-type start) 42 43 (tag-attr-beg 2 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 43 44 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 44 45 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 45 46 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 46 47 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 47 48 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 48 56 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 58 59 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 59 60 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 60 70 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (rear-nonsticky t tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-name "v-chip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14803) (14776 . 14803) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14702) (undo-tree-id3091 . -20) (14729 . 14803) 14722) nil (25671 58681 802853 201000) 0 nil])
([nil nil ((#("                  {{ filter }}
" 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t) 28 29 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 29 30 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 14834) (14807 . 14834) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14776) (undo-tree-id3090 . -20) (14803 . 14834) 14796) nil (25671 58681 802843 49000) 0 nil])
([nil nil ((#("                </v-chip>
" 16 17 (tag-name "v-chip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 24 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-custom-face) 24 25 (rear-nonsticky t tag-name "v-chip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14860) (14833 . 14860) (#("                  </v-col>
" 18 19 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14807) (undo-tree-id3089 . -20) (14834 . 14860) 14827) nil (25671 58681 802834 950000) 0 nil])
([nil nil ((14841 . 14845) (14808 . 14812) (14728 . 14732) (14686 . 14690) (14608 . 14612) (14589 . 14591) 14549) nil (25671 58681 802829 734000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing)) . 14549) (#(" " 0 1 (face whitespace-trailing)) . 14549) (#(" " 0 1 (face whitespace-trailing)) . 14549) ("
" . 14549) (undo-tree-id3088 . -1)) nil (25671 58681 802824 56000) 0 nil])
([nil nil ((14902 . 14919)) nil (25671 58681 802818 605000) 0 nil])
([nil nil ((14919 . 14921)) nil (25671 58681 802817 19000) 0 nil])
([nil nil (("-" . -14920) (undo-tree-id3087 . -1) 14921) nil (25671 58681 802814 960000) 0 nil])
([nil nil ((14926 . 14927) (14920 . 14934)) nil (25671 58681 802810 681000) 0 nil])
([nil nil ((" " . -14926) (undo-tree-id3086 . -1) 14927) nil (25671 58681 802806 563000) 0 nil])
([nil nil ((14927 . 14945) (14928 . 14944) (#("                  " 0 18 (face whitespace-trailing)) . 14927) (14927 . 14945) (14927 . 14928) ("                " . 14927) (14926 . 14943)) nil (25671 58681 802801 785000) 0 nil])
([nil nil ((14925 . 14926)) nil (25671 58681 802798 350000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14955 . 14956) (nil tag-attr t 14955 . 14956) (nil tag-attr-end 5 14955 . 14956) (nil tag-name "v-row" 14955 . 14956) (nil tag-type start 14955 . 14956) (nil font-lock-face web-mode-html-attr-value-face 14955 . 14956) (nil rear-nonsticky t 14954 . 14955) (nil tag-attr t 14954 . 14955) (nil tag-name "v-row" 14954 . 14955) (nil tag-type start 14954 . 14955) (nil font-lock-face web-mode-html-attr-value-face 14954 . 14955) (nil tag-attr t 14944 . 14954) (nil tag-name "v-row" 14944 . 14954) (nil tag-type start 14944 . 14954) (nil font-lock-face web-mode-html-attr-value-face 14944 . 14954) (nil tag-attr t 14943 . 14944) (nil tag-name "v-row" 14943 . 14944) (nil tag-type start 14943 . 14944) (nil font-lock-face web-mode-html-attr-value-face 14943 . 14944) (nil tag-attr t 14942 . 14943) (nil tag-name "v-row" 14942 . 14943) (nil tag-type start 14942 . 14943) (nil font-lock-face web-mode-html-attr-value-face 14942 . 14943) (nil tag-attr t 14941 . 14942) (nil tag-name "v-row" 14941 . 14942) (nil tag-type start 14941 . 14942) (nil font-lock-face web-mode-html-attr-value-face 14941 . 14942) (nil tag-attr t 14940 . 14941) (nil tag-name "v-row" 14940 . 14941) (nil tag-type start 14940 . 14941) (nil font-lock-face web-mode-html-attr-value-face 14940 . 14941) (nil tag-attr t 14932 . 14940) (nil tag-name "v-row" 14932 . 14940) (nil tag-type start 14932 . 14940) (nil font-lock-face web-mode-html-attr-value-face 14932 . 14940) (nil tag-attr t 14931 . 14932) (nil tag-name "v-row" 14931 . 14932) (nil tag-type start 14931 . 14932) (nil font-lock-face web-mode-html-attr-equal-face 14931 . 14932) (nil tag-attr t 14930 . 14931) (nil tag-name "v-row" 14930 . 14931) (nil tag-type start 14930 . 14931) (nil font-lock-face web-mode-html-attr-engine-face 14930 . 14931) (nil tag-attr t 14929 . 14930) (nil tag-name "v-row" 14929 . 14930) (nil tag-type start 14929 . 14930) (nil font-lock-face web-mode-html-attr-engine-face 14929 . 14930) (nil tag-attr t 14928 . 14929) (nil tag-name "v-row" 14928 . 14929) (nil tag-type start 14928 . 14929) (nil font-lock-face web-mode-html-attr-engine-face 14928 . 14929) (nil tag-attr t 14927 . 14928) (nil tag-name "v-row" 14927 . 14928) (nil tag-type start 14927 . 14928) (nil font-lock-face web-mode-html-attr-engine-face 14927 . 14928) (nil tag-attr-beg 2 14926 . 14927) (nil tag-attr t 14926 . 14927) (nil tag-name "v-row" 14926 . 14927) (nil tag-type start 14926 . 14927) (nil font-lock-face web-mode-html-attr-engine-face 14926 . 14927) (14926 . 14956)) nil (25671 58681 802791 507000) 0 nil])
([nil nil ((#("filter" 0 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14933) (undo-tree-id3084 . -6) (undo-tree-id3085 . -6)) nil (25671 58681 802766 155000) 0 nil])
([nil nil ((#(")" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14935) (14934 . 14935) (14933 . 14935) (#("(" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14933) (14933 . 14934)) nil (25671 58681 802759 815000) 0 nil])
([nil nil ((14934 . 14942)) nil (25671 58681 802757 110000) 0 nil])
([nil nil ((#("f" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14934) (undo-tree-id3076 . -1) (#("i" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14935) (undo-tree-id3077 . -1) (#("l" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14936) (undo-tree-id3078 . -1) (#("t" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14937) (undo-tree-id3079 . -1) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14938) (undo-tree-id3080 . -1) (#("r" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14939) (undo-tree-id3081 . -1) (#("s" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14940) (undo-tree-id3082 . -1) (#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14941) (undo-tree-id3083 . -1) 14942) nil (25671 58681 802753 87000) 0 nil])
([nil nil ((14934 . 14950)) nil (25671 58681 802730 726000) 0 nil])
([nil nil ((#("," 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14949) (undo-tree-id3075 . -1) 14950) nil (25671 58681 802728 814000) 0 nil])
([nil nil ((14949 . 14960)) nil (25671 58681 802725 127000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14959) (undo-tree-id3074 . -1) 14960) nil (25671 58681 802721 86000) 0 nil])
([nil nil ((14997 . 15002)) nil (25671 58681 802716 313000) 0 nil])
([nil nil ((#("i" 0 1 (tag-name "v-ci" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -15001) (undo-tree-id3073 . -1) 15002) nil (25671 58681 802714 454000) 0 nil])
([nil nil ((15001 . 15012)) nil (25671 58681 802710 36000) 0 nil])
([nil nil ((15005 . 15025) (15006 . 15024) (#("                    " 0 20 (face whitespace-trailing)) . 15005) (15005 . 15025) (15005 . 15006) ("                  " . 15005) (15004 . 15023)) nil (25671 58681 802706 518000) 0 nil])
([nil nil ((15027 . 15034) (15026 . 15028) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -15026) (15026 . 15027) (15025 . 15027) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -15025) (15025 . 15026)) nil (25671 58681 802701 366000) 0 nil])
([nil nil ((15063 . 15082)) nil (25671 58681 802697 783000) 0 nil])
([nil nil ((15082 . 15097)) nil (25671 58681 802696 545000) 0 nil])
([nil nil ((15090 . 15110) (15091 . 15109) (#("                    " 0 20 (face whitespace-trailing)) . 15090) (15090 . 15110) (15090 . 15091) ("                  " . 15090) (15089 . 15108)) nil (25671 58681 802694 257000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15231 . 15232) (nil rear-nonsticky t 15231 . 15232) (nil tag-name "v-chip" 15231 . 15232) (nil tag-type end 15231 . 15232) (nil tag-end t 15231 . 15232) (nil font-lock-face web-mode-html-tag-bracket-face 15231 . 15232) (nil tag-name "v-chip" 15225 . 15231) (nil tag-type end 15225 . 15231) (nil font-lock-face web-mode-html-tag-custom-face 15225 . 15231) (nil tag-name "v-chip" 15224 . 15225) (nil tag-type end 15224 . 15225) (nil font-lock-face web-mode-html-tag-bracket-face 15224 . 15225) (nil tag-name "v-chip" 15223 . 15224) (nil tag-type end 15223 . 15224) (nil tag-beg 22 15223 . 15224) (nil font-lock-face web-mode-html-tag-bracket-face 15223 . 15224) (nil rear-nonsticky t 15201 . 15202) (nil block-side t 15201 . 15202) (nil block-end t 15201 . 15202) (nil block-token delimiter-end 15201 . 15202) (nil font-lock-face web-mode-block-delimiter-face 15201 . 15202) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15201 . 15202) (nil block-side t 15200 . 15201) (nil block-token delimiter-end 15200 . 15201) (nil font-lock-face web-mode-block-delimiter-face 15200 . 15201) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15200 . 15201) (nil block-side t 15199 . 15200) (nil block-side t 15198 . 15199) (nil face web-mode-variable-name-face 15198 . 15199) (nil block-side t 15197 . 15198) (nil face web-mode-variable-name-face 15197 . 15198) (nil block-side t 15196 . 15197) (nil face web-mode-variable-name-face 15196 . 15197) (nil block-side t 15195 . 15196) (nil face web-mode-variable-name-face 15195 . 15196) (nil block-side t 15194 . 15195) (nil face web-mode-variable-name-face 15194 . 15195) (nil block-side t 15193 . 15194) (nil face web-mode-variable-name-face 15193 . 15194) (nil block-side t 15192 . 15193) (nil block-side t 15191 . 15192) (nil block-token delimiter-beg 15191 . 15192) (nil font-lock-face web-mode-block-delimiter-face 15191 . 15192) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 15191 . 15192) (nil block-beg 0 15190 . 15191) (nil block-controls 0 15190 . 15191) (nil block-side t 15190 . 15191) (nil block-token delimiter-beg 15190 . 15191) (nil font-lock-face web-mode-block-delimiter-face 15190 . 15191) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 15190 . 15191) (nil tag-name "v-chip" 15166 . 15167) (nil tag-type start 15166 . 15167) (nil tag-end t 15166 . 15167) (nil font-lock-face web-mode-html-tag-bracket-face 15166 . 15167) (nil tag-attr t 15165 . 15166) (nil tag-attr-end 5 15165 . 15166) (nil tag-name "v-chip" 15165 . 15166) (nil tag-type start 15165 . 15166) (nil font-lock-face web-mode-html-attr-value-face 15165 . 15166) (nil rear-nonsticky t 15164 . 15165) (nil tag-attr t 15164 . 15165) (nil tag-name "v-chip" 15164 . 15165) (nil tag-type start 15164 . 15165) (nil font-lock-face web-mode-html-attr-value-face 15164 . 15165) (nil tag-attr t 15154 . 15164) (nil tag-name "v-chip" 15154 . 15164) (nil tag-type start 15154 . 15164) (nil font-lock-face web-mode-html-attr-value-face 15154 . 15164) (nil tag-attr t 15153 . 15154) (nil tag-name "v-chip" 15153 . 15154) (nil tag-type start 15153 . 15154) (nil font-lock-face web-mode-html-attr-value-face 15153 . 15154) (nil tag-attr t 15152 . 15153) (nil tag-name "v-chip" 15152 . 15153) (nil tag-type start 15152 . 15153) (nil font-lock-face web-mode-html-attr-value-face 15152 . 15153) (nil tag-attr t 15151 . 15152) (nil tag-name "v-chip" 15151 . 15152) (nil tag-type start 15151 . 15152) (nil font-lock-face web-mode-html-attr-value-face 15151 . 15152) (nil tag-attr t 15150 . 15151) (nil tag-name "v-chip" 15150 . 15151) (nil tag-type start 15150 . 15151) (nil font-lock-face web-mode-html-attr-value-face 15150 . 15151) (nil tag-attr t 15142 . 15150) (nil tag-name "v-chip" 15142 . 15150) (nil tag-type start 15142 . 15150) (nil font-lock-face web-mode-html-attr-value-face 15142 . 15150) (nil tag-attr t 15141 . 15142) (nil tag-name "v-chip" 15141 . 15142) (nil tag-type start 15141 . 15142) (nil font-lock-face web-mode-html-attr-equal-face 15141 . 15142) (nil tag-attr t 15140 . 15141) (nil tag-name "v-chip" 15140 . 15141) (nil tag-type start 15140 . 15141) (nil font-lock-face web-mode-html-attr-engine-face 15140 . 15141) (nil tag-attr t 15139 . 15140) (nil tag-name "v-chip" 15139 . 15140) (nil tag-type start 15139 . 15140) (nil font-lock-face web-mode-html-attr-engine-face 15139 . 15140) (nil tag-attr t 15138 . 15139) (nil tag-name "v-chip" 15138 . 15139) (nil tag-type start 15138 . 15139) (nil font-lock-face web-mode-html-attr-engine-face 15138 . 15139) (nil tag-attr t 15137 . 15138) (nil tag-name "v-chip" 15137 . 15138) (nil tag-type start 15137 . 15138) (nil font-lock-face web-mode-html-attr-engine-face 15137 . 15138) (nil tag-attr-beg 2 15136 . 15137) (nil tag-attr t 15136 . 15137) (nil tag-name "v-chip" 15136 . 15137) (nil tag-type start 15136 . 15137) (nil font-lock-face web-mode-html-attr-engine-face 15136 . 15137) (nil tag-name "v-chip" 15135 . 15136) (nil tag-type start 15135 . 15136) (nil rear-nonsticky t 15134 . 15135) (nil tag-attr t 15134 . 15135) (nil tag-attr-end 5 15134 . 15135) (nil tag-name "v-chip" 15134 . 15135) (nil tag-type start 15134 . 15135) (nil font-lock-face web-mode-html-attr-value-face 15134 . 15135) (nil tag-attr t 15124 . 15134) (nil tag-name "v-chip" 15124 . 15134) (nil tag-type start 15124 . 15134) (nil font-lock-face web-mode-html-attr-value-face 15124 . 15134) (nil tag-attr t 15123 . 15124) (nil tag-name "v-chip" 15123 . 15124) (nil tag-type start 15123 . 15124) (nil font-lock-face web-mode-html-attr-equal-face 15123 . 15124) (nil tag-attr t 15119 . 15123) (nil tag-name "v-chip" 15119 . 15123) (nil tag-type start 15119 . 15123) (nil font-lock-face web-mode-html-attr-name-face 15119 . 15123) (nil tag-attr-beg 0 15118 . 15119) (nil tag-attr t 15118 . 15119) (nil tag-name "v-chip" 15118 . 15119) (nil tag-type start 15118 . 15119) (nil font-lock-face web-mode-html-attr-name-face 15118 . 15119) (nil tag-name "v-chip" 15117 . 15118) (nil tag-type start 15117 . 15118) (nil tag-name "v-chip" 15111 . 15117) (nil tag-type start 15111 . 15117) (nil font-lock-face web-mode-html-tag-custom-face 15111 . 15117) (nil tag-name "v-chip" 15110 . 15111) (nil tag-type start 15110 . 15111) (nil tag-beg 19 15110 . 15111) (nil font-lock-face web-mode-html-tag-bracket-face 15110 . 15111) (15110 . 15232)) nil (25671 58681 802670 874000) 0 nil])
([nil nil ((#("item.Filters" 0 12 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . 15153) (undo-tree-id3071 . -12) (undo-tree-id3072 . -12)) nil (25671 58681 802639 514000) 0 nil])
([nil nil ((15153 . 15161)) nil (25671 58681 802636 443000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face)) . -15160) (undo-tree-id3070 . -1) 15161) nil (25671 58681 802634 970000) 0 nil])
([nil nil ((15254 . 15273)) nil (25671 58681 802632 613000) 0 nil])
([nil nil (("
" . 15273) (undo-tree-id3068 . -1) (undo-tree-id3069 . 1)) nil (25671 58681 802631 379000) 0 nil])
([nil nil (("                  " . -15271) (undo-tree-id3067 . -2) 15273) nil (25671 58681 802627 774000) 0 nil])
([nil nil ((14978 . 14997)) nil (25671 58681 802625 535000) 0 nil])
([nil nil ((14997 . 15012)) nil (25671 58681 802624 637000) 0 nil])
([nil nil ((15005 . 15025) (15006 . 15024) (#("                    " 0 20 (face whitespace-trailing)) . 15005) (15005 . 15025) (15005 . 15006) ("                  " . 15005) (15004 . 15023)) nil (25671 58681 802623 70000) 0 nil])
([nil nil ((15025 . 15033)) nil (25671 58681 802620 754000) 0 nil])
([nil nil ((" " . -15032) (undo-tree-id3066 . -1) 15033) nil (25671 58681 802619 433000) 0 nil])
([nil nil ((#("
                    <v-chip class=\"mr-1 mt-1\" v-for=\"filter in item.Filters\">
                      {{ filter }}
                    </v-chip>" 21 22 (tag-name "v-chip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 22 28 (tag-name "v-chip" tag-type start font-lock-face web-mode-html-tag-custom-face) 28 29 (tag-name "v-chip" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 30 34 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 35 45 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-name "v-chip" tag-type start) 47 48 (tag-attr-beg 2 tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 48 49 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 49 50 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 50 51 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 51 52 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-engine-face) 52 53 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-equal-face) 53 61 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 61 62 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 62 63 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 63 64 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 64 65 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 65 75 (tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 75 76 (rear-nonsticky t tag-attr t tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 76 77 (tag-attr t tag-attr-end 5 tag-name "v-chip" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "v-chip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 101 102 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 102 103 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 103 104 (block-side t) 104 105 (block-side t face web-mode-variable-name-face) 105 106 (block-side t face web-mode-variable-name-face) 106 107 (block-side t face web-mode-variable-name-face) 107 108 (block-side t face web-mode-variable-name-face) 108 109 (block-side t face web-mode-variable-name-face) 109 110 (block-side t face web-mode-variable-name-face) 110 111 (block-side t) 111 112 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 112 113 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 134 135 (tag-name "v-chip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 135 136 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 136 142 (tag-name "v-chip" tag-type end font-lock-face web-mode-html-tag-custom-face) 142 143 (rear-nonsticky t tag-name "v-chip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14707) (undo-tree-id3060 . -143) (undo-tree-id3061 . -1) (undo-tree-id3062 . -143) (undo-tree-id3063 . -77) (undo-tree-id3064 . -143) (undo-tree-id3065 . -143)) nil (25671 58681 802616 452000) 0 nil])
([nil nil (("
" . 14566) (undo-tree-id3059 . -1)) nil (25671 58681 802607 609000) 0 nil])
([nil nil ((#("                                     " 0 17 (face whitespace-trailing) 17 34 (face whitespace-trailing) 34 37 (face whitespace-trailing)) . -14549) (undo-tree-id3047 . -17) (undo-tree-id3048 . -17) (undo-tree-id3049 . -17) (undo-tree-id3050 . -17) (undo-tree-id3051 . -17) (undo-tree-id3052 . -17) (undo-tree-id3053 . -17) (undo-tree-id3054 . -17) (undo-tree-id3055 . -17) (undo-tree-id3056 . -17) (undo-tree-id3057 . -17) (undo-tree-id3058 . -17) 14566) nil (25671 58681 802600 855000) 0 nil])
([nil nil ((14845 . 14847) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -14845) (14845 . 14846) (14844 . 14846) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -14844) (14844 . 14845) (t 25671 58681 860491 542000)) nil (25671 59142 100723 315000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-2-face))) . 14846) (#("}" 0 1 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . 14846)) nil (25671 59142 100720 987000) 0 nil])
([nil nil ((14853 . 14855)) nil (25671 59142 100719 801000) 0 nil])
([nil nil ((#("(" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14752) (undo-tree-id3124 . -1) 14753) nil (25671 59142 100718 522000) 0 nil])
([nil nil ((14752 . 14754) (#("[" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14752) (14752 . 14753)) nil (25671 59142 100715 815000) 0 nil])
([nil nil ((#("]" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14753)) nil (25671 59142 100713 948000) 0 nil])
([nil nil ((#(")" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14778) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) 14779) nil (25671 59142 100710 612000) 0 nil])
([nil nil ((14778 . 14779)) nil (25671 59142 100678 875000) 0 nil])
([nil nil ((#(" style=\"padding: 5px;\"" 0 1 (tag-name "td" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 2 6 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 21 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14476) (undo-tree-id3129 . -22) (undo-tree-id3130 . -22) (t 25671 59142 153941 251000)) nil (25671 59203 832024 794000) 0 nil])
([nil nil ((14476 . 14477)) nil (25671 59203 832020 790000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14535 . 14536) (nil tag-attr t 14535 . 14536) (nil tag-attr-end 5 14535 . 14536) (nil tag-name "td" 14535 . 14536) (nil tag-type start 14535 . 14536) (nil font-lock-face web-mode-html-attr-value-face 14535 . 14536) (nil tag-attr t 14518 . 14535) (nil tag-name "td" 14518 . 14535) (nil tag-type start 14518 . 14535) (nil font-lock-face web-mode-html-attr-value-face 14518 . 14535) (nil tag-attr t 14517 . 14518) (nil tag-name "td" 14517 . 14518) (nil tag-type start 14517 . 14518) (nil font-lock-face web-mode-html-attr-equal-face 14517 . 14518) (nil tag-attr t 14516 . 14517) (nil tag-name "td" 14516 . 14517) (nil tag-type start 14516 . 14517) (nil font-lock-face web-mode-html-attr-name-face 14516 . 14517) (nil tag-attr t 14515 . 14516) (nil tag-name "td" 14515 . 14516) (nil tag-type start 14515 . 14516) (nil font-lock-face web-mode-html-attr-name-face 14515 . 14516) (nil tag-attr t 14514 . 14515) (nil tag-name "td" 14514 . 14515) (nil tag-type start 14514 . 14515) (nil font-lock-face web-mode-html-attr-name-face 14514 . 14515) (nil tag-attr t 14513 . 14514) (nil tag-name "td" 14513 . 14514) (nil tag-type start 14513 . 14514) (nil font-lock-face web-mode-html-attr-name-face 14513 . 14514) (nil tag-attr-beg 0 14512 . 14513) (nil tag-attr t 14512 . 14513) (nil tag-name "td" 14512 . 14513) (nil tag-type start 14512 . 14513) (nil font-lock-face web-mode-html-attr-name-face 14512 . 14513) (nil tag-name "td" 14511 . 14512) (nil tag-type start 14511 . 14512) (nil tag-attr t 14510 . 14511) (nil tag-attr-end 5 14510 . 14511) (nil tag-name "td" 14510 . 14511) (nil tag-type start 14510 . 14511) (nil font-lock-face web-mode-html-attr-value-face 14510 . 14511) (nil tag-attr t 14483 . 14510) (nil tag-name "td" 14483 . 14510) (nil tag-type start 14483 . 14510) (nil font-lock-face web-mode-html-attr-value-face 14483 . 14510) (nil tag-attr t 14482 . 14483) (nil tag-name "td" 14482 . 14483) (nil tag-type start 14482 . 14483) (nil font-lock-face web-mode-html-attr-equal-face 14482 . 14483) (nil tag-attr t 14478 . 14482) (nil tag-name "td" 14478 . 14482) (nil tag-type start 14478 . 14482) (nil font-lock-face web-mode-html-attr-name-face 14478 . 14482) (nil tag-attr-beg 0 14477 . 14478) (nil tag-attr t 14477 . 14478) (nil tag-name "td" 14477 . 14478) (nil tag-type start 14477 . 14478) (nil font-lock-face web-mode-html-attr-name-face 14477 . 14478) (14477 . 14536)) nil (25671 59203 832016 616000) 0 nil])
([nil nil ((14475 . 14476)) nil (25671 59203 832003 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14494 . 14495) (nil tag-attr t 14476 . 14495) (nil tag-name "td" 14476 . 14495) (nil tag-type start 14476 . 14495) (nil font-lock-face web-mode-html-attr-value-face 14476 . 14495) (14476 . 14495)) nil (25671 59203 832001 137000) 0 nil])
([nil nil ((#(" class=\"body-2 pt-3 pb-1 pl-2 pr-2\"" 0 1 (tag-name "td" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 2 6 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 34 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14496) (undo-tree-id3125 . -35) (undo-tree-id3126 . -1) (undo-tree-id3127 . -34) (undo-tree-id3128 . -35)) nil (25671 59203 831994 858000) 0 nil])
([nil nil ((14571 . 14576) (t 25671 59203 913196 836000)) nil (25671 59298 777143 556000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14572) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14573) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14574) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (#("-" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14575) (undo-tree-id3144 . -1) 14576) nil (25671 59298 777141 116000) 0 nil])
([nil nil ((14572 . 14574)) nil (25671 59298 777128 984000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14572) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -14573) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) 14574) nil (25671 59298 777126 803000) 0 nil])
([nil nil ((14578 . 14579) (14572 . 14579)) nil (25671 59298 777112 96000) 0 nil])
([nil nil ((14861 . 14862) (14854 . 14862)) nil (25671 59298 778731 325000) 0 nil])
([nil nil ((#("cols=\"2\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 7 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 14572) (undo-tree-id3150 . -8) (undo-tree-id3151 . -8)) nil (25671 59310 290870 608000) 0 nil] [nil nil ((15033 . 15036)) ((#(" co" 0 1 (tag-name "v-col" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . 15033) (undo-tree-id3145 . -3) (undo-tree-id3146 . -3)) (25671 59298 777102 836000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -14571) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) 14572) nil (25671 59310 290866 925000) 0 nil])
nil
([nil nil ((14939 . 14940)) nil (25671 59310 290863 112000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14947 . 14948) (nil tag-attr t 14947 . 14948) (nil tag-attr-end 4 14947 . 14948) (nil tag-name "v-col" 14947 . 14948) (nil tag-type start 14947 . 14948) (nil font-lock-face web-mode-html-attr-value-face 14947 . 14948) (nil tag-attr t 14945 . 14947) (nil tag-name "v-col" 14945 . 14947) (nil tag-type start 14945 . 14947) (nil font-lock-face web-mode-html-attr-value-face 14945 . 14947) (nil tag-attr t 14944 . 14945) (nil tag-name "v-col" 14944 . 14945) (nil tag-type start 14944 . 14945) (nil font-lock-face web-mode-html-attr-equal-face 14944 . 14945) (nil tag-attr t 14943 . 14944) (nil tag-name "v-col" 14943 . 14944) (nil tag-type start 14943 . 14944) (nil font-lock-face web-mode-html-attr-name-face 14943 . 14944) (nil tag-attr t 14942 . 14943) (nil tag-name "v-col" 14942 . 14943) (nil tag-type start 14942 . 14943) (nil font-lock-face web-mode-html-attr-name-face 14942 . 14943) (nil tag-attr t 14941 . 14942) (nil tag-name "v-col" 14941 . 14942) (nil tag-type start 14941 . 14942) (nil font-lock-face web-mode-html-attr-name-face 14941 . 14942) (nil tag-attr-beg 0 14940 . 14941) (nil tag-attr t 14940 . 14941) (nil tag-name "v-col" 14940 . 14941) (nil tag-type start 14940 . 14941) (nil font-lock-face web-mode-html-attr-name-face 14940 . 14941) (14940 . 14948)) nil (25671 59310 290860 443000) 0 nil])
([nil nil ((15033 . 15034)) nil (25671 59310 290853 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15041 . 15042) (nil tag-attr t 15041 . 15042) (nil tag-attr-end 4 15041 . 15042) (nil tag-name "v-col" 15041 . 15042) (nil tag-type start 15041 . 15042) (nil font-lock-face web-mode-html-attr-value-face 15041 . 15042) (nil tag-attr t 15039 . 15041) (nil tag-name "v-col" 15039 . 15041) (nil tag-type start 15039 . 15041) (nil font-lock-face web-mode-html-attr-value-face 15039 . 15041) (nil tag-attr t 15038 . 15039) (nil tag-name "v-col" 15038 . 15039) (nil tag-type start 15038 . 15039) (nil font-lock-face web-mode-html-attr-equal-face 15038 . 15039) (nil tag-attr t 15037 . 15038) (nil tag-name "v-col" 15037 . 15038) (nil tag-type start 15037 . 15038) (nil font-lock-face web-mode-html-attr-name-face 15037 . 15038) (nil tag-attr t 15036 . 15037) (nil tag-name "v-col" 15036 . 15037) (nil tag-type start 15036 . 15037) (nil font-lock-face web-mode-html-attr-name-face 15036 . 15037) (nil tag-attr t 15035 . 15036) (nil tag-name "v-col" 15035 . 15036) (nil tag-type start 15035 . 15036) (nil font-lock-face web-mode-html-attr-name-face 15035 . 15036) (nil tag-attr-beg 0 15034 . 15035) (nil tag-attr t 15034 . 15035) (nil tag-name "v-col" 15034 . 15035) (nil tag-type start 15034 . 15035) (nil font-lock-face web-mode-html-attr-name-face 15034 . 15035) (15034 . 15042)) nil (25671 59310 290850 386000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -15040) (undo-tree-id3147 . -1) 15041) nil (25671 59310 290841 393000) 0 nil])
([nil nil ((15040 . 15041)) nil (25671 59310 290825 603000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14946) (undo-tree-id3154 . -1) 14947 (t 25671 59310 346364 67000)) nil (25671 59323 732702 406000) 0 nil])
([nil nil ((14946 . 14947)) nil (25671 59323 732699 378000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -14852) (undo-tree-id3153 . -1) 14853) nil (25671 59323 732697 525000) 0 nil])
([nil nil ((14852 . 14853)) nil (25671 59323 732694 259000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -15040) (undo-tree-id3152 . -1) 15041) nil (25671 59323 732691 242000) 0 nil])
([nil nil ((15040 . 15042)) nil (25671 59323 732674 562000) 0 nil])
([nil nil (("Filters" . 14681) (undo-tree-id3156 . -7) (undo-tree-id3157 . -7) (t 25671 59323 790981 364000)) nil (25671 59348 505979 384000) 0 nil])
([nil nil ((14681 . 14690)) nil (25671 59348 505974 318000) 0 nil])
([nil nil ((" " . -14689) (undo-tree-id3155 . -1) 14690) nil (25671 59348 505969 533000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13039) (#("1" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . 13039) (t 25671 59348 556099 533000)) nil (25671 59384 386869 875000) 0 nil])
([nil nil ((13039 . 13040)) nil (25671 59384 386862 116000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13038) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (#("5" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13039) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) 13040 (t 25671 59384 445678 528000)) nil (25671 59396 337565 821000) 0 nil])
([nil nil ((13038 . 13039)) nil (25671 59396 337456 40000) 0 nil])
([nil nil ((13042 . 13051) (t 25671 59396 394193 838000)) nil (25671 59418 466764 147000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13042) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (#("p" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13043) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (#("a" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13044) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (#("d" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13045) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (#("d" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13046) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (#("i" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13047) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (#("n" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13048) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (#("g" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13049) (undo-tree-id3248 . -1) (#("-" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13050) (undo-tree-id3249 . -1) 13051) nil (25671 59418 466760 394000) 0 nil])
([nil nil ((13016 . 13019)) nil (25671 59418 466735 640000) 0 nil])
([nil nil ((#("v" 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13018) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) 13019) nil (25671 59418 466734 108000) 0 nil])
([nil nil ((13018 . 13022)) nil (25671 59418 466725 781000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-textarea" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13021) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) 13022) nil (25671 59418 466720 632000) 0 nil])
([nil nil ((14748 . 14765) (t 25671 59418 519134 951000)) nil (25672 59518 881422 601000) 0 nil])
([nil nil ((14765 . 14780)) nil (25672 59518 881421 346000) 0 nil])
([nil nil ((14773 . 14791) (14774 . 14790) (#("                  " 0 18 (face whitespace-trailing)) . 14773) (14773 . 14791) (14773 . 14774) ("                " . 14773) (14772 . 14789)) nil (25672 59518 881419 587000) 0 nil])
([nil nil ((14791 . 14806)) nil (25672 59518 881417 385000) 0 nil])
([nil nil ((14799 . 14819) (14800 . 14818) (#("                    " 0 20 (face whitespace-trailing)) . 14799) (14799 . 14819) (14799 . 14800) ("                  " . 14799) (14798 . 14817)) nil (25672 59518 881415 828000) 0 nil])
([nil nil ((14819 . 14820)) nil (25672 59518 881413 261000) 0 nil])
([nil nil (("c" . -14819) (undo-tree-id22 . -1) 14820) nil (25672 59518 881411 996000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14804 . 14805) (nil tag-name "v-colcols" 14804 . 14805) (nil tag-type start 14804 . 14805) (nil tag-name "v-colcols" 14802 . 14804) (nil tag-type start 14802 . 14804) (nil tag-name "v-colcols" 14801 . 14802) (nil tag-type start 14801 . 14802) (nil tag-name "v-colcols" 14798 . 14801) (nil tag-type start 14798 . 14801) (nil font-lock-face web-mode-html-tag-custom-face 14798 . 14801) (nil tag-name "v-colcols" 14797 . 14798) (nil tag-type start 14797 . 14798) (nil font-lock-face web-mode-html-tag-custom-face 14797 . 14798) (14797 . 14805)) nil (25672 59518 881408 673000) 0 nil])
([nil nil ((14797 . 14798)) nil (25672 59518 881405 7000) 0 nil])
([nil nil ((14855 . 14874)) nil (25672 59518 881404 27000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14937 . 14938) (nil tag-name "v-col" 14937 . 14938) (nil tag-type end 14937 . 14938) (nil tag-end t 14937 . 14938) (nil font-lock-face web-mode-html-tag-bracket-face 14937 . 14938) (nil tag-name "v-col" 14932 . 14937) (nil tag-type end 14932 . 14937) (nil font-lock-face web-mode-html-tag-custom-face 14932 . 14937) (nil tag-name "v-col" 14931 . 14932) (nil tag-type end 14931 . 14932) (nil font-lock-face web-mode-html-tag-bracket-face 14931 . 14932) (nil tag-name "v-col" 14930 . 14931) (nil tag-type end 14930 . 14931) (nil tag-beg 22 14930 . 14931) (nil font-lock-face web-mode-html-tag-bracket-face 14930 . 14931) (nil face whitespace-trailing 14891 . 14911) (nil tag-name "v-col" 14889 . 14890) (nil tag-type start 14889 . 14890) (nil tag-end t 14889 . 14890) (nil font-lock-face web-mode-html-tag-bracket-face 14889 . 14890) (nil rear-nonsticky t 14888 . 14889) (nil tag-attr t 14888 . 14889) (nil tag-attr-end 4 14888 . 14889) (nil tag-name "v-col" 14888 . 14889) (nil tag-type start 14888 . 14889) (nil font-lock-face web-mode-html-attr-value-face 14888 . 14889) (nil tag-attr t 14886 . 14888) (nil tag-name "v-col" 14886 . 14888) (nil tag-type start 14886 . 14888) (nil font-lock-face web-mode-html-attr-value-face 14886 . 14888) (nil tag-attr t 14885 . 14886) (nil tag-name "v-col" 14885 . 14886) (nil tag-type start 14885 . 14886) (nil font-lock-face web-mode-html-attr-equal-face 14885 . 14886) (nil tag-attr t 14882 . 14885) (nil tag-name "v-col" 14882 . 14885) (nil tag-type start 14882 . 14885) (nil font-lock-face web-mode-html-attr-name-face 14882 . 14885) (nil tag-attr-beg 0 14881 . 14882) (nil tag-attr t 14881 . 14882) (nil tag-name "v-col" 14881 . 14882) (nil tag-type start 14881 . 14882) (nil font-lock-face web-mode-html-attr-name-face 14881 . 14882) (nil tag-name "v-col" 14880 . 14881) (nil tag-type start 14880 . 14881) (nil tag-name "v-col" 14875 . 14880) (nil tag-type start 14875 . 14880) (nil font-lock-face web-mode-html-tag-custom-face 14875 . 14880) (nil tag-name "v-col" 14874 . 14875) (nil tag-type start 14874 . 14875) (nil tag-beg 19 14874 . 14875) (nil font-lock-face web-mode-html-tag-bracket-face 14874 . 14875) (14874 . 14938)) nil (25672 59518 881400 500000) 0 nil])
([nil nil ((14938 . 14957)) nil (25672 59518 881387 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15020 . 15021) (nil tag-name "v-col" 15020 . 15021) (nil tag-type end 15020 . 15021) (nil tag-end t 15020 . 15021) (nil font-lock-face web-mode-html-tag-bracket-face 15020 . 15021) (nil tag-name "v-col" 15015 . 15020) (nil tag-type end 15015 . 15020) (nil font-lock-face web-mode-html-tag-custom-face 15015 . 15020) (nil tag-name "v-col" 15014 . 15015) (nil tag-type end 15014 . 15015) (nil font-lock-face web-mode-html-tag-bracket-face 15014 . 15015) (nil tag-name "v-col" 15013 . 15014) (nil tag-type end 15013 . 15014) (nil tag-beg 22 15013 . 15014) (nil font-lock-face web-mode-html-tag-bracket-face 15013 . 15014) (nil face whitespace-trailing 14974 . 14994) (nil tag-name "v-col" 14972 . 14973) (nil tag-type start 14972 . 14973) (nil tag-end t 14972 . 14973) (nil font-lock-face web-mode-html-tag-bracket-face 14972 . 14973) (nil rear-nonsticky t 14971 . 14972) (nil tag-attr t 14971 . 14972) (nil tag-attr-end 4 14971 . 14972) (nil tag-name "v-col" 14971 . 14972) (nil tag-type start 14971 . 14972) (nil font-lock-face web-mode-html-attr-value-face 14971 . 14972) (nil tag-attr t 14969 . 14971) (nil tag-name "v-col" 14969 . 14971) (nil tag-type start 14969 . 14971) (nil font-lock-face web-mode-html-attr-value-face 14969 . 14971) (nil tag-attr t 14968 . 14969) (nil tag-name "v-col" 14968 . 14969) (nil tag-type start 14968 . 14969) (nil font-lock-face web-mode-html-attr-equal-face 14968 . 14969) (nil tag-attr t 14965 . 14968) (nil tag-name "v-col" 14965 . 14968) (nil tag-type start 14965 . 14968) (nil font-lock-face web-mode-html-attr-name-face 14965 . 14968) (nil tag-attr-beg 0 14964 . 14965) (nil tag-attr t 14964 . 14965) (nil tag-name "v-col" 14964 . 14965) (nil tag-type start 14964 . 14965) (nil font-lock-face web-mode-html-attr-name-face 14964 . 14965) (nil tag-name "v-col" 14963 . 14964) (nil tag-type start 14963 . 14964) (nil tag-name "v-col" 14958 . 14963) (nil tag-type start 14958 . 14963) (nil font-lock-face web-mode-html-tag-custom-face 14958 . 14963) (nil tag-name "v-col" 14957 . 14958) (nil tag-type start 14957 . 14958) (nil tag-beg 19 14957 . 14958) (nil font-lock-face web-mode-html-tag-bracket-face 14957 . 14958) (14957 . 15021)) nil (25672 59518 881384 447000) 0 nil])
([nil nil ((14971 . 14972)) nil (25672 59518 881370 825000) 0 nil])
([nil nil ((14828 . 14836)) nil (25672 59518 881369 700000) 0 nil])
([nil nil ((14919 . 14926)) nil (25672 59518 881368 609000) 0 nil])
([nil nil (("f" . -14919) (undo-tree-id9 . -1) (undo-tree-id10 . -1) ("i" . -14920) (undo-tree-id11 . -1) (undo-tree-id12 . -1) ("l" . -14921) (undo-tree-id13 . -1) (undo-tree-id14 . -1) ("t" . -14922) (undo-tree-id15 . -1) (undo-tree-id16 . -1) ("e" . -14923) (undo-tree-id17 . -1) (undo-tree-id18 . -1) ("r" . -14924) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (" " . -14925) (undo-tree-id21 . -1) 14926) nil (25672 59518 881364 850000) 0 nil])
([nil nil ((14919 . 14932)) nil (25672 59518 881294 655000) 0 nil])
([nil nil ((" " . -14931) (undo-tree-id8 . -1) 14932) nil (25672 59518 881293 210000) 0 nil])
([nil nil ((15015 . 15023)) nil (25672 59518 881290 107000) 0 nil])
([nil nil ((" " . -15022) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 15023) nil (25672 59518 881285 225000) 0 nil])
([nil nil ((14779 . 14781) (14771 . 14780) (t 25672 59518 995258 462000)) nil (25672 59555 529202 761000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -14780) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 14781) nil (25672 59555 529200 878000) 0 nil])
([nil nil ((14780 . 14787)) nil (25672 59555 529197 20000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -14786) (undo-tree-id31 . -1) 14787) nil (25672 59555 529195 201000) 0 nil])
([nil nil ((14786 . 14793)) nil (25672 59555 529191 844000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -14792) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 14793) nil (25672 59555 529186 454000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -14785) (undo-tree-id37 . -1) 14786 (t 25672 59555 623793 324000)) nil (25672 59601 736696 375000) 0 nil])
([nil nil ((14785 . 14791)) nil (25672 59601 736693 132000) 0 nil])
([nil nil ((#("right" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 14786) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5)) nil (25672 59601 736690 381000) 0 nil])
([nil nil ((14786 . 14789)) nil (25672 59601 736674 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14846 . 14847) (nil tag-attr t 14846 . 14847) (nil tag-attr-end 5 14846 . 14847) (nil tag-name "v-col" 14846 . 14847) (nil tag-type start 14846 . 14847) (nil font-lock-face web-mode-html-attr-value-face 14846 . 14847) (nil tag-attr t 14829 . 14846) (nil tag-name "v-col" 14829 . 14846) (nil tag-type start 14829 . 14846) (nil font-lock-face web-mode-html-attr-value-face 14829 . 14846) (nil tag-attr t 14828 . 14829) (nil tag-name "v-col" 14828 . 14829) (nil tag-type start 14828 . 14829) (nil font-lock-face web-mode-html-attr-equal-face 14828 . 14829) (nil tag-attr t 14827 . 14828) (nil tag-name "v-col" 14827 . 14828) (nil tag-type start 14827 . 14828) (nil font-lock-face web-mode-html-attr-name-face 14827 . 14828) (nil tag-attr t 14826 . 14827) (nil tag-name "v-col" 14826 . 14827) (nil tag-type start 14826 . 14827) (nil font-lock-face web-mode-html-attr-name-face 14826 . 14827) (nil tag-attr t 14825 . 14826) (nil tag-name "v-col" 14825 . 14826) (nil tag-type start 14825 . 14826) (nil font-lock-face web-mode-html-attr-name-face 14825 . 14826) (nil tag-attr t 14824 . 14825) (nil tag-name "v-col" 14824 . 14825) (nil tag-type start 14824 . 14825) (nil font-lock-face web-mode-html-attr-name-face 14824 . 14825) (nil tag-attr-beg 0 14823 . 14824) (nil tag-attr t 14823 . 14824) (nil tag-name "v-col" 14823 . 14824) (nil tag-type start 14823 . 14824) (nil font-lock-face web-mode-html-attr-name-face 14823 . 14824) (14823 . 14847) (t 25672 59601 832444 170000)) nil (25672 59630 65546 485000) 0 nil])
([nil nil ((14847 . 14848)) nil (25672 59630 65531 278000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -14836) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -14837) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -14838) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -14839) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 14840 (t 25672 59630 160830 909000)) nil (25672 59650 327630 344000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14954 . 14955) (nil rear-nonsticky t 14954 . 14955) (nil tag-attr t 14954 . 14955) (nil tag-attr-end 5 14954 . 14955) (nil tag-name "v-col" 14954 . 14955) (nil tag-type start 14954 . 14955) (nil font-lock-face web-mode-html-attr-value-face 14954 . 14955) (nil tag-attr t 14941 . 14954) (nil tag-name "v-col" 14941 . 14954) (nil tag-type start 14941 . 14954) (nil font-lock-face web-mode-html-attr-value-face 14941 . 14954) (nil tag-attr t 14940 . 14941) (nil tag-name "v-col" 14940 . 14941) (nil tag-type start 14940 . 14941) (nil font-lock-face web-mode-html-attr-equal-face 14940 . 14941) (nil tag-attr t 14936 . 14940) (nil tag-name "v-col" 14936 . 14940) (nil tag-type start 14936 . 14940) (nil font-lock-face web-mode-html-attr-name-face 14936 . 14940) (nil tag-attr-beg 0 14935 . 14936) (nil tag-attr t 14935 . 14936) (nil tag-name "v-col" 14935 . 14936) (nil tag-type start 14935 . 14936) (nil font-lock-face web-mode-html-attr-name-face 14935 . 14936) (14935 . 14955) (t 25672 59650 433102 281000)) nil (25672 59671 424853 888000) 0 nil])
([nil nil ((14955 . 14956)) nil (25672 59671 424847 892000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15070 . 15071) (nil rear-nonsticky t 15070 . 15071) (nil tag-attr t 15070 . 15071) (nil tag-attr-end 5 15070 . 15071) (nil tag-name "v-col" 15070 . 15071) (nil tag-type start 15070 . 15071) (nil font-lock-face web-mode-html-attr-value-face 15070 . 15071) (nil tag-attr t 15057 . 15070) (nil tag-name "v-col" 15057 . 15070) (nil tag-type start 15057 . 15070) (nil font-lock-face web-mode-html-attr-value-face 15057 . 15070) (nil tag-attr t 15056 . 15057) (nil tag-name "v-col" 15056 . 15057) (nil tag-type start 15056 . 15057) (nil font-lock-face web-mode-html-attr-equal-face 15056 . 15057) (nil tag-attr t 15052 . 15056) (nil tag-name "v-col" 15052 . 15056) (nil tag-type start 15052 . 15056) (nil font-lock-face web-mode-html-attr-name-face 15052 . 15056) (nil tag-attr-beg 0 15051 . 15052) (nil tag-attr t 15051 . 15052) (nil tag-name "v-col" 15051 . 15052) (nil tag-type start 15051 . 15052) (nil font-lock-face web-mode-html-attr-name-face 15051 . 15052) (15051 . 15071)) nil (25672 59671 424845 809000) 0 nil])
([nil nil ((15071 . 15072)) nil (25672 59671 424839 823000) 0 nil])
([nil nil ((14574 . 14575)) nil (25672 59671 424838 817000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14594 . 14595) (nil rear-nonsticky t 14594 . 14595) (nil tag-attr t 14594 . 14595) (nil tag-attr-end 5 14594 . 14595) (nil tag-name "v-col" 14594 . 14595) (nil tag-type start 14594 . 14595) (nil font-lock-face web-mode-html-attr-value-face 14594 . 14595) (nil tag-attr t 14581 . 14594) (nil tag-name "v-col" 14581 . 14594) (nil tag-type start 14581 . 14594) (nil font-lock-face web-mode-html-attr-value-face 14581 . 14594) (nil tag-attr t 14580 . 14581) (nil tag-name "v-col" 14580 . 14581) (nil tag-type start 14580 . 14581) (nil font-lock-face web-mode-html-attr-equal-face 14580 . 14581) (nil tag-attr t 14576 . 14580) (nil tag-name "v-col" 14576 . 14580) (nil tag-type start 14576 . 14580) (nil font-lock-face web-mode-html-attr-name-face 14576 . 14580) (nil tag-attr-beg 0 14575 . 14576) (nil tag-attr t 14575 . 14576) (nil tag-name "v-col" 14575 . 14576) (nil tag-type start 14575 . 14576) (nil font-lock-face web-mode-html-attr-name-face 14575 . 14576) (14575 . 14595)) nil (25672 59671 424836 502000) 0 nil])
([nil nil ((14595 . 14596)) nil (25672 59671 424829 370000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -14595) (undo-tree-id51 . -1) 14596) nil (25672 59671 424824 73000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14567 . 14568) (nil rear-nonsticky t 14567 . 14568) (nil tag-attr t 14567 . 14568) (nil tag-attr-end 0 14567 . 14568) (nil tag-name "v-rowstyle" 14567 . 14568) (nil tag-type start 14567 . 14568) (nil font-lock-face web-mode-html-attr-name-face 14567 . 14568) (nil tag-attr t 14564 . 14567) (nil tag-name "v-rowstyle" 14564 . 14567) (nil tag-type start 14564 . 14567) (nil font-lock-face web-mode-html-attr-name-face 14564 . 14567) (nil tag-attr-beg 0 14563 . 14564) (nil tag-attr t 14563 . 14564) (nil tag-name "v-rowstyle" 14563 . 14564) (nil tag-type start 14563 . 14564) (nil font-lock-face web-mode-html-attr-name-face 14563 . 14564) (nil tag-name "v-rowstyle" 14554 . 14563) (nil tag-type start 14554 . 14563) (nil tag-name "v-rowstyle" 14553 . 14554) (nil tag-type start 14553 . 14554) (nil tag-name "v-rowstyle" 14549 . 14553) (nil tag-type start 14549 . 14553) (nil font-lock-face web-mode-html-tag-custom-face 14549 . 14553) (nil tag-name "v-rowstyle" 14548 . 14549) (nil tag-type start 14548 . 14549) (nil font-lock-face web-mode-html-tag-custom-face 14548 . 14549) (14548 . 14568) (t 25672 59671 525380 69000)) nil (25672 59730 324655 76000) 0 nil])
([nil nil ((14548 . 14549)) nil (25672 59730 324647 313000) 0 nil])
([nil nil ((#(" style=\"border: 0px;\"" 0 1 (tag-type start tag-name "v-col") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 2 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 7 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t rear-nonsticky t)) . 14595) (undo-tree-id52 . -21) (undo-tree-id53 . -21) (undo-tree-id54 . -21) (undo-tree-id55 . -1) (undo-tree-id56 . -21) (undo-tree-id57 . -21)) nil (25672 59746 948277 2000) 0 nil])
([nil nil ((14603 . 14604) (14595 . 14604)) nil (25672 59754 569007 941000) 0 nil] [nil nil ((14556 . 14565) (14549 . 14558) (t 25672 59730 426132 777000)) ((#("class=\"\" " 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t) 8 9 (tag-type start tag-name "v-row")) . 14549) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (#("pa-0 ma-0" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 14556) (undo-tree-id76 . -7) (undo-tree-id77 . -9) (undo-tree-id78 . -9) (undo-tree-id79 . -9) (undo-tree-id80 . -9) (undo-tree-id81 . -9) (undo-tree-id82 . -9) (undo-tree-id83 . -9) (undo-tree-id84 . -9) (undo-tree-id85 . -9) (undo-tree-id86 . -9) (undo-tree-id87 . -9) (undo-tree-id88 . -9) (undo-tree-id89 . -9) (undo-tree-id90 . -9) (undo-tree-id91 . -9) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (t 25672 59741 434269 906000)) (25672 59741 334813 323000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -14603) (undo-tree-id94 . -1) 14604) nil (25672 59754 569005 116000) 0 nil])
nil
([nil nil ((14603 . 14612)) nil (25672 59778 742245 494000) 0 nil])
([nil nil ((14869 . 14873) (14862 . 14871) (t 25672 59779 582737 73000)) nil (25672 59785 892823 500000) 0 nil] [nil nil ((nil rear-nonsticky nil 14878 . 14879) (nil tag-attr t 14878 . 14879) (nil tag-attr-end 5 14878 . 14879) (nil tag-name "v-col" 14878 . 14879) (nil tag-type start 14878 . 14879) (nil font-lock-face web-mode-html-attr-value-face 14878 . 14879) (nil tag-attr t 14868 . 14878) (nil tag-name "v-col" 14868 . 14878) (nil tag-type start 14868 . 14878) (nil font-lock-face web-mode-html-attr-value-face 14868 . 14878) (nil tag-attr t 14867 . 14868) (nil tag-name "v-col" 14867 . 14868) (nil tag-type start 14867 . 14868) (nil font-lock-face web-mode-html-attr-equal-face 14867 . 14868) (nil tag-attr t 14866 . 14867) (nil tag-name "v-col" 14866 . 14867) (nil tag-type start 14866 . 14867) (nil font-lock-face web-mode-html-attr-name-face 14866 . 14867) (nil tag-attr t 14865 . 14866) (nil tag-name "v-col" 14865 . 14866) (nil tag-type start 14865 . 14866) (nil font-lock-face web-mode-html-attr-name-face 14865 . 14866) (nil tag-attr t 14864 . 14865) (nil tag-name "v-col" 14864 . 14865) (nil tag-type start 14864 . 14865) (nil font-lock-face web-mode-html-attr-name-face 14864 . 14865) (nil tag-attr t 14863 . 14864) (nil tag-name "v-col" 14863 . 14864) (nil tag-type start 14863 . 14864) (nil font-lock-face web-mode-html-attr-name-face 14863 . 14864) (nil tag-attr-beg 0 14862 . 14863) (nil tag-attr t 14862 . 14863) (nil tag-name "v-col" 14862 . 14863) (nil tag-type start 14862 . 14863) (nil font-lock-face web-mode-html-attr-name-face 14862 . 14863) (14862 . 14879) (t 25672 59754 670433 393000)) ((#("class=\"ma-0 pa-0\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 6 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t rear-nonsticky nil)) . 14862) (undo-tree-id108 . -17) (undo-tree-id109 . -17) (undo-tree-id110 . -17) (undo-tree-id111 . -17) (undo-tree-id112 . -17) (undo-tree-id113 . -17) (undo-tree-id114 . -17) (undo-tree-id115 . -17) (undo-tree-id116 . -17) (undo-tree-id117 . -17) (undo-tree-id118 . -17) (undo-tree-id119 . -17) (undo-tree-id120 . -17) (undo-tree-id121 . -17) (undo-tree-id122 . -17) (undo-tree-id123 . -17) (undo-tree-id124 . -17) (undo-tree-id125 . -17) (undo-tree-id126 . -17) (undo-tree-id127 . -17) (undo-tree-id128 . -17) (undo-tree-id129 . -17) (undo-tree-id130 . -17) (undo-tree-id131 . -17) (nil tag-name "v-col" 14862 . 14863) (nil tag-name "v-col" 14863 . 14864) (nil tag-name "v-col" 14864 . 14865) (nil tag-name "v-col" 14865 . 14866) (nil tag-name "v-col" 14866 . 14867) (nil tag-name "v-col" 14867 . 14868) (nil tag-name "v-col" 14868 . 14878) (nil tag-name "v-col" 14878 . 14879) (nil rear-nonsticky t 14878 . 14879)) (25672 59778 334793 776000) 0 nil])
([nil nil ((#("class=\"pb-0\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 6 11 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t)) . 14862) (undo-tree-id140 . -12) (undo-tree-id141 . -9) (undo-tree-id142 . -9) (undo-tree-id143 . -12) (t 25672 59785 990814 365000)) nil (25672 59807 395574 220000) 0 nil])
([nil nil ((14879 . 14880)) ((#(" " 0 1 (tag-type start tag-name "v-col")) . 14879) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (t 25672 59773 426662 508000)) (25672 59773 328873 845000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-col")) . -14861) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 14862) nil (25672 59807 395567 191000) 0 nil])
nil
([nil nil ((14913 . 14920)) nil (25672 59807 395558 54000) 0 nil])
([nil nil ((#("</b>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "b") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "b") 2 3 (font-lock-face web-mode-html-tag-face tag-type end tag-name "b") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "b")) . 14916) (undo-tree-id132 . -4) (undo-tree-id133 . -4)) nil (25672 59807 395555 599000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14927 . 14928) (nil tag-name "b" 14927 . 14928) (nil tag-type end 14927 . 14928) (nil tag-end t 14927 . 14928) (nil font-lock-face web-mode-html-tag-bracket-face 14927 . 14928) (nil tag-name "b" 14926 . 14927) (nil tag-type end 14926 . 14927) (nil font-lock-face web-mode-html-tag-face 14926 . 14927) (nil tag-name "b" 14925 . 14926) (nil tag-type end 14925 . 14926) (nil font-lock-face web-mode-html-tag-bracket-face 14925 . 14926) (nil tag-name "b" 14924 . 14925) (nil tag-type end 14924 . 14925) (nil tag-beg 20 14924 . 14925) (nil font-lock-face web-mode-html-tag-bracket-face 14924 . 14925) (14924 . 14928)) nil (25672 59807 395537 959000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15034 . 15035) (nil tag-name "b" 15034 . 15035) (nil tag-type start 15034 . 15035) (nil tag-end t 15034 . 15035) (nil font-lock-face web-mode-html-tag-bracket-face 15034 . 15035) (nil tag-name "b" 15033 . 15034) (nil tag-type start 15033 . 15034) (nil font-lock-face web-mode-html-tag-face 15033 . 15034) (nil tag-name "b" 15032 . 15033) (nil tag-type start 15032 . 15033) (nil tag-beg 16 15032 . 15033) (nil font-lock-face web-mode-html-tag-bracket-face 15032 . 15033) (15032 . 15035) (t 25672 59807 495071 358000)) nil (25672 60094 390122 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15154 . 15155) (nil tag-name "b" 15154 . 15155) (nil tag-type start 15154 . 15155) (nil tag-end t 15154 . 15155) (nil font-lock-face web-mode-html-tag-bracket-face 15154 . 15155) (nil tag-name "b" 15153 . 15154) (nil tag-type start 15153 . 15154) (nil font-lock-face web-mode-html-tag-face 15153 . 15154) (nil tag-name "b" 15152 . 15153) (nil tag-type start 15152 . 15153) (nil tag-beg 16 15152 . 15153) (nil font-lock-face web-mode-html-tag-bracket-face 15152 . 15153) (15152 . 15155)) nil (25672 60094 390118 60000) 0 nil])
([nil nil ((15047 . 15051)) nil (25672 60094 390114 83000) 0 nil])
([nil nil ((15166 . 15170)) nil (25672 60094 390112 946000) 0 nil])
([nil nil (("log type" . 14916) (undo-tree-id186 . -8) (undo-tree-id187 . -8)) nil (25672 60094 390111 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14971 . 14972) (nil block-side t 14971 . 14972) (nil block-end t 14971 . 14972) (nil block-token delimiter-end 14971 . 14972) (nil face (rainbow-delimiters-depth-1-face) 14971 . 14972) (nil block-side t 14970 . 14971) (nil block-token delimiter-end 14970 . 14971) (nil face (rainbow-delimiters-depth-2-face) 14970 . 14971) (nil block-side t 14969 . 14970) (nil block-side t 14968 . 14969) (nil face (rainbow-delimiters-depth-3-face) 14968 . 14969) (nil block-side t 14967 . 14968) (nil block-side t 14966 . 14967) (nil block-side t 14965 . 14966) (nil block-side t 14964 . 14965) (nil block-side t 14963 . 14964) (nil block-side t 14962 . 14963) (nil block-side t 14961 . 14962) (nil block-side t 14960 . 14961) (nil block-side t 14959 . 14960) (nil block-side t 14958 . 14959) (nil block-side t 14957 . 14958) (nil block-side t 14956 . 14957) (nil block-side t 14955 . 14956) (nil block-side t 14954 . 14955) (nil block-side t 14953 . 14954) (nil block-side t 14952 . 14953) (nil block-side t 14951 . 14952) (nil block-side t 14950 . 14951) (nil block-side t 14949 . 14950) (nil block-side t 14948 . 14949) (nil block-side t 14947 . 14948) (nil block-side t 14946 . 14947) (nil block-side t 14945 . 14946) (nil block-side t 14944 . 14945) (nil block-side t 14943 . 14944) (nil block-side t 14942 . 14943) (nil block-side t 14941 . 14942) (nil block-side t 14940 . 14941) (nil block-side t 14939 . 14940) (nil block-side t 14938 . 14939) (nil block-side t 14937 . 14938) (nil block-side t 14936 . 14937) (nil block-side t 14935 . 14936) (nil block-side t 14934 . 14935) (nil block-side t 14933 . 14934) (nil block-side t 14932 . 14933) (nil block-side t 14931 . 14932) (nil block-side t 14930 . 14931) (nil block-side t 14929 . 14930) (nil block-side t 14928 . 14929) (nil block-side t 14927 . 14928) (nil block-side t 14926 . 14927) (nil block-side t 14925 . 14926) (nil block-side t 14924 . 14925) (nil block-side t 14923 . 14924) (nil block-side t 14922 . 14923) (nil block-side t 14921 . 14922) (nil face (rainbow-delimiters-depth-3-face) 14921 . 14922) (nil block-side t 14920 . 14921) (nil block-side t 14918 . 14920) (nil block-side t 14917 . 14918) (nil block-token delimiter-beg 14917 . 14918) (nil face (rainbow-delimiters-depth-2-face) 14917 . 14918) (nil block-beg 0 14916 . 14917) (nil block-controls 0 14916 . 14917) (nil block-side t 14916 . 14917) (nil block-token delimiter-beg 14916 . 14917) (nil face (rainbow-delimiters-depth-1-face) 14916 . 14917) (14916 . 14972)) nil (25672 60094 390105 237000) 0 nil])
([nil nil ((#("SensorOverview.TableHeaders.getConfVariables" 0 44 (block-side t)) . 14923) (undo-tree-id183 . -44) (undo-tree-id184 . -44) (undo-tree-id185 . -44)) nil (25672 60094 390087 988000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14935 . 14936) (nil block-side t 14923 . 14936) (14923 . 14936)) nil (25672 60094 390083 195000) 0 nil])
([nil nil ((14936 . 14937)) nil (25672 60094 390081 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14943 . 14944) (nil block-side t 14937 . 14944) (14937 . 14944)) nil (25672 60094 390080 401000) 0 nil])
([nil nil (("trigger name" . 15060) (undo-tree-id181 . -12) (undo-tree-id182 . -12)) nil (25672 60094 390078 666000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15092 . 15093) (nil rear-nonsticky t 15092 . 15093) (nil block-side t 15092 . 15093) (nil block-end t 15092 . 15093) (nil block-token delimiter-end 15092 . 15093) (nil face (rainbow-delimiters-depth-1-face) 15092 . 15093) (nil block-side t 15091 . 15092) (nil block-token delimiter-end 15091 . 15092) (nil face (rainbow-delimiters-depth-2-face) 15091 . 15092) (nil block-side t 15090 . 15091) (nil block-side t 15089 . 15090) (nil face (rainbow-delimiters-depth-3-face) 15089 . 15090) (nil block-side t 15088 . 15089) (nil rear-nonsticky t 15087 . 15088) (nil block-side t 15087 . 15088) (nil block-side t 15081 . 15087) (nil block-side t 15080 . 15081) (nil rear-nonsticky t 15079 . 15080) (nil block-side t 15079 . 15080) (nil block-side t 15067 . 15079) (nil block-side t 15066 . 15067) (nil block-side t 15065 . 15066) (nil face (rainbow-delimiters-depth-3-face) 15065 . 15066) (nil block-side t 15062 . 15065) (nil block-side t 15061 . 15062) (nil block-token delimiter-beg 15061 . 15062) (nil face (rainbow-delimiters-depth-2-face) 15061 . 15062) (nil block-beg 0 15060 . 15061) (nil block-controls 0 15060 . 15061) (nil block-side t 15060 . 15061) (nil block-token delimiter-beg 15060 . 15061) (nil face (rainbow-delimiters-depth-1-face) 15060 . 15061) (15060 . 15093)) nil (25672 60094 390073 913000) 0 nil])
([nil nil ((#("ogType" 0 6 (block-side t)) . 15082) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6)) nil (25672 60094 390064 597000) 0 nil])
([nil nil ((#("l" 0 1 (block-side t)) . -15081) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 15082) nil (25672 60094 390059 998000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15091 . 15092) (nil block-side t 15081 . 15092) (15081 . 15092)) nil (25672 60094 390055 568000) 0 nil])
([nil nil (("filters" . 15209) (undo-tree-id173 . -7) (undo-tree-id174 . -7)) nil (25672 60094 390053 754000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15245 . 15246) (nil rear-nonsticky t 15245 . 15246) (nil block-side t 15245 . 15246) (nil block-end t 15245 . 15246) (nil block-token delimiter-end 15245 . 15246) (nil face (rainbow-delimiters-depth-1-face) 15245 . 15246) (nil block-side t 15244 . 15245) (nil block-token delimiter-end 15244 . 15245) (nil face (rainbow-delimiters-depth-2-face) 15244 . 15245) (nil block-side t 15243 . 15244) (nil block-side t 15242 . 15243) (nil face (rainbow-delimiters-depth-3-face) 15242 . 15243) (nil block-side t 15241 . 15242) (nil rear-nonsticky t 15240 . 15241) (nil block-side t 15240 . 15241) (nil block-side t 15230 . 15240) (nil block-side t 15215 . 15230) (nil block-side t 15214 . 15215) (nil face (rainbow-delimiters-depth-3-face) 15214 . 15215) (nil block-side t 15211 . 15214) (nil block-side t 15210 . 15211) (nil block-token delimiter-beg 15210 . 15211) (nil face (rainbow-delimiters-depth-2-face) 15210 . 15211) (nil block-beg 0 15209 . 15210) (nil block-controls 0 15209 . 15210) (nil block-side t 15209 . 15210) (nil block-token delimiter-beg 15209 . 15210) (nil face (rainbow-delimiters-depth-1-face) 15209 . 15210) (15209 . 15246)) nil (25672 60094 390048 66000) 0 nil])
([nil nil ((#("triggerName" 0 11 (block-side t)) . 15230) (undo-tree-id171 . -11) (undo-tree-id172 . -11)) nil (25672 60094 390040 287000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15236 . 15237) (nil block-side t 15230 . 15237) (15230 . 15237)) nil (25672 60094 390037 115000) 0 nil])
([nil nil (("Active Triggers" . 14716) (undo-tree-id169 . -15) (undo-tree-id170 . -15)) nil (25672 60094 390034 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14748 . 14749) (nil rear-nonsticky t 14748 . 14749) (nil block-side t 14748 . 14749) (nil block-end t 14748 . 14749) (nil block-token delimiter-end 14748 . 14749) (nil face (rainbow-delimiters-depth-1-face) 14748 . 14749) (nil block-side t 14747 . 14748) (nil block-token delimiter-end 14747 . 14748) (nil face (rainbow-delimiters-depth-2-face) 14747 . 14748) (nil block-side t 14746 . 14747) (nil block-side t 14745 . 14746) (nil face (rainbow-delimiters-depth-3-face) 14745 . 14746) (nil block-side t 14744 . 14745) (nil rear-nonsticky t 14743 . 14744) (nil block-side t 14743 . 14744) (nil block-side t 14737 . 14743) (nil block-side t 14736 . 14737) (nil rear-nonsticky t 14735 . 14736) (nil block-side t 14735 . 14736) (nil block-side t 14723 . 14735) (nil block-side t 14722 . 14723) (nil block-side t 14721 . 14722) (nil face (rainbow-delimiters-depth-3-face) 14721 . 14722) (nil block-side t 14718 . 14721) (nil block-side t 14717 . 14718) (nil block-token delimiter-beg 14717 . 14718) (nil face (rainbow-delimiters-depth-2-face) 14717 . 14718) (nil block-beg 0 14716 . 14717) (nil block-controls 0 14716 . 14717) (nil block-side t 14716 . 14717) (nil block-token delimiter-beg 14716 . 14717) (nil face (rainbow-delimiters-depth-1-face) 14716 . 14717) (14716 . 14749)) nil (25672 60094 390029 419000) 0 nil])
([nil nil ((#("logType" 0 7 (block-side t)) . 14737) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -7) (undo-tree-id168 . -7)) nil (25672 60094 390017 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14750 . 14751) (nil block-side t 14737 . 14751) (14737 . 14751)) nil (25672 61014 497503 652000) 0 nil])
([nil nil ((15761 . 15782) (t 25672 60094 494212 569000)) nil (25672 61060 404777 299000) 0 nil] [nil nil ((15623 . 15644) (t 25672 60094 494212 569000)) (("
                    " . 15623) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -1) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -21) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21) (undo-tree-id397 . -21) (undo-tree-id398 . -21) (undo-tree-id399 . -21) (undo-tree-id400 . -21) (undo-tree-id401 . -21) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (undo-tree-id404 . -21) (undo-tree-id405 . -21) (undo-tree-id406 . -21) (undo-tree-id407 . -21) (undo-tree-id408 . -21) (undo-tree-id409 . -21) (undo-tree-id410 . -21) (undo-tree-id411 . -21) (undo-tree-id412 . -1) (undo-tree-id413 . -21) (undo-tree-id414 . -21) (undo-tree-id415 . -21) (undo-tree-id416 . -21) (undo-tree-id417 . -21) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (undo-tree-id421 . -21) (undo-tree-id422 . -21) (undo-tree-id423 . -21)) (25672 61014 65703 537000) 0 nil])
([nil nil ((15782 . 15785)) nil (25672 61060 404775 500000) 0 nil])
([nil nil ((15644 . 15645)) (("v" . 15644) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1)) (25672 61013 472094 496000) 0 nil])
([nil nil (("c" . -15782) (undo-tree-id454 . -1) ("-" . -15783) (undo-tree-id455 . -1) ("p" . -15784) (undo-tree-id456 . -1) 15785) nil (25672 61060 404773 269000) 0 nil])
([nil nil (("v" . -15644) (undo-tree-id199 . -1) 15645) ((15644 . 15645)) (25672 61012 931933 577000) 0 nil])
([nil nil ((15782 . 15784)) nil (25672 61060 404758 986000) 0 nil])
([nil nil ((15644 . 15657)) ((#("<span></span>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "span") 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 2 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 3 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 4 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 8 12 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15644) (undo-tree-id302 . -4) (undo-tree-id303 . -6) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -6) (undo-tree-id339 . -6) (undo-tree-id340 . -6) (undo-tree-id341 . -6) (undo-tree-id342 . -6) (undo-tree-id343 . -6) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -6) (undo-tree-id354 . -6) (undo-tree-id355 . -6) (undo-tree-id356 . -6)) (25672 61012 357566 956000) 0 nil])
([nil nil (("-" . -15783) (undo-tree-id453 . -1) 15784) nil (25672 61060 404756 143000) 0 nil])
([nil nil ((15651 . 15673) (15652 . 15672) (#("                      " 0 22 (face whitespace-trailing)) . 15651) (15651 . 15673) (15651 . 15652) ("                    " . 15651) (15650 . 15671)) (("
                    " . 15650) (undo-tree-id300 . -1) (15651 . 15671) ("
" . 15651) (undo-tree-id301 . -1) (#("                      " 0 22 (face whitespace-trailing)) . 15651) (15651 . 15673) ("                    " . 15652) (#("                      " 0 22 (face whitespace-trailing)) . 15651)) (25672 61011 998517 566000) 0 nil])
([nil nil ((15783 . 15785)) nil (25672 61060 404754 115000) 0 nil])
([nil nil ((#("                    <v-chip class=\"mr-1 mt-1\" v-for=\"filter in filters\">
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-chip") 21 27 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-chip") 27 28 (tag-type start tag-name "v-chip") 28 29 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t tag-attr-beg 0) 29 33 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-chip" tag-attr t) 34 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "v-chip") 46 47 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-chip" tag-attr t tag-attr-beg 2) 47 51 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-chip" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-chip" tag-attr t) 52 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr-end 5 tag-attr t) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-chip")) . 15775) (15747 . 15775) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15674) (undo-tree-id198 . -22) (15702 . 15775) 15696) ((#("                    <v-chip class=\"mr-1 mt-1\" v-for=\"filter in filters\">
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-chip") 21 27 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-chip") 27 28 (tag-type start tag-name "v-chip") 28 29 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t tag-attr-beg 0) 29 33 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t) 33 34 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-chip" tag-attr t) 34 44 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t) 44 45 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr-end 5 tag-attr t) 45 46 (tag-type start tag-name "v-chip") 46 47 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-chip" tag-attr t tag-attr-beg 2) 47 51 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-chip" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-chip" tag-attr t) 52 70 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t) 70 71 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr-end 5 tag-attr t) 71 72 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-chip")) . 15702) (undo-tree-id239 . -73) (undo-tree-id240 . -73) (undo-tree-id241 . -73) (undo-tree-id242 . -73) (undo-tree-id243 . -73) (undo-tree-id244 . -73) (undo-tree-id245 . -73) (undo-tree-id246 . -73) (undo-tree-id247 . -73) (undo-tree-id248 . -73) (undo-tree-id249 . -73) (undo-tree-id250 . -73) (undo-tree-id251 . -73) (undo-tree-id252 . -73) (undo-tree-id253 . -73) (undo-tree-id254 . -73) (undo-tree-id255 . -73) (undo-tree-id256 . -73) (undo-tree-id257 . -73) (undo-tree-id258 . -73) (undo-tree-id259 . -73) (undo-tree-id260 . -73) (undo-tree-id261 . -73) (undo-tree-id262 . -73) (undo-tree-id263 . -73) (undo-tree-id264 . -73) (undo-tree-id265 . -73) (undo-tree-id266 . -73) (undo-tree-id267 . -73) (undo-tree-id268 . -73) (undo-tree-id269 . -73) (15674 . 15702) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15747) (undo-tree-id270 . -22) (undo-tree-id271 . -28) (undo-tree-id272 . -28) (undo-tree-id273 . -28) (undo-tree-id274 . -28) (undo-tree-id275 . -28) (undo-tree-id276 . -28) (undo-tree-id277 . -28) (undo-tree-id278 . -28) (undo-tree-id279 . -28) (undo-tree-id280 . -28) (undo-tree-id281 . -28) (undo-tree-id282 . -28) (undo-tree-id283 . -28) (undo-tree-id284 . -28) (undo-tree-id285 . -28) (undo-tree-id286 . -28) (undo-tree-id287 . -28) (undo-tree-id288 . -22) (undo-tree-id289 . -22) (undo-tree-id290 . -22) (undo-tree-id291 . -22) (undo-tree-id292 . -22) (undo-tree-id293 . -22) (undo-tree-id294 . -22) (undo-tree-id295 . -22) (undo-tree-id296 . -22) (undo-tree-id297 . -22) (undo-tree-id298 . -22) (undo-tree-id299 . -22) (15775 . 15848)) (25672 61011 541629 322000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v")) . -15783) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("-" 0 1 (font-lock-face web-mode-html-tag-unclosed-face tag-type start tag-name "v-")) . -15784) (undo-tree-id451 . -1) (undo-tree-id452 . -1) 15785) nil (25672 61060 404752 631000) 0 nil])
([nil nil ((#("                      {{ filter }}
" 22 23 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 23 24 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 24 25 (block-side t) 25 26 (block-side t) 26 27 (block-side t) 27 28 (block-side t) 28 29 (block-side t) 29 30 (block-side t) 30 31 (block-side t) 31 32 (block-side t) 32 33 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 33 34 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t)) . 15810) (undo-tree-id196 . -34) (15782 . 15810) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15747) (undo-tree-id197 . -22) (15775 . 15810) 15769) ((#("                      {{ filter }}
" 22 23 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 23 24 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 24 25 (block-side t) 25 26 (block-side t) 26 27 (block-side t) 27 28 (block-side t) 28 29 (block-side t) 29 30 (block-side t) 30 31 (block-side t) 31 32 (block-side t) 32 33 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 33 34 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t)) . 15775) (undo-tree-id202 . -35) (undo-tree-id203 . -35) (undo-tree-id204 . -35) (undo-tree-id205 . -35) (undo-tree-id206 . -35) (undo-tree-id207 . -35) (undo-tree-id208 . -35) (undo-tree-id209 . -35) (undo-tree-id210 . -35) (undo-tree-id211 . -35) (undo-tree-id212 . -35) (undo-tree-id213 . -35) (undo-tree-id214 . -35) (undo-tree-id215 . -35) (undo-tree-id216 . -35) (undo-tree-id217 . -35) (undo-tree-id218 . -35) (undo-tree-id219 . -35) (undo-tree-id220 . -35) (15747 . 15775) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15782) (undo-tree-id221 . -22) (undo-tree-id222 . -28) (undo-tree-id223 . -22) (undo-tree-id224 . -22) (undo-tree-id225 . -22) (undo-tree-id226 . -22) (undo-tree-id227 . -22) (undo-tree-id228 . -22) (undo-tree-id229 . -22) (undo-tree-id230 . -22) (undo-tree-id231 . -22) (undo-tree-id232 . -22) (undo-tree-id233 . -22) (undo-tree-id234 . -22) (undo-tree-id235 . -22) (undo-tree-id236 . -22) (undo-tree-id237 . -22) (undo-tree-id238 . -22) (15810 . 15845)) (25672 61011 8578 66000) 0 nil])
([nil nil ((15783 . 15789)) nil (25672 61060 404747 442000) 0 nil])
([nil nil ((#("                    </v-chip>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-chip") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-chip") 22 28 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-chip") 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-chip")) . 15840) (15812 . 15840) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15782) (undo-tree-id195 . -22) (15810 . 15840) 15804) ((#("                    </v-chip>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-chip") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-chip") 22 28 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-chip") 28 29 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-chip")) . 15810) (undo-tree-id201 . -30) (15782 . 15810) (#("                    </span>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 22 26 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 26 27 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 15812) (15840 . 15870)) (25672 61010 598572 277000) 0 nil])
([nil nil ((15784 . 15790)) nil (25672 61060 404746 567000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "s")) . -15645) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "sp")) . -15646) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "spa")) . -15647) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span")) . -15648) (undo-tree-id194 . -1) 15649) ((15645 . 15649)) (25672 61010 187176 558000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "p")) . -15789) (undo-tree-id448 . -1) 15790) nil (25672 61060 404745 480000) 0 nil])
([nil nil ((15645 . 15649)) ((#("div " 0 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 3 4 (tag-type start tag-name "div")) . 15645) (undo-tree-id200 . -4)) (25672 61010 186500 338000) 0 nil])
([nil nil ((15789 . 15792)) nil (25672 61060 404743 428000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 15797 . 15798) (nil tag-attr t 15791 . 15798) (nil tag-name "p" 15791 . 15798) (nil tag-type start 15791 . 15798) (nil font-lock-face web-mode-html-attr-value-face 15791 . 15798) (15791 . 15798)) nil (25672 61060 404742 130000) 0 nil])
([nil nil ((15806 . 15809) (15798 . 15810)) nil (25672 61060 404740 162000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15806) (undo-tree-id445 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15807) (undo-tree-id446 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15808) (undo-tree-id447 . -1) 15809) nil (25672 61060 404738 254000) 0 nil])
([nil nil ((15806 . 15807)) nil (25672 61060 404733 727000) 0 nil])
([nil nil ((#(">" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15805) (undo-tree-id443 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15806) (undo-tree-id444 . -1) 15807) nil (25672 61060 404732 276000) 0 nil])
([nil nil ((15805 . 15808)) nil (25672 61060 404729 0) 0 nil])
([nil nil ((#(">" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15806) (undo-tree-id441 . -1) (#("<" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15807) (undo-tree-id442 . -1) 15808) nil (25672 61060 404727 625000) 0 nil])
([nil nil ((15806 . 15809)) nil (25672 61060 404724 240000) 0 nil])
([nil nil ((#("<" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15806) (undo-tree-id438 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15807) (undo-tree-id439 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -15808) (undo-tree-id440 . -1) 15809) nil (25672 61060 404722 782000) 0 nil])
([nil nil ((15808 . 15812) (15806 . 15810)) nil (25672 61060 404717 561000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 4 tag-attr t)) . -15807) (undo-tree-id433 . -1) (#("=" 0 1 (tag-type start tag-name "p")) . -15808) (undo-tree-id434 . -1) (#(" " 0 1 (tag-type start tag-name "p")) . -15809) (undo-tree-id435 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr t tag-attr-beg 0)) . -15810) (undo-tree-id436 . -1) (#(" " 0 1 (tag-type start tag-name "p")) . -15811) (undo-tree-id437 . -1) 15812) nil (25672 61060 404714 658000) 0 nil])
([nil nil ((15807 . 15810)) nil (25672 61060 404695 921000) 0 nil])
([nil nil ((15811 . 15812)) nil (25672 61060 404692 516000) 0 nil])
([nil nil (("\"" . 15812) (#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "_fragment_")) . 15812) (#("p" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p")) . 15812) (#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p")) . 15812) (#("<" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p")) . 15812) (" " . 15812)) nil (25672 61060 404687 670000) 0 nil])
([nil nil ((#("<" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "_fragment_")) . -15811) (undo-tree-id432 . -1) 15812) nil (25672 61060 404684 470000) 0 nil])
([nil nil ((15785 . 15786)) nil (25672 61060 404679 555000) 0 nil])
([nil nil ((15814 . 15836) (15815 . 15835) (#("                      " 0 22 (face whitespace-trailing)) . 15814) (15814 . 15836) (15814 . 15815) ("                    " . 15814) (15813 . 15834)) nil (25672 61060 404674 211000) 0 nil])
([nil nil ((15836 . 15842)) nil (25672 61060 404669 424000) 0 nil])
([nil nil ((" " . -15841) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 15842) nil (25672 61060 404659 164000) 0 nil])
([nil nil ((#("                    <p :v-if=\"filters.length == 0\">
                      empty
                    </p>" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "p") 21 22 (font-lock-face web-mode-html-tag-face tag-type start tag-name "p") 22 23 (tag-type start tag-name "p") 23 24 (tag-type start tag-name "p" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0) 24 25 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 25 26 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 26 27 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 27 28 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 28 29 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 29 30 (tag-type start tag-name "p" tag-attr t block-token delimiter-beg block-side t) 30 36 (tag-type start tag-name "p" tag-attr t block-side t) 36 37 (tag-type start tag-name "p" tag-attr t block-side t rear-nonsticky t) 37 49 (tag-type start tag-name "p" tag-attr t block-side t) 49 50 (tag-type start tag-name "p" tag-attr-end 5 tag-attr t block-token delimiter-end block-end t block-side t) 50 51 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "p") 100 101 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "p") 101 102 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "p") 102 103 (font-lock-face web-mode-html-tag-face tag-type end tag-name "p") 103 104 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "p")) . 15762) (undo-tree-id463 . -104) (undo-tree-id464 . -27) (undo-tree-id465 . -43) (undo-tree-id466 . -52) (undo-tree-id467 . -30) (undo-tree-id468 . -104) (t 25672 61060 506765 789000)) nil (25672 61110 970814 113000) 0 nil])
([nil nil (("
" . -15761) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) 15762) nil (25672 61111 409370 404000) 0 nil])
([nil nil ((15347 . 15352)) nil (25672 61137 44116 61000) 0 nil] [nil nil ((15788 . 15807)) (("
                  " . 15788) (undo-tree-id472 . -19) (undo-tree-id473 . -19) (undo-tree-id474 . -19) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -19) (undo-tree-id478 . -19) (undo-tree-id479 . -19) (undo-tree-id480 . -19) (undo-tree-id481 . -19) (undo-tree-id482 . -19) (undo-tree-id483 . -19) (undo-tree-id484 . -19) (undo-tree-id485 . -19) (undo-tree-id486 . -19) (undo-tree-id487 . -19) (undo-tree-id488 . -19)) (25672 61110 972449 66000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -15351) (undo-tree-id497 . -1) 15352) nil (25672 61137 44114 975000) 0 nil])
([nil nil ((15807 . 15822)) ((#("<v-col></v-col>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 18 tag-type start tag-name "v-col") 1 6 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 8 9 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 9 14 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 14 15 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 15807) (undo-tree-id469 . -4) (undo-tree-id470 . -5) (undo-tree-id471 . -7)) (25672 61110 970777 412000) 0 nil])
([nil nil ((15353 . 15354) (15351 . 15355)) nil (25672 61137 44112 639000) 0 nil])
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15353) (undo-tree-id496 . -1) 15354) nil (25672 61137 44111 266000) 0 nil])
([nil nil ((15353 . 15367)) nil (25672 61137 44108 956000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15366) (undo-tree-id495 . -1) 15367) nil (25672 61137 44107 918000) 0 nil])
([nil nil ((15834 . 15851)) nil (25672 61137 44105 679000) 0 nil])
([nil nil ((15851 . 15853)) nil (25672 61137 44104 794000) 0 nil])
([nil nil (("v" . -15851) (undo-tree-id491 . -1) (undo-tree-id492 . -1) ("-" . -15852) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 15853) nil (25672 61137 44103 130000) 0 nil])
([nil nil ((15851 . 15859)) nil (25672 61137 44097 12000) 0 nil])
([nil nil ((15859 . 15865)) nil (25672 61137 44096 22000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -15864) (undo-tree-id490 . -1) 15865) nil (25672 61137 44094 650000) 0 nil])
([nil nil ((15864 . 15873)) nil (25672 61137 44091 16000) 0 nil])
([nil nil ((15866 . 15884) (15867 . 15883) (#("                  " 0 18 (face whitespace-trailing)) . 15866) (15866 . 15884) (15866 . 15867) ("                " . 15866) (15865 . 15882)) nil (25672 61137 44089 332000) 0 nil])
([nil nil ((15884 . 15890)) nil (25672 61137 44086 429000) 0 nil])
([nil nil ((" " . -15889) (undo-tree-id489 . -1) 15890) nil (25672 61137 44081 547000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15357) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 15358 (t 25672 61137 145327 296000)) nil (25672 61152 877956 664000) 0 nil])
([nil nil ((15365 . 15377) (t 25672 61152 977060 594000)) nil (25672 61177 249148 120000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15376) (undo-tree-id526 . -1) 15377) nil (25672 61177 249142 845000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15365) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15366) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15367) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15368) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15369) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15370) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15371) (undo-tree-id548 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15372) (undo-tree-id549 . -1) (#(">" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15373) (undo-tree-id550 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15374) (undo-tree-id551 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15375) (undo-tree-id552 . -1) 15376 (t 25672 61177 348668 927000)) nil (25672 61210 147152 335000) 0 nil])
([nil nil ((15864 . 15883)) nil (25672 61210 147125 975000) 0 nil])
([nil nil ((15883 . 15898)) nil (25672 61210 147125 9000) 0 nil])
([nil nil ((15891 . 15911) (15892 . 15910) (#("                    " 0 20 (face whitespace-trailing)) . 15891) (15891 . 15911) (15891 . 15892) ("                  " . 15891) (15890 . 15909)) nil (25672 61210 147123 597000) 0 nil])
([nil nil (("                  empty
" . 15963) (undo-tree-id530 . -20) (undo-tree-id531 . -24) (15936 . 15963) (#("                  </v-col>
" 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 19 20 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 20 25 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 15912) (15939 . 15963) 15959) nil (25672 61210 147120 996000) 0 nil])
([nil nil (("                  empty
" . 15936) (undo-tree-id528 . -20) (undo-tree-id529 . -24) (15915 . 15936) (#("                    
" 0 20 (face whitespace-trailing)) . 15891) (15912 . 15936) 15932) nil (25672 61210 147116 114000) 0 nil])
([nil nil ((15909 . 15911) 15911) nil (25672 61210 147111 138000) 0 nil])
([nil nil (("
" . 15916) (undo-tree-id527 . -1)) nil (25672 61210 147108 790000) 0 nil])
([nil nil ((#("                    " 0 20 (face whitespace-trailing)) . -15916)) nil (25672 61210 147092 827000) 0 nil])
([nil nil ((#("v-if=\"item.Filters\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1 3 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 5 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t)) . 15347) (undo-tree-id558 . -19) (undo-tree-id559 . -17) (undo-tree-id560 . -19) (t 25672 61210 248174 823000)) nil (25672 61265 890458 172000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -15346) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 15347) nil (25672 61265 890453 254000) 0 nil])
([nil nil ((#("v-else" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1 2 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t)) . 15837) (undo-tree-id553 . -6) (undo-tree-id554 . -6)) nil (25672 61265 890447 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15855 . 15856) (nil tag-attr t 15855 . 15856) (nil tag-attr-end 4 15855 . 15856) (nil tag-name "v-row" 15855 . 15856) (nil tag-type start 15855 . 15856) (nil font-lock-face web-mode-html-attr-value-face 15855 . 15856) (nil tag-attr t 15842 . 15855) (nil tag-name "v-row" 15842 . 15855) (nil tag-type start 15842 . 15855) (nil font-lock-face web-mode-html-attr-value-face 15842 . 15855) (nil tag-attr t 15841 . 15842) (nil tag-name "v-row" 15841 . 15842) (nil tag-type start 15841 . 15842) (nil font-lock-face web-mode-html-attr-equal-face 15841 . 15842) (nil tag-attr t 15840 . 15841) (nil tag-name "v-row" 15840 . 15841) (nil tag-type start 15840 . 15841) (nil font-lock-face web-mode-html-attr-engine-face 15840 . 15841) (nil tag-attr t 15838 . 15840) (nil tag-name "v-row" 15838 . 15840) (nil tag-type start 15838 . 15840) (nil font-lock-face web-mode-html-attr-engine-face 15838 . 15840) (nil tag-attr-beg 2 15837 . 15838) (nil tag-attr t 15837 . 15838) (nil tag-name "v-row" 15837 . 15838) (nil tag-type start 15837 . 15838) (nil font-lock-face web-mode-html-attr-engine-face 15837 . 15838) (15837 . 15856)) nil (25672 61265 890434 290000) 0 nil])
([nil nil ((15843 . 15844)) nil (25672 61289 973062 225000) 0 nil])
([nil nil ((#("!" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15843) (undo-tree-id628 . -1) 15844 (t 25672 61290 571121 380000)) nil (25672 61320 313673 278000) 0 nil] [nil nil ((#("v-if=\"!item.Filters\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 5 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t rear-nonsticky t)) . 15837) (undo-tree-id597 . -20) (undo-tree-id599 . -20) (t 25672 61265 991422 10000)) ((15837 . 15857)) (25672 61289 557283 637000) 0 nil])
([nil nil (("m" . -15905) (undo-tree-id624 . -1) ("p" . -15906) (undo-tree-id625 . -1) ("t" . -15907) (undo-tree-id626 . -1) ("y" . -15908) (undo-tree-id627 . -1) 15909) nil (25672 61320 313670 107000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -15836) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id565 . -1) (undo-tree-id567 . -1) (undo-tree-id569 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id574 . -1) (undo-tree-id576 . -1) (undo-tree-id578 . -1) (undo-tree-id580 . -1) (undo-tree-id582 . -1) (undo-tree-id584 . -1) (undo-tree-id586 . -1) (undo-tree-id588 . -1) (undo-tree-id590 . -1) (undo-tree-id592 . -1) (undo-tree-id594 . -1) (undo-tree-id596 . -1) 15837) ((15836 . 15837) (t 25672 61280 499242 356000)) (25672 61280 395189 422000) 0 nil])
([nil nil (("e" . -15904) (undo-tree-id623 . -1) 15905) nil (25672 61320 313664 153000) 0 nil])
nil
([nil nil ((15905 . 15907) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -15905) (15905 . 15906) (15904 . 15906) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -15904) (15904 . 15905)) nil (25672 61320 313659 703000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15917 . 15918) (nil block-side t 15906 . 15918) (15906 . 15918)) nil (25672 61320 313657 540000) 0 nil])
([nil nil ((15918 . 15919)) nil (25672 61330 718592 10000) 0 nil])
([nil nil ((15855 . 15867)) nil (25672 61339 465557 684000) 0 nil] [nil nil ((#("v-if=\"item.Filters\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 2) 1 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 5 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t rear-nonsticky t)) . 15837) (undo-tree-id619 . -19) (undo-tree-id620 . -19) (undo-tree-id621 . -18) (undo-tree-id622 . -19)) ((15837 . 15856)) (25672 61330 343847 453000) 0 nil])
([nil nil ((15930 . 15938)) nil (25672 61339 465555 994000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -15836) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id609 . -1) (undo-tree-id611 . -1) (undo-tree-id613 . -1) (undo-tree-id615 . -1) (undo-tree-id617 . -1) 15837) ((15836 . 15837) (t 25672 61320 430780 160000)) (25672 61320 313644 22000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -15937) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 15938) nil (25672 61339 465550 656000) 0 nil])
nil
([nil nil ((#(">" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15863) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 15864 (t 25672 61339 566574 676000)) nil (25672 61352 4954 477000) 0 nil])
([nil nil ((15863 . 15864)) nil (25672 61352 4936 621000) 0 nil])
([nil nil ((15864 . 15867) (t 25672 61352 110445 350000)) nil (25672 61377 590089 713000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t)) . 15865) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 4 tag-attr t)) . 15865)) nil (25672 61377 590087 129000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 15867)) nil (25672 61377 590079 749000) 0 nil])
([nil nil ((#("{{item.Filters.length }}" 0 1 (face (rainbow-delimiters-depth-1-face) block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (face (rainbow-delimiters-depth-2-face) block-token delimiter-beg block-side t) 2 13 (block-side t) 13 14 (block-side t rear-nonsticky t) 14 21 (block-side t) 21 22 (block-side t) 22 23 (face (rainbow-delimiters-depth-2-face) block-token delimiter-end block-side t) 23 24 (face (rainbow-delimiters-depth-1-face) block-token delimiter-end block-end t block-side t)) . 15916) (undo-tree-id659 . -24) (undo-tree-id660 . -20) (undo-tree-id661 . -2) (undo-tree-id662 . -24) (t 25672 61377 698194 236000)) nil (25672 61395 682338 14000) 0 nil])
([nil nil ((15916 . 15934)) nil (25672 61395 682332 686000) 0 nil])
([nil nil (("f" . -15926) (undo-tree-id651 . -1) ("i" . -15927) (undo-tree-id652 . -1) ("l" . -15928) (undo-tree-id653 . -1) ("t" . -15929) (undo-tree-id654 . -1) ("e" . -15930) (undo-tree-id655 . -1) ("r" . -15931) (undo-tree-id656 . -1) ("s" . -15932) (undo-tree-id657 . -1) (" " . -15933) (undo-tree-id658 . -1) 15934) nil (25672 61395 682329 739000) 0 nil])
([nil nil ((15926 . 15935)) nil (25672 61395 682318 20000) 0 nil])
([nil nil ((" " . -15934) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) 15935) nil (25672 61395 682312 734000) 0 nil])
([nil nil ((15902 . 15904) (15894 . 15903) (t 25672 61395 786026 641000)) nil (25672 61434 717873 833000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15903) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) 15904) nil (25672 61434 717871 970000) 0 nil])
([nil nil ((15903 . 15904)) nil (25672 61434 717868 687000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15903) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) 15904) nil (25672 61434 717867 336000) 0 nil])
([nil nil ((15903 . 15904)) nil (25672 61434 717862 877000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15903) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 15904) nil (25672 61434 717861 325000) 0 nil])
([nil nil ((15903 . 15907)) nil (25672 61434 717857 973000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15905) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15906) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) 15907) nil (25672 61434 717856 43000) 0 nil])
([nil nil ((15905 . 15906)) nil (25672 61434 717849 555000) 0 nil])
([nil nil ((15908 . 15929)) nil (25672 61434 717848 473000) 0 nil])
([nil nil ((15929 . 15936)) nil (25672 61434 717847 188000) 0 nil])
([nil nil ((15933 . 15955) (15934 . 15954) (#("                      " 0 22 (face whitespace-trailing)) . 15933) (15933 . 15955) (15933 . 15934) ("                    " . 15933) (15932 . 15953)) nil (25672 61434 717845 32000) 0 nil])
([nil nil (("                    No active triggers
" . 16020) (undo-tree-id1322 . -20) (undo-tree-id1323 . -22) (undo-tree-id1324 . -39) (undo-tree-id1325 . -20) (15995 . 16020) (#("                    </i>
" 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 22 23 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 23 24 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i")) . 15956) (15981 . 16020) 16003) nil (25672 61434 717841 633000) 0 nil])
([nil nil (("                    No active triggers
" . 15995) (undo-tree-id1320 . -22) (undo-tree-id1321 . -39) (15972 . 15995) (#("                      
" 0 22 (face whitespace-trailing)) . 15933) (15956 . 15995) 15978) nil (25672 61434 717833 626000) 0 nil])
([nil nil ((" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) (" " . 15932) ("
" . 15932) (undo-tree-id1319 . -1)) nil (25672 61434 717826 722000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) ("
" . 15950) (undo-tree-id1318 . -1)) nil (25672 61434 717819 381000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950)) nil (25672 61434 717815 799000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950) (#(" " 0 1 (face whitespace-trailing)) . 15950)) nil (25672 61434 717812 577000) 0 nil])
([nil nil ((" " . -15960) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) ("
" . -15961) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (" " . -15962) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (" " . -15963) (undo-tree-id1300 . -1) (" " . -15964) (undo-tree-id1301 . -1) (" " . -15965) (undo-tree-id1302 . -1) (" " . -15966) (undo-tree-id1303 . -1) (" " . -15967) (undo-tree-id1304 . -1) (" " . -15968) (undo-tree-id1305 . -1) (" " . -15969) (undo-tree-id1306 . -1) (" " . -15970) (undo-tree-id1307 . -1) (" " . -15971) (undo-tree-id1308 . -1) (" " . -15972) (undo-tree-id1309 . -1) (" " . -15973) (undo-tree-id1310 . -1) (" " . -15974) (undo-tree-id1311 . -1) (" " . -15975) (undo-tree-id1312 . -1) (" " . -15976) (undo-tree-id1313 . -1) (" " . -15977) (undo-tree-id1314 . -1) (" " . -15978) (undo-tree-id1315 . -1) (" " . -15979) (undo-tree-id1316 . -1) (" " . -15980) (undo-tree-id1317 . -1) 15981) nil (25672 61434 717804 336000) 0 nil])
([nil nil ((" " . -15950) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (" " . -15951) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (" " . -15952) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (" " . -15953) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (" " . -15954) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (" " . -15955) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (" " . -15956) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (" " . -15957) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (" " . -15958) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (" " . -15959) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) 15960) nil (25672 61434 717647 649000) 0 nil])
([nil nil ((" " . 15950)) nil (25672 61434 716695 593000) 0 nil])
([nil nil ((#("5" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15905) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) 15906 (t 25672 61434 825691 441000)) nil (25672 61452 6376 500000) 0 nil])
([nil nil ((15905 . 15908)) nil (25672 61452 6372 562000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15906) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -15907) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 15908) nil (25672 61452 6369 718000) 0 nil])
([nil nil ((15906 . 15907)) nil (25672 61452 6349 737000) 0 nil])
([nil nil (("No active triggers" . 15933) (undo-tree-id1346 . -18) (undo-tree-id1347 . -18) (t 25672 61452 109554 61000)) nil (25672 61800 443228 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15965 . 15966) (nil rear-nonsticky t 15965 . 15966) (nil block-side t 15965 . 15966) (nil block-end t 15965 . 15966) (nil block-token delimiter-end 15965 . 15966) (nil face (rainbow-delimiters-depth-1-face) 15965 . 15966) (nil block-side t 15964 . 15965) (nil block-token delimiter-end 15964 . 15965) (nil face (rainbow-delimiters-depth-2-face) 15964 . 15965) (nil block-side t 15963 . 15964) (nil block-side t 15962 . 15963) (nil face (rainbow-delimiters-depth-3-face) 15962 . 15963) (nil block-side t 15961 . 15962) (nil rear-nonsticky t 15960 . 15961) (nil block-side t 15960 . 15961) (nil block-side t 15954 . 15960) (nil block-side t 15939 . 15954) (nil block-side t 15938 . 15939) (nil face (rainbow-delimiters-depth-3-face) 15938 . 15939) (nil block-side t 15935 . 15938) (nil block-side t 15934 . 15935) (nil block-token delimiter-beg 15934 . 15935) (nil face (rainbow-delimiters-depth-2-face) 15934 . 15935) (nil block-beg 0 15933 . 15934) (nil block-controls 0 15933 . 15934) (nil block-side t 15933 . 15934) (nil block-token delimiter-beg 15933 . 15934) (nil face (rainbow-delimiters-depth-1-face) 15933 . 15934) (15933 . 15966)) nil (25672 61800 443222 587000) 0 nil])
([nil nil ((#("filters" 0 7 (block-side t)) . 15954) (undo-tree-id1343 . -7) (undo-tree-id1344 . -7) (undo-tree-id1345 . -7)) nil (25672 61800 443213 535000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15969 . 15970) (nil block-side t 15954 . 15970) (15954 . 15970)) nil (25672 61800 443197 333000) 0 nil])
([nil nil ((15652 . 15655) (t 25672 61800 543907 921000)) nil (25672 62030 283051 602000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t)) . -15653) (undo-tree-id1348 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t)) . -15654) (undo-tree-id1349 . -1) 15655) nil (25672 62030 283048 266000) 0 nil])
([nil nil ((15653 . 15661)) nil (25672 62030 283028 951000) 0 nil])
([nil nil ((#("disabled" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t tag-attr-beg 0) 1 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-chip" tag-attr-end 0 tag-attr t)) . 15652) (undo-tree-id1356 . -8) (undo-tree-id1357 . -8) (t 25672 62030 387628 218000)) nil (25672 62079 325867 38000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-chip")) . -15651) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) 15652) nil (25672 62079 325858 514000) 0 nil])
([nil nil ((15659 . 15669)) nil (25672 62079 325848 506000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . -15662) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) 15663) nil (25672 62079 325843 613000) 0 nil])
([nil nil ((15662 . 15663)) nil (25672 62079 325810 643000) 0 nil])
([nil nil ((11946 . 11947) (t 25672 62079 463622 560000)) nil (25672 62155 658251 419000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11960 . 11961) (nil tag-attr t 11947 . 11961) (nil tag-name "v-select" 11947 . 11961) (nil tag-type start 11947 . 11961) (nil font-lock-face web-mode-html-attr-value-face 11947 . 11961) (11947 . 11961)) nil (25672 62155 658244 195000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11951) (undo-tree-id1366 . -1) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11952) (undo-tree-id1367 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11953) (undo-tree-id1368 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11954) (undo-tree-id1369 . -1) (#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11955) (undo-tree-id1370 . -1) 11956 (t 25672 62155 763643 538000)) nil (25672 62170 831916 635000) 0 nil])
([nil nil ((#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . 11951) (#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . 11951) (#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . 11951) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . 11951)) nil (25672 62170 831906 736000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t)) . -11950) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) 11951) nil (25672 62170 831900 631000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-select" tag-attr t rear-nonsticky t)) . -11950) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) 11951 (t 25672 62170 939651 656000)) nil (25672 62180 276884 290000) 0 nil])
([nil nil ((11950 . 11951)) nil (25672 62180 276819 102000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -26598) (undo-tree-id1391 . -1) 26599 (t 25672 62180 387657 331000)) nil (25672 62346 788986 97000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -26590) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 26591) nil (25672 62346 788978 986000) 0 nil])
([nil nil ((15657 . 15671) (t 25672 62346 891826 252000)) nil (25672 62526 333759 432000) 0 nil])
([nil nil ((15669 . 15676)) nil (25672 62526 333757 789000) 0 nil])
([nil nil ((15676 . 15678)) nil (25672 62526 333756 623000) 0 nil])
([nil nil ((15715 . 15717) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . -15715) (15715 . 15716)) nil (25672 62526 333755 61000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . 15716)) nil (25672 62526 333752 783000) 0 nil])
([nil nil ((15722 . 15723)) nil (25672 62526 333751 528000) 0 nil])
([nil nil ((15716 . 15721)) nil (25672 62526 333750 302000) 0 nil])
([nil nil ((15721 . 15723)) nil (25672 62526 333749 173000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t)) . -15676) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (#("d" 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t)) . -15677) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) 15678) nil (25672 62526 333745 949000) 0 nil])
([nil nil ((15676 . 15681)) nil (25672 62526 333724 551000) 0 nil])
([nil nil ((#("index" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . 15719) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (t 25672 62526 440125 158000)) nil (25672 62546 980848 493000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . 15719) (#("," 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-chip" tag-attr t)) . 15719)) nil (25672 62546 980836 230000) 0 nil])
([nil nil ((15725 . 15727)) nil (25672 62546 980834 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15731 . 15732) (nil tag-attr t 15727 . 15732) (nil tag-name "v-chip" 15727 . 15732) (nil tag-type start 15727 . 15732) (nil font-lock-face web-mode-html-attr-value-face 15727 . 15732) (15727 . 15732)) nil (25672 62546 980826 953000) 0 nil])
([nil nil ((15359 . 15361) (#("(" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -15359) (15359 . 15360) (t 25672 62547 88165 610000)) nil (25672 62579 5455 667000) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 15360)) nil (25672 62579 5453 623000) 0 nil])
([nil nil ((15387 . 15388)) nil (25672 62579 5452 768000) 0 nil])
([nil nil ((15387 . 15394)) nil (25672 62579 5451 792000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15376 . 15377) (nil block-side t 15376 . 15377) (nil block-end t 15376 . 15377) (nil block-token delimiter-end 15376 . 15377) (nil tag-attr t 15376 . 15377) (nil tag-attr-end 10 15376 . 15377) (nil tag-name "v-row" 15376 . 15377) (nil tag-type start 15376 . 15377) (nil font-lock-face web-mode-block-delimiter-face 15376 . 15377) (nil block-side t 15375 . 15376) (nil tag-attr t 15375 . 15376) (nil tag-name "v-row" 15375 . 15376) (nil tag-type start 15375 . 15376) (nil face web-mode-variable-name-face 15375 . 15376) (nil block-side t 15374 . 15375) (nil tag-attr t 15374 . 15375) (nil tag-name "v-row" 15374 . 15375) (nil tag-type start 15374 . 15375) (nil face web-mode-variable-name-face 15374 . 15375) (nil block-side t 15373 . 15374) (nil tag-attr t 15373 . 15374) (nil tag-name "v-row" 15373 . 15374) (nil tag-type start 15373 . 15374) (nil face web-mode-variable-name-face 15373 . 15374) (nil block-side t 15372 . 15373) (nil tag-attr t 15372 . 15373) (nil tag-name "v-row" 15372 . 15373) (nil tag-type start 15372 . 15373) (nil face web-mode-variable-name-face 15372 . 15373) (nil block-side t 15371 . 15372) (nil tag-attr t 15371 . 15372) (nil tag-name "v-row" 15371 . 15372) (nil tag-type start 15371 . 15372) (nil face web-mode-variable-name-face 15371 . 15372) (nil block-side t 15370 . 15371) (nil tag-attr t 15370 . 15371) (nil tag-name "v-row" 15370 . 15371) (nil tag-type start 15370 . 15371) (nil block-side t 15369 . 15370) (nil tag-attr t 15369 . 15370) (nil tag-name "v-row" 15369 . 15370) (nil tag-type start 15369 . 15370) (nil face web-mode-variable-name-face 15369 . 15370) (nil block-side t 15368 . 15369) (nil tag-attr t 15368 . 15369) (nil tag-name "v-row" 15368 . 15369) (nil tag-type start 15368 . 15369) (nil face web-mode-variable-name-face 15368 . 15369) (nil block-side t 15367 . 15368) (nil tag-attr t 15367 . 15368) (nil tag-name "v-row" 15367 . 15368) (nil tag-type start 15367 . 15368) (nil face web-mode-variable-name-face 15367 . 15368) (nil block-side t 15366 . 15367) (nil tag-attr t 15366 . 15367) (nil tag-name "v-row" 15366 . 15367) (nil tag-type start 15366 . 15367) (nil face web-mode-variable-name-face 15366 . 15367) (nil block-side t 15365 . 15366) (nil tag-attr t 15365 . 15366) (nil tag-name "v-row" 15365 . 15366) (nil tag-type start 15365 . 15366) (nil face web-mode-variable-name-face 15365 . 15366) (nil block-side t 15364 . 15365) (nil tag-attr t 15364 . 15365) (nil tag-name "v-row" 15364 . 15365) (nil tag-type start 15364 . 15365) (nil face web-mode-variable-name-face 15364 . 15365) (nil block-side t 15363 . 15364) (nil block-token delimiter-beg 15363 . 15364) (nil tag-attr t 15363 . 15364) (nil tag-name "v-row" 15363 . 15364) (nil tag-type start 15363 . 15364) (nil font-lock-face web-mode-block-delimiter-face 15363 . 15364) (nil block-side t 15362 . 15363) (nil block-token delimiter-beg 15362 . 15363) (nil tag-attr t 15362 . 15363) (nil tag-name "v-row" 15362 . 15363) (nil tag-type start 15362 . 15363) (nil font-lock-face web-mode-block-delimiter-face 15362 . 15363) (nil block-side t 15361 . 15362) (nil block-token delimiter-beg 15361 . 15362) (nil tag-attr t 15361 . 15362) (nil tag-name "v-row" 15361 . 15362) (nil tag-type start 15361 . 15362) (nil font-lock-face web-mode-block-delimiter-face 15361 . 15362) (nil block-side t 15360 . 15361) (nil block-token delimiter-beg 15360 . 15361) (nil tag-attr t 15360 . 15361) (nil tag-name "v-row" 15360 . 15361) (nil tag-type start 15360 . 15361) (nil font-lock-face web-mode-block-delimiter-face 15360 . 15361) (nil block-side t 15359 . 15360) (nil block-token delimiter-beg 15359 . 15360) (nil tag-attr t 15359 . 15360) (nil tag-name "v-row" 15359 . 15360) (nil tag-type start 15359 . 15360) (nil font-lock-face web-mode-block-delimiter-face 15359 . 15360) (nil block-beg 0 15358 . 15359) (nil block-controls 0 15358 . 15359) (nil block-side t 15358 . 15359) (nil block-token delimiter-beg 15358 . 15359) (nil tag-attr t 15358 . 15359) (nil tag-name "v-row" 15358 . 15359) (nil tag-type start 15358 . 15359) (nil font-lock-face web-mode-block-delimiter-face 15358 . 15359) (nil tag-attr t 15353 . 15358) (nil tag-name "v-row" 15353 . 15358) (nil tag-type start 15353 . 15358) (nil font-lock-face web-mode-html-attr-engine-face 15353 . 15358) (nil tag-attr-beg 2 15352 . 15353) (nil tag-attr t 15352 . 15353) (nil tag-name "v-row" 15352 . 15353) (nil tag-type start 15352 . 15353) (nil font-lock-face web-mode-html-attr-engine-face 15352 . 15353) (15352 . 15377)) nil (25672 62579 5445 183000) 0 nil])
([nil nil ((15377 . 15378)) nil (25672 62579 5421 74000) 0 nil])
([nil nil ((15711 . 15712)) nil (25672 62579 5419 393000) 0 nil])
([nil nil ((15763 . 15764)) nil (25672 62579 5412 303000) 0 nil])
([nil nil ((#("filter." 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-chip" tag-attr t block-side t) 6 7 (tag-type start tag-name "v-chip" tag-attr t block-side t)) . 15704) (undo-tree-id1402 . -7) (undo-tree-id1403 . -7) (undo-tree-id1404 . -7) (t 25672 62579 112230 490000)) nil (25672 62612 89299 901000) 0 nil])
([nil nil ((#("filter." 0 1 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "v-row" tag-attr t block-side t) 6 7 (tag-type start tag-name "v-row" tag-attr t block-side t)) . 15364) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7)) nil (25672 62612 89290 390000) 0 nil])
([nil nil ((2157 . 2168) (t 25672 62612 200300 72000)) nil (25673 8515 950857 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2174 . 2175) (nil tag-attr t 2174 . 2175) (nil tag-attr-end 0 2174 . 2175) (nil tag-name "v-data-table" 2174 . 2175) (nil tag-type start 2174 . 2175) (nil font-lock-face web-mode-html-attr-name-face 2174 . 2175) (nil tag-attr t 2169 . 2174) (nil tag-name "v-data-table" 2169 . 2174) (nil tag-type start 2169 . 2174) (nil font-lock-face web-mode-html-attr-name-face 2169 . 2174) (nil tag-attr-beg 0 2168 . 2169) (nil tag-attr t 2168 . 2169) (nil tag-name "v-data-table" 2168 . 2169) (nil tag-type start 2168 . 2169) (nil font-lock-face web-mode-html-attr-name-face 2168 . 2169) (2168 . 2175)) nil (25673 8515 950849 323000) 0 nil])
([nil nil ((2168 . 2169) (t 25673 8516 46639 9000)) nil (25673 8612 14677 715000) 0 nil])
([nil nil ((2176 . 2179)) nil (25673 8612 14676 570000) 0 nil])
([nil nil ((19598 . 19607)) nil (25673 8612 14675 547000) 0 nil])
([nil nil ((19607 . 19628)) nil (25673 8612 14674 620000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19622) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("=" 0 1 (part-side javascript)) . -19623) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (part-side javascript)) . -19624) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (part-side javascript)) . -19625) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("r" 0 1 (part-side javascript)) . -19626) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("u" 0 1 (part-side javascript)) . -19627) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 19628) nil (25673 8612 14672 282000) 0 nil])
([nil nil ((19622 . 19626)) nil (25673 8612 14658 645000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -19622) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (part-side javascript)) . -19623) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (part-side javascript)) . -19624) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (part-side javascript)) . -19625) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 19626) nil (25673 8612 14656 614000) 0 nil])
([nil nil ((19622 . 19626)) nil (25673 8612 14645 962000) 0 nil])
([nil nil ((19626 . 19630)) nil (25673 8612 14645 110000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19629) (undo-tree-id11 . -1) 19630) nil (25673 8612 14644 37000) 0 nil])
([nil nil ((19624 . 19625)) nil (25673 8612 14642 31000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19624) (undo-tree-id10 . -1) 19625) nil (25673 8612 14640 890000) 0 nil])
([nil nil ((19623 . 19624)) nil (25673 8612 14638 757000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 19628)) nil (25673 8612 14637 741000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2192 . 2193) (nil block-side t 2192 . 2193) (nil tag-attr t 2192 . 2193) (nil tag-name "v-data-table" 2192 . 2193) (nil tag-type start 2192 . 2193) (nil face web-mode-variable-name-face 2192 . 2193) (nil block-side t 2191 . 2192) (nil tag-attr t 2191 . 2192) (nil tag-name "v-data-table" 2191 . 2192) (nil tag-type start 2191 . 2192) (nil face web-mode-variable-name-face 2191 . 2192) (nil block-side t 2190 . 2191) (nil tag-attr t 2190 . 2191) (nil tag-name "v-data-table" 2190 . 2191) (nil tag-type start 2190 . 2191) (nil face web-mode-variable-name-face 2190 . 2191) (nil block-side t 2189 . 2190) (nil tag-attr t 2189 . 2190) (nil tag-name "v-data-table" 2189 . 2190) (nil tag-type start 2189 . 2190) (nil face web-mode-variable-name-face 2189 . 2190) (nil block-side t 2188 . 2189) (nil tag-attr t 2188 . 2189) (nil tag-name "v-data-table" 2188 . 2189) (nil tag-type start 2188 . 2189) (nil face web-mode-variable-name-face 2188 . 2189) (nil block-side t 2187 . 2188) (nil tag-attr t 2187 . 2188) (nil tag-name "v-data-table" 2187 . 2188) (nil tag-type start 2187 . 2188) (nil face web-mode-variable-name-face 2187 . 2188) (nil block-side t 2186 . 2187) (nil tag-attr t 2186 . 2187) (nil tag-name "v-data-table" 2186 . 2187) (nil tag-type start 2186 . 2187) (nil face web-mode-variable-name-face 2186 . 2187) (nil block-side t 2185 . 2186) (nil tag-attr t 2185 . 2186) (nil tag-name "v-data-table" 2185 . 2186) (nil tag-type start 2185 . 2186) (nil face web-mode-variable-name-face 2185 . 2186) (nil block-side t 2184 . 2185) (nil tag-attr t 2184 . 2185) (nil tag-name "v-data-table" 2184 . 2185) (nil tag-type start 2184 . 2185) (nil face web-mode-variable-name-face 2184 . 2185) (nil block-side t 2183 . 2184) (nil tag-attr t 2183 . 2184) (nil tag-name "v-data-table" 2183 . 2184) (nil tag-type start 2183 . 2184) (nil face web-mode-variable-name-face 2183 . 2184) (nil block-side t 2182 . 2183) (nil tag-attr t 2182 . 2183) (nil tag-name "v-data-table" 2182 . 2183) (nil tag-type start 2182 . 2183) (nil face web-mode-variable-name-face 2182 . 2183) (nil block-side t 2181 . 2182) (nil tag-attr t 2181 . 2182) (nil tag-name "v-data-table" 2181 . 2182) (nil tag-type start 2181 . 2182) (nil face web-mode-variable-name-face 2181 . 2182) (nil block-side t 2180 . 2181) (nil tag-attr t 2180 . 2181) (nil tag-name "v-data-table" 2180 . 2181) (nil tag-type start 2180 . 2181) (nil face web-mode-variable-name-face 2180 . 2181) (nil block-side t 2179 . 2180) (nil tag-attr t 2179 . 2180) (nil tag-name "v-data-table" 2179 . 2180) (nil tag-type start 2179 . 2180) (nil face web-mode-variable-name-face 2179 . 2180) (nil block-side t 2178 . 2179) (nil tag-attr t 2178 . 2179) (nil tag-name "v-data-table" 2178 . 2179) (nil tag-type start 2178 . 2179) (nil face web-mode-variable-name-face 2178 . 2179) (2178 . 2193)) nil (25673 8612 14632 948000) 0 nil])
([nil nil ((25159 . 25168)) nil (25673 8612 14616 581000) 0 nil])
([nil nil ((25168 . 25173)) nil (25673 8612 14615 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25187 . 25188) (nil part-side javascript 25173 . 25188) (25173 . 25188)) nil (25673 8612 14614 649000) 0 nil])
([nil nil ((25188 . 25196)) nil (25673 8612 14613 326000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -25195) (undo-tree-id9 . -1) 25196) nil (25673 8612 14612 269000) 0 nil])
([nil nil ((27301 . 27314)) nil (25673 8612 14610 179000) 0 nil])
([nil nil ((27314 . 27323)) nil (25673 8612 14609 301000) 0 nil])
([nil nil ((27319 . 27334) (#("load" 0 4 (part-side javascript)) . -27319) (undo-tree-id7 . -4) (undo-tree-id8 . -4) 27323) nil (25673 8612 14607 964000) 0 nil])
([nil nil ((27334 . 27338)) nil (25673 8612 14604 585000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -27335) (undo-tree-id4 . -1) (#(" " 0 1 (part-side javascript)) . -27336) (undo-tree-id5 . -1) (#("f" 0 1 (part-side javascript)) . -27337) (undo-tree-id6 . -1) 27338) nil (25673 8612 14603 130000) 0 nil])
([nil nil ((27335 . 27336)) nil (25673 8612 14598 611000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -27335) (undo-tree-id3 . -1) 27336) nil (25673 8612 14597 505000) 0 nil])
([nil nil ((27335 . 27343)) nil (25673 8612 14595 198000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -27342) (undo-tree-id2 . -1) 27343) nil (25673 8612 14593 880000) 0 nil])
([nil nil ((27342 . 27344)) nil (25673 8612 14591 679000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -27343) (undo-tree-id1 . -1) 27344) nil (25673 8612 14590 420000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -27342) (undo-tree-id0 . -1) 27343) nil (25673 8612 14586 562000) 0 nil])
([nil nil ((27449 . 27462)) nil (25673 8612 14567 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27489 . 27490) (nil part-side javascript 27485 . 27490) (nil face web-mode-constant-face 27485 . 27490) (nil part-side javascript 27484 . 27485) (nil part-side javascript 27482 . 27484) (nil part-side javascript 27467 . 27482) (nil part-side javascript 27466 . 27467) (nil part-side javascript 27462 . 27466) (nil face web-mode-constant-face 27462 . 27466) (27462 . 27490)) nil (25673 8612 14560 798000) 0 nil])
([nil nil ((5267 . 5284) (t 25673 8612 130850 184000)) nil (25673 9471 754516 183000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5849 . 5850) (nil tag-name "v-btn" 5849 . 5850) (nil tag-type end 5849 . 5850) (nil tag-end t 5849 . 5850) (nil font-lock-face web-mode-html-tag-bracket-face 5849 . 5850) (nil tag-name "v-btn" 5844 . 5849) (nil tag-type end 5844 . 5849) (nil font-lock-face web-mode-html-tag-custom-face 5844 . 5849) (nil tag-name "v-btn" 5843 . 5844) (nil tag-type end 5843 . 5844) (nil font-lock-face web-mode-html-tag-bracket-face 5843 . 5844) (nil tag-name "v-btn" 5842 . 5843) (nil tag-type end 5842 . 5843) (nil tag-beg 22 5842 . 5843) (nil font-lock-face web-mode-html-tag-bracket-face 5842 . 5843) (nil tag-name "v-icon" 5824 . 5825) (nil tag-type end 5824 . 5825) (nil tag-end t 5824 . 5825) (nil font-lock-face web-mode-html-tag-bracket-face 5824 . 5825) (nil tag-name "v-icon" 5818 . 5824) (nil tag-type end 5818 . 5824) (nil font-lock-face web-mode-html-tag-custom-face 5818 . 5824) (nil tag-name "v-icon" 5817 . 5818) (nil tag-type end 5817 . 5818) (nil font-lock-face web-mode-html-tag-bracket-face 5817 . 5818) (nil tag-name "v-icon" 5816 . 5817) (nil tag-type end 5816 . 5817) (nil tag-beg 22 5816 . 5817) (nil font-lock-face web-mode-html-tag-bracket-face 5816 . 5817) (nil tag-name "v-icon" 5799 . 5800) (nil tag-type start 5799 . 5800) (nil tag-end t 5799 . 5800) (nil font-lock-face web-mode-html-tag-bracket-face 5799 . 5800) (nil tag-attr t 5798 . 5799) (nil tag-attr-end 0 5798 . 5799) (nil tag-name "v-icon" 5798 . 5799) (nil tag-type start 5798 . 5799) (nil font-lock-face web-mode-html-attr-name-face 5798 . 5799) (nil tag-attr t 5796 . 5798) (nil tag-name "v-icon" 5796 . 5798) (nil tag-type start 5796 . 5798) (nil font-lock-face web-mode-html-attr-name-face 5796 . 5798) (nil tag-attr-beg 0 5795 . 5796) (nil tag-attr t 5795 . 5796) (nil tag-name "v-icon" 5795 . 5796) (nil tag-type start 5795 . 5796) (nil font-lock-face web-mode-html-attr-name-face 5795 . 5796) (nil tag-name "v-icon" 5794 . 5795) (nil tag-type start 5794 . 5795) (nil tag-name "v-icon" 5788 . 5794) (nil tag-type start 5788 . 5794) (nil font-lock-face web-mode-html-tag-custom-face 5788 . 5794) (nil tag-name "v-icon" 5787 . 5788) (nil tag-type start 5787 . 5788) (nil tag-beg 19 5787 . 5788) (nil font-lock-face web-mode-html-tag-bracket-face 5787 . 5788) (nil tag-name "v-btn" 5767 . 5768) (nil tag-type start 5767 . 5768) (nil tag-end t 5767 . 5768) (nil font-lock-face web-mode-html-tag-bracket-face 5767 . 5768) (nil tag-name "v-btn" 5750 . 5767) (nil tag-type start 5750 . 5767) (nil block-side t 5749 . 5750) (nil block-end t 5749 . 5750) (nil block-token delimiter-end 5749 . 5750) (nil tag-attr t 5749 . 5750) (nil tag-attr-end 6 5749 . 5750) (nil tag-name "v-btn" 5749 . 5750) (nil tag-type start 5749 . 5750) (nil font-lock-face web-mode-block-delimiter-face 5749 . 5750) (nil block-side t 5727 . 5749) (nil tag-attr t 5727 . 5749) (nil tag-name "v-btn" 5727 . 5749) (nil tag-type start 5727 . 5749) (nil block-side t 5726 . 5727) (nil tag-attr t 5726 . 5727) (nil tag-name "v-btn" 5726 . 5727) (nil tag-type start 5726 . 5727) (nil face web-mode-variable-name-face 5726 . 5727) (nil block-side t 5725 . 5726) (nil tag-attr t 5725 . 5726) (nil tag-name "v-btn" 5725 . 5726) (nil tag-type start 5725 . 5726) (nil face web-mode-variable-name-face 5725 . 5726) (nil block-side t 5724 . 5725) (nil tag-attr t 5724 . 5725) (nil tag-name "v-btn" 5724 . 5725) (nil tag-type start 5724 . 5725) (nil block-side t 5723 . 5724) (nil tag-attr t 5723 . 5724) (nil tag-name "v-btn" 5723 . 5724) (nil tag-type start 5723 . 5724) (nil face web-mode-variable-name-face 5723 . 5724) (nil block-side t 5722 . 5723) (nil tag-attr t 5722 . 5723) (nil tag-name "v-btn" 5722 . 5723) (nil tag-type start 5722 . 5723) (nil face web-mode-variable-name-face 5722 . 5723) (nil block-side t 5721 . 5722) (nil tag-attr t 5721 . 5722) (nil tag-name "v-btn" 5721 . 5722) (nil tag-type start 5721 . 5722) (nil face web-mode-variable-name-face 5721 . 5722) (nil block-side t 5720 . 5721) (nil tag-attr t 5720 . 5721) (nil tag-name "v-btn" 5720 . 5721) (nil tag-type start 5720 . 5721) (nil face web-mode-variable-name-face 5720 . 5721) (nil block-side t 5719 . 5720) (nil tag-attr t 5719 . 5720) (nil tag-name "v-btn" 5719 . 5720) (nil tag-type start 5719 . 5720) (nil face web-mode-variable-name-face 5719 . 5720) (nil block-side t 5718 . 5719) (nil tag-attr t 5718 . 5719) (nil tag-name "v-btn" 5718 . 5719) (nil tag-type start 5718 . 5719) (nil face web-mode-variable-name-face 5718 . 5719) (nil block-side t 5716 . 5718) (nil tag-attr t 5716 . 5718) (nil tag-name "v-btn" 5716 . 5718) (nil tag-type start 5716 . 5718) (nil block-side t 5715 . 5716) (nil tag-attr t 5715 . 5716) (nil tag-name "v-btn" 5715 . 5716) (nil tag-type start 5715 . 5716) (nil face web-mode-variable-name-face 5715 . 5716) (nil block-side t 5714 . 5715) (nil tag-attr t 5714 . 5715) (nil tag-name "v-btn" 5714 . 5715) (nil tag-type start 5714 . 5715) (nil face web-mode-variable-name-face 5714 . 5715) (nil block-side t 5713 . 5714) (nil tag-attr t 5713 . 5714) (nil tag-name "v-btn" 5713 . 5714) (nil tag-type start 5713 . 5714) (nil face web-mode-variable-name-face 5713 . 5714) (nil block-side t 5712 . 5713) (nil tag-attr t 5712 . 5713) (nil tag-name "v-btn" 5712 . 5713) (nil tag-type start 5712 . 5713) (nil face web-mode-variable-name-face 5712 . 5713) (nil block-side t 5709 . 5712) (nil tag-attr t 5709 . 5712) (nil tag-name "v-btn" 5709 . 5712) (nil tag-type start 5709 . 5712) (nil block-side t 5708 . 5709) (nil tag-attr t 5708 . 5709) (nil tag-name "v-btn" 5708 . 5709) (nil tag-type start 5708 . 5709) (nil face web-mode-variable-name-face 5708 . 5709) (nil block-side t 5707 . 5708) (nil tag-attr t 5707 . 5708) (nil tag-name "v-btn" 5707 . 5708) (nil tag-type start 5707 . 5708) (nil face web-mode-variable-name-face 5707 . 5708) (nil block-side t 5706 . 5707) (nil tag-attr t 5706 . 5707) (nil tag-name "v-btn" 5706 . 5707) (nil tag-type start 5706 . 5707) (nil face web-mode-variable-name-face 5706 . 5707) (nil block-side t 5705 . 5706) (nil tag-attr t 5705 . 5706) (nil tag-name "v-btn" 5705 . 5706) (nil tag-type start 5705 . 5706) (nil face web-mode-variable-name-face 5705 . 5706) (nil block-side t 5704 . 5705) (nil tag-attr t 5704 . 5705) (nil tag-name "v-btn" 5704 . 5705) (nil tag-type start 5704 . 5705) (nil face web-mode-variable-name-face 5704 . 5705) (nil block-side t 5703 . 5704) (nil tag-attr t 5703 . 5704) (nil tag-name "v-btn" 5703 . 5704) (nil tag-type start 5703 . 5704) (nil face web-mode-variable-name-face 5703 . 5704) (nil block-side t 5702 . 5703) (nil tag-attr t 5702 . 5703) (nil tag-name "v-btn" 5702 . 5703) (nil tag-type start 5702 . 5703) (nil face web-mode-variable-name-face 5702 . 5703) (nil block-side t 5701 . 5702) (nil tag-attr t 5701 . 5702) (nil tag-name "v-btn" 5701 . 5702) (nil tag-type start 5701 . 5702) (nil face web-mode-variable-name-face 5701 . 5702) (nil block-side t 5700 . 5701) (nil tag-attr t 5700 . 5701) (nil tag-name "v-btn" 5700 . 5701) (nil tag-type start 5700 . 5701) (nil face web-mode-variable-name-face 5700 . 5701) (nil block-side t 5699 . 5700) (nil tag-attr t 5699 . 5700) (nil tag-name "v-btn" 5699 . 5700) (nil tag-type start 5699 . 5700) (nil face web-mode-variable-name-face 5699 . 5700) (nil block-side t 5698 . 5699) (nil tag-attr t 5698 . 5699) (nil tag-name "v-btn" 5698 . 5699) (nil tag-type start 5698 . 5699) (nil face web-mode-variable-name-face 5698 . 5699) (nil block-side t 5697 . 5698) (nil tag-attr t 5697 . 5698) (nil tag-name "v-btn" 5697 . 5698) (nil tag-type start 5697 . 5698) (nil face web-mode-variable-name-face 5697 . 5698) (nil block-side t 5673 . 5697) (nil tag-attr t 5673 . 5697) (nil tag-name "v-btn" 5673 . 5697) (nil tag-type start 5673 . 5697) (nil block-side t 5672 . 5673) (nil tag-attr t 5672 . 5673) (nil tag-name "v-btn" 5672 . 5673) (nil tag-type start 5672 . 5673) (nil face web-mode-variable-name-face 5672 . 5673) (nil block-side t 5671 . 5672) (nil tag-attr t 5671 . 5672) (nil tag-name "v-btn" 5671 . 5672) (nil tag-type start 5671 . 5672) (nil face web-mode-variable-name-face 5671 . 5672) (nil block-side t 5670 . 5671) (nil tag-attr t 5670 . 5671) (nil tag-name "v-btn" 5670 . 5671) (nil tag-type start 5670 . 5671) (nil block-side t 5669 . 5670) (nil tag-attr t 5669 . 5670) (nil tag-name "v-btn" 5669 . 5670) (nil tag-type start 5669 . 5670) (nil face web-mode-variable-name-face 5669 . 5670) (nil block-side t 5668 . 5669) (nil tag-attr t 5668 . 5669) (nil tag-name "v-btn" 5668 . 5669) (nil tag-type start 5668 . 5669) (nil face web-mode-variable-name-face 5668 . 5669) (nil block-side t 5667 . 5668) (nil tag-attr t 5667 . 5668) (nil tag-name "v-btn" 5667 . 5668) (nil tag-type start 5667 . 5668) (nil face web-mode-variable-name-face 5667 . 5668) (nil block-side t 5666 . 5667) (nil tag-attr t 5666 . 5667) (nil tag-name "v-btn" 5666 . 5667) (nil tag-type start 5666 . 5667) (nil face web-mode-variable-name-face 5666 . 5667) (nil block-side t 5664 . 5666) (nil tag-attr t 5664 . 5666) (nil tag-name "v-btn" 5664 . 5666) (nil tag-type start 5664 . 5666) (nil block-side t 5663 . 5664) (nil tag-attr t 5663 . 5664) (nil tag-name "v-btn" 5663 . 5664) (nil tag-type start 5663 . 5664) (nil face web-mode-variable-name-face 5663 . 5664) (nil block-side t 5662 . 5663) (nil tag-attr t 5662 . 5663) (nil tag-name "v-btn" 5662 . 5663) (nil tag-type start 5662 . 5663) (nil face web-mode-variable-name-face 5662 . 5663) (nil block-side t 5661 . 5662) (nil tag-attr t 5661 . 5662) (nil tag-name "v-btn" 5661 . 5662) (nil tag-type start 5661 . 5662) (nil face web-mode-variable-name-face 5661 . 5662) (nil block-side t 5660 . 5661) (nil tag-attr t 5660 . 5661) (nil tag-name "v-btn" 5660 . 5661) (nil tag-type start 5660 . 5661) (nil face web-mode-variable-name-face 5660 . 5661) (nil block-side t 5657 . 5660) (nil tag-attr t 5657 . 5660) (nil tag-name "v-btn" 5657 . 5660) (nil tag-type start 5657 . 5660) (nil block-side t 5656 . 5657) (nil tag-attr t 5656 . 5657) (nil tag-name "v-btn" 5656 . 5657) (nil tag-type start 5656 . 5657) (nil face web-mode-variable-name-face 5656 . 5657) (nil block-side t 5655 . 5656) (nil tag-attr t 5655 . 5656) (nil tag-name "v-btn" 5655 . 5656) (nil tag-type start 5655 . 5656) (nil face web-mode-variable-name-face 5655 . 5656) (nil block-side t 5654 . 5655) (nil tag-attr t 5654 . 5655) (nil tag-name "v-btn" 5654 . 5655) (nil tag-type start 5654 . 5655) (nil face web-mode-variable-name-face 5654 . 5655) (nil block-side t 5653 . 5654) (nil tag-attr t 5653 . 5654) (nil tag-name "v-btn" 5653 . 5654) (nil tag-type start 5653 . 5654) (nil face web-mode-variable-name-face 5653 . 5654) (nil block-side t 5652 . 5653) (nil tag-attr t 5652 . 5653) (nil tag-name "v-btn" 5652 . 5653) (nil tag-type start 5652 . 5653) (nil face web-mode-variable-name-face 5652 . 5653) (nil block-side t 5651 . 5652) (nil tag-attr t 5651 . 5652) (nil tag-name "v-btn" 5651 . 5652) (nil tag-type start 5651 . 5652) (nil face web-mode-variable-name-face 5651 . 5652) (nil block-side t 5650 . 5651) (nil tag-attr t 5650 . 5651) (nil tag-name "v-btn" 5650 . 5651) (nil tag-type start 5650 . 5651) (nil face web-mode-variable-name-face 5650 . 5651) (nil block-side t 5649 . 5650) (nil tag-attr t 5649 . 5650) (nil tag-name "v-btn" 5649 . 5650) (nil tag-type start 5649 . 5650) (nil face web-mode-variable-name-face 5649 . 5650) (nil block-side t 5648 . 5649) (nil tag-attr t 5648 . 5649) (nil tag-name "v-btn" 5648 . 5649) (nil tag-type start 5648 . 5649) (nil face web-mode-variable-name-face 5648 . 5649) (nil block-side t 5647 . 5648) (nil tag-attr t 5647 . 5648) (nil tag-name "v-btn" 5647 . 5648) (nil tag-type start 5647 . 5648) (nil face web-mode-variable-name-face 5647 . 5648) (nil block-side t 5625 . 5647) (nil tag-attr t 5625 . 5647) (nil tag-name "v-btn" 5625 . 5647) (nil tag-type start 5625 . 5647) (nil block-side t 5624 . 5625) (nil tag-attr t 5624 . 5625) (nil tag-name "v-btn" 5624 . 5625) (nil tag-type start 5624 . 5625) (nil face web-mode-variable-name-face 5624 . 5625) (nil block-side t 5623 . 5624) (nil tag-attr t 5623 . 5624) (nil tag-name "v-btn" 5623 . 5624) (nil tag-type start 5623 . 5624) (nil face web-mode-variable-name-face 5623 . 5624) (nil block-side t 5622 . 5623) (nil tag-attr t 5622 . 5623) (nil tag-name "v-btn" 5622 . 5623) (nil tag-type start 5622 . 5623) (nil face web-mode-variable-name-face 5622 . 5623) (nil block-side t 5621 . 5622) (nil tag-attr t 5621 . 5622) (nil tag-name "v-btn" 5621 . 5622) (nil tag-type start 5621 . 5622) (nil face web-mode-variable-name-face 5621 . 5622) (nil block-side t 5618 . 5621) (nil tag-attr t 5618 . 5621) (nil tag-name "v-btn" 5618 . 5621) (nil tag-type start 5618 . 5621) (nil block-side t 5617 . 5618) (nil tag-attr t 5617 . 5618) (nil tag-name "v-btn" 5617 . 5618) (nil tag-type start 5617 . 5618) (nil face web-mode-variable-name-face 5617 . 5618) (nil block-side t 5616 . 5617) (nil tag-attr t 5616 . 5617) (nil tag-name "v-btn" 5616 . 5617) (nil tag-type start 5616 . 5617) (nil face web-mode-variable-name-face 5616 . 5617) (nil block-side t 5615 . 5616) (nil tag-attr t 5615 . 5616) (nil tag-name "v-btn" 5615 . 5616) (nil tag-type start 5615 . 5616) (nil face web-mode-variable-name-face 5615 . 5616) (nil block-side t 5614 . 5615) (nil tag-attr t 5614 . 5615) (nil tag-name "v-btn" 5614 . 5615) (nil tag-type start 5614 . 5615) (nil face web-mode-variable-name-face 5614 . 5615) (nil block-side t 5613 . 5614) (nil tag-attr t 5613 . 5614) (nil tag-name "v-btn" 5613 . 5614) (nil tag-type start 5613 . 5614) (nil face web-mode-variable-name-face 5613 . 5614) (nil block-side t 5612 . 5613) (nil tag-attr t 5612 . 5613) (nil tag-name "v-btn" 5612 . 5613) (nil tag-type start 5612 . 5613) (nil face web-mode-variable-name-face 5612 . 5613) (nil block-side t 5611 . 5612) (nil tag-attr t 5611 . 5612) (nil tag-name "v-btn" 5611 . 5612) (nil tag-type start 5611 . 5612) (nil face web-mode-variable-name-face 5611 . 5612) (nil block-side t 5610 . 5611) (nil tag-attr t 5610 . 5611) (nil tag-name "v-btn" 5610 . 5611) (nil tag-type start 5610 . 5611) (nil face web-mode-variable-name-face 5610 . 5611) (nil block-side t 5609 . 5610) (nil tag-attr t 5609 . 5610) (nil tag-name "v-btn" 5609 . 5610) (nil tag-type start 5609 . 5610) (nil face web-mode-variable-name-face 5609 . 5610) (nil block-side t 5608 . 5609) (nil tag-attr t 5608 . 5609) (nil tag-name "v-btn" 5608 . 5609) (nil tag-type start 5608 . 5609) (nil face web-mode-variable-name-face 5608 . 5609) (nil block-side t 5584 . 5608) (nil tag-attr t 5584 . 5608) (nil tag-name "v-btn" 5584 . 5608) (nil tag-type start 5584 . 5608) (nil block-side t 5583 . 5584) (nil tag-attr t 5583 . 5584) (nil tag-name "v-btn" 5583 . 5584) (nil tag-type start 5583 . 5584) (nil face web-mode-variable-name-face 5583 . 5584) (nil block-side t 5582 . 5583) (nil tag-attr t 5582 . 5583) (nil tag-name "v-btn" 5582 . 5583) (nil tag-type start 5582 . 5583) (nil face web-mode-variable-name-face 5582 . 5583) (nil block-side t 5581 . 5582) (nil tag-attr t 5581 . 5582) (nil tag-name "v-btn" 5581 . 5582) (nil tag-type start 5581 . 5582) (nil face web-mode-variable-name-face 5581 . 5582) (nil block-side t 5580 . 5581) (nil tag-attr t 5580 . 5581) (nil tag-name "v-btn" 5580 . 5581) (nil tag-type start 5580 . 5581) (nil face web-mode-variable-name-face 5580 . 5581) (nil block-side t 5578 . 5580) (nil tag-attr t 5578 . 5580) (nil tag-name "v-btn" 5578 . 5580) (nil tag-type start 5578 . 5580) (nil block-side t 5577 . 5578) (nil tag-attr t 5577 . 5578) (nil tag-name "v-btn" 5577 . 5578) (nil tag-type start 5577 . 5578) (nil face web-mode-variable-name-face 5577 . 5578) (nil block-side t 5576 . 5577) (nil tag-attr t 5576 . 5577) (nil tag-name "v-btn" 5576 . 5577) (nil tag-type start 5576 . 5577) (nil face web-mode-variable-name-face 5576 . 5577) (nil block-side t 5575 . 5576) (nil tag-attr t 5575 . 5576) (nil tag-name "v-btn" 5575 . 5576) (nil tag-type start 5575 . 5576) (nil face web-mode-variable-name-face 5575 . 5576) (nil block-side t 5574 . 5575) (nil tag-attr t 5574 . 5575) (nil tag-name "v-btn" 5574 . 5575) (nil tag-type start 5574 . 5575) (nil face web-mode-variable-name-face 5574 . 5575) (nil block-side t 5570 . 5574) (nil tag-attr t 5570 . 5574) (nil tag-name "v-btn" 5570 . 5574) (nil tag-type start 5570 . 5574) (nil block-side t 5569 . 5570) (nil tag-attr t 5569 . 5570) (nil tag-name "v-btn" 5569 . 5570) (nil tag-type start 5569 . 5570) (nil face web-mode-variable-name-face 5569 . 5570) (nil block-side t 5568 . 5569) (nil tag-attr t 5568 . 5569) (nil tag-name "v-btn" 5568 . 5569) (nil tag-type start 5568 . 5569) (nil face web-mode-variable-name-face 5568 . 5569) (nil block-side t 5567 . 5568) (nil tag-attr t 5567 . 5568) (nil tag-name "v-btn" 5567 . 5568) (nil tag-type start 5567 . 5568) (nil face web-mode-variable-name-face 5567 . 5568) (nil block-side t 5566 . 5567) (nil tag-attr t 5566 . 5567) (nil tag-name "v-btn" 5566 . 5567) (nil tag-type start 5566 . 5567) (nil face web-mode-variable-name-face 5566 . 5567) (nil block-side t 5565 . 5566) (nil tag-attr t 5565 . 5566) (nil tag-name "v-btn" 5565 . 5566) (nil tag-type start 5565 . 5566) (nil face web-mode-variable-name-face 5565 . 5566) (nil block-side t 5564 . 5565) (nil tag-attr t 5564 . 5565) (nil tag-name "v-btn" 5564 . 5565) (nil tag-type start 5564 . 5565) (nil face web-mode-variable-name-face 5564 . 5565) (nil block-side t 5563 . 5564) (nil tag-attr t 5563 . 5564) (nil tag-name "v-btn" 5563 . 5564) (nil tag-type start 5563 . 5564) (nil face web-mode-variable-name-face 5563 . 5564) (nil block-side t 5562 . 5563) (nil tag-attr t 5562 . 5563) (nil tag-name "v-btn" 5562 . 5563) (nil tag-type start 5562 . 5563) (nil face web-mode-variable-name-face 5562 . 5563) (nil block-side t 5561 . 5562) (nil tag-attr t 5561 . 5562) (nil tag-name "v-btn" 5561 . 5562) (nil tag-type start 5561 . 5562) (nil face web-mode-variable-name-face 5561 . 5562) (nil block-side t 5560 . 5561) (nil tag-attr t 5560 . 5561) (nil tag-name "v-btn" 5560 . 5561) (nil tag-type start 5560 . 5561) (nil face web-mode-variable-name-face 5560 . 5561) (nil block-side t 5559 . 5560) (nil tag-attr t 5559 . 5560) (nil tag-name "v-btn" 5559 . 5560) (nil tag-type start 5559 . 5560) (nil face web-mode-variable-name-face 5559 . 5560) (nil block-side t 5558 . 5559) (nil tag-attr t 5558 . 5559) (nil tag-name "v-btn" 5558 . 5559) (nil tag-type start 5558 . 5559) (nil face web-mode-variable-name-face 5558 . 5559) (nil block-side t 5557 . 5558) (nil tag-attr t 5557 . 5558) (nil tag-name "v-btn" 5557 . 5558) (nil tag-type start 5557 . 5558) (nil face web-mode-variable-name-face 5557 . 5558) (nil block-side t 5556 . 5557) (nil tag-attr t 5556 . 5557) (nil tag-name "v-btn" 5556 . 5557) (nil tag-type start 5556 . 5557) (nil face web-mode-variable-name-face 5556 . 5557) (nil block-side t 5555 . 5556) (nil tag-attr t 5555 . 5556) (nil tag-name "v-btn" 5555 . 5556) (nil tag-type start 5555 . 5556) (nil face web-mode-variable-name-face 5555 . 5556) (nil block-side t 5531 . 5555) (nil tag-attr t 5531 . 5555) (nil tag-name "v-btn" 5531 . 5555) (nil tag-type start 5531 . 5555) (nil block-side t 5530 . 5531) (nil tag-attr t 5530 . 5531) (nil tag-name "v-btn" 5530 . 5531) (nil tag-type start 5530 . 5531) (nil face web-mode-variable-name-face 5530 . 5531) (nil block-side t 5529 . 5530) (nil tag-attr t 5529 . 5530) (nil tag-name "v-btn" 5529 . 5530) (nil tag-type start 5529 . 5530) (nil face web-mode-variable-name-face 5529 . 5530) (nil block-side t 5528 . 5529) (nil tag-attr t 5528 . 5529) (nil tag-name "v-btn" 5528 . 5529) (nil tag-type start 5528 . 5529) (nil face web-mode-variable-name-face 5528 . 5529) (nil block-side t 5527 . 5528) (nil tag-attr t 5527 . 5528) (nil tag-name "v-btn" 5527 . 5528) (nil tag-type start 5527 . 5528) (nil face web-mode-variable-name-face 5527 . 5528) (nil block-side t 5526 . 5527) (nil tag-attr t 5526 . 5527) (nil tag-name "v-btn" 5526 . 5527) (nil tag-type start 5526 . 5527) (nil face web-mode-variable-name-face 5526 . 5527) (nil block-side t 5525 . 5526) (nil tag-attr t 5525 . 5526) (nil tag-name "v-btn" 5525 . 5526) (nil tag-type start 5525 . 5526) (nil face web-mode-variable-name-face 5525 . 5526) (nil block-side t 5524 . 5525) (nil tag-attr t 5524 . 5525) (nil tag-name "v-btn" 5524 . 5525) (nil tag-type start 5524 . 5525) (nil face web-mode-variable-name-face 5524 . 5525) (nil block-side t 5523 . 5524) (nil tag-attr t 5523 . 5524) (nil tag-name "v-btn" 5523 . 5524) (nil tag-type start 5523 . 5524) (nil face web-mode-variable-name-face 5523 . 5524) (nil block-side t 5522 . 5523) (nil tag-attr t 5522 . 5523) (nil tag-name "v-btn" 5522 . 5523) (nil tag-type start 5522 . 5523) (nil face web-mode-variable-name-face 5522 . 5523) (nil block-side t 5521 . 5522) (nil tag-attr t 5521 . 5522) (nil tag-name "v-btn" 5521 . 5522) (nil tag-type start 5521 . 5522) (nil face web-mode-variable-name-face 5521 . 5522) (nil block-side t 5520 . 5521) (nil tag-attr t 5520 . 5521) (nil tag-name "v-btn" 5520 . 5521) (nil tag-type start 5520 . 5521) (nil face web-mode-variable-name-face 5520 . 5521) (nil block-side t 5519 . 5520) (nil tag-attr t 5519 . 5520) (nil tag-name "v-btn" 5519 . 5520) (nil tag-type start 5519 . 5520) (nil block-side t 5518 . 5519) (nil tag-attr t 5518 . 5519) (nil tag-name "v-btn" 5518 . 5519) (nil tag-type start 5518 . 5519) (nil face web-mode-variable-name-face 5518 . 5519) (nil block-side t 5517 . 5518) (nil tag-attr t 5517 . 5518) (nil tag-name "v-btn" 5517 . 5518) (nil tag-type start 5517 . 5518) (nil face web-mode-variable-name-face 5517 . 5518) (nil block-side t 5516 . 5517) (nil tag-attr t 5516 . 5517) (nil tag-name "v-btn" 5516 . 5517) (nil tag-type start 5516 . 5517) (nil face web-mode-variable-name-face 5516 . 5517) (nil block-side t 5515 . 5516) (nil tag-attr t 5515 . 5516) (nil tag-name "v-btn" 5515 . 5516) (nil tag-type start 5515 . 5516) (nil face web-mode-variable-name-face 5515 . 5516) (nil block-side t 5514 . 5515) (nil tag-attr t 5514 . 5515) (nil tag-name "v-btn" 5514 . 5515) (nil tag-type start 5514 . 5515) (nil face web-mode-variable-name-face 5514 . 5515) (nil block-side t 5513 . 5514) (nil tag-attr t 5513 . 5514) (nil tag-name "v-btn" 5513 . 5514) (nil tag-type start 5513 . 5514) (nil face web-mode-variable-name-face 5513 . 5514) (nil block-side t 5511 . 5513) (nil tag-attr t 5511 . 5513) (nil tag-name "v-btn" 5511 . 5513) (nil tag-type start 5511 . 5513) (nil block-side t 5510 . 5511) (nil tag-attr t 5510 . 5511) (nil tag-name "v-btn" 5510 . 5511) (nil tag-type start 5510 . 5511) (nil face web-mode-variable-name-face 5510 . 5511) (nil block-side t 5509 . 5510) (nil tag-attr t 5509 . 5510) (nil tag-name "v-btn" 5509 . 5510) (nil tag-type start 5509 . 5510) (nil face web-mode-variable-name-face 5509 . 5510) (nil block-side t 5508 . 5509) (nil tag-attr t 5508 . 5509) (nil tag-name "v-btn" 5508 . 5509) (nil tag-type start 5508 . 5509) (nil face web-mode-variable-name-face 5508 . 5509) (nil block-side t 5507 . 5508) (nil tag-attr t 5507 . 5508) (nil tag-name "v-btn" 5507 . 5508) (nil tag-type start 5507 . 5508) (nil face web-mode-variable-name-face 5507 . 5508) (nil block-side t 5504 . 5507) (nil tag-attr t 5504 . 5507) (nil tag-name "v-btn" 5504 . 5507) (nil tag-type start 5504 . 5507) (nil block-side t 5503 . 5504) (nil tag-attr t 5503 . 5504) (nil tag-name "v-btn" 5503 . 5504) (nil tag-type start 5503 . 5504) (nil face web-mode-variable-name-face 5503 . 5504) (nil block-side t 5502 . 5503) (nil tag-attr t 5502 . 5503) (nil tag-name "v-btn" 5502 . 5503) (nil tag-type start 5502 . 5503) (nil face web-mode-variable-name-face 5502 . 5503) (nil block-side t 5501 . 5502) (nil tag-attr t 5501 . 5502) (nil tag-name "v-btn" 5501 . 5502) (nil tag-type start 5501 . 5502) (nil face web-mode-variable-name-face 5501 . 5502) (nil block-side t 5500 . 5501) (nil tag-attr t 5500 . 5501) (nil tag-name "v-btn" 5500 . 5501) (nil tag-type start 5500 . 5501) (nil face web-mode-variable-name-face 5500 . 5501) (nil block-side t 5499 . 5500) (nil tag-attr t 5499 . 5500) (nil tag-name "v-btn" 5499 . 5500) (nil tag-type start 5499 . 5500) (nil face web-mode-variable-name-face 5499 . 5500) (nil block-side t 5498 . 5499) (nil tag-attr t 5498 . 5499) (nil tag-name "v-btn" 5498 . 5499) (nil tag-type start 5498 . 5499) (nil face web-mode-variable-name-face 5498 . 5499) (nil block-side t 5497 . 5498) (nil tag-attr t 5497 . 5498) (nil tag-name "v-btn" 5497 . 5498) (nil tag-type start 5497 . 5498) (nil face web-mode-variable-name-face 5497 . 5498) (nil block-side t 5496 . 5497) (nil tag-attr t 5496 . 5497) (nil tag-name "v-btn" 5496 . 5497) (nil tag-type start 5496 . 5497) (nil face web-mode-variable-name-face 5496 . 5497) (nil block-side t 5495 . 5496) (nil tag-attr t 5495 . 5496) (nil tag-name "v-btn" 5495 . 5496) (nil tag-type start 5495 . 5496) (nil face web-mode-variable-name-face 5495 . 5496) (nil block-side t 5494 . 5495) (nil tag-attr t 5494 . 5495) (nil tag-name "v-btn" 5494 . 5495) (nil tag-type start 5494 . 5495) (nil face web-mode-variable-name-face 5494 . 5495) (nil block-side t 5493 . 5494) (nil tag-attr t 5493 . 5494) (nil tag-name "v-btn" 5493 . 5494) (nil tag-type start 5493 . 5494) (nil face web-mode-variable-name-face 5493 . 5494) (nil block-side t 5492 . 5493) (nil tag-attr t 5492 . 5493) (nil tag-name "v-btn" 5492 . 5493) (nil tag-type start 5492 . 5493) (nil face web-mode-variable-name-face 5492 . 5493) (nil block-side t 5491 . 5492) (nil tag-attr t 5491 . 5492) (nil tag-name "v-btn" 5491 . 5492) (nil tag-type start 5491 . 5492) (nil face web-mode-variable-name-face 5491 . 5492) (nil block-side t 5490 . 5491) (nil tag-attr t 5490 . 5491) (nil tag-name "v-btn" 5490 . 5491) (nil tag-type start 5490 . 5491) (nil face web-mode-variable-name-face 5490 . 5491) (nil block-side t 5466 . 5490) (nil tag-attr t 5466 . 5490) (nil tag-name "v-btn" 5466 . 5490) (nil tag-type start 5466 . 5490) (nil block-side t 5465 . 5466) (nil tag-attr t 5465 . 5466) (nil tag-name "v-btn" 5465 . 5466) (nil tag-type start 5465 . 5466) (nil face web-mode-variable-name-face 5465 . 5466) (nil block-side t 5464 . 5465) (nil tag-attr t 5464 . 5465) (nil tag-name "v-btn" 5464 . 5465) (nil tag-type start 5464 . 5465) (nil face web-mode-variable-name-face 5464 . 5465) (nil block-side t 5463 . 5464) (nil tag-attr t 5463 . 5464) (nil tag-name "v-btn" 5463 . 5464) (nil tag-type start 5463 . 5464) (nil face web-mode-variable-name-face 5463 . 5464) (nil block-side t 5462 . 5463) (nil tag-attr t 5462 . 5463) (nil tag-name "v-btn" 5462 . 5463) (nil tag-type start 5462 . 5463) (nil face web-mode-variable-name-face 5462 . 5463) (nil block-side t 5461 . 5462) (nil tag-attr t 5461 . 5462) (nil tag-name "v-btn" 5461 . 5462) (nil tag-type start 5461 . 5462) (nil block-side t 5460 . 5461) (nil tag-attr t 5460 . 5461) (nil tag-name "v-btn" 5460 . 5461) (nil tag-type start 5460 . 5461) (nil face web-mode-variable-name-face 5460 . 5461) (nil block-side t 5459 . 5460) (nil tag-attr t 5459 . 5460) (nil tag-name "v-btn" 5459 . 5460) (nil tag-type start 5459 . 5460) (nil face web-mode-variable-name-face 5459 . 5460) (nil block-side t 5458 . 5459) (nil tag-attr t 5458 . 5459) (nil tag-name "v-btn" 5458 . 5459) (nil tag-type start 5458 . 5459) (nil face web-mode-variable-name-face 5458 . 5459) (nil block-side t 5457 . 5458) (nil tag-attr t 5457 . 5458) (nil tag-name "v-btn" 5457 . 5458) (nil tag-type start 5457 . 5458) (nil face web-mode-variable-name-face 5457 . 5458) (nil block-side t 5456 . 5457) (nil tag-attr t 5456 . 5457) (nil tag-name "v-btn" 5456 . 5457) (nil tag-type start 5456 . 5457) (nil face web-mode-variable-name-face 5456 . 5457) (nil block-side t 5455 . 5456) (nil tag-attr t 5455 . 5456) (nil tag-name "v-btn" 5455 . 5456) (nil tag-type start 5455 . 5456) (nil face web-mode-variable-name-face 5455 . 5456) (nil block-side t 5453 . 5455) (nil tag-attr t 5453 . 5455) (nil tag-name "v-btn" 5453 . 5455) (nil tag-type start 5453 . 5455) (nil block-side t 5452 . 5453) (nil tag-attr t 5452 . 5453) (nil tag-name "v-btn" 5452 . 5453) (nil tag-type start 5452 . 5453) (nil face web-mode-variable-name-face 5452 . 5453) (nil block-side t 5451 . 5452) (nil tag-attr t 5451 . 5452) (nil tag-name "v-btn" 5451 . 5452) (nil tag-type start 5451 . 5452) (nil face web-mode-variable-name-face 5451 . 5452) (nil block-side t 5450 . 5451) (nil tag-attr t 5450 . 5451) (nil tag-name "v-btn" 5450 . 5451) (nil tag-type start 5450 . 5451) (nil face web-mode-variable-name-face 5450 . 5451) (nil block-side t 5449 . 5450) (nil tag-attr t 5449 . 5450) (nil tag-name "v-btn" 5449 . 5450) (nil tag-type start 5449 . 5450) (nil face web-mode-variable-name-face 5449 . 5450) (nil block-side t 5446 . 5449) (nil tag-attr t 5446 . 5449) (nil tag-name "v-btn" 5446 . 5449) (nil tag-type start 5446 . 5449) (nil block-side t 5445 . 5446) (nil tag-attr t 5445 . 5446) (nil tag-name "v-btn" 5445 . 5446) (nil tag-type start 5445 . 5446) (nil face web-mode-variable-name-face 5445 . 5446) (nil block-side t 5444 . 5445) (nil tag-attr t 5444 . 5445) (nil tag-name "v-btn" 5444 . 5445) (nil tag-type start 5444 . 5445) (nil face web-mode-variable-name-face 5444 . 5445) (nil block-side t 5443 . 5444) (nil tag-attr t 5443 . 5444) (nil tag-name "v-btn" 5443 . 5444) (nil tag-type start 5443 . 5444) (nil face web-mode-variable-name-face 5443 . 5444) (nil block-side t 5442 . 5443) (nil tag-attr t 5442 . 5443) (nil tag-name "v-btn" 5442 . 5443) (nil tag-type start 5442 . 5443) (nil face web-mode-variable-name-face 5442 . 5443) (nil block-side t 5441 . 5442) (nil tag-attr t 5441 . 5442) (nil tag-name "v-btn" 5441 . 5442) (nil tag-type start 5441 . 5442) (nil face web-mode-variable-name-face 5441 . 5442) (nil block-side t 5440 . 5441) (nil tag-attr t 5440 . 5441) (nil tag-name "v-btn" 5440 . 5441) (nil tag-type start 5440 . 5441) (nil face web-mode-variable-name-face 5440 . 5441) (nil block-side t 5439 . 5440) (nil tag-attr t 5439 . 5440) (nil tag-name "v-btn" 5439 . 5440) (nil tag-type start 5439 . 5440) (nil face web-mode-variable-name-face 5439 . 5440) (nil block-side t 5438 . 5439) (nil tag-attr t 5438 . 5439) (nil tag-name "v-btn" 5438 . 5439) (nil tag-type start 5438 . 5439) (nil face web-mode-variable-name-face 5438 . 5439) (nil block-side t 5437 . 5438) (nil tag-attr t 5437 . 5438) (nil tag-name "v-btn" 5437 . 5438) (nil tag-type start 5437 . 5438) (nil face web-mode-variable-name-face 5437 . 5438) (nil block-side t 5436 . 5437) (nil tag-attr t 5436 . 5437) (nil tag-name "v-btn" 5436 . 5437) (nil tag-type start 5436 . 5437) (nil face web-mode-variable-name-face 5436 . 5437) (nil block-side t 5435 . 5436) (nil tag-attr t 5435 . 5436) (nil tag-name "v-btn" 5435 . 5436) (nil tag-type start 5435 . 5436) (nil face web-mode-variable-name-face 5435 . 5436) (nil block-side t 5434 . 5435) (nil tag-attr t 5434 . 5435) (nil tag-name "v-btn" 5434 . 5435) (nil tag-type start 5434 . 5435) (nil face web-mode-variable-name-face 5434 . 5435) (nil block-side t 5433 . 5434) (nil tag-attr t 5433 . 5434) (nil tag-name "v-btn" 5433 . 5434) (nil tag-type start 5433 . 5434) (nil face web-mode-variable-name-face 5433 . 5434) (nil block-side t 5432 . 5433) (nil tag-attr t 5432 . 5433) (nil tag-name "v-btn" 5432 . 5433) (nil tag-type start 5432 . 5433) (nil face web-mode-variable-name-face 5432 . 5433) (nil block-side t 5411 . 5432) (nil tag-attr t 5411 . 5432) (nil tag-name "v-btn" 5411 . 5432) (nil tag-type start 5411 . 5432) (nil block-side t 5410 . 5411) (nil block-token delimiter-beg 5410 . 5411) (nil tag-attr t 5410 . 5411) (nil tag-name "v-btn" 5410 . 5411) (nil tag-type start 5410 . 5411) (nil font-lock-face web-mode-block-delimiter-face 5410 . 5411) (nil block-side t 5409 . 5410) (nil block-token delimiter-beg 5409 . 5410) (nil tag-attr t 5409 . 5410) (nil tag-name "v-btn" 5409 . 5410) (nil tag-type start 5409 . 5410) (nil font-lock-face web-mode-block-delimiter-face 5409 . 5410) (nil block-side t 5408 . 5409) (nil block-token delimiter-beg 5408 . 5409) (nil tag-attr t 5408 . 5409) (nil tag-name "v-btn" 5408 . 5409) (nil tag-type start 5408 . 5409) (nil font-lock-face web-mode-block-delimiter-face 5408 . 5409) (nil block-side t 5407 . 5408) (nil block-token delimiter-beg 5407 . 5408) (nil tag-attr t 5407 . 5408) (nil tag-name "v-btn" 5407 . 5408) (nil tag-type start 5407 . 5408) (nil font-lock-face web-mode-block-delimiter-face 5407 . 5408) (nil block-side t 5406 . 5407) (nil block-token delimiter-beg 5406 . 5407) (nil tag-attr t 5406 . 5407) (nil tag-name "v-btn" 5406 . 5407) (nil tag-type start 5406 . 5407) (nil font-lock-face web-mode-block-delimiter-face 5406 . 5407) (nil block-side t 5405 . 5406) (nil block-token delimiter-beg 5405 . 5406) (nil tag-attr t 5405 . 5406) (nil tag-name "v-btn" 5405 . 5406) (nil tag-type start 5405 . 5406) (nil font-lock-face web-mode-block-delimiter-face 5405 . 5406) (nil block-side t 5404 . 5405) (nil block-token delimiter-beg 5404 . 5405) (nil tag-attr t 5404 . 5405) (nil tag-name "v-btn" 5404 . 5405) (nil tag-type start 5404 . 5405) (nil font-lock-face web-mode-block-delimiter-face 5404 . 5405) (nil block-beg 0 5403 . 5404) (nil block-controls 0 5403 . 5404) (nil block-side t 5403 . 5404) (nil block-token delimiter-beg 5403 . 5404) (nil tag-attr-beg 2 5403 . 5404) (nil tag-attr t 5403 . 5404) (nil tag-name "v-btn" 5403 . 5404) (nil tag-type start 5403 . 5404) (nil font-lock-face web-mode-block-delimiter-face 5403 . 5404) (nil tag-name "v-btn" 5384 . 5403) (nil tag-type start 5384 . 5403) (nil tag-attr t 5383 . 5384) (nil tag-attr-end 5 5383 . 5384) (nil tag-name "v-btn" 5383 . 5384) (nil tag-type start 5383 . 5384) (nil font-lock-face web-mode-html-attr-value-face 5383 . 5384) (nil tag-attr t 5378 . 5383) (nil tag-name "v-btn" 5378 . 5383) (nil tag-type start 5378 . 5383) (nil font-lock-face web-mode-html-attr-value-face 5378 . 5383) (nil tag-attr t 5377 . 5378) (nil tag-name "v-btn" 5377 . 5378) (nil tag-type start 5377 . 5378) (nil font-lock-face web-mode-html-attr-equal-face 5377 . 5378) (nil tag-attr t 5373 . 5377) (nil tag-name "v-btn" 5373 . 5377) (nil tag-type start 5373 . 5377) (nil font-lock-face web-mode-html-attr-name-face 5373 . 5377) (nil tag-attr-beg 0 5372 . 5373) (nil tag-attr t 5372 . 5373) (nil tag-name "v-btn" 5372 . 5373) (nil tag-type start 5372 . 5373) (nil font-lock-face web-mode-html-attr-name-face 5372 . 5373) (nil tag-name "v-btn" 5353 . 5372) (nil tag-type start 5353 . 5372) (nil tag-attr t 5352 . 5353) (nil tag-attr-end 0 5352 . 5353) (nil tag-name "v-btn" 5352 . 5353) (nil tag-type start 5352 . 5353) (nil font-lock-face web-mode-html-attr-name-face 5352 . 5353) (nil tag-attr t 5349 . 5352) (nil tag-name "v-btn" 5349 . 5352) (nil tag-type start 5349 . 5352) (nil font-lock-face web-mode-html-attr-name-face 5349 . 5352) (nil tag-attr-beg 0 5348 . 5349) (nil tag-attr t 5348 . 5349) (nil tag-name "v-btn" 5348 . 5349) (nil tag-type start 5348 . 5349) (nil font-lock-face web-mode-html-attr-name-face 5348 . 5349) (nil tag-name "v-btn" 5329 . 5348) (nil tag-type start 5329 . 5348) (nil tag-attr t 5328 . 5329) (nil tag-attr-end 0 5328 . 5329) (nil tag-name "v-btn" 5328 . 5329) (nil tag-type start 5328 . 5329) (nil font-lock-face web-mode-html-attr-name-face 5328 . 5329) (nil tag-attr t 5326 . 5328) (nil tag-name "v-btn" 5326 . 5328) (nil tag-type start 5326 . 5328) (nil font-lock-face web-mode-html-attr-name-face 5326 . 5328) (nil tag-attr-beg 0 5325 . 5326) (nil tag-attr t 5325 . 5326) (nil tag-name "v-btn" 5325 . 5326) (nil tag-type start 5325 . 5326) (nil font-lock-face web-mode-html-attr-name-face 5325 . 5326) (nil tag-name "v-btn" 5306 . 5325) (nil tag-type start 5306 . 5325) (nil tag-name "v-btn" 5301 . 5306) (nil tag-type start 5301 . 5306) (nil font-lock-face web-mode-html-tag-custom-face 5301 . 5306) (nil tag-name "v-btn" 5300 . 5301) (nil tag-type start 5300 . 5301) (nil tag-beg 19 5300 . 5301) (nil font-lock-face web-mode-html-tag-bracket-face 5300 . 5301) (5284 . 5850)) nil (25673 9471 754463 979000) 0 nil])
([nil nil (("                " . -5284) 5269) nil (25673 9471 754235 959000) 0 nil])
([nil nil ((29137 . 29144) (t 25673 9471 859449 445000)) nil (25673 9730 412432 693000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32147 . 32148) (nil part-side javascript 32147 . 32148) (nil face (rainbow-delimiters-depth-3-face) 32147 . 32148) (nil part-side javascript 32140 . 32147) (nil part-side javascript 32139 . 32140) (nil face (rainbow-delimiters-depth-4-face) 32139 . 32140) (nil part-side javascript 32138 . 32139) (nil face (rainbow-delimiters-depth-5-face) 32138 . 32139) (nil part-side javascript 32129 . 32138) (nil part-side javascript 32128 . 32129) (nil face (rainbow-delimiters-depth-6-face) 32128 . 32129) (nil part-side javascript 32117 . 32128) (nil part-side javascript 32116 . 32117) (nil face (rainbow-delimiters-depth-7-face) 32116 . 32117) (nil part-side javascript 32115 . 32116) (nil face (rainbow-delimiters-depth-8-face) 32115 . 32116) (nil part-side javascript 32102 . 32115) (nil part-side javascript 32101 . 32102) (nil face (rainbow-delimiters-depth-9-face) 32101 . 32102) (nil part-side javascript 32100 . 32101) (nil part-token string 32100 . 32101) (nil syntax-table (15) 32100 . 32101) (nil font-lock-face web-mode-javascript-string-face 32100 . 32101) (nil part-side javascript 32084 . 32100) (nil part-token string 32084 . 32100) (nil font-lock-face web-mode-javascript-string-face 32084 . 32100) (nil part-side javascript 32083 . 32084) (nil part-token string 32083 . 32084) (nil syntax-table (15) 32083 . 32084) (nil font-lock-face web-mode-javascript-string-face 32083 . 32084) (nil part-side javascript 32082 . 32083) (nil face (rainbow-delimiters-depth-9-face) 32082 . 32083) (nil part-side javascript 32078 . 32082) (nil face web-mode-function-call-face 32078 . 32082) (nil part-side javascript 32069 . 32078) (nil part-side javascript 32065 . 32069) (nil face web-mode-constant-face 32065 . 32069) (nil part-side javascript 32050 . 32065) (nil part-side javascript 32049 . 32050) (nil face (rainbow-delimiters-depth-9-face) 32049 . 32050) (nil part-side javascript 32048 . 32049) (nil face (rainbow-delimiters-depth-1-face) 32048 . 32049) (nil part-side javascript 32043 . 32048) (nil part-side javascript 32042 . 32043) (nil part-token string 32042 . 32043) (nil syntax-table (15) 32042 . 32043) (nil font-lock-face web-mode-javascript-string-face 32042 . 32043) (nil part-side javascript 32041 . 32042) (nil part-token string 32041 . 32042) (nil font-lock-face web-mode-javascript-string-face 32041 . 32042) (nil part-side javascript 32040 . 32041) (nil part-token string 32040 . 32041) (nil syntax-table (15) 32040 . 32041) (nil font-lock-face web-mode-javascript-string-face 32040 . 32041) (nil part-side javascript 32032 . 32040) (nil part-side javascript 32031 . 32032) (nil part-token string 32031 . 32032) (nil syntax-table (15) 32031 . 32032) (nil font-lock-face web-mode-javascript-string-face 32031 . 32032) (nil part-side javascript 32030 . 32031) (nil part-token string 32030 . 32031) (nil font-lock-face web-mode-javascript-string-face 32030 . 32031) (nil part-side javascript 32029 . 32030) (nil part-token string 32029 . 32030) (nil syntax-table (15) 32029 . 32030) (nil font-lock-face web-mode-javascript-string-face 32029 . 32030) (nil part-side javascript 32022 . 32029) (nil part-side javascript 32021 . 32022) (nil face (rainbow-delimiters-depth-1-face) 32021 . 32022) (nil part-side javascript 32020 . 32021) (nil face (rainbow-delimiters-depth-9-face) 32020 . 32021) (nil part-side javascript 32013 . 32020) (nil face web-mode-function-call-face 32013 . 32020) (nil part-side javascript 31987 . 32013) (nil part-side javascript 31986 . 31987) (nil syntax-table (12) 31986 . 31987) (nil part-side javascript 31972 . 31986) (nil part-token comment 31972 . 31986) (nil font-lock-face web-mode-javascript-comment-face 31972 . 31986) (nil part-side javascript 31970 . 31972) (nil part-token comment 31970 . 31972) (nil font-lock-face web-mode-javascript-comment-face 31970 . 31972) (nil part-side javascript 31959 . 31970) (nil part-token comment 31959 . 31970) (nil font-lock-face web-mode-javascript-comment-face 31959 . 31970) (nil part-side javascript 31958 . 31959) (nil part-token comment 31958 . 31959) (nil syntax-table (11) 31958 . 31959) (nil font-lock-face web-mode-javascript-comment-face 31958 . 31959) (nil part-side javascript 31942 . 31958) (nil part-side javascript 31941 . 31942) (nil face (rainbow-delimiters-depth-9-face) 31941 . 31942) (nil part-side javascript 31940 . 31941) (nil face (rainbow-delimiters-depth-1-face) 31940 . 31941) (nil part-side javascript 31939 . 31940) (nil face (rainbow-delimiters-depth-1-face) 31939 . 31940) (nil part-side javascript 31928 . 31939) (nil face web-mode-function-call-face 31928 . 31939) (nil part-side javascript 31927 . 31928) (nil part-side javascript 31926 . 31927) (nil face (rainbow-delimiters-depth-1-face) 31926 . 31927) (nil part-side javascript 31915 . 31926) (nil part-side javascript 31914 . 31915) (nil face (rainbow-delimiters-depth-1-face) 31914 . 31915) (nil part-side javascript 31910 . 31914) (nil face web-mode-type-face 31910 . 31914) (nil part-side javascript 31909 . 31910) (nil part-side javascript 31906 . 31909) (nil face web-mode-keyword-face 31906 . 31909) (nil part-side javascript 31905 . 31906) (nil face (rainbow-delimiters-depth-9-face) 31905 . 31906) (nil part-side javascript 31899 . 31905) (nil face web-mode-function-call-face 31899 . 31905) (nil part-side javascript 31896 . 31899) (nil part-side javascript 31892 . 31896) (nil face web-mode-variable-name-face 31892 . 31896) (nil part-side javascript 31891 . 31892) (nil part-side javascript 31886 . 31891) (nil face web-mode-keyword-face 31886 . 31891) (nil part-side javascript 31871 . 31886) (nil part-side javascript 31870 . 31871) (nil face (rainbow-delimiters-depth-9-face) 31870 . 31871) (nil part-side javascript 31868 . 31870) (nil part-side javascript 31867 . 31868) (nil face (rainbow-delimiters-depth-9-face) 31867 . 31868) (nil part-side javascript 31862 . 31867) (nil face web-mode-function-call-face 31862 . 31867) (nil part-side javascript 31861 . 31862) (nil part-side javascript 31860 . 31861) (nil face (rainbow-delimiters-depth-9-face) 31860 . 31861) (nil part-side javascript 31859 . 31860) (nil face (rainbow-delimiters-depth-1-face) 31859 . 31860) (nil part-side javascript 31858 . 31859) (nil face (rainbow-delimiters-depth-2-face) 31858 . 31859) (nil part-side javascript 31857 . 31858) (nil face (rainbow-delimiters-depth-2-face) 31857 . 31858) (nil part-side javascript 31850 . 31857) (nil face web-mode-function-call-face 31850 . 31857) (nil part-side javascript 31849 . 31850) (nil part-side javascript 31848 . 31849) (nil face (rainbow-delimiters-depth-2-face) 31848 . 31849) (nil part-side javascript 31837 . 31848) (nil part-side javascript 31836 . 31837) (nil face (rainbow-delimiters-depth-2-face) 31836 . 31837) (nil part-side javascript 31832 . 31836) (nil face web-mode-type-face 31832 . 31836) (nil part-side javascript 31831 . 31832) (nil part-side javascript 31828 . 31831) (nil face web-mode-keyword-face 31828 . 31831) (nil part-side javascript 31827 . 31828) (nil face (rainbow-delimiters-depth-1-face) 31827 . 31828) (nil part-side javascript 31824 . 31827) (nil part-side javascript 31823 . 31824) (nil part-token string 31823 . 31824) (nil syntax-table (15) 31823 . 31824) (nil font-lock-face web-mode-javascript-string-face 31823 . 31824) (nil part-side javascript 31822 . 31823) (nil part-token string 31822 . 31823) (nil font-lock-face web-mode-javascript-string-face 31822 . 31823) (nil part-side javascript 31821 . 31822) (nil part-token string 31821 . 31822) (nil syntax-table (15) 31821 . 31822) (nil font-lock-face web-mode-javascript-string-face 31821 . 31822) (nil part-side javascript 31820 . 31821) (nil face (rainbow-delimiters-depth-9-face) 31820 . 31821) (nil part-side javascript 31817 . 31820) (nil part-side javascript 31815 . 31817) (nil face web-mode-variable-name-face 31815 . 31817) (nil part-side javascript 31814 . 31815) (nil part-side javascript 31809 . 31814) (nil face web-mode-keyword-face 31809 . 31814) (nil part-side javascript 31794 . 31809) (nil part-side javascript 31793 . 31794) (nil face (rainbow-delimiters-depth-9-face) 31793 . 31794) (nil part-side javascript 31791 . 31793) (nil part-side javascript 31790 . 31791) (nil face (rainbow-delimiters-depth-9-face) 31790 . 31791) (nil part-side javascript 31785 . 31790) (nil face web-mode-function-call-face 31785 . 31790) (nil part-side javascript 31784 . 31785) (nil part-side javascript 31783 . 31784) (nil face (rainbow-delimiters-depth-9-face) 31783 . 31784) (nil part-side javascript 31782 . 31783) (nil face (rainbow-delimiters-depth-1-face) 31782 . 31783) (nil part-side javascript 31778 . 31782) (nil part-side javascript 31777 . 31778) (nil face (rainbow-delimiters-depth-2-face) 31777 . 31778) (nil part-side javascript 31776 . 31777) (nil face (rainbow-delimiters-depth-2-face) 31776 . 31777) (nil part-side javascript 31768 . 31776) (nil face web-mode-function-call-face 31768 . 31776) (nil part-side javascript 31767 . 31768) (nil part-side javascript 31766 . 31767) (nil face (rainbow-delimiters-depth-2-face) 31766 . 31767) (nil part-side javascript 31755 . 31766) (nil part-side javascript 31754 . 31755) (nil face (rainbow-delimiters-depth-2-face) 31754 . 31755) (nil part-side javascript 31750 . 31754) (nil face web-mode-type-face 31750 . 31754) (nil part-side javascript 31749 . 31750) (nil part-side javascript 31746 . 31749) (nil face web-mode-keyword-face 31746 . 31749) (nil part-side javascript 31745 . 31746) (nil face (rainbow-delimiters-depth-1-face) 31745 . 31746) (nil part-side javascript 31742 . 31745) (nil part-side javascript 31741 . 31742) (nil part-token string 31741 . 31742) (nil syntax-table (15) 31741 . 31742) (nil font-lock-face web-mode-javascript-string-face 31741 . 31742) (nil part-side javascript 31740 . 31741) (nil part-token string 31740 . 31741) (nil font-lock-face web-mode-javascript-string-face 31740 . 31741) (nil part-side javascript 31739 . 31740) (nil part-token string 31739 . 31740) (nil syntax-table (15) 31739 . 31740) (nil font-lock-face web-mode-javascript-string-face 31739 . 31740) (nil part-side javascript 31738 . 31739) (nil face (rainbow-delimiters-depth-9-face) 31738 . 31739) (nil part-side javascript 31735 . 31738) (nil part-side javascript 31733 . 31735) (nil face web-mode-variable-name-face 31733 . 31735) (nil part-side javascript 31732 . 31733) (nil part-side javascript 31727 . 31732) (nil face web-mode-keyword-face 31727 . 31732) (nil part-side javascript 31713 . 31727) (nil part-side javascript 31712 . 31713) (nil syntax-table (12) 31712 . 31713) (nil part-side javascript 31697 . 31712) (nil part-token comment 31697 . 31712) (nil font-lock-face web-mode-javascript-comment-face 31697 . 31712) (nil part-side javascript 31693 . 31697) (nil part-token comment 31693 . 31697) (nil font-lock-face web-mode-javascript-comment-face 31693 . 31697) (nil part-side javascript 31673 . 31693) (nil part-token comment 31673 . 31693) (nil font-lock-face web-mode-javascript-comment-face 31673 . 31693) (nil part-side javascript 31672 . 31673) (nil part-token comment 31672 . 31673) (nil syntax-table (11) 31672 . 31673) (nil font-lock-face web-mode-javascript-comment-face 31672 . 31673) (nil part-side javascript 31656 . 31672) (nil part-side javascript 31655 . 31656) (nil face (rainbow-delimiters-depth-9-face) 31655 . 31656) (nil part-side javascript 31640 . 31655) (nil part-side javascript 31639 . 31640) (nil face (rainbow-delimiters-depth-1-face) 31639 . 31640) (nil part-side javascript 31622 . 31639) (nil part-side javascript 31621 . 31622) (nil face (rainbow-delimiters-depth-2-face) 31621 . 31622) (nil part-side javascript 31559 . 31621) (nil part-side javascript 31558 . 31559) (nil face (rainbow-delimiters-depth-2-face) 31558 . 31559) (nil part-side javascript 31557 . 31558) (nil part-side javascript 31556 . 31557) (nil face (rainbow-delimiters-depth-2-face) 31556 . 31557) (nil part-side javascript 31534 . 31556) (nil part-side javascript 31533 . 31534) (nil face (rainbow-delimiters-depth-2-face) 31533 . 31534) (nil part-side javascript 31532 . 31533) (nil part-side javascript 31530 . 31532) (nil face web-mode-keyword-face 31530 . 31532) (nil part-side javascript 31511 . 31530) (nil part-side javascript 31510 . 31511) (nil face (rainbow-delimiters-depth-2-face) 31510 . 31511) (nil part-side javascript 31509 . 31510) (nil face (rainbow-delimiters-depth-3-face) 31509 . 31510) (nil part-side javascript 31508 . 31509) (nil face (rainbow-delimiters-depth-4-face) 31508 . 31509) (nil part-side javascript 31507 . 31508) (nil face (rainbow-delimiters-depth-4-face) 31507 . 31508) (nil part-side javascript 31500 . 31507) (nil face web-mode-function-call-face 31500 . 31507) (nil part-side javascript 31499 . 31500) (nil part-side javascript 31498 . 31499) (nil face (rainbow-delimiters-depth-4-face) 31498 . 31499) (nil part-side javascript 31497 . 31498) (nil part-side javascript 31496 . 31497) (nil face (rainbow-delimiters-depth-4-face) 31496 . 31497) (nil part-side javascript 31492 . 31496) (nil face web-mode-type-face 31492 . 31496) (nil part-side javascript 31491 . 31492) (nil part-side javascript 31488 . 31491) (nil face web-mode-keyword-face 31488 . 31491) (nil part-side javascript 31484 . 31488) (nil part-side javascript 31483 . 31484) (nil face web-mode-function-name-face 31483 . 31484) (nil part-side javascript 31482 . 31483) (nil face (rainbow-delimiters-depth-3-face) 31482 . 31483) (nil part-side javascript 31479 . 31482) (nil face web-mode-function-call-face 31479 . 31482) (nil part-side javascript 31470 . 31479) (nil part-side javascript 31469 . 31470) (nil face (rainbow-delimiters-depth-2-face) 31469 . 31470) (nil part-side javascript 31466 . 31469) (nil face web-mode-function-call-face 31466 . 31469) (nil part-side javascript 31458 . 31466) (nil part-side javascript 31450 . 31458) (nil face web-mode-variable-name-face 31450 . 31458) (nil part-side javascript 31449 . 31450) (nil part-side javascript 31444 . 31449) (nil face web-mode-keyword-face 31444 . 31449) (nil part-side javascript 31426 . 31444) (nil part-side javascript 31425 . 31426) (nil syntax-table (12) 31425 . 31426) (nil part-side javascript 31397 . 31425) (nil part-token comment 31397 . 31425) (nil font-lock-face web-mode-javascript-comment-face 31397 . 31425) (nil part-side javascript 31393 . 31397) (nil part-token comment 31393 . 31397) (nil font-lock-face web-mode-javascript-comment-face 31393 . 31397) (nil part-side javascript 31374 . 31393) (nil part-token comment 31374 . 31393) (nil font-lock-face web-mode-javascript-comment-face 31374 . 31393) (nil part-side javascript 31373 . 31374) (nil part-token comment 31373 . 31374) (nil syntax-table (11) 31373 . 31374) (nil font-lock-face web-mode-javascript-comment-face 31373 . 31374) (nil part-side javascript 31354 . 31373) (nil part-side javascript 31353 . 31354) (nil face (rainbow-delimiters-depth-1-face) 31353 . 31354) (nil part-side javascript 31352 . 31353) (nil part-side javascript 31351 . 31352) (nil face (rainbow-delimiters-depth-1-face) 31351 . 31352) (nil part-side javascript 31346 . 31351) (nil part-side javascript 31345 . 31346) (nil face (rainbow-delimiters-depth-1-face) 31345 . 31346) (nil part-side javascript 31344 . 31345) (nil part-side javascript 31342 . 31344) (nil face web-mode-keyword-face 31342 . 31344) (nil part-side javascript 31310 . 31342) (nil part-side javascript 31309 . 31310) (nil face (rainbow-delimiters-depth-1-face) 31309 . 31310) (nil part-side javascript 31308 . 31309) (nil part-side javascript 31307 . 31308) (nil face (rainbow-delimiters-depth-1-face) 31307 . 31308) (nil part-side javascript 31297 . 31307) (nil part-side javascript 31292 . 31297) (nil face web-mode-variable-name-face 31292 . 31297) (nil part-side javascript 31291 . 31292) (nil part-side javascript 31286 . 31291) (nil face web-mode-keyword-face 31286 . 31291) (nil part-side javascript 31269 . 31286) (nil part-side javascript 31268 . 31269) (nil face (rainbow-delimiters-depth-9-face) 31268 . 31269) (nil part-side javascript 31267 . 31268) (nil part-side javascript 31266 . 31267) (nil face (rainbow-delimiters-depth-9-face) 31266 . 31267) (nil part-side javascript 31237 . 31266) (nil part-side javascript 31236 . 31237) (nil face web-mode-variable-name-face 31236 . 31237) (nil part-side javascript 31235 . 31236) (nil part-side javascript 31232 . 31235) (nil face web-mode-keyword-face 31232 . 31235) (nil part-side javascript 31231 . 31232) (nil face (rainbow-delimiters-depth-9-face) 31231 . 31232) (nil part-side javascript 31230 . 31231) (nil part-side javascript 31227 . 31230) (nil face web-mode-keyword-face 31227 . 31230) (nil part-side javascript 31213 . 31227) (nil part-side javascript 31212 . 31213) (nil syntax-table (12) 31212 . 31213) (nil part-side javascript 31199 . 31212) (nil part-token comment 31199 . 31212) (nil font-lock-face web-mode-javascript-comment-face 31199 . 31212) (nil part-side javascript 31198 . 31199) (nil part-token comment 31198 . 31199) (nil syntax-table (11) 31198 . 31199) (nil font-lock-face web-mode-javascript-comment-face 31198 . 31199) (nil part-side javascript 31197 . 31198) (nil part-side javascript 31196 . 31197) (nil face (rainbow-delimiters-depth-9-face) 31196 . 31197) (nil part-side javascript 31179 . 31196) (nil part-side javascript 31178 . 31179) (nil face (rainbow-delimiters-depth-9-face) 31178 . 31179) (nil part-side javascript 31174 . 31178) (nil face web-mode-type-face 31174 . 31178) (nil part-side javascript 31173 . 31174) (nil part-side javascript 31170 . 31173) (nil face web-mode-keyword-face 31170 . 31173) (nil part-side javascript 31167 . 31170) (nil part-side javascript 31156 . 31167) (nil face web-mode-variable-name-face 31156 . 31167) (nil part-side javascript 31155 . 31156) (nil part-side javascript 31152 . 31155) (nil face web-mode-keyword-face 31152 . 31155) (nil part-side javascript 31137 . 31152) (nil part-side javascript 31136 . 31137) (nil face (rainbow-delimiters-depth-8-face) 31136 . 31137) (nil part-side javascript 31132 . 31136) (nil part-side javascript 31125 . 31132) (nil face web-mode-function-name-face 31125 . 31132) (nil part-side javascript 31124 . 31125) (nil face (rainbow-delimiters-depth-7-face) 31124 . 31125) (nil part-side javascript 31120 . 31124) (nil face web-mode-function-call-face 31120 . 31124) (nil part-side javascript 31119 . 31120) (nil part-side javascript 31118 . 31119) (nil face (rainbow-delimiters-depth-7-face) 31118 . 31119) (nil part-side javascript 31104 . 31118) (nil part-side javascript 31103 . 31104) (nil face (rainbow-delimiters-depth-7-face) 31103 . 31104) (nil part-side javascript 31100 . 31103) (nil face web-mode-function-call-face 31100 . 31103) (nil part-side javascript 31080 . 31100) (nil part-side javascript 31079 . 31080) (nil syntax-table (12) 31079 . 31080) (nil part-side javascript 31023 . 31079) (nil part-token comment 31023 . 31079) (nil font-lock-face web-mode-javascript-comment-face 31023 . 31079) (nil part-side javascript 31020 . 31023) (nil part-token comment 31020 . 31023) (nil font-lock-face web-mode-javascript-comment-face 31020 . 31023) (nil part-side javascript 31013 . 31020) (nil part-token comment 31013 . 31020) (nil font-lock-face web-mode-javascript-comment-face 31013 . 31020) (nil part-side javascript 31012 . 31013) (nil part-token comment 31012 . 31013) (nil syntax-table (11) 31012 . 31013) (nil font-lock-face web-mode-javascript-comment-face 31012 . 31013) (nil part-side javascript 30998 . 31012) (nil part-side javascript 30997 . 30998) (nil face (rainbow-delimiters-depth-7-face) 30997 . 30998) (nil part-side javascript 30984 . 30997) (nil part-side javascript 30983 . 30984) (nil face (rainbow-delimiters-depth-8-face) 30983 . 30984) (nil part-side javascript 30979 . 30983) (nil part-side javascript 30978 . 30979) (nil face (rainbow-delimiters-depth-9-face) 30978 . 30979) (nil part-side javascript 30977 . 30978) (nil face (rainbow-delimiters-depth-9-face) 30977 . 30978) (nil part-side javascript 30969 . 30977) (nil face web-mode-function-call-face 30969 . 30977) (nil part-side javascript 30960 . 30969) (nil part-side javascript 30959 . 30960) (nil face (rainbow-delimiters-depth-8-face) 30959 . 30960) (nil part-side javascript 30951 . 30959) (nil face web-mode-function-call-face 30951 . 30959) (nil part-side javascript 30927 . 30951) (nil part-side javascript 30926 . 30927) (nil face (rainbow-delimiters-depth-8-face) 30926 . 30927) (nil part-side javascript 30925 . 30926) (nil face (rainbow-delimiters-depth-9-face) 30925 . 30926) (nil part-side javascript 30908 . 30925) (nil part-side javascript 30907 . 30908) (nil part-token string 30907 . 30908) (nil syntax-table (15) 30907 . 30908) (nil font-lock-face web-mode-javascript-string-face 30907 . 30908) (nil part-side javascript 30906 . 30907) (nil part-token string 30906 . 30907) (nil font-lock-face web-mode-javascript-string-face 30906 . 30907) (nil part-side javascript 30905 . 30906) (nil part-token string 30905 . 30906) (nil syntax-table (15) 30905 . 30906) (nil font-lock-face web-mode-javascript-string-face 30905 . 30906) (nil part-side javascript 30896 . 30905) (nil part-side javascript 30892 . 30896) (nil face web-mode-constant-face 30892 . 30896) (nil part-side javascript 30881 . 30892) (nil part-side javascript 30880 . 30881) (nil face (rainbow-delimiters-depth-9-face) 30880 . 30881) (nil part-side javascript 30864 . 30880) (nil face web-mode-function-call-face 30864 . 30880) (nil part-side javascript 30852 . 30864) (nil part-side javascript 30851 . 30852) (nil face (rainbow-delimiters-depth-8-face) 30851 . 30852) (nil part-side javascript 30847 . 30851) (nil face web-mode-function-call-face 30847 . 30851) (nil part-side javascript 30817 . 30847) (nil part-side javascript 30816 . 30817) (nil face (rainbow-delimiters-depth-8-face) 30816 . 30817) (nil part-side javascript 30815 . 30816) (nil face (rainbow-delimiters-depth-9-face) 30815 . 30816) (nil part-side javascript 30814 . 30815) (nil face (rainbow-delimiters-depth-9-face) 30814 . 30815) (nil part-side javascript 30803 . 30814) (nil face web-mode-function-call-face 30803 . 30814) (nil part-side javascript 30794 . 30803) (nil part-side javascript 30793 . 30794) (nil face (rainbow-delimiters-depth-8-face) 30793 . 30794) (nil part-side javascript 30787 . 30793) (nil face web-mode-function-call-face 30787 . 30793) (nil part-side javascript 30761 . 30787) (nil part-side javascript 30760 . 30761) (nil face (rainbow-delimiters-depth-8-face) 30760 . 30761) (nil part-side javascript 30759 . 30760) (nil face (rainbow-delimiters-depth-8-face) 30759 . 30760) (nil part-side javascript 30751 . 30759) (nil face web-mode-function-call-face 30751 . 30759) (nil part-side javascript 30739 . 30751) (nil part-side javascript 30734 . 30739) (nil face web-mode-variable-name-face 30734 . 30739) (nil part-side javascript 30733 . 30734) (nil part-side javascript 30728 . 30733) (nil face web-mode-keyword-face 30728 . 30733) (nil part-side javascript 30713 . 30728) (nil part-side javascript 30712 . 30713) (nil face (rainbow-delimiters-depth-7-face) 30712 . 30713) (nil part-side javascript 30711 . 30712) (nil part-side javascript 30710 . 30711) (nil face (rainbow-delimiters-depth-7-face) 30710 . 30711) (nil part-side javascript 30679 . 30710) (nil part-side javascript 30678 . 30679) (nil face web-mode-variable-name-face 30678 . 30679) (nil part-side javascript 30677 . 30678) (nil part-side javascript 30674 . 30677) (nil face web-mode-keyword-face 30674 . 30677) (nil part-side javascript 30673 . 30674) (nil face (rainbow-delimiters-depth-7-face) 30673 . 30674) (nil part-side javascript 30672 . 30673) (nil part-side javascript 30669 . 30672) (nil face web-mode-keyword-face 30669 . 30672) (nil part-side javascript 30656 . 30669) (nil part-side javascript 30655 . 30656) (nil face (rainbow-delimiters-depth-7-face) 30655 . 30656) (nil part-side javascript 30654 . 30655) (nil face (rainbow-delimiters-depth-7-face) 30654 . 30655) (nil part-side javascript 30651 . 30654) (nil part-side javascript 30637 . 30651) (nil face web-mode-variable-name-face 30637 . 30651) (nil part-side javascript 30636 . 30637) (nil part-side javascript 30631 . 30636) (nil face web-mode-keyword-face 30631 . 30636) (nil part-side javascript 30614 . 30631) (nil part-side javascript 30598 . 30614) (nil face web-mode-variable-name-face 30598 . 30614) (nil part-side javascript 30597 . 30598) (nil part-side javascript 30592 . 30597) (nil face web-mode-keyword-face 30592 . 30597) (nil part-side javascript 30579 . 30592) (nil part-side javascript 30578 . 30579) (nil face (rainbow-delimiters-depth-7-face) 30578 . 30579) (nil part-side javascript 30577 . 30578) (nil face (rainbow-delimiters-depth-8-face) 30577 . 30578) (nil part-side javascript 30576 . 30577) (nil face (rainbow-delimiters-depth-8-face) 30576 . 30577) (nil part-side javascript 30565 . 30576) (nil face web-mode-function-call-face 30565 . 30576) (nil part-side javascript 30556 . 30565) (nil part-side javascript 30555 . 30556) (nil face (rainbow-delimiters-depth-7-face) 30555 . 30556) (nil part-side javascript 30549 . 30555) (nil face web-mode-function-call-face 30549 . 30555) (nil part-side javascript 30546 . 30549) (nil part-side javascript 30542 . 30546) (nil face web-mode-variable-name-face 30542 . 30546) (nil part-side javascript 30541 . 30542) (nil part-side javascript 30538 . 30541) (nil face web-mode-keyword-face 30538 . 30541) (nil part-side javascript 30525 . 30538) (nil part-side javascript 30524 . 30525) (nil face (rainbow-delimiters-depth-7-face) 30524 . 30525) (nil part-side javascript 30523 . 30524) (nil face (rainbow-delimiters-depth-7-face) 30523 . 30524) (nil part-side javascript 30519 . 30523) (nil face web-mode-type-face 30519 . 30523) (nil part-side javascript 30518 . 30519) (nil part-side javascript 30515 . 30518) (nil face web-mode-keyword-face 30515 . 30518) (nil part-side javascript 30512 . 30515) (nil part-side javascript 30504 . 30512) (nil face web-mode-variable-name-face 30504 . 30512) (nil part-side javascript 30503 . 30504) (nil part-side javascript 30498 . 30503) (nil face web-mode-keyword-face 30498 . 30503) (nil part-side javascript 30486 . 30498) (nil part-side javascript 30485 . 30486) (nil syntax-table (12) 30485 . 30486) (nil part-side javascript 30464 . 30485) (nil part-token comment 30464 . 30485) (nil font-lock-face web-mode-javascript-comment-face 30464 . 30485) (nil part-side javascript 30462 . 30464) (nil part-token comment 30462 . 30464) (nil font-lock-face web-mode-javascript-comment-face 30462 . 30464) (nil part-side javascript 30450 . 30462) (nil part-token comment 30450 . 30462) (nil font-lock-face web-mode-javascript-comment-face 30450 . 30462) (nil part-side javascript 30447 . 30450) (nil part-token comment 30447 . 30450) (nil font-lock-face web-mode-javascript-comment-face 30447 . 30450) (nil part-side javascript 30434 . 30447) (nil part-token comment 30434 . 30447) (nil font-lock-face web-mode-javascript-comment-face 30434 . 30447) (nil part-side javascript 30433 . 30434) (nil part-token comment 30433 . 30434) (nil syntax-table (11) 30433 . 30434) (nil font-lock-face web-mode-javascript-comment-face 30433 . 30434) (nil part-side javascript 30420 . 30433) (nil part-side javascript 30419 . 30420) (nil face (rainbow-delimiters-depth-6-face) 30419 . 30420) (nil part-side javascript 30418 . 30419) (nil part-side javascript 30414 . 30418) (nil face web-mode-keyword-face 30414 . 30418) (nil part-side javascript 30403 . 30414) (nil part-side javascript 30402 . 30403) (nil face (rainbow-delimiters-depth-6-face) 30402 . 30403) (nil part-side javascript 30391 . 30402) (nil part-side javascript 30390 . 30391) (nil face (rainbow-delimiters-depth-7-face) 30390 . 30391) (nil part-side javascript 30389 . 30390) (nil part-token string 30389 . 30390) (nil syntax-table (15) 30389 . 30390) (nil font-lock-face web-mode-javascript-string-face 30389 . 30390) (nil part-side javascript 30373 . 30389) (nil part-token string 30373 . 30389) (nil font-lock-face web-mode-javascript-string-face 30373 . 30389) (nil part-side javascript 30372 . 30373) (nil part-token string 30372 . 30373) (nil syntax-table (15) 30372 . 30373) (nil font-lock-face web-mode-javascript-string-face 30372 . 30373) (nil part-side javascript 30371 . 30372) (nil face (rainbow-delimiters-depth-7-face) 30371 . 30372) (nil part-side javascript 30367 . 30371) (nil face web-mode-function-call-face 30367 . 30371) (nil part-side javascript 30358 . 30367) (nil part-side javascript 30354 . 30358) (nil face web-mode-constant-face 30354 . 30358) (nil part-side javascript 30341 . 30354) (nil part-side javascript 30340 . 30341) (nil face (rainbow-delimiters-depth-7-face) 30340 . 30341) (nil part-side javascript 30339 . 30340) (nil face (rainbow-delimiters-depth-8-face) 30339 . 30340) (nil part-side javascript 30335 . 30339) (nil part-side javascript 30334 . 30335) (nil face (rainbow-delimiters-depth-8-face) 30334 . 30335) (nil part-side javascript 30333 . 30334) (nil face (rainbow-delimiters-depth-7-face) 30333 . 30334) (nil part-side javascript 30326 . 30333) (nil face web-mode-function-call-face 30326 . 30333) (nil part-side javascript 30302 . 30326) (nil part-side javascript 30301 . 30302) (nil syntax-table (12) 30301 . 30302) (nil part-side javascript 30287 . 30301) (nil part-token comment 30287 . 30301) (nil font-lock-face web-mode-javascript-comment-face 30287 . 30301) (nil part-side javascript 30285 . 30287) (nil part-token comment 30285 . 30287) (nil font-lock-face web-mode-javascript-comment-face 30285 . 30287) (nil part-side javascript 30274 . 30285) (nil part-token comment 30274 . 30285) (nil font-lock-face web-mode-javascript-comment-face 30274 . 30285) (nil part-side javascript 30273 . 30274) (nil part-token comment 30273 . 30274) (nil syntax-table (11) 30273 . 30274) (nil font-lock-face web-mode-javascript-comment-face 30273 . 30274) (nil part-side javascript 30260 . 30273) (nil part-side javascript 30259 . 30260) (nil face (rainbow-delimiters-depth-6-face) 30259 . 30260) (nil part-side javascript 30258 . 30259) (nil part-side javascript 30257 . 30258) (nil face (rainbow-delimiters-depth-6-face) 30257 . 30258) (nil part-side javascript 30253 . 30257) (nil part-side javascript 30252 . 30253) (nil face (rainbow-delimiters-depth-6-face) 30252 . 30253) (nil part-side javascript 30251 . 30252) (nil part-side javascript 30249 . 30251) (nil face web-mode-keyword-face 30249 . 30251) (nil part-side javascript 30237 . 30249) (nil part-side javascript 30236 . 30237) (nil face (rainbow-delimiters-depth-6-face) 30236 . 30237) (nil part-side javascript 30235 . 30236) (nil face (rainbow-delimiters-depth-7-face) 30235 . 30236) (nil part-side javascript 30226 . 30235) (nil part-side javascript 30225 . 30226) (nil face (rainbow-delimiters-depth-8-face) 30225 . 30226) (nil part-side javascript 30224 . 30225) (nil face (rainbow-delimiters-depth-9-face) 30224 . 30225) (nil part-side javascript 30215 . 30224) (nil part-side javascript 30210 . 30215) (nil face web-mode-variable-name-face 30210 . 30215) (nil part-side javascript 30199 . 30210) (nil part-side javascript 30194 . 30199) (nil face web-mode-variable-name-face 30194 . 30199) (nil part-side javascript 30193 . 30194) (nil face (rainbow-delimiters-depth-9-face) 30193 . 30194) (nil part-side javascript 30192 . 30193) (nil face (rainbow-delimiters-depth-8-face) 30192 . 30193) (nil part-side javascript 30189 . 30192) (nil part-side javascript 30188 . 30189) (nil face (rainbow-delimiters-depth-7-face) 30188 . 30189) (nil part-side javascript 30187 . 30188) (nil face (rainbow-delimiters-depth-6-face) 30187 . 30188) (nil part-side javascript 30181 . 30187) (nil face web-mode-function-call-face 30181 . 30187) (nil part-side javascript 30159 . 30181) (nil part-side javascript 30158 . 30159) (nil syntax-table (12) 30158 . 30159) (nil part-side javascript 30154 . 30158) (nil part-token comment 30154 . 30158) (nil font-lock-face web-mode-javascript-comment-face 30154 . 30158) (nil part-side javascript 30144 . 30154) (nil part-token comment 30144 . 30154) (nil font-lock-face web-mode-javascript-comment-face 30144 . 30154) (nil part-side javascript 30143 . 30144) (nil part-token comment 30143 . 30144) (nil syntax-table (11) 30143 . 30144) (nil font-lock-face web-mode-javascript-comment-face 30143 . 30144) (nil part-side javascript 30131 . 30143) (nil part-side javascript 30130 . 30131) (nil face (rainbow-delimiters-depth-6-face) 30130 . 30131) (nil part-side javascript 30129 . 30130) (nil face (rainbow-delimiters-depth-7-face) 30129 . 30130) (nil part-side javascript 30108 . 30129) (nil part-side javascript 30107 . 30108) (nil face (rainbow-delimiters-depth-7-face) 30107 . 30108) (nil part-side javascript 30106 . 30107) (nil face (rainbow-delimiters-depth-6-face) 30106 . 30107) (nil part-side javascript 30098 . 30106) (nil face web-mode-function-call-face 30098 . 30106) (nil part-side javascript 30076 . 30098) (nil part-side javascript 30075 . 30076) (nil syntax-table (12) 30075 . 30076) (nil part-side javascript 30054 . 30075) (nil part-token comment 30054 . 30075) (nil font-lock-face web-mode-javascript-comment-face 30054 . 30075) (nil part-side javascript 30053 . 30054) (nil part-token comment 30053 . 30054) (nil syntax-table (11) 30053 . 30054) (nil font-lock-face web-mode-javascript-comment-face 30053 . 30054) (nil part-side javascript 30041 . 30053) (nil part-side javascript 30040 . 30041) (nil face (rainbow-delimiters-depth-6-face) 30040 . 30041) (nil part-side javascript 30029 . 30040) (nil part-side javascript 30023 . 30029) (nil face web-mode-keyword-face 30023 . 30029) (nil part-side javascript 30010 . 30023) (nil part-side javascript 30009 . 30010) (nil face (rainbow-delimiters-depth-7-face) 30009 . 30010) (nil part-side javascript 30008 . 30009) (nil face (rainbow-delimiters-depth-8-face) 30008 . 30009) (nil part-side javascript 30007 . 30008) (nil part-token string 30007 . 30008) (nil syntax-table (15) 30007 . 30008) (nil font-lock-face web-mode-javascript-string-face 30007 . 30008) (nil part-side javascript 30002 . 30007) (nil part-token string 30002 . 30007) (nil font-lock-face web-mode-javascript-string-face 30002 . 30007) (nil part-side javascript 30001 . 30002) (nil part-token string 30001 . 30002) (nil syntax-table (15) 30001 . 30002) (nil font-lock-face web-mode-javascript-string-face 30001 . 30002) (nil part-side javascript 29999 . 30001) (nil part-side javascript 29998 . 29999) (nil part-token string 29998 . 29999) (nil syntax-table (15) 29998 . 29999) (nil font-lock-face web-mode-javascript-string-face 29998 . 29999) (nil part-side javascript 29986 . 29998) (nil part-token string 29986 . 29998) (nil font-lock-face web-mode-javascript-string-face 29986 . 29998) (nil part-side javascript 29985 . 29986) (nil part-token string 29985 . 29986) (nil syntax-table (15) 29985 . 29986) (nil font-lock-face web-mode-javascript-string-face 29985 . 29986) (nil part-side javascript 29984 . 29985) (nil face (rainbow-delimiters-depth-8-face) 29984 . 29985) (nil part-side javascript 29982 . 29984) (nil part-side javascript 29981 . 29982) (nil part-token string 29981 . 29982) (nil syntax-table (15) 29981 . 29982) (nil font-lock-face web-mode-javascript-string-face 29981 . 29982) (nil part-side javascript 29968 . 29981) (nil part-token string 29968 . 29981) (nil font-lock-face web-mode-javascript-string-face 29968 . 29981) (nil part-side javascript 29967 . 29968) (nil part-token string 29967 . 29968) (nil syntax-table (15) 29967 . 29968) (nil font-lock-face web-mode-javascript-string-face 29967 . 29968) (nil part-side javascript 29966 . 29967) (nil face (rainbow-delimiters-depth-7-face) 29966 . 29967) (nil part-side javascript 29960 . 29966) (nil part-side javascript 29956 . 29960) (nil face web-mode-constant-face 29956 . 29960) (nil part-side javascript 29943 . 29956) (nil part-side javascript 29942 . 29943) (nil face (rainbow-delimiters-depth-6-face) 29942 . 29943) (nil part-side javascript 29941 . 29942) (nil part-side javascript 29937 . 29941) (nil face web-mode-keyword-face 29937 . 29941) (nil part-side javascript 29926 . 29937) (nil part-side javascript 29925 . 29926) (nil face (rainbow-delimiters-depth-6-face) 29925 . 29926) (nil part-side javascript 29914 . 29925) (nil part-side javascript 29913 . 29914) (nil face (rainbow-delimiters-depth-7-face) 29913 . 29914) (nil part-side javascript 29912 . 29913) (nil part-side javascript 29911 . 29912) (nil face (rainbow-delimiters-depth-7-face) 29911 . 29912) (nil part-side javascript 29910 . 29911) (nil face (rainbow-delimiters-depth-7-face) 29910 . 29911) (nil part-side javascript 29909 . 29910) (nil part-side javascript 29908 . 29909) (nil face (rainbow-delimiters-depth-7-face) 29908 . 29909) (nil part-side javascript 29877 . 29908) (nil part-side javascript 29876 . 29877) (nil face (rainbow-delimiters-depth-7-face) 29876 . 29877) (nil part-side javascript 29875 . 29876) (nil part-side javascript 29874 . 29875) (nil face (rainbow-delimiters-depth-7-face) 29874 . 29875) (nil part-side javascript 29873 . 29874) (nil face (rainbow-delimiters-depth-7-face) 29873 . 29874) (nil part-side javascript 29872 . 29873) (nil part-side javascript 29871 . 29872) (nil face (rainbow-delimiters-depth-7-face) 29871 . 29872) (nil part-side javascript 29839 . 29871) (nil part-side javascript 29838 . 29839) (nil face (rainbow-delimiters-depth-6-face) 29838 . 29839) (nil part-side javascript 29837 . 29838) (nil part-side javascript 29836 . 29837) (nil face (rainbow-delimiters-depth-6-face) 29836 . 29837) (nil part-side javascript 29819 . 29836) (nil part-side javascript 29818 . 29819) (nil face (rainbow-delimiters-depth-6-face) 29818 . 29819) (nil part-side javascript 29817 . 29818) (nil part-side javascript 29815 . 29817) (nil face web-mode-keyword-face 29815 . 29817) (nil part-side javascript 29804 . 29815) (nil part-side javascript 29803 . 29804) (nil face (rainbow-delimiters-depth-6-face) 29803 . 29804) (nil part-side javascript 29793 . 29803) (nil part-side javascript 29792 . 29793) (nil face (rainbow-delimiters-depth-7-face) 29792 . 29793) (nil part-side javascript 29791 . 29792) (nil part-side javascript 29790 . 29791) (nil face (rainbow-delimiters-depth-7-face) 29790 . 29791) (nil part-side javascript 29785 . 29790) (nil part-side javascript 29784 . 29785) (nil face web-mode-function-name-face 29784 . 29785) (nil part-side javascript 29783 . 29784) (nil face (rainbow-delimiters-depth-6-face) 29783 . 29784) (nil part-side javascript 29777 . 29783) (nil face web-mode-function-call-face 29777 . 29783) (nil part-side javascript 29753 . 29777) (nil part-side javascript 29747 . 29753) (nil face web-mode-variable-name-face 29747 . 29753) (nil part-side javascript 29746 . 29747) (nil part-side javascript 29741 . 29746) (nil face web-mode-keyword-face 29741 . 29746) (nil part-side javascript 29731 . 29741) (nil part-side javascript 29730 . 29731) (nil syntax-table (12) 29730 . 29731) (nil part-side javascript 29721 . 29730) (nil part-token comment 29721 . 29730) (nil font-lock-face web-mode-javascript-comment-face 29721 . 29730) (nil part-side javascript 29714 . 29721) (nil part-token comment 29714 . 29721) (nil font-lock-face web-mode-javascript-comment-face 29714 . 29721) (nil part-side javascript 29691 . 29714) (nil part-token comment 29691 . 29714) (nil font-lock-face web-mode-javascript-comment-face 29691 . 29714) (nil part-side javascript 29689 . 29691) (nil part-token comment 29689 . 29691) (nil font-lock-face web-mode-javascript-comment-face 29689 . 29691) (nil part-side javascript 29683 . 29689) (nil part-token comment 29683 . 29689) (nil font-lock-face web-mode-javascript-comment-face 29683 . 29689) (nil part-side javascript 29681 . 29683) (nil part-token comment 29681 . 29683) (nil font-lock-face web-mode-javascript-comment-face 29681 . 29683) (nil part-side javascript 29663 . 29681) (nil part-token comment 29663 . 29681) (nil font-lock-face web-mode-javascript-comment-face 29663 . 29681) (nil part-side javascript 29660 . 29663) (nil part-token comment 29660 . 29663) (nil font-lock-face web-mode-javascript-comment-face 29660 . 29663) (nil part-side javascript 29653 . 29660) (nil part-token comment 29653 . 29660) (nil font-lock-face web-mode-javascript-comment-face 29653 . 29660) (nil part-side javascript 29652 . 29653) (nil part-token comment 29652 . 29653) (nil syntax-table (11) 29652 . 29653) (nil font-lock-face web-mode-javascript-comment-face 29652 . 29653) (nil part-side javascript 29640 . 29652) (nil part-side javascript 29639 . 29640) (nil face (rainbow-delimiters-depth-6-face) 29639 . 29640) (nil part-side javascript 29638 . 29639) (nil part-side javascript 29637 . 29638) (nil face (rainbow-delimiters-depth-6-face) 29637 . 29638) (nil part-side javascript 29636 . 29637) (nil face (rainbow-delimiters-depth-6-face) 29636 . 29637) (nil part-side javascript 29635 . 29636) (nil part-side javascript 29634 . 29635) (nil face (rainbow-delimiters-depth-6-face) 29634 . 29635) (nil part-side javascript 29611 . 29634) (nil part-side javascript 29602 . 29611) (nil face web-mode-variable-name-face 29602 . 29611) (nil part-side javascript 29601 . 29602) (nil part-side javascript 29598 . 29601) (nil face web-mode-keyword-face 29598 . 29601) (nil part-side javascript 29587 . 29598) (nil part-side javascript 29586 . 29587) (nil face (rainbow-delimiters-depth-6-face) 29586 . 29587) (nil part-side javascript 29585 . 29586) (nil part-side javascript 29584 . 29585) (nil face (rainbow-delimiters-depth-6-face) 29584 . 29585) (nil part-side javascript 29583 . 29584) (nil face (rainbow-delimiters-depth-6-face) 29583 . 29584) (nil part-side javascript 29582 . 29583) (nil part-side javascript 29581 . 29582) (nil face (rainbow-delimiters-depth-6-face) 29581 . 29582) (nil part-side javascript 29558 . 29581) (nil part-side javascript 29548 . 29558) (nil face web-mode-variable-name-face 29548 . 29558) (nil part-side javascript 29547 . 29548) (nil part-side javascript 29544 . 29547) (nil face web-mode-keyword-face 29544 . 29547) (nil part-side javascript 29534 . 29544) (nil part-side javascript 29533 . 29534) (nil syntax-table (12) 29533 . 29534) (nil part-side javascript 29532 . 29533) (nil part-token comment 29532 . 29533) (nil font-lock-face web-mode-javascript-comment-face 29532 . 29533) (nil part-side javascript 29525 . 29532) (nil part-token comment 29525 . 29532) (nil font-lock-face web-mode-javascript-comment-face 29525 . 29532) (nil part-side javascript 29523 . 29525) (nil part-token comment 29523 . 29525) (nil font-lock-face web-mode-javascript-comment-face 29523 . 29525) (nil part-side javascript 29519 . 29523) (nil part-token comment 29519 . 29523) (nil font-lock-face web-mode-javascript-comment-face 29519 . 29523) (nil part-side javascript 29514 . 29519) (nil part-token comment 29514 . 29519) (nil font-lock-face web-mode-javascript-comment-face 29514 . 29519) (nil part-side javascript 29512 . 29514) (nil part-token comment 29512 . 29514) (nil font-lock-face web-mode-javascript-comment-face 29512 . 29514) (nil part-side javascript 29479 . 29512) (nil part-token comment 29479 . 29512) (nil font-lock-face web-mode-javascript-comment-face 29479 . 29512) (nil part-side javascript 29478 . 29479) (nil part-token comment 29478 . 29479) (nil syntax-table (11) 29478 . 29479) (nil font-lock-face web-mode-javascript-comment-face 29478 . 29479) (nil part-side javascript 29466 . 29478) (nil part-side javascript 29465 . 29466) (nil face (rainbow-delimiters-depth-6-face) 29465 . 29466) (nil part-side javascript 29454 . 29465) (nil part-side javascript 29448 . 29454) (nil face web-mode-keyword-face 29448 . 29454) (nil part-side javascript 29435 . 29448) (nil part-side javascript 29434 . 29435) (nil face (rainbow-delimiters-depth-6-face) 29434 . 29435) (nil part-side javascript 29433 . 29434) (nil part-side javascript 29432 . 29433) (nil face (rainbow-delimiters-depth-6-face) 29432 . 29433) (nil part-side javascript 29400 . 29432) (nil part-side javascript 29399 . 29400) (nil face (rainbow-delimiters-depth-6-face) 29399 . 29400) (nil part-side javascript 29398 . 29399) (nil part-side javascript 29396 . 29398) (nil face web-mode-keyword-face 29396 . 29398) (nil part-side javascript 29386 . 29396) (nil part-side javascript 29385 . 29386) (nil syntax-table (12) 29385 . 29386) (nil part-side javascript 29370 . 29385) (nil part-token comment 29370 . 29385) (nil font-lock-face web-mode-javascript-comment-face 29370 . 29385) (nil part-side javascript 29367 . 29370) (nil part-token comment 29367 . 29370) (nil font-lock-face web-mode-javascript-comment-face 29367 . 29370) (nil part-side javascript 29335 . 29367) (nil part-token comment 29335 . 29367) (nil font-lock-face web-mode-javascript-comment-face 29335 . 29367) (nil part-side javascript 29334 . 29335) (nil part-token comment 29334 . 29335) (nil syntax-table (11) 29334 . 29335) (nil font-lock-face web-mode-javascript-comment-face 29334 . 29335) (nil part-side javascript 29323 . 29334) (nil part-side javascript 29322 . 29323) (nil face (rainbow-delimiters-depth-5-face) 29322 . 29323) (nil part-side javascript 29318 . 29322) (nil part-side javascript 29312 . 29318) (nil face web-mode-function-name-face 29312 . 29318) (nil part-side javascript 29311 . 29312) (nil face (rainbow-delimiters-depth-4-face) 29311 . 29312) (nil part-side javascript 29307 . 29311) (nil face web-mode-function-name-face 29307 . 29311) (nil part-side javascript 29306 . 29307) (nil part-side javascript 29305 . 29306) (nil face (rainbow-delimiters-depth-4-face) 29305 . 29306) (nil part-side javascript 29304 . 29305) (nil face (rainbow-delimiters-depth-4-face) 29304 . 29305) (nil part-side javascript 29291 . 29304) (nil face web-mode-function-call-face 29291 . 29304) (nil part-side javascript 29271 . 29291) (nil part-side javascript 29270 . 29271) (nil syntax-table (12) 29270 . 29271) (nil part-side javascript 29256 . 29270) (nil part-token comment 29256 . 29270) (nil font-lock-face web-mode-javascript-comment-face 29256 . 29270) (nil part-side javascript 29253 . 29256) (nil part-token comment 29253 . 29256) (nil font-lock-face web-mode-javascript-comment-face 29253 . 29256) (nil part-side javascript 29215 . 29253) (nil part-token comment 29215 . 29253) (nil font-lock-face web-mode-javascript-comment-face 29215 . 29253) (nil part-side javascript 29214 . 29215) (nil part-token comment 29214 . 29215) (nil syntax-table (11) 29214 . 29215) (nil font-lock-face web-mode-javascript-comment-face 29214 . 29215) (nil part-side javascript 29205 . 29214) (nil part-side javascript 29204 . 29205) (nil face (rainbow-delimiters-depth-3-face) 29204 . 29205) (nil part-side javascript 29203 . 29204) (nil part-side javascript 29202 . 29203) (nil face (rainbow-delimiters-depth-3-face) 29202 . 29203) (nil part-side javascript 29201 . 29202) (nil part-token string 29201 . 29202) (nil syntax-table (15) 29201 . 29202) (nil font-lock-face web-mode-javascript-string-face 29201 . 29202) (nil part-side javascript 29200 . 29201) (nil part-token string 29200 . 29201) (nil syntax-table (15) 29200 . 29201) (nil font-lock-face web-mode-javascript-string-face 29200 . 29201) (nil part-side javascript 29191 . 29200) (nil part-side javascript 29190 . 29191) (nil part-token string 29190 . 29191) (nil syntax-table (15) 29190 . 29191) (nil font-lock-face web-mode-javascript-string-face 29190 . 29191) (nil part-side javascript 29189 . 29190) (nil part-token string 29189 . 29190) (nil syntax-table (15) 29189 . 29190) (nil font-lock-face web-mode-javascript-string-face 29189 . 29190) (nil part-side javascript 29171 . 29189) (nil part-side javascript 29170 . 29171) (nil face (rainbow-delimiters-depth-3-face) 29170 . 29171) (nil part-side javascript 29149 . 29170) (nil face web-mode-function-name-face 29149 . 29170) (nil part-side javascript 29144 . 29149) (29144 . 32148)) nil (25673 9730 412380 800000) 0 nil])
([nil nil ((32148 . 32149)) nil (25673 9730 412160 934000) 0 nil])
([nil nil ((#("     " 0 5 (part-side javascript)) . -29144) 29166) nil (25673 9730 412159 870000) 0 nil])
([nil nil ((#("          // Set selected sensor
          authservice.selProbe([sensorName, sensorVal])

          // Set log type
          authservice.selLog([0, [{label: logtype, value: logtype}], logtype])" 0 10 (part-side javascript) 10 11 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 11 32 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 32 33 (part-side javascript syntax-table (12)) 33 55 (part-side javascript) 55 63 (part-side javascript face web-mode-function-call-face) 63 64 (part-side javascript face (rainbow-delimiters-depth-6-face)) 64 65 (part-side javascript face (rainbow-delimiters-depth-7-face)) 65 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-7-face)) 87 88 (part-side javascript face (rainbow-delimiters-depth-6-face)) 88 100 (part-side javascript) 100 101 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 101 111 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 111 115 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 115 116 (part-side javascript syntax-table (12)) 116 138 (part-side javascript) 138 144 (part-side javascript face web-mode-function-call-face) 144 145 (part-side javascript face (rainbow-delimiters-depth-6-face)) 145 146 (part-side javascript face (rainbow-delimiters-depth-7-face)) 146 149 (part-side javascript) 149 150 (part-side javascript face (rainbow-delimiters-depth-8-face)) 150 151 (part-side javascript face (rainbow-delimiters-depth-9-face)) 151 156 (part-side javascript face web-mode-variable-name-face) 156 167 (part-side javascript) 167 172 (part-side javascript face web-mode-variable-name-face) 172 181 (part-side javascript) 181 182 (part-side javascript face (rainbow-delimiters-depth-9-face)) 182 183 (part-side javascript face (rainbow-delimiters-depth-8-face)) 183 192 (part-side javascript) 192 193 (part-side javascript face (rainbow-delimiters-depth-7-face)) 193 194 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 30038) (undo-tree-id109 . -194) (undo-tree-id110 . -33) (undo-tree-id111 . -194)) nil (25673 9730 412158 402000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -30037) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 30038) nil (25673 9730 412154 19000) 0 nil])
([nil nil ((29200 . 29209)) nil (25673 9730 412149 710000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29402 . 29403) (nil part-side javascript 29402 . 29403) (nil face (rainbow-delimiters-depth-4-face) 29402 . 29403) (nil part-side javascript 29401 . 29402) (nil face (rainbow-delimiters-depth-5-face) 29401 . 29402) (nil part-side javascript 29392 . 29401) (nil part-side javascript 29391 . 29392) (nil face (rainbow-delimiters-depth-6-face) 29391 . 29392) (nil part-side javascript 29390 . 29391) (nil face (rainbow-delimiters-depth-7-face) 29390 . 29391) (nil part-side javascript 29381 . 29390) (nil part-side javascript 29376 . 29381) (nil face web-mode-variable-name-face 29376 . 29381) (nil part-side javascript 29365 . 29376) (nil part-side javascript 29360 . 29365) (nil face web-mode-variable-name-face 29360 . 29365) (nil part-side javascript 29359 . 29360) (nil face (rainbow-delimiters-depth-7-face) 29359 . 29360) (nil part-side javascript 29358 . 29359) (nil face (rainbow-delimiters-depth-6-face) 29358 . 29359) (nil part-side javascript 29355 . 29358) (nil part-side javascript 29354 . 29355) (nil face (rainbow-delimiters-depth-5-face) 29354 . 29355) (nil part-side javascript 29353 . 29354) (nil face (rainbow-delimiters-depth-4-face) 29353 . 29354) (nil part-side javascript 29347 . 29353) (nil face web-mode-function-call-face 29347 . 29353) (nil part-side javascript 29325 . 29347) (nil part-side javascript 29324 . 29325) (nil syntax-table (12) 29324 . 29325) (nil part-side javascript 29320 . 29324) (nil part-token comment 29320 . 29324) (nil font-lock-face web-mode-javascript-comment-face 29320 . 29324) (nil part-side javascript 29310 . 29320) (nil part-token comment 29310 . 29320) (nil font-lock-face web-mode-javascript-comment-face 29310 . 29320) (nil part-side javascript 29309 . 29310) (nil part-token comment 29309 . 29310) (nil syntax-table (11) 29309 . 29310) (nil font-lock-face web-mode-javascript-comment-face 29309 . 29310) (nil part-side javascript 29297 . 29309) (nil part-side javascript 29296 . 29297) (nil face (rainbow-delimiters-depth-4-face) 29296 . 29297) (nil part-side javascript 29295 . 29296) (nil face (rainbow-delimiters-depth-5-face) 29295 . 29296) (nil part-side javascript 29274 . 29295) (nil part-side javascript 29273 . 29274) (nil face (rainbow-delimiters-depth-5-face) 29273 . 29274) (nil part-side javascript 29272 . 29273) (nil face (rainbow-delimiters-depth-4-face) 29272 . 29273) (nil part-side javascript 29264 . 29272) (nil face web-mode-function-call-face 29264 . 29272) (nil part-side javascript 29242 . 29264) (nil part-side javascript 29241 . 29242) (nil syntax-table (12) 29241 . 29242) (nil part-side javascript 29220 . 29241) (nil part-token comment 29220 . 29241) (nil font-lock-face web-mode-javascript-comment-face 29220 . 29241) (nil part-side javascript 29219 . 29220) (nil part-token comment 29219 . 29220) (nil syntax-table (11) 29219 . 29220) (nil font-lock-face web-mode-javascript-comment-face 29219 . 29220) (nil part-side javascript 29209 . 29219) (29209 . 29403)) nil (25673 9730 412145 431000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -29319) (#("  " 0 2 (part-side javascript)) . -29295) (#("  " 0 2 (part-side javascript)) . -29240) (#("          " 0 10 (part-side javascript)) . -29209) 29201) nil (25673 9730 412129 439000) 0 nil])
([nil nil ((29387 . 29396)) nil (25673 9730 412127 543000) 0 nil])
([nil nil ((29389 . 29397) (#("        " 0 8 (part-side javascript)) . 29388) (undo-tree-id105 . -8) (29396 . 29397)) nil (25673 9730 412126 257000) 0 nil])
([nil nil ((29389 . 29397) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 29388) (29388 . 29396) (29388 . 29389)) nil (25673 9730 412123 476000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29560 . 29561) (nil part-side javascript 29560 . 29561) (nil face (rainbow-delimiters-depth-4-face) 29560 . 29561) (nil part-side javascript 29549 . 29560) (nil part-side javascript 29548 . 29549) (nil face (rainbow-delimiters-depth-5-face) 29548 . 29549) (nil part-side javascript 29547 . 29548) (nil part-token string 29547 . 29548) (nil syntax-table (15) 29547 . 29548) (nil font-lock-face web-mode-javascript-string-face 29547 . 29548) (nil part-side javascript 29531 . 29547) (nil part-token string 29531 . 29547) (nil font-lock-face web-mode-javascript-string-face 29531 . 29547) (nil part-side javascript 29530 . 29531) (nil part-token string 29530 . 29531) (nil syntax-table (15) 29530 . 29531) (nil font-lock-face web-mode-javascript-string-face 29530 . 29531) (nil part-side javascript 29529 . 29530) (nil face (rainbow-delimiters-depth-5-face) 29529 . 29530) (nil part-side javascript 29525 . 29529) (nil face web-mode-function-call-face 29525 . 29529) (nil part-side javascript 29516 . 29525) (nil part-side javascript 29512 . 29516) (nil face web-mode-constant-face 29512 . 29516) (nil part-side javascript 29499 . 29512) (nil part-side javascript 29498 . 29499) (nil face (rainbow-delimiters-depth-5-face) 29498 . 29499) (nil part-side javascript 29497 . 29498) (nil face (rainbow-delimiters-depth-6-face) 29497 . 29498) (nil part-side javascript 29493 . 29497) (nil part-side javascript 29492 . 29493) (nil face (rainbow-delimiters-depth-6-face) 29492 . 29493) (nil part-side javascript 29491 . 29492) (nil face (rainbow-delimiters-depth-5-face) 29491 . 29492) (nil part-side javascript 29484 . 29491) (nil face web-mode-function-call-face 29484 . 29491) (nil part-side javascript 29460 . 29484) (nil part-side javascript 29459 . 29460) (nil syntax-table (12) 29459 . 29460) (nil part-side javascript 29445 . 29459) (nil part-token comment 29445 . 29459) (nil font-lock-face web-mode-javascript-comment-face 29445 . 29459) (nil part-side javascript 29443 . 29445) (nil part-token comment 29443 . 29445) (nil font-lock-face web-mode-javascript-comment-face 29443 . 29445) (nil part-side javascript 29432 . 29443) (nil part-token comment 29432 . 29443) (nil font-lock-face web-mode-javascript-comment-face 29432 . 29443) (nil part-side javascript 29431 . 29432) (nil part-token comment 29431 . 29432) (nil syntax-table (11) 29431 . 29432) (nil font-lock-face web-mode-javascript-comment-face 29431 . 29432) (nil part-side javascript 29419 . 29431) (nil part-side javascript 29418 . 29419) (nil part-side javascript 29417 . 29418) (nil face (rainbow-delimiters-depth-4-face) 29417 . 29418) (nil part-side javascript 29416 . 29417) (nil part-side javascript 29415 . 29416) (nil face (rainbow-delimiters-depth-4-face) 29415 . 29416) (nil part-side javascript 29411 . 29415) (nil part-side javascript 29410 . 29411) (nil face (rainbow-delimiters-depth-4-face) 29410 . 29411) (nil part-side javascript 29409 . 29410) (nil part-side javascript 29407 . 29409) (nil face web-mode-keyword-face 29407 . 29409) (nil part-side javascript 29397 . 29407) (29397 . 29561)) nil (25673 9730 412118 407000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -29542) (#("  " 0 2 (part-side javascript)) . -29496) (#("  " 0 2 (part-side javascript)) . -29458) (#("  " 0 2 (part-side javascript)) . -29419) (#("          " 0 10 (part-side javascript)) . -29397) 29389) nil (25673 9730 412101 374000) 0 nil])
([nil nil ((#("        // Get sensors and select first sensor for analysis tool
        authservice.getSensorsApi().then(result => {
          // If there are no sensors, dont try to select data
          if (result.data.api_keys.length <= 1) {
            return
          }

          // Set sensor to the first sensor in the list (default)
          let sensorName = result.data.api_keys[1][0]
          let sensorVal = result.data.api_keys[1][4]

          // Look for requested sensor in list of sensors and overwrite default selected
          const emotet = result.data.api_keys.filter(s => s[0] == sensor)
          if (emotet.length > 0) {
            sensorName = emotet[0][0]
            sensorVal = emotet[0][4]
          }
          else {
            this.$emit('message_snack', ['err_notfound', 'error'])
            return
          }


          if (date) {
            // Set date in analysis tool
            authservice.selDate([date])
            this.$router.push('analysis_network')
          }
          else {
            // Ready call for all months in the retention period
            const cur_date = new Date()
            let yyyy = String(cur_date.getFullYear())
            const retention_months = 3
            const data_available = []
            for (let i = 0; i < retention_months; i++) {
              const month = cur_date.getMonth() + 1
              yyyy = String(cur_date.getFullYear())
              data_available.push(authservice.getPossibleDates(sensorVal, null, yyyy + '-' + month, logtype))
              cur_date.setMonth(cur_date.getMonth() - 1)
            }

            // Wait for all calls to getPossibleDates and find most recent date
            Promise.all(data_available).then(results => {
              let most_recent = new Date(-8640000000000000) // Oldest date
              for (let i = 0; i < results.length; i++) {
                const dates = results[i].data.Available
                if (dates) {
                  // Find maximum day with available data within month
                  const max_date = Math.max(...dates.map(d => new Date(d).getTime()))
                  if (max_date > most_recent) {
                    most_recent = max_date
                  }
                }
              }

              // Build date string with leading zeroes
              const mm = ('0' + (new Date(most_recent).getMonth() + 1)).slice(-2)
              const dd = ('0' + (new Date(most_recent).getDate())).slice(-2)
              const year = String(new Date(most_recent).getFullYear())

              // Set date in analysis tool
              authservice.selDate([year + '-' + mm + '-' + dd])
              this.$router.push('analysis_network')
            })
          }
        })" 0 8 (part-side javascript) 8 9 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 9 47 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 47 50 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 50 64 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 64 65 (part-side javascript syntax-table (12)) 65 85 (part-side javascript) 85 98 (part-side javascript face web-mode-function-call-face) 98 99 (part-side javascript face (rainbow-delimiters-depth-4-face)) 99 100 (part-side javascript face (rainbow-delimiters-depth-4-face)) 100 101 (part-side javascript) 101 105 (part-side javascript face web-mode-function-call-face) 105 106 (part-side javascript face (rainbow-delimiters-depth-4-face)) 106 112 (part-side javascript face web-mode-function-name-face) 112 116 (part-side javascript) 116 117 (part-side javascript face (rainbow-delimiters-depth-5-face)) 117 118 (part-side javascript) 118 128 (part-side javascript) 128 129 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 129 161 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 161 164 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 164 179 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 179 180 (part-side javascript syntax-table (12)) 180 190 (part-side javascript) 190 192 (part-side javascript face web-mode-keyword-face) 192 193 (part-side javascript) 193 194 (part-side javascript face (rainbow-delimiters-depth-6-face)) 194 226 (part-side javascript) 226 227 (part-side javascript face (rainbow-delimiters-depth-6-face)) 227 228 (part-side javascript) 228 229 (part-side javascript face (rainbow-delimiters-depth-6-face)) 229 242 (part-side javascript) 242 248 (part-side javascript face web-mode-keyword-face) 248 259 (part-side javascript) 259 260 (part-side javascript face (rainbow-delimiters-depth-6-face)) 260 272 (part-side javascript) 272 273 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 273 306 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 306 308 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 308 313 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 313 317 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 317 319 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 319 326 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 326 327 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 327 328 (part-side javascript syntax-table (12)) 328 338 (part-side javascript) 338 341 (part-side javascript face web-mode-keyword-face) 341 342 (part-side javascript) 342 352 (part-side javascript face web-mode-variable-name-face) 352 375 (part-side javascript) 375 376 (part-side javascript face (rainbow-delimiters-depth-6-face)) 376 377 (part-side javascript) 377 378 (part-side javascript face (rainbow-delimiters-depth-6-face)) 378 379 (part-side javascript face (rainbow-delimiters-depth-6-face)) 379 380 (part-side javascript) 380 381 (part-side javascript face (rainbow-delimiters-depth-6-face)) 381 392 (part-side javascript) 392 395 (part-side javascript face web-mode-keyword-face) 395 396 (part-side javascript) 396 405 (part-side javascript face web-mode-variable-name-face) 405 428 (part-side javascript) 428 429 (part-side javascript face (rainbow-delimiters-depth-6-face)) 429 430 (part-side javascript) 430 431 (part-side javascript face (rainbow-delimiters-depth-6-face)) 431 432 (part-side javascript face (rainbow-delimiters-depth-6-face)) 432 433 (part-side javascript) 433 434 (part-side javascript face (rainbow-delimiters-depth-6-face)) 434 446 (part-side javascript) 446 447 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 447 454 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 454 457 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 457 475 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 475 477 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 477 483 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 483 485 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 485 508 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 508 515 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 515 524 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 524 525 (part-side javascript syntax-table (12)) 525 535 (part-side javascript) 535 540 (part-side javascript face web-mode-keyword-face) 540 541 (part-side javascript) 541 547 (part-side javascript face web-mode-variable-name-face) 547 571 (part-side javascript) 571 577 (part-side javascript face web-mode-function-call-face) 577 578 (part-side javascript face (rainbow-delimiters-depth-6-face)) 578 579 (part-side javascript face web-mode-function-name-face) 579 584 (part-side javascript) 584 585 (part-side javascript face (rainbow-delimiters-depth-7-face)) 585 586 (part-side javascript) 586 587 (part-side javascript face (rainbow-delimiters-depth-7-face)) 587 597 (part-side javascript) 597 598 (part-side javascript face (rainbow-delimiters-depth-6-face)) 598 609 (part-side javascript) 609 611 (part-side javascript face web-mode-keyword-face) 611 612 (part-side javascript) 612 613 (part-side javascript face (rainbow-delimiters-depth-6-face)) 613 630 (part-side javascript) 630 631 (part-side javascript face (rainbow-delimiters-depth-6-face)) 631 632 (part-side javascript) 632 633 (part-side javascript face (rainbow-delimiters-depth-6-face)) 633 665 (part-side javascript) 665 666 (part-side javascript face (rainbow-delimiters-depth-7-face)) 666 667 (part-side javascript) 667 668 (part-side javascript face (rainbow-delimiters-depth-7-face)) 668 669 (part-side javascript face (rainbow-delimiters-depth-7-face)) 669 670 (part-side javascript) 670 671 (part-side javascript face (rainbow-delimiters-depth-7-face)) 671 702 (part-side javascript) 702 703 (part-side javascript face (rainbow-delimiters-depth-7-face)) 703 704 (part-side javascript) 704 705 (part-side javascript face (rainbow-delimiters-depth-7-face)) 705 706 (part-side javascript face (rainbow-delimiters-depth-7-face)) 706 707 (part-side javascript) 707 708 (part-side javascript face (rainbow-delimiters-depth-7-face)) 708 719 (part-side javascript) 719 720 (part-side javascript face (rainbow-delimiters-depth-6-face)) 720 731 (part-side javascript) 731 735 (part-side javascript face web-mode-keyword-face) 735 736 (part-side javascript) 736 737 (part-side javascript face (rainbow-delimiters-depth-6-face)) 737 750 (part-side javascript) 750 754 (part-side javascript face web-mode-constant-face) 754 760 (part-side javascript) 760 761 (part-side javascript face (rainbow-delimiters-depth-7-face)) 761 762 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 762 775 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 775 776 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 776 778 (part-side javascript) 778 779 (part-side javascript face (rainbow-delimiters-depth-8-face)) 779 780 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 780 792 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 792 793 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 793 795 (part-side javascript) 795 796 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 796 801 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 801 802 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 802 803 (part-side javascript face (rainbow-delimiters-depth-8-face)) 803 804 (part-side javascript face (rainbow-delimiters-depth-7-face)) 804 817 (part-side javascript) 817 823 (part-side javascript face web-mode-keyword-face) 823 834 (part-side javascript) 834 835 (part-side javascript face (rainbow-delimiters-depth-6-face)) 835 836 (part-side javascript) 836 848 (part-side javascript) 848 850 (part-side javascript face web-mode-keyword-face) 850 851 (part-side javascript) 851 852 (part-side javascript face (rainbow-delimiters-depth-6-face)) 852 856 (part-side javascript) 856 857 (part-side javascript face (rainbow-delimiters-depth-6-face)) 857 858 (part-side javascript) 858 859 (part-side javascript face (rainbow-delimiters-depth-6-face)) 859 860 (part-side javascript) 860 872 (part-side javascript) 872 873 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 873 884 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 884 886 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 886 900 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 900 901 (part-side javascript syntax-table (12)) 901 925 (part-side javascript) 925 932 (part-side javascript face web-mode-function-call-face) 932 933 (part-side javascript face (rainbow-delimiters-depth-7-face)) 933 934 (part-side javascript face (rainbow-delimiters-depth-8-face)) 934 938 (part-side javascript) 938 939 (part-side javascript face (rainbow-delimiters-depth-8-face)) 939 940 (part-side javascript face (rainbow-delimiters-depth-7-face)) 940 953 (part-side javascript) 953 957 (part-side javascript face web-mode-constant-face) 957 966 (part-side javascript) 966 970 (part-side javascript face web-mode-function-call-face) 970 971 (part-side javascript face (rainbow-delimiters-depth-7-face)) 971 972 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 972 988 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 988 989 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 989 990 (part-side javascript face (rainbow-delimiters-depth-7-face)) 990 1001 (part-side javascript) 1001 1002 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1002 1013 (part-side javascript) 1013 1017 (part-side javascript face web-mode-keyword-face) 1017 1018 (part-side javascript) 1018 1019 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1019 1032 (part-side javascript) 1032 1033 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1033 1046 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1046 1049 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1049 1061 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1061 1063 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1063 1084 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1084 1085 (part-side javascript syntax-table (12)) 1085 1097 (part-side javascript) 1097 1102 (part-side javascript face web-mode-keyword-face) 1102 1103 (part-side javascript) 1103 1111 (part-side javascript face web-mode-variable-name-face) 1111 1114 (part-side javascript) 1114 1117 (part-side javascript face web-mode-keyword-face) 1117 1118 (part-side javascript) 1118 1122 (part-side javascript face web-mode-type-face) 1122 1123 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1123 1124 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1124 1137 (part-side javascript) 1137 1140 (part-side javascript face web-mode-keyword-face) 1140 1141 (part-side javascript) 1141 1145 (part-side javascript face web-mode-variable-name-face) 1145 1148 (part-side javascript) 1148 1154 (part-side javascript face web-mode-function-call-face) 1154 1155 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1155 1164 (part-side javascript) 1164 1175 (part-side javascript face web-mode-function-call-face) 1175 1176 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1176 1177 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1177 1178 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1178 1191 (part-side javascript) 1191 1196 (part-side javascript face web-mode-keyword-face) 1196 1197 (part-side javascript) 1197 1213 (part-side javascript face web-mode-variable-name-face) 1213 1230 (part-side javascript) 1230 1235 (part-side javascript face web-mode-keyword-face) 1235 1236 (part-side javascript) 1236 1250 (part-side javascript face web-mode-variable-name-face) 1250 1253 (part-side javascript) 1253 1254 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1254 1255 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1255 1268 (part-side javascript) 1268 1271 (part-side javascript face web-mode-keyword-face) 1271 1272 (part-side javascript) 1272 1273 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1273 1276 (part-side javascript face web-mode-keyword-face) 1276 1277 (part-side javascript) 1277 1278 (part-side javascript face web-mode-variable-name-face) 1278 1309 (part-side javascript) 1309 1310 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1310 1311 (part-side javascript) 1311 1312 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1312 1327 (part-side javascript) 1327 1332 (part-side javascript face web-mode-keyword-face) 1332 1333 (part-side javascript) 1333 1338 (part-side javascript face web-mode-variable-name-face) 1338 1350 (part-side javascript) 1350 1358 (part-side javascript face web-mode-function-call-face) 1358 1359 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1359 1360 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1360 1386 (part-side javascript) 1386 1392 (part-side javascript face web-mode-function-call-face) 1392 1393 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1393 1402 (part-side javascript) 1402 1413 (part-side javascript face web-mode-function-call-face) 1413 1414 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1414 1415 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1415 1416 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1416 1446 (part-side javascript) 1446 1450 (part-side javascript face web-mode-function-call-face) 1450 1451 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1451 1463 (part-side javascript) 1463 1479 (part-side javascript face web-mode-function-call-face) 1479 1480 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1480 1491 (part-side javascript) 1491 1495 (part-side javascript face web-mode-constant-face) 1495 1504 (part-side javascript) 1504 1505 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1505 1506 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1506 1507 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1507 1524 (part-side javascript) 1524 1525 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1525 1526 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1526 1550 (part-side javascript) 1550 1558 (part-side javascript face web-mode-function-call-face) 1558 1559 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1559 1568 (part-side javascript) 1568 1576 (part-side javascript face web-mode-function-call-face) 1576 1577 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1577 1578 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1578 1582 (part-side javascript) 1582 1583 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1583 1596 (part-side javascript) 1596 1597 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1597 1611 (part-side javascript) 1611 1612 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1612 1619 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1619 1622 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1622 1678 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1678 1679 (part-side javascript syntax-table (12)) 1679 1699 (part-side javascript) 1699 1702 (part-side javascript face web-mode-function-call-face) 1702 1703 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1703 1717 (part-side javascript) 1717 1718 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1718 1719 (part-side javascript) 1719 1723 (part-side javascript face web-mode-function-call-face) 1723 1724 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1724 1731 (part-side javascript face web-mode-function-name-face) 1731 1735 (part-side javascript) 1735 1736 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1736 1751 (part-side javascript) 1751 1754 (part-side javascript face web-mode-keyword-face) 1754 1755 (part-side javascript) 1755 1766 (part-side javascript face web-mode-variable-name-face) 1766 1769 (part-side javascript) 1769 1772 (part-side javascript face web-mode-keyword-face) 1772 1773 (part-side javascript) 1773 1777 (part-side javascript face web-mode-type-face) 1777 1778 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1778 1795 (part-side javascript) 1795 1796 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1796 1797 (part-side javascript) 1797 1798 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1798 1811 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1811 1812 (part-side javascript syntax-table (12)) 1812 1826 (part-side javascript) 1826 1829 (part-side javascript face web-mode-keyword-face) 1829 1830 (part-side javascript) 1830 1831 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1831 1834 (part-side javascript face web-mode-keyword-face) 1834 1835 (part-side javascript) 1835 1836 (part-side javascript face web-mode-variable-name-face) 1836 1865 (part-side javascript) 1865 1866 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1866 1867 (part-side javascript) 1867 1868 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1868 1885 (part-side javascript) 1885 1890 (part-side javascript face web-mode-keyword-face) 1890 1891 (part-side javascript) 1891 1896 (part-side javascript face web-mode-variable-name-face) 1896 1906 (part-side javascript) 1906 1907 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1907 1908 (part-side javascript) 1908 1909 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1909 1941 (part-side javascript) 1941 1943 (part-side javascript face web-mode-keyword-face) 1943 1944 (part-side javascript) 1944 1945 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1945 1950 (part-side javascript) 1950 1951 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1951 1952 (part-side javascript) 1952 1953 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1953 1972 (part-side javascript) 1972 1973 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1973 1992 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1992 1996 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1996 2024 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2024 2025 (part-side javascript syntax-table (12)) 2025 2043 (part-side javascript) 2043 2048 (part-side javascript face web-mode-keyword-face) 2048 2049 (part-side javascript) 2049 2057 (part-side javascript face web-mode-variable-name-face) 2057 2065 (part-side javascript) 2065 2068 (part-side javascript face web-mode-function-call-face) 2068 2069 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2069 2078 (part-side javascript) 2078 2081 (part-side javascript face web-mode-function-call-face) 2081 2082 (part-side javascript face (rainbow-delimiters-depth-3-face)) 2082 2083 (part-side javascript face web-mode-function-name-face) 2083 2087 (part-side javascript) 2087 2090 (part-side javascript face web-mode-keyword-face) 2090 2091 (part-side javascript) 2091 2095 (part-side javascript face web-mode-type-face) 2095 2096 (part-side javascript face (rainbow-delimiters-depth-4-face)) 2096 2097 (part-side javascript) 2097 2098 (part-side javascript face (rainbow-delimiters-depth-4-face)) 2098 2099 (part-side javascript) 2099 2106 (part-side javascript face web-mode-function-call-face) 2106 2107 (part-side javascript face (rainbow-delimiters-depth-4-face)) 2107 2108 (part-side javascript face (rainbow-delimiters-depth-4-face)) 2108 2109 (part-side javascript face (rainbow-delimiters-depth-3-face)) 2109 2110 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2110 2129 (part-side javascript) 2129 2131 (part-side javascript face web-mode-keyword-face) 2131 2132 (part-side javascript) 2132 2133 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2133 2155 (part-side javascript) 2155 2156 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2156 2157 (part-side javascript) 2157 2158 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2158 2220 (part-side javascript) 2220 2221 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2221 2238 (part-side javascript) 2238 2239 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2239 2254 (part-side javascript) 2254 2255 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2255 2271 (part-side javascript) 2271 2272 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 2272 2292 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2292 2296 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2296 2311 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2311 2312 (part-side javascript syntax-table (12)) 2312 2326 (part-side javascript) 2326 2331 (part-side javascript face web-mode-keyword-face) 2331 2332 (part-side javascript) 2332 2334 (part-side javascript face web-mode-variable-name-face) 2334 2337 (part-side javascript) 2337 2338 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2338 2339 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2339 2340 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 2340 2341 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2341 2344 (part-side javascript) 2344 2345 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2345 2348 (part-side javascript face web-mode-keyword-face) 2348 2349 (part-side javascript) 2349 2353 (part-side javascript face web-mode-type-face) 2353 2354 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2354 2365 (part-side javascript) 2365 2366 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2366 2367 (part-side javascript) 2367 2375 (part-side javascript face web-mode-function-call-face) 2375 2376 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2376 2377 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2377 2381 (part-side javascript) 2381 2382 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2382 2383 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2383 2384 (part-side javascript) 2384 2389 (part-side javascript face web-mode-function-call-face) 2389 2390 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2390 2392 (part-side javascript) 2392 2393 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2393 2408 (part-side javascript) 2408 2413 (part-side javascript face web-mode-keyword-face) 2413 2414 (part-side javascript) 2414 2416 (part-side javascript face web-mode-variable-name-face) 2416 2419 (part-side javascript) 2419 2420 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2420 2421 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2421 2422 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 2422 2423 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2423 2426 (part-side javascript) 2426 2427 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2427 2430 (part-side javascript face web-mode-keyword-face) 2430 2431 (part-side javascript) 2431 2435 (part-side javascript face web-mode-type-face) 2435 2436 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2436 2447 (part-side javascript) 2447 2448 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2448 2449 (part-side javascript) 2449 2456 (part-side javascript face web-mode-function-call-face) 2456 2457 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2457 2458 (part-side javascript face (rainbow-delimiters-depth-2-face)) 2458 2459 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2459 2460 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2460 2461 (part-side javascript) 2461 2466 (part-side javascript face web-mode-function-call-face) 2466 2467 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2467 2469 (part-side javascript) 2469 2470 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2470 2485 (part-side javascript) 2485 2490 (part-side javascript face web-mode-keyword-face) 2490 2491 (part-side javascript) 2491 2495 (part-side javascript face web-mode-variable-name-face) 2495 2498 (part-side javascript) 2498 2504 (part-side javascript face web-mode-function-call-face) 2504 2505 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2505 2508 (part-side javascript face web-mode-keyword-face) 2508 2509 (part-side javascript) 2509 2513 (part-side javascript face web-mode-type-face) 2513 2514 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2514 2525 (part-side javascript) 2525 2526 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2526 2527 (part-side javascript) 2527 2538 (part-side javascript face web-mode-function-call-face) 2538 2539 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2539 2540 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2540 2541 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2541 2557 (part-side javascript) 2557 2558 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 2558 2569 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2569 2571 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2571 2585 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2585 2586 (part-side javascript syntax-table (12)) 2586 2612 (part-side javascript) 2612 2619 (part-side javascript face web-mode-function-call-face) 2619 2620 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2620 2621 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2621 2628 (part-side javascript) 2628 2629 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2629 2630 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 2630 2631 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2631 2639 (part-side javascript) 2639 2640 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2640 2641 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 2641 2642 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2642 2647 (part-side javascript) 2647 2648 (part-side javascript face (rainbow-delimiters-depth-1-face)) 2648 2649 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2649 2664 (part-side javascript) 2664 2668 (part-side javascript face web-mode-constant-face) 2668 2677 (part-side javascript) 2677 2681 (part-side javascript face web-mode-function-call-face) 2681 2682 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2682 2683 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2683 2699 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 2699 2700 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 2700 2701 (part-side javascript face (rainbow-delimiters-depth-9-face)) 2701 2714 (part-side javascript) 2714 2715 (part-side javascript face (rainbow-delimiters-depth-8-face)) 2715 2716 (part-side javascript face (rainbow-delimiters-depth-7-face)) 2716 2727 (part-side javascript) 2727 2728 (part-side javascript face (rainbow-delimiters-depth-6-face)) 2728 2729 (part-side javascript) 2729 2737 (part-side javascript) 2737 2738 (part-side javascript face (rainbow-delimiters-depth-5-face)) 2738 2739 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 29553) (undo-tree-id99 . -2739) (undo-tree-id100 . -65) (undo-tree-id101 . -2739) (undo-tree-id102 . -836) (undo-tree-id103 . -1002) (undo-tree-id104 . -2739)) nil (25673 9730 412098 733000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -29543) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (part-side javascript)) . -29544) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (part-side javascript)) . -29545) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#(" " 0 1 (part-side javascript)) . -29546) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#(" " 0 1 (part-side javascript)) . -29547) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (part-side javascript)) . -29548) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (part-side javascript)) . -29549) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (part-side javascript)) . -29550) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (part-side javascript)) . -29551) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("
" 0 1 (part-side javascript)) . -29552) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) 29553) nil (25673 9730 412086 324000) 0 nil])
([nil nil ((#("        if (date) {" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 16 (part-side javascript) 16 17 (part-side javascript face (rainbow-delimiters-depth-4-face)) 17 18 (part-side javascript) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 29389) (undo-tree-id44 . -19) (undo-tree-id45 . -8) (undo-tree-id46 . -19)) nil (25673 9730 411982 267000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -29388) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 29389) nil (25673 9730 414030 452000) 0 nil])
([nil nil ((#("
        }" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-3-face))) . 29513) (undo-tree-id176 . -10) (undo-tree-id177 . -1) (undo-tree-id178 . -10)) nil (25673 10399 782831 517000) 0 nil] [nil nil ((#("          this.$router.push('analysis_network')
        }" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 23 (part-side javascript) 23 27 (part-side javascript face web-mode-function-call-face) 27 28 (part-side javascript face (rainbow-delimiters-depth-5-face)) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 45 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 45 46 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 46 47 (part-side javascript face (rainbow-delimiters-depth-5-face)) 47 48 (part-side javascript) 48 56 (part-side javascript) 56 57 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face))) . 29466) (undo-tree-id32 . -57) (undo-tree-id33 . -48) (undo-tree-id34 . -57) (undo-tree-id35 . -57) (undo-tree-id36 . -57) (undo-tree-id37 . -57) (undo-tree-id38 . -57) (undo-tree-id39 . -57)) ((29466 . 29523)) (25673 9730 411966 143000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -29397) 29427) nil (25673 10399 782827 184000) 0 nil])
nil
([nil nil ((#("  " 0 2 (part-side javascript)) . -29434) 29462) nil (25673 10399 782825 703000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -29470) 29496) nil (25673 10399 782824 256000) 0 nil])
([nil nil ((#("date = ''" 0 7 (part-side javascript) 7 8 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 8 9 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 29188) (undo-tree-id174 . -9) (undo-tree-id175 . -9)) nil (25673 10399 782822 609000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29181) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("=" 0 1 (part-side javascript)) . -29182) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#(" " 0 1 (part-side javascript)) . -29183) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -29184) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -29185) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("," 0 1 (part-side javascript)) . -29186) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (part-side javascript)) . -29187) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 29188) nil (25673 10399 782817 531000) 0 nil])
([nil nil ((29181 . 29188)) nil (25673 10399 782785 413000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29187) (undo-tree-id159 . -1) 29188) nil (25673 10399 782783 233000) 0 nil])
([nil nil ((29181 . 29185)) nil (25673 10399 782778 54000) 0 nil])
([nil nil ((29186 . 29188)) nil (25673 10399 782776 502000) 0 nil])
([nil nil ((#("S" 0 1 (part-side javascript)) . -29187) (undo-tree-id158 . -1) 29188) nil (25673 10399 782774 488000) 0 nil])
([nil nil ((29187 . 29197)) nil (25673 10399 782770 111000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29196) (undo-tree-id157 . -1) 29197) nil (25673 10399 782767 839000) 0 nil])
([nil nil ((29196 . 29198)) nil (25673 10399 782763 747000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29197) (undo-tree-id156 . -1) 29198) nil (25673 10399 782761 743000) 0 nil])
([nil nil ((29207 . 29215) (#("        " 0 8 (part-side javascript)) . 29206) (undo-tree-id155 . -8) (29205 . 29215)) nil (25673 10399 782757 308000) 0 nil])
([nil nil ((29207 . 29215) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 29206) (29206 . 29214) (29206 . 29207)) nil (25673 10399 782751 756000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29269 . 29270) (nil part-side javascript 29269 . 29270) (nil face (rainbow-delimiters-depth-4-face) 29269 . 29270) (nil part-side javascript 29268 . 29269) (nil face (rainbow-delimiters-depth-5-face) 29268 . 29269) (nil part-side javascript 29262 . 29268) (nil part-side javascript 29258 . 29262) (nil face web-mode-constant-face 29258 . 29262) (nil part-side javascript 29245 . 29258) (nil part-side javascript 29241 . 29245) (nil face web-mode-constant-face 29241 . 29245) (nil part-side javascript 29240 . 29241) (nil face (rainbow-delimiters-depth-5-face) 29240 . 29241) (nil part-side javascript 29239 . 29240) (nil face (rainbow-delimiters-depth-4-face) 29239 . 29240) (nil part-side javascript 29227 . 29239) (nil face web-mode-function-call-face 29227 . 29239) (nil part-side javascript 29215 . 29227) (29215 . 29270)) nil (25673 10399 782747 167000) 0 nil])
([nil nil ((29207 . 29215) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 29206) (29206 . 29214) (29206 . 29207)) nil (25673 10399 782732 478000) 0 nil])
([nil nil ((29215 . 29227)) nil (25673 10399 782730 622000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29223) (undo-tree-id151 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29224) (undo-tree-id152 . -1) (#("," 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29225) (undo-tree-id153 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29226) (undo-tree-id154 . -1) 29227) nil (25673 10399 782728 646000) 0 nil])
([nil nil ((29223 . 29227)) nil (25673 10399 782722 416000) 0 nil])
([nil nil ((#("this.admin_name" 0 4 (part-side javascript face web-mode-constant-face) 4 15 (part-side javascript)) . 29262) (undo-tree-id149 . -15) (undo-tree-id150 . -15)) nil (25673 10399 782721 229000) 0 nil])
([nil nil ((29262 . 29270)) nil (25673 10399 782718 82000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . 29272) (#("i" 0 1 (part-side javascript face web-mode-keyword-face)) . 29272) (#("m" 0 1 (part-side javascript)) . 29272) (#("d" 0 1 (part-side javascript)) . 29272) (#("a" 0 1 (part-side javascript)) . 29272) (#("." 0 1 (part-side javascript)) . 29272) (#("s" 0 1 (part-side javascript)) . 29272) (#("i" 0 1 (part-side javascript)) . 29272) (#("h" 0 1 (part-side javascript)) . 29272) (#("t" 0 1 (part-side javascript face web-mode-constant-face)) . 29272)) nil (25673 10399 782715 387000) 0 nil])
([nil nil ((29272 . 29278)) nil (25673 10399 782712 394000) 0 nil])
([nil nil ((29175 . 29184)) nil (25673 10399 782711 300000) 0 nil])
([nil nil ((29184 . 29189)) nil (25673 10399 782710 345000) 0 nil])
([nil nil ((#("F" 0 1 (part-side javascript)) . -29185) (undo-tree-id145 . -1) (#("i" 0 1 (part-side javascript)) . -29186) (undo-tree-id146 . -1) (#("r" 0 1 (part-side javascript)) . -29187) (undo-tree-id147 . -1) (#("m" 0 1 (part-side javascript)) . -29188) (undo-tree-id148 . -1) 29189) nil (25673 10399 782708 443000) 0 nil])
([nil nil ((29185 . 29191)) nil (25673 10399 782701 885000) 0 nil])
([nil nil ((#("I" 0 1 (part-side javascript)) . -29189) (undo-tree-id143 . -1) (#(" " 0 1 (part-side javascript)) . -29190) (undo-tree-id144 . -1) 29191) nil (25673 10399 782700 450000) 0 nil])
([nil nil ((29189 . 29192)) nil (25673 10399 782696 905000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29191) (undo-tree-id142 . -1) 29192) nil (25673 10399 782695 712000) 0 nil])
([nil nil ((29191 . 29193)) nil (25673 10399 782693 437000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5417 . 5418) (nil block-side t 5417 . 5418) (nil tag-attr t 5417 . 5418) (nil tag-name "v-btn" 5417 . 5418) (nil tag-type start 5417 . 5418) (nil face web-mode-variable-name-face 5417 . 5418) (nil block-side t 5416 . 5417) (nil tag-attr t 5416 . 5417) (nil tag-name "v-btn" 5416 . 5417) (nil tag-type start 5416 . 5417) (nil block-side t 5395 . 5416) (nil tag-attr t 5395 . 5416) (nil tag-name "v-btn" 5395 . 5416) (nil tag-type start 5395 . 5416) (nil face web-mode-function-call-face 5395 . 5416) (5395 . 5418)) nil (25673 10399 782691 756000) 0 nil])
([nil nil ((5418 . 5420)) nil (25673 10399 782687 494000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5419) (undo-tree-id141 . -1) 5420) nil (25673 10399 782686 177000) 0 nil])
([nil nil ((#("l" 0 1 (rear-nonsticky t block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face)) . -5417) (undo-tree-id140 . -1) 5418) nil (25673 10399 782683 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5435 . 5436) (nil block-side t 5434 . 5436) (nil tag-attr t 5434 . 5436) (nil tag-name "v-btn" 5434 . 5436) (nil tag-type start 5434 . 5436) (nil block-side t 5433 . 5434) (nil tag-attr t 5433 . 5434) (nil tag-name "v-btn" 5433 . 5434) (nil tag-type start 5433 . 5434) (nil face web-mode-variable-name-face 5433 . 5434) (nil block-side t 5432 . 5433) (nil tag-attr t 5432 . 5433) (nil tag-name "v-btn" 5432 . 5433) (nil tag-type start 5432 . 5433) (nil face web-mode-variable-name-face 5432 . 5433) (nil block-side t 5431 . 5432) (nil tag-attr t 5431 . 5432) (nil tag-name "v-btn" 5431 . 5432) (nil tag-type start 5431 . 5432) (nil face web-mode-variable-name-face 5431 . 5432) (nil block-side t 5430 . 5431) (nil tag-attr t 5430 . 5431) (nil tag-name "v-btn" 5430 . 5431) (nil tag-type start 5430 . 5431) (nil face web-mode-variable-name-face 5430 . 5431) (nil block-side t 5429 . 5430) (nil tag-attr t 5429 . 5430) (nil tag-name "v-btn" 5429 . 5430) (nil tag-type start 5429 . 5430) (nil block-side t 5428 . 5429) (nil tag-attr t 5428 . 5429) (nil tag-name "v-btn" 5428 . 5429) (nil tag-type start 5428 . 5429) (nil face web-mode-variable-name-face 5428 . 5429) (nil block-side t 5427 . 5428) (nil tag-attr t 5427 . 5428) (nil tag-name "v-btn" 5427 . 5428) (nil tag-type start 5427 . 5428) (nil face web-mode-variable-name-face 5427 . 5428) (nil block-side t 5426 . 5427) (nil tag-attr t 5426 . 5427) (nil tag-name "v-btn" 5426 . 5427) (nil tag-type start 5426 . 5427) (nil face web-mode-variable-name-face 5426 . 5427) (nil block-side t 5425 . 5426) (nil tag-attr t 5425 . 5426) (nil tag-name "v-btn" 5425 . 5426) (nil tag-type start 5425 . 5426) (nil face web-mode-variable-name-face 5425 . 5426) (nil block-side t 5424 . 5425) (nil tag-attr t 5424 . 5425) (nil tag-name "v-btn" 5424 . 5425) (nil tag-type start 5424 . 5425) (nil face web-mode-variable-name-face 5424 . 5425) (nil block-side t 5423 . 5424) (nil tag-attr t 5423 . 5424) (nil tag-name "v-btn" 5423 . 5424) (nil tag-type start 5423 . 5424) (nil face web-mode-variable-name-face 5423 . 5424) (nil block-side t 5421 . 5423) (nil tag-attr t 5421 . 5423) (nil tag-name "v-btn" 5421 . 5423) (nil tag-type start 5421 . 5423) (nil block-side t 5420 . 5421) (nil tag-attr t 5420 . 5421) (nil tag-name "v-btn" 5420 . 5421) (nil tag-type start 5420 . 5421) (nil face web-mode-variable-name-face 5420 . 5421) (nil block-side t 5419 . 5420) (nil tag-attr t 5419 . 5420) (nil tag-name "v-btn" 5419 . 5420) (nil tag-type start 5419 . 5420) (nil face web-mode-variable-name-face 5419 . 5420) (nil block-side t 5418 . 5419) (nil tag-attr t 5418 . 5419) (nil tag-name "v-btn" 5418 . 5419) (nil tag-type start 5418 . 5419) (nil face web-mode-variable-name-face 5418 . 5419) (nil block-side t 5417 . 5418) (nil tag-attr t 5417 . 5418) (nil tag-name "v-btn" 5417 . 5418) (nil tag-type start 5417 . 5418) (nil face web-mode-variable-name-face 5417 . 5418) (5417 . 5436)) nil (25673 10399 782677 319000) 0 nil])
([nil nil ((29468 . 29471)) nil (25673 10399 782658 331000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29470) (undo-tree-id139 . -1) 29471) nil (25673 10399 782657 17000) 0 nil])
([nil nil ((#("logtype, " 0 9 (part-side javascript)) . 29208) (undo-tree-id137 . -9) (undo-tree-id138 . -9)) nil (25673 10399 782653 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5453 . 5454) (nil block-side t 5452 . 5454) (nil tag-attr t 5452 . 5454) (nil tag-name "v-btn" 5452 . 5454) (nil tag-type start 5452 . 5454) (nil block-side t 5451 . 5452) (nil tag-attr t 5451 . 5452) (nil tag-name "v-btn" 5451 . 5452) (nil tag-type start 5451 . 5452) (nil face web-mode-variable-name-face 5451 . 5452) (nil block-side t 5450 . 5451) (nil tag-attr t 5450 . 5451) (nil tag-name "v-btn" 5450 . 5451) (nil tag-type start 5450 . 5451) (nil face web-mode-variable-name-face 5450 . 5451) (nil block-side t 5449 . 5450) (nil tag-attr t 5449 . 5450) (nil tag-name "v-btn" 5449 . 5450) (nil tag-type start 5449 . 5450) (nil block-side t 5448 . 5449) (nil tag-attr t 5448 . 5449) (nil tag-name "v-btn" 5448 . 5449) (nil tag-type start 5448 . 5449) (nil face web-mode-variable-name-face 5448 . 5449) (nil block-side t 5447 . 5448) (nil tag-attr t 5447 . 5448) (nil tag-name "v-btn" 5447 . 5448) (nil tag-type start 5447 . 5448) (nil face web-mode-variable-name-face 5447 . 5448) (nil block-side t 5446 . 5447) (nil tag-attr t 5446 . 5447) (nil tag-name "v-btn" 5446 . 5447) (nil tag-type start 5446 . 5447) (nil face web-mode-variable-name-face 5446 . 5447) (nil block-side t 5445 . 5446) (nil tag-attr t 5445 . 5446) (nil tag-name "v-btn" 5445 . 5446) (nil tag-type start 5445 . 5446) (nil face web-mode-variable-name-face 5445 . 5446) (nil block-side t 5444 . 5445) (nil tag-attr t 5444 . 5445) (nil tag-name "v-btn" 5444 . 5445) (nil tag-type start 5444 . 5445) (nil face web-mode-variable-name-face 5444 . 5445) (nil block-side t 5443 . 5444) (nil tag-attr t 5443 . 5444) (nil tag-name "v-btn" 5443 . 5444) (nil tag-type start 5443 . 5444) (nil face web-mode-variable-name-face 5443 . 5444) (nil block-side t 5441 . 5443) (nil tag-attr t 5441 . 5443) (nil tag-name "v-btn" 5441 . 5443) (nil tag-type start 5441 . 5443) (nil block-side t 5440 . 5441) (nil tag-attr t 5440 . 5441) (nil tag-name "v-btn" 5440 . 5441) (nil tag-type start 5440 . 5441) (nil face web-mode-variable-name-face 5440 . 5441) (nil block-side t 5439 . 5440) (nil tag-attr t 5439 . 5440) (nil tag-name "v-btn" 5439 . 5440) (nil tag-type start 5439 . 5440) (nil face web-mode-variable-name-face 5439 . 5440) (nil block-side t 5438 . 5439) (nil tag-attr t 5438 . 5439) (nil tag-name "v-btn" 5438 . 5439) (nil tag-type start 5438 . 5439) (nil face web-mode-variable-name-face 5438 . 5439) (nil block-side t 5437 . 5438) (nil tag-attr t 5437 . 5438) (nil tag-name "v-btn" 5437 . 5438) (nil tag-type start 5437 . 5438) (nil face web-mode-variable-name-face 5437 . 5438) (5437 . 5454)) nil (25673 10399 782646 279000) 0 nil])
([nil nil ((5437 . 5439)) nil (25673 10399 782628 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5431 . 5432) (nil block-side t 5430 . 5432) (nil tag-attr t 5430 . 5432) (nil tag-name "v-btn" 5430 . 5432) (nil tag-type start 5430 . 5432) (nil block-side t 5429 . 5430) (nil tag-attr t 5429 . 5430) (nil tag-name "v-btn" 5429 . 5430) (nil tag-type start 5429 . 5430) (nil face web-mode-variable-name-face 5429 . 5430) (nil block-side t 5428 . 5429) (nil tag-attr t 5428 . 5429) (nil tag-name "v-btn" 5428 . 5429) (nil tag-type start 5428 . 5429) (nil face web-mode-variable-name-face 5428 . 5429) (nil block-side t 5427 . 5428) (nil tag-attr t 5427 . 5428) (nil tag-name "v-btn" 5427 . 5428) (nil tag-type start 5427 . 5428) (nil block-side t 5426 . 5427) (nil tag-attr t 5426 . 5427) (nil tag-name "v-btn" 5426 . 5427) (nil tag-type start 5426 . 5427) (nil face web-mode-variable-name-face 5426 . 5427) (nil block-side t 5425 . 5426) (nil tag-attr t 5425 . 5426) (nil tag-name "v-btn" 5425 . 5426) (nil tag-type start 5425 . 5426) (nil face web-mode-variable-name-face 5425 . 5426) (nil block-side t 5424 . 5425) (nil tag-attr t 5424 . 5425) (nil tag-name "v-btn" 5424 . 5425) (nil tag-type start 5424 . 5425) (nil face web-mode-variable-name-face 5424 . 5425) (nil block-side t 5423 . 5424) (nil tag-attr t 5423 . 5424) (nil tag-name "v-btn" 5423 . 5424) (nil tag-type start 5423 . 5424) (nil face web-mode-variable-name-face 5423 . 5424) (nil block-side t 5421 . 5423) (nil tag-attr t 5421 . 5423) (nil tag-name "v-btn" 5421 . 5423) (nil tag-type start 5421 . 5423) (nil block-side t 5420 . 5421) (nil tag-attr t 5420 . 5421) (nil tag-name "v-btn" 5420 . 5421) (nil tag-type start 5420 . 5421) (nil face web-mode-variable-name-face 5420 . 5421) (nil block-side t 5419 . 5420) (nil tag-attr t 5419 . 5420) (nil tag-name "v-btn" 5419 . 5420) (nil tag-type start 5419 . 5420) (nil face web-mode-variable-name-face 5419 . 5420) (nil block-side t 5418 . 5419) (nil tag-attr t 5418 . 5419) (nil tag-name "v-btn" 5418 . 5419) (nil tag-type start 5418 . 5419) (nil face web-mode-variable-name-face 5418 . 5419) (nil block-side t 5417 . 5418) (nil tag-attr t 5417 . 5418) (nil tag-name "v-btn" 5417 . 5418) (nil tag-type start 5417 . 5418) (nil face web-mode-variable-name-face 5417 . 5418) (5417 . 5432)) nil (25673 10399 782624 127000) 0 nil])
([nil nil ((5432 . 5434)) nil (25673 10399 782609 720000) 0 nil])
([nil nil ((29289 . 29295)) nil (25673 10399 782608 827000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -29294) (undo-tree-id136 . -1) 29295) nil (25673 10399 782607 523000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5434 . 5435) (nil tag-name "v-btn" 5434 . 5435) (nil tag-type start 5434 . 5435) (nil tag-attr t 5433 . 5434) (nil tag-attr-end 0 5433 . 5434) (nil tag-name "v-btn" 5433 . 5434) (nil tag-type start 5433 . 5434) (nil font-lock-face web-mode-html-attr-name-face 5433 . 5434) (nil tag-attr t 5432 . 5433) (nil tag-name "v-btn" 5432 . 5433) (nil tag-type start 5432 . 5433) (nil font-lock-face web-mode-html-attr-name-face 5432 . 5433) (nil tag-attr t 5431 . 5432) (nil tag-name "v-btn" 5431 . 5432) (nil tag-type start 5431 . 5432) (nil font-lock-face web-mode-html-attr-name-face 5431 . 5432) (nil tag-attr t 5430 . 5431) (nil tag-name "v-btn" 5430 . 5431) (nil tag-type start 5430 . 5431) (nil font-lock-face web-mode-html-attr-name-face 5430 . 5431) (nil tag-attr t 5429 . 5430) (nil tag-name "v-btn" 5429 . 5430) (nil tag-type start 5429 . 5430) (nil font-lock-face web-mode-html-attr-name-face 5429 . 5430) (nil tag-attr-beg 0 5428 . 5429) (nil tag-attr t 5428 . 5429) (nil tag-name "v-btn" 5428 . 5429) (nil tag-type start 5428 . 5429) (nil font-lock-face web-mode-html-attr-name-face 5428 . 5429) (nil tag-name "v-btn" 5427 . 5428) (nil tag-type start 5427 . 5428) (nil tag-name "v-btn" 5426 . 5427) (nil tag-type start 5426 . 5427) (nil tag-name "v-btn" 5425 . 5426) (nil tag-type start 5425 . 5426) (nil tag-name "v-btn" 5424 . 5425) (nil tag-type start 5424 . 5425) (nil tag-name "v-btn" 5423 . 5424) (nil tag-type start 5423 . 5424) (nil block-side t 5422 . 5423) (nil block-end t 5422 . 5423) (nil block-token delimiter-end 5422 . 5423) (nil tag-attr t 5422 . 5423) (nil tag-attr-end 6 5422 . 5423) (nil tag-name "v-btn" 5422 . 5423) (nil tag-type start 5422 . 5423) (nil font-lock-face web-mode-block-delimiter-face 5422 . 5423) (nil block-side t 5421 . 5422) (nil tag-attr t 5421 . 5422) (nil tag-name "v-btn" 5421 . 5422) (nil tag-type start 5421 . 5422) (nil block-side t 5420 . 5421) (nil tag-attr t 5420 . 5421) (nil tag-name "v-btn" 5420 . 5421) (nil tag-type start 5420 . 5421) (nil face web-mode-variable-name-face 5420 . 5421) (nil block-side t 5419 . 5420) (nil tag-attr t 5419 . 5420) (nil tag-name "v-btn" 5419 . 5420) (nil tag-type start 5419 . 5420) (nil face web-mode-variable-name-face 5419 . 5420) (nil block-side t 5418 . 5419) (nil tag-attr t 5418 . 5419) (nil tag-name "v-btn" 5418 . 5419) (nil tag-type start 5418 . 5419) (nil face web-mode-variable-name-face 5418 . 5419) (nil block-side t 5417 . 5418) (nil tag-attr t 5417 . 5418) (nil tag-name "v-btn" 5417 . 5418) (nil tag-type start 5417 . 5418) (nil face web-mode-variable-name-face 5417 . 5418) (5417 . 5435)) nil (25673 10399 782601 629000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t tag-name "v-btn" tag-type start)) . -5434) (undo-tree-id135 . -1) 5435) nil (25673 10399 782584 665000) 0 nil])
([nil nil ((5434 . 5436)) nil (25673 10399 782582 408000) 0 nil])
([nil nil ((#("\"" 0 1 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face)) . -5422) (undo-tree-id134 . -1) 5423) nil (25673 10399 782581 158000) 0 nil])
([nil nil ((5422 . 5423)) nil (25673 10399 782578 788000) 0 nil])
([nil nil ((#("\"" 0 1 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face)) . -5432) (undo-tree-id133 . -1) 5433) nil (25673 10399 782577 558000) 0 nil])
([nil nil ((5432 . 5433)) nil (25673 10399 782575 268000) 0 nil])
([nil nil ((5493 . 5494) (5492 . 5494)) nil (25673 10399 782573 966000) 0 nil])
([nil nil ((#("\\" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5493) (undo-tree-id132 . -1) 5494) nil (25673 10399 782572 468000) 0 nil])
([nil nil ((#("
                    sensorNameEdit = item['Sensor Name'];
                    sensorDescEdit = item['Sensor Description'];
                    sensorCheckEdit = !item['Demo'];
                    showDialog = true;
                    firmEditId = item['Firm ID'];
                    sensorEditId = item['Sensor ID'];
                  \"" 0 21 (tag-name "v-btn" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 32 33 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 33 34 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 37 38 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 43 44 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 47 48 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-attr-end 15 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-name "v-btn" tag-type start) 51 52 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 52 53 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 53 54 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 54 55 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 55 56 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face)) 57 58 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 58 79 (tag-name "v-btn" tag-type start) 79 80 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 84 85 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 85 86 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 86 87 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 87 88 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 88 89 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 89 90 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 90 91 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 91 92 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 92 93 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 93 94 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 94 95 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 95 96 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 96 97 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 97 98 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 98 99 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 99 100 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 100 101 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 101 102 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 102 103 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 103 104 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 104 105 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 105 106 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 106 107 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 107 108 (tag-attr t tag-attr-end 15 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 108 109 (tag-name "v-btn" tag-type start) 109 110 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 110 111 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 111 112 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 112 113 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 113 114 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 114 115 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 115 116 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 116 117 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 117 118 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 118 119 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 119 120 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 120 121 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 121 122 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face)) 122 123 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 123 144 (tag-name "v-btn" tag-type start) 144 145 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 145 146 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 146 147 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 147 148 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 148 149 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 149 150 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 150 151 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 151 152 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 152 153 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 153 154 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 154 155 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 155 156 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 156 157 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 157 158 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 158 159 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 159 160 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 160 161 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 161 163 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 163 164 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 164 165 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 165 166 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 166 167 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 167 168 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 168 169 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 169 170 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 170 171 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 171 172 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 172 173 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 173 174 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 174 175 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 175 176 (tag-attr t tag-attr-end 16 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 176 197 (tag-name "v-btn" tag-type start) 197 198 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 198 199 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 199 200 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 200 201 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 201 202 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 202 203 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 203 204 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 204 205 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 205 206 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 206 207 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 207 208 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 208 209 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 209 210 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 210 211 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 211 212 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 212 213 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 213 214 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 214 215 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 215 236 (tag-name "v-btn" tag-type start) 236 237 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 237 238 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 238 239 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 239 240 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 240 241 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 241 242 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 242 243 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 243 244 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 244 245 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 245 246 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 246 247 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 247 248 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 248 249 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 249 250 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 250 251 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 251 252 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 252 253 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 253 254 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 254 255 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 255 256 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 256 257 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 257 258 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 258 259 (tag-attr t tag-attr-end 11 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 259 260 (tag-name "v-btn" tag-type start) 260 261 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 261 262 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 262 263 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 263 264 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face)) 264 265 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 265 286 (tag-name "v-btn" tag-type start) 286 287 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 287 288 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 288 289 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 289 290 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 290 291 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 291 292 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 292 293 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 293 294 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 294 295 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 295 296 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 296 297 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 297 298 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 298 299 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 299 300 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 300 301 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 301 302 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 302 303 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 303 304 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 304 305 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 305 306 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-value-face)) 306 307 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 307 308 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 308 309 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 309 310 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 310 311 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 311 312 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 312 313 (tag-attr t tag-attr-end 13 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 313 314 (tag-name "v-btn" tag-type start) 314 315 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 315 316 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 316 317 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 317 318 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face)) 318 319 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 319 338 (tag-name "v-btn" tag-type start) 338 339 (tag-name "v-btn" tag-type start)) . 5494) (undo-tree-id127 . -339) (undo-tree-id128 . -1) (undo-tree-id129 . -314) (undo-tree-id130 . -264) (undo-tree-id131 . -339)) nil (25673 10399 782569 148000) 0 nil])
([nil nil ((29290 . 29299)) nil (25673 10399 782561 719000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31178 . 31179) (nil part-side javascript 31178 . 31179) (nil face (rainbow-delimiters-depth-4-face) 31178 . 31179) (nil part-side javascript 31167 . 31178) (nil part-side javascript 31166 . 31167) (nil face (rainbow-delimiters-depth-5-face) 31166 . 31167) (nil part-side javascript 31165 . 31166) (nil face (rainbow-delimiters-depth-6-face) 31165 . 31166) (nil part-side javascript 31152 . 31165) (nil part-side javascript 31151 . 31152) (nil face (rainbow-delimiters-depth-7-face) 31151 . 31152) (nil part-side javascript 31150 . 31151) (nil part-token string 31150 . 31151) (nil syntax-table (15) 31150 . 31151) (nil font-lock-face web-mode-javascript-string-face 31150 . 31151) (nil part-side javascript 31134 . 31150) (nil part-token string 31134 . 31150) (nil font-lock-face web-mode-javascript-string-face 31134 . 31150) (nil part-side javascript 31133 . 31134) (nil part-token string 31133 . 31134) (nil syntax-table (15) 31133 . 31134) (nil font-lock-face web-mode-javascript-string-face 31133 . 31134) (nil part-side javascript 31132 . 31133) (nil face (rainbow-delimiters-depth-7-face) 31132 . 31133) (nil part-side javascript 31128 . 31132) (nil face web-mode-function-call-face 31128 . 31132) (nil part-side javascript 31119 . 31128) (nil part-side javascript 31115 . 31119) (nil face web-mode-constant-face 31115 . 31119) (nil part-side javascript 31100 . 31115) (nil part-side javascript 31099 . 31100) (nil face (rainbow-delimiters-depth-7-face) 31099 . 31100) (nil part-side javascript 31098 . 31099) (nil face (rainbow-delimiters-depth-8-face) 31098 . 31099) (nil part-side javascript 31093 . 31098) (nil part-side javascript 31092 . 31093) (nil part-token string 31092 . 31093) (nil syntax-table (15) 31092 . 31093) (nil font-lock-face web-mode-javascript-string-face 31092 . 31093) (nil part-side javascript 31091 . 31092) (nil part-token string 31091 . 31092) (nil font-lock-face web-mode-javascript-string-face 31091 . 31092) (nil part-side javascript 31090 . 31091) (nil part-token string 31090 . 31091) (nil syntax-table (15) 31090 . 31091) (nil font-lock-face web-mode-javascript-string-face 31090 . 31091) (nil part-side javascript 31082 . 31090) (nil part-side javascript 31081 . 31082) (nil part-token string 31081 . 31082) (nil syntax-table (15) 31081 . 31082) (nil font-lock-face web-mode-javascript-string-face 31081 . 31082) (nil part-side javascript 31080 . 31081) (nil part-token string 31080 . 31081) (nil font-lock-face web-mode-javascript-string-face 31080 . 31081) (nil part-side javascript 31079 . 31080) (nil part-token string 31079 . 31080) (nil syntax-table (15) 31079 . 31080) (nil font-lock-face web-mode-javascript-string-face 31079 . 31080) (nil part-side javascript 31072 . 31079) (nil part-side javascript 31071 . 31072) (nil face (rainbow-delimiters-depth-8-face) 31071 . 31072) (nil part-side javascript 31070 . 31071) (nil face (rainbow-delimiters-depth-7-face) 31070 . 31071) (nil part-side javascript 31063 . 31070) (nil face web-mode-function-call-face 31063 . 31070) (nil part-side javascript 31037 . 31063) (nil part-side javascript 31036 . 31037) (nil syntax-table (12) 31036 . 31037) (nil part-side javascript 31022 . 31036) (nil part-token comment 31022 . 31036) (nil font-lock-face web-mode-javascript-comment-face 31022 . 31036) (nil part-side javascript 31020 . 31022) (nil part-token comment 31020 . 31022) (nil font-lock-face web-mode-javascript-comment-face 31020 . 31022) (nil part-side javascript 31009 . 31020) (nil part-token comment 31009 . 31020) (nil font-lock-face web-mode-javascript-comment-face 31009 . 31020) (nil part-side javascript 31008 . 31009) (nil part-token comment 31008 . 31009) (nil syntax-table (11) 31008 . 31009) (nil font-lock-face web-mode-javascript-comment-face 31008 . 31009) (nil part-side javascript 30992 . 31008) (nil part-side javascript 30991 . 30992) (nil face (rainbow-delimiters-depth-7-face) 30991 . 30992) (nil part-side javascript 30990 . 30991) (nil face (rainbow-delimiters-depth-8-face) 30990 . 30991) (nil part-side javascript 30989 . 30990) (nil face (rainbow-delimiters-depth-8-face) 30989 . 30990) (nil part-side javascript 30978 . 30989) (nil face web-mode-function-call-face 30978 . 30989) (nil part-side javascript 30977 . 30978) (nil part-side javascript 30976 . 30977) (nil face (rainbow-delimiters-depth-8-face) 30976 . 30977) (nil part-side javascript 30965 . 30976) (nil part-side javascript 30964 . 30965) (nil face (rainbow-delimiters-depth-8-face) 30964 . 30965) (nil part-side javascript 30960 . 30964) (nil face web-mode-type-face 30960 . 30964) (nil part-side javascript 30959 . 30960) (nil part-side javascript 30956 . 30959) (nil face web-mode-keyword-face 30956 . 30959) (nil part-side javascript 30955 . 30956) (nil face (rainbow-delimiters-depth-7-face) 30955 . 30956) (nil part-side javascript 30949 . 30955) (nil face web-mode-function-call-face 30949 . 30955) (nil part-side javascript 30946 . 30949) (nil part-side javascript 30942 . 30946) (nil face web-mode-variable-name-face 30942 . 30946) (nil part-side javascript 30941 . 30942) (nil part-side javascript 30936 . 30941) (nil face web-mode-keyword-face 30936 . 30941) (nil part-side javascript 30921 . 30936) (nil part-side javascript 30920 . 30921) (nil face (rainbow-delimiters-depth-7-face) 30920 . 30921) (nil part-side javascript 30918 . 30920) (nil part-side javascript 30917 . 30918) (nil face (rainbow-delimiters-depth-7-face) 30917 . 30918) (nil part-side javascript 30912 . 30917) (nil face web-mode-function-call-face 30912 . 30917) (nil part-side javascript 30911 . 30912) (nil part-side javascript 30910 . 30911) (nil face (rainbow-delimiters-depth-7-face) 30910 . 30911) (nil part-side javascript 30909 . 30910) (nil face (rainbow-delimiters-depth-8-face) 30909 . 30910) (nil part-side javascript 30908 . 30909) (nil face (rainbow-delimiters-depth-9-face) 30908 . 30909) (nil part-side javascript 30907 . 30908) (nil face (rainbow-delimiters-depth-9-face) 30907 . 30908) (nil part-side javascript 30900 . 30907) (nil face web-mode-function-call-face 30900 . 30907) (nil part-side javascript 30899 . 30900) (nil part-side javascript 30898 . 30899) (nil face (rainbow-delimiters-depth-9-face) 30898 . 30899) (nil part-side javascript 30887 . 30898) (nil part-side javascript 30886 . 30887) (nil face (rainbow-delimiters-depth-9-face) 30886 . 30887) (nil part-side javascript 30882 . 30886) (nil face web-mode-type-face 30882 . 30886) (nil part-side javascript 30881 . 30882) (nil part-side javascript 30878 . 30881) (nil face web-mode-keyword-face 30878 . 30881) (nil part-side javascript 30877 . 30878) (nil face (rainbow-delimiters-depth-8-face) 30877 . 30878) (nil part-side javascript 30874 . 30877) (nil part-side javascript 30873 . 30874) (nil part-token string 30873 . 30874) (nil syntax-table (15) 30873 . 30874) (nil font-lock-face web-mode-javascript-string-face 30873 . 30874) (nil part-side javascript 30872 . 30873) (nil part-token string 30872 . 30873) (nil font-lock-face web-mode-javascript-string-face 30872 . 30873) (nil part-side javascript 30871 . 30872) (nil part-token string 30871 . 30872) (nil syntax-table (15) 30871 . 30872) (nil font-lock-face web-mode-javascript-string-face 30871 . 30872) (nil part-side javascript 30870 . 30871) (nil face (rainbow-delimiters-depth-7-face) 30870 . 30871) (nil part-side javascript 30867 . 30870) (nil part-side javascript 30865 . 30867) (nil face web-mode-variable-name-face 30865 . 30867) (nil part-side javascript 30864 . 30865) (nil part-side javascript 30859 . 30864) (nil face web-mode-keyword-face 30859 . 30864) (nil part-side javascript 30844 . 30859) (nil part-side javascript 30843 . 30844) (nil face (rainbow-delimiters-depth-7-face) 30843 . 30844) (nil part-side javascript 30841 . 30843) (nil part-side javascript 30840 . 30841) (nil face (rainbow-delimiters-depth-7-face) 30840 . 30841) (nil part-side javascript 30835 . 30840) (nil face web-mode-function-call-face 30835 . 30840) (nil part-side javascript 30834 . 30835) (nil part-side javascript 30833 . 30834) (nil face (rainbow-delimiters-depth-7-face) 30833 . 30834) (nil part-side javascript 30832 . 30833) (nil face (rainbow-delimiters-depth-8-face) 30832 . 30833) (nil part-side javascript 30828 . 30832) (nil part-side javascript 30827 . 30828) (nil face (rainbow-delimiters-depth-9-face) 30827 . 30828) (nil part-side javascript 30826 . 30827) (nil face (rainbow-delimiters-depth-9-face) 30826 . 30827) (nil part-side javascript 30818 . 30826) (nil face web-mode-function-call-face 30818 . 30826) (nil part-side javascript 30817 . 30818) (nil part-side javascript 30816 . 30817) (nil face (rainbow-delimiters-depth-9-face) 30816 . 30817) (nil part-side javascript 30805 . 30816) (nil part-side javascript 30804 . 30805) (nil face (rainbow-delimiters-depth-9-face) 30804 . 30805) (nil part-side javascript 30800 . 30804) (nil face web-mode-type-face 30800 . 30804) (nil part-side javascript 30799 . 30800) (nil part-side javascript 30796 . 30799) (nil face web-mode-keyword-face 30796 . 30799) (nil part-side javascript 30795 . 30796) (nil face (rainbow-delimiters-depth-8-face) 30795 . 30796) (nil part-side javascript 30792 . 30795) (nil part-side javascript 30791 . 30792) (nil part-token string 30791 . 30792) (nil syntax-table (15) 30791 . 30792) (nil font-lock-face web-mode-javascript-string-face 30791 . 30792) (nil part-side javascript 30790 . 30791) (nil part-token string 30790 . 30791) (nil font-lock-face web-mode-javascript-string-face 30790 . 30791) (nil part-side javascript 30789 . 30790) (nil part-token string 30789 . 30790) (nil syntax-table (15) 30789 . 30790) (nil font-lock-face web-mode-javascript-string-face 30789 . 30790) (nil part-side javascript 30788 . 30789) (nil face (rainbow-delimiters-depth-7-face) 30788 . 30789) (nil part-side javascript 30785 . 30788) (nil part-side javascript 30783 . 30785) (nil face web-mode-variable-name-face 30783 . 30785) (nil part-side javascript 30782 . 30783) (nil part-side javascript 30777 . 30782) (nil face web-mode-keyword-face 30777 . 30782) (nil part-side javascript 30763 . 30777) (nil part-side javascript 30762 . 30763) (nil syntax-table (12) 30762 . 30763) (nil part-side javascript 30747 . 30762) (nil part-token comment 30747 . 30762) (nil font-lock-face web-mode-javascript-comment-face 30747 . 30762) (nil part-side javascript 30743 . 30747) (nil part-token comment 30743 . 30747) (nil font-lock-face web-mode-javascript-comment-face 30743 . 30747) (nil part-side javascript 30723 . 30743) (nil part-token comment 30723 . 30743) (nil font-lock-face web-mode-javascript-comment-face 30723 . 30743) (nil part-side javascript 30722 . 30723) (nil part-token comment 30722 . 30723) (nil syntax-table (11) 30722 . 30723) (nil font-lock-face web-mode-javascript-comment-face 30722 . 30723) (nil part-side javascript 30706 . 30722) (nil part-side javascript 30705 . 30706) (nil face (rainbow-delimiters-depth-7-face) 30705 . 30706) (nil part-side javascript 30690 . 30705) (nil part-side javascript 30689 . 30690) (nil face (rainbow-delimiters-depth-8-face) 30689 . 30690) (nil part-side javascript 30672 . 30689) (nil part-side javascript 30671 . 30672) (nil face (rainbow-delimiters-depth-9-face) 30671 . 30672) (nil part-side javascript 30609 . 30671) (nil part-side javascript 30608 . 30609) (nil face (rainbow-delimiters-depth-9-face) 30608 . 30609) (nil part-side javascript 30607 . 30608) (nil part-side javascript 30606 . 30607) (nil face (rainbow-delimiters-depth-9-face) 30606 . 30607) (nil part-side javascript 30584 . 30606) (nil part-side javascript 30583 . 30584) (nil face (rainbow-delimiters-depth-9-face) 30583 . 30584) (nil part-side javascript 30582 . 30583) (nil part-side javascript 30580 . 30582) (nil face web-mode-keyword-face 30580 . 30582) (nil part-side javascript 30561 . 30580) (nil part-side javascript 30560 . 30561) (nil face (rainbow-delimiters-depth-9-face) 30560 . 30561) (nil part-side javascript 30559 . 30560) (nil face (rainbow-delimiters-depth-1-face) 30559 . 30560) (nil part-side javascript 30558 . 30559) (nil face (rainbow-delimiters-depth-2-face) 30558 . 30559) (nil part-side javascript 30557 . 30558) (nil face (rainbow-delimiters-depth-2-face) 30557 . 30558) (nil part-side javascript 30550 . 30557) (nil face web-mode-function-call-face 30550 . 30557) (nil part-side javascript 30549 . 30550) (nil part-side javascript 30548 . 30549) (nil face (rainbow-delimiters-depth-2-face) 30548 . 30549) (nil part-side javascript 30547 . 30548) (nil part-side javascript 30546 . 30547) (nil face (rainbow-delimiters-depth-2-face) 30546 . 30547) (nil part-side javascript 30542 . 30546) (nil face web-mode-type-face 30542 . 30546) (nil part-side javascript 30541 . 30542) (nil part-side javascript 30538 . 30541) (nil face web-mode-keyword-face 30538 . 30541) (nil part-side javascript 30534 . 30538) (nil part-side javascript 30533 . 30534) (nil face web-mode-function-name-face 30533 . 30534) (nil part-side javascript 30532 . 30533) (nil face (rainbow-delimiters-depth-1-face) 30532 . 30533) (nil part-side javascript 30529 . 30532) (nil face web-mode-function-call-face 30529 . 30532) (nil part-side javascript 30520 . 30529) (nil part-side javascript 30519 . 30520) (nil face (rainbow-delimiters-depth-9-face) 30519 . 30520) (nil part-side javascript 30516 . 30519) (nil face web-mode-function-call-face 30516 . 30519) (nil part-side javascript 30508 . 30516) (nil part-side javascript 30500 . 30508) (nil face web-mode-variable-name-face 30500 . 30508) (nil part-side javascript 30499 . 30500) (nil part-side javascript 30494 . 30499) (nil face web-mode-keyword-face 30494 . 30499) (nil part-side javascript 30476 . 30494) (nil part-side javascript 30475 . 30476) (nil syntax-table (12) 30475 . 30476) (nil part-side javascript 30447 . 30475) (nil part-token comment 30447 . 30475) (nil font-lock-face web-mode-javascript-comment-face 30447 . 30475) (nil part-side javascript 30443 . 30447) (nil part-token comment 30443 . 30447) (nil font-lock-face web-mode-javascript-comment-face 30443 . 30447) (nil part-side javascript 30424 . 30443) (nil part-token comment 30424 . 30443) (nil font-lock-face web-mode-javascript-comment-face 30424 . 30443) (nil part-side javascript 30423 . 30424) (nil part-token comment 30423 . 30424) (nil syntax-table (11) 30423 . 30424) (nil font-lock-face web-mode-javascript-comment-face 30423 . 30424) (nil part-side javascript 30404 . 30423) (nil part-side javascript 30403 . 30404) (nil face (rainbow-delimiters-depth-8-face) 30403 . 30404) (nil part-side javascript 30402 . 30403) (nil part-side javascript 30401 . 30402) (nil face (rainbow-delimiters-depth-8-face) 30401 . 30402) (nil part-side javascript 30396 . 30401) (nil part-side javascript 30395 . 30396) (nil face (rainbow-delimiters-depth-8-face) 30395 . 30396) (nil part-side javascript 30394 . 30395) (nil part-side javascript 30392 . 30394) (nil face web-mode-keyword-face 30392 . 30394) (nil part-side javascript 30360 . 30392) (nil part-side javascript 30359 . 30360) (nil face (rainbow-delimiters-depth-8-face) 30359 . 30360) (nil part-side javascript 30358 . 30359) (nil part-side javascript 30357 . 30358) (nil face (rainbow-delimiters-depth-8-face) 30357 . 30358) (nil part-side javascript 30347 . 30357) (nil part-side javascript 30342 . 30347) (nil face web-mode-variable-name-face 30342 . 30347) (nil part-side javascript 30341 . 30342) (nil part-side javascript 30336 . 30341) (nil face web-mode-keyword-face 30336 . 30341) (nil part-side javascript 30319 . 30336) (nil part-side javascript 30318 . 30319) (nil face (rainbow-delimiters-depth-7-face) 30318 . 30319) (nil part-side javascript 30317 . 30318) (nil part-side javascript 30316 . 30317) (nil face (rainbow-delimiters-depth-7-face) 30316 . 30317) (nil part-side javascript 30287 . 30316) (nil part-side javascript 30286 . 30287) (nil face web-mode-variable-name-face 30286 . 30287) (nil part-side javascript 30285 . 30286) (nil part-side javascript 30282 . 30285) (nil face web-mode-keyword-face 30282 . 30285) (nil part-side javascript 30281 . 30282) (nil face (rainbow-delimiters-depth-7-face) 30281 . 30282) (nil part-side javascript 30280 . 30281) (nil part-side javascript 30277 . 30280) (nil face web-mode-keyword-face 30277 . 30280) (nil part-side javascript 30263 . 30277) (nil part-side javascript 30262 . 30263) (nil syntax-table (12) 30262 . 30263) (nil part-side javascript 30249 . 30262) (nil part-token comment 30249 . 30262) (nil font-lock-face web-mode-javascript-comment-face 30249 . 30262) (nil part-side javascript 30248 . 30249) (nil part-token comment 30248 . 30249) (nil syntax-table (11) 30248 . 30249) (nil font-lock-face web-mode-javascript-comment-face 30248 . 30249) (nil part-side javascript 30247 . 30248) (nil part-side javascript 30246 . 30247) (nil face (rainbow-delimiters-depth-7-face) 30246 . 30247) (nil part-side javascript 30229 . 30246) (nil part-side javascript 30228 . 30229) (nil face (rainbow-delimiters-depth-7-face) 30228 . 30229) (nil part-side javascript 30224 . 30228) (nil face web-mode-type-face 30224 . 30228) (nil part-side javascript 30223 . 30224) (nil part-side javascript 30220 . 30223) (nil face web-mode-keyword-face 30220 . 30223) (nil part-side javascript 30217 . 30220) (nil part-side javascript 30206 . 30217) (nil face web-mode-variable-name-face 30206 . 30217) (nil part-side javascript 30205 . 30206) (nil part-side javascript 30202 . 30205) (nil face web-mode-keyword-face 30202 . 30205) (nil part-side javascript 30187 . 30202) (nil part-side javascript 30186 . 30187) (nil face (rainbow-delimiters-depth-6-face) 30186 . 30187) (nil part-side javascript 30182 . 30186) (nil part-side javascript 30175 . 30182) (nil face web-mode-function-name-face 30175 . 30182) (nil part-side javascript 30174 . 30175) (nil face (rainbow-delimiters-depth-5-face) 30174 . 30175) (nil part-side javascript 30170 . 30174) (nil face web-mode-function-call-face 30170 . 30174) (nil part-side javascript 30169 . 30170) (nil part-side javascript 30168 . 30169) (nil face (rainbow-delimiters-depth-5-face) 30168 . 30169) (nil part-side javascript 30154 . 30168) (nil part-side javascript 30153 . 30154) (nil face (rainbow-delimiters-depth-5-face) 30153 . 30154) (nil part-side javascript 30150 . 30153) (nil face web-mode-function-call-face 30150 . 30153) (nil part-side javascript 30130 . 30150) (nil part-side javascript 30129 . 30130) (nil syntax-table (12) 30129 . 30130) (nil part-side javascript 30073 . 30129) (nil part-token comment 30073 . 30129) (nil font-lock-face web-mode-javascript-comment-face 30073 . 30129) (nil part-side javascript 30070 . 30073) (nil part-token comment 30070 . 30073) (nil font-lock-face web-mode-javascript-comment-face 30070 . 30073) (nil part-side javascript 30063 . 30070) (nil part-token comment 30063 . 30070) (nil font-lock-face web-mode-javascript-comment-face 30063 . 30070) (nil part-side javascript 30062 . 30063) (nil part-token comment 30062 . 30063) (nil syntax-table (11) 30062 . 30063) (nil font-lock-face web-mode-javascript-comment-face 30062 . 30063) (nil part-side javascript 30048 . 30062) (nil part-side javascript 30047 . 30048) (nil face (rainbow-delimiters-depth-5-face) 30047 . 30048) (nil part-side javascript 30034 . 30047) (nil part-side javascript 30033 . 30034) (nil face (rainbow-delimiters-depth-6-face) 30033 . 30034) (nil part-side javascript 30029 . 30033) (nil part-side javascript 30028 . 30029) (nil face (rainbow-delimiters-depth-7-face) 30028 . 30029) (nil part-side javascript 30027 . 30028) (nil face (rainbow-delimiters-depth-7-face) 30027 . 30028) (nil part-side javascript 30019 . 30027) (nil face web-mode-function-call-face 30019 . 30027) (nil part-side javascript 30010 . 30019) (nil part-side javascript 30009 . 30010) (nil face (rainbow-delimiters-depth-6-face) 30009 . 30010) (nil part-side javascript 30001 . 30009) (nil face web-mode-function-call-face 30001 . 30009) (nil part-side javascript 29977 . 30001) (nil part-side javascript 29976 . 29977) (nil face (rainbow-delimiters-depth-6-face) 29976 . 29977) (nil part-side javascript 29975 . 29976) (nil face (rainbow-delimiters-depth-7-face) 29975 . 29976) (nil part-side javascript 29958 . 29975) (nil part-side javascript 29957 . 29958) (nil part-token string 29957 . 29958) (nil syntax-table (15) 29957 . 29958) (nil font-lock-face web-mode-javascript-string-face 29957 . 29958) (nil part-side javascript 29956 . 29957) (nil part-token string 29956 . 29957) (nil font-lock-face web-mode-javascript-string-face 29956 . 29957) (nil part-side javascript 29955 . 29956) (nil part-token string 29955 . 29956) (nil syntax-table (15) 29955 . 29956) (nil font-lock-face web-mode-javascript-string-face 29955 . 29956) (nil part-side javascript 29946 . 29955) (nil part-side javascript 29942 . 29946) (nil face web-mode-constant-face 29942 . 29946) (nil part-side javascript 29931 . 29942) (nil part-side javascript 29930 . 29931) (nil face (rainbow-delimiters-depth-7-face) 29930 . 29931) (nil part-side javascript 29914 . 29930) (nil face web-mode-function-call-face 29914 . 29930) (nil part-side javascript 29902 . 29914) (nil part-side javascript 29901 . 29902) (nil face (rainbow-delimiters-depth-6-face) 29901 . 29902) (nil part-side javascript 29897 . 29901) (nil face web-mode-function-call-face 29897 . 29901) (nil part-side javascript 29867 . 29897) (nil part-side javascript 29866 . 29867) (nil face (rainbow-delimiters-depth-6-face) 29866 . 29867) (nil part-side javascript 29865 . 29866) (nil face (rainbow-delimiters-depth-7-face) 29865 . 29866) (nil part-side javascript 29864 . 29865) (nil face (rainbow-delimiters-depth-7-face) 29864 . 29865) (nil part-side javascript 29853 . 29864) (nil face web-mode-function-call-face 29853 . 29864) (nil part-side javascript 29844 . 29853) (nil part-side javascript 29843 . 29844) (nil face (rainbow-delimiters-depth-6-face) 29843 . 29844) (nil part-side javascript 29837 . 29843) (nil face web-mode-function-call-face 29837 . 29843) (nil part-side javascript 29811 . 29837) (nil part-side javascript 29810 . 29811) (nil face (rainbow-delimiters-depth-6-face) 29810 . 29811) (nil part-side javascript 29809 . 29810) (nil face (rainbow-delimiters-depth-6-face) 29809 . 29810) (nil part-side javascript 29801 . 29809) (nil face web-mode-function-call-face 29801 . 29809) (nil part-side javascript 29789 . 29801) (nil part-side javascript 29784 . 29789) (nil face web-mode-variable-name-face 29784 . 29789) (nil part-side javascript 29783 . 29784) (nil part-side javascript 29778 . 29783) (nil face web-mode-keyword-face 29778 . 29783) (nil part-side javascript 29763 . 29778) (nil part-side javascript 29762 . 29763) (nil face (rainbow-delimiters-depth-5-face) 29762 . 29763) (nil part-side javascript 29761 . 29762) (nil part-side javascript 29760 . 29761) (nil face (rainbow-delimiters-depth-5-face) 29760 . 29761) (nil part-side javascript 29729 . 29760) (nil part-side javascript 29728 . 29729) (nil face web-mode-variable-name-face 29728 . 29729) (nil part-side javascript 29727 . 29728) (nil part-side javascript 29724 . 29727) (nil face web-mode-keyword-face 29724 . 29727) (nil part-side javascript 29723 . 29724) (nil face (rainbow-delimiters-depth-5-face) 29723 . 29724) (nil part-side javascript 29722 . 29723) (nil part-side javascript 29719 . 29722) (nil face web-mode-keyword-face 29719 . 29722) (nil part-side javascript 29706 . 29719) (nil part-side javascript 29705 . 29706) (nil face (rainbow-delimiters-depth-5-face) 29705 . 29706) (nil part-side javascript 29704 . 29705) (nil face (rainbow-delimiters-depth-5-face) 29704 . 29705) (nil part-side javascript 29701 . 29704) (nil part-side javascript 29687 . 29701) (nil face web-mode-variable-name-face 29687 . 29701) (nil part-side javascript 29686 . 29687) (nil part-side javascript 29681 . 29686) (nil face web-mode-keyword-face 29681 . 29686) (nil part-side javascript 29664 . 29681) (nil part-side javascript 29648 . 29664) (nil face web-mode-variable-name-face 29648 . 29664) (nil part-side javascript 29647 . 29648) (nil part-side javascript 29642 . 29647) (nil face web-mode-keyword-face 29642 . 29647) (nil part-side javascript 29629 . 29642) (nil part-side javascript 29628 . 29629) (nil face (rainbow-delimiters-depth-5-face) 29628 . 29629) (nil part-side javascript 29627 . 29628) (nil face (rainbow-delimiters-depth-6-face) 29627 . 29628) (nil part-side javascript 29626 . 29627) (nil face (rainbow-delimiters-depth-6-face) 29626 . 29627) (nil part-side javascript 29615 . 29626) (nil face web-mode-function-call-face 29615 . 29626) (nil part-side javascript 29606 . 29615) (nil part-side javascript 29605 . 29606) (nil face (rainbow-delimiters-depth-5-face) 29605 . 29606) (nil part-side javascript 29599 . 29605) (nil face web-mode-function-call-face 29599 . 29605) (nil part-side javascript 29596 . 29599) (nil part-side javascript 29592 . 29596) (nil face web-mode-variable-name-face 29592 . 29596) (nil part-side javascript 29591 . 29592) (nil part-side javascript 29588 . 29591) (nil face web-mode-keyword-face 29588 . 29591) (nil part-side javascript 29575 . 29588) (nil part-side javascript 29574 . 29575) (nil face (rainbow-delimiters-depth-5-face) 29574 . 29575) (nil part-side javascript 29573 . 29574) (nil face (rainbow-delimiters-depth-5-face) 29573 . 29574) (nil part-side javascript 29569 . 29573) (nil face web-mode-type-face 29569 . 29573) (nil part-side javascript 29568 . 29569) (nil part-side javascript 29565 . 29568) (nil face web-mode-keyword-face 29565 . 29568) (nil part-side javascript 29562 . 29565) (nil part-side javascript 29554 . 29562) (nil face web-mode-variable-name-face 29554 . 29562) (nil part-side javascript 29553 . 29554) (nil part-side javascript 29548 . 29553) (nil face web-mode-keyword-face 29548 . 29553) (nil part-side javascript 29536 . 29548) (nil part-side javascript 29535 . 29536) (nil syntax-table (12) 29535 . 29536) (nil part-side javascript 29514 . 29535) (nil part-token comment 29514 . 29535) (nil font-lock-face web-mode-javascript-comment-face 29514 . 29535) (nil part-side javascript 29512 . 29514) (nil part-token comment 29512 . 29514) (nil font-lock-face web-mode-javascript-comment-face 29512 . 29514) (nil part-side javascript 29500 . 29512) (nil part-token comment 29500 . 29512) (nil font-lock-face web-mode-javascript-comment-face 29500 . 29512) (nil part-side javascript 29497 . 29500) (nil part-token comment 29497 . 29500) (nil font-lock-face web-mode-javascript-comment-face 29497 . 29500) (nil part-side javascript 29484 . 29497) (nil part-token comment 29484 . 29497) (nil font-lock-face web-mode-javascript-comment-face 29484 . 29497) (nil part-side javascript 29483 . 29484) (nil part-token comment 29483 . 29484) (nil syntax-table (11) 29483 . 29484) (nil font-lock-face web-mode-javascript-comment-face 29483 . 29484) (nil part-side javascript 29470 . 29483) (nil part-side javascript 29469 . 29470) (nil face (rainbow-delimiters-depth-4-face) 29469 . 29470) (nil part-side javascript 29468 . 29469) (nil part-side javascript 29464 . 29468) (nil face web-mode-keyword-face 29464 . 29468) (nil part-side javascript 29453 . 29464) (nil part-side javascript 29452 . 29453) (nil face (rainbow-delimiters-depth-4-face) 29452 . 29453) (nil part-side javascript 29441 . 29452) (nil part-side javascript 29440 . 29441) (nil face (rainbow-delimiters-depth-5-face) 29440 . 29441) (nil part-side javascript 29439 . 29440) (nil part-token string 29439 . 29440) (nil syntax-table (15) 29439 . 29440) (nil font-lock-face web-mode-javascript-string-face 29439 . 29440) (nil part-side javascript 29423 . 29439) (nil part-token string 29423 . 29439) (nil font-lock-face web-mode-javascript-string-face 29423 . 29439) (nil part-side javascript 29422 . 29423) (nil part-token string 29422 . 29423) (nil syntax-table (15) 29422 . 29423) (nil font-lock-face web-mode-javascript-string-face 29422 . 29423) (nil part-side javascript 29421 . 29422) (nil face (rainbow-delimiters-depth-5-face) 29421 . 29422) (nil part-side javascript 29417 . 29421) (nil face web-mode-function-call-face 29417 . 29421) (nil part-side javascript 29408 . 29417) (nil part-side javascript 29404 . 29408) (nil face web-mode-constant-face 29404 . 29408) (nil part-side javascript 29391 . 29404) (nil part-side javascript 29390 . 29391) (nil face (rainbow-delimiters-depth-5-face) 29390 . 29391) (nil part-side javascript 29389 . 29390) (nil face (rainbow-delimiters-depth-6-face) 29389 . 29390) (nil part-side javascript 29385 . 29389) (nil part-side javascript 29384 . 29385) (nil face (rainbow-delimiters-depth-6-face) 29384 . 29385) (nil part-side javascript 29383 . 29384) (nil face (rainbow-delimiters-depth-5-face) 29383 . 29384) (nil part-side javascript 29376 . 29383) (nil face web-mode-function-call-face 29376 . 29383) (nil part-side javascript 29352 . 29376) (nil part-side javascript 29351 . 29352) (nil syntax-table (12) 29351 . 29352) (nil part-side javascript 29337 . 29351) (nil part-token comment 29337 . 29351) (nil font-lock-face web-mode-javascript-comment-face 29337 . 29351) (nil part-side javascript 29335 . 29337) (nil part-token comment 29335 . 29337) (nil font-lock-face web-mode-javascript-comment-face 29335 . 29337) (nil part-side javascript 29324 . 29335) (nil part-token comment 29324 . 29335) (nil font-lock-face web-mode-javascript-comment-face 29324 . 29335) (nil part-side javascript 29323 . 29324) (nil part-token comment 29323 . 29324) (nil syntax-table (11) 29323 . 29324) (nil font-lock-face web-mode-javascript-comment-face 29323 . 29324) (nil part-side javascript 29310 . 29323) (nil part-side javascript 29309 . 29310) (nil face (rainbow-delimiters-depth-4-face) 29309 . 29310) (nil part-side javascript 29308 . 29309) (nil part-side javascript 29307 . 29308) (nil face (rainbow-delimiters-depth-4-face) 29307 . 29308) (nil part-side javascript 29303 . 29307) (nil part-side javascript 29302 . 29303) (nil face (rainbow-delimiters-depth-4-face) 29302 . 29303) (nil part-side javascript 29301 . 29302) (nil part-side javascript 29299 . 29301) (nil face web-mode-keyword-face 29299 . 29301) (29299 . 31179)) nil (25673 10399 782527 706000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -31102) (#("  " 0 2 (part-side javascript)) . -31091) (#("  " 0 2 (part-side javascript)) . -31043) (#("  " 0 2 (part-side javascript)) . -30981) (#("  " 0 2 (part-side javascript)) . -30940) (#("  " 0 2 (part-side javascript)) . -30870) (#("  " 0 2 (part-side javascript)) . -30795) (#("  " 0 2 (part-side javascript)) . -30715) (#("  " 0 2 (part-side javascript)) . -30662) (#("  " 0 2 (part-side javascript)) . -30647) (#("  " 0 2 (part-side javascript)) . -30633) (#("  " 0 2 (part-side javascript)) . -30617) (#("  " 0 2 (part-side javascript)) . -30578) (#("  " 0 2 (part-side javascript)) . -30530) (#("  " 0 2 (part-side javascript)) . -30446) (#("  " 0 2 (part-side javascript)) . -30377) (#("  " 0 2 (part-side javascript)) . -30348) (#("  " 0 2 (part-side javascript)) . -30294) (#("  " 0 2 (part-side javascript)) . -30237) (#("  " 0 2 (part-side javascript)) . -30164) (#("  " 0 2 (part-side javascript)) . -30106) (#("  " 0 2 (part-side javascript)) . -30028) (#("  " 0 2 (part-side javascript)) . -30015) (#("  " 0 2 (part-side javascript)) . -29962) (#("  " 0 2 (part-side javascript)) . -29854) (#("  " 0 2 (part-side javascript)) . -29804) (#("  " 0 2 (part-side javascript)) . -29754) (#("  " 0 2 (part-side javascript)) . -29697) (#("  " 0 2 (part-side javascript)) . -29661) (#("  " 0 2 (part-side javascript)) . -29624) (#("  " 0 2 (part-side javascript)) . -29572) (#("  " 0 2 (part-side javascript)) . -29534) (#("  " 0 2 (part-side javascript)) . -29471) (#("  " 0 2 (part-side javascript)) . -29454) (#("  " 0 2 (part-side javascript)) . -29444) (#("  " 0 2 (part-side javascript)) . -29398) (#("  " 0 2 (part-side javascript)) . -29360) (#("  " 0 2 (part-side javascript)) . -29321) 29254) nil (25673 10399 782357 745000) 0 nil])
([nil nil ((#("
        authservice.selDate([date])
        this.$router.push('analysis_network')" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 28 (part-side javascript face web-mode-function-call-face) 28 29 (part-side javascript face (rainbow-delimiters-depth-4-face)) 29 30 (part-side javascript face (rainbow-delimiters-depth-5-face)) 30 34 (part-side javascript) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face)) 35 36 (part-side javascript face (rainbow-delimiters-depth-4-face)) 36 37 (part-side javascript) 37 45 (part-side javascript) 45 49 (part-side javascript face web-mode-constant-face) 49 58 (part-side javascript) 58 62 (part-side javascript face web-mode-function-call-face) 62 63 (part-side javascript face (rainbow-delimiters-depth-4-face)) 63 64 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 64 80 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 80 81 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 81 82 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 31103) (undo-tree-id124 . -82) (undo-tree-id125 . -1) (undo-tree-id126 . -82)) nil (25673 10399 782347 542000) 0 nil])
([nil nil ((28926 . 28935)) nil (25673 10399 782343 82000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -28926) (undo-tree-id115 . -1) (#("o" 0 1 (part-side javascript)) . -28927) (undo-tree-id116 . -1) (#("g" 0 1 (part-side javascript)) . -28928) (undo-tree-id117 . -1) (#("t" 0 1 (part-side javascript)) . -28929) (undo-tree-id118 . -1) (#("y" 0 1 (part-side javascript)) . -28930) (undo-tree-id119 . -1) (#("p" 0 1 (part-side javascript)) . -28931) (undo-tree-id120 . -1) (#("e" 0 1 (part-side javascript)) . -28932) (undo-tree-id121 . -1) (#("," 0 1 (part-side javascript)) . -28933) (undo-tree-id122 . -1) (#(" " 0 1 (part-side javascript)) . -28934) (undo-tree-id123 . -1) 28935) nil (25673 10399 782340 217000) 0 nil])
([nil nil ((#("logtype" 0 7 (part-side javascript)) . 29940) (undo-tree-id113 . -7) (undo-tree-id114 . -7)) nil (25673 10399 782325 442000) 0 nil])
([nil nil ((29940 . 29942)) nil (25673 10399 782314 937000) 0 nil])
([nil nil ((29941 . 29945)) nil (25673 10399 782311 493000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript face whitespace-trailing)) . -29054) (undo-tree-id112 . -8) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face face whitespace-trailing)) . -29000) 30088) nil (25673 10399 782303 926000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 28979) (undo-tree-id197 . -1) (t 25673 10399 903258 261000)) nil (25673 10439 863636 217000) 0 nil])
([nil nil ((#("        if (date) {
          // Set date in analysis tool
          authservice.selDate([date])
          this.$router.push('analysis_network')
        }
        else {" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-4-face)) 12 16 (part-side javascript) 16 17 (part-side javascript face (rainbow-delimiters-depth-4-face)) 17 18 (part-side javascript) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 20 (part-side javascript) 20 30 (part-side javascript) 30 31 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 31 42 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 42 44 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 44 58 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 58 59 (part-side javascript syntax-table (12)) 59 81 (part-side javascript) 81 88 (part-side javascript face web-mode-function-call-face) 88 89 (part-side javascript face (rainbow-delimiters-depth-5-face)) 89 90 (part-side javascript face (rainbow-delimiters-depth-6-face)) 90 94 (part-side javascript) 94 95 (part-side javascript face (rainbow-delimiters-depth-6-face)) 95 96 (part-side javascript face (rainbow-delimiters-depth-5-face)) 96 97 (part-side javascript) 97 107 (part-side javascript) 107 111 (part-side javascript face web-mode-constant-face) 111 120 (part-side javascript) 120 124 (part-side javascript face web-mode-function-call-face) 124 125 (part-side javascript face (rainbow-delimiters-depth-5-face)) 125 126 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 126 142 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 142 143 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 143 144 (part-side javascript face (rainbow-delimiters-depth-5-face)) 144 145 (part-side javascript) 145 153 (part-side javascript) 153 154 (part-side javascript face (rainbow-delimiters-depth-4-face)) 154 155 (part-side javascript) 155 163 (part-side javascript) 163 167 (part-side javascript face web-mode-keyword-face) 167 168 (part-side javascript) 168 169 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 29281) (undo-tree-id192 . -169) (undo-tree-id193 . -20) (undo-tree-id194 . -8) (undo-tree-id195 . -154) (undo-tree-id196 . -169)) nil (25673 10439 863633 397000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript syntax-table (12))) . -29280) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 29281) nil (25673 10439 863627 162000) 0 nil])
([nil nil ((#("}" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face))) . -30921) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 30922) nil (25673 10439 863620 354000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -30846) (#("  " 0 2 (part-side javascript)) . -30800) (#("  " 0 2 (part-side javascript)) . -30740) (#("  " 0 2 (part-side javascript)) . -30701) (#("  " 0 2 (part-side javascript)) . -30633) (#("  " 0 2 (part-side javascript)) . -30560) (#("  " 0 2 (part-side javascript)) . -30482) (#("  " 0 2 (part-side javascript)) . -30431) (#("  " 0 2 (part-side javascript)) . -30418) (#("  " 0 2 (part-side javascript)) . -30406) (#("  " 0 2 (part-side javascript)) . -30392) (#("  " 0 2 (part-side javascript)) . -30355) (#("  " 0 2 (part-side javascript)) . -30309) (#("  " 0 2 (part-side javascript)) . -30227) (#("  " 0 2 (part-side javascript)) . -30160) (#("  " 0 2 (part-side javascript)) . -30133) (#("  " 0 2 (part-side javascript)) . -30081) (#("  " 0 2 (part-side javascript)) . -30026) (#("  " 0 2 (part-side javascript)) . -29955) (#("  " 0 2 (part-side javascript)) . -29899) (#("  " 0 2 (part-side javascript)) . -29823) (#("  " 0 2 (part-side javascript)) . -29812) (#("  " 0 2 (part-side javascript)) . -29761) (#("  " 0 2 (part-side javascript)) . -29656) (#("  " 0 2 (part-side javascript)) . -29608) (#("  " 0 2 (part-side javascript)) . -29560) (#("  " 0 2 (part-side javascript)) . -29505) (#("  " 0 2 (part-side javascript)) . -29471) (#("  " 0 2 (part-side javascript)) . -29436) (#("  " 0 2 (part-side javascript)) . -29386) (#("  " 0 2 (part-side javascript)) . -29350) (#("  " 0 2 (part-side javascript)) . -29289) 29244) nil (25673 10439 863611 238000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 30848) (undo-tree-id183 . -1)) nil (25673 10439 863602 282000) 0 nil])
([nil nil ((#(", date = ''" 0 9 (part-side javascript) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 28965) (undo-tree-id181 . -11) (undo-tree-id182 . -11)) nil (25673 10439 863598 599000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript face whitespace-trailing)) . -30837) (undo-tree-id179 . -8) (undo-tree-id180 . -8) 28965) nil (25673 10502 924031 220000) 0 nil])
([nil nil ((#(")" 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -5472) (undo-tree-id248 . -1) 5473 (t 25673 10571 586830 268000)) nil (25673 10587 276699 947000) 0 nil] [nil nil ((#("                <v-btn
                  dark
                  small
                  color=\"blue\"
                  @click=\"setAnalysisToolValues(item['Firm Name'], item['Firm ID'], item['Sensor Name']), item['Sensor ID'])\"
                >
                  <v-icon dark>mdi-border-color</v-icon>
                </v-btn>" 16 17 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 17 22 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 41 (tag-name "v-btn" tag-type start) 41 42 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 42 44 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 45 64 (tag-name "v-btn" tag-type start) 64 65 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 65 68 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 68 69 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 69 88 (tag-name "v-btn" tag-type start) 88 89 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 89 93 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 93 94 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 94 99 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 99 100 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 100 119 (tag-name "v-btn" tag-type start) 119 120 (block-beg 0 block-controls nil block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 121 122 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 122 123 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 123 124 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 124 125 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 125 126 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 126 127 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 127 148 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-function-call-face) 148 149 (block-side t tag-attr t tag-name "v-btn" tag-type start) 149 150 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 150 151 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 151 152 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 152 153 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 153 155 (block-side t tag-attr t tag-name "v-btn" tag-type start) 155 156 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 156 157 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 157 158 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 158 159 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 159 160 (block-side t tag-attr t tag-name "v-btn" tag-type start) 160 161 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 161 162 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 162 163 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 163 164 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 164 165 (block-side t tag-attr t tag-name "v-btn" tag-type start) 165 166 (block-side t tag-attr t tag-name "v-btn" tag-type start) 166 167 (block-side t tag-attr t tag-name "v-btn" tag-type start) 167 168 (block-side t tag-attr t tag-name "v-btn" tag-type start) 168 169 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 169 170 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 170 171 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 171 172 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 172 173 (block-side t tag-attr t tag-name "v-btn" tag-type start) 173 174 (block-side t tag-attr t tag-name "v-btn" tag-type start) 174 175 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 175 176 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 176 177 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 177 178 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 178 179 (block-side t tag-attr t tag-name "v-btn" tag-type start) 179 180 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 180 181 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 181 182 (block-side t tag-attr t tag-name "v-btn" tag-type start) 182 183 (rear-nonsticky t block-side t tag-attr t tag-name "v-btn" tag-type start) 183 184 (block-side t tag-attr t tag-name "v-btn" tag-type start) 184 185 (block-side t tag-attr t tag-name "v-btn" tag-type start) 185 186 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 186 187 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 187 188 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 188 189 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 189 190 (block-side t tag-attr t tag-name "v-btn" tag-type start) 190 191 (block-side t tag-attr t tag-name "v-btn" tag-type start) 191 192 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 192 193 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 193 194 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 194 195 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 195 196 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 196 197 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 197 198 (block-side t tag-attr t tag-name "v-btn" tag-type start) 198 199 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 199 200 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 200 201 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 201 202 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 202 203 (block-side t tag-attr t tag-name "v-btn" tag-type start) 203 204 (rear-nonsticky t block-side t tag-attr t tag-name "v-btn" tag-type start) 204 205 (block-side t tag-attr t tag-name "v-btn" tag-type start) 205 206 (block-side t tag-attr t tag-name "v-btn" tag-type start) 206 207 (block-side t tag-attr t tag-name "v-btn" tag-type start) 207 208 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 208 209 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 209 210 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 210 211 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 211 212 (block-side t tag-attr t tag-name "v-btn" tag-type start) 212 213 (block-side t tag-attr t tag-name "v-btn" tag-type start) 213 214 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 214 215 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 215 216 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 216 217 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 217 218 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 218 219 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 219 220 (block-side t tag-attr t tag-name "v-btn" tag-type start) 220 221 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 221 222 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 222 223 (block-side t tag-attr t tag-name "v-btn" tag-type start) 223 224 (rear-nonsticky t block-side t tag-attr t tag-name "v-btn" tag-type start) 224 225 (block-side t tag-attr t tag-name "v-btn" tag-type start) 225 226 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 226 243 (tag-name "v-btn" tag-type start) 243 244 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 263 264 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 264 270 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 270 271 (tag-name "v-icon" tag-type start) 271 272 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 272 274 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 274 275 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 275 276 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 292 293 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 293 294 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 294 300 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 300 301 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 318 319 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 319 320 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 320 325 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 325 326 (rear-nonsticky t tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5268) (undo-tree-id243 . -326) (undo-tree-id244 . -149) (undo-tree-id245 . -226) (undo-tree-id246 . -23) (undo-tree-id247 . -326)) ((5268 . 5594) (t 25673 10497 627008 579000)) (25673 10497 509575 630000) 0 nil] [nil nil ((#("      setAnalysisToolValues(firmName, firmID, sensorName, sensorVal) {
        // Set firm
        authservice.selAdminUser([firmName, firmID])

        // Set selected sensor
        authservice.selProbe([sensorName, sensorVal])

        // Set log type
        //authservice.selLog([0, [{label: logtype, value: logtype}], logtype])

        // Set date in analysis tool
        // Ready call for all months in the retention period
        const cur_date = new Date()
        let yyyy = String(cur_date.getFullYear())
        const retention_months = 3
        const data_available = []
        for (let i = 0; i < retention_months; i++) {
          const month = cur_date.getMonth() + 1
          yyyy = String(cur_date.getFullYear())
          data_available.push(authservice.getPossibleDates(sensorVal, null, yyyy + '-' + month, 'conn'))
          cur_date.setMonth(cur_date.getMonth() - 1)
        }

        // Wait for all calls to getPossibleDates and find most recent date
        Promise.all(data_available).then(results => {
          let most_recent = new Date(-8640000000000000) // Oldest date
          for (let i = 0; i < results.length; i++) {
            const dates = results[i].data.Available
            if (dates) {
              // Find maximum day with available data within month
              const max_date = Math.max(...dates.map(d => new Date(d).getTime()))
              if (max_date > most_recent) {
                most_recent = max_date
              }
            }
          }

          // Build date string with leading zeroes
          const mm = ('0' + (new Date(most_recent).getMonth() + 1)).slice(-2)
          const dd = ('0' + (new Date(most_recent).getDate())).slice(-2)
          const year = String(new Date(most_recent).getFullYear())

          // Set date in analysis tool
          authservice.selDate([year + '-' + mm + '-' + dd])
          this.$router.push('analysis_network')
        })
      }," 0 6 (part-side javascript) 6 27 (part-side javascript face web-mode-function-name-face) 27 28 (part-side javascript face (rainbow-delimiters-depth-3-face)) 28 67 (part-side javascript) 67 68 (part-side javascript face (rainbow-delimiters-depth-3-face)) 68 69 (part-side javascript) 69 70 (part-side javascript face (rainbow-delimiters-depth-3-face)) 70 71 (part-side javascript) 71 79 (part-side javascript) 79 80 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 80 81 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 81 85 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 85 86 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 86 90 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 90 91 (part-side javascript syntax-table (12)) 91 99 (part-side javascript) 99 111 (part-side javascript) 111 123 (part-side javascript face web-mode-function-call-face) 123 124 (part-side javascript face (rainbow-delimiters-depth-4-face)) 124 125 (part-side javascript face (rainbow-delimiters-depth-5-face)) 125 133 (part-side javascript) 133 141 (part-side javascript) 141 142 (part-side javascript face (rainbow-delimiters-depth-5-face)) 142 143 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face)) 143 144 (part-side javascript) 144 145 (part-side javascript) 145 153 (part-side javascript) 153 154 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 154 175 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 175 176 (part-side javascript syntax-table (12)) 176 196 (part-side javascript) 196 204 (part-side javascript face web-mode-function-call-face) 204 205 (part-side javascript face (rainbow-delimiters-depth-4-face)) 205 206 (part-side javascript face (rainbow-delimiters-depth-5-face)) 206 227 (part-side javascript) 227 228 (part-side javascript face (rainbow-delimiters-depth-5-face)) 228 229 (part-side javascript face (rainbow-delimiters-depth-4-face)) 229 230 (part-side javascript) 230 239 (part-side javascript) 239 240 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 240 250 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 250 254 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 254 255 (part-side javascript syntax-table (12)) 255 263 (part-side javascript) 263 264 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 264 277 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 277 283 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 283 284 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 284 285 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 285 288 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 288 289 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 289 290 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 290 295 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 295 306 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 306 311 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 311 320 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 320 321 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 321 322 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 322 331 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 331 332 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 332 333 (rear-nonsticky t part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 333 334 (part-side javascript syntax-table (12)) 334 335 (part-side javascript) 335 343 (part-side javascript) 343 344 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 344 355 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 355 357 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 357 371 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 371 372 (part-side javascript syntax-table (12)) 372 380 (part-side javascript) 380 381 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 381 394 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 394 397 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 397 409 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 409 411 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 411 432 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 432 433 (part-side javascript syntax-table (12)) 433 441 (part-side javascript) 441 446 (part-side javascript face web-mode-keyword-face) 446 447 (part-side javascript) 447 455 (part-side javascript face web-mode-variable-name-face) 455 458 (part-side javascript) 458 461 (part-side javascript face web-mode-keyword-face) 461 462 (part-side javascript) 462 466 (part-side javascript face web-mode-type-face) 466 467 (part-side javascript face (rainbow-delimiters-depth-4-face)) 467 468 (part-side javascript face (rainbow-delimiters-depth-4-face)) 468 469 (part-side javascript) 469 477 (part-side javascript) 477 480 (part-side javascript face web-mode-keyword-face) 480 481 (part-side javascript) 481 485 (part-side javascript face web-mode-variable-name-face) 485 488 (part-side javascript) 488 494 (part-side javascript face web-mode-function-call-face) 494 495 (part-side javascript face (rainbow-delimiters-depth-4-face)) 495 504 (part-side javascript) 504 515 (part-side javascript face web-mode-function-call-face) 515 516 (part-side javascript face (rainbow-delimiters-depth-5-face)) 516 517 (part-side javascript face (rainbow-delimiters-depth-5-face)) 517 518 (part-side javascript face (rainbow-delimiters-depth-4-face)) 518 519 (part-side javascript) 519 527 (part-side javascript) 527 532 (part-side javascript face web-mode-keyword-face) 532 533 (part-side javascript) 533 549 (part-side javascript face web-mode-variable-name-face) 549 562 (part-side javascript) 562 567 (part-side javascript face web-mode-keyword-face) 567 568 (part-side javascript) 568 582 (part-side javascript face web-mode-variable-name-face) 582 585 (part-side javascript) 585 586 (part-side javascript face (rainbow-delimiters-depth-4-face)) 586 587 (part-side javascript face (rainbow-delimiters-depth-4-face)) 587 596 (part-side javascript) 596 599 (part-side javascript face web-mode-keyword-face) 599 600 (part-side javascript) 600 601 (part-side javascript face (rainbow-delimiters-depth-4-face)) 601 604 (part-side javascript face web-mode-keyword-face) 604 605 (part-side javascript) 605 606 (part-side javascript face web-mode-variable-name-face) 606 637 (part-side javascript) 637 638 (part-side javascript face (rainbow-delimiters-depth-4-face)) 638 639 (part-side javascript) 639 640 (part-side javascript face (rainbow-delimiters-depth-4-face)) 640 641 (part-side javascript) 641 651 (part-side javascript) 651 656 (part-side javascript face web-mode-keyword-face) 656 657 (part-side javascript) 657 662 (part-side javascript face web-mode-variable-name-face) 662 674 (part-side javascript) 674 682 (part-side javascript face web-mode-function-call-face) 682 683 (part-side javascript face (rainbow-delimiters-depth-5-face)) 683 684 (part-side javascript face (rainbow-delimiters-depth-5-face)) 684 706 (part-side javascript) 706 712 (part-side javascript face web-mode-function-call-face) 712 713 (part-side javascript face (rainbow-delimiters-depth-5-face)) 713 722 (part-side javascript) 722 733 (part-side javascript face web-mode-function-call-face) 733 734 (part-side javascript face (rainbow-delimiters-depth-6-face)) 734 735 (part-side javascript face (rainbow-delimiters-depth-6-face)) 735 736 (part-side javascript face (rainbow-delimiters-depth-5-face)) 736 737 (part-side javascript) 737 762 (part-side javascript) 762 766 (part-side javascript face web-mode-function-call-face) 766 767 (part-side javascript face (rainbow-delimiters-depth-5-face)) 767 779 (part-side javascript) 779 795 (part-side javascript face web-mode-function-call-face) 795 796 (part-side javascript face (rainbow-delimiters-depth-6-face)) 796 807 (part-side javascript) 807 811 (part-side javascript face web-mode-constant-face) 811 820 (part-side javascript) 820 821 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 821 822 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 822 823 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 823 833 (part-side javascript) 833 834 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 834 838 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 838 839 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 839 840 (part-side javascript face (rainbow-delimiters-depth-6-face)) 840 841 (part-side javascript face (rainbow-delimiters-depth-5-face)) 841 842 (part-side javascript) 842 861 (part-side javascript) 861 869 (part-side javascript face web-mode-function-call-face) 869 870 (part-side javascript face (rainbow-delimiters-depth-5-face)) 870 879 (part-side javascript) 879 887 (part-side javascript face web-mode-function-call-face) 887 888 (part-side javascript face (rainbow-delimiters-depth-6-face)) 888 889 (part-side javascript face (rainbow-delimiters-depth-6-face)) 889 893 (part-side javascript) 893 894 (part-side javascript face (rainbow-delimiters-depth-5-face)) 894 895 (part-side javascript) 895 903 (part-side javascript) 903 904 (part-side javascript face (rainbow-delimiters-depth-4-face)) 904 905 (part-side javascript) 905 914 (part-side javascript) 914 915 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 915 922 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 922 925 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 925 981 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 981 982 (part-side javascript syntax-table (12)) 982 998 (part-side javascript) 998 1001 (part-side javascript face web-mode-function-call-face) 1001 1002 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1002 1016 (part-side javascript) 1016 1017 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1017 1018 (part-side javascript) 1018 1022 (part-side javascript face web-mode-function-call-face) 1022 1023 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1023 1030 (part-side javascript face web-mode-function-name-face) 1030 1034 (part-side javascript) 1034 1035 (part-side javascript face (rainbow-delimiters-depth-5-face)) 1035 1036 (part-side javascript) 1036 1046 (part-side javascript) 1046 1049 (part-side javascript face web-mode-keyword-face) 1049 1050 (part-side javascript) 1050 1061 (part-side javascript face web-mode-variable-name-face) 1061 1064 (part-side javascript) 1064 1067 (part-side javascript face web-mode-keyword-face) 1067 1068 (part-side javascript) 1068 1072 (part-side javascript face web-mode-type-face) 1072 1073 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1073 1090 (part-side javascript) 1090 1091 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1091 1092 (part-side javascript) 1092 1093 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1093 1106 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1106 1107 (part-side javascript syntax-table (12)) 1107 1117 (part-side javascript) 1117 1120 (part-side javascript face web-mode-keyword-face) 1120 1121 (part-side javascript) 1121 1122 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1122 1125 (part-side javascript face web-mode-keyword-face) 1125 1126 (part-side javascript) 1126 1127 (part-side javascript face web-mode-variable-name-face) 1127 1156 (part-side javascript) 1156 1157 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1157 1158 (part-side javascript) 1158 1159 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1159 1160 (part-side javascript) 1160 1172 (part-side javascript) 1172 1177 (part-side javascript face web-mode-keyword-face) 1177 1178 (part-side javascript) 1178 1183 (part-side javascript face web-mode-variable-name-face) 1183 1193 (part-side javascript) 1193 1194 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1194 1195 (part-side javascript) 1195 1196 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1196 1224 (part-side javascript) 1224 1226 (part-side javascript face web-mode-keyword-face) 1226 1227 (part-side javascript) 1227 1228 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1228 1233 (part-side javascript) 1233 1234 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1234 1235 (part-side javascript) 1235 1236 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1236 1237 (part-side javascript) 1237 1251 (part-side javascript) 1251 1252 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1252 1271 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1271 1275 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1275 1303 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1303 1304 (part-side javascript syntax-table (12)) 1304 1318 (part-side javascript) 1318 1323 (part-side javascript face web-mode-keyword-face) 1323 1324 (part-side javascript) 1324 1332 (part-side javascript face web-mode-variable-name-face) 1332 1340 (part-side javascript) 1340 1343 (part-side javascript face web-mode-function-call-face) 1343 1344 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1344 1353 (part-side javascript) 1353 1356 (part-side javascript face web-mode-function-call-face) 1356 1357 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1357 1358 (part-side javascript face web-mode-function-name-face) 1358 1362 (part-side javascript) 1362 1365 (part-side javascript face web-mode-keyword-face) 1365 1366 (part-side javascript) 1366 1370 (part-side javascript face web-mode-type-face) 1370 1371 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1371 1372 (part-side javascript) 1372 1373 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1373 1374 (part-side javascript) 1374 1381 (part-side javascript face web-mode-function-call-face) 1381 1382 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1382 1383 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1383 1384 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1384 1385 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1385 1386 (part-side javascript) 1386 1400 (part-side javascript) 1400 1402 (part-side javascript face web-mode-keyword-face) 1402 1403 (part-side javascript) 1403 1404 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1404 1426 (part-side javascript) 1426 1427 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1427 1428 (part-side javascript) 1428 1429 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1429 1430 (part-side javascript) 1430 1483 (part-side javascript) 1483 1484 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1484 1485 (part-side javascript) 1485 1497 (part-side javascript) 1497 1498 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1498 1499 (part-side javascript) 1499 1509 (part-side javascript) 1509 1510 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1510 1511 (part-side javascript) 1511 1522 (part-side javascript) 1522 1523 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1523 1543 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1543 1547 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1547 1562 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1562 1563 (part-side javascript syntax-table (12)) 1563 1573 (part-side javascript) 1573 1578 (part-side javascript face web-mode-keyword-face) 1578 1579 (part-side javascript) 1579 1581 (part-side javascript face web-mode-variable-name-face) 1581 1584 (part-side javascript) 1584 1585 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1585 1586 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1586 1587 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1587 1588 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1588 1591 (part-side javascript) 1591 1592 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1592 1595 (part-side javascript face web-mode-keyword-face) 1595 1596 (part-side javascript) 1596 1600 (part-side javascript face web-mode-type-face) 1600 1601 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1601 1612 (part-side javascript) 1612 1613 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1613 1614 (part-side javascript) 1614 1622 (part-side javascript face web-mode-function-call-face) 1622 1623 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1623 1624 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1624 1628 (part-side javascript) 1628 1629 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1629 1630 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1630 1631 (part-side javascript) 1631 1636 (part-side javascript face web-mode-function-call-face) 1636 1637 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1637 1639 (part-side javascript) 1639 1640 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1640 1641 (part-side javascript) 1641 1651 (part-side javascript) 1651 1656 (part-side javascript face web-mode-keyword-face) 1656 1657 (part-side javascript) 1657 1659 (part-side javascript face web-mode-variable-name-face) 1659 1662 (part-side javascript) 1662 1663 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1663 1664 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1664 1665 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1665 1666 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1666 1669 (part-side javascript) 1669 1670 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1670 1673 (part-side javascript face web-mode-keyword-face) 1673 1674 (part-side javascript) 1674 1678 (part-side javascript face web-mode-type-face) 1678 1679 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1679 1690 (part-side javascript) 1690 1691 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1691 1692 (part-side javascript) 1692 1699 (part-side javascript face web-mode-function-call-face) 1699 1700 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1700 1701 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1701 1702 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1702 1703 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1703 1704 (part-side javascript) 1704 1709 (part-side javascript face web-mode-function-call-face) 1709 1710 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1710 1712 (part-side javascript) 1712 1713 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1713 1714 (part-side javascript) 1714 1724 (part-side javascript) 1724 1729 (part-side javascript face web-mode-keyword-face) 1729 1730 (part-side javascript) 1730 1734 (part-side javascript face web-mode-variable-name-face) 1734 1737 (part-side javascript) 1737 1743 (part-side javascript face web-mode-function-call-face) 1743 1744 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1744 1747 (part-side javascript face web-mode-keyword-face) 1747 1748 (part-side javascript) 1748 1752 (part-side javascript face web-mode-type-face) 1752 1753 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1753 1764 (part-side javascript) 1764 1765 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1765 1766 (part-side javascript) 1766 1777 (part-side javascript face web-mode-function-call-face) 1777 1778 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1778 1779 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1779 1780 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1780 1781 (part-side javascript) 1781 1792 (part-side javascript) 1792 1793 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1793 1804 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1804 1806 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1806 1820 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1820 1821 (part-side javascript syntax-table (12)) 1821 1843 (part-side javascript) 1843 1850 (part-side javascript face web-mode-function-call-face) 1850 1851 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1851 1852 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1852 1859 (part-side javascript) 1859 1860 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1860 1861 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1861 1862 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1862 1870 (part-side javascript) 1870 1871 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1871 1872 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1872 1873 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1873 1878 (part-side javascript) 1878 1879 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1879 1880 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1880 1881 (part-side javascript) 1881 1891 (part-side javascript) 1891 1895 (part-side javascript face web-mode-constant-face) 1895 1904 (part-side javascript) 1904 1908 (part-side javascript face web-mode-function-call-face) 1908 1909 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1909 1910 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1910 1926 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1926 1927 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1927 1928 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1928 1929 (part-side javascript) 1929 1937 (part-side javascript) 1937 1938 (part-side javascript face (rainbow-delimiters-depth-5-face)) 1938 1939 (part-side javascript face (rainbow-delimiters-depth-4-face)) 1939 1940 (part-side javascript) 1940 1946 (part-side javascript) 1946 1947 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-3-face)) 1947 1948 (part-side javascript)) . 28898) (undo-tree-id225 . -1948) (undo-tree-id226 . -6) (undo-tree-id227 . -52) (undo-tree-id228 . -128) (undo-tree-id229 . -70) (undo-tree-id230 . -838) (undo-tree-id231 . -71) (undo-tree-id232 . -371) (undo-tree-id233 . -1939) (undo-tree-id234 . -1939) (undo-tree-id235 . -838) (undo-tree-id236 . -833) (undo-tree-id237 . -144) (undo-tree-id238 . -371) (undo-tree-id239 . -371) (undo-tree-id240 . -1939) (undo-tree-id241 . -67) (undo-tree-id242 . -1948) (t 25673 10439 983153 756000)) ((28898 . 30846)) (25673 10478 640012 790000) 0 nil])
([nil nil ((#("null" 0 4 (part-side javascript face web-mode-constant-face)) . 29704) (undo-tree-id249 . -4) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (t 25673 10587 390793 214000)) nil (25673 10685 794852 403000) 0 nil])
nil
([nil nil ((#("
" 0 1 (part-side javascript)) . -28897) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id217 . -1) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) 28898) ((28897 . 28898) (t 25673 10468 835080 367000)) (25673 10468 720485 873000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29709 . 29710) (nil part-side javascript 29704 . 29710) (29704 . 29710)) nil (25673 10685 794833 692000) 0 nil])
nil
([nil nil ((30790 . 30792) (t 25673 10685 910569 631000)) nil (25673 10739 93710 115000) 0 nil])
([nil nil ((30681 . 30691) (#("          " 0 10 (part-side javascript)) . 30680) (undo-tree-id259 . -10) (30679 . 30691)) nil (25673 10739 93708 350000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 30698) (30697 . 30698) (30696 . 30698) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -30696) (30691 . 30697)) nil (25673 10739 93704 965000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript face web-mode-function-call-face)) . 30691) (#("r" 0 1 (part-side javascript face web-mode-function-call-face)) . 30691) (#("p" 0 1 (part-side javascript face web-mode-function-call-face)) . 30691)) nil (25673 10739 93702 426000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 30691) (undo-tree-id258 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 30691) (#("t" 0 1 (part-side javascript face web-mode-function-call-face)) . 30691) (#("n" 0 1 (part-side javascript face web-mode-function-call-face)) . 30691)) nil (25673 10739 93699 844000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 30704) (undo-tree-id255 . -1) (30703 . 30704) (30702 . 30704) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -30702) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (30691 . 30703)) nil (25673 10739 93694 943000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30728 . 30729) (nil part-side javascript 30724 . 30729) (nil part-side javascript 30723 . 30724) (nil part-token string 30723 . 30724) (nil syntax-table (15) 30723 . 30724) (nil font-lock-face web-mode-javascript-string-face 30723 . 30724) (nil part-side javascript 30722 . 30723) (nil part-token string 30722 . 30723) (nil font-lock-face web-mode-javascript-string-face 30722 . 30723) (nil part-side javascript 30721 . 30722) (nil part-token string 30721 . 30722) (nil syntax-table (15) 30721 . 30722) (nil font-lock-face web-mode-javascript-string-face 30721 . 30722) (nil part-side javascript 30713 . 30721) (nil part-side javascript 30712 . 30713) (nil part-token string 30712 . 30713) (nil syntax-table (15) 30712 . 30713) (nil font-lock-face web-mode-javascript-string-face 30712 . 30713) (nil part-side javascript 30711 . 30712) (nil part-token string 30711 . 30712) (nil font-lock-face web-mode-javascript-string-face 30711 . 30712) (nil part-side javascript 30710 . 30711) (nil part-token string 30710 . 30711) (nil syntax-table (15) 30710 . 30711) (nil font-lock-face web-mode-javascript-string-face 30710 . 30711) (nil part-side javascript 30703 . 30710) (30703 . 30729)) nil (25673 10739 93675 728000) 0 nil])
([nil nil ((30409 . 30420) (t 25673 10739 214453 420000)) nil (25673 10900 89672 665000) 0 nil])
([nil nil ((30420 . 30422)) nil (25673 10900 89671 103000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -30420) (undo-tree-id290 . -1) (#("n" 0 1 (part-side javascript)) . -30421) (undo-tree-id291 . -1) 30422) nil (25673 10900 89669 741000) 0 nil])
([nil nil ((30420 . 30432)) nil (25673 10900 89664 795000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -30431) (undo-tree-id289 . -1) 30432) nil (25673 10900 89663 506000) 0 nil])
([nil nil ((#("        // Set log type
        //authservice.selLog([0, [{label: logtype, value: logtype}], logtype])

        // Set date in analysis tool
        // Ready call for all months in the retention period
        const cur_date = new Date()
        let yyyy = String(cur_date.getFullYear())
        const retention_months = 3
        const data_available = []
        for (let i = 0; i < retention_months; i++) {
          const month = cur_date.getMonth() + 1
          yyyy = String(cur_date.getFullYear())
          data_available.push(authservice.getPossibleDates(sensorVal, firmID, yyyy + '-' + month, 'conn'))
          cur_date.setMonth(cur_date.getMonth() - 1)
        }

        // Wait for all calls to getPossibleDates and find most recent date
        Promise.all(data_available).then(results => {
          let most_recent = new Date(-8640000000000000) // Oldest date
          for (let i = 0; i < results.length; i++) {
            const dates = results[i].data.Available
            if (dates) {
              // Find maximum day with available data within month
              const max_date = Math.max(...dates.map(d => new Date(d).getTime()))
              if (max_date > most_recent) {
                most_recent = max_date
              }
            }
          }
          console.log

          // Build date string with leading zeroes
          const mm = ('0' + (new Date(most_recent).getMonth() + 1)).slice(-2)
          const dd = ('0' + (new Date(most_recent).getDate())).slice(-2)
          const year = String(new Date(most_recent).getFullYear())

          console.log(year + '-' + mm + '-' + dd)" 0 8 (part-side javascript) 8 9 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 9 19 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 19 23 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 23 24 (part-side javascript syntax-table (12)) 24 32 (part-side javascript) 32 33 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 33 46 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 46 52 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 52 53 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 53 54 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 54 57 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 57 58 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 58 59 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 59 64 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 64 75 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 75 80 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 80 89 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 89 90 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 90 91 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 91 100 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 100 101 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 101 102 (rear-nonsticky t part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 102 103 (part-side javascript syntax-table (12)) 103 104 (part-side javascript) 104 112 (part-side javascript) 112 113 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 113 124 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 124 126 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 126 140 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 140 141 (part-side javascript syntax-table (12)) 141 149 (part-side javascript) 149 150 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 150 163 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 163 166 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 166 178 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 178 180 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 180 201 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 201 202 (part-side javascript syntax-table (12)) 202 210 (part-side javascript) 210 215 (part-side javascript face web-mode-keyword-face) 215 216 (part-side javascript) 216 224 (part-side javascript face web-mode-variable-name-face) 224 227 (part-side javascript) 227 230 (part-side javascript face web-mode-keyword-face) 230 231 (part-side javascript) 231 235 (part-side javascript face web-mode-type-face) 235 236 (part-side javascript face (rainbow-delimiters-depth-4-face)) 236 237 (part-side javascript face (rainbow-delimiters-depth-4-face)) 237 238 (part-side javascript) 238 246 (part-side javascript) 246 249 (part-side javascript face web-mode-keyword-face) 249 250 (part-side javascript) 250 254 (part-side javascript face web-mode-variable-name-face) 254 257 (part-side javascript) 257 263 (part-side javascript face web-mode-function-call-face) 263 264 (part-side javascript face (rainbow-delimiters-depth-4-face)) 264 273 (part-side javascript) 273 284 (part-side javascript face web-mode-function-call-face) 284 285 (part-side javascript face (rainbow-delimiters-depth-5-face)) 285 286 (part-side javascript face (rainbow-delimiters-depth-5-face)) 286 287 (part-side javascript face (rainbow-delimiters-depth-4-face)) 287 288 (part-side javascript) 288 296 (part-side javascript) 296 301 (part-side javascript face web-mode-keyword-face) 301 302 (part-side javascript) 302 318 (part-side javascript face web-mode-variable-name-face) 318 331 (part-side javascript) 331 336 (part-side javascript face web-mode-keyword-face) 336 337 (part-side javascript) 337 351 (part-side javascript face web-mode-variable-name-face) 351 354 (part-side javascript) 354 355 (part-side javascript face (rainbow-delimiters-depth-4-face)) 355 356 (part-side javascript face (rainbow-delimiters-depth-4-face)) 356 365 (part-side javascript) 365 368 (part-side javascript face web-mode-keyword-face) 368 369 (part-side javascript) 369 370 (part-side javascript face (rainbow-delimiters-depth-4-face)) 370 373 (part-side javascript face web-mode-keyword-face) 373 374 (part-side javascript) 374 375 (part-side javascript face web-mode-variable-name-face) 375 406 (part-side javascript) 406 407 (part-side javascript face (rainbow-delimiters-depth-4-face)) 407 408 (part-side javascript) 408 409 (part-side javascript face (rainbow-delimiters-depth-4-face)) 409 410 (part-side javascript) 410 420 (part-side javascript) 420 425 (part-side javascript face web-mode-keyword-face) 425 426 (part-side javascript) 426 431 (part-side javascript face web-mode-variable-name-face) 431 443 (part-side javascript) 443 451 (part-side javascript face web-mode-function-call-face) 451 452 (part-side javascript face (rainbow-delimiters-depth-5-face)) 452 453 (part-side javascript face (rainbow-delimiters-depth-5-face)) 453 475 (part-side javascript) 475 481 (part-side javascript face web-mode-function-call-face) 481 482 (part-side javascript face (rainbow-delimiters-depth-5-face)) 482 491 (part-side javascript) 491 502 (part-side javascript face web-mode-function-call-face) 502 503 (part-side javascript face (rainbow-delimiters-depth-6-face)) 503 504 (part-side javascript face (rainbow-delimiters-depth-6-face)) 504 505 (part-side javascript face (rainbow-delimiters-depth-5-face)) 505 506 (part-side javascript) 506 531 (part-side javascript) 531 535 (part-side javascript face web-mode-function-call-face) 535 536 (part-side javascript face (rainbow-delimiters-depth-5-face)) 536 548 (part-side javascript) 548 564 (part-side javascript face web-mode-function-call-face) 564 565 (part-side javascript face (rainbow-delimiters-depth-6-face)) 565 576 (part-side javascript) 576 581 (part-side javascript) 581 582 (rear-nonsticky t part-side javascript) 582 591 (part-side javascript) 591 592 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 592 593 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 593 594 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 594 604 (part-side javascript) 604 605 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 605 609 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 609 610 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 610 611 (part-side javascript face (rainbow-delimiters-depth-6-face)) 611 612 (part-side javascript face (rainbow-delimiters-depth-5-face)) 612 613 (part-side javascript) 613 632 (part-side javascript) 632 640 (part-side javascript face web-mode-function-call-face) 640 641 (part-side javascript face (rainbow-delimiters-depth-5-face)) 641 650 (part-side javascript) 650 658 (part-side javascript face web-mode-function-call-face) 658 659 (part-side javascript face (rainbow-delimiters-depth-6-face)) 659 660 (part-side javascript face (rainbow-delimiters-depth-6-face)) 660 664 (part-side javascript) 664 665 (part-side javascript face (rainbow-delimiters-depth-5-face)) 665 666 (part-side javascript) 666 674 (part-side javascript) 674 675 (part-side javascript face (rainbow-delimiters-depth-4-face)) 675 676 (part-side javascript) 676 685 (part-side javascript) 685 686 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 686 693 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 693 696 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 696 752 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 752 753 (part-side javascript syntax-table (12)) 753 769 (part-side javascript) 769 772 (part-side javascript face web-mode-function-call-face) 772 773 (part-side javascript face (rainbow-delimiters-depth-4-face)) 773 787 (part-side javascript) 787 788 (part-side javascript face (rainbow-delimiters-depth-4-face)) 788 789 (part-side javascript) 789 793 (part-side javascript face web-mode-function-call-face) 793 794 (part-side javascript face (rainbow-delimiters-depth-4-face)) 794 801 (part-side javascript face web-mode-function-name-face) 801 805 (part-side javascript) 805 806 (part-side javascript face (rainbow-delimiters-depth-5-face)) 806 807 (part-side javascript) 807 817 (part-side javascript) 817 820 (part-side javascript face web-mode-keyword-face) 820 821 (part-side javascript) 821 832 (part-side javascript face web-mode-variable-name-face) 832 835 (part-side javascript) 835 838 (part-side javascript face web-mode-keyword-face) 838 839 (part-side javascript) 839 843 (part-side javascript face web-mode-type-face) 843 844 (part-side javascript face (rainbow-delimiters-depth-6-face)) 844 861 (part-side javascript) 861 862 (part-side javascript face (rainbow-delimiters-depth-6-face)) 862 863 (part-side javascript) 863 864 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 864 877 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 877 878 (part-side javascript syntax-table (12)) 878 888 (part-side javascript) 888 891 (part-side javascript face web-mode-keyword-face) 891 892 (part-side javascript) 892 893 (part-side javascript face (rainbow-delimiters-depth-6-face)) 893 896 (part-side javascript face web-mode-keyword-face) 896 897 (part-side javascript) 897 898 (part-side javascript face web-mode-variable-name-face) 898 927 (part-side javascript) 927 928 (part-side javascript face (rainbow-delimiters-depth-6-face)) 928 929 (part-side javascript) 929 930 (part-side javascript face (rainbow-delimiters-depth-6-face)) 930 931 (part-side javascript) 931 943 (part-side javascript) 943 948 (part-side javascript face web-mode-keyword-face) 948 949 (part-side javascript) 949 954 (part-side javascript face web-mode-variable-name-face) 954 964 (part-side javascript) 964 965 (part-side javascript face (rainbow-delimiters-depth-7-face)) 965 966 (part-side javascript) 966 967 (part-side javascript face (rainbow-delimiters-depth-7-face)) 967 995 (part-side javascript) 995 997 (part-side javascript face web-mode-keyword-face) 997 998 (part-side javascript) 998 999 (part-side javascript face (rainbow-delimiters-depth-7-face)) 999 1004 (part-side javascript) 1004 1005 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1005 1006 (part-side javascript) 1006 1007 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1007 1008 (part-side javascript) 1008 1022 (part-side javascript) 1022 1023 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1023 1042 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1042 1046 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1046 1074 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1074 1075 (part-side javascript syntax-table (12)) 1075 1089 (part-side javascript) 1089 1094 (part-side javascript face web-mode-keyword-face) 1094 1095 (part-side javascript) 1095 1103 (part-side javascript face web-mode-variable-name-face) 1103 1111 (part-side javascript) 1111 1114 (part-side javascript face web-mode-function-call-face) 1114 1115 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1115 1124 (part-side javascript) 1124 1127 (part-side javascript face web-mode-function-call-face) 1127 1128 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1128 1129 (part-side javascript face web-mode-function-name-face) 1129 1133 (part-side javascript) 1133 1136 (part-side javascript face web-mode-keyword-face) 1136 1137 (part-side javascript) 1137 1141 (part-side javascript face web-mode-type-face) 1141 1142 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1142 1143 (part-side javascript) 1143 1144 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1144 1145 (part-side javascript) 1145 1152 (part-side javascript face web-mode-function-call-face) 1152 1153 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1153 1154 (part-side javascript face (rainbow-delimiters-depth-1-face)) 1154 1155 (part-side javascript face (rainbow-delimiters-depth-9-face)) 1155 1156 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1156 1157 (part-side javascript) 1157 1171 (part-side javascript) 1171 1173 (part-side javascript face web-mode-keyword-face) 1173 1174 (part-side javascript) 1174 1175 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1175 1197 (part-side javascript) 1197 1198 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1198 1199 (part-side javascript) 1199 1200 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1200 1201 (part-side javascript) 1201 1254 (part-side javascript) 1254 1255 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1255 1256 (part-side javascript) 1256 1268 (part-side javascript) 1268 1269 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1269 1270 (part-side javascript) 1270 1280 (part-side javascript) 1280 1281 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1281 1282 (part-side javascript) 1282 1303 (part-side javascript) 1303 1304 (part-side javascript) 1304 1315 (part-side javascript) 1315 1316 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1316 1336 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1336 1340 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1340 1355 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1355 1356 (part-side javascript syntax-table (12)) 1356 1366 (part-side javascript) 1366 1371 (part-side javascript face web-mode-keyword-face) 1371 1372 (part-side javascript) 1372 1374 (part-side javascript face web-mode-variable-name-face) 1374 1377 (part-side javascript) 1377 1378 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1378 1379 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1379 1380 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1380 1381 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1381 1384 (part-side javascript) 1384 1385 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1385 1388 (part-side javascript face web-mode-keyword-face) 1388 1389 (part-side javascript) 1389 1393 (part-side javascript face web-mode-type-face) 1393 1394 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1394 1405 (part-side javascript) 1405 1406 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1406 1407 (part-side javascript) 1407 1415 (part-side javascript face web-mode-function-call-face) 1415 1416 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1416 1417 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1417 1421 (part-side javascript) 1421 1422 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1422 1423 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1423 1424 (part-side javascript) 1424 1429 (part-side javascript face web-mode-function-call-face) 1429 1430 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1430 1432 (part-side javascript) 1432 1433 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1433 1434 (part-side javascript) 1434 1444 (part-side javascript) 1444 1449 (part-side javascript face web-mode-keyword-face) 1449 1450 (part-side javascript) 1450 1452 (part-side javascript face web-mode-variable-name-face) 1452 1455 (part-side javascript) 1455 1456 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1456 1457 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1457 1458 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1458 1459 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1459 1462 (part-side javascript) 1462 1463 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1463 1466 (part-side javascript face web-mode-keyword-face) 1466 1467 (part-side javascript) 1467 1471 (part-side javascript face web-mode-type-face) 1471 1472 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1472 1483 (part-side javascript) 1483 1484 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1484 1485 (part-side javascript) 1485 1492 (part-side javascript face web-mode-function-call-face) 1492 1493 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1493 1494 (part-side javascript face (rainbow-delimiters-depth-8-face)) 1494 1495 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1495 1496 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1496 1497 (part-side javascript) 1497 1502 (part-side javascript face web-mode-function-call-face) 1502 1503 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1503 1505 (part-side javascript) 1505 1506 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1506 1507 (part-side javascript) 1507 1517 (part-side javascript) 1517 1522 (part-side javascript face web-mode-keyword-face) 1522 1523 (part-side javascript) 1523 1527 (part-side javascript face web-mode-variable-name-face) 1527 1530 (part-side javascript) 1530 1536 (part-side javascript face web-mode-function-call-face) 1536 1537 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1537 1540 (part-side javascript face web-mode-keyword-face) 1540 1541 (part-side javascript) 1541 1545 (part-side javascript face web-mode-type-face) 1545 1546 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1546 1557 (part-side javascript) 1557 1558 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1558 1559 (part-side javascript) 1559 1570 (part-side javascript face web-mode-function-call-face) 1570 1571 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1571 1572 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1572 1573 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1573 1574 (part-side javascript) 1574 1575 (part-side javascript) 1575 1593 (part-side javascript) 1593 1596 (part-side javascript face web-mode-function-call-face) 1596 1597 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1597 1604 (part-side javascript) 1604 1605 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1605 1606 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1606 1607 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1607 1615 (part-side javascript) 1615 1616 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1616 1617 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 1617 1618 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1618 1622 (part-side javascript) 1622 1623 (rear-nonsticky t part-side javascript) 1623 1624 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 29128) (undo-tree-id281 . -1624) (undo-tree-id282 . -1296) (undo-tree-id283 . -1298) (undo-tree-id284 . -24) (undo-tree-id285 . -576) (undo-tree-id286 . -1585) (undo-tree-id287 . -1597) (undo-tree-id288 . -1624)) nil (25673 10900 89660 767000) 0 nil])
([nil nil ((29128 . 29136)) nil (25673 10900 89651 853000) 0 nil])
([nil nil ((29136 . 29156)) nil (25673 10900 89650 772000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -29155) (undo-tree-id280 . -1) 29156) nil (25673 10900 89649 455000) 0 nil])
([nil nil ((29155 . 29164)) nil (25673 10900 89646 456000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29458 . 29459) (nil part-side javascript 29458 . 29459) (nil part-side javascript 29457 . 29458) (nil part-token string 29457 . 29458) (nil syntax-table (15) 29457 . 29458) (nil font-lock-face web-mode-javascript-string-face 29457 . 29458) (nil part-side javascript 29443 . 29457) (nil part-token string 29443 . 29457) (nil font-lock-face web-mode-variable-name-face 29443 . 29457) (nil part-side javascript 29442 . 29443) (nil part-token string 29442 . 29443) (nil font-lock-face web-mode-javascript-string-face 29442 . 29443) (nil part-side javascript 29427 . 29442) (nil part-token string 29427 . 29442) (nil font-lock-face web-mode-variable-name-face 29427 . 29442) (nil part-side javascript 29426 . 29427) (nil part-token string 29426 . 29427) (nil font-lock-face web-mode-javascript-string-face 29426 . 29427) (nil part-side javascript 29413 . 29426) (nil part-token string 29413 . 29426) (nil font-lock-face web-mode-variable-name-face 29413 . 29426) (nil part-side javascript 29412 . 29413) (nil part-token string 29412 . 29413) (nil syntax-table (15) 29412 . 29413) (nil font-lock-face web-mode-javascript-string-face 29412 . 29413) (nil part-side javascript 29409 . 29412) (nil part-side javascript 29398 . 29409) (nil face web-mode-variable-name-face 29398 . 29409) (nil part-side javascript 29397 . 29398) (nil part-side javascript 29394 . 29397) (nil face web-mode-keyword-face 29394 . 29397) (nil part-side javascript 29393 . 29394) (nil part-side javascript 29392 . 29393) (nil syntax-table (12) 29392 . 29393) (nil part-side javascript 29391 . 29392) (nil part-token comment 29391 . 29392) (nil font-lock-face web-mode-javascript-comment-face 29391 . 29392) (nil face whitespace-trailing 29391 . 29392) (nil part-side javascript 29380 . 29391) (nil part-token comment 29380 . 29391) (nil font-lock-face web-mode-javascript-comment-face 29380 . 29391) (nil part-side javascript 29378 . 29380) (nil part-token comment 29378 . 29380) (nil font-lock-face web-mode-javascript-comment-face 29378 . 29380) (nil part-side javascript 29351 . 29378) (nil part-token comment 29351 . 29378) (nil font-lock-face web-mode-javascript-comment-face 29351 . 29378) (nil part-side javascript 29350 . 29351) (nil part-token comment 29350 . 29351) (nil syntax-table (11) 29350 . 29351) (nil font-lock-face web-mode-javascript-comment-face 29350 . 29351) (nil part-side javascript 29347 . 29350) (nil part-side javascript 29346 . 29347) (nil face (rainbow-delimiters-depth-4-face) 29346 . 29347) (nil part-side javascript 29345 . 29346) (nil face (rainbow-delimiters-depth-4-face) 29345 . 29346) (nil part-side javascript 29334 . 29345) (nil face web-mode-function-call-face 29334 . 29345) (nil part-side javascript 29326 . 29334) (nil part-side javascript 29315 . 29326) (nil face web-mode-variable-name-face 29315 . 29326) (nil part-side javascript 29314 . 29315) (nil part-side javascript 29311 . 29314) (nil face web-mode-keyword-face 29311 . 29314) (nil part-side javascript 29308 . 29311) (nil part-side javascript 29307 . 29308) (nil face (rainbow-delimiters-depth-4-face) 29307 . 29308) (nil part-side javascript 29306 . 29307) (nil part-token string 29306 . 29307) (nil syntax-table (15) 29306 . 29307) (nil font-lock-face web-mode-javascript-string-face 29306 . 29307) (nil part-side javascript 29305 . 29306) (nil part-token string 29305 . 29306) (nil font-lock-face web-mode-javascript-string-face 29305 . 29306) (nil part-side javascript 29304 . 29305) (nil part-token string 29304 . 29305) (nil syntax-table (15) 29304 . 29305) (nil font-lock-face web-mode-javascript-string-face 29304 . 29305) (nil part-side javascript 29302 . 29304) (nil part-side javascript 29301 . 29302) (nil face (rainbow-delimiters-depth-4-face) 29301 . 29302) (nil part-side javascript 29293 . 29301) (nil face web-mode-function-call-face 29293 . 29301) (nil part-side javascript 29292 . 29293) (nil part-side javascript 29291 . 29292) (nil face (rainbow-delimiters-depth-4-face) 29291 . 29292) (nil part-side javascript 29289 . 29291) (nil part-side javascript 29288 . 29289) (nil face (rainbow-delimiters-depth-5-face) 29288 . 29289) (nil part-side javascript 29287 . 29288) (nil face (rainbow-delimiters-depth-5-face) 29287 . 29288) (nil part-side javascript 29279 . 29287) (nil face web-mode-function-call-face 29279 . 29287) (nil part-side javascript 29274 . 29279) (nil part-side javascript 29273 . 29274) (nil face (rainbow-delimiters-depth-4-face) 29273 . 29274) (nil part-side javascript 29267 . 29273) (nil face web-mode-function-call-face 29267 . 29273) (nil part-side javascript 29264 . 29267) (nil part-side javascript 29252 . 29264) (nil face web-mode-variable-name-face 29252 . 29264) (nil part-side javascript 29251 . 29252) (nil part-side javascript 29248 . 29251) (nil face web-mode-keyword-face 29248 . 29251) (nil part-side javascript 29245 . 29248) (nil part-side javascript 29244 . 29245) (nil face (rainbow-delimiters-depth-4-face) 29244 . 29245) (nil part-side javascript 29243 . 29244) (nil part-token string 29243 . 29244) (nil syntax-table (15) 29243 . 29244) (nil font-lock-face web-mode-javascript-string-face 29243 . 29244) (nil part-side javascript 29242 . 29243) (nil part-token string 29242 . 29243) (nil font-lock-face web-mode-javascript-string-face 29242 . 29243) (nil part-side javascript 29241 . 29242) (nil part-token string 29241 . 29242) (nil syntax-table (15) 29241 . 29242) (nil font-lock-face web-mode-javascript-string-face 29241 . 29242) (nil part-side javascript 29238 . 29241) (nil part-side javascript 29237 . 29238) (nil face (rainbow-delimiters-depth-4-face) 29237 . 29238) (nil part-side javascript 29229 . 29237) (nil face web-mode-function-call-face 29229 . 29237) (nil part-side javascript 29228 . 29229) (nil part-side javascript 29227 . 29228) (nil face (rainbow-delimiters-depth-4-face) 29227 . 29228) (nil part-side javascript 29226 . 29227) (nil face (rainbow-delimiters-depth-5-face) 29226 . 29227) (nil part-side javascript 29225 . 29226) (nil face (rainbow-delimiters-depth-5-face) 29225 . 29226) (nil part-side javascript 29218 . 29225) (nil face web-mode-function-call-face 29218 . 29225) (nil part-side javascript 29213 . 29218) (nil part-side javascript 29212 . 29213) (nil face (rainbow-delimiters-depth-4-face) 29212 . 29213) (nil part-side javascript 29206 . 29212) (nil face web-mode-function-call-face 29206 . 29212) (nil part-side javascript 29204 . 29206) (nil part-side javascript 29194 . 29204) (nil face web-mode-variable-name-face 29194 . 29204) (nil part-side javascript 29193 . 29194) (nil part-side javascript 29190 . 29193) (nil face web-mode-keyword-face 29190 . 29193) (nil part-side javascript 29187 . 29190) (nil part-side javascript 29186 . 29187) (nil face (rainbow-delimiters-depth-4-face) 29186 . 29187) (nil part-side javascript 29185 . 29186) (nil face (rainbow-delimiters-depth-4-face) 29185 . 29186) (nil part-side javascript 29181 . 29185) (nil face web-mode-type-face 29181 . 29185) (nil part-side javascript 29180 . 29181) (nil part-side javascript 29177 . 29180) (nil face web-mode-keyword-face 29177 . 29180) (nil part-side javascript 29174 . 29177) (nil part-side javascript 29170 . 29174) (nil face web-mode-variable-name-face 29170 . 29174) (nil part-side javascript 29169 . 29170) (nil part-side javascript 29164 . 29169) (nil face web-mode-keyword-face 29164 . 29169) (29164 . 29459)) nil (25673 10900 89638 114000) 0 nil])
([nil nil ((29426 . 29434) (29374 . 29382) (29327 . 29335) (29256 . 29264) (29190 . 29198) 29156) nil (25673 10900 89598 208000) 0 nil])
([nil nil ((#("currentYear" 0 11 (part-side javascript face web-mode-variable-name-face)) . 29339) (undo-tree-id278 . -11) (undo-tree-id279 . -11)) nil (25673 10900 89595 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29342 . 29343) (nil part-side javascript 29339 . 29343) (nil face web-mode-variable-name-face 29339 . 29343) (29339 . 29343)) nil (25673 10900 89592 537000) 0 nil])
([nil nil ((#("currentMonth" 0 12 (part-side javascript face web-mode-variable-name-face)) . 29268) (undo-tree-id276 . -12) (undo-tree-id277 . -12)) nil (25673 10900 89590 579000) 0 nil])
([nil nil ((29268 . 29270)) nil (25673 10900 89587 527000) 0 nil])
([nil nil ((#("currentDay" 0 10 (part-side javascript face web-mode-variable-name-face)) . 29202) (undo-tree-id274 . -10) (undo-tree-id275 . -10)) nil (25673 10900 89586 191000) 0 nil])
([nil nil ((29202 . 29205)) nil (25673 10900 89583 83000) 0 nil])
([nil nil ((#("
        // we will display the date as DD-MM-YYYY 

        let currentDate = `${currentDay}-${currentMonth}-${currentYear}`;" 0 9 (part-side javascript) 9 10 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 10 37 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 37 39 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 39 50 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 50 51 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 51 52 (part-side javascript syntax-table (12)) 52 61 (part-side javascript) 61 64 (part-side javascript face web-mode-keyword-face) 64 65 (part-side javascript) 65 76 (part-side javascript face web-mode-variable-name-face) 76 79 (part-side javascript) 79 80 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 80 93 (part-side javascript part-token string font-lock-face web-mode-variable-name-face) 93 94 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 94 109 (part-side javascript part-token string font-lock-face web-mode-variable-name-face) 109 110 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 110 124 (part-side javascript part-token string font-lock-face web-mode-variable-name-face) 124 125 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 125 126 (rear-nonsticky t part-side javascript)) . 29349) (undo-tree-id269 . -126) (undo-tree-id270 . -1) (undo-tree-id271 . -126) (undo-tree-id272 . -76) (undo-tree-id273 . -126)) nil (25673 10900 89581 467000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -29348) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 29349) nil (25673 10900 89574 560000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -29495) (#("  " 0 2 (part-side javascript)) . -29453) (#("  " 0 2 (part-side javascript)) . -29395) (#("  " 0 2 (part-side javascript)) . -29358) 29349) nil (25673 10900 89566 670000) 0 nil])
([nil nil ((#("
  })" 0 1 (part-side javascript syntax-table (12)) 1 3 (part-side javascript) 3 4 (part-side javascript face (rainbow-delimiters-depth-3-face)) 4 5 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 29492) (undo-tree-id260 . -5) (undo-tree-id261 . -1) (undo-tree-id262 . -5) (undo-tree-id263 . -5)) nil (25673 10900 89563 244000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . 29453) (#("/" 0 1 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face)) . 29453)) nil (25673 10900 89543 834000) 0 nil])
([nil nil (("mdi-border-color" . 5543) (undo-tree-id292 . -16) (undo-tree-id293 . -16) (t 25673 10900 210119 46000)) nil (25673 11064 967541 945000) 0 nil])
([nil nil ((5543 . 5564)) nil (25673 11064 967525 422000) 0 nil])
([nil nil ((5393 . 5398) (t 25673 11065 117796 810000)) nil (25673 11173 74239 758000) 0 nil])
([nil nil ((4826 . 4831)) nil (25673 11173 74232 538000) 0 nil])
([nil nil ((#("editSensor" 0 10 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 22271) (undo-tree-id294 . -10) (undo-tree-id295 . -10) (undo-tree-id296 . -10) (t 25673 11173 197594 7000)) nil (25673 11314 941391 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22283 . 22284) (nil part-side javascript 22271 . 22284) (nil part-token string 22271 . 22284) (nil font-lock-face web-mode-javascript-string-face 22271 . 22284) (22271 . 22284)) nil (25673 11314 941369 528000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -29365) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 29366 (t 25673 11315 165335 287000)) nil (25673 11381 320964 755000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -29325) (undo-tree-id321 . -1) 29326) nil (25673 11381 320957 219000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -29264) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 29265) nil (25673 11381 320952 954000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -29205) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) 29206) nil (25673 11381 320942 982000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 29263) (undo-tree-id327 . -1) (t 25673 11381 477216 852000)) nil (25673 11386 898303 198000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 29322) (undo-tree-id326 . -1)) nil (25673 11386 898293 298000) 0 nil])
([nil nil ((29336 . 29337) (29276 . 29277) (29218 . 29219) (t 25673 11387 49206 962000) (apply 0 29215 29333 cua--rect-undo-handler [29215 29360 8 10 3 0 t nil] t 29215 29333)) nil (25673 11399 308257 568000) 0 nil])
([nil nil ((29339 . 29340) (29278 . 29279) (29219 . 29220) (apply 0 29215 29335 cua--rect-undo-handler [29215 29363 8 10 3 12 t nil] t 29215 29335)) nil (25673 11399 308255 696000) 0 nil])
([nil nil ((29342 . 29343) (29280 . 29281) (29220 . 29221) (apply 0 29215 29337 cua--rect-undo-handler [29215 29366 8 10 3 13 t nil] t 29215 29337)) nil (25673 11399 308254 115000) 0 nil])
([nil nil ((29345 . 29346) (29282 . 29283) (29221 . 29222) (apply 0 29215 29339 cua--rect-undo-handler [29215 29369 8 10 3 14 t nil] t 29215 29339)) nil (25673 11399 308252 392000) 0 nil])
([nil nil ((29348 . 29349) (29284 . 29285) (29222 . 29223) (apply 0 29215 29341 cua--rect-undo-handler [29215 29372 8 10 3 15 t nil] t 29215 29341)) nil (25673 11399 308249 645000) 0 nil])
([nil nil ((#("let" 0 3 (part-side javascript)) . 29335) (undo-tree-id328 . -2) (undo-tree-id329 . -3) (#("let" 0 3 (part-side javascript)) . 29274) (#("let" 0 3 (part-side javascript)) . 29215) (apply 0 29215 29343 cua--rect-undo-handler [29215 29375 8 10 3 16 t nil] t 29215 29343)) nil (25673 11399 308243 508000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -29322) (undo-tree-id337 . -1) (undo-tree-id338 . -1) 29323 (t 25673 11399 429185 19000)) nil (25673 11406 872330 687000) 0 nil])
([nil nil ((29322 . 29323)) nil (25673 11406 872326 882000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -29324) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 29325) nil (25673 11406 872324 167000) 0 nil])
([nil nil ((29324 . 29325)) nil (25673 11406 872301 23000) 0 nil])
([nil nil ((29322 . 29323) (t 25673 11407 1171 620000)) nil (25673 11413 542225 13000) 0 nil])
([nil nil ((29307 . 29308)) nil (25673 11413 542222 950000) 0 nil])
([nil current ((29309 . 29310)) nil (25673 11413 542215 514000) 0 nil])
nil
