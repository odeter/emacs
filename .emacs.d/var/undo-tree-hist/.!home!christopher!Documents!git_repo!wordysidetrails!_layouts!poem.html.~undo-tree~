(undo-tree-save-format-version . 1)
"5e42ce9133b1c0975411aacb9d6040166400c49a"
[nil nil nil nil (25353 8037 46062 61000) 0 nil]
([nil nil ((#("  {% else %}
  <header class=\"masthead\">
    {% endif %}
    <div class=\"overlay\"></div>
    <div class=\"container\">
      <div class=\"row\">
        <div class=\"col-lg-8 col-md-10 mx-auto\">
          <div class=\"post-heading\">
            <h1>{{ page.title }}</h1>
            {% if page.subtitle %}
            <h2 class=\"subheading\">{{ page.subtitle }}</h2>
            {% endif %}
            <span class=\"meta\">Posted by
              <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
              on {{ page.date | date: '%B %d, %Y' }} &middot; {% include read_time.html
              content=page.content %}
            </span>
          </div>
        </div>
      </div>
    </div>" 2 3 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 3 4 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 4 5 (block-side t) 5 9 (block-side t face web-mode-block-control-face) 9 10 (block-side t) 10 11 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (tag-name "header" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 22 (tag-name "header" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "header" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 38 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-attr-end 5 tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-name "header" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 45 46 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 46 47 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t) 48 53 (block-side t face web-mode-block-control-face) 53 54 (block-side t) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 61 62 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 62 65 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 65 66 (tag-name "div" tag-type start) 66 67 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 67 71 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 71 72 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 72 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 83 84 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 84 87 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 87 88 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 93 94 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 94 97 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 97 98 (tag-name "div" tag-type start) 98 99 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 99 103 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 103 104 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 104 114 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 114 115 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 115 116 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 123 124 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 124 127 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 127 128 (tag-name "div" tag-type start) 128 129 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 129 133 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 133 134 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 134 138 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 138 139 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 149 150 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 150 153 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 153 154 (tag-name "div" tag-type start) 154 155 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 155 159 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 159 160 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 160 187 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 187 188 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 188 189 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 200 201 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 201 204 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 204 205 (tag-name "div" tag-type start) 205 206 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 206 210 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 210 211 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 211 224 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 224 225 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 225 226 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 239 240 (tag-name "h1" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 240 242 (tag-name "h1" tag-type start font-lock-face web-mode-html-tag-face) 242 243 (tag-name "h1" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 243 244 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 244 245 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 245 246 (block-side t) 246 250 (block-side t face web-mode-variable-name-face) 250 251 (block-side t) 251 256 (block-side t face web-mode-variable-name-face) 256 257 (block-side t) 257 258 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 258 259 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 259 260 (tag-name "h1" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 260 261 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-bracket-face) 261 263 (tag-name "h1" tag-type end font-lock-face web-mode-html-tag-face) 263 264 (tag-name "h1" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 277 278 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 278 279 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 279 280 (block-side t) 280 282 (block-side t face web-mode-block-control-face) 282 283 (block-side t) 283 296 (block-side t face web-mode-variable-name-face) 296 297 (block-side t) 297 298 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 298 299 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 312 313 (tag-name "h2" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 313 315 (tag-name "h2" tag-type start font-lock-face web-mode-html-tag-face) 315 316 (tag-name "h2" tag-type start) 316 317 (tag-attr-beg 0 tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-name-face) 317 321 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-name-face) 321 322 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-equal-face) 322 333 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-value-face) 333 334 (tag-attr t tag-attr-end 5 tag-name "h2" tag-type start font-lock-face web-mode-html-attr-value-face) 334 335 (tag-name "h2" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 335 336 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 336 337 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 337 338 (block-side t) 338 342 (block-side t face web-mode-variable-name-face) 342 343 (block-side t) 343 351 (block-side t face web-mode-variable-name-face) 351 352 (block-side t) 352 353 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 353 354 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 354 355 (tag-name "h2" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 355 356 (tag-name "h2" tag-type end font-lock-face web-mode-html-tag-bracket-face) 356 358 (tag-name "h2" tag-type end font-lock-face web-mode-html-tag-face) 358 359 (tag-name "h2" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 372 373 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 373 374 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 374 375 (block-side t) 375 380 (block-side t face web-mode-block-control-face) 380 381 (block-side t) 381 382 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 382 383 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 396 397 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 397 401 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 401 402 (tag-name "span" tag-type start) 402 403 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 403 407 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 407 408 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 408 413 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 413 414 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 414 415 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 439 440 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 440 441 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 441 442 (tag-name "a" tag-type start) 442 443 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 443 446 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 446 447 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 447 449 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 449 450 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 450 451 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 451 452 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 452 453 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 453 454 (block-side t) 454 456 (block-side t face web-mode-block-control-face) 456 457 (block-side t) 457 468 (block-side t face web-mode-variable-name-face) 468 469 (block-side t) 469 470 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 470 471 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 471 472 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 472 473 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 473 474 (block-side t) 474 478 (block-side t face web-mode-variable-name-face) 478 479 (block-side t) 479 485 (block-side t face web-mode-variable-name-face) 485 486 (block-side t) 486 487 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 487 488 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 488 489 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 489 490 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 490 491 (block-side t) 491 495 (block-side t face web-mode-block-control-face) 495 496 (block-side t) 496 497 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 497 498 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 498 499 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 499 500 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 500 501 (block-side t) 501 505 (block-side t face web-mode-variable-name-face) 505 506 (block-side t) 506 512 (block-side t face web-mode-variable-name-face) 512 513 (block-side t) 513 514 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 514 515 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 515 516 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 516 517 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 517 518 (block-side t) 518 523 (block-side t face web-mode-block-control-face) 523 524 (block-side t) 524 525 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 525 526 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 526 527 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 527 528 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 528 529 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 529 530 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 548 549 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 549 550 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 550 551 (block-side t) 551 555 (block-side t face web-mode-variable-name-face) 555 556 (block-side t) 556 560 (block-side t face web-mode-variable-name-face) 560 563 (block-side t) 563 567 (block-side t face web-mode-filter-face) 567 569 (block-side t) 569 571 (block-side t block-token string font-lock-face web-mode-block-string-face) 571 572 (block-side t block-token string font-lock-face web-mode-block-string-face) 572 574 (block-side t block-token string font-lock-face web-mode-block-string-face) 574 575 (block-side t block-token string font-lock-face web-mode-block-string-face) 575 578 (block-side t block-token string font-lock-face web-mode-block-string-face) 578 579 (block-side t block-token string font-lock-face web-mode-block-string-face) 579 580 (block-side t block-token string font-lock-face web-mode-block-string-face) 580 581 (block-side t) 581 582 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 582 583 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 584 592 (font-lock-face (web-mode-html-entity-face)) 593 594 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 594 595 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 595 596 (block-side t) 596 603 (block-side t face web-mode-block-control-face) 603 604 (block-side t) 604 618 (block-side t face web-mode-variable-name-face) 618 633 (block-side t) 633 640 (block-side t face web-mode-variable-name-face) 640 641 (block-side t) 641 653 (block-side t face web-mode-variable-name-face) 653 654 (block-side t) 654 655 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 655 656 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 669 670 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 670 671 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 671 675 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 675 676 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 687 688 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 688 689 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 689 692 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 692 693 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 702 703 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 703 704 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 704 707 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 707 708 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 715 716 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 716 717 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 717 720 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 720 721 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 726 727 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 727 728 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 728 731 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 731 732 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 198) (undo-tree-id9 . -732) (undo-tree-id10 . -13) (undo-tree-id11 . -732) (undo-tree-id12 . -732) (undo-tree-id13 . -732) (t 24728 130 0 0)) nil (25353 8037 46059 413000) 0 nil])
([nil nil (("
" . -197) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 198) nil (25353 8037 46048 378000) 0 nil])
([nil nil ((#("
{% if page.background %}" 1 2 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2 3 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 3 4 (block-side t) 4 6 (block-side t face web-mode-block-control-face) 6 7 (block-side t) 7 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t) 23 24 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 46) (undo-tree-id0 . -25) (undo-tree-id1 . -1) (undo-tree-id2 . -25) (undo-tree-id3 . -25)) nil (25353 8037 46036 644000) 0 nil])
([nil nil ((172 . 175) (t 25353 8037 47134 246000)) nil (25353 8562 991910 799000) 0 nil])
([nil nil ((nil rear-nonsticky nil 210 . 211) (nil tag-name "div" 210 . 211) (nil tag-name "div" 207 . 210) (nil tag-name "div" 206 . 207) (nil tag-name "div" 205 . 206) (nil tag-name "div" 201 . 202) (nil tag-name "div" 200 . 201) (nil tag-name "div" 187 . 200) (nil tag-name "div" 186 . 187) (nil tag-name "div" 182 . 186) (nil tag-name "div" 181 . 182) (nil tag-name "div" 180 . 181) (nil tag-name "div" 177 . 180) (nil tag-name "div" 176 . 177) (175 . 211)) ((#(" <div class=\"home-heading\">
  </div>" 1 2 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type start) 6 7 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 7 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 12 25 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 32 35 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (rear-nonsticky nil tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 175) (nil tag-name "div" 176 . 177) (nil tag-name "div" 177 . 180) (nil tag-name "div" 180 . 181) (nil tag-name "div" 181 . 182) (nil tag-name "div" 182 . 186) (nil tag-name "div" 186 . 187) (nil tag-name "div" 187 . 200) (nil tag-name "div" 200 . 201) (nil tag-name "div" 201 . 202) (nil tag-name "div" 205 . 206) (nil tag-name "div" 206 . 207) (nil tag-name "div" 207 . 210) (nil tag-name "div" 210 . 211) (nil rear-nonsticky t 210 . 211)) (25353 8566 621421 259000) 0 nil])
([nil nil ((#("home-heading" 0 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 188) (undo-tree-id14 . -12) (undo-tree-id15 . -12) (undo-tree-id16 . -12) (undo-tree-id17 . -12) (t 25353 8567 753472 577000)) nil (25353 8573 81257 477000) 0 nil])
([nil nil ((nil rear-nonsticky nil 202 . 203) (nil rear-nonsticky t 202 . 203) (nil tag-attr t 202 . 203) (nil tag-name "div" 202 . 203) (nil tag-type start 202 . 203) (nil font-lock-face web-mode-html-attr-value-face 202 . 203) (nil tag-attr t 188 . 202) (nil tag-name "div" 188 . 202) (nil tag-type start 188 . 202) (nil font-lock-face web-mode-html-attr-value-face 188 . 202) (188 . 203)) nil (25353 8573 81236 788000) 0 nil])
([nil nil ((#("<header class=\"masthead\" style=\"background-image: url('{{ page.background | prepend: site.baseurl | replace: '//', '/' }}')\">
   <div class=\"default-heading\">
  </div>
  </header>" 0 1 (tag-name "header" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 7 (tag-name "header" tag-type start font-lock-face web-mode-html-tag-face) 7 8 (tag-name "header" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 9 13 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 23 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-attr-end 5 tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-name "header" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 55 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 55 56 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t tag-attr t tag-name "header" tag-type start) 58 62 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "header" tag-type start) 63 73 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 73 76 (block-side t tag-attr t tag-name "header" tag-type start) 76 83 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-filter-face) 83 85 (block-side t tag-attr t tag-name "header" tag-type start) 85 89 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 89 90 (block-side t tag-attr t tag-name "header" tag-type start) 90 97 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-variable-name-face) 97 100 (block-side t tag-attr t tag-name "header" tag-type start) 100 107 (block-side t tag-attr t tag-name "header" tag-type start face web-mode-filter-face) 107 109 (block-side t tag-attr t tag-name "header" tag-type start) 109 113 (block-side t block-token string tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-string-face) 113 115 (block-side t tag-attr t tag-name "header" tag-type start) 115 118 (block-side t block-token string tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-string-face) 118 119 (block-side t tag-attr t tag-name "header" tag-type start) 119 120 (block-side t block-token delimiter-end tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 120 121 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "header" tag-type start font-lock-face web-mode-block-delimiter-face) 121 123 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 123 124 (tag-attr t tag-attr-end 5 tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 124 125 (tag-name "header" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 129 130 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 130 133 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 133 134 (tag-name "div" tag-type start) 134 135 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 135 139 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 139 140 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 140 141 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 141 155 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 155 156 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 156 157 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 157 158 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 161 162 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 162 163 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 163 166 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 166 167 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 170 171 (tag-name "header" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 171 172 (tag-name "header" tag-type end font-lock-face web-mode-html-tag-bracket-face) 172 178 (tag-name "header" tag-type end font-lock-face web-mode-html-tag-face) 178 179 (tag-name "header" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 47) (undo-tree-id19 . -179) (undo-tree-id20 . -125) (undo-tree-id21 . -179) (undo-tree-id22 . -125) (undo-tree-id23 . -125) (undo-tree-id24 . -141) (undo-tree-id25 . -141) (undo-tree-id26 . -128) (undo-tree-id27 . -141) (undo-tree-id28 . -155) (undo-tree-id29 . -126) (undo-tree-id30 . -141) (undo-tree-id31 . -179) (t 25353 8573 97511 143000)) nil (25353 8771 292315 630000) 0 nil])
([nil nil ((nil rear-nonsticky nil 183 . 184) (nil tag-name "header" 183 . 184) (nil tag-type end 183 . 184) (nil tag-end t 183 . 184) (nil font-lock-face web-mode-html-tag-bracket-face 183 . 184) (nil tag-name "header" 177 . 183) (nil tag-type end 177 . 183) (nil font-lock-face web-mode-html-tag-face 177 . 183) (nil tag-name "header" 176 . 177) (nil tag-type end 176 . 177) (nil font-lock-face web-mode-html-tag-bracket-face 176 . 177) (nil tag-name "header" 175 . 176) (nil tag-type end 175 . 176) (nil tag-beg 20 175 . 176) (nil font-lock-face web-mode-html-tag-bracket-face 175 . 176) (nil tag-name "div" 173 . 174) (nil tag-type end 173 . 174) (nil tag-end t 173 . 174) (nil font-lock-face web-mode-html-tag-bracket-face 173 . 174) (nil tag-name "div" 170 . 173) (nil tag-type end 170 . 173) (nil font-lock-face web-mode-html-tag-face 170 . 173) (nil tag-name "div" 169 . 170) (nil tag-type end 169 . 170) (nil font-lock-face web-mode-html-tag-bracket-face 169 . 170) (nil tag-name "div" 168 . 169) (nil tag-type end 168 . 169) (nil tag-beg 20 168 . 169) (nil font-lock-face web-mode-html-tag-bracket-face 168 . 169) (nil tag-name "div" 164 . 165) (nil tag-type start 164 . 165) (nil tag-end t 164 . 165) (nil font-lock-face web-mode-html-tag-bracket-face 164 . 165) (nil tag-attr t 163 . 164) (nil tag-attr-end 5 163 . 164) (nil tag-name "div" 163 . 164) (nil tag-type start 163 . 164) (nil font-lock-face web-mode-html-attr-value-face 163 . 164) (nil rear-nonsticky t 162 . 163) (nil tag-attr t 162 . 163) (nil tag-name "div" 162 . 163) (nil tag-type start 162 . 163) (nil font-lock-face web-mode-html-attr-value-face 162 . 163) (nil tag-attr t 148 . 162) (nil tag-name "div" 148 . 162) (nil tag-type start 148 . 162) (nil font-lock-face web-mode-html-attr-value-face 148 . 162) (nil tag-attr t 147 . 148) (nil tag-name "div" 147 . 148) (nil tag-type start 147 . 148) (nil font-lock-face web-mode-html-attr-value-face 147 . 148) (nil tag-attr t 146 . 147) (nil tag-name "div" 146 . 147) (nil tag-type start 146 . 147) (nil font-lock-face web-mode-html-attr-equal-face 146 . 147) (nil tag-attr t 142 . 146) (nil tag-name "div" 142 . 146) (nil tag-type start 142 . 146) (nil font-lock-face web-mode-html-attr-name-face 142 . 146) (nil tag-attr-beg 0 141 . 142) (nil tag-attr t 141 . 142) (nil tag-name "div" 141 . 142) (nil tag-type start 141 . 142) (nil font-lock-face web-mode-html-attr-name-face 141 . 142) (nil tag-name "div" 140 . 141) (nil tag-type start 140 . 141) (nil tag-name "div" 137 . 140) (nil tag-type start 137 . 140) (nil font-lock-face web-mode-html-tag-face 137 . 140) (nil tag-name "div" 136 . 137) (nil tag-type start 136 . 137) (nil tag-beg 17 136 . 137) (nil font-lock-face web-mode-html-tag-bracket-face 136 . 137) (nil tag-name "header" 132 . 133) (nil tag-type start 132 . 133) (nil tag-end t 132 . 133) (nil font-lock-face web-mode-html-tag-bracket-face 132 . 133) (nil tag-attr t 131 . 132) (nil tag-attr-end 5 131 . 132) (nil tag-name "header" 131 . 132) (nil tag-type start 131 . 132) (nil font-lock-face web-mode-html-attr-value-face 131 . 132) (nil tag-attr t 129 . 131) (nil tag-name "header" 129 . 131) (nil tag-type start 129 . 131) (nil font-lock-face web-mode-html-attr-value-face 129 . 131) (nil block-side t 128 . 129) (nil block-end t 128 . 129) (nil block-token delimiter-end 128 . 129) (nil tag-attr t 128 . 129) (nil tag-name "header" 128 . 129) (nil tag-type start 128 . 129) (nil font-lock-face web-mode-block-delimiter-face 128 . 129) (nil block-side t 127 . 128) (nil block-token delimiter-end 127 . 128) (nil tag-attr t 127 . 128) (nil tag-name "header" 127 . 128) (nil tag-type start 127 . 128) (nil font-lock-face web-mode-block-delimiter-face 127 . 128) (nil block-side t 126 . 127) (nil tag-attr t 126 . 127) (nil tag-name "header" 126 . 127) (nil tag-type start 126 . 127) (nil block-side t 120 . 126) (nil tag-attr t 120 . 126) (nil tag-name "header" 120 . 126) (nil tag-type start 120 . 126) (nil face web-mode-filter-face 120 . 126) (nil block-side t 117 . 120) (nil tag-attr t 117 . 120) (nil tag-name "header" 117 . 120) (nil tag-type start 117 . 120) (nil block-side t 111 . 117) (nil tag-attr t 111 . 117) (nil tag-name "header" 111 . 117) (nil tag-type start 111 . 117) (nil face web-mode-variable-name-face 111 . 117) (nil block-side t 110 . 111) (nil tag-attr t 110 . 111) (nil tag-name "header" 110 . 111) (nil tag-type start 110 . 111) (nil block-side t 106 . 110) (nil tag-attr t 106 . 110) (nil tag-name "header" 106 . 110) (nil tag-type start 106 . 110) (nil face web-mode-variable-name-face 106 . 110) (nil block-side t 105 . 106) (nil tag-attr t 105 . 106) (nil tag-name "header" 105 . 106) (nil tag-type start 105 . 106) (nil block-side t 104 . 105) (nil block-token delimiter-beg 104 . 105) (nil tag-attr t 104 . 105) (nil tag-name "header" 104 . 105) (nil tag-type start 104 . 105) (nil font-lock-face web-mode-block-delimiter-face 104 . 105) (nil block-beg 0 103 . 104) (nil block-controls 0 103 . 104) (nil block-side t 103 . 104) (nil block-token delimiter-beg 103 . 104) (nil tag-attr t 103 . 104) (nil tag-name "header" 103 . 104) (nil tag-type start 103 . 104) (nil font-lock-face web-mode-block-delimiter-face 103 . 104) (nil tag-attr t 79 . 103) (nil tag-name "header" 79 . 103) (nil tag-type start 79 . 103) (nil font-lock-face web-mode-html-attr-value-face 79 . 103) (nil tag-attr t 78 . 79) (nil tag-name "header" 78 . 79) (nil tag-type start 78 . 79) (nil font-lock-face web-mode-html-attr-equal-face 78 . 79) (nil tag-attr t 74 . 78) (nil tag-name "header" 74 . 78) (nil tag-type start 74 . 78) (nil font-lock-face web-mode-html-attr-name-face 74 . 78) (nil tag-attr-beg 0 73 . 74) (nil tag-attr t 73 . 74) (nil tag-name "header" 73 . 74) (nil tag-type start 73 . 74) (nil font-lock-face web-mode-html-attr-name-face 73 . 74) (nil tag-name "header" 72 . 73) (nil tag-type start 72 . 73) (nil tag-attr t 71 . 72) (nil tag-attr-end 5 71 . 72) (nil tag-name "header" 71 . 72) (nil tag-type start 71 . 72) (nil font-lock-face web-mode-html-attr-value-face 71 . 72) (nil tag-attr t 61 . 71) (nil tag-name "header" 61 . 71) (nil tag-type start 61 . 71) (nil font-lock-face web-mode-html-attr-value-face 61 . 71) (nil tag-attr t 60 . 61) (nil tag-name "header" 60 . 61) (nil tag-type start 60 . 61) (nil font-lock-face web-mode-html-attr-equal-face 60 . 61) (nil tag-attr t 56 . 60) (nil tag-name "header" 56 . 60) (nil tag-type start 56 . 60) (nil font-lock-face web-mode-html-attr-name-face 56 . 60) (nil tag-attr-beg 0 55 . 56) (nil tag-attr t 55 . 56) (nil tag-name "header" 55 . 56) (nil tag-type start 55 . 56) (nil font-lock-face web-mode-html-attr-name-face 55 . 56) (nil tag-name "header" 54 . 55) (nil tag-type start 54 . 55) (nil tag-name "header" 48 . 54) (nil tag-type start 48 . 54) (nil font-lock-face web-mode-html-tag-face 48 . 54) (nil tag-name "header" 47 . 48) (nil tag-type start 47 . 48) (nil tag-beg 17 47 . 48) (nil font-lock-face web-mode-html-tag-bracket-face 47 . 48) (47 . 184)) nil (25353 8771 292282 861000) 0 nil])
([nil nil ((282 . 290) ("        " . 281) (undo-tree-id18 . -8) (280 . 290)) nil (25353 8771 292233 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 745 . 746) (nil tag-name "span" 745 . 746) (nil tag-type end 745 . 746) (nil tag-end t 745 . 746) (nil font-lock-face web-mode-html-tag-bracket-face 745 . 746) (nil tag-name "span" 741 . 745) (nil tag-type end 741 . 745) (nil font-lock-face web-mode-html-tag-face 741 . 745) (nil tag-name "span" 740 . 741) (nil tag-type end 740 . 741) (nil font-lock-face web-mode-html-tag-bracket-face 740 . 741) (nil tag-name "span" 739 . 740) (nil tag-type end 739 . 740) (nil tag-beg 20 739 . 740) (nil font-lock-face web-mode-html-tag-bracket-face 739 . 740) (nil block-side t 729 . 730) (nil block-end t 729 . 730) (nil block-token delimiter-end 729 . 730) (nil font-lock-face web-mode-block-delimiter-face 729 . 730) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 729 . 730) (nil block-side t 728 . 729) (nil block-token delimiter-end 728 . 729) (nil font-lock-face web-mode-block-delimiter-face 728 . 729) (nil block-side t 727 . 728) (nil block-side t 715 . 727) (nil face web-mode-variable-name-face 715 . 727) (nil block-side t 714 . 715) (nil block-side t 707 . 714) (nil face web-mode-variable-name-face 707 . 714) (nil block-side t 646 . 707) (nil block-side t 632 . 646) (nil face web-mode-variable-name-face 632 . 646) (nil block-side t 631 . 632) (nil block-side t 624 . 631) (nil face web-mode-block-control-face 624 . 631) (nil block-side t 623 . 624) (nil block-side t 622 . 623) (nil block-token delimiter-beg 622 . 623) (nil font-lock-face web-mode-block-delimiter-face 622 . 623) (nil block-beg 0 621 . 622) (nil block-controls 0 621 . 622) (nil block-side t 621 . 622) (nil block-token delimiter-beg 621 . 622) (nil font-lock-face web-mode-block-delimiter-face 621 . 622) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 621 . 622) (nil font-lock-face (web-mode-html-entity-face) 612 . 620) (nil block-side t 610 . 611) (nil block-end t 610 . 611) (nil block-token delimiter-end 610 . 611) (nil font-lock-face web-mode-block-delimiter-face 610 . 611) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 610 . 611) (nil block-side t 609 . 610) (nil block-token delimiter-end 609 . 610) (nil font-lock-face web-mode-block-delimiter-face 609 . 610) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 609 . 610) (nil block-side t 608 . 609) (nil block-side t 607 . 608) (nil block-token string 607 . 608) (nil font-lock-face web-mode-block-string-face 607 . 608) (nil block-side t 606 . 607) (nil block-token string 606 . 607) (nil font-lock-face web-mode-block-string-face 606 . 607) (nil block-side t 603 . 606) (nil block-token string 603 . 606) (nil font-lock-face web-mode-block-string-face 603 . 606) (nil block-side t 602 . 603) (nil block-token string 602 . 603) (nil font-lock-face web-mode-block-string-face 602 . 603) (nil block-side t 600 . 602) (nil block-token string 600 . 602) (nil font-lock-face web-mode-block-string-face 600 . 602) (nil block-side t 599 . 600) (nil block-token string 599 . 600) (nil font-lock-face web-mode-block-string-face 599 . 600) (nil block-side t 597 . 599) (nil block-token string 597 . 599) (nil font-lock-face web-mode-block-string-face 597 . 599) (nil block-side t 595 . 597) (nil block-side t 591 . 595) (nil face web-mode-filter-face 591 . 595) (nil block-side t 588 . 591) (nil block-side t 584 . 588) (nil face web-mode-variable-name-face 584 . 588) (nil block-side t 583 . 584) (nil block-side t 579 . 583) (nil face web-mode-variable-name-face 579 . 583) (nil block-side t 578 . 579) (nil block-side t 577 . 578) (nil block-token delimiter-beg 577 . 578) (nil font-lock-face web-mode-block-delimiter-face 577 . 578) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 577 . 578) (nil block-beg 0 576 . 577) (nil block-controls 0 576 . 577) (nil block-side t 576 . 577) (nil block-token delimiter-beg 576 . 577) (nil font-lock-face web-mode-block-delimiter-face 576 . 577) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 576 . 577) (nil tag-name "a" 561 . 562) (nil tag-type end 561 . 562) (nil tag-end t 561 . 562) (nil font-lock-face web-mode-html-tag-bracket-face 561 . 562) (nil tag-name "a" 560 . 561) (nil tag-type end 560 . 561) (nil font-lock-face web-mode-html-tag-face 560 . 561) (nil tag-name "a" 559 . 560) (nil tag-type end 559 . 560) (nil font-lock-face web-mode-html-tag-bracket-face 559 . 560) (nil tag-name "a" 558 . 559) (nil tag-type end 558 . 559) (nil tag-beg 20 558 . 559) (nil font-lock-face web-mode-html-tag-bracket-face 558 . 559) (nil block-side t 557 . 558) (nil block-end t 557 . 558) (nil block-token delimiter-end 557 . 558) (nil font-lock-face web-mode-block-delimiter-face 557 . 558) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 557 . 558) (nil block-side t 556 . 557) (nil block-token delimiter-end 556 . 557) (nil font-lock-face web-mode-block-delimiter-face 556 . 557) (nil block-side t 555 . 556) (nil block-side t 550 . 555) (nil face web-mode-block-control-face 550 . 555) (nil block-side t 549 . 550) (nil block-side t 548 . 549) (nil block-token delimiter-beg 548 . 549) (nil font-lock-face web-mode-block-delimiter-face 548 . 549) (nil block-beg 0 547 . 548) (nil block-controls 0 547 . 548) (nil block-side t 547 . 548) (nil block-token delimiter-beg 547 . 548) (nil font-lock-face web-mode-block-delimiter-face 547 . 548) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 547 . 548) (nil block-side t 546 . 547) (nil block-end t 546 . 547) (nil block-token delimiter-end 546 . 547) (nil font-lock-face web-mode-block-delimiter-face 546 . 547) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 546 . 547) (nil block-side t 545 . 546) (nil block-token delimiter-end 545 . 546) (nil font-lock-face web-mode-block-delimiter-face 545 . 546) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 545 . 546) (nil block-side t 544 . 545) (nil block-side t 538 . 544) (nil face web-mode-variable-name-face 538 . 544) (nil block-side t 537 . 538) (nil block-side t 533 . 537) (nil face web-mode-variable-name-face 533 . 537) (nil block-side t 532 . 533) (nil block-side t 531 . 532) (nil block-token delimiter-beg 531 . 532) (nil font-lock-face web-mode-block-delimiter-face 531 . 532) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 531 . 532) (nil block-beg 0 530 . 531) (nil block-controls 0 530 . 531) (nil block-side t 530 . 531) (nil block-token delimiter-beg 530 . 531) (nil font-lock-face web-mode-block-delimiter-face 530 . 531) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 530 . 531) (nil block-side t 529 . 530) (nil block-end t 529 . 530) (nil block-token delimiter-end 529 . 530) (nil font-lock-face web-mode-block-delimiter-face 529 . 530) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 529 . 530) (nil block-side t 528 . 529) (nil block-token delimiter-end 528 . 529) (nil font-lock-face web-mode-block-delimiter-face 528 . 529) (nil block-side t 527 . 528) (nil block-side t 523 . 527) (nil face web-mode-block-control-face 523 . 527) (nil block-side t 522 . 523) (nil block-side t 521 . 522) (nil block-token delimiter-beg 521 . 522) (nil font-lock-face web-mode-block-delimiter-face 521 . 522) (nil block-beg 0 520 . 521) (nil block-controls 0 520 . 521) (nil block-side t 520 . 521) (nil block-token delimiter-beg 520 . 521) (nil font-lock-face web-mode-block-delimiter-face 520 . 521) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 520 . 521) (nil block-side t 519 . 520) (nil block-end t 519 . 520) (nil block-token delimiter-end 519 . 520) (nil font-lock-face web-mode-block-delimiter-face 519 . 520) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 519 . 520) (nil block-side t 518 . 519) (nil block-token delimiter-end 518 . 519) (nil font-lock-face web-mode-block-delimiter-face 518 . 519) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 518 . 519) (nil block-side t 517 . 518) (nil block-side t 511 . 517) (nil face web-mode-variable-name-face 511 . 517) (nil block-side t 510 . 511) (nil block-side t 506 . 510) (nil face web-mode-variable-name-face 506 . 510) (nil block-side t 505 . 506) (nil block-side t 504 . 505) (nil block-token delimiter-beg 504 . 505) (nil font-lock-face web-mode-block-delimiter-face 504 . 505) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 504 . 505) (nil block-beg 0 503 . 504) (nil block-controls 0 503 . 504) (nil block-side t 503 . 504) (nil block-token delimiter-beg 503 . 504) (nil font-lock-face web-mode-block-delimiter-face 503 . 504) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 503 . 504) (nil block-side t 502 . 503) (nil block-end t 502 . 503) (nil block-token delimiter-end 502 . 503) (nil font-lock-face web-mode-block-delimiter-face 502 . 503) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 502 . 503) (nil block-side t 501 . 502) (nil block-token delimiter-end 501 . 502) (nil font-lock-face web-mode-block-delimiter-face 501 . 502) (nil block-side t 500 . 501) (nil block-side t 489 . 500) (nil face web-mode-variable-name-face 489 . 500) (nil block-side t 488 . 489) (nil block-side t 486 . 488) (nil face web-mode-block-control-face 486 . 488) (nil block-side t 485 . 486) (nil block-side t 484 . 485) (nil block-token delimiter-beg 484 . 485) (nil font-lock-face web-mode-block-delimiter-face 484 . 485) (nil block-beg 0 483 . 484) (nil block-controls 0 483 . 484) (nil block-side t 483 . 484) (nil block-token delimiter-beg 483 . 484) (nil font-lock-face web-mode-block-delimiter-face 483 . 484) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 483 . 484) (nil tag-name "a" 482 . 483) (nil tag-type start 482 . 483) (nil tag-end t 482 . 483) (nil font-lock-face web-mode-html-tag-bracket-face 482 . 483) (nil tag-attr t 481 . 482) (nil tag-attr-end 4 481 . 482) (nil tag-name "a" 481 . 482) (nil tag-type start 481 . 482) (nil font-lock-face web-mode-html-attr-value-face 481 . 482) (nil tag-attr t 479 . 481) (nil tag-name "a" 479 . 481) (nil tag-type start 479 . 481) (nil font-lock-face web-mode-html-attr-value-face 479 . 481) (nil tag-attr t 478 . 479) (nil tag-name "a" 478 . 479) (nil tag-type start 478 . 479) (nil font-lock-face web-mode-html-attr-equal-face 478 . 479) (nil tag-attr t 475 . 478) (nil tag-name "a" 475 . 478) (nil tag-type start 475 . 478) (nil font-lock-face web-mode-html-attr-name-face 475 . 478) (nil tag-attr-beg 0 474 . 475) (nil tag-attr t 474 . 475) (nil tag-name "a" 474 . 475) (nil tag-type start 474 . 475) (nil font-lock-face web-mode-html-attr-name-face 474 . 475) (nil tag-name "a" 473 . 474) (nil tag-type start 473 . 474) (nil tag-name "a" 472 . 473) (nil tag-type start 472 . 473) (nil font-lock-face web-mode-html-tag-face 472 . 473) (nil tag-name "a" 471 . 472) (nil tag-type start 471 . 472) (nil tag-beg 17 471 . 472) (nil font-lock-face web-mode-html-tag-bracket-face 471 . 472) (nil tag-name "span" 450 . 451) (nil tag-type start 450 . 451) (nil tag-end t 450 . 451) (nil font-lock-face web-mode-html-tag-bracket-face 450 . 451) (nil tag-attr t 449 . 450) (nil tag-attr-end 5 449 . 450) (nil tag-name "span" 449 . 450) (nil tag-type start 449 . 450) (nil font-lock-face web-mode-html-attr-value-face 449 . 450) (nil tag-attr t 444 . 449) (nil tag-name "span" 444 . 449) (nil tag-type start 444 . 449) (nil font-lock-face web-mode-html-attr-value-face 444 . 449) (nil tag-attr t 443 . 444) (nil tag-name "span" 443 . 444) (nil tag-type start 443 . 444) (nil font-lock-face web-mode-html-attr-equal-face 443 . 444) (nil tag-attr t 439 . 443) (nil tag-name "span" 439 . 443) (nil tag-type start 439 . 443) (nil font-lock-face web-mode-html-attr-name-face 439 . 443) (nil tag-attr-beg 0 438 . 439) (nil tag-attr t 438 . 439) (nil tag-name "span" 438 . 439) (nil tag-type start 438 . 439) (nil font-lock-face web-mode-html-attr-name-face 438 . 439) (nil tag-name "span" 437 . 438) (nil tag-type start 437 . 438) (nil tag-name "span" 433 . 437) (nil tag-type start 433 . 437) (nil font-lock-face web-mode-html-tag-face 433 . 437) (nil tag-name "span" 432 . 433) (nil tag-type start 432 . 433) (nil tag-beg 17 432 . 433) (nil font-lock-face web-mode-html-tag-bracket-face 432 . 433) (nil block-side t 422 . 423) (nil block-end t 422 . 423) (nil block-token delimiter-end 422 . 423) (nil font-lock-face web-mode-block-delimiter-face 422 . 423) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 422 . 423) (nil block-side t 421 . 422) (nil block-token delimiter-end 421 . 422) (nil font-lock-face web-mode-block-delimiter-face 421 . 422) (nil block-side t 420 . 421) (nil block-side t 415 . 420) (nil face web-mode-block-control-face 415 . 420) (nil block-side t 414 . 415) (nil block-side t 413 . 414) (nil block-token delimiter-beg 413 . 414) (nil font-lock-face web-mode-block-delimiter-face 413 . 414) (nil block-beg 0 412 . 413) (nil block-controls 0 412 . 413) (nil block-side t 412 . 413) (nil block-token delimiter-beg 412 . 413) (nil font-lock-face web-mode-block-delimiter-face 412 . 413) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 412 . 413) (nil tag-name "h2" 402 . 403) (nil tag-type end 402 . 403) (nil tag-end t 402 . 403) (nil font-lock-face web-mode-html-tag-bracket-face 402 . 403) (nil tag-name "h2" 400 . 402) (nil tag-type end 400 . 402) (nil font-lock-face web-mode-html-tag-face 400 . 402) (nil tag-name "h2" 399 . 400) (nil tag-type end 399 . 400) (nil font-lock-face web-mode-html-tag-bracket-face 399 . 400) (nil tag-name "h2" 398 . 399) (nil tag-type end 398 . 399) (nil tag-beg 20 398 . 399) (nil font-lock-face web-mode-html-tag-bracket-face 398 . 399) (nil block-side t 397 . 398) (nil block-end t 397 . 398) (nil block-token delimiter-end 397 . 398) (nil font-lock-face web-mode-block-delimiter-face 397 . 398) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 397 . 398) (nil block-side t 396 . 397) (nil block-token delimiter-end 396 . 397) (nil font-lock-face web-mode-block-delimiter-face 396 . 397) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 396 . 397) (nil block-side t 395 . 396) (nil block-side t 387 . 395) (nil face web-mode-variable-name-face 387 . 395) (nil block-side t 386 . 387) (nil block-side t 382 . 386) (nil face web-mode-variable-name-face 382 . 386) (nil block-side t 381 . 382) (nil block-side t 380 . 381) (nil block-token delimiter-beg 380 . 381) (nil font-lock-face web-mode-block-delimiter-face 380 . 381) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 380 . 381) (nil block-beg 0 379 . 380) (nil block-controls 0 379 . 380) (nil block-side t 379 . 380) (nil block-token delimiter-beg 379 . 380) (nil font-lock-face web-mode-block-delimiter-face 379 . 380) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 379 . 380) (nil tag-name "h2" 378 . 379) (nil tag-type start 378 . 379) (nil tag-end t 378 . 379) (nil font-lock-face web-mode-html-tag-bracket-face 378 . 379) (nil tag-attr t 377 . 378) (nil tag-attr-end 5 377 . 378) (nil tag-name "h2" 377 . 378) (nil tag-type start 377 . 378) (nil font-lock-face web-mode-html-attr-value-face 377 . 378) (nil tag-attr t 366 . 377) (nil tag-name "h2" 366 . 377) (nil tag-type start 366 . 377) (nil font-lock-face web-mode-html-attr-value-face 366 . 377) (nil tag-attr t 365 . 366) (nil tag-name "h2" 365 . 366) (nil tag-type start 365 . 366) (nil font-lock-face web-mode-html-attr-equal-face 365 . 366) (nil tag-attr t 361 . 365) (nil tag-name "h2" 361 . 365) (nil tag-type start 361 . 365) (nil font-lock-face web-mode-html-attr-name-face 361 . 365) (nil tag-attr-beg 0 360 . 361) (nil tag-attr t 360 . 361) (nil tag-name "h2" 360 . 361) (nil tag-type start 360 . 361) (nil font-lock-face web-mode-html-attr-name-face 360 . 361) (nil tag-name "h2" 359 . 360) (nil tag-type start 359 . 360) (nil tag-name "h2" 357 . 359) (nil tag-type start 357 . 359) (nil font-lock-face web-mode-html-tag-face 357 . 359) (nil tag-name "h2" 356 . 357) (nil tag-type start 356 . 357) (nil tag-beg 17 356 . 357) (nil font-lock-face web-mode-html-tag-bracket-face 356 . 357) (nil block-side t 344 . 345) (nil block-end t 344 . 345) (nil block-token delimiter-end 344 . 345) (nil font-lock-face web-mode-block-delimiter-face 344 . 345) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 344 . 345) (nil block-side t 343 . 344) (nil block-token delimiter-end 343 . 344) (nil font-lock-face web-mode-block-delimiter-face 343 . 344) (nil block-side t 342 . 343) (nil block-side t 329 . 342) (nil face web-mode-variable-name-face 329 . 342) (nil block-side t 328 . 329) (nil block-side t 326 . 328) (nil face web-mode-block-control-face 326 . 328) (nil block-side t 325 . 326) (nil block-side t 324 . 325) (nil block-token delimiter-beg 324 . 325) (nil font-lock-face web-mode-block-delimiter-face 324 . 325) (nil block-beg 0 323 . 324) (nil block-controls 0 323 . 324) (nil block-side t 323 . 324) (nil block-token delimiter-beg 323 . 324) (nil font-lock-face web-mode-block-delimiter-face 323 . 324) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 323 . 324) (nil tag-name "h1" 313 . 314) (nil tag-type end 313 . 314) (nil tag-end t 313 . 314) (nil font-lock-face web-mode-html-tag-bracket-face 313 . 314) (nil tag-name "h1" 311 . 313) (nil tag-type end 311 . 313) (nil font-lock-face web-mode-html-tag-face 311 . 313) (nil tag-name "h1" 310 . 311) (nil tag-type end 310 . 311) (nil font-lock-face web-mode-html-tag-bracket-face 310 . 311) (nil tag-name "h1" 309 . 310) (nil tag-type end 309 . 310) (nil tag-beg 20 309 . 310) (nil font-lock-face web-mode-html-tag-bracket-face 309 . 310) (nil block-side t 308 . 309) (nil block-end t 308 . 309) (nil block-token delimiter-end 308 . 309) (nil font-lock-face web-mode-block-delimiter-face 308 . 309) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 308 . 309) (nil block-side t 307 . 308) (nil block-token delimiter-end 307 . 308) (nil font-lock-face web-mode-block-delimiter-face 307 . 308) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 307 . 308) (nil block-side t 306 . 307) (nil block-side t 301 . 306) (nil face web-mode-variable-name-face 301 . 306) (nil block-side t 300 . 301) (nil block-side t 296 . 300) (nil face web-mode-variable-name-face 296 . 300) (nil block-side t 295 . 296) (nil block-side t 294 . 295) (nil block-token delimiter-beg 294 . 295) (nil font-lock-face web-mode-block-delimiter-face 294 . 295) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 294 . 295) (nil block-beg 0 293 . 294) (nil block-controls 0 293 . 294) (nil block-side t 293 . 294) (nil block-token delimiter-beg 293 . 294) (nil font-lock-face web-mode-block-delimiter-face 293 . 294) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 293 . 294) (nil tag-name "h1" 292 . 293) (nil tag-type start 292 . 293) (nil tag-end t 292 . 293) (nil font-lock-face web-mode-html-tag-bracket-face 292 . 293) (nil tag-name "h1" 290 . 292) (nil tag-type start 290 . 292) (nil font-lock-face web-mode-html-tag-face 290 . 292) (nil tag-name "h1" 289 . 290) (nil tag-type start 289 . 290) (nil tag-beg 16 289 . 290) (nil font-lock-face web-mode-html-tag-bracket-face 289 . 290) (281 . 746)) nil (25353 8771 292192 19000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing)) . -747) 746) nil (25353 8771 292065 938000) 0 nil])
([nil nil ((748 . 756) ("        " . 747) (undo-tree-id34 . -8) (746 . 756) (t 25353 8771 299068 902000)) nil (25353 8798 251306 638000) 0 nil])
([nil nil ((761 . 762) (759 . 760) (756 . 760)) nil (25353 8798 251302 857000) 0 nil])
([nil nil ((" " . -761) (undo-tree-id33 . -1) 762) nil (25353 8798 251299 987000) 0 nil])
([nil nil ((#("/" 0 1 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face)) . -759) (undo-tree-id32 . -1) 760) nil (25353 8798 251292 380000) 0 nil])
([nil nil (("s" . -1452) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) ("t" . -1453) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 1454 (t 25353 8798 255297 282000)) nil (25354 23620 183594 911000) 0 nil])
([nil nil ((1452 . 1454)) nil (25354 23620 183585 608000) 0 nil])
([nil nil (("s" . -1135) (undo-tree-id0 . -1) ("t" . -1136) (undo-tree-id1 . -1) 1137) nil (25354 23620 183582 407000) 0 nil])
([nil nil ((1135 . 1137)) nil (25354 23620 183559 567000) 0 nil])
([nil nil ((798 . 807) (t 25354 23620 190792 58000)) nil (25354 31375 264714 112000) 0 nil])
([nil nil ((812 . 813) (810 . 811) (807 . 811)) nil (25354 31375 264711 869000) 0 nil])
([nil current ((" " . -812) (undo-tree-id0 . -1) 813) nil (25354 31375 264705 980000) 0 nil])
nil
