(undo-tree-save-format-version . 1)
"dd0724cf0ee2c340773af9702d79ac1c65ae63d6"
[nil nil nil nil (25227 49536 343986 442000) 0 nil]
([nil nil (("//CTreeview.js
import { VTreeview, VTreeviewNode } from \"vuetify/lib\";

VTreeviewNode.mixin({
    data: () => ({
        isHover: false
    }),
    computed: {
        scopedProps() {
            return {
                item: this.item,
                leaf: !this.children,
                selected: this.isSelected,
                indeterminate: this.isIndeterminate,
                active: this.isActive,
                open: this.isOpen,
                hover: this.isHover
            };
        }
    },
    methods: {
        onMouseEnter() {
            this.isHover = true;
        },
        onMouseLeave() {
            this.isHover = false;
        },
        genNode() {
            const children = [this.genContent()];

            if (this.selectable) children.unshift(this.genCheckbox());

            if (this.hasChildren) {
                children.unshift(this.genToggle());
            } else {
                children.unshift(...this.genLevel(1));
            }

            children.unshift(...this.genLevel(this.level));

            const element = this.$createElement(
                \"div\",
                this.setTextColor(this.isActive && this.color, {
                    staticClass: \"v-treeview-node__root\",
                    class: {
                        [this.activeClass]: this.isActive
                    },
                    on: {
                        click: () => {
                            if (this.openOnClick && this.hasChildren) {
                                this.checkChildren().then(this.open);
                            } else if (this.activatable && !this.disabled) {
                                this.isActive = !this.isActive;
                                this.treeview.updateActive(
                                    this.key,
                                    this.isActive
                                );
                                this.treeview.emitActive();
                            }
                        },
                        dblclick: () => {
                            this.treeview.emitDblclick(this.item);
                        }
                    }
                }),
                children
            );

            element.data = element.data || {};
            this._g(element.data, {
                mouseenter: this.onMouseEnter,
                mouseleave: this.onMouseLeave
            });

            return element;
        }
    }
});

export default VTreeview.mixin({
    methods: {
        emitDblclick(item) {
            this.$emit(\"item:dblclick\", item);
        }
    }
});
" . 1) (undo-tree-id0 . -15) (undo-tree-id1 . -2616) (undo-tree-id2 . -2616) (t 25227 48785 832338 88000)) nil (25227 49536 343978 509000) 0 nil])
([nil current ((1 . 76)) nil (25227 49536 343932 746000) 0 nil])
nil
