(undo-tree-save-format-version . 1)
"ced77a32b1aa9e9b14a0697e8b5d8c220f2c3bfe"
[nil nil nil nil (25488 37208 99780 624000) 0 nil]
([nil nil ((240 . 276) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . 241) (undo-tree-id414 . -36) (undo-tree-id415 . -31) (undo-tree-id416 . -16) (undo-tree-id417 . -7) (undo-tree-id418 . -36) (t 25488 37211 477356 344000)) nil (25488 37285 640447 406000) 0 nil] [nil nil ((480 . 482) (t 25430 15109 183354 886000)) ((#("

" 0 1 (fontified t) 1 2 (fontified defer)) . 480) (undo-tree-id350 . -2) (undo-tree-id351 . -1) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -1) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -2) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1)) (25488 37208 77471 980000) 0 nil])
([nil nil ((217 . 253) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -240) (undo-tree-id411 . -36) (undo-tree-id412 . -7) (undo-tree-id413 . -36) 276) nil (25488 37285 640440 215000) 0 nil])
([nil nil ((481 . 482)) ((#("
" 0 1 (fontified defer)) . 481) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1)) (25488 37208 37995 969000) 0 nil])
([nil nil ((199 . 235) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -217) (undo-tree-id408 . -36) (undo-tree-id409 . -7) (undo-tree-id410 . -36) 253) nil (25488 37285 640435 348000) 0 nil])
([nil nil ((nil rear-nonsticky nil 531 . 532) (nil fontified nil 501 . 532) (nil fontified nil 500 . 501) (nil fontified nil 491 . 500) (nil fontified nil 490 . 491) (nil fontified nil 489 . 490) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 485 . 487) (nil fontified nil 482 . 485) (482 . 532)) ((#("run:
	@$(VENV_DOCS) && python3 ./run_livereload.py" 0 1 (fontified nil face (makefile-targets)) 1 2 (fontified nil face (makefile-targets)) 2 3 (fontified nil face (makefile-targets)) 3 5 (fontified nil) 5 6 (fontified nil face whitespace-tab) 6 7 (fontified nil face font-lock-type-face) 7 8 (fontified nil face (makefile-shell)) 8 9 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 9 18 (fontified nil face (font-lock-variable-name-face makefile-shell)) 18 19 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 19 23 (fontified nil face (makefile-shell)) 23 49 (fontified nil face (makefile-shell)) 49 50 (rear-nonsticky nil fontified nil face (makefile-shell))) . 482) (undo-tree-id329 . -23) (undo-tree-id330 . -23) (undo-tree-id331 . -23) (undo-tree-id332 . -23) (undo-tree-id333 . -23) (nil fontified defer 485 . 487) (nil rear-nonsticky t 531 . 532)) (25488 37208 7074 237000) 0 nil])
([nil nil ((169 . 205) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -199) (undo-tree-id405 . -36) (undo-tree-id406 . -7) (undo-tree-id407 . -36) 235) nil (25488 37285 640430 599000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face (makefile-targets))) . 481) (#("u" 0 1 (fontified t face (makefile-targets))) . 481) (#("r" 0 1 (fontified t face (makefile-targets))) . 481) (#("
" 0 1 (fontified t)) . 481) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) ((481 . 482) (481 . 482) (481 . 482) (481 . 482)) (25488 37207 973420 736000) 0 nil])
([nil nil ((152 . 188) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -169) (undo-tree-id402 . -36) (undo-tree-id403 . -7) (undo-tree-id404 . -36) 205) nil (25488 37285 640425 563000) 0 nil])
([nil nil ((481 . 486)) ((#("build" 0 5 (fontified t face (makefile-targets))) . 481)) (25488 37207 943383 421000) 0 nil])
([nil nil ((110 . 146) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -152) (undo-tree-id399 . -36) (undo-tree-id400 . -7) (undo-tree-id401 . -36) 188) nil (25488 37285 640420 712000) 0 nil])
([nil nil ((534 . 539)) ((#("html:" 0 4 (fontified defer face (makefile-targets)) 4 5 (fontified defer)) . 534) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5)) (25488 37207 926780 491000) 0 nil])
([nil nil ((48 . 84) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -110) (undo-tree-id396 . -36) (undo-tree-id397 . -7) (undo-tree-id398 . -36) 146) nil (25488 37285 640415 767000) 0 nil])
([nil nil ((539 . 540)) ((#("
" 0 1 (fontified t)) . 539) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1)) (25488 37207 910977 474000) 0 nil])
([nil nil ((47 . 83) (#("# venv
VENV_DOCS=. venv/bin/activate" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 7 (fontified t face font-lock-comment-face) 7 16 (fontified t face font-lock-variable-name-face) 16 36 (fontified t)) . -48) (undo-tree-id393 . -36) (undo-tree-id394 . -7) (undo-tree-id395 . -36) 84) nil (25488 37285 640410 774000) 0 nil])
([nil nil ((540 . 541)) ((#("	" 0 1 (fontified defer face whitespace-tab)) . 540) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1)) (25488 37207 854099 381000) 0 nil])
([nil nil ((83 . 84)) nil (25488 37285 640405 690000) 0 nil])
([nil nil ((nil rear-nonsticky nil 611 . 612) (nil fontified nil 611 . 612) (nil fontified nil 610 . 611) (nil fontified nil 609 . 610) (nil fontified nil 607 . 609) (nil fontified nil 606 . 607) (nil fontified nil 596 . 606) (nil fontified nil 595 . 596) (nil fontified nil 593 . 595) (nil fontified nil 591 . 593) (nil fontified nil 583 . 591) (nil fontified nil 580 . 583) (nil fontified nil 579 . 580) (nil fontified nil 577 . 579) (nil fontified nil 568 . 577) (nil fontified nil 565 . 568) (nil fontified nil 556 . 565) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (nil fontified nil 544 . 554) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (541 . 612)) ((#("@$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)" 0 1 (fontified nil face (makefile-shell)) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 13 (fontified nil face (font-lock-variable-name-face makefile-shell)) 13 14 (fontified nil face (font-lock-variable-name-face makefile-shell)) 14 15 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 15 19 (fontified nil face (makefile-shell)) 19 23 (fontified nil face (makefile-shell)) 23 24 (fontified nil face (makefile-shell)) 24 27 (fontified nil face (makefile-shell font-lock-string-face)) 27 36 (fontified nil face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 36 38 (fontified nil face (makefile-shell font-lock-string-face)) 38 39 (fontified nil face (makefile-shell)) 39 42 (fontified nil face (makefile-shell font-lock-string-face)) 42 50 (fontified nil face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 50 52 (fontified nil face (makefile-shell font-lock-string-face)) 52 53 (fontified nil face (makefile-shell)) 53 54 (fontified nil face (makefile-shell)) 54 55 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 55 65 (fontified nil face (font-lock-variable-name-face makefile-shell)) 65 66 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 66 68 (fontified nil face (makefile-shell)) 68 69 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 69 70 (fontified nil face (font-lock-variable-name-face makefile-shell)) 70 71 (rear-nonsticky nil fontified nil face (rainbow-delimiters-depth-1-face makefile-shell))) . 541) (undo-tree-id279 . -71) (undo-tree-id280 . -71) (undo-tree-id281 . -52) (undo-tree-id282 . -19) (undo-tree-id283 . -53) (undo-tree-id284 . -53) (undo-tree-id285 . -53) (undo-tree-id286 . -53) (undo-tree-id287 . -53) (undo-tree-id288 . -19) (undo-tree-id289 . -19) (undo-tree-id290 . -19) (undo-tree-id291 . -19) (undo-tree-id292 . -19) (undo-tree-id293 . -19) (undo-tree-id294 . -19) (undo-tree-id295 . -19) (undo-tree-id296 . -19) (nil rear-nonsticky t 611 . 612)) (25488 37207 821125 449000) 0 nil])
([nil nil ((47 . 48)) nil (25488 37285 640404 447000) 0 nil])
([nil nil ((#("help" 0 4 (fontified t face (makefile-shell))) . 560) (undo-tree-id6 . -4) (undo-tree-id8 . -4)) ((560 . 564)) (25488 37207 789562 133000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -204) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 205) nil (25488 37285 640402 138000) 0 nil])
([nil nil ((560 . 564)) ((#("html" 0 4 (fontified defer face (makefile-shell))) . 560)) (25488 37207 756923 144000) 0 nil])
([nil nil ((#("?" 0 1 (fontified defer)) . 220)) nil (25488 37285 640383 494000) 0 nil])
([nil nil ((nil rear-nonsticky nil 556 . 557) (nil fontified nil 554 . 557) (nil fontified nil 553 . 554) (nil fontified nil 544 . 553) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (541 . 557)) ((#("@$(VENV_DOCS) &&" 0 1 (fontified nil face font-lock-type-face) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 4 (fontified nil face (font-lock-variable-name-face makefile-shell)) 4 5 (fontified nil face (font-lock-variable-name-face makefile-shell)) 5 6 (fontified nil face (font-lock-variable-name-face makefile-shell)) 6 7 (fontified nil face (font-lock-variable-name-face makefile-shell)) 7 8 (fontified nil face (font-lock-variable-name-face makefile-shell)) 8 9 (fontified nil face (font-lock-variable-name-face makefile-shell)) 9 10 (fontified nil face (font-lock-variable-name-face makefile-shell)) 10 11 (fontified nil face (font-lock-variable-name-face makefile-shell)) 11 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 14 (fontified nil face (makefile-shell)) 14 15 (fontified nil face (makefile-shell)) 15 16 (rear-nonsticky nil fontified nil face (makefile-shell))) . 541) (undo-tree-id273 . -16) (undo-tree-id274 . -16) (undo-tree-id275 . -16) (undo-tree-id276 . -16) (undo-tree-id277 . -16) (undo-tree-id278 . -16) (nil rear-nonsticky t 556 . 557)) (25488 37207 726466 676000) 0 nil])
([nil nil ((191 . 277) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . 190) (undo-tree-id457 . -86) (undo-tree-id458 . -14) (undo-tree-id459 . -16) (undo-tree-id460 . -85) (undo-tree-id461 . -86) (t 25488 37285 645462 556000)) nil (25488 37329 248651 311000) 0 nil])
([nil nil ((557 . 558)) ((#(" " 0 1 (fontified defer face (makefile-shell))) . 557) (undo-tree-id272 . -1)) (25488 37207 692441 688000) 0 nil])
([nil nil ((192 . 278) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . -191) (undo-tree-id454 . -86) (undo-tree-id455 . -86) (undo-tree-id456 . -86) 277) nil (25488 37329 248643 773000) 0 nil])
([nil nil ((#("python3 ./run_livereload.py" 0 26 (fontified t face (makefile-shell)) 26 27 (rear-nonsticky t fontified t face (makefile-shell))) . 506) (undo-tree-id4 . -27) (undo-tree-id5 . -27)) ((506 . 533)) (25488 37207 668691 625000) 0 nil])
([nil nil ((193 . 279) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified defer face font-lock-variable-name-face) 10 16 (fontified defer) 16 27 (fontified defer face font-lock-variable-name-face) 27 45 (fontified defer) 45 54 (fontified defer face font-lock-variable-name-face) 54 63 (fontified defer) 63 71 (fontified defer face font-lock-variable-name-face) 71 86 (fontified defer)) . -192) (undo-tree-id451 . -86) (undo-tree-id452 . -86) (undo-tree-id453 . -86) 278) nil (25488 37329 248639 86000) 0 nil])
([nil nil ((nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 574 . 575) (nil fontified nil 572 . 574) (nil fontified nil 571 . 572) (nil fontified nil 561 . 571) (nil fontified nil 560 . 561) (nil fontified nil 558 . 560) (nil fontified nil 556 . 558) (nil fontified nil 548 . 556) (nil fontified nil 545 . 548) (nil fontified nil 544 . 545) (nil fontified nil 542 . 544) (nil fontified nil 533 . 542) (nil fontified nil 530 . 533) (nil fontified nil 521 . 530) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 509 . 519) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (506 . 577)) ((#("@$(SPHINXBUILD) -M html \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)" 0 1 (fontified nil face (makefile-shell)) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 13 (fontified nil face (font-lock-variable-name-face makefile-shell)) 13 14 (fontified nil face (font-lock-variable-name-face makefile-shell)) 14 15 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 15 19 (fontified nil face (makefile-shell)) 19 20 (fontified nil face (makefile-shell)) 20 21 (fontified nil face (makefile-shell)) 21 22 (fontified nil face (makefile-shell)) 22 23 (fontified nil face (makefile-shell)) 23 24 (fontified nil face (makefile-shell)) 24 27 (fontified nil face (makefile-shell font-lock-string-face)) 27 36 (fontified nil face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 36 38 (fontified nil face (makefile-shell font-lock-string-face)) 38 39 (fontified nil face (makefile-shell)) 39 42 (fontified nil face (makefile-shell font-lock-string-face)) 42 50 (fontified nil face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 50 52 (fontified nil face (makefile-shell font-lock-string-face)) 52 53 (fontified nil face (makefile-shell)) 53 54 (fontified nil face (makefile-shell)) 54 55 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 55 65 (fontified nil face (font-lock-variable-name-face makefile-shell)) 65 66 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 66 68 (fontified nil face (makefile-shell)) 68 69 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 69 70 (fontified nil face (font-lock-variable-name-face makefile-shell)) 70 71 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-1-face makefile-shell))) . 506) (undo-tree-id246 . -52) (undo-tree-id247 . -23) (undo-tree-id248 . -52) (undo-tree-id249 . -52) (undo-tree-id250 . -53) (undo-tree-id251 . -53) (undo-tree-id252 . -53) (undo-tree-id253 . -53) (undo-tree-id254 . -53) (undo-tree-id255 . -53) (undo-tree-id256 . -53) (undo-tree-id257 . -53) (undo-tree-id258 . -53) (undo-tree-id259 . -19) (undo-tree-id260 . -19) (undo-tree-id261 . -19) (undo-tree-id262 . -19) (undo-tree-id263 . -19) (undo-tree-id264 . -19) (undo-tree-id265 . -23) (undo-tree-id266 . -23) (undo-tree-id267 . -23) (undo-tree-id268 . -23) (undo-tree-id269 . -23) (undo-tree-id270 . -23) (undo-tree-id271 . -23) (nil fontified defer 576 . 577)) (25488 37207 629530 727000) 0 nil])
([nil nil ((261 . 347) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified defer face font-lock-variable-name-face) 10 16 (fontified defer) 16 27 (fontified defer face font-lock-variable-name-face) 27 45 (fontified defer) 45 54 (fontified defer face font-lock-variable-name-face) 54 63 (fontified defer) 63 71 (fontified defer face font-lock-variable-name-face) 71 86 (fontified defer)) . -193) (undo-tree-id448 . -86) (undo-tree-id449 . -86) (undo-tree-id450 . -86) 279) nil (25488 37329 248634 383000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face (makefile-shell))) . -525) (undo-tree-id0 . -1) (#("t" 0 1 (fontified t face (makefile-shell))) . -526) (undo-tree-id1 . -1) (#("m" 0 1 (fontified t face (makefile-shell))) . -527) (undo-tree-id2 . -1) (#("l" 0 1 (fontified t face (makefile-shell))) . -528) (undo-tree-id3 . -1) 529) ((525 . 529)) (25488 37207 597331 617000) 0 nil])
([nil nil ((262 . 348) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified defer face font-lock-variable-name-face) 10 16 (fontified defer) 16 27 (fontified defer face font-lock-variable-name-face) 27 45 (fontified defer) 45 54 (fontified defer face font-lock-variable-name-face) 54 63 (fontified defer) 63 71 (fontified defer face font-lock-variable-name-face) 71 86 (fontified defer)) . -261) (undo-tree-id445 . -86) (undo-tree-id446 . -86) (undo-tree-id447 . -86) 347) nil (25488 37329 248629 732000) 0 nil])
([nil nil ((525 . 527)) ((#("bu" 0 2 (fontified defer face (makefile-shell))) . 525) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2)) (25488 37207 566288 99000) 0 nil])
([nil nil ((269 . 355) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified defer face font-lock-variable-name-face) 10 16 (fontified defer) 16 27 (fontified defer face font-lock-variable-name-face) 27 45 (fontified defer) 45 54 (fontified defer face font-lock-variable-name-face) 54 63 (fontified defer) 63 71 (fontified defer face font-lock-variable-name-face) 71 86 (fontified defer)) . -262) (undo-tree-id442 . -86) (undo-tree-id443 . -86) (undo-tree-id444 . -86) 348) nil (25488 37329 248625 87000) 0 nil])
([nil nil ((527 . 530)) ((#("ild" 0 3 (fontified defer face (makefile-shell))) . 527)) (25488 37207 535440 765000) 0 nil])
([nil nil ((344 . 430) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified defer face font-lock-variable-name-face) 10 16 (fontified defer) 16 27 (fontified defer face font-lock-variable-name-face) 27 45 (fontified defer) 45 54 (fontified defer face font-lock-variable-name-face) 54 63 (fontified defer) 63 71 (fontified defer face font-lock-variable-name-face) 71 86 (fontified defer)) . -269) (undo-tree-id439 . -86) (undo-tree-id440 . -86) (undo-tree-id441 . -86) 355) nil (25488 37329 248620 437000) 0 nil])
([nil nil ((nil fontified nil 946 . 947) (nil fontified nil 944 . 946) (nil fontified nil 943 . 944) (nil fontified nil 934 . 943) (nil fontified nil 933 . 934) (nil fontified nil 932 . 933) (nil fontified nil 931 . 932) (931 . 947) (t 25488 36606 740324 951000)) ((#("@$(VENV_DOCS) &&" 0 1 (fontified nil face font-lock-type-face) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified nil face (makefile-shell)) 15 16 (rear-nonsticky t fontified nil face (makefile-shell))) . 931) (undo-tree-id238 . -16) (undo-tree-id239 . -16) (undo-tree-id240 . -16) (undo-tree-id241 . -16) (nil fontified defer 946 . 947)) (25488 37207 505537 211000) 0 nil])
([nil nil ((269 . 355) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . -344) (undo-tree-id436 . -86) (undo-tree-id437 . -86) (undo-tree-id438 . -86) 430) nil (25488 37329 248614 366000) 0 nil])
([nil nil ((947 . 948)) ((#(" " 0 1 (fontified defer)) . 947)) (25488 37207 481589 814000) 0 nil])
([nil nil ((262 . 348) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . -269) (undo-tree-id433 . -86) (undo-tree-id434 . -86) (undo-tree-id435 . -86) 355) nil (25488 37329 248609 574000) 0 nil])
([nil nil ((#("$(SPHINXOPTS) $(O)" 0 1 (fontified t face (makefile-shell)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 2 12 (fontified t face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified t face (makefile-shell)) 15 16 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 16 17 (fontified t face (font-lock-variable-name-face makefile-shell)) 17 18 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face makefile-shell))) . 560) (undo-tree-id76 . -18) (undo-tree-id77 . -18) (t 25488 36755 484616 613000)) ((560 . 578)) (25488 37207 438472 117000) 0 nil] [nil nil ((#("
build:
	@$(VENV_DOCS) && @$(SPHINXBUILD) -M build \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)
html:
	@$(VENV_DOCS) && @$(SPHINXBUILD) -M html \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)" 0 1 (fontified t) 1 6 (fontified t face (makefile-targets)) 6 8 (fontified t) 8 9 (fontified t face whitespace-tab) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face (makefile-shell)) 11 12 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 12 21 (fontified t face (font-lock-variable-name-face makefile-shell)) 21 22 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 22 26 (fontified t face (makefile-shell)) 26 27 (fontified t face (makefile-shell)) 27 28 (fontified t face (makefile-shell)) 28 29 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 29 39 (fontified t face (font-lock-variable-name-face makefile-shell)) 39 40 (fontified t face (font-lock-variable-name-face makefile-shell)) 40 41 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 41 51 (fontified t face (makefile-shell)) 51 54 (fontified t face (makefile-shell font-lock-string-face)) 54 63 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 63 65 (fontified t face (makefile-shell font-lock-string-face)) 65 66 (fontified t face (makefile-shell)) 66 69 (fontified t face (makefile-shell font-lock-string-face)) 69 77 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 77 79 (fontified t face (makefile-shell font-lock-string-face)) 79 81 (fontified t face (makefile-shell)) 81 82 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 82 92 (fontified t face (font-lock-variable-name-face makefile-shell)) 92 93 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 93 95 (fontified t face (makefile-shell)) 95 96 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 96 97 (fontified t face (font-lock-variable-name-face makefile-shell)) 97 98 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 98 99 (fontified t) 99 103 (fontified t face (makefile-targets)) 103 105 (fontified t) 105 106 (fontified t face whitespace-tab) 106 107 (fontified t face font-lock-type-face) 107 108 (fontified t face (makefile-shell)) 108 109 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 109 118 (fontified t face (font-lock-variable-name-face makefile-shell)) 118 119 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 119 121 (fontified t face (makefile-shell)) 121 122 (rear-nonsticky t fontified t face (makefile-shell)) 122 123 (fontified t face (makefile-shell)) 123 124 (fontified t face (makefile-shell)) 124 125 (fontified t face (makefile-shell)) 125 126 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 126 136 (fontified t face (font-lock-variable-name-face makefile-shell)) 136 137 (fontified t face (font-lock-variable-name-face makefile-shell)) 137 138 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 138 147 (fontified t face (makefile-shell)) 147 150 (fontified t face (makefile-shell font-lock-string-face)) 150 159 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 159 161 (fontified t face (makefile-shell font-lock-string-face)) 161 162 (fontified t face (makefile-shell)) 162 165 (fontified t face (makefile-shell font-lock-string-face)) 165 173 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 173 175 (fontified t face (makefile-shell font-lock-string-face)) 175 177 (fontified t face (makefile-shell)) 177 178 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 178 188 (fontified t face (font-lock-variable-name-face makefile-shell)) 188 189 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 189 191 (fontified t face (makefile-shell)) 191 192 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 192 193 (fontified t face (font-lock-variable-name-face makefile-shell)) 193 194 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face makefile-shell))) . 480) (undo-tree-id11 . -1) (undo-tree-id12 . -194) (undo-tree-id13 . -1) (undo-tree-id14 . -106) (undo-tree-id15 . -142) (undo-tree-id16 . -22) (undo-tree-id17 . -25) (undo-tree-id18 . -106) (undo-tree-id19 . -194) (undo-tree-id20 . -26) (undo-tree-id21 . -26) (undo-tree-id22 . -194) (undo-tree-id23 . -122) (undo-tree-id25 . -7) (undo-tree-id27 . -7) (undo-tree-id29 . -7) (undo-tree-id31 . -7) (undo-tree-id33 . -7) (undo-tree-id35 . -194) (undo-tree-id36 . -194)) ((480 . 674)) (25488 36753 258566 299000) 0 nil])
([nil nil ((269 . 355) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . -262) (undo-tree-id430 . -86) (undo-tree-id431 . -86) (undo-tree-id432 . -86) 348) nil (25488 37329 248604 904000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (makefile-shell))) . -559) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 560) ((559 . 560)) (25488 37207 422858 479000) 0 nil])
([nil nil ((#("@$(VENV_DOCS) &&" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face (makefile-shell)) 2 3 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 3 12 (fontified t face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified t face (makefile-shell)) 15 16 (rear-nonsticky t fontified t face (makefile-shell))) . 737) (undo-tree-id40 . -16) (undo-tree-id41 . -16) (t 25488 36647 988409 308000)) ((737 . 753)) (25488 36752 817610 747000) 0 nil])
([nil nil ((262 . 348) (#("SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build
" 0 10 (fontified t face font-lock-variable-name-face) 10 16 (fontified t) 16 27 (fontified t face font-lock-variable-name-face) 27 45 (fontified t) 45 54 (fontified t face font-lock-variable-name-face) 54 63 (fontified t) 63 71 (fontified t face font-lock-variable-name-face) 71 86 (fontified t)) . -269) (undo-tree-id427 . -86) (undo-tree-id428 . -86) (undo-tree-id429 . -86) 355) nil (25488 37329 248600 119000) 0 nil])
([nil nil ((#("$(SPHINXOPTS) $(O)" 0 1 (fontified t face (makefile-shell)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 2 12 (fontified t face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified t face (makefile-shell)) 15 16 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 16 17 (fontified t face (font-lock-variable-name-face makefile-shell)) 17 18 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face makefile-shell))) . 637) (undo-tree-id70 . -18) (undo-tree-id72 . -18) (undo-tree-id73 . -18)) ((637 . 655)) (25488 37207 378505 685000) 0 nil])
([nil nil ((nil fontified nil 742 . 743) (nil fontified nil 740 . 742) (nil fontified nil 739 . 740) (nil fontified nil 730 . 739) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (727 . 743)) ((#("@$(VENV_DOCS) &&" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face)) 3 12 (fontified nil face (font-lock-variable-name-face)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face)) 13 15 (fontified nil) 15 16 (rear-nonsticky t fontified nil)) . 727) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (nil fontified t 742 . 743)) (25488 36752 459866 228000) 0 nil])
([nil nil ((#("setup:
	@python3 -m venv venv && $(VENV_DOCS) && pip3 install -r requirements.txt" 0 5 (fontified t face (makefile-targets)) 5 7 (fontified t) 7 8 (fontified t face whitespace-tab) 8 9 (fontified t face font-lock-type-face) 9 34 (fontified t face (makefile-shell)) 34 35 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 35 44 (fontified t face (font-lock-variable-name-face makefile-shell)) 44 45 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 45 81 (fontified t face (makefile-shell))) . 348) (undo-tree-id423 . -81) (undo-tree-id424 . -7) (undo-tree-id425 . -81) (undo-tree-id426 . -81)) nil (25488 37329 248595 413000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (makefile-shell))) . -636) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) 637) ((636 . 637)) (25488 37207 348476 523000) 0 nil])
([nil nil ((743 . 744)) ((#(" " 0 1 (fontified t)) . 743)) (25488 36752 191540 294000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -347) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 348) nil (25488 37329 248589 520000) 0 nil])
([nil nil ((#("@$(VENV_DOCS) &&" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face (makefile-shell)) 2 3 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 3 12 (fontified t face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified t face (makefile-shell)) 15 16 (rear-nonsticky t fontified t face (makefile-shell))) . 893) (undo-tree-id191 . -16) (undo-tree-id192 . -16) (t 25488 36896 840866 259000)) ((893 . 909)) (25488 37207 313363 962000) 0 nil] [nil nil ((#("@" 0 1 (fontified t face font-lock-type-face)) . -567) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("$" 0 1 (fontified t face (makefile-shell makefile-targets))) . -568) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell))) . -569) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("V" 0 1 (fontified t face (font-lock-variable-name-face makefile-shell))) . -570) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("E" 0 1 (fontified nil face (font-lock-variable-name-face makefile-shell))) . -571) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("N" 0 1 (fontified t face (font-lock-variable-name-face makefile-shell))) . -572) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("V" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -573) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("_" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -574) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("D" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -575) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("O" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -576) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("C" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -577) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("S" 0 1 (fontified defer face (font-lock-variable-name-face makefile-shell))) . -578) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#(")" 0 1 (fontified defer face (rainbow-delimiters-depth-1-face makefile-shell))) . -579) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified defer face (makefile-shell))) . -580) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("&" 0 1 (fontified defer face (makefile-shell))) . -581) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("&" 0 1 (rear-nonsticky t fontified t face (makefile-shell))) . -582) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t face (makefile-shell))) . -583) (undo-tree-id110 . -1) 584 (t 25488 36809 760715 250000)) ((567 . 584) (t 25488 36861 144805 371000)) (25488 36861 140979 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 752) (#("	" 0 1 (fontified t face whitespace-tab)) . 752) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("
" 0 1 (fontified t)) . 752) (undo-tree-id39 . -1)) ((752 . 753) (752 . 753) (752 . 753)) (25488 36751 969873 741000) 0 nil])
([nil nil ((190 . 191)) nil (25488 37329 248574 931000) 0 nil])
([nil nil ((893 . 894)) ((#("	" 0 1 (fontified defer face whitespace-tab)) . 893) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1)) (25488 37207 279593 470000) 0 nil])
nil
([nil nil ((752 . 753)) ((#(" " 0 1 (fontified t)) . 752) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (t 25488 36715 772542 11000)) (25488 36715 770085 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 271 . 272) (nil fontified nil 236 . 272) (nil fontified nil 235 . 236) (nil fontified nil 226 . 235) (nil fontified nil 225 . 226) (nil fontified nil 200 . 225) (nil fontified nil 199 . 200) (nil fontified nil 198 . 199) (nil fontified nil 196 . 198) (nil fontified nil 191 . 196) (191 . 272)) nil (25488 37363 911557 231000) 0 nil])
([nil nil ((894 . 895)) ((#("	" 0 1 (fontified defer face whitespace-tab)) . 894) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1)) (25488 37207 261283 391000) 0 nil])
nil
([nil nil ((723 . 724)) nil (25488 37423 165211 283000) 0 nil] [nil nil ((360 . 362) (t 25488 37329 253523 766000)) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 360) (t 25488 37345 421546 247000)) (25488 37345 416347 189000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face whitespace-tab)) . -892) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id116 . -1) (undo-tree-id118 . -1) (undo-tree-id120 . -1) (undo-tree-id122 . -1) (undo-tree-id124 . -1) (undo-tree-id126 . -1) (undo-tree-id128 . -1) (undo-tree-id130 . -1) (undo-tree-id132 . -1) (undo-tree-id134 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) (undo-tree-id140 . -1) (undo-tree-id142 . -1) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (undo-tree-id148 . -1) (#("	" 0 1 (fontified t face whitespace-tab)) . -893) (undo-tree-id150 . -1) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id156 . -1) (undo-tree-id158 . -1) (undo-tree-id160 . -1) (undo-tree-id162 . -1) (undo-tree-id164 . -1) (undo-tree-id166 . -1) (undo-tree-id168 . -1) (undo-tree-id170 . -1) (undo-tree-id172 . -1) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (#("	" 0 1 (fontified t face whitespace-tab)) . -894) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id189 . -1) 895) ((892 . 895)) (25488 37207 209105 575000) 0 nil])
([nil nil ((358 . 359) (t 25488 37424 281654 403000)) nil (25488 37510 147299 580000) 0 nil] [nil nil ((apply -18 344 600 undo--wrap-and-run-primitive-undo 344 600 ((577 . 579) (501 . 503) (493 . 495) (445 . 447) (438 . 440) (413 . 415) (393 . 395) (362 . 364) (344 . 346)))) ((apply 18 344 582 undo--wrap-and-run-primitive-undo 344 582 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 344) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 362) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 393) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 413) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 438) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 445) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 493) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 501) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 577) 743))) (25488 37422 785531 787000) 0 nil])
nil
([nil nil ((892 . 893)) ((#("	" 0 1 (fontified t face whitespace-tab)) . 892)) (25488 37207 174323 954000) 0 nil])
([nil nil ((375 . 376)) nil (25488 37510 147298 453000) 0 nil])
([nil nil ((743 . 744)) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 743)) (25488 37422 464233 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 591 . 592) (nil fontified nil 584 . 592) (584 . 592) (t 25488 36930 460922 453000)) ((#("Makefile" 0 7 (fontified nil face (makefile-shell)) 7 8 (rear-nonsticky nil fontified nil face (makefile-shell))) . 584) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (nil rear-nonsticky t 591 . 592)) (25488 37207 141392 778000) 0 nil])
([nil nil ((343 . 430) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . 344) (undo-tree-id613 . -87) (undo-tree-id614 . -17) (undo-tree-id615 . -87) (undo-tree-id616 . -87) (undo-tree-id617 . -87) (undo-tree-id618 . -46) (undo-tree-id619 . -87) (undo-tree-id620 . -13) (undo-tree-id621 . -87)) nil (25488 37510 147296 759000) 0 nil])
([nil nil ((755 . 756)) ((#("#" 0 1 (fontified t syntax-table (3) face font-lock-comment-face)) . 755) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1)) (25488 37422 100078 480000) 0 nil])
([nil nil ((592 . 593)) ((#(" " 0 1 (fontified defer face (makefile-shell))) . 592)) (25488 37207 119529 645000) 0 nil])
([nil nil ((275 . 362) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -343) (undo-tree-id610 . -65) (undo-tree-id611 . -87) (undo-tree-id612 . -87) 430) nil (25488 37510 147286 333000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t syntax-table (3) face font-lock-comment-face)) . -755) (undo-tree-id462 . -1) 756) ((755 . 756)) (25488 37421 613528 67000) 0 nil])
([nil nil ((nil rear-nonsticky nil 513 . 514) (nil fontified nil 506 . 514) (506 . 514)) ((#("Makefile" 0 7 (fontified nil face (makefile-shell)) 7 8 (fontified nil rear-nonsticky nil face (makefile-shell))) . 506) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (nil rear-nonsticky t 513 . 514)) (25488 37207 90116 512000) 0 nil])
([nil nil ((274 . 361) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -275) (undo-tree-id607 . -65) (undo-tree-id608 . -87) (undo-tree-id609 . -87) 362) nil (25488 37510 147281 577000) 0 nil])
([nil nil ((756 . 757)) ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified defer)) . 756)) (25488 37421 72061 124000) 0 nil])
([nil nil ((514 . 515)) ((#(" " 0 1 (fontified defer face (makefile-shell))) . 514)) (25488 37207 61204 873000) 0 nil])
([nil nil ((273 . 360) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -274) (undo-tree-id604 . -65) (undo-tree-id605 . -87) (undo-tree-id606 . -87) 361) nil (25488 37510 147275 729000) 0 nil])
([nil nil ((247 . 248) (t 25488 37382 669597 634000)) ((#("	" 0 1 (fontified t face whitespace-tab)) . 247) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1)) (25488 37420 651663 531000) 0 nil])
([nil nil ((568 . 569) (t 25488 36954 376961 773000)) ((#(" " 0 1 (fontified defer face (makefile-shell))) . 568) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1)) (25488 37207 22371 165000) 0 nil])
([nil nil ((198 . 285) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -273) (undo-tree-id601 . -65) (undo-tree-id602 . -87) (undo-tree-id603 . -87) 360) nil (25488 37510 147270 760000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face whitespace-tab)) . -247) (undo-tree-id463 . -1) 248) ((247 . 248)) (25488 37420 206294 115000) 0 nil])
([nil nil ((nil rear-nonsticky nil 586 . 587) (nil fontified nil 586 . 587) (nil fontified nil 585 . 586) (nil fontified nil 584 . 585) (nil fontified nil 582 . 584) (nil fontified nil 581 . 582) (nil fontified nil 571 . 581) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (569 . 587)) ((#("$(SPHINXOPTS) $(O)" 0 1 (fontified nil face (makefile-shell)) 1 2 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 2 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified nil face (makefile-shell)) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 16 17 (fontified nil face (font-lock-variable-name-face makefile-shell)) 17 18 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face makefile-shell))) . 569) (undo-tree-id208 . -17) (nil rear-nonsticky t 586 . 587)) (25488 37206 989229 253000) 0 nil])
([nil nil ((191 . 278) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -198) (undo-tree-id598 . -65) (undo-tree-id599 . -87) (undo-tree-id600 . -87) 285) nil (25488 37510 147266 152000) 0 nil])
([nil nil ((198 . 199)) ((#("	" 0 1 (fontified t face whitespace-tab)) . 198) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1)) (25488 37419 730319 444000) 0 nil])
([nil nil ((673 . 674)) ((#(" " 0 1 (fontified t face (makefile-shell))) . 673) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1)) (25488 37206 546549 715000) 0 nil])
([nil nil ((190 . 277) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -191) (undo-tree-id595 . -65) (undo-tree-id596 . -87) (undo-tree-id597 . -87) 278) nil (25488 37510 147261 435000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face whitespace-tab)) . 199)) ((199 . 200) (t 25488 37400 437621 955000)) (25488 37400 430188 808000) 0 nil])
([nil nil ((nil rear-nonsticky nil 691 . 692) (nil fontified nil 691 . 692) (nil fontified nil 690 . 691) (nil fontified nil 689 . 690) (nil fontified nil 687 . 689) (nil fontified nil 686 . 687) (nil fontified nil 676 . 686) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (674 . 692)) ((#("$(SPHINXOPTS) $(O)" 0 1 (fontified nil face (makefile-shell)) 1 2 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 2 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified nil face (makefile-shell)) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 16 17 (fontified nil face (font-lock-variable-name-face makefile-shell)) 17 18 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face makefile-shell))) . 674) (nil rear-nonsticky t 691 . 692) (t 25488 37101 261192 816000)) (25488 37101 255907 399000) 0 nil])
([nil nil ((148 . 235) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -190) (undo-tree-id592 . -65) (undo-tree-id593 . -87) (undo-tree-id594 . -87) 277) nil (25488 37510 147256 594000) 0 nil])
nil
nil
([nil nil ((86 . 173) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified defer face font-lock-variable-name-face) 10 17 (fontified defer) 17 28 (fontified defer face font-lock-variable-name-face) 28 47 (fontified defer) 47 56 (fontified defer face font-lock-variable-name-face) 56 65 (fontified defer) 65 73 (fontified defer face font-lock-variable-name-face) 73 87 (fontified defer)) . -148) (undo-tree-id589 . -65) (undo-tree-id590 . -87) (undo-tree-id591 . -87) 235) nil (25488 37510 147251 833000) 0 nil])
([nil nil ((85 . 172) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -86) (undo-tree-id586 . -65) (undo-tree-id587 . -87) (undo-tree-id588 . -87) 173) nil (25488 37510 147246 788000) 0 nil])
([nil nil ((55 . 142) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -85) (undo-tree-id583 . -65) (undo-tree-id584 . -87) (undo-tree-id585 . -87) 172) nil (25488 37510 147240 685000) 0 nil])
([nil nil ((48 . 135) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -55) (undo-tree-id580 . -65) (undo-tree-id581 . -87) (undo-tree-id582 . -87) 142) nil (25488 37510 147235 850000) 0 nil])
([nil nil ((47 . 134) (#("SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = .
BUILDDIR      = _build" 0 10 (fontified t face font-lock-variable-name-face) 10 17 (fontified t) 17 28 (fontified t face font-lock-variable-name-face) 28 47 (fontified t) 47 56 (fontified t face font-lock-variable-name-face) 56 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 87 (fontified t)) . -48) (undo-tree-id577 . -65) (undo-tree-id578 . -87) (undo-tree-id579 . -87) 135) nil (25488 37510 147231 133000) 0 nil])
([nil nil ((#("# You can set these variables from the command line, and also
# from the environment for the first two." 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-delimiter-face) 63 64 (fontified t face font-lock-comment-delimiter-face) 64 103 (fontified t face font-lock-comment-face)) . 173) (undo-tree-id574 . -103) (undo-tree-id575 . -62) (undo-tree-id576 . -103)) nil (25488 37510 147226 223000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -171) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("
" 0 1 (fontified t)) . -172) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 173) nil (25488 37510 147221 55000) 0 nil])
([nil nil ((134 . 135)) nil (25488 37510 147212 148000) 0 nil])
([nil nil ((47 . 50)) nil (25488 37510 147210 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 150 . 151) (nil fontified nil 112 . 151) (nil fontified nil 111 . 112) (nil fontified nil 110 . 111) (nil fontified nil 50 . 110) (nil fontified nil 49 . 50) (nil fontified nil 48 . 49) (48 . 151)) nil (25488 37510 147208 828000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 432) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1)) nil (25488 37510 147202 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 507 . 508) (nil fontified nil 504 . 508) (nil fontified nil 503 . 504) (nil fontified nil 494 . 503) (nil fontified nil 493 . 494) (nil fontified nil 492 . 493) (nil fontified nil 491 . 492) (491 . 508) (t 25488 37510 153769 636000)) nil (25488 37542 639875 253000) 0 nil])
([nil nil ((508 . 509)) nil (25488 37542 639871 282000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (makefile-shell))) . -508) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) 509) nil (25488 37542 639864 764000) 0 nil])
([nil nil ((745 . 746) (t 25488 37542 645812 635000)) nil (25488 37571 76883 438000) 0 nil])
([nil nil ((757 . 758)) nil (25488 37571 76879 140000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t syntax-table (3) face font-lock-comment-face)) . -757) (undo-tree-id654 . -1) 758) nil (25488 37571 76874 495000) 0 nil])
([nil nil ((758 . 759)) nil (25488 37571 76860 11000) 0 nil])
([nil nil ((581 . 582)) nil (25488 37571 76850 893000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -746) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) 747 (t 25488 37571 85850 24000)) nil (25488 37824 685574 665000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 758)) nil (25488 37824 685560 792000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t face (makefile-shell))) . 508)) nil (25488 37837 895744 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 773 . 774) (nil fontified nil 771 . 774) (nil fontified nil 770 . 771) (nil fontified nil 761 . 770) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (758 . 774) (t 25488 37824 730175 69000)) nil (25488 37840 362852 416000) 0 nil] [nil nil ((nil rear-nonsticky nil 774 . 775) (nil fontified nil 772 . 775) (nil fontified nil 771 . 772) (nil fontified nil 762 . 771) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (759 . 775) (t 25488 37824 730175 69000)) ((#("@$(VENV_DOCS) &&" 0 1 (fontified nil face font-lock-type-face) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 15 (fontified nil face (makefile-shell)) 15 16 (fontified nil rear-nonsticky nil face (makefile-shell))) . 759) (undo-tree-id658 . -16) (nil rear-nonsticky t 774 . 775)) (25488 37837 895453 703000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t face (makefile-shell))) . 774) (undo-tree-id659 . -1)) nil (25488 37840 362848 76000) 0 nil])
nil
([nil nil ((774 . 775)) nil (25488 37840 362833 6000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 362) (undo-tree-id673 . -1) (#("
" 0 1 (fontified t)) . 362) (undo-tree-id674 . -1) (t 25488 37840 414194 760000)) nil (25488 37932 568750 883000) 0 nil])
([nil nil ((#("
# Put it first so that \"make\" without argument is like \"make help\"." 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 24 (fontified t face font-lock-comment-face) 24 30 (fontified t face font-lock-comment-face) 30 56 (fontified t face font-lock-comment-face) 56 67 (fontified t face font-lock-comment-face) 67 68 (fontified t face font-lock-comment-face)) . 361) (undo-tree-id669 . -68) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -68)) nil (25488 37932 568746 946000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 510)) nil (25488 37932 568741 499000) 0 nil])
([nil nil ((362 . 363)) nil (25488 37932 568740 516000) 0 nil])
([nil nil ((362 . 369)) nil (25488 37932 568739 629000) 0 nil])
([nil nil ((370 . 371)) nil (25488 37932 568738 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 457 . 458) (nil fontified nil 457 . 458) (nil fontified nil 456 . 457) (nil fontified nil 455 . 456) (nil fontified nil 453 . 455) (nil fontified nil 452 . 453) (nil fontified nil 446 . 452) (nil fontified nil 442 . 446) (nil fontified nil 441 . 442) (nil fontified nil 439 . 441) (nil fontified nil 437 . 439) (nil fontified nil 429 . 437) (nil fontified nil 426 . 429) (nil fontified nil 425 . 426) (nil fontified nil 423 . 425) (nil fontified nil 414 . 423) (nil fontified nil 411 . 414) (nil fontified nil 402 . 411) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 390 . 400) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 384 . 387) (nil fontified nil 383 . 384) (nil fontified nil 374 . 383) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (371 . 458)) nil (25488 37932 568735 998000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face (makefile-shell))) . -406) (undo-tree-id665 . -1) (#("e" 0 1 (fontified t face (makefile-shell))) . -407) (undo-tree-id666 . -1) (#("l" 0 1 (fontified t face (makefile-shell))) . -408) (undo-tree-id667 . -1) (#("p" 0 1 (fontified t face (makefile-shell))) . -409) (undo-tree-id668 . -1) 410) nil (25488 37932 568727 667000) 0 nil])
([nil nil ((406 . 411)) nil (25488 37932 568721 377000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face (makefile-shell))) . -408) (undo-tree-id662 . -1) (#("s" 0 1 (fontified t face (makefile-shell))) . -409) (undo-tree-id663 . -1) (#("n" 0 1 (fontified t face (makefile-shell))) . -410) (undo-tree-id664 . -1) 411) nil (25488 37932 568719 880000) 0 nil])
([nil nil ((408 . 409)) nil (25488 37932 568714 901000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face (makefile-shell))) . -408) (undo-tree-id661 . -1) 409) nil (25488 37932 568713 739000) 0 nil])
([nil nil ((408 . 412)) nil (25488 37932 568710 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (makefile-shell))) . -411) (undo-tree-id660 . -1) 412) nil (25488 37932 568709 59000) 0 nil])
([nil nil ((459 . 463)) nil (25488 37932 568914 490000) 0 nil])
([nil nil ((nil fontified nil 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 529 . 531) (nil fontified nil 528 . 529) (nil fontified nil 522 . 528) (nil fontified nil 518 . 522) (nil fontified nil 517 . 518) (nil fontified nil 515 . 517) (nil fontified nil 513 . 515) (nil fontified nil 505 . 513) (nil fontified nil 502 . 505) (nil fontified nil 501 . 502) (nil fontified nil 499 . 501) (nil fontified nil 490 . 499) (nil fontified nil 487 . 490) (nil fontified nil 477 . 487) (nil fontified nil 476 . 477) (nil fontified nil 475 . 476) (nil fontified nil 465 . 475) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (463 . 534)) nil (25488 37944 790088 629000) 0 nil] [nil nil ((nil rear-nonsticky nil 549 . 550) (nil fontified nil 549 . 550) (nil fontified nil 548 . 549) (nil fontified nil 547 . 548) (nil fontified nil 545 . 547) (nil fontified nil 544 . 545) (nil fontified nil 538 . 544) (nil fontified nil 534 . 538) (nil fontified nil 533 . 534) (nil fontified nil 531 . 533) (nil fontified nil 529 . 531) (nil fontified nil 521 . 529) (nil fontified nil 518 . 521) (nil fontified nil 517 . 518) (nil fontified nil 515 . 517) (nil fontified nil 506 . 515) (nil fontified nil 503 . 506) (nil fontified nil 494 . 503) (nil fontified nil 493 . 494) (nil fontified nil 492 . 493) (nil fontified nil 482 . 492) (nil fontified nil 481 . 482) (nil fontified nil 480 . 481) (nil fontified nil 479 . 480) (nil fontified nil 476 . 479) (nil fontified nil 475 . 476) (nil fontified nil 466 . 475) (nil fontified nil 465 . 466) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (463 . 550)) ((#("@$(VENV_DOCS) && $(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)" 0 1 (fontified nil face (makefile-shell)) 1 2 (fontified nil face (makefile-shell)) 2 3 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 3 12 (fontified nil face (font-lock-variable-name-face makefile-shell)) 12 13 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 13 16 (fontified nil face (makefile-shell)) 16 17 (rear-nonsticky t fontified nil face (makefile-shell)) 17 18 (fontified nil face (makefile-shell)) 18 19 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 19 29 (fontified nil face (font-lock-variable-name-face makefile-shell)) 29 30 (fontified nil face (font-lock-variable-name-face makefile-shell)) 30 31 (fontified nil face (rainbow-delimiters-depth-1-face makefile-shell)) 31 40 (fontified nil face (makefile-shell)) 40 43 (fontified nil face (makefile-shell font-lock-string-face)) 43 50 (fontified nil face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 50 52 (fontified nil face (whitespace-line font-lock-variable-name-face makefile-shell font-lock-string-face)) 52 54 (fontified nil face (whitespace-line makefile-shell font-lock-string-face)) 54 55 (fontified nil face (whitespace-line makefile-shell)) 55 58 (fontified nil face (whitespace-line makefile-shell font-lock-string-face)) 58 66 (fontified nil face (whitespace-line font-lock-variable-name-face makefile-shell font-lock-string-face)) 66 68 (fontified nil face (whitespace-line makefile-shell font-lock-string-face)) 68 70 (fontified nil face (whitespace-line makefile-shell)) 70 71 (fontified nil face (rainbow-delimiters-depth-1-face whitespace-line makefile-shell)) 71 75 (fontified nil face (whitespace-line font-lock-variable-name-face makefile-shell)) 75 81 (fontified nil face (whitespace-line font-lock-variable-name-face makefile-shell)) 81 82 (fontified nil face (rainbow-delimiters-depth-1-face whitespace-line makefile-shell)) 82 84 (fontified nil face (whitespace-line makefile-shell)) 84 85 (fontified nil face (rainbow-delimiters-depth-1-face whitespace-line makefile-shell)) 85 86 (fontified nil face (whitespace-line font-lock-variable-name-face makefile-shell)) 86 87 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face whitespace-line makefile-shell))) . 463) (undo-tree-id675 . -87) (nil rear-nonsticky t 549 . 550)) (25488 37932 568690 494000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (makefile-shell))) . -482) (undo-tree-id691 . -1) (#("e" 0 1 (fontified t face (makefile-shell))) . -483) (undo-tree-id692 . -1) (#("a" 0 1 (fontified t face (makefile-shell))) . -484) (undo-tree-id693 . -1) (#("n" 0 1 (fontified t face (makefile-shell))) . -485) (undo-tree-id694 . -1) 486) nil (25488 37945 9420 389000) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t face (makefile-shell))) . -481) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) 482) nil (25488 37948 402074 824000) 0 nil] [nil nil ((#("setup:
	@python3 -m venv venv && $(VENV_DOCS) && pip3 install -r requirements.txt
build: 
	@$(VENV_DOCS) && $(SPHINXBUILD) -M clean \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O) && $(SPHINXBUILD) -M c" 0 5 (fontified t face (makefile-targets)) 5 7 (fontified t) 7 8 (fontified t face whitespace-tab) 8 9 (fontified t face font-lock-type-face) 9 34 (fontified t face (makefile-shell)) 34 35 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 35 44 (fontified t face (font-lock-variable-name-face makefile-shell)) 44 45 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 45 56 (fontified t face (makefile-shell)) 56 80 (fontified t face (makefile-shell)) 80 81 (rear-nonsticky t fontified t face (makefile-shell)) 81 82 (fontified t) 82 87 (fontified t face (makefile-targets)) 87 88 (fontified t) 88 89 (fontified t face whitespace-trailing) 89 90 (fontified t) 90 91 (fontified t face whitespace-tab) 91 92 (fontified t face font-lock-type-face) 92 93 (fontified t face (makefile-shell)) 93 94 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 94 103 (fontified t face (font-lock-variable-name-face makefile-shell)) 103 104 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 104 107 (fontified t face (makefile-shell)) 107 108 (rear-nonsticky t fontified t face (makefile-shell)) 108 109 (fontified t face (makefile-shell)) 109 110 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 110 120 (fontified t face (font-lock-variable-name-face makefile-shell)) 120 121 (fontified t face (font-lock-variable-name-face makefile-shell)) 121 122 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 122 132 (fontified t face (makefile-shell)) 132 135 (fontified t face (makefile-shell font-lock-string-face)) 135 144 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 144 146 (fontified t face (makefile-shell font-lock-string-face)) 146 147 (fontified t face (makefile-shell)) 147 150 (fontified t face (makefile-shell font-lock-string-face)) 150 158 (fontified t face (font-lock-variable-name-face makefile-shell font-lock-string-face)) 158 160 (fontified t face (makefile-shell font-lock-string-face)) 160 162 (fontified t face (makefile-shell)) 162 163 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 163 167 (fontified t face (font-lock-variable-name-face makefile-shell)) 167 173 (fontified t face (font-lock-variable-name-face makefile-shell)) 173 174 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 174 176 (fontified t face (makefile-shell)) 176 177 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 177 178 (fontified t face (font-lock-variable-name-face makefile-shell)) 178 179 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face makefile-shell)) 179 182 (fontified t face (makefile-shell)) 182 183 (fontified t face (makefile-shell)) 183 184 (fontified t face (makefile-shell)) 184 185 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 185 195 (fontified t face (font-lock-variable-name-face makefile-shell)) 195 196 (fontified t face (font-lock-variable-name-face makefile-shell)) 196 197 (fontified t face (rainbow-delimiters-depth-1-face makefile-shell)) 197 202 (fontified t face (makefile-shell))) . -280) (undo-tree-id676 . -183) (undo-tree-id677 . -81) (undo-tree-id678 . -82) (undo-tree-id679 . -82) (undo-tree-id680 . -82) (undo-tree-id681 . -82) (undo-tree-id682 . -6) (undo-tree-id683 . -6) (undo-tree-id684 . -6) (undo-tree-id685 . -202) (undo-tree-id686 . -90) (undo-tree-id687 . -81) (undo-tree-id688 . -91) (undo-tree-id689 . -183) (undo-tree-id690 . -179) 482) ((280 . 482)) (25488 37944 790176 1000) 0 nil])
([nil nil ((481 . 485)) nil (25488 37948 402038 212000) 0 nil])
([nil nil ((280 . 282)) ((#("ht" 0 2 (fontified t)) . 280) (undo-tree-id695 . -2)) (25488 37944 790025 417000) 0 nil])
([nil nil ((485 . 486)) nil (25488 37948 402037 194000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t face (makefile-shell))) . -485) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 486) nil (25488 37948 402034 399000) 0 nil])
([nil current ((#(" " 0 1 (fontified t face whitespace-trailing)) . -368) 485) nil (25488 37948 401998 802000) 0 nil])
nil
