(undo-tree-save-format-version . 1)
"558455b64f69b5fe6d88f03693d6f966322eef5b"
[nil nil nil nil (25644 9235 563963 588000) 0 nil]
([nil nil (("Package" . 1) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (t 25643 53324 783327 680000)) nil (25644 9235 563959 174000) 0 nil])
([nil nil ((1 . 7)) nil (25644 9235 563913 513000) 0 nil])
([nil nil ((481 . 483) (t 25644 9235 567483 434000)) nil (25644 9519 854006 849000) 0 nil])
([nil nil ((483 . 778)) nil (25644 9519 854005 659000) 0 nil])
([nil nil (("resolutionx" . 491) (undo-tree-id50 . -11) (undo-tree-id51 . -11)) nil (25644 9519 854004 638000) 0 nil])
([nil nil ((491 . 504)) nil (25644 9519 854001 328000) 0 nil])
([nil nil (("1.0-0" . 514) (undo-tree-id48 . -5) (undo-tree-id49 . -5)) nil (25644 9519 854000 227000) 0 nil])
([nil nil ((514 . 519)) nil (25644 9519 853996 712000) 0 nil])
([nil nil (("c" . 1) ("r" . 1) ("u" . 1) ("o" . 1) ("S" . 1)) nil (25644 9519 853995 196000) 0 nil])
([nil nil (("e" . 1)) nil (25644 9519 853993 347000) 0 nil])
([nil nil ((1 . 8)) nil (25644 9519 853992 217000) 0 nil])
([nil nil (("Package: derant-sensor
Version: 1.1.0
Type: Standard
Maintainer: info@derant.com
Description: Derant network monitoring sensor for use with our NDR platform, Angle.
Homepage: https://www.derant.com/
Architecture: all
Depends: iptables (>= 1.8.7), iptables-persistent (>= 1.0.16), curl (>= 7.81.0), net-tools (>= 1.60), ethtool (>= 1:5.16-1), suricata, zeek-lts (>=5.0.7), cmake, build-essential, flex, bison, libpcap-dev, libssl-dev, zlib1g-dev, swig, python3-dev, bash-completion" . 1) (undo-tree-id39 . -23) (undo-tree-id40 . -7) (undo-tree-id41 . -480) (undo-tree-id42 . -22) (undo-tree-id43 . -37) (undo-tree-id44 . -37) (undo-tree-id45 . -480) (undo-tree-id46 . -480) (undo-tree-id47 . -480)) nil (25644 9519 853990 715000) 0 nil])
([nil nil (("
" . 1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) ("
" . 1) (undo-tree-id37 . -1) ("
" . 1) (undo-tree-id38 . -1)) nil (25644 9519 853979 924000) 0 nil])
([nil nil (("Package: resolutionx
Section: base
Priority: optional
Architecture: all
Description: ResolutionX
 A simple tool to enable you to have your desired resolution   " . 138) (undo-tree-id22 . -21) (undo-tree-id23 . -160) (undo-tree-id24 . -21) (undo-tree-id25 . -21) (undo-tree-id26 . -35) (undo-tree-id27 . -35) (undo-tree-id28 . -54) (undo-tree-id29 . -54) (undo-tree-id30 . -72) (undo-tree-id31 . -72) (undo-tree-id32 . -97) (undo-tree-id33 . -97) (undo-tree-id34 . -160)) nil (25644 9519 853973 312000) 0 nil])
([nil nil ((138 . 618)) nil (25644 9562 418657 738000) 0 nil])
([nil nil (("First_name Last_name " . 115) (undo-tree-id237 . -21) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -21) (undo-tree-id258 . -20) (undo-tree-id259 . -21)) nil (25644 9564 847052 117000) 0 nil] [nil nil (("debhelper (>= 9)" . 86) (undo-tree-id4 . -16) (undo-tree-id6 . -2) (undo-tree-id8 . -2) (undo-tree-id10 . -2) (undo-tree-id12 . -2) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -16) (undo-tree-id21 . -16)) ((86 . 102)) (25644 9561 969517 811000) 0 nil])
([nil nil ((115 . 145)) nil (25644 9564 847009 527000) 0 nil])
([nil nil ((86 . 340)) (("iptables (>= 1.8.7), iptables-persistent (>= 1.0.16), curl (>= 7.81.0), net-tools (>= 1.60), ethtool (>= 1:5.16-1), suricata, zeek-lts (>=5.0.7), cmake, build-essential, flex, bison, libpcap-dev, libssl-dev, zlib1g-dev, swig, python3-dev, bash-completion" . 86) (undo-tree-id221 . -254) (undo-tree-id222 . -254) (undo-tree-id223 . -254) (undo-tree-id224 . -254) (undo-tree-id225 . -254) (undo-tree-id226 . -254) (undo-tree-id227 . -254) (undo-tree-id228 . -254) (undo-tree-id229 . -254) (undo-tree-id230 . -254) (undo-tree-id231 . -254) (undo-tree-id232 . -254) (undo-tree-id233 . -254) (undo-tree-id234 . -254) (undo-tree-id235 . -254) (undo-tree-id236 . -254)) (25644 9561 510093 317000) 0 nil])
([nil nil (("." . -35) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 36 (t 25644 9564 858988 20000)) nil (25644 9712 755541 147000) 0 nil])
([nil nil ((" " . -373) 340) ((373 . 374)) (25644 9560 976503 121000) 0 nil])
([nil nil ((35 . 36)) nil (25644 9712 755535 982000) 0 nil])
([nil nil (("First_name Last_name" . 353) (undo-tree-id62 . -20) (undo-tree-id63 . -20) (t 25644 9519 863054 516000)) ((353 . 373)) (25644 9560 621772 317000) 0 nil])
([nil nil (("." . -182) (undo-tree-id260 . -1) 183) nil (25644 9712 755533 435000) 0 nil])
([nil nil ((353 . 355)) (("Cr" . 353) (undo-tree-id198 . -2) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2)) (25644 9560 274234 432000) 0 nil])
([nil nil ((182 . 183)) nil (25644 9712 755519 588000) 0 nil])
([nil nil (("r" . -354) (undo-tree-id61 . -1) 355) ((354 . 355)) (25644 9559 796362 250000) 0 nil])
([nil nil (("
Version: 1.1-0" . 22) (undo-tree-id272 . -1) (undo-tree-id273 . -15) (undo-tree-id274 . -10) (undo-tree-id275 . -15) (t 25644 9712 766771 366000)) nil (25644 9781 312706 576000) 0 nil])
([nil nil ((354 . 375)) (("hristopher Groot, Sim" . 354) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -21) (undo-tree-id145 . -21) (undo-tree-id146 . -21) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -21) (undo-tree-id151 . -21) (undo-tree-id152 . -21) (undo-tree-id153 . -21) (undo-tree-id154 . -21) (undo-tree-id155 . -21) (undo-tree-id156 . -21) (undo-tree-id157 . -21) (undo-tree-id158 . -21) (undo-tree-id159 . -21) (undo-tree-id160 . -21) (undo-tree-id161 . -21) (undo-tree-id162 . -21) (undo-tree-id163 . -21) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) (undo-tree-id167 . -21) (undo-tree-id168 . -21) (undo-tree-id169 . -21) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (undo-tree-id175 . -21) (undo-tree-id176 . -21) (undo-tree-id177 . -21) (undo-tree-id178 . -21) (undo-tree-id179 . -21) (undo-tree-id180 . -21) (undo-tree-id181 . -21) (undo-tree-id182 . -21) (undo-tree-id183 . -21) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -21) (undo-tree-id188 . -21) (undo-tree-id189 . -21) (undo-tree-id190 . -21) (undo-tree-id191 . -21) (undo-tree-id192 . -21) (undo-tree-id193 . -21) (undo-tree-id194 . -21) (undo-tree-id195 . -21) (undo-tree-id196 . -21) (undo-tree-id197 . -21)) (25644 9559 481482 741000) 0 nil])
([nil nil (("
Version: 1.1-0" . 154) (undo-tree-id269 . -1) (undo-tree-id270 . -15) (undo-tree-id271 . -15)) nil (25644 9781 312700 292000) 0 nil])
([nil nil ((375 . 379)) (("on V" . 375) (undo-tree-id93 . -4) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4)) (25644 9559 194520 260000) 0 nil])
([nil nil (("
Type: Standard" . 154) (undo-tree-id266 . -1) (undo-tree-id267 . -15) (undo-tree-id268 . -15)) nil (25644 9781 312694 849000) 0 nil])
([nil nil (("V" . -378) (undo-tree-id60 . -1) 379) ((378 . 379)) (25644 9558 846011 948000) 0 nil])
([nil current (("
Maintainer: info@derant.com" . 154) (undo-tree-id263 . -1) (undo-tree-id264 . -28) (undo-tree-id265 . -28)) nil (25644 9781 312686 309000) 0 nil])
([nil nil ((378 . 384)) (("Beest " . 378) (undo-tree-id64 . -6) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6)) (25644 9558 526955 819000) 0 nil])
nil
([nil nil ((" " . -383) (undo-tree-id52 . -1) (undo-tree-id54 . -1) (undo-tree-id56 . -1) (undo-tree-id58 . -1) 384) ((383 . 384) (t 25644 9530 971038 71000)) (25644 9530 960033 472000) 0 nil])
nil
