(undo-tree-save-format-version . 1)
"48976a9c04f5995dc68b06a731331649ae36d1a3"
[nil nil nil nil (25559 51260 967610 721000) 0 nil]
([nil nil ((39562 . 39571) (t 25489 57175 285830 575000)) nil (25559 51260 967608 558000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 39584) (39583 . 39584) (39582 . 39584) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -39582) (39571 . 39583)) nil (25559 51260 967605 564000) 0 nil])
([nil nil ((39583 . 39597)) nil (25559 51260 967597 298000) 0 nil])
([nil nil ((39598 . 39607) (t 25559 51260 978378 729000)) nil (25559 51297 477626 608000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 39620) (undo-tree-id0 . -1) (39619 . 39620) (39618 . 39620) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -39618) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (39607 . 39619)) nil (25559 51297 477623 57000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39649 . 39650) (nil part-side javascript 39649 . 39650) (nil face (rainbow-delimiters-depth-5-face) 39649 . 39650) (nil part-side javascript 39635 . 39649) (nil part-side javascript 39634 . 39635) (nil face (rainbow-delimiters-depth-5-face) 39634 . 39635) (nil part-side javascript 39623 . 39634) (nil part-side javascript 39619 . 39623) (nil face web-mode-constant-face 39619 . 39623) (39619 . 39650)) nil (25559 51297 477596 723000) 0 nil])
([nil nil ((39817 . 39818) (t 25559 51297 482305 281000)) nil (25559 51533 435604 113000) 0 nil])
([nil nil ((#("#" 0 1 (part-side javascript)) . -39817) (undo-tree-id6 . -1) 39818) nil (25559 51533 435602 667000) 0 nil])
([nil nil ((39817 . 39820)) nil (25559 51533 435600 230000) 0 nil])
([nil nil ((39921 . 39932)) nil (25559 51533 435599 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40032 . 40033) (nil part-side javascript 40032 . 40033) (nil face (rainbow-delimiters-depth-5-face) 40032 . 40033) (nil part-side javascript 40031 . 40032) (nil face (rainbow-delimiters-depth-6-face) 40031 . 40032) (nil part-side javascript 40027 . 40031) (nil part-side javascript 40026 . 40027) (nil face (rainbow-delimiters-depth-7-face) 40026 . 40027) (nil part-side javascript 40025 . 40026) (nil part-token string 40025 . 40026) (nil syntax-table (15) 40025 . 40026) (nil font-lock-face web-mode-javascript-string-face 40025 . 40026) (nil part-side javascript 40024 . 40025) (nil part-token string 40024 . 40025) (nil font-lock-face web-mode-javascript-string-face 40024 . 40025) (nil part-side javascript 40023 . 40024) (nil part-token string 40023 . 40024) (nil syntax-table (15) 40023 . 40024) (nil font-lock-face web-mode-javascript-string-face 40023 . 40024) (nil part-side javascript 40022 . 40023) (nil face (rainbow-delimiters-depth-7-face) 40022 . 40023) (nil part-side javascript 40011 . 40022) (nil face web-mode-function-call-face 40011 . 40022) (nil part-side javascript 40010 . 40011) (nil part-side javascript 40009 . 40010) (nil face (rainbow-delimiters-depth-7-face) 40009 . 40010) (nil part-side javascript 40008 . 40009) (nil part-side javascript 40007 . 40008) (nil face (rainbow-delimiters-depth-7-face) 40007 . 40008) (nil part-side javascript 40006 . 40007) (nil part-side javascript 40005 . 40006) (nil face (rainbow-delimiters-depth-6-face) 40005 . 40006) (nil part-side javascript 39996 . 40005) (nil face web-mode-function-call-face 39996 . 40005) (nil part-side javascript 39995 . 39996) (nil part-side javascript 39994 . 39995) (nil face (rainbow-delimiters-depth-6-face) 39994 . 39995) (nil part-side javascript 39993 . 39994) (nil part-side javascript 39992 . 39993) (nil face (rainbow-delimiters-depth-6-face) 39992 . 39993) (nil part-side javascript 39987 . 39992) (nil part-side javascript 39986 . 39987) (nil face web-mode-function-name-face 39986 . 39987) (nil part-side javascript 39985 . 39986) (nil face (rainbow-delimiters-depth-5-face) 39985 . 39986) (nil part-side javascript 39982 . 39985) (nil face web-mode-function-call-face 39982 . 39985) (nil part-side javascript 39981 . 39982) (nil part-side javascript 39980 . 39981) (nil face (rainbow-delimiters-depth-5-face) 39980 . 39981) (nil part-side javascript 39966 . 39980) (nil part-side javascript 39965 . 39966) (nil face (rainbow-delimiters-depth-5-face) 39965 . 39966) (nil part-side javascript 39954 . 39965) (nil part-side javascript 39950 . 39954) (nil face web-mode-constant-face 39950 . 39954) (nil part-side javascript 39947 . 39950) (nil part-side javascript 39938 . 39947) (nil face web-mode-variable-name-face 39938 . 39947) (nil part-side javascript 39937 . 39938) (nil part-side javascript 39932 . 39937) (nil face web-mode-keyword-face 39932 . 39937) (39932 . 40033)) nil (25559 51533 435595 210000) 0 nil])
([nil nil ((#("2" 0 1 (part-side javascript)) . -39993) (undo-tree-id5 . -1) 39994) nil (25559 51533 435579 650000) 0 nil])
([nil nil ((39993 . 39994)) nil (25559 51533 435577 158000) 0 nil])
([nil nil ((#(".substring(x[2].lastIndexOf('/') + 1" 0 1 (part-side javascript) 1 10 (part-side javascript face web-mode-function-call-face) 10 11 (part-side javascript face (rainbow-delimiters-depth-6-face)) 11 12 (part-side javascript) 12 13 (part-side javascript face (rainbow-delimiters-depth-7-face)) 13 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-7-face)) 15 16 (part-side javascript) 16 27 (part-side javascript face web-mode-function-call-face) 27 28 (part-side javascript face (rainbow-delimiters-depth-7-face)) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript face (rainbow-delimiters-depth-7-face)) 32 36 (part-side javascript)) . 39995) (undo-tree-id3 . -36) (undo-tree-id4 . -36)) nil (25559 51533 435575 567000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 39995)) nil (25559 51533 435565 914000) 0 nil])
([nil nil ((40115 . 40128)) nil (25559 51533 435564 810000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 40141) (40140 . 40141) (40139 . 40141) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -40139) (40128 . 40140)) nil (25559 51533 435561 971000) 0 nil])
([nil nil ((40140 . 40147)) nil (25559 51533 435553 753000) 0 nil])
([nil nil ((#("name" 0 4 (part-side javascript)) . 39072) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (t 25559 51533 441842 499000)) nil (25559 51665 734068 197000) 0 nil])
([nil nil ((39072 . 39074)) nil (25559 51665 734062 868000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -39240) (undo-tree-id11 . -1) (#("a" 0 1 (part-side javascript)) . -39241) (undo-tree-id12 . -1) (#("m" 0 1 (part-side javascript)) . -39242) (undo-tree-id13 . -1) (#("e" 0 1 (part-side javascript)) . -39243) (undo-tree-id14 . -1) 39244) nil (25559 51665 734060 365000) 0 nil])
([nil nil ((39240 . 39242)) nil (25559 51665 734050 863000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -39391) (undo-tree-id7 . -1) (#("a" 0 1 (part-side javascript)) . -39392) (undo-tree-id8 . -1) (#("m" 0 1 (part-side javascript)) . -39393) (undo-tree-id9 . -1) (#("e" 0 1 (part-side javascript)) . -39394) (undo-tree-id10 . -1) 39395) nil (25559 51665 734048 18000) 0 nil])
([nil nil ((39391 . 39393)) nil (25559 51665 734031 159000) 0 nil])
([nil nil ((#("e" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1698) (#("m" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1698) (#("a" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1698) (#("n" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1698)) nil (25559 51665 734027 327000) 0 nil])
([nil nil ((1698 . 1700)) nil (25559 51665 734013 993000) 0 nil])
([nil nil ((40132 . 40137) (t 25559 51665 737590 44000)) nil (25559 52227 77072 345000) 0 nil])
([nil nil ((#("
            console.log(this.filters)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 24 (part-side javascript face web-mode-function-call-face) 24 25 (part-side javascript face (rainbow-delimiters-depth-7-face)) 25 29 (part-side javascript face web-mode-constant-face) 29 30 (part-side javascript) 30 37 (part-side javascript) 37 38 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 40107) (undo-tree-id26 . -38) (undo-tree-id27 . -1) (undo-tree-id28 . -38) (t 25559 52227 84550 520000)) nil (25559 52292 14364 171000) 0 nil])
([nil nil ((#("        // const selection = this.filter_all[selectedFilter].map(x => x[2].substring(x[2].lastIndexOf('/') + 1))" 0 8 (part-side javascript) 8 9 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 9 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 11 16 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 16 17 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 17 26 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 26 29 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 29 33 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 33 44 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 44 45 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 45 59 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 59 60 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 60 61 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 61 64 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 64 65 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 65 66 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 66 71 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 71 72 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 72 73 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 73 74 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 74 75 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 75 84 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 84 85 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 85 86 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 86 87 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 87 88 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 88 89 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 89 90 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 90 101 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 101 102 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 102 103 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 103 104 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 104 105 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 105 106 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 106 110 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 110 111 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 111 112 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 39801) (undo-tree-id40 . -112) (undo-tree-id41 . -112) (undo-tree-id42 . -112) (undo-tree-id43 . -112) (undo-tree-id44 . -112)) nil (25559 52303 769827 875000) 0 nil] [nil nil ((#("          // const selection = this.filter_all[selectedFilter].map(x => x[2].substring(x[2].lastIndexOf('/') + 1))" 0 10 (part-side javascript) 10 11 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 11 13 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 13 18 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 18 19 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 19 28 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 28 31 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 31 35 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 35 46 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 46 47 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 47 61 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 61 62 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 62 63 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 63 66 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 66 67 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 67 68 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 68 73 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 73 74 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 74 75 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 75 76 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 76 77 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 77 86 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 86 87 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 87 88 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 88 89 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 89 90 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 90 91 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 91 92 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 92 103 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 103 104 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 104 105 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 105 106 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 106 107 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 107 108 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 108 112 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 112 113 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 113 114 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 39799) (undo-tree-id22 . -114) (undo-tree-id23 . -114) (undo-tree-id24 . -114) (undo-tree-id25 . -114)) ((39799 . 39913)) (25559 52291 9520 472000) 0 nil])
([nil nil ((#("
        console.log(selectedFilter)
        console.log(this.filter_all[selectedFilter])" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (part-side javascript face web-mode-function-call-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-4-face)) 21 35 (part-side javascript) 35 36 (part-side javascript face (rainbow-delimiters-depth-4-face)) 36 37 (part-side javascript) 37 53 (part-side javascript) 53 56 (part-side javascript face web-mode-function-call-face) 56 57 (part-side javascript face (rainbow-delimiters-depth-4-face)) 57 61 (part-side javascript face web-mode-constant-face) 61 72 (part-side javascript) 72 73 (part-side javascript face (rainbow-delimiters-depth-5-face)) 73 87 (part-side javascript) 87 88 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face)) 88 89 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 39554) (undo-tree-id35 . -89) (undo-tree-id36 . -23) (undo-tree-id37 . -57) (undo-tree-id38 . -1) (undo-tree-id39 . -89)) nil (25559 52303 769820 275000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -39798) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 39799) ((39798 . 39799)) (25559 52290 449153 244000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript face whitespace-trailing)) . -39710) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) 39554) nil (25559 52303 769808 791000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . 33712)) ((33712 . 33713)) (25559 52288 77797 208000) 0 nil])
([nil nil ((#("e" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1734) (#("m" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1734) (#("a" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1734) (#("n" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 1734) (t 25559 52303 776410 871000)) nil (25559 52398 165553 789000) 0 nil])
([nil nil ((33712 . 33713)) ((#("c" 0 1 (part-side javascript)) . 33712) (undo-tree-id29 . -1)) (25559 52288 76609 131000) 0 nil])
([nil nil ((1734 . 1736)) nil (25559 52398 165551 914000) 0 nil])
nil
([nil nil ((#("n" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . -8844) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("a" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . -8845) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("m" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . -8846) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("e" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . -8847) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 8848) nil (25559 52398 165549 577000) 0 nil])
([nil nil ((8844 . 8846)) nil (25559 52398 165531 882000) 0 nil])
([nil nil ((#("e" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 8880) (#("m" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 8880) (#("a" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 8880) (#("n" 0 1 (block-side t tag-attr t tag-name "v-icon" tag-type start face web-mode-variable-name-face)) . 8880)) nil (25559 52398 165528 578000) 0 nil])
([nil nil ((8880 . 8882)) nil (25559 52398 165520 643000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -39703) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 39704 (t 25568 48397 261651 666000)) nil (25568 48610 435927 748000) 0 nil])
([nil nil ((27766 . 27775) (t 25581 62810 614500 586000)) nil (25596 54080 311505 459000) 0 nil])
([nil nil ((27775 . 27778)) nil (25596 54080 311504 163000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -27777) (undo-tree-id14 . -1) 27778) nil (25596 54080 311503 50000) 0 nil])
([nil nil ((27779 . 27784) (27778 . 27780) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -27778) (27777 . 27779)) nil (25596 54080 311500 717000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27793 . 27794) (nil part-side javascript 27784 . 27794) (27784 . 27794)) nil (25596 54080 311499 84000) 0 nil])
([nil nil ((27794 . 27798)) nil (25596 54080 311497 812000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -27794) (undo-tree-id10 . -1) (#("=" 0 1 (part-side javascript)) . -27795) (undo-tree-id11 . -1) (#("=" 0 1 (part-side javascript)) . -27796) (undo-tree-id12 . -1) (#(" " 0 1 (part-side javascript)) . -27797) (undo-tree-id13 . -1) 27798) nil (25596 54080 311495 988000) 0 nil])
([nil nil ((27795 . 27796)) nil (25596 54080 311490 209000) 0 nil])
([nil nil ((27796 . 27798) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -27796) (27796 . 27797)) nil (25596 54080 311489 72000) 0 nil])
([nil nil ((27797 . 27806)) nil (25596 54080 311487 710000) 0 nil])
([nil nil ((#("        this.get_filter_selections()
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-constant-face) 12 13 (part-side javascript) 13 34 (part-side javascript face web-mode-function-call-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-4-face)) 35 36 (part-side javascript face (rainbow-delimiters-depth-4-face)) 36 37 (part-side javascript)) . 27845) (27835 . 27845) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 27798) (undo-tree-id9 . -8) (27808 . 27845) 27806) nil (25596 54080 311486 247000) 0 nil])
([nil nil ((#("        this.get_all_filter_selections()
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-constant-face) 12 13 (part-side javascript) 13 38 (part-side javascript face web-mode-function-call-face) 38 39 (part-side javascript face (rainbow-delimiters-depth-4-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-4-face)) 40 41 (part-side javascript)) . 27886) (27876 . 27886) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 27835) (undo-tree-id8 . -8) (27845 . 27886) 27843) nil (25596 54080 311483 39000) 0 nil])
([nil nil ((#("        this.get_filter_selection_tree()
" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-constant-face) 12 13 (part-side javascript) 13 38 (part-side javascript face web-mode-function-call-face) 38 39 (part-side javascript face (rainbow-delimiters-depth-4-face)) 39 40 (part-side javascript face (rainbow-delimiters-depth-4-face)) 40 41 (part-side javascript)) . 27927) (27917 . 27927) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 27876) (undo-tree-id7 . -8) (27886 . 27927) 27884) nil (25596 54080 311480 44000) 0 nil])
([nil nil ((#("        if (JSON.stringify(newVal) != JSON.stringify(oldVal) && this.active.length > 0) {
" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 17 (part-side javascript) 17 26 (part-side javascript face web-mode-function-call-face) 26 27 (part-side javascript face (rainbow-delimiters-depth-6-face)) 27 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-6-face)) 34 43 (part-side javascript) 43 52 (part-side javascript face web-mode-function-call-face) 52 53 (part-side javascript face (rainbow-delimiters-depth-6-face)) 53 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-6-face)) 60 64 (part-side javascript) 64 68 (part-side javascript face web-mode-constant-face) 68 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-5-face)) 87 88 (part-side javascript) 88 89 (part-side javascript face (rainbow-delimiters-depth-5-face)) 89 90 (part-side javascript)) . 28017) (28007 . 28017) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript)) . 27917) (undo-tree-id6 . -8) (27927 . 28017) 27925) nil (25596 54080 311476 901000) 0 nil])
([nil nil ((#("          const current_active = []
" 0 10 (part-side javascript) 10 15 (part-side javascript face web-mode-keyword-face) 15 16 (part-side javascript) 16 30 (part-side javascript face web-mode-variable-name-face) 30 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-5-face)) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face)) 35 36 (part-side javascript)) . 28053) (28043 . 28053) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 28007) (undo-tree-id5 . -8) (28017 . 28053) 28015) nil (25596 54080 311473 831000) 0 nil])
([nil nil ((#("          this.filters.forEach(filterFolder => {
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 23 (part-side javascript) 23 30 (part-side javascript face web-mode-function-call-face) 30 31 (part-side javascript face (rainbow-delimiters-depth-7-face)) 31 43 (part-side javascript face web-mode-function-name-face) 43 47 (part-side javascript) 47 48 (part-side javascript face (rainbow-delimiters-depth-8-face)) 48 49 (part-side javascript)) . 28102) (28092 . 28102) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 28043) (undo-tree-id4 . -8) (28053 . 28102) 28051) nil (25596 54080 311470 451000) 0 nil])
([nil nil ((#("            this.getLeafNodes(current_active, filterFolder, [this.active[0].id])
" 0 12 (part-side javascript) 12 16 (part-side javascript face web-mode-constant-face) 16 17 (part-side javascript) 17 29 (part-side javascript face web-mode-function-call-face) 29 30 (part-side javascript face (rainbow-delimiters-depth-7-face)) 30 60 (part-side javascript) 60 61 (part-side javascript face (rainbow-delimiters-depth-8-face)) 61 65 (part-side javascript face web-mode-constant-face) 65 72 (part-side javascript) 72 73 (part-side javascript face (rainbow-delimiters-depth-9-face)) 73 74 (part-side javascript) 74 75 (part-side javascript face (rainbow-delimiters-depth-9-face)) 75 78 (part-side javascript) 78 79 (part-side javascript face (rainbow-delimiters-depth-8-face)) 79 80 (part-side javascript face (rainbow-delimiters-depth-7-face)) 80 81 (part-side javascript)) . 28183) (28173 . 28183) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-7-face)) 9 10 (part-side javascript)) . 28092) (undo-tree-id3 . -8) (28102 . 28183) 28100) nil (25596 54080 311466 986000) 0 nil])
([nil nil ((#("          })
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-4-face)) 11 12 (part-side javascript face (rainbow-delimiters-mismatched-face)) 12 13 (part-side javascript)) . 28196) (28186 . 28196) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-7-face)) 9 10 (part-side javascript)) . 28173) (undo-tree-id2 . -8) (28183 . 28196) 28181) nil (25596 54080 311463 244000) 0 nil])
([nil nil ((#("          this.active = current_active
" 0 10 (part-side javascript) 10 14 (part-side javascript face web-mode-constant-face) 14 39 (part-side javascript)) . 28235) (28225 . 28235) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 28186) (undo-tree-id1 . -8) (28196 . 28235) 28194) nil (25596 54080 311459 457000) 0 nil])
([nil nil ((#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-3-face)) 9 10 (part-side javascript)) . 28245) (28235 . 28245) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 28225) (undo-tree-id0 . -8) (28235 . 28245) 28233) nil (25596 54080 311454 413000) 0 nil])
([nil current ((28251 . 28253) (28212 . 28214) (28197 . 28199) (28116 . 28118) (28063 . 28065) (28025 . 28027) (27931 . 27933) (27888 . 27890) (27845 . 27847) (27806 . 27808) 27767) nil (25596 54080 311431 905000) 0 nil])
nil
