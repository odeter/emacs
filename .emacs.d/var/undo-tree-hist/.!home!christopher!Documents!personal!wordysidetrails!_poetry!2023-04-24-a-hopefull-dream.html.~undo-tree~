(undo-tree-save-format-version . 1)
"401b4c26bf8dfcff3f2cef729a024f41696858b0"
[nil nil nil nil (25670 64249 3768 528000) 0 nil]
([nil nil ((#("From the dawn of my time, to the end of my road, i will try to exist, <br/>
to find my place of being. For though the privilege of youth in this day <br/>
and age is grand, i find my possibilities many, even sometime without
limit. Which should inflate me with joy and grit, that my life is open
in all directions. But though the sky is breached for me and me alone,
the blood and sweat of my ancestor weighs heavily upon me. For am
i blessed or cursed with a life without limits, surely i could not say
no, no in disrespect, in disbelieve. An insult to all that has been done
before me would it be, to simply pass on a chance so many before has
lived without, a chance they didn’t get.
The choice it weights me down from so young an age, í should
count myself blessed but instead feel myself pressed against the ground.
For with freedom comes responsibility, to take the correct road, to
make the right choice. I fear deeply i might spill my chance, i might
take the wrong door, though all are open and i see through them to
the end. My life before my eyes, how it would shape, how it would
tear in each and every direction. I feel myself punched down a road
splitting unto hundreds. Take a road, make a choice, your life and
future depends upon it, don’t waste your chance, your golden ticket,
that so many fought to give you. As i start to walk upon the dusty
road i feel panic and fear as my heart pumps and pumps away. I don’t
know which path to choose and soon there will be no more delay. My
heart jump and my focus i loose as the path must be chosen, for i
don’t know which road to take, which one to bet my chance on. Some-
times i wish for no chance at all, no choice or road to take, to throw
overboard my existential crisis, to just be happy, to just exist." 70 71 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 71 73 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 73 74 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 74 75 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 149 150 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 150 152 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 152 153 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 153 154 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 68) (undo-tree-id27 . -76) (undo-tree-id28 . -1769) (undo-tree-id29 . -1769) (undo-tree-id30 . -1769) (undo-tree-id31 . -1769) (t 25670 62269 947786 0)) nil (25670 64249 3766 406000) 0 nil])
([nil nil ((68 . 589)) nil (25670 64249 3759 627000) 0 nil])
([nil nil (("e" . -24) (undo-tree-id15 . -1) ("x" . -25) (undo-tree-id16 . -1) ("p" . -26) (undo-tree-id17 . -1) ("e" . -27) (undo-tree-id18 . -1) ("c" . -28) (undo-tree-id19 . -1) ("t" . -29) (undo-tree-id20 . -1) ("a" . -30) (undo-tree-id21 . -1) ("t" . -31) (undo-tree-id22 . -1) ("i" . -32) (undo-tree-id23 . -1) ("o" . -33) (undo-tree-id24 . -1) ("n" . -34) (undo-tree-id25 . -1) ("s" . -35) (undo-tree-id26 . -1) 36) nil (25670 64249 3756 113000) 0 nil])
([nil nil ((24 . 29)) nil (25670 64249 3740 354000) 0 nil])
([nil nil ((" " . -28) (undo-tree-id14 . -1) 29) nil (25670 64249 3739 170000) 0 nil])
([nil nil (("2" . -38) (undo-tree-id13 . -1) 39) nil (25670 64249 3736 900000) 0 nil])
([nil nil ((38 . 39)) nil (25670 64249 3734 833000) 0 nil])
([nil nil (("8" . -41) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 42) nil (25670 64249 3733 582000) 0 nil])
([nil nil ((41 . 42)) nil (25670 64249 3730 397000) 0 nil])
([nil nil (("2" . -43) (undo-tree-id9 . -1) ("7" . -44) (undo-tree-id10 . -1) 45) nil (25670 64249 3729 4000) 0 nil])
([nil nil ((43 . 45)) nil (25670 64249 3725 537000) 0 nil])
([nil nil (("0" . -46) (undo-tree-id7 . -1) ("8" . -47) (undo-tree-id8 . -1) 48) nil (25670 64249 3724 75000) 0 nil])
([nil nil ((46 . 48)) nil (25670 64249 3720 550000) 0 nil])
([nil nil ((88 . 92)) nil (25670 64249 3719 523000) 0 nil])
([nil nil (("r" . -90) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (">" . -91) (undo-tree-id6 . -1) 92) nil (25670 64249 3718 48000) 0 nil])
([nil nil (("\\" . -88) (undo-tree-id0 . -1) (undo-tree-id1 . -1) ("b" . -89) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 90) nil (25670 64249 3712 333000) 0 nil])
([nil nil ((91 . 92) (88 . 92)) nil (25670 64249 3695 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 128 . 129) (nil tag-name "br" 128 . 129) (nil tag-type void 128 . 129) (nil tag-end t 128 . 129) (nil font-lock-face web-mode-html-tag-bracket-face 128 . 129) (nil tag-name "br" 127 . 128) (nil tag-type void 127 . 128) (nil font-lock-face web-mode-html-tag-bracket-face 127 . 128) (nil tag-name "br" 125 . 127) (nil tag-type void 125 . 127) (nil font-lock-face web-mode-html-tag-face 125 . 127) (nil tag-name "br" 124 . 125) (nil tag-type void 124 . 125) (nil tag-beg 24 124 . 125) (nil font-lock-face web-mode-html-tag-bracket-face 124 . 125) (124 . 129)) nil (25670 64249 3693 919000) 0 nil])
([nil nil ((nil rear-nonsticky nil 168 . 169) (nil tag-name "br" 168 . 169) (nil tag-type void 168 . 169) (nil tag-end t 168 . 169) (nil font-lock-face web-mode-html-tag-bracket-face 168 . 169) (nil tag-name "br" 167 . 168) (nil tag-type void 167 . 168) (nil font-lock-face web-mode-html-tag-bracket-face 167 . 168) (nil tag-name "br" 165 . 167) (nil tag-type void 165 . 167) (nil font-lock-face web-mode-html-tag-face 165 . 167) (nil tag-name "br" 164 . 165) (nil tag-type void 164 . 165) (nil tag-beg 24 164 . 165) (nil font-lock-face web-mode-html-tag-bracket-face 164 . 165) (164 . 169)) nil (25670 64249 3689 19000) 0 nil])
([nil nil ((198 . 199)) nil (25670 64249 3685 154000) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil tag-name "br" 242 . 243) (nil tag-type void 242 . 243) (nil tag-end t 242 . 243) (nil font-lock-face web-mode-html-tag-bracket-face 242 . 243) (nil tag-name "br" 241 . 242) (nil tag-type void 241 . 242) (nil font-lock-face web-mode-html-tag-bracket-face 241 . 242) (nil tag-name "br" 239 . 241) (nil tag-type void 239 . 241) (nil font-lock-face web-mode-html-tag-face 239 . 241) (nil tag-name "br" 238 . 239) (nil tag-type void 238 . 239) (nil tag-beg 24 238 . 239) (nil font-lock-face web-mode-html-tag-bracket-face 238 . 239) (238 . 243)) nil (25670 64249 3683 281000) 0 nil])
([nil nil ((nil rear-nonsticky nil 270 . 271) (nil tag-name "br" 270 . 271) (nil tag-type void 270 . 271) (nil tag-end t 270 . 271) (nil font-lock-face web-mode-html-tag-bracket-face 270 . 271) (nil tag-name "br" 269 . 270) (nil tag-type void 269 . 270) (nil font-lock-face web-mode-html-tag-bracket-face 269 . 270) (nil tag-name "br" 267 . 269) (nil tag-type void 267 . 269) (nil font-lock-face web-mode-html-tag-face 267 . 269) (nil tag-name "br" 266 . 267) (nil tag-type void 266 . 267) (nil tag-beg 24 266 . 267) (nil font-lock-face web-mode-html-tag-bracket-face 266 . 267) (266 . 271)) nil (25670 64249 3678 614000) 0 nil])
([nil nil ((nil rear-nonsticky nil 316 . 317) (nil tag-name "br" 316 . 317) (nil tag-type void 316 . 317) (nil tag-end t 316 . 317) (nil font-lock-face web-mode-html-tag-bracket-face 316 . 317) (nil tag-name "br" 315 . 316) (nil tag-type void 315 . 316) (nil font-lock-face web-mode-html-tag-bracket-face 315 . 316) (nil tag-name "br" 313 . 315) (nil tag-type void 313 . 315) (nil font-lock-face web-mode-html-tag-face 313 . 315) (nil tag-name "br" 312 . 313) (nil tag-type void 312 . 313) (nil tag-beg 24 312 . 313) (nil font-lock-face web-mode-html-tag-bracket-face 312 . 313) (312 . 317)) nil (25670 64249 3673 904000) 0 nil])
([nil nil ((348 . 349)) nil (25670 64249 3670 13000) 0 nil])
([nil nil ((nil rear-nonsticky nil 392 . 393) (nil tag-name "br" 392 . 393) (nil tag-type void 392 . 393) (nil tag-end t 392 . 393) (nil font-lock-face web-mode-html-tag-bracket-face 392 . 393) (nil tag-name "br" 391 . 392) (nil tag-type void 391 . 392) (nil font-lock-face web-mode-html-tag-bracket-face 391 . 392) (nil tag-name "br" 389 . 391) (nil tag-type void 389 . 391) (nil font-lock-face web-mode-html-tag-face 389 . 391) (nil tag-name "br" 388 . 389) (nil tag-type void 388 . 389) (nil tag-beg 24 388 . 389) (nil font-lock-face web-mode-html-tag-bracket-face 388 . 389) (388 . 393)) nil (25670 64249 3668 163000) 0 nil])
([nil nil ((nil rear-nonsticky nil 460 . 461) (nil tag-name "br" 460 . 461) (nil tag-type void 460 . 461) (nil tag-end t 460 . 461) (nil font-lock-face web-mode-html-tag-bracket-face 460 . 461) (nil tag-name "br" 459 . 460) (nil tag-type void 459 . 460) (nil font-lock-face web-mode-html-tag-bracket-face 459 . 460) (nil tag-name "br" 457 . 459) (nil tag-type void 457 . 459) (nil font-lock-face web-mode-html-tag-face 457 . 459) (nil tag-name "br" 456 . 457) (nil tag-type void 456 . 457) (nil tag-beg 24 456 . 457) (nil font-lock-face web-mode-html-tag-bracket-face 456 . 457) (456 . 461)) nil (25670 64249 3663 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 423 . 424) (nil tag-name "br" 423 . 424) (nil tag-type void 423 . 424) (nil tag-end t 423 . 424) (nil font-lock-face web-mode-html-tag-bracket-face 423 . 424) (nil tag-name "br" 422 . 423) (nil tag-type void 422 . 423) (nil font-lock-face web-mode-html-tag-bracket-face 422 . 423) (nil tag-name "br" 420 . 422) (nil tag-type void 420 . 422) (nil font-lock-face web-mode-html-tag-face 420 . 422) (nil tag-name "br" 419 . 420) (nil tag-type void 419 . 420) (nil tag-beg 24 419 . 420) (nil font-lock-face web-mode-html-tag-bracket-face 419 . 420) (419 . 424)) nil (25670 64249 3658 559000) 0 nil])
([nil nil ((491 . 492)) nil (25670 64249 3654 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 537 . 538) (nil tag-name "br" 537 . 538) (nil tag-type void 537 . 538) (nil tag-end t 537 . 538) (nil font-lock-face web-mode-html-tag-bracket-face 537 . 538) (nil tag-name "br" 536 . 537) (nil tag-type void 536 . 537) (nil font-lock-face web-mode-html-tag-bracket-face 536 . 537) (nil tag-name "br" 534 . 536) (nil tag-type void 534 . 536) (nil font-lock-face web-mode-html-tag-face 534 . 536) (nil tag-name "br" 533 . 534) (nil tag-type void 533 . 534) (nil tag-beg 24 533 . 534) (nil font-lock-face web-mode-html-tag-bracket-face 533 . 534) (533 . 538)) nil (25670 64249 3652 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 570 . 571) (nil tag-name "br" 570 . 571) (nil tag-type void 570 . 571) (nil tag-end t 570 . 571) (nil font-lock-face web-mode-html-tag-bracket-face 570 . 571) (nil tag-name "br" 569 . 570) (nil tag-type void 569 . 570) (nil font-lock-face web-mode-html-tag-bracket-face 569 . 570) (nil tag-name "br" 567 . 569) (nil tag-type void 567 . 569) (nil font-lock-face web-mode-html-tag-face 567 . 569) (nil tag-name "br" 566 . 567) (nil tag-type void 566 . 567) (nil tag-beg 24 566 . 567) (nil font-lock-face web-mode-html-tag-bracket-face 566 . 567) (566 . 571)) nil (25670 64249 3646 534000) 0 nil])
([nil current ((nil rear-nonsticky nil 618 . 619) (nil tag-name "br" 618 . 619) (nil tag-type void 618 . 619) (nil tag-end t 618 . 619) (nil font-lock-face web-mode-html-tag-bracket-face 618 . 619) (nil tag-name "br" 617 . 618) (nil tag-type void 617 . 618) (nil font-lock-face web-mode-html-tag-bracket-face 617 . 618) (nil tag-name "br" 615 . 617) (nil tag-type void 615 . 617) (nil font-lock-face web-mode-html-tag-face 615 . 617) (nil tag-name "br" 614 . 615) (nil tag-type void 614 . 615) (nil tag-beg 24 614 . 615) (nil font-lock-face web-mode-html-tag-bracket-face 614 . 615) (614 . 619)) nil (25670 64249 3617 771000) 0 nil])
nil
