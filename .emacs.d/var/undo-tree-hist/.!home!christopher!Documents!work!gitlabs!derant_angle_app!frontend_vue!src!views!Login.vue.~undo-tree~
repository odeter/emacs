(undo-tree-save-format-version . 1)
"b75010a2f51de05c2904bf62029e6b23ad6df983"
[nil nil nil nil (25681 5212 55345 580000) 0 nil]
([nil nil ((13765 . 13786) (t 25642 38060 366165 411000)) nil (25681 5212 55343 932000) 0 nil])
([nil nil ((13786 . 13790)) nil (25681 5212 55342 862000) 0 nil])
([nil nil (("-" . -13787) (undo-tree-id19 . -1) ("r" . -13788) (undo-tree-id20 . -1) ("o" . -13789) (undo-tree-id21 . -1) 13790) nil (25681 5212 55341 228000) 0 nil])
([nil nil ((13787 . 13801)) nil (25681 5212 55336 349000) 0 nil])
([nil nil ((13794 . 13816) (13795 . 13815) (#("                      " 0 22 (face whitespace-trailing)) . 13794) (13794 . 13816) (13794 . 13795) ("                    " . 13794) (13793 . 13814)) nil (25681 5212 55334 808000) 0 nil])
([nil nil ((13816 . 13820)) nil (25681 5212 55332 504000) 0 nil])
([nil nil ((13820 . 13831)) nil (25681 5212 55331 489000) 0 nil])
([nil nil ((13824 . 13848) (13825 . 13847) (#("                        " 0 24 (face whitespace-trailing)) . 13824) (13824 . 13848) (13824 . 13825) ("                      " . 13824) (13823 . 13846)) nil (25681 5212 55329 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14048 . 14049) (nil tag-name "v-alert" 14048 . 14049) (nil tag-type end 14048 . 14049) (nil tag-end t 14048 . 14049) (nil font-lock-face web-mode-html-tag-bracket-face 14048 . 14049) (nil tag-name "v-alert" 14041 . 14048) (nil tag-type end 14041 . 14048) (nil font-lock-face web-mode-html-tag-custom-face 14041 . 14048) (nil tag-name "v-alert" 14040 . 14041) (nil tag-type end 14040 . 14041) (nil font-lock-face web-mode-html-tag-bracket-face 14040 . 14041) (nil tag-name "v-alert" 14039 . 14040) (nil tag-type end 14039 . 14040) (nil tag-beg 22 14039 . 14040) (nil font-lock-face web-mode-html-tag-bracket-face 14039 . 14040) (nil tag-name "strong" 14020 . 14021) (nil tag-type end 14020 . 14021) (nil tag-end t 14020 . 14021) (nil font-lock-face web-mode-html-tag-bracket-face 14020 . 14021) (nil tag-name "strong" 14014 . 14020) (nil tag-type end 14014 . 14020) (nil font-lock-face web-mode-html-tag-face 14014 . 14020) (nil tag-name "strong" 14013 . 14014) (nil tag-type end 14013 . 14014) (nil font-lock-face web-mode-html-tag-bracket-face 14013 . 14014) (nil tag-name "strong" 14012 . 14013) (nil tag-type end 14012 . 14013) (nil tag-beg 20 14012 . 14013) (nil font-lock-face web-mode-html-tag-bracket-face 14012 . 14013) (nil tag-name "strong" 14007 . 14008) (nil tag-type start 14007 . 14008) (nil tag-end t 14007 . 14008) (nil font-lock-face web-mode-html-tag-bracket-face 14007 . 14008) (nil tag-name "strong" 14001 . 14007) (nil tag-type start 14001 . 14007) (nil font-lock-face web-mode-html-tag-face 14001 . 14007) (nil tag-name "strong" 14000 . 14001) (nil tag-type start 14000 . 14001) (nil tag-beg 16 14000 . 14001) (nil font-lock-face web-mode-html-tag-bracket-face 14000 . 14001) (nil tag-name "strong" 13987 . 13988) (nil tag-type end 13987 . 13988) (nil tag-end t 13987 . 13988) (nil font-lock-face web-mode-html-tag-bracket-face 13987 . 13988) (nil tag-name "strong" 13981 . 13987) (nil tag-type end 13981 . 13987) (nil font-lock-face web-mode-html-tag-face 13981 . 13987) (nil tag-name "strong" 13980 . 13981) (nil tag-type end 13980 . 13981) (nil font-lock-face web-mode-html-tag-bracket-face 13980 . 13981) (nil tag-name "strong" 13979 . 13980) (nil tag-type end 13979 . 13980) (nil tag-beg 20 13979 . 13980) (nil font-lock-face web-mode-html-tag-bracket-face 13979 . 13980) (nil tag-name "strong" 13972 . 13973) (nil tag-type start 13972 . 13973) (nil tag-end t 13972 . 13973) (nil font-lock-face web-mode-html-tag-bracket-face 13972 . 13973) (nil tag-name "strong" 13966 . 13972) (nil tag-type start 13966 . 13972) (nil font-lock-face web-mode-html-tag-face 13966 . 13972) (nil tag-name "strong" 13965 . 13966) (nil tag-type start 13965 . 13966) (nil tag-beg 16 13965 . 13966) (nil font-lock-face web-mode-html-tag-bracket-face 13965 . 13966) (nil tag-name "v-alert" 13928 . 13929) (nil tag-type start 13928 . 13929) (nil tag-end t 13928 . 13929) (nil font-lock-face web-mode-html-tag-bracket-face 13928 . 13929) (nil tag-name "v-alert" 13921 . 13928) (nil tag-type start 13921 . 13928) (nil tag-attr t 13920 . 13921) (nil tag-attr-end 4 13920 . 13921) (nil tag-name "v-alert" 13920 . 13921) (nil tag-type start 13920 . 13921) (nil font-lock-face web-mode-html-attr-value-face 13920 . 13921) (nil tag-attr t 13912 . 13920) (nil tag-name "v-alert" 13912 . 13920) (nil tag-type start 13912 . 13920) (nil font-lock-face web-mode-html-attr-value-face 13912 . 13920) (nil tag-attr t 13911 . 13912) (nil tag-name "v-alert" 13911 . 13912) (nil tag-type start 13911 . 13912) (nil font-lock-face web-mode-html-attr-equal-face 13911 . 13912) (nil tag-attr t 13908 . 13911) (nil tag-name "v-alert" 13908 . 13911) (nil tag-type start 13908 . 13911) (nil font-lock-face web-mode-html-attr-name-face 13908 . 13911) (nil tag-attr-beg 0 13907 . 13908) (nil tag-attr t 13907 . 13908) (nil tag-name "v-alert" 13907 . 13908) (nil tag-type start 13907 . 13908) (nil font-lock-face web-mode-html-attr-name-face 13907 . 13908) (nil tag-name "v-alert" 13898 . 13907) (nil tag-type start 13898 . 13907) (nil tag-attr t 13897 . 13898) (nil tag-attr-end 6 13897 . 13898) (nil tag-name "v-alert" 13897 . 13898) (nil tag-type start 13897 . 13898) (nil font-lock-face web-mode-html-attr-value-face 13897 . 13898) (nil tag-attr t 13892 . 13897) (nil tag-name "v-alert" 13892 . 13897) (nil tag-type start 13892 . 13897) (nil font-lock-face web-mode-html-attr-value-face 13892 . 13897) (nil tag-attr t 13891 . 13892) (nil tag-name "v-alert" 13891 . 13892) (nil tag-type start 13891 . 13892) (nil font-lock-face web-mode-html-attr-equal-face 13891 . 13892) (nil tag-attr t 13886 . 13891) (nil tag-name "v-alert" 13886 . 13891) (nil tag-type start 13886 . 13891) (nil font-lock-face web-mode-html-attr-name-face 13886 . 13891) (nil tag-attr-beg 0 13885 . 13886) (nil tag-attr t 13885 . 13886) (nil tag-name "v-alert" 13885 . 13886) (nil tag-type start 13885 . 13886) (nil font-lock-face web-mode-html-attr-name-face 13885 . 13886) (nil tag-name "v-alert" 13876 . 13885) (nil tag-type start 13876 . 13885) (nil tag-attr t 13875 . 13876) (nil tag-attr-end 0 13875 . 13876) (nil tag-name "v-alert" 13875 . 13876) (nil tag-type start 13875 . 13876) (nil font-lock-face web-mode-html-attr-name-face 13875 . 13876) (nil tag-attr t 13872 . 13875) (nil tag-name "v-alert" 13872 . 13875) (nil tag-type start 13872 . 13875) (nil font-lock-face web-mode-html-attr-name-face 13872 . 13875) (nil tag-attr-beg 0 13871 . 13872) (nil tag-attr t 13871 . 13872) (nil tag-name "v-alert" 13871 . 13872) (nil tag-type start 13871 . 13872) (nil font-lock-face web-mode-html-attr-name-face 13871 . 13872) (nil tag-name "v-alert" 13862 . 13871) (nil tag-type start 13862 . 13871) (nil tag-name "v-alert" 13855 . 13862) (nil tag-type start 13855 . 13862) (nil font-lock-face web-mode-html-tag-custom-face 13855 . 13862) (nil tag-name "v-alert" 13854 . 13855) (nil tag-type start 13854 . 13855) (nil tag-beg 19 13854 . 13855) (nil font-lock-face web-mode-html-tag-bracket-face 13854 . 13855) (13848 . 14049)) nil (25681 5212 55320 820000) 0 nil])
([nil nil ((14117 . 14141) ("      " . 14117) (13996 . 14022) ("        " . 13996) (13970 . 13994) (#("      " 0 6 (tag-name "v-alert" tag-type start)) . 13970) (13929 . 13955) (#("        " 0 8 (tag-name "v-alert" tag-type start)) . 13929) (13889 . 13915) (#("        " 0 8 (tag-name "v-alert" tag-type start)) . 13889) (13857 . 13883) (#("        " 0 8 (tag-name "v-alert" tag-type start)) . 13857) ("      " . -13848) 13824) nil (25681 5212 55287 32000) 0 nil])
([nil nil ((#("I'm a dense alert with the <strong>border</strong> prop and a <strong>type</strong> of warning" 27 28 (tag-name "strong" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 28 34 (tag-name "strong" tag-type start font-lock-face web-mode-html-tag-face) 34 35 (tag-name "strong" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 41 42 (tag-name "strong" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 42 43 (tag-name "strong" tag-type end font-lock-face web-mode-html-tag-bracket-face) 43 49 (tag-name "strong" tag-type end font-lock-face web-mode-html-tag-face) 49 50 (tag-name "strong" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "strong" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 63 69 (tag-name "strong" tag-type start font-lock-face web-mode-html-tag-face) 69 70 (tag-name "strong" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 74 75 (tag-name "strong" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 75 76 (tag-name "strong" tag-type end font-lock-face web-mode-html-tag-bracket-face) 76 82 (tag-name "strong" tag-type end font-lock-face web-mode-html-tag-face) 82 83 (tag-name "strong" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14022) (undo-tree-id16 . -94) (undo-tree-id17 . -94) (undo-tree-id18 . -94)) nil (25681 5212 55282 272000) 0 nil])
([nil nil ((14022 . 14043)) nil (25681 5212 55255 798000) 0 nil])
([nil nil ((14043 . 14056)) nil (25681 5212 55254 717000) 0 nil])
([nil nil (("r" . -14053) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) ("e" . -14054) (undo-tree-id14 . -1) (" " . -14055) (undo-tree-id15 . -1) 14056) nil (25681 5212 55252 659000) 0 nil])
([nil nil ((14053 . 14056)) nil (25681 5212 55240 775000) 0 nil])
([nil nil ((" " . -14055) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 14056) nil (25681 5212 55235 473000) 0 nil])
([nil nil ((#("
                    <v-row>
                      <v-col>" 21 22 (tag-name "v-row" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 22 27 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 27 28 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 51 52 (tag-name "v-col" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 52 57 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 57 58 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 13765) (undo-tree-id27 . -1) (undo-tree-id28 . -58) (undo-tree-id29 . -55) (undo-tree-id30 . -58) (undo-tree-id31 . -58) (t 25681 5212 58640 196000)) nil (25681 5276 778326 314000) 0 nil])
([nil nil ((#("
                      </v-col>
                    </v-row>" 23 24 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 24 25 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 25 30 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 30 31 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 52 53 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 53 54 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 54 59 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 59 60 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 14032) (undo-tree-id22 . -1) (undo-tree-id23 . -60) (undo-tree-id24 . -31) (undo-tree-id25 . -60) (undo-tree-id26 . -60)) nil (25681 5276 778315 96000) 0 nil])
([nil nil ((13830 . 13857) (t 25681 5276 778473 635000)) nil (25681 5297 594052 315000) 0 nil])
([nil nil ((13864 . 13869) (13857 . 13865)) nil (25681 5297 594050 237000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-html-attr-value-face)) . -13868) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 13869) nil (25681 5569 97562 956000) 0 nil])
([nil nil (("Remember to check your spamfilter" . 14003) (undo-tree-id58 . -33) (undo-tree-id59 . -33) (t 25681 5297 598422 163000)) nil (25681 5621 576403 632000) 0 nil] [nil nil ((28832 . 28834) (#("  " 0 2 (part-side css)) . 28831) (undo-tree-id44 . -2) (28831 . 28834) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28830) (28830 . 28832) (28830 . 28831) (t 25681 5297 598422 163000)) ((#("
" 0 1 (part-side css)) . 28830) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28830) (28830 . 28832) (#("  
" 0 2 (part-side css face whitespace-trailing) 2 3 (part-side css)) . 28831) (undo-tree-id51 . -2) (undo-tree-id52 . -3) (28831 . 28833) (#("  " 0 2 (part-side css)) . 28832)) (25681 5569 95265 208000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14029 . 14030) (nil block-side t 14029 . 14030) (nil block-end t 14029 . 14030) (nil block-token delimiter-end 14029 . 14030) (nil face (rainbow-delimiters-depth-1-face) 14029 . 14030) (nil block-side t 14028 . 14029) (nil block-token delimiter-end 14028 . 14029) (nil face (rainbow-delimiters-depth-2-face) 14028 . 14029) (nil block-side t 14027 . 14028) (nil face (rainbow-delimiters-depth-3-face) 14027 . 14028) (nil block-side t 14025 . 14027) (nil block-side t 14024 . 14025) (nil block-side t 14023 . 14024) (nil block-side t 14022 . 14023) (nil block-side t 14021 . 14022) (nil block-side t 14020 . 14021) (nil block-side t 14019 . 14020) (nil block-side t 14018 . 14019) (nil block-side t 14017 . 14018) (nil block-side t 14016 . 14017) (nil block-side t 14015 . 14016) (nil block-side t 14014 . 14015) (nil block-side t 14013 . 14014) (nil block-side t 14012 . 14013) (nil block-side t 14011 . 14012) (nil block-side t 14010 . 14011) (nil block-side t 14009 . 14010) (nil block-side t 14008 . 14009) (nil face (rainbow-delimiters-depth-3-face) 14008 . 14009) (nil block-side t 14007 . 14008) (nil block-side t 14005 . 14007) (nil block-side t 14004 . 14005) (nil block-token delimiter-beg 14004 . 14005) (nil face (rainbow-delimiters-depth-2-face) 14004 . 14005) (nil block-beg 0 14003 . 14004) (nil block-controls 0 14003 . 14004) (nil block-side t 14003 . 14004) (nil block-token delimiter-beg 14003 . 14004) (nil face (rainbow-delimiters-depth-1-face) 14003 . 14004) (14003 . 14030)) nil (25681 5621 576398 92000) 0 nil])
nil
([nil nil ((#("sendEmail" 0 9 (block-side t)) . 14016) (undo-tree-id53 . -9) (undo-tree-id54 . -9) (undo-tree-id55 . -3) (undo-tree-id56 . -9) (undo-tree-id57 . -9)) nil (25681 5621 576387 366000) 0 nil])
([nil current ((nil rear-nonsticky nil 14025 . 14026) (nil block-side t 14016 . 14026) (14016 . 14026)) nil (25681 5621 576367 173000) 0 nil])
nil
