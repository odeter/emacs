(undo-tree-save-format-version . 1)
"68781d65ffe993bfe05d1f485307b5986a882ed8"
[nil nil nil nil (25257 55531 290072 36000) 0 nil]
([nil nil ((467 . 476) (t 25190 28594 501352 487000)) nil (25257 55531 290070 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 513 . 514) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 502 . 512) (nil fontified nil 501 . 502) (nil fontified nil 500 . 501) (nil fontified nil 476 . 500) (476 . 514)) nil (25257 55531 290068 587000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -502) (undo-tree-id6 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -503) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -504) (undo-tree-id8 . -1) (#("n" 0 1 (fontified defer face font-lock-string-face)) . -505) (undo-tree-id9 . -1) (#("O" 0 1 (fontified t face font-lock-string-face)) . -506) (undo-tree-id10 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -507) (undo-tree-id11 . -1) (#("j" 0 1 (fontified t face font-lock-string-face)) . -508) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -509) (undo-tree-id13 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -510) (undo-tree-id14 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -511) (undo-tree-id15 . -1) 512) nil (25257 55531 290063 755000) 0 nil])
([nil nil ((502 . 509)) nil (25257 55531 290046 781000) 0 nil])
([nil nil ((#("
                    for i in logChanges:" 0 21 (fontified t) 21 24 (fontified t face font-lock-keyword-face) 24 27 (fontified t) 27 29 (fontified t face font-lock-keyword-face) 29 41 (fontified t)) . 1105) (undo-tree-id2 . -41) (undo-tree-id3 . -1) (undo-tree-id4 . -41) (undo-tree-id5 . -41)) nil (25257 55532 49658 422000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1126) (undo-tree-id38 . -1) 1127) nil (25257 55597 920038 551000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -1126) (undo-tree-id1 . -1) 1127) ((1126 . 1130)) (25257 55531 744405 871000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1174) 1170) nil (25257 55597 920035 861000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1174) 1170) ((1174 . 1178)) (25257 55531 524518 704000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1238) 1234) nil (25257 55597 920034 291000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1238) 1234) ((1238 . 1242)) (25257 55531 290164 781000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1300) (undo-tree-id37 . -4) 1304) nil (25257 55597 920032 591000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1300) (undo-tree-id0 . -4) 1304) ((1300 . 1304)) (25257 55531 290026 278000) 0 nil])
([nil nil ((1300 . 1304) 1503) nil (25257 55597 920030 28000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -1300) 1507) nil (25257 55597 920028 448000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1549)) nil (25257 55597 920026 907000) 0 nil])
([nil nil ((#("[i]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-1-face))) . 1202) (undo-tree-id35 . -3) (undo-tree-id36 . -3)) nil (25257 55597 920025 418000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1145) (undo-tree-id32 . -1) (#("i" 0 1 (fontified t)) . -1146) (undo-tree-id33 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1147) (undo-tree-id34 . -1) 1148) nil (25257 55597 920021 22000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1242) (undo-tree-id29 . -1) (#("i" 0 1 (fontified t)) . -1243) (undo-tree-id30 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1244) (undo-tree-id31 . -1) 1245) nil (25257 55597 920015 302000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1341) (undo-tree-id28 . -1) 1342) nil (25257 55597 920009 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1344 . 1345) (nil fontified nil 1341 . 1345) (1341 . 1345)) nil (25257 55597 920007 288000) 0 nil])
([nil nil ((1345 . 1353)) nil (25257 55597 920005 426000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1394) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("i" 0 1 (fontified t)) . -1395) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1396) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 1397) nil (25257 55597 920003 75000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . -1427) (undo-tree-id19 . -1) (#("i" 0 1 (fontified t face (whitespace-line))) . -1428) (undo-tree-id20 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . -1429) (undo-tree-id21 . -1) 1430) nil (25257 55597 919993 515000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face (rainbow-delimiters-mismatched-face whitespace-line))) . 1467) (#("i" 0 1 (fontified t face (whitespace-line))) . 1467) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . 1467)) nil (25257 55597 919986 71000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . -1501) (undo-tree-id16 . -1) (#("i" 0 1 (fontified t face (whitespace-line))) . -1502) (undo-tree-id17 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line))) . -1503) (undo-tree-id18 . -1) 1504) nil (25257 55597 919979 398000) 0 nil])
([nil nil ((#("'resetLog' in " 0 1 (fontified t syntax-table (15) face font-lock-string-face) 1 9 (fontified t face font-lock-string-face) 9 10 (fontified t syntax-table (15) face font-lock-string-face) 10 11 (fontified t) 11 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t)) . 945) (undo-tree-id95 . -14) (undo-tree-id96 . -14) (t 25257 55597 919834 45000)) nil (25257 56567 861746 553000) 0 nil])
([nil nil ((#("                if logChanges:
" 0 16 (fontified nil) 16 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 28 (fontified nil) 28 31 (fontified nil)) . 957) (undo-tree-id91 . -19) (undo-tree-id92 . -19) (undo-tree-id93 . -31) (undo-tree-id94 . -28) (910 . 957) (#("                print('changes: ', logChanges)
" 0 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t syntax-table (15) face font-lock-string-face) 23 32 (fontified t face font-lock-string-face) 32 33 (fontified t syntax-table (15) face font-lock-string-face) 33 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 879) (926 . 957) 945) nil (25257 56567 861742 278000) 0 nil])
([nil nil ((#("                if logChanges:
" 0 16 (fontified nil) 16 18 (fontified nil face font-lock-keyword-face) 18 19 (fontified nil) 19 28 (fontified nil) 28 31 (fontified nil)) . 910) (undo-tree-id89 . -19) (undo-tree-id90 . -31) (853 . 910) (#("                logChanges = json.loads(data.jsonObject)
" 0 16 (fontified t) 16 26 (fontified t face font-lock-variable-name-face) 26 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 55 (fontified t) 55 56 (fontified t face (rainbow-delimiters-depth-1-face)) 56 57 (fontified t)) . 822) (879 . 910) 898) nil (25257 56567 861734 294000) 0 nil])
([nil nil ((#("logChanges" 0 9 (fontified t) 9 10 (fontified t)) . 841) (undo-tree-id87 . -10) (undo-tree-id88 . -10)) nil (25257 56567 861729 319000) 0 nil])
([nil nil ((nil rear-nonsticky nil 855 . 856) (nil fontified nil 841 . 856) (841 . 856)) nil (25257 56567 861725 818000) 0 nil])
([nil nil ((#("
                    for j in logChanges:
                        if \"color\" not in logChanges[j]:
                            logChanges[j]['color'] = '#FFFFFF'
                        log = LogModel(user_key=current_user.id, log_type=data.logtype, log_column_name=j, log_width=logChanges[j]['width'], log_hide=logChanges[j]['hide'], log_column_order=logChanges[j]['order'], log_color=logChanges[j]['color'])
                        current_user.update_log_line(log)" 0 1 (fontified t) 1 21 (fontified t) 21 24 (fontified t face font-lock-keyword-face) 24 27 (fontified t) 27 29 (fontified t face font-lock-keyword-face) 29 40 (fontified t) 40 42 (fontified t) 42 66 (fontified t) 66 68 (fontified t face font-lock-keyword-face) 68 69 (fontified t) 69 70 (syntax-table (15) fontified t face font-lock-string-face) 70 75 (fontified t face font-lock-string-face) 75 76 (syntax-table (15) fontified t face font-lock-string-face) 76 77 (fontified t) 77 80 (fontified t face font-lock-keyword-face) 80 81 (fontified t) 81 83 (fontified t face font-lock-keyword-face) 83 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-1-face)) 95 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-1-face)) 97 99 (fontified t) 99 127 (fontified t) 127 137 (fontified t) 137 138 (fontified t face (rainbow-delimiters-depth-1-face)) 138 139 (fontified t) 139 140 (fontified t face (rainbow-delimiters-depth-1-face)) 140 141 (fontified t face (rainbow-delimiters-depth-1-face)) 141 142 (syntax-table (15) fontified t face font-lock-string-face) 142 147 (fontified t face font-lock-string-face) 147 148 (syntax-table (15) fontified t face font-lock-string-face) 148 149 (fontified t face (rainbow-delimiters-depth-1-face)) 149 152 (fontified t) 152 153 (syntax-table (15) fontified t face font-lock-string-face) 153 160 (fontified t face font-lock-string-face) 160 161 (syntax-table (15) fontified t face font-lock-string-face) 161 162 (fontified t) 162 186 (fontified t) 186 189 (fontified t face font-lock-variable-name-face) 189 200 (fontified t) 200 201 (fontified t face (rainbow-delimiters-depth-1-face)) 201 223 (fontified t) 223 225 (fontified t face font-lock-builtin-face) 225 236 (fontified t) 236 239 (fontified t) 239 240 (rear-nonsticky t fontified t) 240 248 (fontified t) 248 262 (fontified t) 262 289 (fontified t) 289 290 (fontified t face (rainbow-delimiters-depth-2-face)) 290 291 (fontified t) 291 292 (fontified t face (rainbow-delimiters-depth-2-face)) 292 293 (fontified t face (rainbow-delimiters-depth-2-face)) 293 294 (syntax-table (15) fontified t face font-lock-string-face) 294 299 (fontified t face font-lock-string-face) 299 300 (syntax-table (15) fontified t face font-lock-string-face) 300 301 (fontified t face (rainbow-delimiters-depth-2-face)) 301 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t face (whitespace-line)) 313 314 (fontified t face (whitespace-line)) 314 315 (fontified t face (whitespace-line)) 315 316 (fontified t face (whitespace-line)) 316 317 (fontified t face (whitespace-line)) 317 320 (fontified t face (whitespace-line)) 320 321 (fontified t face (whitespace-line)) 321 322 (fontified t face (whitespace-line)) 322 323 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 323 324 (fontified t face (whitespace-line)) 324 325 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 325 326 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 326 327 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 327 331 (fontified t face (whitespace-line font-lock-string-face)) 331 332 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 332 333 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 333 346 (fontified t face (whitespace-line)) 346 362 (fontified t face (whitespace-line)) 362 363 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 363 364 (fontified t face (whitespace-line)) 364 365 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 365 366 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 366 367 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 367 372 (fontified t face (whitespace-line font-lock-string-face)) 372 373 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 373 374 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 374 376 (fontified t face (whitespace-line)) 376 385 (fontified t face (whitespace-line)) 385 396 (fontified t face (whitespace-line)) 396 397 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 397 398 (fontified t face (whitespace-line)) 398 399 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 399 400 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 400 401 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 401 406 (fontified t face (whitespace-line font-lock-string-face)) 406 407 (syntax-table (15) fontified t face (whitespace-line font-lock-string-face)) 407 408 (fontified t face (rainbow-delimiters-depth-2-face whitespace-line)) 408 409 (fontified t face (rainbow-delimiters-depth-1-face whitespace-line)) 409 410 (fontified t) 410 412 (fontified t) 412 462 (fontified t) 462 463 (fontified t face (rainbow-delimiters-depth-1-face)) 463 466 (fontified t) 466 467 (fontified t face (rainbow-delimiters-depth-1-face))) . 1096) (undo-tree-id83 . -467) (undo-tree-id84 . -1) (undo-tree-id85 . -467) (undo-tree-id86 . -467)) nil (25257 56567 861723 431000) 0 nil])
([nil nil ((963 . 979) (#("                " 0 16 (fontified nil)) . 962) (undo-tree-id82 . -16) (961 . 979)) nil (25257 56567 861717 163000) 0 nil])
([nil nil ((962 . 978)) nil (25257 56567 861714 287000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -974) (undo-tree-id81 . -4) 978) nil (25257 56567 861712 550000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -970) (undo-tree-id80 . -4) 974) nil (25257 56567 861707 120000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -966) (undo-tree-id79 . -4) 970) nil (25257 56567 861704 8000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -962) (undo-tree-id78 . -4) 966) nil (25257 56567 861701 76000) 0 nil])
([nil nil ((962 . 978)) nil (25257 56567 861698 223000) 0 nil])
([nil nil ((874 . 878)) nil (25257 56567 861697 16000) 0 nil])
([nil nil ((#("
                print('changes: ', logChanges)" 0 1 (fontified t) 1 17 (fontified t) 17 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (syntax-table (15) fontified t face font-lock-string-face) 24 33 (fontified t face font-lock-string-face) 33 34 (syntax-table (15) fontified t face font-lock-string-face) 34 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-1-face))) . 918) (undo-tree-id75 . -47) (undo-tree-id76 . -1) (undo-tree-id77 . -47)) nil (25257 56567 861695 108000) 0 nil])
([nil nil ((918 . 939)) nil (25257 56567 861689 969000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1405 . 1406) (nil fontified nil 1405 . 1406) (nil fontified nil 1402 . 1405) (nil fontified nil 1401 . 1402) (nil fontified nil 1351 . 1401) (nil fontified nil 1349 . 1351) (nil fontified nil 1348 . 1349) (nil fontified nil 1347 . 1348) (nil fontified nil 1346 . 1347) (nil fontified nil 1345 . 1346) (nil fontified nil 1340 . 1345) (nil fontified nil 1339 . 1340) (nil fontified nil 1338 . 1339) (nil fontified nil 1337 . 1338) (nil fontified nil 1336 . 1337) (nil fontified nil 1335 . 1336) (nil fontified nil 1324 . 1335) (nil fontified nil 1315 . 1324) (nil fontified nil 1313 . 1315) (nil fontified nil 1312 . 1313) (nil fontified nil 1311 . 1312) (nil fontified nil 1306 . 1311) (nil fontified nil 1305 . 1306) (nil fontified nil 1304 . 1305) (nil fontified nil 1303 . 1304) (nil fontified nil 1302 . 1303) (nil fontified nil 1301 . 1302) (nil fontified nil 1285 . 1301) (nil fontified nil 1272 . 1285) (nil fontified nil 1271 . 1272) (nil fontified nil 1270 . 1271) (nil fontified nil 1266 . 1270) (nil fontified nil 1265 . 1266) (nil fontified nil 1264 . 1265) (nil fontified nil 1263 . 1264) (nil fontified nil 1262 . 1263) (nil fontified nil 1261 . 1262) (nil fontified nil 1260 . 1261) (nil fontified nil 1259 . 1260) (nil fontified nil 1256 . 1259) (nil fontified nil 1255 . 1256) (nil fontified nil 1254 . 1255) (nil fontified nil 1253 . 1254) (nil fontified nil 1252 . 1253) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1248 . 1249) (nil fontified nil 1247 . 1248) (nil fontified nil 1240 . 1247) (nil fontified nil 1239 . 1240) (nil fontified nil 1238 . 1239) (nil fontified nil 1233 . 1238) (nil fontified nil 1232 . 1233) (nil fontified nil 1231 . 1232) (nil fontified nil 1230 . 1231) (nil fontified nil 1229 . 1230) (nil fontified nil 1228 . 1229) (nil fontified nil 1201 . 1228) (nil fontified nil 1187 . 1201) (nil fontified nil 1179 . 1187) (nil fontified nil 1178 . 1179) (nil fontified nil 1175 . 1178) (nil fontified nil 1164 . 1175) (nil fontified nil 1162 . 1164) (nil fontified nil 1140 . 1162) (nil fontified nil 1139 . 1140) (nil fontified nil 1128 . 1139) (nil fontified nil 1125 . 1128) (nil fontified nil 1101 . 1125) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1092 . 1099) (nil fontified nil 1091 . 1092) (nil fontified nil 1088 . 1091) (nil fontified nil 1087 . 1088) (nil fontified nil 1086 . 1087) (nil fontified nil 1081 . 1086) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1077 . 1078) (nil fontified nil 1076 . 1077) (nil fontified nil 1066 . 1076) (nil fontified nil 1038 . 1066) (nil fontified nil 1036 . 1038) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1022 . 1033) (nil fontified nil 1020 . 1022) (nil fontified nil 1019 . 1020) (nil fontified nil 1016 . 1019) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1009 . 1014) (nil fontified nil 1008 . 1009) (nil fontified nil 1007 . 1008) (nil fontified nil 1005 . 1007) (nil fontified nil 981 . 1005) (nil fontified nil 979 . 981) (nil fontified nil 968 . 979) (nil fontified nil 966 . 968) (nil fontified nil 963 . 966) (nil fontified nil 960 . 963) (nil fontified nil 940 . 960) (nil fontified nil 939 . 940) (939 . 1406)) nil (25257 56567 861681 903000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 939) (undo-tree-id73 . -1) (undo-tree-id74 . 1)) nil (25257 56567 861650 819000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . -939)) nil (25257 56567 861646 946000) 0 nil])
([nil nil ((1104 . 1108) 1307) nil (25257 56567 861645 457000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1104) 1311) nil (25257 56567 861643 911000) 0 nil])
([nil nil ((#("print('saved none')
                    current_user.delete_log_line(logChanges['resetLog'])" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 7 (syntax-table (15) fontified t face font-lock-string-face) 7 17 (fontified t face font-lock-string-face) 17 18 (syntax-table (15) fontified t face font-lock-string-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 20 (fontified t) 20 21 (fontified t) 21 54 (fontified t) 54 61 (fontified t) 61 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-1-face)) 69 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-2-face)) 80 81 (syntax-table (15) fontified t face font-lock-string-face) 81 89 (fontified t face font-lock-string-face) 89 90 (syntax-table (15) fontified t face font-lock-string-face) 90 91 (fontified t face (rainbow-delimiters-depth-2-face)) 91 92 (fontified t face (rainbow-delimiters-depth-1-face))) . 1440) (undo-tree-id69 . -92) (undo-tree-id70 . -20) (undo-tree-id71 . -92) (undo-tree-id72 . -92)) nil (25257 56567 861641 835000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1436) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) 1440) nil (25257 56567 861633 457000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1432) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) 1436) nil (25257 56567 861627 980000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1428) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) 1432) nil (25257 56567 861622 558000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1424) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) 1428) nil (25257 56567 861616 454000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1420) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) 1424) nil (25257 56567 861611 156000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1419) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 1420) nil (25257 56567 861605 831000) 0 nil])
([nil nil ((1441 . 1462)) nil (25257 56567 861598 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1553 . 1554) (nil fontified nil 1553 . 1554) (nil fontified nil 1552 . 1553) (nil fontified nil 1551 . 1552) (nil fontified nil 1543 . 1551) (nil fontified nil 1542 . 1543) (nil fontified nil 1541 . 1542) (nil fontified nil 1531 . 1541) (nil fontified nil 1530 . 1531) (nil fontified nil 1523 . 1530) (nil fontified nil 1516 . 1523) (nil fontified nil 1483 . 1516) (nil fontified nil 1482 . 1483) (nil fontified nil 1481 . 1482) (nil fontified nil 1480 . 1481) (nil fontified nil 1479 . 1480) (nil fontified nil 1469 . 1479) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1462 . 1467) (1462 . 1554)) nil (25257 56567 861595 346000) 0 nil])
([nil nil ((#("
                
                " 0 1 (fontified t) 1 17 (fontified t face whitespace-trailing) 17 18 (fontified t) 18 34 (fontified t face whitespace-trailing)) . 1385) (undo-tree-id43 . -34) (undo-tree-id44 . -1) (undo-tree-id45 . -34) (undo-tree-id46 . -34) (undo-tree-id47 . -34) (undo-tree-id48 . -34)) nil (25257 56567 861587 634000) 0 nil])
([nil nil ((#("print('saved none')" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 7 (syntax-table (15) fontified t face font-lock-string-face) 7 17 (fontified t face font-lock-string-face) 17 18 (syntax-table (15) fontified t face font-lock-string-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face))) . 1428) (undo-tree-id39 . -19) (undo-tree-id40 . -19) (undo-tree-id41 . -18) (undo-tree-id42 . -19)) nil (25257 56567 861889 858000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1428) (undo-tree-id102 . -1) (undo-tree-id103 . 1)) nil (25257 56582 497147 929000) 0 nil] [nil nil ((nil rear-nonsticky nil 1514 . 1515) (nil fontified nil 1514 . 1515) (nil fontified nil 1513 . 1514) (nil fontified nil 1511 . 1513) (nil fontified nil 1497 . 1511) (nil fontified nil 1479 . 1497) (nil fontified nil 1478 . 1479) (nil fontified nil 1472 . 1478) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1445 . 1470) (nil fontified nil 1444 . 1445) (nil fontified nil 1443 . 1444) (nil fontified nil 1440 . 1443) (nil fontified nil 1428 . 1440) (1428 . 1515)) ((#("app.logger.info('{0} - {1} set column data'.format(current_user.name, current_user.id))" 0 12 (fontified nil) 12 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-1-face)) 16 17 (fontified nil syntax-table (15) face font-lock-string-face) 17 42 (fontified nil face font-lock-string-face) 42 43 (fontified nil syntax-table (15) face font-lock-string-face) 43 44 (fontified nil) 44 50 (fontified nil face font-lock-builtin-face) 50 51 (fontified nil face (rainbow-delimiters-depth-2-face)) 51 69 (fontified nil) 69 83 (fontified nil) 83 85 (fontified nil face font-lock-builtin-face) 85 86 (fontified nil face (rainbow-delimiters-depth-2-face)) 86 87 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face))) . 1428) (undo-tree-id97 . -60) (nil rear-nonsticky t 1514 . 1515)) (25257 56567 861556 79000) 0 nil])
([nil nil ((#("                    " 0 1 (fontified t) 1 20 (fontified t)) . -1428)) nil (25257 56582 497142 46000) 0 nil])
nil
([nil nil ((1407 . 1428)) nil (25257 56582 497140 785000) 0 nil])
([nil nil ((1428 . 1436)) nil (25257 56582 497139 251000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1433) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1434) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1435) (undo-tree-id101 . -1) 1436) nil (25257 56582 497135 662000) 0 nil])
([nil nil ((1433 . 1434)) nil (25257 56582 496987 623000) 0 nil])
([nil nil ((1434 . 1455)) nil (25257 56582 496986 270000) 0 nil])
([nil nil ((1455 . 1476)) nil (25257 56582 496984 722000) 0 nil])
([nil nil ((1476 . 1482)) nil (25257 56582 496982 453000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1481) (undo-tree-id98 . -1) 1482) nil (25257 56582 496976 476000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -1457) (undo-tree-id106 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1458) (undo-tree-id107 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -1459) (undo-tree-id108 . -1) 1460 (t 25257 56582 500073 872000)) nil (25257 56595 396588 457000) 0 nil])
([nil nil ((1457 . 1465)) nil (25257 56595 396573 939000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-comment-face)) . -1463) (undo-tree-id104 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1464) (undo-tree-id105 . -1) 1465) nil (25257 56595 396569 270000) 0 nil])
([nil nil ((1463 . 1471)) nil (25257 56595 396551 551000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("t" 0 1 (fontified defer face font-lock-comment-face)) . 1471) (#("a" 0 1 (fontified defer face font-lock-comment-face)) . 1471) (#("m" 0 1 (fontified defer face font-lock-comment-face)) . 1471) (#("r" 0 1 (fontified nil face font-lock-comment-face)) . 1471) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("f" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 1471) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 1471)) nil (25257 56595 396544 84000) 0 nil])
([nil nil ((1471 . 1475)) nil (25257 56595 396527 765000) 0 nil])
([nil nil ((#("logChanges['resetLog']" 0 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (syntax-table (15) fontified t face font-lock-string-face) 12 20 (fontified t face font-lock-string-face) 20 21 (syntax-table (15) fontified t face font-lock-string-face) 21 22 (fontified t face (rainbow-delimiters-depth-2-face))) . 1531) (undo-tree-id115 . -22) (undo-tree-id116 . -22) (t 25257 56595 400235 603000)) nil (25257 56625 40922 310000) 0 nil])
([nil nil ((1531 . 1534)) nil (25257 56625 40917 788000) 0 nil])
([nil nil ((#("l" 0 1 (fontified defer)) . -1531) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("o" 0 1 (fontified defer)) . -1532) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("g" 0 1 (fontified t)) . -1533) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 1534) nil (25257 56625 40914 159000) 0 nil])
([nil current ((1531 . 1543)) nil (25257 56625 40890 201000) 0 nil])
nil
