(undo-tree-save-format-version . 1)
"0f0a5f9f8d2847581396961ce3153d9770c44dbd"
[nil nil nil nil (25671 865 909708 523000) 0 nil]
([nil nil ((216 . 217) (213 . 217) (t 25670 65072 953241 2000)) nil (25671 874 200029 791000) 0 nil] [nil nil ((nil rear-nonsticky nil 218 . 219) (nil font-lock-face (web-mode-html-entity-face) 213 . 219) (213 . 219) (t 25670 65072 953241 2000)) ((#("&emsp;" 0 5 (font-lock-face (web-mode-html-entity-face)) 5 6 (font-lock-face (web-mode-html-entity-face) rear-nonsticky nil)) . 213) (undo-tree-id0 . -6) (nil font-lock-face (web-mode-html-entity-face) 218 . 219) (nil font-lock-face (web-mode-html-entity-face) 213 . 218) (nil rear-nonsticky t 218 . 219)) (25671 865 908791 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 441 . 442) (nil tag-name "hr" 441 . 442) (nil tag-type void 441 . 442) (nil tag-end t 441 . 442) (nil font-lock-face web-mode-html-tag-bracket-face 441 . 442) (nil tag-name "hr" 440 . 441) (nil tag-type void 440 . 441) (nil font-lock-face web-mode-html-tag-bracket-face 440 . 441) (nil tag-name "hr" 438 . 440) (nil tag-type void 438 . 440) (nil font-lock-face web-mode-html-tag-face 438 . 440) (nil tag-name "hr" 437 . 438) (nil tag-type void 437 . 438) (nil tag-beg 24 437 . 438) (nil font-lock-face web-mode-html-tag-bracket-face 437 . 438) (437 . 442)) nil (25671 874 200026 987000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 628 . 629) (nil tag-name "hr" 628 . 629) (nil tag-type void 628 . 629) (nil tag-end t 628 . 629) (nil font-lock-face web-mode-html-tag-bracket-face 628 . 629) (nil tag-name "hr" 627 . 628) (nil tag-type void 627 . 628) (nil font-lock-face web-mode-html-tag-bracket-face 627 . 628) (nil tag-name "hr" 625 . 627) (nil tag-type void 625 . 627) (nil font-lock-face web-mode-html-tag-face 625 . 627) (nil tag-name "hr" 624 . 625) (nil tag-type void 624 . 625) (nil tag-beg 24 624 . 625) (nil font-lock-face web-mode-html-tag-bracket-face 624 . 625) (624 . 629)) nil (25671 874 200016 569000) 0 nil])
([nil nil ((#("span" 0 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span")) . 631) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (t 25671 874 205920 146000)) nil (25671 919 112178 469000) 0 nil])
([nil nil ((631 . 634)) nil (25671 919 112173 986000) 0 nil])
([nil nil ((#("span" 0 4 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span")) . 847) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4)) nil (25671 919 112172 639000) 0 nil])
([nil nil ((847 . 850)) nil (25671 919 112168 336000) 0 nil])
([nil nil ((#("span" 0 4 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span")) . 431) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4)) nil (25671 919 112166 907000) 0 nil])
([nil nil ((431 . 434)) nil (25671 919 112162 155000) 0 nil])
([nil nil ((#("span" 0 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span")) . 220) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4)) nil (25671 919 112159 582000) 0 nil])
([nil nil ((220 . 223)) nil (25671 919 112141 965000) 0 nil])
([nil nil ((#("text-" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 231) (undo-tree-id13 . -5) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (t 25671 919 117906 738000)) nil (25671 945 464707 47000) 0 nil])
([nil nil ((#("align" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 231) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (t 25671 945 469899 831000)) nil (25671 964 889477 870000) 0 nil])
([nil nil ((231 . 236)) nil (25671 964 889461 833000) 0 nil])
([nil nil ((247 . 249) (#("  " 0 2 (face whitespace-trailing)) . 246) (246 . 248) (246 . 247) (t 25671 964 893895 167000)) nil (25671 1038 600914 567000) 0 nil])
([nil nil ((249 . 260)) nil (25671 1038 600912 525000) 0 nil])
([nil nil ((255 . 259) (256 . 258) (#("    " 0 4 (face whitespace-trailing)) . 255) (255 . 259) (255 . 256) ("  " . 255) (254 . 257)) nil (25671 1038 600911 71000) 0 nil])
([nil nil ((#("But what of repercussions of popular choices<br/>
" 44 45 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 45 47 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 47 48 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br")) . 319) (310 . 319) (#("  </div>
" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 260) (undo-tree-id38 . -4) (269 . 319) 264) nil (25671 1038 600908 421000) 0 nil])
([nil nil ((#("on the back of the public so feeble<br/>
" 35 36 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 36 38 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 39 40 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br")) . 360) (351 . 360) (#("  </div>
" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 310) (undo-tree-id37 . -4) (319 . 360) 314) nil (25671 1038 600905 183000) 0 nil])
([nil nil ((#("such talk of politics, must be talk of clarification<br/>
" 52 53 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "br") 53 55 (font-lock-face web-mode-html-tag-face tag-type void tag-name "br") 55 56 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "br") 56 57 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "br")) . 418) (409 . 418) (#("  </div>
" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 351) (undo-tree-id36 . -4) (360 . 418) 355) nil (25671 1038 600901 863000) 0 nil])
([nil nil (("for the good of the people
" . 445) (436 . 445) (#("  </div>
" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 4 7 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 7 8 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 409) (undo-tree-id35 . -4) (418 . 445) 413) nil (25671 1038 600898 207000) 0 nil])
([nil nil ((253 . 254)) nil (25671 1038 600894 859000) 0 nil])
([nil nil ((nil rear-nonsticky nil 273 . 274) (nil tag-attr t 273 . 274) (nil tag-attr-end 5 273 . 274) (nil tag-name "div" 273 . 274) (nil tag-type start 273 . 274) (nil font-lock-face web-mode-html-attr-value-face 273 . 274) (nil tag-attr t 260 . 273) (nil tag-name "div" 260 . 273) (nil tag-type start 260 . 273) (nil font-lock-face web-mode-html-attr-value-face 260 . 273) (nil tag-attr t 259 . 260) (nil tag-name "div" 259 . 260) (nil tag-type start 259 . 260) (nil font-lock-face web-mode-html-attr-equal-face 259 . 260) (nil tag-attr t 255 . 259) (nil tag-name "div" 255 . 259) (nil tag-type start 255 . 259) (nil font-lock-face web-mode-html-attr-name-face 255 . 259) (nil tag-attr-beg 0 254 . 255) (nil tag-attr t 254 . 255) (nil tag-name "div" 254 . 255) (nil tag-type start 254 . 255) (nil font-lock-face web-mode-html-attr-name-face 254 . 255) (254 . 274)) nil (25671 1038 600892 623000) 0 nil])
([nil nil ((#("right" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 267) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5)) nil (25671 1038 600886 233000) 0 nil])
([nil nil ((267 . 271)) nil (25671 1038 600873 432000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing)) . -275) 271) nil (25671 1038 600849 983000) 0 nil])
([nil nil ((#("<div style=\"float:left;\">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 23 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t rear-nonsticky t) 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 249) (undo-tree-id114 . -21) (undo-tree-id115 . -25) (undo-tree-id116 . -5) (undo-tree-id117 . -18) (undo-tree-id118 . -25) (t 25671 1038 609880 517000)) nil (25671 1072 316400 613000) 0 nil])
([nil nil (("
" . -245) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) ("
" . -246) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (" " . -247) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (" " . -248) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 249) nil (25671 1072 316362 817000) 0 nil])
([nil nil ((#(" </div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 424) (undo-tree-id90 . -7) (undo-tree-id91 . -7)) nil (25671 1072 316337 301000) 0 nil])
([nil nil (("
" . -422) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (" " . -423) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 424) nil (25671 1072 316331 296000) 0 nil])
([nil nil ((435 . 436)) nil (25671 1072 316273 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 460 . 461) (nil tag-name "div" 460 . 461) (nil tag-type start 460 . 461) (nil tag-end t 460 . 461) (nil font-lock-face web-mode-html-tag-bracket-face 460 . 461) (nil rear-nonsticky t 459 . 460) (nil tag-attr t 459 . 460) (nil tag-attr-end 5 459 . 460) (nil tag-name "div" 459 . 460) (nil tag-type start 459 . 460) (nil font-lock-face web-mode-html-attr-value-face 459 . 460) (nil tag-attr t 447 . 459) (nil tag-name "div" 447 . 459) (nil tag-type start 447 . 459) (nil font-lock-face web-mode-html-attr-value-face 447 . 459) (nil tag-attr t 446 . 447) (nil tag-name "div" 446 . 447) (nil tag-type start 446 . 447) (nil font-lock-face web-mode-html-attr-equal-face 446 . 447) (nil tag-attr t 442 . 446) (nil tag-name "div" 442 . 446) (nil tag-type start 442 . 446) (nil font-lock-face web-mode-html-attr-name-face 442 . 446) (nil tag-attr-beg 0 441 . 442) (nil tag-attr t 441 . 442) (nil tag-name "div" 441 . 442) (nil tag-type start 441 . 442) (nil font-lock-face web-mode-html-attr-name-face 441 . 442) (nil tag-name "div" 440 . 441) (nil tag-type start 440 . 441) (nil tag-name "div" 437 . 440) (nil tag-type start 437 . 440) (nil font-lock-face web-mode-html-tag-face 437 . 440) (nil tag-name "div" 436 . 437) (nil tag-type start 436 . 437) (nil tag-beg 17 436 . 437) (nil font-lock-face web-mode-html-tag-bracket-face 436 . 437) (436 . 461)) nil (25671 1072 316270 866000) 0 nil])
([nil nil ((645 . 647) (618 . 620) (642 . 643)) nil (25671 1072 316259 898000) 0 nil])
([nil nil (("  " . -645) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (647 . 653)) nil (25671 1072 316254 344000) 0 nil])
([nil nil ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 645) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (t 25671 1072 321649 737000)) nil (25671 1158 275404 792000) 0 nil])
([nil nil (("
" . -644) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 645) nil (25671 1158 275400 316000) 0 nil])
([nil nil ((#("
<div style=\"float:left;\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 24 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 24 25 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 25 26 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 435) (undo-tree-id119 . -1) (undo-tree-id120 . -26) (undo-tree-id121 . -1) (undo-tree-id122 . -26)) nil (25671 1158 275385 568000) 0 nil])
([nil nil ((243 . 255)) nil (25671 1158 275350 528000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -249) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 250 (t 25671 1158 276813 59000)) nil (25671 1165 902910 897000) 0 nil])
([nil nil ((249 . 250)) nil (25671 1165 902878 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 79 . 80) (nil tag-name "div" 79 . 80) (nil tag-type start 79 . 80) (nil tag-end t 79 . 80) (nil font-lock-face web-mode-html-tag-bracket-face 79 . 80) (nil tag-attr t 78 . 79) (nil tag-attr-end 5 78 . 79) (nil tag-name "div" 78 . 79) (nil tag-type start 78 . 79) (nil font-lock-face web-mode-html-attr-value-face 78 . 79) (nil tag-attr t 74 . 78) (nil tag-name "div" 74 . 78) (nil tag-type start 74 . 78) (nil font-lock-face web-mode-html-attr-value-face 74 . 78) (nil tag-attr t 73 . 74) (nil tag-name "div" 73 . 74) (nil tag-type start 73 . 74) (nil font-lock-face web-mode-html-attr-equal-face 73 . 74) (nil tag-attr t 69 . 73) (nil tag-name "div" 69 . 73) (nil tag-type start 69 . 73) (nil font-lock-face web-mode-html-attr-name-face 69 . 73) (nil tag-attr-beg 0 68 . 69) (nil tag-attr t 68 . 69) (nil tag-name "div" 68 . 69) (nil tag-type start 68 . 69) (nil font-lock-face web-mode-html-attr-name-face 68 . 69) (nil tag-name "div" 67 . 68) (nil tag-type start 67 . 68) (nil tag-name "div" 64 . 67) (nil tag-type start 64 . 67) (nil font-lock-face web-mode-html-tag-face 64 . 67) (nil tag-name "div" 63 . 64) (nil tag-type start 63 . 64) (nil tag-beg 17 63 . 64) (nil font-lock-face web-mode-html-tag-bracket-face 63 . 64) (63 . 80) (t 25671 1165 908744 665000)) nil (25671 1256 270396 968000) 0 nil])
([nil nil ((232 . 234) (202 . 204) (229 . 230)) nil (25671 1256 270385 408000) 0 nil])
([nil nil (("  " . -232) (234 . 240)) nil (25671 1256 270383 677000) 0 nil])
([nil nil ((244 . 245)) nil (25671 1256 270382 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 261 . 262) (nil tag-name "div" 261 . 262) (nil tag-type start 261 . 262) (nil tag-end t 261 . 262) (nil font-lock-face web-mode-html-tag-bracket-face 261 . 262) (nil tag-attr t 260 . 261) (nil tag-attr-end 5 260 . 261) (nil tag-name "div" 260 . 261) (nil tag-type start 260 . 261) (nil font-lock-face web-mode-html-attr-value-face 260 . 261) (nil tag-attr t 256 . 260) (nil tag-name "div" 256 . 260) (nil tag-type start 256 . 260) (nil font-lock-face web-mode-html-attr-value-face 256 . 260) (nil tag-attr t 255 . 256) (nil tag-name "div" 255 . 256) (nil tag-type start 255 . 256) (nil font-lock-face web-mode-html-attr-equal-face 255 . 256) (nil tag-attr t 251 . 255) (nil tag-name "div" 251 . 255) (nil tag-type start 251 . 255) (nil font-lock-face web-mode-html-attr-name-face 251 . 255) (nil tag-attr-beg 0 250 . 251) (nil tag-attr t 250 . 251) (nil tag-name "div" 250 . 251) (nil tag-type start 250 . 251) (nil font-lock-face web-mode-html-attr-name-face 250 . 251) (nil tag-name "div" 249 . 250) (nil tag-type start 249 . 250) (nil tag-name "div" 246 . 249) (nil tag-type start 246 . 249) (nil font-lock-face web-mode-html-tag-face 246 . 249) (nil tag-name "div" 245 . 246) (nil tag-type start 245 . 246) (nil tag-beg 17 245 . 246) (nil font-lock-face web-mode-html-tag-bracket-face 245 . 246) (245 . 262)) nil (25671 1256 270379 290000) 0 nil])
([nil nil ((485 . 486)) nil (25671 1256 270368 364000) 0 nil])
([nil nil ((486 . 492)) nil (25671 1256 270367 238000) 0 nil])
([nil nil ((492 . 493)) nil (25671 1256 270366 10000) 0 nil])
([nil nil ((nil rear-nonsticky nil 509 . 510) (nil tag-name "div" 509 . 510) (nil tag-type start 509 . 510) (nil tag-end t 509 . 510) (nil font-lock-face web-mode-html-tag-bracket-face 509 . 510) (nil tag-attr t 508 . 509) (nil tag-attr-end 5 508 . 509) (nil tag-name "div" 508 . 509) (nil tag-type start 508 . 509) (nil font-lock-face web-mode-html-attr-value-face 508 . 509) (nil tag-attr t 504 . 508) (nil tag-name "div" 504 . 508) (nil tag-type start 504 . 508) (nil font-lock-face web-mode-html-attr-value-face 504 . 508) (nil tag-attr t 503 . 504) (nil tag-name "div" 503 . 504) (nil tag-type start 503 . 504) (nil font-lock-face web-mode-html-attr-equal-face 503 . 504) (nil tag-attr t 499 . 503) (nil tag-name "div" 499 . 503) (nil tag-type start 499 . 503) (nil font-lock-face web-mode-html-attr-name-face 499 . 503) (nil tag-attr-beg 0 498 . 499) (nil tag-attr t 498 . 499) (nil tag-name "div" 498 . 499) (nil tag-type start 498 . 499) (nil font-lock-face web-mode-html-attr-name-face 498 . 499) (nil tag-name "div" 497 . 498) (nil tag-type start 497 . 498) (nil tag-name "div" 494 . 497) (nil tag-type start 494 . 497) (nil font-lock-face web-mode-html-tag-face 494 . 497) (nil tag-name "div" 493 . 494) (nil tag-type start 493 . 494) (nil tag-beg 17 493 . 494) (nil font-lock-face web-mode-html-tag-bracket-face 493 . 494) (493 . 510)) nil (25671 1256 270363 26000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 24 tag-type void tag-name "hr") 1 3 (font-lock-face web-mode-html-tag-face tag-type void tag-name "hr") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr") 4 5 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type void tag-name "hr" rear-nonsticky t)) . 517) (undo-tree-id163 . -5) (undo-tree-id164 . -6) (499 . 517) (#("<div class=\"row\">
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 6 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 11 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 16 17 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 493) (511 . 517) 516) nil (25671 1256 270352 196000) 0 nil])
([nil nil ((699 . 702)) nil (25671 1256 270347 394000) 0 nil])
([nil nil (("  " . -700) (702 . 708)) nil (25671 1256 270346 51000) 0 nil])
([nil nil ((712 . 713)) nil (25671 1256 270344 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 729 . 730) (nil tag-name "div" 729 . 730) (nil tag-type start 729 . 730) (nil tag-end t 729 . 730) (nil font-lock-face web-mode-html-tag-bracket-face 729 . 730) (nil tag-attr t 728 . 729) (nil tag-attr-end 5 728 . 729) (nil tag-name "div" 728 . 729) (nil tag-type start 728 . 729) (nil font-lock-face web-mode-html-attr-value-face 728 . 729) (nil tag-attr t 724 . 728) (nil tag-name "div" 724 . 728) (nil tag-type start 724 . 728) (nil font-lock-face web-mode-html-attr-value-face 724 . 728) (nil tag-attr t 723 . 724) (nil tag-name "div" 723 . 724) (nil tag-type start 723 . 724) (nil font-lock-face web-mode-html-attr-equal-face 723 . 724) (nil tag-attr t 719 . 723) (nil tag-name "div" 719 . 723) (nil tag-type start 719 . 723) (nil font-lock-face web-mode-html-attr-name-face 719 . 723) (nil tag-attr-beg 0 718 . 719) (nil tag-attr t 718 . 719) (nil tag-name "div" 718 . 719) (nil tag-type start 718 . 719) (nil font-lock-face web-mode-html-attr-name-face 718 . 719) (nil tag-name "div" 717 . 718) (nil tag-type start 717 . 718) (nil tag-name "div" 714 . 717) (nil tag-type start 714 . 717) (nil font-lock-face web-mode-html-tag-face 714 . 717) (nil tag-name "div" 713 . 714) (nil tag-type start 713 . 714) (nil tag-beg 17 713 . 714) (nil font-lock-face web-mode-html-tag-bracket-face 713 . 714) (713 . 730)) nil (25671 1256 270341 546000) 0 nil])
([nil nil ((952 . 953)) nil (25671 1256 270330 269000) 0 nil])
([nil nil ((953 . 959)) nil (25671 1256 270329 95000) 0 nil])
([nil nil ((729 . 730)) nil (25671 1256 270327 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 754 . 755) (nil tag-attr t 754 . 755) (nil tag-attr-end 5 754 . 755) (nil tag-name "div" 754 . 755) (nil tag-type start 754 . 755) (nil font-lock-face web-mode-html-attr-value-face 754 . 755) (nil tag-attr t 736 . 754) (nil tag-name "div" 736 . 754) (nil tag-type start 736 . 754) (nil font-lock-face web-mode-html-attr-value-face 736 . 754) (nil tag-attr t 735 . 736) (nil tag-name "div" 735 . 736) (nil tag-type start 735 . 736) (nil font-lock-face web-mode-html-attr-equal-face 735 . 736) (nil tag-attr t 731 . 735) (nil tag-name "div" 731 . 735) (nil tag-type start 731 . 735) (nil font-lock-face web-mode-html-attr-name-face 731 . 735) (nil tag-attr-beg 0 730 . 731) (nil tag-attr t 730 . 731) (nil tag-name "div" 730 . 731) (nil tag-type start 730 . 731) (nil font-lock-face web-mode-html-attr-name-face 730 . 731) (730 . 755)) nil (25671 1256 270325 315000) 0 nil])
([nil nil ((#("
<div style=\"text-align:right;\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 30 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 31 32 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 756) (undo-tree-id156 . -32) (undo-tree-id157 . -16) (undo-tree-id158 . -16) (undo-tree-id159 . -1) (undo-tree-id160 . -31) (undo-tree-id161 . -31) (undo-tree-id162 . -32)) nil (25671 1256 270317 53000) 0 nil])
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 939) (undo-tree-id153 . -7) (undo-tree-id154 . -1) (undo-tree-id155 . -7)) nil (25671 1256 270217 686000) 0 nil])
([nil nil ((261 . 262)) nil (25671 1256 270211 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 293 . 294) (nil tag-attr t 293 . 294) (nil tag-attr-end 5 293 . 294) (nil tag-name "div" 293 . 294) (nil tag-type start 293 . 294) (nil font-lock-face web-mode-html-attr-value-face 293 . 294) (nil tag-attr t 268 . 293) (nil tag-name "div" 268 . 293) (nil tag-type start 268 . 293) (nil font-lock-face web-mode-html-attr-value-face 268 . 293) (nil tag-attr t 267 . 268) (nil tag-name "div" 267 . 268) (nil tag-type start 267 . 268) (nil font-lock-face web-mode-html-attr-equal-face 267 . 268) (nil tag-attr t 263 . 267) (nil tag-name "div" 263 . 267) (nil tag-type start 263 . 267) (nil font-lock-face web-mode-html-attr-name-face 263 . 267) (nil tag-attr-beg 0 262 . 263) (nil tag-attr t 262 . 263) (nil tag-name "div" 262 . 263) (nil tag-type start 262 . 263) (nil font-lock-face web-mode-html-attr-name-face 262 . 263) (262 . 294)) nil (25671 1256 270208 546000) 0 nil])
([nil nil ((#("width:500px;" 0 12 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 281) (undo-tree-id151 . -12) (undo-tree-id152 . -12)) nil (25671 1256 270121 624000) 0 nil])
([nil nil ((#("text-align" 0 10 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 758) (undo-tree-id149 . -10) (undo-tree-id150 . -10)) nil (25671 1256 270117 738000) 0 nil])
([nil nil ((758 . 763)) nil (25671 1256 270114 3000) 0 nil])
([nil nil ((#("
<div style=\"float:right;width:500px;\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 283) (undo-tree-id145 . -39) (undo-tree-id146 . -1) (undo-tree-id147 . -38) (undo-tree-id148 . -39)) nil (25671 1256 270112 384000) 0 nil])
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 467) (undo-tree-id142 . -7) (undo-tree-id143 . -1) (undo-tree-id144 . -7)) nil (25671 1256 270105 477000) 0 nil])
([nil nil (("
" . -283) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 284) nil (25671 1256 270099 424000) 0 nil])
([nil nil ((238 . 239)) nil (25671 1256 270090 346000) 0 nil])
([nil nil ((245 . 246)) nil (25671 1256 270089 171000) 0 nil])
([nil nil ((468 . 469)) nil (25671 1256 270087 873000) 0 nil])
([nil nil ((475 . 476)) nil (25671 1256 270086 379000) 0 nil])
([nil nil ((684 . 685)) nil (25671 1256 270084 464000) 0 nil])
([nil nil ((691 . 692)) nil (25671 1256 270077 130000) 0 nil])
([nil nil ((#("

<div class=\"row\">" 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 6 7 (tag-type start tag-name "div") 7 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 8 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 12 13 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 13 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 18 19 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 475) (undo-tree-id223 . -19) (undo-tree-id224 . -1) (undo-tree-id225 . -19) (t 25671 1256 275999 835000)) nil (25671 1300 265082 236000) 0 nil])
([nil nil ((#("</div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 5 6 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 462) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6)) nil (25671 1300 265077 355000) 0 nil])
([nil nil (("
" . -461) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 462) nil (25671 1300 265072 431000) 0 nil])
([nil nil ((#("
<div class=\"row\" style=\"float:right;\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 17 18 (tag-type start tag-name "div") 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 19 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 24 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t rear-nonsticky t) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 246) (undo-tree-id209 . -39) (undo-tree-id210 . -1) (undo-tree-id211 . -39) (undo-tree-id212 . -18) (undo-tree-id213 . -37) (undo-tree-id214 . -39) (undo-tree-id215 . -39)) nil (25671 1300 265066 362000) 0 nil])
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 231) (undo-tree-id206 . -7) (undo-tree-id207 . -1) (undo-tree-id208 . -7)) nil (25671 1300 265055 932000) 0 nil])
([nil nil ((#("
<div class=\"row\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 62) (undo-tree-id202 . -18) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -18)) nil (25671 1300 265051 154000) 0 nil])
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 587) (undo-tree-id199 . -7) (undo-tree-id200 . -1) (undo-tree-id201 . -7)) nil (25671 1300 265045 373000) 0 nil])
([nil nil ((#("
<div class=\"row\" style=\"float:right;\">" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 2 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 5 6 (tag-type start tag-name "div") 6 7 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 7 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 11 12 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 12 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 17 18 (tag-type start tag-name "div") 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 19 23 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 23 24 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 24 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t rear-nonsticky t) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div" rear-nonsticky t)) . 595) (undo-tree-id192 . -39) (undo-tree-id193 . -29) (undo-tree-id194 . -39) (undo-tree-id195 . -39) (undo-tree-id196 . -1) (undo-tree-id197 . -25) (undo-tree-id198 . -39)) nil (25671 1300 265040 76000) 0 nil])
([nil nil ((#("
</div>" 1 2 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 2 3 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 3 6 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 6 7 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 778) (undo-tree-id189 . -7) (undo-tree-id190 . -1) (undo-tree-id191 . -7)) nil (25671 1300 265031 235000) 0 nil])
([nil nil (("
" . -587) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 588) nil (25671 1300 265024 957000) 0 nil])
([nil nil (("
" . -593) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 594) nil (25671 1300 265020 828000) 0 nil])
([nil nil ((" " . -561) (undo-tree-id178 . -1) (" " . -562) (undo-tree-id179 . -1) 563) nil (25671 1300 265011 374000) 0 nil])
([nil nil (("
" . -397) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 398) nil (25671 1300 265006 753000) 0 nil])
([nil nil (("
" . -220) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 221) nil (25671 1300 265001 993000) 0 nil])
([nil nil ((" " . -184) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (" " . -185) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 186) nil (25671 1300 264988 83000) 0 nil])
([nil nil (("
" . 211) (undo-tree-id0 . -1) (t 25671 1300 271676 717000)) nil (25672 17365 781782 16000) 0 nil])
([nil nil ((62 . 63)) nil (25672 17365 782150 773000) 0 nil])
([nil nil ((63 . 65)) nil (25672 17402 788382 84000) 0 nil] [nil nil ((66 . 67) (63 . 67)) ((#("<br>" 0 1 (tag-name "br" tag-type void tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 63) (undo-tree-id1 . -3) (undo-tree-id2 . -4) (#("/" 0 1 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face)) . 66)) (25672 17365 781742 764000) 0 nil])
([nil nil ((65 . 74)) nil (25672 17402 788381 105000) 0 nil])
nil
([nil nil ((69 . 71) (#("  " 0 2 (face whitespace-trailing)) . 69) (69 . 71) (68 . 70)) nil (25672 17402 788379 901000) 0 nil])
([nil nil ((#("Talk of politic, talk of nonsense<br/>
" 33 34 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 34 36 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 36 37 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 118) (111 . 118) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 72) (undo-tree-id28 . -2) (79 . 118) 74) nil (25672 17402 788377 819000) 0 nil])
([nil nil ((#("no need for logic, proof or certainty<br/>
" 37 38 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 38 40 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 40 41 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 41 42 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 161) (154 . 161) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 111) (undo-tree-id27 . -2) (118 . 161) 113) nil (25672 17402 788374 743000) 0 nil])
([nil nil ((#("all you need is a popular opinion<br/>
" 33 34 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 34 36 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 36 37 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 200) (undo-tree-id24 . -38) (undo-tree-id25 . -38) (193 . 200) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 154) (undo-tree-id26 . -2) (161 . 200) 156) nil (25672 17402 788371 503000) 0 nil])
([nil nil (("so cast aside your morality
" . 228) (undo-tree-id22 . -27) (221 . 228) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 193) (undo-tree-id23 . -2) (200 . 228) 195) nil (25672 17402 788365 208000) 0 nil])
([nil nil ((227 . 228)) nil (25672 17402 788361 490000) 0 nil])
([nil nil ((228 . 239)) nil (25672 17402 788360 670000) 0 nil])
([nil nil ((234 . 236) (#("  " 0 2 (face whitespace-trailing)) . 234) (234 . 236) (233 . 235)) nil (25672 17402 788359 526000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 250) (243 . 250) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 237) (undo-tree-id21 . -2) (244 . 250) 239) nil (25672 17402 788357 401000) 0 nil])
([nil nil ((#("But what of repercussions of popular choices<br/>
" 44 45 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 45 47 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 47 48 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 48 49 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 300) (293 . 300) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 243) (undo-tree-id20 . -2) (250 . 300) 245) nil (25672 17402 788354 121000) 0 nil])
([nil nil ((#("on the back of the public so feeble<br/>
" 35 36 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 36 38 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 38 39 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 39 40 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 341) (334 . 341) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 293) (undo-tree-id19 . -2) (300 . 341) 295) nil (25672 17402 788351 59000) 0 nil])
([nil nil ((#("such talk of politics, must be talk of clarification<br/>
" 52 53 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 53 55 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 55 56 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 399) (392 . 399) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 334) (341 . 399) 336) nil (25672 17402 788348 58000) 0 nil])
([nil nil (("for the good of the people
" . 426) (419 . 426) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 392) (undo-tree-id18 . -2) (399 . 426) 394) nil (25672 17402 788345 988000) 0 nil])
([nil nil ((431 . 432)) nil (25672 17402 788343 426000) 0 nil])
([nil nil ((432 . 443)) nil (25672 17402 788342 529000) 0 nil])
([nil nil ((438 . 440) (#("  " 0 2 (face whitespace-trailing)) . 438) (438 . 440) (437 . 439)) nil (25672 17402 788341 415000) 0 nil])
([nil nil ((#("Such talk is an ideal, such talk has been forgotten<br/>
" 51 52 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 52 54 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 54 55 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 505) (498 . 505) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 441) (undo-tree-id17 . -2) (448 . 505) 443) nil (25672 17402 788339 377000) 0 nil])
([nil nil ((#("it holds no place in this society<br/>
" 33 34 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 34 36 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 36 37 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 544) (537 . 544) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 498) (undo-tree-id16 . -2) (505 . 544) 500) nil (25672 17402 788336 234000) 0 nil])
([nil nil ((#("today politic is debating which belief is most favored<br/>
" 54 55 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 55 57 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 57 58 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 58 59 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 604) (597 . 604) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 537) (undo-tree-id15 . -2) (544 . 604) 539) nil (25672 17402 788333 184000) 0 nil])
([nil nil (("each a paragon of piety.
" . 629) (622 . 629) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 597) (undo-tree-id14 . -2) (604 . 629) 599) nil (25672 17402 788330 146000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 243) (undo-tree-id11 . -2) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (240 . 243) (#("  
" 0 2 (face whitespace-trailing)) . 234) (237 . 243) 239) nil (25672 17402 788326 846000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 240) (undo-tree-id9 . -2) (undo-tree-id10 . -6) (234 . 240) (#("<div>
" 0 1 (tag-name "div" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 228) (234 . 240) 236) nil (25672 17402 788321 680000) 0 nil])
([nil nil ((628 . 629)) nil (25672 17402 788317 721000) 0 nil])
([nil nil ((629 . 640)) nil (25672 17402 788316 636000) 0 nil])
([nil nil ((635 . 637) (#("  " 0 2 (face whitespace-trailing)) . 635) (635 . 637) (634 . 636)) nil (25672 17402 788315 352000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 651) (644 . 651) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 638) (undo-tree-id8 . -2) (645 . 651) 640) nil (25672 17402 788313 427000) 0 nil])
([nil nil ((#("So should we just accept this popularity contest<br/>
" 48 49 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 49 51 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 51 52 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 52 53 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 705) (698 . 705) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 644) (undo-tree-id7 . -2) (651 . 705) 646) nil (25672 17402 788310 167000) 0 nil])
([nil nil ((#("is this really the democratic way<br/>
" 33 34 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 34 36 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 36 37 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 744) (737 . 744) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 698) (undo-tree-id6 . -2) (705 . 744) 700) nil (25672 17402 788307 38000) 0 nil])
([nil nil ((#("That to sway the majority, is the highest priority<br/>
" 50 51 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 51 53 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 53 54 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 54 55 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 800) (793 . 800) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 737) (undo-tree-id5 . -2) (744 . 800) 739) nil (25672 17402 788303 725000) 0 nil])
([nil nil (("so you leave your ideals to decay
" . 834) (undo-tree-id3 . -34) (827 . 834) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 793) (undo-tree-id4 . -2) (800 . 834) 795) nil (25672 17402 788299 982000) 0 nil])
([nil nil ((246 . 255) (238 . 247)) nil (25672 17402 788289 837000) 0 nil])
([nil nil ((255 . 269)) nil (25672 17402 788287 982000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing)) . -661) (#("  " 0 2 (face whitespace-trailing)) . -466) (#("  " 0 2 (face whitespace-trailing)) . -270) (#("  " 0 2 (face whitespace-trailing)) . -69) 269) nil (25672 17402 788280 686000) 0 nil])
([nil nil (("
" . 270) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (t 25672 17402 794321 144000)) nil (25672 17439 829080 324000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -256) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("w" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -257) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -258) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("d" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -259) (undo-tree-id75 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -260) (undo-tree-id76 . -1) (#("h" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -261) (undo-tree-id77 . -1) (#(":" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -262) (undo-tree-id78 . -1) (#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -263) (undo-tree-id79 . -1) (#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -264) (undo-tree-id80 . -1) (#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -265) (undo-tree-id81 . -1) (#("%" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -266) (undo-tree-id82 . -1) 267) nil (25672 17439 829069 243000) 0 nil])
([nil nil ((231 . 232) (t 25672 17439 834379 906000)) nil (25672 17467 727569 577000) 0 nil])
([nil nil ((232 . 236)) nil (25672 17467 727568 536000) 0 nil])
([nil nil ((236 . 243)) nil (25672 17467 727567 671000) 0 nil])
([nil nil ((238 . 240) (#("  " 0 2 (face whitespace-trailing)) . 238) (238 . 240) (237 . 239)) nil (25672 17467 727566 577000) 0 nil])
([nil nil ((#("<div style=\"float:right;\">
" 0 1 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "div" tag-type start) 5 6 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 11 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 275) (undo-tree-id90 . -25) (undo-tree-id91 . -27) (undo-tree-id92 . -4) (undo-tree-id93 . -25) (268 . 275) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 241) (undo-tree-id94 . -2) (248 . 275) 243) nil (25672 17467 727564 426000) 0 nil])
([nil nil ((#("But what of repercussions of popular choices<br/>
" 44 45 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 45 47 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 47 48 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 48 49 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 325) (318 . 325) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 268) (undo-tree-id89 . -2) (275 . 325) 270) nil (25672 17467 727556 991000) 0 nil])
([nil nil ((#("on the back of the public so feeble<br/>
" 35 36 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 36 38 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 38 39 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 39 40 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 366) (359 . 366) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 318) (undo-tree-id88 . -2) (325 . 366) 320) nil (25672 17467 727553 980000) 0 nil])
([nil nil ((#("such talk of politics, must be talk of clarification<br/>
" 52 53 (tag-name "br" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 53 55 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-face) 55 56 (tag-name "br" tag-type void font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "br" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 424) (417 . 424) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 359) (undo-tree-id87 . -2) (366 . 424) 361) nil (25672 17467 727550 853000) 0 nil])
([nil nil (("for the good of the people
" . 451) (444 . 451) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 417) (undo-tree-id86 . -2) (424 . 451) 419) nil (25672 17467 727547 346000) 0 nil])
([nil nil ((#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 458) (451 . 458) (#("</div>
" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 444) (undo-tree-id85 . -2) (451 . 458) 446) nil (25672 17467 727543 239000) 0 nil])
([nil nil ((244 . 254) (236 . 245)) nil (25672 17467 727531 820000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing)) . -257) 254) nil (25672 17467 727524 618000) 0 nil])
([nil nil (("
" . 256) (undo-tree-id95 . -1) (t 25672 17467 734427 214000)) nil (25672 17473 653061 88000) 0 nil])
([nil nil ((254 . 256) (t 25672 17473 662437 589000)) nil (25672 17514 910138 196000) 0 nil])
([nil nil ((#("h" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -255) (undo-tree-id96 . -1) 256) nil (25672 17514 910134 958000) 0 nil])
([nil nil ((255 . 267)) nil (25672 17514 910119 412000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -263) (undo-tree-id98 . -1) (#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -264) (undo-tree-id99 . -1) (#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -265) (undo-tree-id100 . -1) (#("%" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -266) (undo-tree-id101 . -1) 267 (t 25672 17514 918512 773000)) nil (25672 17529 186047 493000) 0 nil])
([nil nil ((263 . 266)) nil (25672 17529 186039 654000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -265) (undo-tree-id97 . -1) 266) nil (25672 17529 186037 288000) 0 nil])
([nil nil ((265 . 267)) nil (25672 17529 186020 745000) 0 nil])
([nil nil ((#("auto" 0 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 263) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (t 25672 17529 194539 961000)) nil (25672 17597 888380 143000) 0 nil])
([nil nil ((263 . 269)) nil (25672 17597 888361 739000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -264) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 265 (t 25672 17597 898678 511000)) nil (25672 17608 494527 874000) 0 nil])
([nil nil ((264 . 265)) nil (25672 17608 494418 852000) 0 nil])
([nil nil ((#("
<hr/>" 1 2 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 2 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 4 5 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 488) (undo-tree-id132 . -6) (undo-tree-id133 . -1) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (t 25672 17608 502700 971000)) nil (25672 17624 826809 517000) 0 nil])
([nil nil ((#("
<div>" 1 2 (tag-name "div" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 488) (undo-tree-id129 . -6) (undo-tree-id130 . -1) (undo-tree-id131 . -6)) nil (25672 17624 826804 192000) 0 nil])
([nil nil ((#("</div>" 0 1 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 671) (undo-tree-id127 . -6) (undo-tree-id128 . -6)) nil (25672 17624 826799 882000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 685) (undo-tree-id125 . -5) (undo-tree-id126 . -6) (684 . 685) ("
" . 678) (679 . 685) 684) nil (25672 17624 826794 782000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 684) (undo-tree-id123 . -5) (undo-tree-id124 . -6) (678 . 684) (#("<div>
" 0 1 (tag-name "div" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 672) (678 . 684) 683) nil (25672 17624 826790 590000) 0 nil])
([nil nil ((#("<hr/>
" 0 1 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 3 4 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 678) (undo-tree-id121 . -5) (undo-tree-id122 . -6) (677 . 678) ("
" . 671) (672 . 678) 677) nil (25672 17624 826785 853000) 0 nil])
([nil nil ((#("
</div>" 1 2 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 3 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 218) (undo-tree-id116 . -7) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -7)) nil (25672 17624 826780 650000) 0 nil])
([nil nil ((#("
<div>
" 1 2 (tag-name "div" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 2 5 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 5 6 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 62) (undo-tree-id113 . -7) (undo-tree-id114 . -1) (undo-tree-id115 . -7)) nil (25672 17624 826770 452000) 0 nil])
([nil nil ((663 . 664) (t 25672 17624 834736 84000)) nil (25672 17650 648985 30000) 0 nil])
([nil nil ((nil rear-nonsticky nil 702 . 703) (nil tag-name "div" 702 . 703) (nil tag-type start 702 . 703) (nil tag-end t 702 . 703) (nil font-lock-face web-mode-html-tag-bracket-face 702 . 703) (nil tag-attr t 701 . 702) (nil tag-attr-end 5 701 . 702) (nil tag-name "div" 701 . 702) (nil tag-type start 701 . 702) (nil font-lock-face web-mode-html-attr-value-face 701 . 702) (nil tag-attr t 675 . 701) (nil tag-name "div" 675 . 701) (nil tag-type start 675 . 701) (nil font-lock-face web-mode-html-attr-value-face 675 . 701) (nil tag-attr t 674 . 675) (nil tag-name "div" 674 . 675) (nil tag-type start 674 . 675) (nil font-lock-face web-mode-html-attr-equal-face 674 . 675) (nil tag-attr t 673 . 674) (nil tag-name "div" 673 . 674) (nil tag-type start 673 . 674) (nil font-lock-face web-mode-html-attr-name-face 673 . 674) (nil tag-attr t 672 . 673) (nil tag-name "div" 672 . 673) (nil tag-type start 672 . 673) (nil font-lock-face web-mode-html-attr-name-face 672 . 673) (nil tag-attr t 671 . 672) (nil tag-name "div" 671 . 672) (nil tag-type start 671 . 672) (nil font-lock-face web-mode-html-attr-name-face 671 . 672) (nil tag-attr t 670 . 671) (nil tag-name "div" 670 . 671) (nil tag-type start 670 . 671) (nil font-lock-face web-mode-html-attr-name-face 670 . 671) (nil tag-attr-beg 0 669 . 670) (nil tag-attr t 669 . 670) (nil tag-name "div" 669 . 670) (nil tag-type start 669 . 670) (nil font-lock-face web-mode-html-attr-name-face 669 . 670) (nil tag-name "div" 668 . 669) (nil tag-type start 668 . 669) (nil tag-name "div" 665 . 668) (nil tag-type start 665 . 668) (nil font-lock-face web-mode-html-tag-face 665 . 668) (nil tag-name "div" 664 . 665) (nil tag-type start 664 . 665) (nil tag-beg 17 664 . 665) (nil font-lock-face web-mode-html-tag-bracket-face 664 . 665) (664 . 703)) nil (25672 17650 648979 324000) 0 nil])
([nil nil ((900 . 901)) nil (25672 17650 648957 102000) 0 nil])
([nil nil ((901 . 907)) nil (25672 17650 648956 287000) 0 nil])
([nil nil ((912 . 914) (874 . 878) (814 . 818) (771 . 775) (713 . 717) (704 . 706) 664) nil (25672 17650 648955 104000) 0 nil])
([nil nil (("
" . 711) (undo-tree-id136 . -1)) nil (25672 17650 648952 420000) 0 nil])
([nil nil ((479 . 481) (448 . 452) (386 . 390) (341 . 345) (287 . 291) (258 . 260) 218) nil (25672 17650 648943 639000) 0 nil])
([nil nil ((730 . 731)) nil (25672 17650 648940 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 750 . 751) (nil tag-attr t 750 . 751) (nil tag-attr-end 5 750 . 751) (nil tag-name "div" 750 . 751) (nil tag-type start 750 . 751) (nil font-lock-face web-mode-html-attr-value-face 750 . 751) (nil tag-attr t 737 . 750) (nil tag-name "div" 737 . 750) (nil tag-type start 737 . 750) (nil font-lock-face web-mode-html-attr-value-face 737 . 750) (nil tag-attr t 736 . 737) (nil tag-name "div" 736 . 737) (nil tag-type start 736 . 737) (nil font-lock-face web-mode-html-attr-equal-face 736 . 737) (nil tag-attr t 735 . 736) (nil tag-name "div" 735 . 736) (nil tag-type start 735 . 736) (nil font-lock-face web-mode-html-attr-name-face 735 . 736) (nil tag-attr t 734 . 735) (nil tag-name "div" 734 . 735) (nil tag-type start 734 . 735) (nil font-lock-face web-mode-html-attr-name-face 734 . 735) (nil tag-attr t 733 . 734) (nil tag-name "div" 733 . 734) (nil tag-type start 733 . 734) (nil font-lock-face web-mode-html-attr-name-face 733 . 734) (nil tag-attr t 732 . 733) (nil tag-name "div" 732 . 733) (nil tag-type start 732 . 733) (nil font-lock-face web-mode-html-attr-name-face 732 . 733) (nil tag-attr-beg 0 731 . 732) (nil tag-attr t 731 . 732) (nil tag-name "div" 731 . 732) (nil tag-type start 731 . 732) (nil font-lock-face web-mode-html-attr-name-face 731 . 732) (731 . 751)) nil (25672 17650 648933 107000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -250) (undo-tree-id139 . -1) 251 (t 25672 17650 658792 866000)) nil (25672 17678 794767 185000) 0 nil])
([nil nil ((250 . 251)) nil (25672 17678 794764 348000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -716) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 717) nil (25672 17678 794761 822000) 0 nil])
([nil current ((716 . 717)) nil (25672 17678 794745 121000) 0 nil])
nil
