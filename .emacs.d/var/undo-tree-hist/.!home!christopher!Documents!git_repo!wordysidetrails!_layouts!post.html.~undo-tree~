(undo-tree-save-format-version . 1)
"9e859f4194b61a3d4d7963376bc1f332da5fffa4"
[nil nil nil nil (25351 57686 991552 295000) 0 nil]
([nil nil ((1038 . 1047) (t 24728 130 0 0)) nil (25351 57686 991549 492000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1495 . 1496) (nil tag-name "span" 1495 . 1496) (nil tag-type end 1495 . 1496) (nil tag-end t 1495 . 1496) (nil font-lock-face web-mode-html-tag-bracket-face 1495 . 1496) (nil tag-name "span" 1491 . 1495) (nil tag-type end 1491 . 1495) (nil font-lock-face web-mode-html-tag-face 1491 . 1495) (nil tag-name "span" 1490 . 1491) (nil tag-type end 1490 . 1491) (nil font-lock-face web-mode-html-tag-bracket-face 1490 . 1491) (nil tag-name "span" 1489 . 1490) (nil tag-type end 1489 . 1490) (nil tag-beg 20 1489 . 1490) (nil font-lock-face web-mode-html-tag-bracket-face 1489 . 1490) (nil block-side t 1475 . 1476) (nil block-end t 1475 . 1476) (nil block-token delimiter-end 1475 . 1476) (nil font-lock-face web-mode-block-delimiter-face 1475 . 1476) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1475 . 1476) (nil block-side t 1474 . 1475) (nil block-token delimiter-end 1474 . 1475) (nil font-lock-face web-mode-block-delimiter-face 1474 . 1475) (nil block-side t 1473 . 1474) (nil block-side t 1461 . 1473) (nil face web-mode-variable-name-face 1461 . 1473) (nil block-side t 1460 . 1461) (nil block-side t 1453 . 1460) (nil face web-mode-variable-name-face 1453 . 1460) (nil block-side t 1438 . 1453) (nil block-side t 1424 . 1438) (nil face web-mode-variable-name-face 1424 . 1438) (nil block-side t 1423 . 1424) (nil block-side t 1416 . 1423) (nil face web-mode-block-control-face 1416 . 1423) (nil block-side t 1415 . 1416) (nil block-side t 1414 . 1415) (nil block-token delimiter-beg 1414 . 1415) (nil font-lock-face web-mode-block-delimiter-face 1414 . 1415) (nil block-beg 0 1413 . 1414) (nil block-controls 0 1413 . 1414) (nil block-side t 1413 . 1414) (nil block-token delimiter-beg 1413 . 1414) (nil font-lock-face web-mode-block-delimiter-face 1413 . 1414) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1413 . 1414) (nil font-lock-face (web-mode-html-entity-face) 1404 . 1412) (nil block-side t 1402 . 1403) (nil block-end t 1402 . 1403) (nil block-token delimiter-end 1402 . 1403) (nil font-lock-face web-mode-block-delimiter-face 1402 . 1403) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1402 . 1403) (nil block-side t 1401 . 1402) (nil block-token delimiter-end 1401 . 1402) (nil font-lock-face web-mode-block-delimiter-face 1401 . 1402) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1401 . 1402) (nil block-side t 1400 . 1401) (nil block-side t 1399 . 1400) (nil block-token string 1399 . 1400) (nil font-lock-face web-mode-block-string-face 1399 . 1400) (nil block-side t 1398 . 1399) (nil block-token string 1398 . 1399) (nil font-lock-face web-mode-block-string-face 1398 . 1399) (nil block-side t 1395 . 1398) (nil block-token string 1395 . 1398) (nil font-lock-face web-mode-block-string-face 1395 . 1398) (nil block-side t 1394 . 1395) (nil block-token string 1394 . 1395) (nil font-lock-face web-mode-block-string-face 1394 . 1395) (nil block-side t 1392 . 1394) (nil block-token string 1392 . 1394) (nil font-lock-face web-mode-block-string-face 1392 . 1394) (nil block-side t 1391 . 1392) (nil block-token string 1391 . 1392) (nil font-lock-face web-mode-block-string-face 1391 . 1392) (nil block-side t 1389 . 1391) (nil block-token string 1389 . 1391) (nil font-lock-face web-mode-block-string-face 1389 . 1391) (nil block-side t 1387 . 1389) (nil block-side t 1383 . 1387) (nil face web-mode-filter-face 1383 . 1387) (nil block-side t 1380 . 1383) (nil block-side t 1376 . 1380) (nil face web-mode-variable-name-face 1376 . 1380) (nil block-side t 1375 . 1376) (nil block-side t 1371 . 1375) (nil face web-mode-variable-name-face 1371 . 1375) (nil block-side t 1370 . 1371) (nil block-side t 1369 . 1370) (nil block-token delimiter-beg 1369 . 1370) (nil font-lock-face web-mode-block-delimiter-face 1369 . 1370) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1369 . 1370) (nil block-beg 0 1368 . 1369) (nil block-controls 0 1368 . 1369) (nil block-side t 1368 . 1369) (nil block-token delimiter-beg 1368 . 1369) (nil font-lock-face web-mode-block-delimiter-face 1368 . 1369) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1368 . 1369) (nil tag-name "a" 1349 . 1350) (nil tag-type end 1349 . 1350) (nil tag-end t 1349 . 1350) (nil font-lock-face web-mode-html-tag-bracket-face 1349 . 1350) (nil tag-name "a" 1348 . 1349) (nil tag-type end 1348 . 1349) (nil font-lock-face web-mode-html-tag-face 1348 . 1349) (nil tag-name "a" 1347 . 1348) (nil tag-type end 1347 . 1348) (nil font-lock-face web-mode-html-tag-bracket-face 1347 . 1348) (nil tag-name "a" 1346 . 1347) (nil tag-type end 1346 . 1347) (nil tag-beg 20 1346 . 1347) (nil font-lock-face web-mode-html-tag-bracket-face 1346 . 1347) (nil block-side t 1345 . 1346) (nil block-end t 1345 . 1346) (nil block-token delimiter-end 1345 . 1346) (nil font-lock-face web-mode-block-delimiter-face 1345 . 1346) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1345 . 1346) (nil block-side t 1344 . 1345) (nil block-token delimiter-end 1344 . 1345) (nil font-lock-face web-mode-block-delimiter-face 1344 . 1345) (nil block-side t 1343 . 1344) (nil block-side t 1338 . 1343) (nil face web-mode-block-control-face 1338 . 1343) (nil block-side t 1337 . 1338) (nil block-side t 1336 . 1337) (nil block-token delimiter-beg 1336 . 1337) (nil font-lock-face web-mode-block-delimiter-face 1336 . 1337) (nil block-beg 0 1335 . 1336) (nil block-controls 0 1335 . 1336) (nil block-side t 1335 . 1336) (nil block-token delimiter-beg 1335 . 1336) (nil font-lock-face web-mode-block-delimiter-face 1335 . 1336) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1335 . 1336) (nil block-side t 1334 . 1335) (nil block-end t 1334 . 1335) (nil block-token delimiter-end 1334 . 1335) (nil font-lock-face web-mode-block-delimiter-face 1334 . 1335) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1334 . 1335) (nil block-side t 1333 . 1334) (nil block-token delimiter-end 1333 . 1334) (nil font-lock-face web-mode-block-delimiter-face 1333 . 1334) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1333 . 1334) (nil block-side t 1332 . 1333) (nil block-side t 1326 . 1332) (nil face web-mode-variable-name-face 1326 . 1332) (nil block-side t 1325 . 1326) (nil block-side t 1321 . 1325) (nil face web-mode-variable-name-face 1321 . 1325) (nil block-side t 1320 . 1321) (nil block-side t 1319 . 1320) (nil block-token delimiter-beg 1319 . 1320) (nil font-lock-face web-mode-block-delimiter-face 1319 . 1320) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1319 . 1320) (nil block-beg 0 1318 . 1319) (nil block-controls 0 1318 . 1319) (nil block-side t 1318 . 1319) (nil block-token delimiter-beg 1318 . 1319) (nil font-lock-face web-mode-block-delimiter-face 1318 . 1319) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1318 . 1319) (nil block-side t 1317 . 1318) (nil block-end t 1317 . 1318) (nil block-token delimiter-end 1317 . 1318) (nil font-lock-face web-mode-block-delimiter-face 1317 . 1318) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1317 . 1318) (nil block-side t 1316 . 1317) (nil block-token delimiter-end 1316 . 1317) (nil font-lock-face web-mode-block-delimiter-face 1316 . 1317) (nil block-side t 1315 . 1316) (nil block-side t 1311 . 1315) (nil face web-mode-block-control-face 1311 . 1315) (nil block-side t 1310 . 1311) (nil block-side t 1309 . 1310) (nil block-token delimiter-beg 1309 . 1310) (nil font-lock-face web-mode-block-delimiter-face 1309 . 1310) (nil block-beg 0 1308 . 1309) (nil block-controls 0 1308 . 1309) (nil block-side t 1308 . 1309) (nil block-token delimiter-beg 1308 . 1309) (nil font-lock-face web-mode-block-delimiter-face 1308 . 1309) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1308 . 1309) (nil block-side t 1307 . 1308) (nil block-end t 1307 . 1308) (nil block-token delimiter-end 1307 . 1308) (nil font-lock-face web-mode-block-delimiter-face 1307 . 1308) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1307 . 1308) (nil block-side t 1306 . 1307) (nil block-token delimiter-end 1306 . 1307) (nil font-lock-face web-mode-block-delimiter-face 1306 . 1307) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1306 . 1307) (nil block-side t 1305 . 1306) (nil block-side t 1299 . 1305) (nil face web-mode-variable-name-face 1299 . 1305) (nil block-side t 1298 . 1299) (nil block-side t 1294 . 1298) (nil face web-mode-variable-name-face 1294 . 1298) (nil block-side t 1293 . 1294) (nil block-side t 1292 . 1293) (nil block-token delimiter-beg 1292 . 1293) (nil font-lock-face web-mode-block-delimiter-face 1292 . 1293) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1292 . 1293) (nil block-beg 0 1291 . 1292) (nil block-controls 0 1291 . 1292) (nil block-side t 1291 . 1292) (nil block-token delimiter-beg 1291 . 1292) (nil font-lock-face web-mode-block-delimiter-face 1291 . 1292) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1291 . 1292) (nil block-side t 1290 . 1291) (nil block-end t 1290 . 1291) (nil block-token delimiter-end 1290 . 1291) (nil font-lock-face web-mode-block-delimiter-face 1290 . 1291) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1290 . 1291) (nil block-side t 1289 . 1290) (nil block-token delimiter-end 1289 . 1290) (nil font-lock-face web-mode-block-delimiter-face 1289 . 1290) (nil block-side t 1288 . 1289) (nil block-side t 1277 . 1288) (nil face web-mode-variable-name-face 1277 . 1288) (nil block-side t 1276 . 1277) (nil block-side t 1274 . 1276) (nil face web-mode-block-control-face 1274 . 1276) (nil block-side t 1273 . 1274) (nil block-side t 1272 . 1273) (nil block-token delimiter-beg 1272 . 1273) (nil font-lock-face web-mode-block-delimiter-face 1272 . 1273) (nil block-beg 0 1271 . 1272) (nil block-controls 0 1271 . 1272) (nil block-side t 1271 . 1272) (nil block-token delimiter-beg 1271 . 1272) (nil font-lock-face web-mode-block-delimiter-face 1271 . 1272) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1271 . 1272) (nil tag-name "a" 1270 . 1271) (nil tag-type start 1270 . 1271) (nil tag-end t 1270 . 1271) (nil font-lock-face web-mode-html-tag-bracket-face 1270 . 1271) (nil tag-attr t 1269 . 1270) (nil tag-attr-end 4 1269 . 1270) (nil tag-name "a" 1269 . 1270) (nil tag-type start 1269 . 1270) (nil font-lock-face web-mode-html-attr-value-face 1269 . 1270) (nil tag-attr t 1267 . 1269) (nil tag-name "a" 1267 . 1269) (nil tag-type start 1267 . 1269) (nil font-lock-face web-mode-html-attr-value-face 1267 . 1269) (nil tag-attr t 1266 . 1267) (nil tag-name "a" 1266 . 1267) (nil tag-type start 1266 . 1267) (nil font-lock-face web-mode-html-attr-equal-face 1266 . 1267) (nil tag-attr t 1263 . 1266) (nil tag-name "a" 1263 . 1266) (nil tag-type start 1263 . 1266) (nil font-lock-face web-mode-html-attr-name-face 1263 . 1266) (nil tag-attr-beg 0 1262 . 1263) (nil tag-attr t 1262 . 1263) (nil tag-name "a" 1262 . 1263) (nil tag-type start 1262 . 1263) (nil font-lock-face web-mode-html-attr-name-face 1262 . 1263) (nil tag-name "a" 1261 . 1262) (nil tag-type start 1261 . 1262) (nil tag-name "a" 1260 . 1261) (nil tag-type start 1260 . 1261) (nil font-lock-face web-mode-html-tag-face 1260 . 1261) (nil tag-name "a" 1259 . 1260) (nil tag-type start 1259 . 1260) (nil tag-beg 17 1259 . 1260) (nil font-lock-face web-mode-html-tag-bracket-face 1259 . 1260) (nil tag-name "span" 1234 . 1235) (nil tag-type start 1234 . 1235) (nil tag-end t 1234 . 1235) (nil font-lock-face web-mode-html-tag-bracket-face 1234 . 1235) (nil tag-attr t 1233 . 1234) (nil tag-attr-end 5 1233 . 1234) (nil tag-name "span" 1233 . 1234) (nil tag-type start 1233 . 1234) (nil font-lock-face web-mode-html-attr-value-face 1233 . 1234) (nil tag-attr t 1228 . 1233) (nil tag-name "span" 1228 . 1233) (nil tag-type start 1228 . 1233) (nil font-lock-face web-mode-html-attr-value-face 1228 . 1233) (nil tag-attr t 1227 . 1228) (nil tag-name "span" 1227 . 1228) (nil tag-type start 1227 . 1228) (nil font-lock-face web-mode-html-attr-equal-face 1227 . 1228) (nil tag-attr t 1223 . 1227) (nil tag-name "span" 1223 . 1227) (nil tag-type start 1223 . 1227) (nil font-lock-face web-mode-html-attr-name-face 1223 . 1227) (nil tag-attr-beg 0 1222 . 1223) (nil tag-attr t 1222 . 1223) (nil tag-name "span" 1222 . 1223) (nil tag-type start 1222 . 1223) (nil font-lock-face web-mode-html-attr-name-face 1222 . 1223) (nil tag-name "span" 1221 . 1222) (nil tag-type start 1221 . 1222) (nil tag-name "span" 1217 . 1221) (nil tag-type start 1217 . 1221) (nil font-lock-face web-mode-html-tag-face 1217 . 1221) (nil tag-name "span" 1216 . 1217) (nil tag-type start 1216 . 1217) (nil tag-beg 17 1216 . 1217) (nil font-lock-face web-mode-html-tag-bracket-face 1216 . 1217) (nil block-side t 1202 . 1203) (nil block-end t 1202 . 1203) (nil block-token delimiter-end 1202 . 1203) (nil font-lock-face web-mode-block-delimiter-face 1202 . 1203) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1202 . 1203) (nil block-side t 1201 . 1202) (nil block-token delimiter-end 1201 . 1202) (nil font-lock-face web-mode-block-delimiter-face 1201 . 1202) (nil block-side t 1200 . 1201) (nil block-side t 1195 . 1200) (nil face web-mode-block-control-face 1195 . 1200) (nil block-side t 1194 . 1195) (nil block-side t 1193 . 1194) (nil block-token delimiter-beg 1193 . 1194) (nil font-lock-face web-mode-block-delimiter-face 1193 . 1194) (nil block-beg 0 1192 . 1193) (nil block-controls 0 1192 . 1193) (nil block-side t 1192 . 1193) (nil block-token delimiter-beg 1192 . 1193) (nil font-lock-face web-mode-block-delimiter-face 1192 . 1193) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1192 . 1193) (nil tag-name "h2" 1178 . 1179) (nil tag-type end 1178 . 1179) (nil tag-end t 1178 . 1179) (nil font-lock-face web-mode-html-tag-bracket-face 1178 . 1179) (nil tag-name "h2" 1176 . 1178) (nil tag-type end 1176 . 1178) (nil font-lock-face web-mode-html-tag-face 1176 . 1178) (nil tag-name "h2" 1175 . 1176) (nil tag-type end 1175 . 1176) (nil font-lock-face web-mode-html-tag-bracket-face 1175 . 1176) (nil tag-name "h2" 1174 . 1175) (nil tag-type end 1174 . 1175) (nil tag-beg 20 1174 . 1175) (nil font-lock-face web-mode-html-tag-bracket-face 1174 . 1175) (nil block-side t 1173 . 1174) (nil block-end t 1173 . 1174) (nil block-token delimiter-end 1173 . 1174) (nil font-lock-face web-mode-block-delimiter-face 1173 . 1174) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1173 . 1174) (nil block-side t 1172 . 1173) (nil block-token delimiter-end 1172 . 1173) (nil font-lock-face web-mode-block-delimiter-face 1172 . 1173) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1172 . 1173) (nil block-side t 1171 . 1172) (nil block-side t 1163 . 1171) (nil face web-mode-variable-name-face 1163 . 1171) (nil block-side t 1162 . 1163) (nil block-side t 1158 . 1162) (nil face web-mode-variable-name-face 1158 . 1162) (nil block-side t 1157 . 1158) (nil block-side t 1156 . 1157) (nil block-token delimiter-beg 1156 . 1157) (nil font-lock-face web-mode-block-delimiter-face 1156 . 1157) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1156 . 1157) (nil block-beg 0 1155 . 1156) (nil block-controls 0 1155 . 1156) (nil block-side t 1155 . 1156) (nil block-token delimiter-beg 1155 . 1156) (nil font-lock-face web-mode-block-delimiter-face 1155 . 1156) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1155 . 1156) (nil tag-name "h2" 1154 . 1155) (nil tag-type start 1154 . 1155) (nil tag-end t 1154 . 1155) (nil font-lock-face web-mode-html-tag-bracket-face 1154 . 1155) (nil tag-attr t 1153 . 1154) (nil tag-attr-end 5 1153 . 1154) (nil tag-name "h2" 1153 . 1154) (nil tag-type start 1153 . 1154) (nil font-lock-face web-mode-html-attr-value-face 1153 . 1154) (nil tag-attr t 1142 . 1153) (nil tag-name "h2" 1142 . 1153) (nil tag-type start 1142 . 1153) (nil font-lock-face web-mode-html-attr-value-face 1142 . 1153) (nil tag-attr t 1141 . 1142) (nil tag-name "h2" 1141 . 1142) (nil tag-type start 1141 . 1142) (nil font-lock-face web-mode-html-attr-equal-face 1141 . 1142) (nil tag-attr t 1137 . 1141) (nil tag-name "h2" 1137 . 1141) (nil tag-type start 1137 . 1141) (nil font-lock-face web-mode-html-attr-name-face 1137 . 1141) (nil tag-attr-beg 0 1136 . 1137) (nil tag-attr t 1136 . 1137) (nil tag-name "h2" 1136 . 1137) (nil tag-type start 1136 . 1137) (nil font-lock-face web-mode-html-attr-name-face 1136 . 1137) (nil tag-name "h2" 1135 . 1136) (nil tag-type start 1135 . 1136) (nil tag-name "h2" 1133 . 1135) (nil tag-type start 1133 . 1135) (nil font-lock-face web-mode-html-tag-face 1133 . 1135) (nil tag-name "h2" 1132 . 1133) (nil tag-type start 1132 . 1133) (nil tag-beg 17 1132 . 1133) (nil font-lock-face web-mode-html-tag-bracket-face 1132 . 1133) (nil block-side t 1118 . 1119) (nil block-end t 1118 . 1119) (nil block-token delimiter-end 1118 . 1119) (nil font-lock-face web-mode-block-delimiter-face 1118 . 1119) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1118 . 1119) (nil block-side t 1117 . 1118) (nil block-token delimiter-end 1117 . 1118) (nil font-lock-face web-mode-block-delimiter-face 1117 . 1118) (nil block-side t 1116 . 1117) (nil block-side t 1103 . 1116) (nil face web-mode-variable-name-face 1103 . 1116) (nil block-side t 1102 . 1103) (nil block-side t 1100 . 1102) (nil face web-mode-block-control-face 1100 . 1102) (nil block-side t 1099 . 1100) (nil block-side t 1098 . 1099) (nil block-token delimiter-beg 1098 . 1099) (nil font-lock-face web-mode-block-delimiter-face 1098 . 1099) (nil block-beg 0 1097 . 1098) (nil block-controls 0 1097 . 1098) (nil block-side t 1097 . 1098) (nil block-token delimiter-beg 1097 . 1098) (nil font-lock-face web-mode-block-delimiter-face 1097 . 1098) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1097 . 1098) (nil tag-name "h1" 1083 . 1084) (nil tag-type end 1083 . 1084) (nil tag-end t 1083 . 1084) (nil font-lock-face web-mode-html-tag-bracket-face 1083 . 1084) (nil tag-name "h1" 1081 . 1083) (nil tag-type end 1081 . 1083) (nil font-lock-face web-mode-html-tag-face 1081 . 1083) (nil tag-name "h1" 1080 . 1081) (nil tag-type end 1080 . 1081) (nil font-lock-face web-mode-html-tag-bracket-face 1080 . 1081) (nil tag-name "h1" 1079 . 1080) (nil tag-type end 1079 . 1080) (nil tag-beg 20 1079 . 1080) (nil font-lock-face web-mode-html-tag-bracket-face 1079 . 1080) (nil block-side t 1078 . 1079) (nil block-end t 1078 . 1079) (nil block-token delimiter-end 1078 . 1079) (nil font-lock-face web-mode-block-delimiter-face 1078 . 1079) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1078 . 1079) (nil block-side t 1077 . 1078) (nil block-token delimiter-end 1077 . 1078) (nil font-lock-face web-mode-block-delimiter-face 1077 . 1078) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1077 . 1078) (nil block-side t 1076 . 1077) (nil block-side t 1071 . 1076) (nil face web-mode-variable-name-face 1071 . 1076) (nil block-side t 1070 . 1071) (nil block-side t 1066 . 1070) (nil face web-mode-variable-name-face 1066 . 1070) (nil block-side t 1065 . 1066) (nil block-side t 1064 . 1065) (nil block-token delimiter-beg 1064 . 1065) (nil font-lock-face web-mode-block-delimiter-face 1064 . 1065) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1064 . 1065) (nil block-beg 0 1063 . 1064) (nil block-controls 0 1063 . 1064) (nil block-side t 1063 . 1064) (nil block-token delimiter-beg 1063 . 1064) (nil font-lock-face web-mode-block-delimiter-face 1063 . 1064) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1063 . 1064) (nil tag-name "h1" 1062 . 1063) (nil tag-type start 1062 . 1063) (nil tag-end t 1062 . 1063) (nil font-lock-face web-mode-html-tag-bracket-face 1062 . 1063) (nil tag-name "h1" 1060 . 1062) (nil tag-type start 1060 . 1062) (nil font-lock-face web-mode-html-tag-face 1060 . 1062) (nil tag-name "h1" 1059 . 1060) (nil tag-type start 1059 . 1060) (nil tag-beg 16 1059 . 1060) (nil font-lock-face web-mode-html-tag-bracket-face 1059 . 1060) (1047 . 1496)) nil (25351 57686 991516 571000) 0 nil])
([nil nil (("    " . -1497) (1405 . 1465) (#("              " 0 14 (block-side t)) . 1405) ("    " . -1331) ("    " . -1229) ("    " . -1190) ("    " . -1170) ("  " . -1114) ("    " . -1081) ("            " . -1047) 1039) nil (25351 57686 991353 946000) 0 nil])
([nil nil ((1506 . 1514) ("        " . 1505) (undo-tree-id12 . -8) (1504 . 1514)) nil (25351 57686 991349 362000) 0 nil])
([nil nil ((1517 . 1518) (1514 . 1518)) nil (25351 57686 991345 982000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-type void tag-name "hr")) . -1517) (undo-tree-id11 . -1) 1518) nil (25351 57686 991343 106000) 0 nil])
([nil nil ((939 . 956) (#("            " 0 12 (font-lock-face web-mode-comment-face tag-type comment)) . 939) (848 . 915) (#("              " 0 14 (tag-type comment block-side t)) . 848) (757 . 774) (#("              " 0 14 (font-lock-face web-mode-comment-face tag-type comment)) . 757) (648 . 665) (#("              " 0 14 (font-lock-face web-mode-comment-face tag-type comment)) . 648) (602 . 619) (#("            " 0 12 (font-lock-face web-mode-comment-face tag-type comment)) . 602) (573 . 590) (#("            " 0 12 (font-lock-face web-mode-comment-face tag-type comment)) . 573) (508 . 525) (#("            " 0 12 (font-lock-face web-mode-comment-face tag-type comment)) . 508) (468 . 485) (#("            " 0 12 (font-lock-face web-mode-comment-face tag-type comment)) . 468) (437 . 883) (#("<h1>{{ page.title }}</h1>
            {% if page.subtitle %}
            <h2 class=\"subheading\">{{ page.subtitle }}</h2>
            {% endif %}
            <span class=\"meta\">Posted by
              <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
              on {{ page.date | date: '%B %d, %Y' }} &middot; {% include read_time.html
              content=page.content %}
            </span>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "h1") 1 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h1") 3 4 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h1") 4 5 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 5 6 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 6 7 (block-side t) 7 11 (face web-mode-variable-name-face block-side t) 11 12 (block-side t) 12 17 (face web-mode-variable-name-face block-side t) 17 18 (block-side t) 18 19 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 19 20 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 20 21 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h1") 21 22 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h1") 22 24 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h1") 24 25 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h1") 38 39 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 39 40 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 40 41 (block-side t) 41 43 (face web-mode-block-control-face block-side t) 43 44 (block-side t) 44 57 (face web-mode-variable-name-face block-side t) 57 58 (block-side t) 58 59 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 59 60 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 73 74 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "h2") 74 76 (font-lock-face web-mode-html-tag-face tag-type start tag-name "h2") 76 77 (tag-type start tag-name "h2") 77 78 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t tag-attr-beg 0) 78 82 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "h2" tag-attr t) 82 83 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "h2" tag-attr t) 83 94 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr t) 94 95 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "h2" tag-attr-end 5 tag-attr t) 95 96 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "h2") 96 97 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 97 98 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 98 99 (block-side t) 99 103 (face web-mode-variable-name-face block-side t) 103 104 (block-side t) 104 112 (face web-mode-variable-name-face block-side t) 112 113 (block-side t) 113 114 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 114 115 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 115 116 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "h2") 116 117 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "h2") 117 119 (font-lock-face web-mode-html-tag-face tag-type end tag-name "h2") 119 120 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "h2") 133 134 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 134 135 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 135 136 (block-side t) 136 141 (face web-mode-block-control-face block-side t) 141 142 (block-side t) 142 143 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 143 144 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 157 158 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 158 162 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 162 163 (tag-type start tag-name "span") 163 164 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 164 168 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 168 169 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 169 174 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 174 175 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 175 176 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 200 201 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "a") 201 202 (font-lock-face web-mode-html-tag-face tag-type start tag-name "a") 202 203 (tag-type start tag-name "a") 203 204 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t tag-attr-beg 0) 204 207 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "a" tag-attr t) 207 208 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "a" tag-attr t) 208 210 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr t) 210 211 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "a" tag-attr-end 4 tag-attr t) 211 212 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "a") 212 213 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 213 214 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 214 215 (block-side t) 215 217 (face web-mode-block-control-face block-side t) 217 218 (block-side t) 218 229 (face web-mode-variable-name-face block-side t) 229 230 (block-side t) 230 231 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 231 232 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 232 233 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 233 234 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 234 235 (block-side t) 235 239 (face web-mode-variable-name-face block-side t) 239 240 (block-side t) 240 246 (face web-mode-variable-name-face block-side t) 246 247 (block-side t) 247 248 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 248 249 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 249 250 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 250 251 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 251 252 (block-side t) 252 256 (face web-mode-block-control-face block-side t) 256 257 (block-side t) 257 258 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 258 259 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 259 260 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 260 261 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 261 262 (block-side t) 262 266 (face web-mode-variable-name-face block-side t) 266 267 (block-side t) 267 273 (face web-mode-variable-name-face block-side t) 273 274 (block-side t) 274 275 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 275 276 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 276 277 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 277 278 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 278 279 (block-side t) 279 284 (face web-mode-block-control-face block-side t) 284 285 (block-side t) 285 286 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 286 287 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 287 288 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "a") 288 289 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "a") 289 290 (font-lock-face web-mode-html-tag-face tag-type end tag-name "a") 290 291 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "a") 309 310 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 310 311 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 311 312 (block-side t) 312 316 (face web-mode-variable-name-face block-side t) 316 317 (block-side t) 317 321 (face web-mode-variable-name-face block-side t) 321 324 (block-side t) 324 328 (face web-mode-filter-face block-side t) 328 330 (block-side t) 330 332 (font-lock-face web-mode-block-string-face block-token string block-side t) 332 333 (font-lock-face web-mode-block-string-face block-token string block-side t) 333 335 (font-lock-face web-mode-block-string-face block-token string block-side t) 335 336 (font-lock-face web-mode-block-string-face block-token string block-side t) 336 339 (font-lock-face web-mode-block-string-face block-token string block-side t) 339 340 (font-lock-face web-mode-block-string-face block-token string block-side t) 340 341 (font-lock-face web-mode-block-string-face block-token string block-side t) 341 342 (block-side t) 342 343 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 343 344 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 345 353 (font-lock-face (web-mode-html-entity-face)) 354 355 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 355 356 (font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 356 357 (block-side t) 357 364 (face web-mode-block-control-face block-side t) 364 365 (block-side t) 365 379 (face web-mode-variable-name-face block-side t) 379 394 (block-side t) 394 401 (face web-mode-variable-name-face block-side t) 401 402 (block-side t) 402 414 (face web-mode-variable-name-face block-side t) 414 415 (block-side t) 415 416 (font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 416 417 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t) 430 431 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 431 432 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 432 436 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 436 437 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 437) (undo-tree-id0 . -26) (undo-tree-id1 . -437) (undo-tree-id2 . -60) (undo-tree-id3 . -144) (undo-tree-id4 . -60) (undo-tree-id5 . -25) (undo-tree-id6 . -437) (undo-tree-id7 . -60) (undo-tree-id8 . -437) (undo-tree-id9 . -437) (undo-tree-id10 . -437)) nil (25351 57686 991333 538000) 0 nil])
([nil nil ((#("{{ page.background | prepend: site.baseurl | replace: '//', '/' }}" 0 1 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-beg block-side t) 2 3 (tag-type start tag-name "header" tag-attr t block-side t) 3 7 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 7 8 (tag-type start tag-name "header" tag-attr t block-side t) 8 18 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 18 21 (tag-type start tag-name "header" tag-attr t block-side t) 21 28 (face web-mode-filter-face tag-type start tag-name "header" tag-attr t block-side t) 28 30 (tag-type start tag-name "header" tag-attr t block-side t) 30 34 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 34 35 (tag-type start tag-name "header" tag-attr t block-side t) 35 42 (face web-mode-variable-name-face tag-type start tag-name "header" tag-attr t block-side t) 42 45 (tag-type start tag-name "header" tag-attr t block-side t) 45 52 (face web-mode-filter-face tag-type start tag-name "header" tag-attr t block-side t) 52 54 (tag-type start tag-name "header" tag-attr t block-side t) 54 58 (font-lock-face web-mode-block-string-face tag-type start tag-name "header" tag-attr t block-token string block-side t) 58 60 (tag-type start tag-name "header" tag-attr t block-side t) 60 63 (font-lock-face web-mode-block-string-face tag-type start tag-name "header" tag-attr t block-token string block-side t) 63 64 (tag-type start tag-name "header" tag-attr t block-side t) 64 65 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-side t) 65 66 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "header" tag-attr t block-token delimiter-end block-end t block-side t)) . 127) (undo-tree-id13 . -66) (undo-tree-id14 . -66) (undo-tree-id15 . -66) (t 25351 57687 1975 303000)) nil (25351 57920 918929 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 152 . 153) (nil rear-nonsticky t 152 . 153) (nil block-side t 152 . 153) (nil block-end t 152 . 153) (nil block-token delimiter-end 152 . 153) (nil tag-attr t 152 . 153) (nil tag-name "header" 152 . 153) (nil tag-type start 152 . 153) (nil font-lock-face web-mode-block-delimiter-face 152 . 153) (nil block-side t 151 . 152) (nil block-token delimiter-end 151 . 152) (nil tag-attr t 151 . 152) (nil tag-name "header" 151 . 152) (nil tag-type start 151 . 152) (nil font-lock-face web-mode-block-delimiter-face 151 . 152) (nil block-side t 150 . 151) (nil tag-attr t 150 . 151) (nil tag-name "header" 150 . 151) (nil tag-type start 150 . 151) (nil block-side t 144 . 150) (nil tag-attr t 144 . 150) (nil tag-name "header" 144 . 150) (nil tag-type start 144 . 150) (nil face web-mode-filter-face 144 . 150) (nil block-side t 141 . 144) (nil tag-attr t 141 . 144) (nil tag-name "header" 141 . 144) (nil tag-type start 141 . 144) (nil block-side t 135 . 141) (nil tag-attr t 135 . 141) (nil tag-name "header" 135 . 141) (nil tag-type start 135 . 141) (nil face web-mode-variable-name-face 135 . 141) (nil block-side t 134 . 135) (nil tag-attr t 134 . 135) (nil tag-name "header" 134 . 135) (nil tag-type start 134 . 135) (nil block-side t 130 . 134) (nil tag-attr t 130 . 134) (nil tag-name "header" 130 . 134) (nil tag-type start 130 . 134) (nil face web-mode-variable-name-face 130 . 134) (nil block-side t 129 . 130) (nil tag-attr t 129 . 130) (nil tag-name "header" 129 . 130) (nil tag-type start 129 . 130) (nil block-side t 128 . 129) (nil block-token delimiter-beg 128 . 129) (nil tag-attr t 128 . 129) (nil tag-name "header" 128 . 129) (nil tag-type start 128 . 129) (nil font-lock-face web-mode-block-delimiter-face 128 . 129) (nil block-beg 0 127 . 128) (nil block-controls 0 127 . 128) (nil block-side t 127 . 128) (nil block-token delimiter-beg 127 . 128) (nil tag-attr t 127 . 128) (nil tag-name "header" 127 . 128) (nil tag-type start 127 . 128) (nil font-lock-face web-mode-block-delimiter-face 127 . 128) (127 . 153)) nil (25353 8068 38421 826000) 0 nil])
([nil nil ((#("  {% else %}
  <header class=\"masthead\">
    {% endif %}
    <div class=\"overlay\"></div>
    <div class=\"container\">
      <div class=\"row\">
        <div class=\"col-lg-8 col-md-10 mx-auto\">
          <div class=\"post-heading\">
            <!-- <h1>{{ page.title }}</h1>
                 {% if page.subtitle %}
                 <h2 class=\"subheading\">{{ page.subtitle }}</h2>
                 {% endif %}
                 <span class=\"meta\">Posted by
                 <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
                 on {{ page.date | date: '%B %d, %Y' }} &middot; {% include read_time.html
                                                                   content=page.content %}
                 </span> -->
          </div>
        </div>
      </div>
    </div>" 2 3 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 3 4 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 4 5 (block-side t) 5 9 (block-side t face web-mode-block-control-face) 9 10 (block-side t) 10 11 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (tag-name "header" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 22 (tag-name "header" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "header" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 38 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-attr-end 5 tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-name "header" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 45 46 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 46 47 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t) 48 53 (block-side t face web-mode-block-control-face) 53 54 (block-side t) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 61 62 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 62 65 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 65 66 (tag-name "div" tag-type start) 66 67 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 67 71 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 71 72 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 72 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 83 84 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 84 87 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 87 88 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 93 94 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 94 97 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 97 98 (tag-name "div" tag-type start) 98 99 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 99 103 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 103 104 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 104 114 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 114 115 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 115 116 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 123 124 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 124 127 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 127 128 (tag-name "div" tag-type start) 128 129 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 129 133 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 133 134 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 134 138 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 138 139 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 149 150 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 150 153 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 153 154 (tag-name "div" tag-type start) 154 155 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 155 159 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 159 160 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 160 187 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 187 188 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 188 189 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 200 201 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 201 204 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 204 205 (tag-name "div" tag-type start) 205 206 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 206 210 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 210 211 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 211 224 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 224 225 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 225 226 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 239 240 (tag-type comment tag-beg 0 font-lock-face web-mode-comment-face) 240 248 (tag-type comment font-lock-face web-mode-comment-face) 248 249 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 249 250 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 250 251 (block-side t tag-type comment) 251 255 (block-side t tag-type comment face web-mode-variable-name-face) 255 256 (block-side t tag-type comment) 256 261 (block-side t tag-type comment face web-mode-variable-name-face) 261 262 (block-side t tag-type comment) 262 263 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 263 264 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 264 287 (tag-type comment font-lock-face web-mode-comment-face) 287 288 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 288 289 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 289 290 (block-side t tag-type comment) 290 292 (block-side t tag-type comment face web-mode-block-control-face) 292 293 (block-side t tag-type comment) 293 306 (block-side t tag-type comment face web-mode-variable-name-face) 306 307 (block-side t tag-type comment) 307 308 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 308 309 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 309 350 (tag-type comment font-lock-face web-mode-comment-face) 350 351 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 351 352 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 352 353 (block-side t tag-type comment) 353 357 (block-side t tag-type comment face web-mode-variable-name-face) 357 358 (block-side t tag-type comment) 358 366 (block-side t tag-type comment face web-mode-variable-name-face) 366 367 (block-side t tag-type comment) 367 368 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 368 369 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 369 392 (tag-type comment font-lock-face web-mode-comment-face) 392 393 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 393 394 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 394 395 (block-side t tag-type comment) 395 400 (block-side t tag-type comment face web-mode-block-control-face) 400 401 (block-side t tag-type comment) 401 402 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 402 403 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 403 479 (tag-type comment font-lock-face web-mode-comment-face) 479 480 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 480 481 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 481 482 (block-side t tag-type comment) 482 484 (block-side t tag-type comment face web-mode-block-control-face) 484 485 (block-side t tag-type comment) 485 496 (block-side t tag-type comment face web-mode-variable-name-face) 496 497 (block-side t tag-type comment) 497 498 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 498 499 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 499 500 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 500 501 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 501 502 (block-side t tag-type comment) 502 506 (block-side t tag-type comment face web-mode-variable-name-face) 506 507 (block-side t tag-type comment) 507 513 (block-side t tag-type comment face web-mode-variable-name-face) 513 514 (block-side t tag-type comment) 514 515 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 515 516 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 516 517 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 517 518 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 518 519 (block-side t tag-type comment) 519 523 (block-side t tag-type comment face web-mode-block-control-face) 523 524 (block-side t tag-type comment) 524 525 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 525 526 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 526 527 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 527 528 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 528 529 (block-side t tag-type comment) 529 533 (block-side t tag-type comment face web-mode-variable-name-face) 533 534 (block-side t tag-type comment) 534 540 (block-side t tag-type comment face web-mode-variable-name-face) 540 541 (block-side t tag-type comment) 541 542 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 542 543 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 543 544 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 544 545 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 545 546 (block-side t tag-type comment) 546 551 (block-side t tag-type comment face web-mode-block-control-face) 551 552 (block-side t tag-type comment) 552 553 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 553 554 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 554 579 (tag-type comment font-lock-face web-mode-comment-face) 579 580 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 580 581 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 581 582 (block-side t tag-type comment) 582 586 (block-side t tag-type comment face web-mode-variable-name-face) 586 587 (block-side t tag-type comment) 587 591 (block-side t tag-type comment face web-mode-variable-name-face) 591 594 (block-side t tag-type comment) 594 598 (block-side t tag-type comment face web-mode-filter-face) 598 600 (block-side t tag-type comment) 600 602 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 602 603 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 603 605 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 605 606 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 606 609 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 609 610 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 610 611 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 611 612 (block-side t tag-type comment) 612 613 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 613 614 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 614 615 (tag-type comment font-lock-face web-mode-comment-face) 615 623 (tag-type comment font-lock-face (web-mode-comment-face web-mode-html-entity-face)) 623 624 (tag-type comment font-lock-face web-mode-comment-face) 624 625 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 625 626 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 626 627 (block-side t tag-type comment) 627 634 (block-side t tag-type comment face web-mode-block-control-face) 634 635 (block-side t tag-type comment) 635 649 (block-side t tag-type comment face web-mode-variable-name-face) 649 717 (block-side t tag-type comment) 717 724 (block-side t tag-type comment face web-mode-variable-name-face) 724 725 (block-side t tag-type comment) 725 737 (block-side t tag-type comment face web-mode-variable-name-face) 737 738 (block-side t tag-type comment) 738 739 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 739 740 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 740 768 (tag-type comment font-lock-face web-mode-comment-face) 768 769 (tag-type comment tag-end t font-lock-face web-mode-comment-face) 780 781 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 781 782 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 782 785 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 785 786 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 795 796 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 796 797 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 797 800 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 800 801 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 808 809 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 809 810 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 810 813 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 813 814 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 819 820 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 820 821 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 821 824 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 824 825 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 158) (undo-tree-id28 . -825) (undo-tree-id29 . -814) (undo-tree-id30 . -814) (undo-tree-id31 . -825) (undo-tree-id32 . -814) (undo-tree-id33 . -13) (undo-tree-id34 . -40) (undo-tree-id35 . -825) (undo-tree-id36 . -825)) nil (25353 8099 832352 40000) 0 nil] [nil nil ((#("  {% else %}
  <header class=\"masthead\">
    {% endif %}
    <div class=\"overlay\"></div>
    <div class=\"container\">
      <div class=\"row\">
        <div class=\"col-lg-8 col-md-10 mx-auto\">
          <div class=\"post-heading\">
            <!-- <h1>{{ page.title }}</h1>
                 {% if page.subtitle %}
                 <h2 class=\"subheading\">{{ page.subtitle }}</h2>
                 {% endif %}
                 <span class=\"meta\">Posted by
                 <a href=\"#\">{% if page.author %}{{ page.author }}{% else %}{{ site.author }}{% endif %}</a>
                 on {{ page.date | date: '%B %d, %Y' }} &middot; {% include read_time.html
                                                                   content=page.content %}
                 </span> -->
          </div>
        </div>
      </div>
    </div>" 2 3 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 3 4 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 4 5 (block-side t) 5 9 (block-side t face web-mode-block-control-face) 9 10 (block-side t) 10 11 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (tag-name "header" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 22 (tag-name "header" tag-type start font-lock-face web-mode-html-tag-face) 22 23 (tag-name "header" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 38 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-attr-end 5 tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-name "header" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 45 46 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 46 47 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t) 48 53 (block-side t face web-mode-block-control-face) 53 54 (block-side t) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 61 62 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 62 65 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 65 66 (tag-name "div" tag-type start) 66 67 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 67 71 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 71 72 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 72 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 82 83 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 83 84 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 84 87 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 87 88 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 93 94 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 94 97 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 97 98 (tag-name "div" tag-type start) 98 99 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 99 103 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 103 104 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 104 114 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 114 115 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 115 116 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 123 124 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 124 127 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 127 128 (tag-name "div" tag-type start) 128 129 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 129 133 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 133 134 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 134 138 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 138 139 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 149 150 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 150 153 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 153 154 (tag-name "div" tag-type start) 154 155 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 155 159 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 159 160 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 160 187 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 187 188 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 188 189 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 200 201 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 201 204 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 204 205 (tag-name "div" tag-type start) 205 206 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 206 210 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 210 211 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 211 224 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 224 225 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 225 226 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 239 240 (tag-type comment tag-beg 0 font-lock-face web-mode-comment-face) 240 248 (tag-type comment font-lock-face web-mode-comment-face) 248 249 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 249 250 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 250 251 (block-side t tag-type comment) 251 255 (block-side t tag-type comment face web-mode-variable-name-face) 255 256 (block-side t tag-type comment) 256 261 (block-side t tag-type comment face web-mode-variable-name-face) 261 262 (block-side t tag-type comment) 262 263 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 263 264 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 264 287 (tag-type comment font-lock-face web-mode-comment-face) 287 288 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 288 289 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 289 290 (block-side t tag-type comment) 290 292 (block-side t tag-type comment face web-mode-block-control-face) 292 293 (block-side t tag-type comment) 293 306 (block-side t tag-type comment face web-mode-variable-name-face) 306 307 (block-side t tag-type comment) 307 308 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 308 309 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 309 350 (tag-type comment font-lock-face web-mode-comment-face) 350 351 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 351 352 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 352 353 (block-side t tag-type comment) 353 357 (block-side t tag-type comment face web-mode-variable-name-face) 357 358 (block-side t tag-type comment) 358 366 (block-side t tag-type comment face web-mode-variable-name-face) 366 367 (block-side t tag-type comment) 367 368 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 368 369 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 369 392 (tag-type comment font-lock-face web-mode-comment-face) 392 393 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 393 394 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 394 395 (block-side t tag-type comment) 395 400 (block-side t tag-type comment face web-mode-block-control-face) 400 401 (block-side t tag-type comment) 401 402 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 402 403 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 403 479 (tag-type comment font-lock-face web-mode-comment-face) 479 480 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 480 481 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 481 482 (block-side t tag-type comment) 482 484 (block-side t tag-type comment face web-mode-block-control-face) 484 485 (block-side t tag-type comment) 485 496 (block-side t tag-type comment face web-mode-variable-name-face) 496 497 (block-side t tag-type comment) 497 498 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 498 499 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 499 500 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 500 501 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 501 502 (block-side t tag-type comment) 502 506 (block-side t tag-type comment face web-mode-variable-name-face) 506 507 (block-side t tag-type comment) 507 513 (block-side t tag-type comment face web-mode-variable-name-face) 513 514 (block-side t tag-type comment) 514 515 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 515 516 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 516 517 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 517 518 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 518 519 (block-side t tag-type comment) 519 523 (block-side t tag-type comment face web-mode-block-control-face) 523 524 (block-side t tag-type comment) 524 525 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 525 526 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 526 527 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 527 528 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 528 529 (block-side t tag-type comment) 529 533 (block-side t tag-type comment face web-mode-variable-name-face) 533 534 (block-side t tag-type comment) 534 540 (block-side t tag-type comment face web-mode-variable-name-face) 540 541 (block-side t tag-type comment) 541 542 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 542 543 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 543 544 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 544 545 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 545 546 (block-side t tag-type comment) 546 551 (block-side t tag-type comment face web-mode-block-control-face) 551 552 (block-side t tag-type comment) 552 553 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 553 554 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 554 579 (tag-type comment font-lock-face web-mode-comment-face) 579 580 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 580 581 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 581 582 (block-side t tag-type comment) 582 586 (block-side t tag-type comment face web-mode-variable-name-face) 586 587 (block-side t tag-type comment) 587 591 (block-side t tag-type comment face web-mode-variable-name-face) 591 594 (block-side t tag-type comment) 594 598 (block-side t tag-type comment face web-mode-filter-face) 598 600 (block-side t tag-type comment) 600 602 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 602 603 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 603 605 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 605 606 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 606 609 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 609 610 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 610 611 (block-side t block-token string tag-type comment font-lock-face web-mode-block-string-face) 611 612 (block-side t tag-type comment) 612 613 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 613 614 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 614 615 (tag-type comment font-lock-face web-mode-comment-face) 615 623 (tag-type comment font-lock-face (web-mode-comment-face web-mode-html-entity-face)) 623 624 (tag-type comment font-lock-face web-mode-comment-face) 624 625 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 625 626 (block-side t block-token delimiter-beg tag-type comment font-lock-face web-mode-block-delimiter-face) 626 627 (block-side t tag-type comment) 627 634 (block-side t tag-type comment face web-mode-block-control-face) 634 635 (block-side t tag-type comment) 635 649 (block-side t tag-type comment face web-mode-variable-name-face) 649 717 (block-side t tag-type comment) 717 724 (block-side t tag-type comment face web-mode-variable-name-face) 724 725 (block-side t tag-type comment) 725 737 (block-side t tag-type comment face web-mode-variable-name-face) 737 738 (block-side t tag-type comment) 738 739 (block-side t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face) 739 740 (block-side t block-end t block-token delimiter-end tag-type comment font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 740 768 (tag-type comment font-lock-face web-mode-comment-face) 768 769 (tag-type comment tag-end t font-lock-face web-mode-comment-face) 780 781 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 781 782 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 782 785 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 785 786 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 795 796 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 796 797 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 797 800 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 800 801 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 808 809 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 809 810 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 810 813 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 813 814 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 819 820 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 820 821 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 821 824 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 824 825 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 158) (undo-tree-id7 . -13) (undo-tree-id8 . -825) (undo-tree-id9 . -814) (undo-tree-id10 . -814) (undo-tree-id11 . -825) (undo-tree-id12 . -814) (undo-tree-id13 . -825) (t 25351 57920 924504 977000)) ((158 . 983)) (25353 8067 631850 113000) 0 nil])
([nil nil (("
" . -157) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 158) nil (25353 8099 832337 665000) 0 nil])
([nil nil (("
" . -157) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 158) ((157 . 158)) (25353 8067 158268 585000) 0 nil])
([nil nil (("  " . -158) 169) nil (25353 8099 832311 208000) 0 nil])
([nil nil (("  " . -158) 169) ((158 . 160)) (25353 8066 24422 626000) 0 nil])
([nil nil ((#("
{% if page.background %}" 1 2 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2 3 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 3 4 (block-side t) 4 6 (block-side t face web-mode-block-control-face) 6 7 (block-side t) 7 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t) 23 24 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 46) (undo-tree-id37 . -25) (undo-tree-id38 . -1) (undo-tree-id39 . -25) (undo-tree-id40 . -25) (undo-tree-id41 . -25) (undo-tree-id42 . -25) (undo-tree-id43 . -25) (t 25353 8099 839202 489000)) nil (25353 8103 90941 918000) 0 nil])
([nil nil ((#("
{% if page.background %}" 1 2 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2 3 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 3 4 (block-side t) 4 6 (block-side t face web-mode-block-control-face) 6 7 (block-side t) 7 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t) 23 24 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 46) (undo-tree-id14 . -25) (undo-tree-id15 . -1) (undo-tree-id16 . -25) (undo-tree-id17 . -25) (undo-tree-id18 . -25) (t 25353 8001 763130 539000)) ((46 . 71) (t 25353 8040 783136 158000)) (25353 8040 778531 3000) 0 nil])
([nil nil ((70 . 71) (t 25353 8103 95208 41000)) nil (25353 8163 511225 854000) 0 nil])
nil
([nil nil ((133 . 136)) nil (25353 8167 94102 103000) 0 nil] [nil nil ((nil rear-nonsticky nil 82 . 83) (nil tag-attr t 71 . 83) (nil tag-name "header" 71 . 83) (nil tag-type start 71 . 83) (nil font-lock-face web-mode-html-attr-value-face 71 . 83) (71 . 83)) ((#("home-heading" 0 11 (tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (rear-nonsticky nil tag-attr t tag-name "header" tag-type start font-lock-face web-mode-html-attr-value-face)) . 71) (nil tag-name "header" 82 . 83) (nil tag-name "header" 71 . 82) (nil rear-nonsticky t 82 . 83) (t 25353 8152 391314 598000)) (25353 8152 385846 141000) 0 nil])
([nil nil ((nil rear-nonsticky nil 324 . 325) (nil tag-name "div" 324 . 325) (nil tag-type end 324 . 325) (nil tag-end t 324 . 325) (nil font-lock-face web-mode-html-tag-bracket-face 324 . 325) (nil tag-name "div" 321 . 324) (nil tag-type end 321 . 324) (nil font-lock-face web-mode-html-tag-face 321 . 324) (nil tag-name "div" 320 . 321) (nil tag-type end 320 . 321) (nil font-lock-face web-mode-html-tag-bracket-face 320 . 321) (nil tag-name "div" 319 . 320) (nil tag-type end 319 . 320) (nil tag-beg 20 319 . 320) (nil font-lock-face web-mode-html-tag-bracket-face 319 . 320) (nil tag-name "div" 317 . 318) (nil tag-type end 317 . 318) (nil tag-end t 317 . 318) (nil font-lock-face web-mode-html-tag-bracket-face 317 . 318) (nil tag-name "div" 314 . 317) (nil tag-type end 314 . 317) (nil font-lock-face web-mode-html-tag-face 314 . 317) (nil tag-name "div" 313 . 314) (nil tag-type end 313 . 314) (nil font-lock-face web-mode-html-tag-bracket-face 313 . 314) (nil tag-name "div" 312 . 313) (nil tag-type end 312 . 313) (nil tag-beg 20 312 . 313) (nil font-lock-face web-mode-html-tag-bracket-face 312 . 313) (nil tag-name "div" 308 . 309) (nil tag-type end 308 . 309) (nil tag-end t 308 . 309) (nil font-lock-face web-mode-html-tag-bracket-face 308 . 309) (nil tag-name "div" 305 . 308) (nil tag-type end 305 . 308) (nil font-lock-face web-mode-html-tag-face 305 . 308) (nil tag-name "div" 304 . 305) (nil tag-type end 304 . 305) (nil font-lock-face web-mode-html-tag-bracket-face 304 . 305) (nil tag-name "div" 303 . 304) (nil tag-type end 303 . 304) (nil tag-beg 20 303 . 304) (nil font-lock-face web-mode-html-tag-bracket-face 303 . 304) (nil tag-name "div" 297 . 298) (nil tag-type end 297 . 298) (nil tag-end t 297 . 298) (nil font-lock-face web-mode-html-tag-bracket-face 297 . 298) (nil tag-name "div" 294 . 297) (nil tag-type end 294 . 297) (nil font-lock-face web-mode-html-tag-face 294 . 297) (nil tag-name "div" 293 . 294) (nil tag-type end 293 . 294) (nil font-lock-face web-mode-html-tag-bracket-face 293 . 294) (nil tag-name "div" 292 . 293) (nil tag-type end 292 . 293) (nil tag-beg 20 292 . 293) (nil font-lock-face web-mode-html-tag-bracket-face 292 . 293) (nil tag-name "div" 284 . 285) (nil tag-type start 284 . 285) (nil tag-end t 284 . 285) (nil font-lock-face web-mode-html-tag-bracket-face 284 . 285) (nil tag-attr t 283 . 284) (nil tag-attr-end 5 283 . 284) (nil tag-name "div" 283 . 284) (nil tag-type start 283 . 284) (nil font-lock-face web-mode-html-attr-value-face 283 . 284) (nil tag-attr t 270 . 283) (nil tag-name "div" 270 . 283) (nil tag-type start 270 . 283) (nil font-lock-face web-mode-html-attr-value-face 270 . 283) (nil tag-attr t 269 . 270) (nil tag-name "div" 269 . 270) (nil tag-type start 269 . 270) (nil font-lock-face web-mode-html-attr-equal-face 269 . 270) (nil tag-attr t 265 . 269) (nil tag-name "div" 265 . 269) (nil tag-type start 265 . 269) (nil font-lock-face web-mode-html-attr-name-face 265 . 269) (nil tag-attr-beg 0 264 . 265) (nil tag-attr t 264 . 265) (nil tag-name "div" 264 . 265) (nil tag-type start 264 . 265) (nil font-lock-face web-mode-html-attr-name-face 264 . 265) (nil tag-name "div" 263 . 264) (nil tag-type start 263 . 264) (nil tag-name "div" 260 . 263) (nil tag-type start 260 . 263) (nil font-lock-face web-mode-html-tag-face 260 . 263) (nil tag-name "div" 259 . 260) (nil tag-type start 259 . 260) (nil tag-beg 17 259 . 260) (nil font-lock-face web-mode-html-tag-bracket-face 259 . 260) (nil tag-name "div" 251 . 252) (nil tag-type start 251 . 252) (nil tag-end t 251 . 252) (nil font-lock-face web-mode-html-tag-bracket-face 251 . 252) (nil tag-attr t 250 . 251) (nil tag-attr-end 5 250 . 251) (nil tag-name "div" 250 . 251) (nil tag-type start 250 . 251) (nil font-lock-face web-mode-html-attr-value-face 250 . 251) (nil tag-attr t 223 . 250) (nil tag-name "div" 223 . 250) (nil tag-type start 223 . 250) (nil font-lock-face web-mode-html-attr-value-face 223 . 250) (nil tag-attr t 222 . 223) (nil tag-name "div" 222 . 223) (nil tag-type start 222 . 223) (nil font-lock-face web-mode-html-attr-equal-face 222 . 223) (nil tag-attr t 218 . 222) (nil tag-name "div" 218 . 222) (nil tag-type start 218 . 222) (nil font-lock-face web-mode-html-attr-name-face 218 . 222) (nil tag-attr-beg 0 217 . 218) (nil tag-attr t 217 . 218) (nil tag-name "div" 217 . 218) (nil tag-type start 217 . 218) (nil font-lock-face web-mode-html-attr-name-face 217 . 218) (nil tag-name "div" 216 . 217) (nil tag-type start 216 . 217) (nil tag-name "div" 213 . 216) (nil tag-type start 213 . 216) (nil font-lock-face web-mode-html-tag-face 213 . 216) (nil tag-name "div" 212 . 213) (nil tag-type start 212 . 213) (nil tag-beg 17 212 . 213) (nil font-lock-face web-mode-html-tag-bracket-face 212 . 213) (nil tag-name "div" 206 . 207) (nil tag-type start 206 . 207) (nil tag-end t 206 . 207) (nil font-lock-face web-mode-html-tag-bracket-face 206 . 207) (nil tag-attr t 205 . 206) (nil tag-attr-end 5 205 . 206) (nil tag-name "div" 205 . 206) (nil tag-type start 205 . 206) (nil font-lock-face web-mode-html-attr-value-face 205 . 206) (nil tag-attr t 201 . 205) (nil tag-name "div" 201 . 205) (nil tag-type start 201 . 205) (nil font-lock-face web-mode-html-attr-value-face 201 . 205) (nil tag-attr t 200 . 201) (nil tag-name "div" 200 . 201) (nil tag-type start 200 . 201) (nil font-lock-face web-mode-html-attr-equal-face 200 . 201) (nil tag-attr t 196 . 200) (nil tag-name "div" 196 . 200) (nil tag-type start 196 . 200) (nil font-lock-face web-mode-html-attr-name-face 196 . 200) (nil tag-attr-beg 0 195 . 196) (nil tag-attr t 195 . 196) (nil tag-name "div" 195 . 196) (nil tag-type start 195 . 196) (nil font-lock-face web-mode-html-attr-name-face 195 . 196) (nil tag-name "div" 194 . 195) (nil tag-type start 194 . 195) (nil tag-name "div" 191 . 194) (nil tag-type start 191 . 194) (nil font-lock-face web-mode-html-tag-face 191 . 194) (nil tag-name "div" 190 . 191) (nil tag-type start 190 . 191) (nil tag-beg 17 190 . 191) (nil font-lock-face web-mode-html-tag-bracket-face 190 . 191) (nil tag-name "div" 186 . 187) (nil tag-type start 186 . 187) (nil tag-end t 186 . 187) (nil font-lock-face web-mode-html-tag-bracket-face 186 . 187) (nil tag-attr t 185 . 186) (nil tag-attr-end 5 185 . 186) (nil tag-name "div" 185 . 186) (nil tag-type start 185 . 186) (nil font-lock-face web-mode-html-attr-value-face 185 . 186) (nil tag-attr t 175 . 185) (nil tag-name "div" 175 . 185) (nil tag-type start 175 . 185) (nil font-lock-face web-mode-html-attr-value-face 175 . 185) (nil tag-attr t 174 . 175) (nil tag-name "div" 174 . 175) (nil tag-type start 174 . 175) (nil font-lock-face web-mode-html-attr-equal-face 174 . 175) (nil tag-attr t 170 . 174) (nil tag-name "div" 170 . 174) (nil tag-type start 170 . 174) (nil font-lock-face web-mode-html-attr-name-face 170 . 174) (nil tag-attr-beg 0 169 . 170) (nil tag-attr t 169 . 170) (nil tag-name "div" 169 . 170) (nil tag-type start 169 . 170) (nil font-lock-face web-mode-html-attr-name-face 169 . 170) (nil tag-name "div" 168 . 169) (nil tag-type start 168 . 169) (nil tag-name "div" 165 . 168) (nil tag-type start 165 . 168) (nil font-lock-face web-mode-html-tag-face 165 . 168) (nil tag-name "div" 164 . 165) (nil tag-type start 164 . 165) (nil tag-beg 17 164 . 165) (nil font-lock-face web-mode-html-tag-bracket-face 164 . 165) (nil tag-name "div" 162 . 163) (nil tag-type end 162 . 163) (nil tag-end t 162 . 163) (nil font-lock-face web-mode-html-tag-bracket-face 162 . 163) (nil tag-name "div" 159 . 162) (nil tag-type end 159 . 162) (nil font-lock-face web-mode-html-tag-face 159 . 162) (nil tag-name "div" 158 . 159) (nil tag-type end 158 . 159) (nil font-lock-face web-mode-html-tag-bracket-face 158 . 159) (nil tag-name "div" 157 . 158) (nil tag-type end 157 . 158) (nil tag-beg 20 157 . 158) (nil font-lock-face web-mode-html-tag-bracket-face 157 . 158) (nil tag-name "div" 156 . 157) (nil tag-type start 156 . 157) (nil tag-end t 156 . 157) (nil font-lock-face web-mode-html-tag-bracket-face 156 . 157) (nil tag-attr t 155 . 156) (nil tag-attr-end 5 155 . 156) (nil tag-name "div" 155 . 156) (nil tag-type start 155 . 156) (nil font-lock-face web-mode-html-attr-value-face 155 . 156) (nil tag-attr t 147 . 155) (nil tag-name "div" 147 . 155) (nil tag-type start 147 . 155) (nil font-lock-face web-mode-html-attr-value-face 147 . 155) (nil tag-attr t 146 . 147) (nil tag-name "div" 146 . 147) (nil tag-type start 146 . 147) (nil font-lock-face web-mode-html-attr-equal-face 146 . 147) (nil tag-attr t 142 . 146) (nil tag-name "div" 142 . 146) (nil tag-type start 142 . 146) (nil font-lock-face web-mode-html-attr-name-face 142 . 146) (nil tag-attr-beg 0 141 . 142) (nil tag-attr t 141 . 142) (nil tag-name "div" 141 . 142) (nil tag-type start 141 . 142) (nil font-lock-face web-mode-html-attr-name-face 141 . 142) (nil tag-name "div" 140 . 141) (nil tag-type start 140 . 141) (nil tag-name "div" 137 . 140) (nil tag-type start 137 . 140) (nil font-lock-face web-mode-html-tag-face 137 . 140) (nil tag-name "div" 136 . 137) (nil tag-type start 136 . 137) (nil tag-beg 17 136 . 137) (nil font-lock-face web-mode-html-tag-bracket-face 136 . 137) (136 . 325)) nil (25353 8167 94079 672000) 0 nil])
nil
([nil nil ((#("    </div>
  </div>" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 299) (undo-tree-id53 . -19) (undo-tree-id54 . -11) (undo-tree-id55 . -19) (t 25353 8167 103354 227000)) nil (25353 8182 612285 822000) 0 nil])
([nil nil ((#("

</div>" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 298) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -8)) nil (25353 8182 612279 572000) 0 nil])
([nil nil ((#("
  <div class=\"overlay\"></div>
<div class=\"container\">
  <div class=\"row\">
    <div class=\"col-lg-8 col-md-10 mx-auto\">" 3 4 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 9 13 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 24 25 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 25 26 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 26 29 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 29 30 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 32 35 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 35 36 (tag-name "div" tag-type start) 36 37 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 37 41 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 41 42 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 42 52 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 57 58 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 58 61 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 61 62 (tag-name "div" tag-type start) 62 63 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 63 67 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 67 68 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 68 72 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 79 80 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 80 83 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 83 84 (tag-name "div" tag-type start) 84 85 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 85 89 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 89 90 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 90 117 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 117 118 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 118 119 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 133) (undo-tree-id44 . -119) (undo-tree-id45 . -1) (undo-tree-id46 . -3) (undo-tree-id47 . -119)) nil (25353 8182 612268 432000) 0 nil])
([nil nil (("    " . -136) 166 (t 25353 8182 619399 722000)) nil (25353 8216 259938 762000) 0 nil])
([nil nil (("    " . -165) 175) nil (25353 8216 259930 36000) 0 nil])
([nil nil ((#("home-heading" 0 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 148) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (t 25353 8216 267510 904000)) nil (25353 8409 478869 109000) 0 nil])
([nil current ((nil rear-nonsticky nil 162 . 163) (nil fontified t 162 . 163) (nil tag-attr t 162 . 163) (nil tag-name "div" 162 . 163) (nil tag-type start 162 . 163) (nil font-lock-face web-mode-html-attr-value-face 162 . 163) (nil fontified t 148 . 162) (nil tag-attr t 148 . 162) (nil tag-name "div" 148 . 162) (nil tag-type start 148 . 162) (nil font-lock-face web-mode-html-attr-value-face 148 . 162) (148 . 163)) nil (25353 8409 478851 292000) 0 nil])
nil
