(undo-tree-save-format-version . 1)
"4c2c0c289be227f56f582538e0b60ec6ecc01034"
[nil nil nil nil (25563 48616 333134 709000) 0 nil]
([nil nil ((1059 . 1064) (t 25559 46882 257092 579000)) nil (25563 48616 333132 347000) 0 nil])
([nil nil ((1064 . 1071)) nil (25563 48616 333130 890000) 0 nil])
([nil nil ((1080 . 1082) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -1080) (1079 . 1081) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1079) (1078 . 1079) (1077 . 1079) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -1077) (1071 . 1078)) nil (25563 48616 333128 836000) 0 nil])
([nil nil ((1083 . 1087) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 1082) (undo-tree-id0 . -4) (undo-tree-id1 . 6) (1086 . 1088) (1081 . 1087)) nil (25563 48616 333124 954000) 0 nil])
([nil nil ((1088 . 1089)) nil (25563 48616 333105 398000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1120 . 1121) (nil part-side javascript 1120 . 1121) (nil part-token string 1120 . 1121) (nil syntax-table (15) 1120 . 1121) (nil font-lock-face web-mode-javascript-string-face 1120 . 1121) (nil part-side javascript 1114 . 1120) (nil part-token string 1114 . 1120) (nil font-lock-face web-mode-javascript-string-face 1114 . 1120) (nil part-side javascript 1113 . 1114) (nil part-token string 1113 . 1114) (nil syntax-table (15) 1113 . 1114) (nil font-lock-face web-mode-javascript-string-face 1113 . 1114) (nil part-side javascript 1078 . 1113) (1078 . 1121)) nil (25563 48616 333103 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1141 . 1142) (nil part-side javascript 1137 . 1142) (nil face web-mode-constant-face 1137 . 1142) (nil part-side javascript 1121 . 1137) (1121 . 1142)) nil (25563 48616 334422 5000) 0 nil])
([nil nil ((#("    addSortToList(replacecurrentfilter, filtertype = 'simple', wrap_simple = false) {

    }," 0 4 (part-side javascript) 4 17 (face web-mode-function-name-face part-side javascript) 17 18 (face (rainbow-delimiters-depth-3-face) part-side javascript) 18 53 (part-side javascript) 53 54 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 54 60 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 60 61 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t) 61 77 (part-side javascript) 77 81 (face web-mode-constant-face part-side javascript) 81 82 (face web-mode-constant-face part-side javascript rear-nonsticky t) 82 83 (face (rainbow-delimiters-depth-3-face) part-side javascript) 83 84 (part-side javascript) 84 85 (face (rainbow-delimiters-depth-3-face) part-side javascript) 85 86 (part-side javascript) 86 91 (part-side javascript) 91 92 (face (rainbow-delimiters-depth-3-face) part-side javascript) 92 93 (part-side javascript)) . 1060) (undo-tree-id30 . -93) (undo-tree-id31 . -86) (undo-tree-id32 . -18) (undo-tree-id33 . -18) (undo-tree-id34 . -61) (undo-tree-id35 . -82) (undo-tree-id36 . -93)) nil (25563 48820 398666 814000) 0 nil] [nil nil ((nil rear-nonsticky nil 1159 . 1160) (nil part-side javascript 1156 . 1160) (nil face web-mode-constant-face 1156 . 1160) (nil part-side javascript 1142 . 1156) (1142 . 1160)) ((#(" opt_cursor = null" 0 14 (part-side javascript) 14 17 (face web-mode-constant-face part-side javascript) 17 18 (face web-mode-constant-face part-side javascript rear-nonsticky nil)) . 1142) (undo-tree-id2 . -18) (nil rear-nonsticky t 1159 . 1160)) (25563 48616 333089 448000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -1059) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 1060) nil (25563 48820 398657 186000) 0 nil])
nil
([nil nil ((2055 . 2062)) nil (25563 48820 398594 618000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2087 . 2088) (nil part-side javascript 2068 . 2088) (nil part-side javascript 2062 . 2068) (nil face web-mode-keyword-face 2062 . 2068) (2062 . 2088)) nil (25563 48820 398592 445000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript rear-nonsticky t)) . -2087) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 2088) nil (25563 48820 398585 827000) 0 nil])
([nil nil ((2087 . 2094) (t 25563 48820 402633 785000)) nil (25563 63200 909057 989000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2119 . 2120) (nil part-side javascript 2100 . 2120) (nil part-side javascript 2094 . 2100) (nil face web-mode-keyword-face 2094 . 2100) (2094 . 2120)) nil (25563 63200 909056 108000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2115) (undo-tree-id52 . -1) (#("y" 0 1 (part-side javascript)) . -2116) (undo-tree-id53 . -1) (#("p" 0 1 (part-side javascript)) . -2117) (undo-tree-id54 . -1) (#("e" 0 1 (part-side javascript)) . -2118) (undo-tree-id55 . -1) (#("s" 0 1 (part-side javascript rear-nonsticky t)) . -2119) (undo-tree-id56 . -1) 2120) nil (25563 63200 909053 40000) 0 nil])
([nil nil ((2115 . 2119)) nil (25563 63200 909045 806000) 0 nil])
([nil nil ((2119 . 2126)) nil (25563 63200 909044 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2151 . 2152) (nil part-side javascript 2132 . 2152) (nil part-side javascript 2126 . 2132) (nil face web-mode-keyword-face 2126 . 2132) (2126 . 2152)) nil (25563 63200 909043 676000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2147) (undo-tree-id47 . -1) (#("y" 0 1 (part-side javascript)) . -2148) (undo-tree-id48 . -1) (#("p" 0 1 (part-side javascript)) . -2149) (undo-tree-id49 . -1) (#("e" 0 1 (part-side javascript)) . -2150) (undo-tree-id50 . -1) (#("s" 0 1 (part-side javascript rear-nonsticky t)) . -2151) (undo-tree-id51 . -1) 2152) nil (25563 63200 909040 812000) 0 nil])
([nil nil ((2147 . 2152)) nil (25563 63200 909033 491000) 0 nil])
([nil nil ((2152 . 2159)) nil (25563 63200 909032 445000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2184 . 2185) (nil part-side javascript 2165 . 2185) (nil part-side javascript 2159 . 2165) (nil face web-mode-keyword-face 2159 . 2165) (2159 . 2185)) nil (25563 63200 909031 159000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2180) (undo-tree-id42 . -1) (#("y" 0 1 (part-side javascript)) . -2181) (undo-tree-id43 . -1) (#("p" 0 1 (part-side javascript)) . -2182) (undo-tree-id44 . -1) (#("e" 0 1 (part-side javascript)) . -2183) (undo-tree-id45 . -1) (#("s" 0 1 (part-side javascript rear-nonsticky t)) . -2184) (undo-tree-id46 . -1) 2185) nil (25563 63200 909028 237000) 0 nil])
([nil nil ((2180 . 2184)) nil (25563 63200 909020 108000) 0 nil])
([nil nil ((2184 . 2191)) nil (25563 63200 909018 959000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2216 . 2217) (nil part-side javascript 2197 . 2217) (nil part-side javascript 2191 . 2197) (nil face web-mode-keyword-face 2191 . 2197) (2191 . 2217)) nil (25563 63200 909017 503000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2212) (undo-tree-id37 . -1) (#("y" 0 1 (part-side javascript)) . -2213) (undo-tree-id38 . -1) (#("p" 0 1 (part-side javascript)) . -2214) (undo-tree-id39 . -1) (#("e" 0 1 (part-side javascript)) . -2215) (undo-tree-id40 . -1) (#("s" 0 1 (part-side javascript rear-nonsticky t)) . -2216) (undo-tree-id41 . -1) 2217) nil (25563 63204 80214 685000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2214 . 2215) (nil fontified t 2212 . 2215) (nil part-side javascript 2212 . 2215) (2212 . 2215)) nil (25563 63248 358052 596000) 0 nil] [nil nil ((nil rear-nonsticky nil 2237 . 2238) (nil part-side javascript 2218 . 2238) (nil part-side javascript 2212 . 2218) (2212 . 2238)) ((#("delete currentfilter.types" 0 25 (part-side javascript) 25 26 (part-side javascript rear-nonsticky nil)) . 2212) (undo-tree-id57 . -26) (nil rear-nonsticky t 2237 . 2238)) (25563 63204 74075 399000) 0 nil] [nil nil ((2212 . 2215)) ((#("asc" 0 3 (part-side javascript)) . 2212)) (25563 63200 908990 884000) 0 nil])
([nil nil ((1536 . 1542) (#("      " 0 6 (part-side javascript)) . 1535) (undo-tree-id3 . -6) (1535 . 1542) (#("      " 0 6 (part-side javascript)) . 1534) (undo-tree-id4 . -6) (1534 . 1541) (1530 . 1531) (1532 . 1533) (t 25568 48397 261651 666000)) nil (25568 55698 176530 885000) 0 nil])
nil
nil
([nil nil ((1536 . 1542) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 1535) (1535 . 1541) (1535 . 1536)) nil (25568 55698 176525 676000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 1555) (1554 . 1555) (1553 . 1555) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1553) (1542 . 1554)) nil (25568 55698 176523 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1576 . 1577) (nil part-side javascript 1558 . 1577) (nil part-side javascript 1554 . 1558) (nil face web-mode-constant-face 1554 . 1558) (1554 . 1577)) nil (25568 55698 176521 235000) 0 nil])
([nil nil ((1578 . 1585)) nil (25568 55698 176519 533000) 0 nil])
([nil nil ((1585 . 1592)) nil (25568 55698 176518 525000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -1590) (undo-tree-id1 . -1) (#("l" 0 1 (part-side javascript)) . -1591) (undo-tree-id2 . -1) 1592) nil (25568 55698 176517 103000) 0 nil])
([nil nil ((1590 . 1594)) nil (25568 55698 176513 144000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -1593) (undo-tree-id0 . -1) 1594) nil (25568 55698 176511 906000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 1598) (1597 . 1598) (1596 . 1598) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1596) (1593 . 1597)) nil (25568 55698 176492 561000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1608 . 1609) (nil part-side javascript 1601 . 1609) (nil part-side javascript 1597 . 1601) (nil face web-mode-constant-face 1597 . 1601) (1597 . 1609)) nil (25568 55698 176490 646000) 0 nil])
([nil nil ((1610 . 1617)) nil (25568 55698 176488 771000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 1630) (1629 . 1630) (1628 . 1630) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -1628) (1617 . 1629)) nil (25568 55698 176487 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1640 . 1641) (nil rear-nonsticky t 1640 . 1641) (nil part-side javascript 1640 . 1641) (nil part-side javascript 1633 . 1640) (nil part-side javascript 1629 . 1633) (nil face web-mode-constant-face 1629 . 1633) (1629 . 1641)) nil (25568 55698 176485 217000) 0 nil])
([nil nil ((1641 . 1643) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -1641) (1641 . 1642)) nil (25568 55698 176482 783000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1664 . 1665) (nil rear-nonsticky t 1664 . 1665) (nil part-side javascript 1664 . 1665) (nil part-side javascript 1646 . 1664) (nil part-side javascript 1642 . 1646) (nil face web-mode-constant-face 1642 . 1646) (1642 . 1665)) nil (25568 55698 176480 365000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . -1668) 1667) nil (25568 55698 176471 967000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1535) (undo-tree-id5 . -1) (t 25570 3154 946941 101000)) nil (25570 4338 164205 678000) 0 nil])
([nil nil ((3633 . 3644)) nil (25570 4338 164202 53000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3657 . 3658) (nil part-side javascript 3644 . 3658) (3644 . 3658)) nil (25570 4338 164200 413000) 0 nil])
([nil nil ((3658 . 3668)) nil (25570 4338 164198 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3680 . 3681) (nil part-side javascript 3668 . 3681) (3668 . 3681)) nil (25570 4338 164196 700000) 0 nil])
([nil nil ((1668 . 1674) (#("      " 0 6 (part-side javascript)) . 1667) (undo-tree-id4 . -6) (1666 . 1674)) nil (25570 4338 164194 149000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1687) (1686 . 1687) (1685 . 1687) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1685) (1674 . 1686)) nil (25570 4338 164189 716000) 0 nil])
([nil nil ((1686 . 1699)) nil (25570 4338 164186 942000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1698) (undo-tree-id3 . -1) 1699) nil (25570 4338 164184 983000) 0 nil])
([nil nil ((1699 . 1706)) nil (25570 4338 164181 186000) 0 nil])
([nil nil ((1706 . 1716)) nil (25570 4338 164179 399000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1719) (1718 . 1719) (1717 . 1719) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1717) (1716 . 1718)) nil (25570 4338 164177 410000) 0 nil])
([nil nil ((1718 . 1733)) nil (25570 4338 164174 111000) 0 nil])
([nil nil ((1723 . 1739) (#("currentsub" 0 10 (part-side javascript)) . -1723) (undo-tree-id0 . -4) (undo-tree-id1 . -10) (undo-tree-id2 . -10) 1733) nil (25570 4338 164171 363000) 0 nil])
([nil nil ((1541 . 1544)) nil (25570 4338 164147 307000) 0 nil])
([nil nil ((1587 . 1589)) nil (25570 4338 164146 220000) 0 nil])
([nil nil ((1589 . 1590)) nil (25570 4338 164144 477000) 0 nil])
([nil nil ((1622 . 1625)) nil (25570 4338 164137 749000) 0 nil])
([nil nil ((3693 . 3701) (t 25570 4338 175174 483000)) nil (25570 4496 335185 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3713 . 3714) (nil rear-nonsticky t 3713 . 3714) (nil part-side javascript 3713 . 3714) (nil part-side javascript 3701 . 3713) (3701 . 3714)) nil (25570 4496 335183 541000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3738 . 3739) (nil rear-nonsticky t 3738 . 3739) (nil part-side javascript 3738 . 3739) (nil part-side javascript 3726 . 3738) (nil part-side javascript 3724 . 3726) (nil part-side javascript 3718 . 3724) (nil face web-mode-variable-name-face 3718 . 3724) (3718 . 3739)) nil (25570 4496 335180 973000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3630 . 3631) (nil rear-nonsticky t 3630 . 3631) (nil part-side javascript 3630 . 3631) (nil part-side javascript 3618 . 3630) (nil part-side javascript 3616 . 3618) (nil part-side javascript 3610 . 3616) (nil face web-mode-variable-name-face 3610 . 3616) (3610 . 3631)) nil (25570 4496 335178 178000) 0 nil])
([nil nil ((3563 . 3574)) nil (25570 4496 335175 650000) 0 nil])
([nil nil ((3582 . 3584) (3581 . 3583) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -3581) (3574 . 3582)) nil (25570 4496 335173 868000) 0 nil])
([nil nil ((3583 . 3589)) nil (25570 4496 335171 967000) 0 nil])
([nil nil ((3591 . 3594)) nil (25570 4496 335170 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3606 . 3607) (nil rear-nonsticky t 3606 . 3607) (nil part-side javascript 3606 . 3607) (nil part-side javascript 3594 . 3606) (3594 . 3607)) nil (25570 4496 335163 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3945 . 3946) (nil rear-nonsticky t 3945 . 3946) (nil part-side javascript 3945 . 3946) (nil part-side javascript 3933 . 3945) (nil part-side javascript 3931 . 3933) (nil part-side javascript 3925 . 3931) (nil face web-mode-variable-name-face 3925 . 3931) (3925 . 3946) (t 25570 4496 338831 474000)) nil (25570 4513 672505 682000) 0 nil])
([nil nil ((2616 . 2623) (t 25570 4513 678791 414000)) nil (25570 4787 136041 516000) 0 nil])
([nil nil ((2623 . 2629)) nil (25570 4787 136040 367000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2626) (undo-tree-id16 . -1) (#("e" 0 1 (part-side javascript)) . -2627) (undo-tree-id17 . -1) (#(" " 0 1 (part-side javascript)) . -2628) (undo-tree-id18 . -1) 2629) nil (25570 4787 136038 910000) 0 nil])
([nil nil ((2626 . 2647)) nil (25570 4787 136034 564000) 0 nil])
([nil nil ((2647 . 2650)) nil (25570 4787 136033 678000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2649) (undo-tree-id15 . -1) 2650) nil (25570 4787 136032 651000) 0 nil])
([nil nil ((3958 . 3970)) nil (25570 4787 136030 684000) 0 nil])
([nil nil ((#("T" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3965) (undo-tree-id10 . -1) (#("r" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3966) (undo-tree-id11 . -1) (#("u" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3967) (undo-tree-id12 . -1) (#("e" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3968) (undo-tree-id13 . -1) (#(" " 0 1 (part-side javascript)) . -3969) (undo-tree-id14 . -1) 3970) nil (25570 4787 136028 822000) 0 nil])
([nil nil ((3965 . 3968)) nil (25570 4787 136021 835000) 0 nil])
([nil nil ((#("u" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3966) (undo-tree-id8 . -1) (#("r" 0 1 (face web-mode-variable-name-face part-side javascript)) . -3967) (undo-tree-id9 . -1) 3968) nil (25570 4787 136020 577000) 0 nil])
([nil nil ((3966 . 3970)) nil (25570 4787 136016 796000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -3969) (undo-tree-id7 . -1) 3970) nil (25570 4787 136015 550000) 0 nil])
([nil nil ((3969 . 3971)) nil (25570 4787 136012 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3826 . 3827) (nil part-side javascript 3823 . 3827) (nil face web-mode-variable-name-face 3823 . 3827) (nil part-side javascript 3821 . 3823) (nil part-side javascript 3816 . 3821) (nil face web-mode-variable-name-face 3816 . 3821) (3816 . 3827)) nil (25570 4787 136011 552000) 0 nil])
([nil nil ((3827 . 3828)) nil (25570 4787 136009 178000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -3827) (undo-tree-id6 . -1) 3828) nil (25570 4787 136007 462000) 0 nil])
([nil nil ((3827 . 3829)) nil (25570 4787 135998 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3697 . 3698) (nil part-side javascript 3694 . 3698) (nil face web-mode-variable-name-face 3694 . 3698) (nil part-side javascript 3692 . 3694) (nil part-side javascript 3687 . 3692) (nil face web-mode-variable-name-face 3687 . 3692) (3687 . 3698)) nil (25570 4787 135996 672000) 0 nil])
([nil nil ((3698 . 3700)) nil (25570 4787 135994 370000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3814 . 3815) (nil part-side javascript 3811 . 3815) (nil face web-mode-variable-name-face 3811 . 3815) (nil part-side javascript 3809 . 3811) (nil part-side javascript 3804 . 3809) (nil face web-mode-variable-name-face 3804 . 3809) (3804 . 3815)) nil (25570 4787 135992 289000) 0 nil])
([nil nil ((3815 . 3817)) nil (25570 4787 135984 735000) 0 nil])
([nil nil ((6421 . 6436) (t 25570 4787 138123 248000)) nil (25570 4824 428232 24000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6435) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 6436) nil (25570 4824 428225 674000) 0 nil])
([nil nil ((1951 . 1958) (t 25570 4824 438028 645000)) nil (25570 5351 130315 241000) 0 nil])
([nil nil ((1958 . 1965)) nil (25570 5351 130313 462000) 0 nil])
([nil nil ((#("p" 0 1 (face web-mode-variable-name-face part-side javascript)) . -1964) (undo-tree-id71 . -1) 1965) nil (25570 5351 130311 532000) 0 nil])
([nil nil ((1964 . 1977)) nil (25570 5351 130307 993000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1989 . 1990) (nil part-side javascript 1977 . 1990) (1977 . 1990)) nil (25570 5351 130306 339000) 0 nil])
([nil nil ((1990 . 1996)) nil (25570 5351 130304 236000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1994) (undo-tree-id69 . -1) (#("e" 0 1 (part-side javascript)) . -1995) (undo-tree-id70 . -1) 1996) nil (25570 5351 130301 811000) 0 nil])
([nil nil ((1994 . 1998)) nil (25570 5351 130296 231000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1997) (undo-tree-id68 . -1) 1998) nil (25570 5351 130294 371000) 0 nil])
([nil nil ((1997 . 2004)) nil (25570 5351 130290 710000) 0 nil])
([nil nil ((2004 . 2014)) nil (25570 5351 130289 217000) 0 nil])
([nil nil ((2014 . 2025)) nil (25570 5351 130287 819000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2024) (undo-tree-id67 . -1) 2025) nil (25570 5351 130285 802000) 0 nil])
([nil nil ((2024 . 2032)) nil (25570 5351 130282 255000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2031) (undo-tree-id66 . -1) 2032) nil (25570 5351 130280 423000) 0 nil])
([nil nil ((#("this.currentsubfilter" 0 4 (face web-mode-constant-face part-side javascript) 4 21 (part-side javascript)) . 2087) (undo-tree-id64 . -21) (undo-tree-id65 . -21)) nil (25570 5351 130276 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2099 . 2100) (nil part-side javascript 2087 . 2100) (2087 . 2100)) nil (25570 5351 130270 419000) 0 nil])
([nil nil ((#("
      delete currentfilter.parent" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 13 (face web-mode-keyword-face part-side javascript) 13 34 (part-side javascript)) . 1997) (undo-tree-id60 . -34) (undo-tree-id61 . -26) (undo-tree-id62 . -1) (undo-tree-id63 . -34)) nil (25570 5351 130267 462000) 0 nil])
([nil nil ((#("
      const old_parent = currentfilter.parent" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 23 (face web-mode-variable-name-face part-side javascript) 23 25 (part-side javascript) 25 26 (part-side javascript) 26 38 (part-side javascript) 38 39 (part-side javascript rear-nonsticky t) 39 46 (part-side javascript)) . 1951) (undo-tree-id54 . -46) (undo-tree-id55 . -46) (undo-tree-id56 . -1) (undo-tree-id57 . -26) (undo-tree-id58 . -46) (undo-tree-id59 . -46)) nil (25570 5351 130257 686000) 0 nil])
([nil nil ((1964 . 1966) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1964) (1964 . 1965)) nil (25570 5351 130243 757000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 1965)) nil (25570 5351 130241 36000) 0 nil])
([nil nil ((1979 . 1980)) nil (25570 5351 130239 402000) 0 nil])
([nil nil ((1966 . 1972) (nil part-token string 1966 . 1967) (nil font-lock-face web-mode-javascript-string-face 1966 . 1967) (nil part-side javascript 1966 . 1967) (1965 . 1967) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -1965) (1965 . 1966)) nil (25570 5351 130237 41000) 0 nil])
([nil nil ((1973 . 1978)) nil (25570 5351 130233 179000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1976) (undo-tree-id52 . -1) (#("," 0 1 (part-side javascript)) . -1977) (undo-tree-id53 . -1) 1978) nil (25570 5351 130230 765000) 0 nil])
([nil nil ((1976 . 1981)) nil (25570 5351 130224 85000) 0 nil])
([nil nil ((1951 . 1958)) nil (25570 5351 130222 582000) 0 nil])
([nil nil ((1958 . 1965)) nil (25570 5351 130221 1000) 0 nil])
([nil nil ((#("s" 0 1 (face web-mode-variable-name-face part-side javascript)) . -1962) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("u" 0 1 (face web-mode-variable-name-face part-side javascript)) . -1963) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("b" 0 1 (face web-mode-variable-name-face part-side javascript)) . -1964) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1965) nil (25570 5351 130217 930000) 0 nil])
([nil nil ((1962 . 1980)) nil (25570 5351 130203 727000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1993 . 1994) (nil part-side javascript 1993 . 1994) (nil face (rainbow-delimiters-depth-4-face) 1993 . 1994) (nil part-side javascript 1979 . 1993) (nil part-side javascript 1971 . 1979) (nil part-side javascript 1970 . 1971) (nil part-token string 1970 . 1971) (nil syntax-table (15) 1970 . 1971) (nil font-lock-face web-mode-javascript-string-face 1970 . 1971) (nil part-side javascript 1964 . 1970) (nil part-token string 1964 . 1970) (nil font-lock-face web-mode-javascript-string-face 1964 . 1970) (nil part-side javascript 1963 . 1964) (nil part-token string 1963 . 1964) (nil syntax-table (15) 1963 . 1964) (nil font-lock-face web-mode-javascript-string-face 1963 . 1964) (nil part-side javascript 1962 . 1963) (nil face (rainbow-delimiters-depth-4-face) 1962 . 1963) (1962 . 1994)) nil (25570 5351 130200 702000) 0 nil])
([nil nil ((#("b" 0 1 (part-side javascript)) . -1980) (undo-tree-id32 . -1) (#("j" 0 1 (part-side javascript)) . -1981) (undo-tree-id33 . -1) (#("N" 0 1 (part-side javascript)) . -1982) (undo-tree-id34 . -1) (#("o" 0 1 (part-side javascript)) . -1983) (undo-tree-id35 . -1) (#("R" 0 1 (part-side javascript)) . -1984) (undo-tree-id36 . -1) (#("e" 0 1 (part-side javascript)) . -1985) (undo-tree-id37 . -1) (#("f" 0 1 (part-side javascript)) . -1986) (undo-tree-id38 . -1) (#("e" 0 1 (part-side javascript)) . -1987) (undo-tree-id39 . -1) (#("r" 0 1 (part-side javascript)) . -1988) (undo-tree-id40 . -1) (#("e" 0 1 (part-side javascript)) . -1989) (undo-tree-id41 . -1) (#("n" 0 1 (part-side javascript)) . -1990) (undo-tree-id42 . -1) (#("c" 0 1 (part-side javascript)) . -1991) (undo-tree-id43 . -1) (#("e" 0 1 (part-side javascript)) . -1992) (undo-tree-id44 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t)) . -1993) (undo-tree-id45 . -1) 1994) nil (25570 5351 130186 793000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -1979) (undo-tree-id31 . -1) 1980) nil (25570 5351 130153 516000) 0 nil])
([nil nil ((1994 . 1995)) nil (25570 5351 136568 295000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2018 . 2019) (nil part-side javascript 2002 . 2019) (nil part-side javascript 1998 . 2002) (nil face web-mode-constant-face 1998 . 2002) (1998 . 2019)) nil (25570 5365 611696 154000) 0 nil] [nil nil ((nil rear-nonsticky nil 2010 . 2011) (nil part-side javascript 1998 . 2011) (1998 . 2011)) ((#("currentfilter" 0 12 (part-side javascript) 12 13 (part-side javascript rear-nonsticky nil)) . 1998) (undo-tree-id72 . -13) (nil rear-nonsticky t 2010 . 2011)) (25570 5351 130127 334000) 0 nil])
([nil nil ((#("currentfilter" 0 12 (part-side javascript) 12 13 (part-side javascript rear-nonsticky t)) . 2093) (undo-tree-id77 . -13) (undo-tree-id78 . -13)) nil (25570 5365 611694 121000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2107 . 2108) (nil part-side javascript 2093 . 2108) (2093 . 2108)) nil (25570 5365 611690 762000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2063) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 2064) nil (25570 5365 611688 235000) 0 nil])
([nil nil ((#("{\"parent\": _, ..." 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 2 8 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 8 9 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 9 17 (part-side javascript)) . 2032) (undo-tree-id73 . -17) (undo-tree-id74 . -17)) nil (25570 5365 611679 353000) 0 nil])
([nil nil ((1062 . 1066) (#("    " 0 4 (part-side javascript)) . 1061) (undo-tree-id122 . -4) (1061 . 1066) (#("    " 0 4 (part-side javascript)) . 1060) (undo-tree-id123 . -4) (1059 . 1065) (t 25570 5365 615322 604000)) nil (25570 5667 392407 559000) 0 nil])
([nil nil ((1061 . 1065)) nil (25570 5667 392403 697000) 0 nil])
([nil nil ((1065 . 1081)) nil (25570 5667 392402 836000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1080) (undo-tree-id121 . -1) 1081) nil (25570 5667 392401 745000) 0 nil])
([nil nil ((1082 . 1083) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1082) (1081 . 1082) (1080 . 1082) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -1080) (1080 . 1081)) nil (25570 5667 392399 213000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1082) (undo-tree-id120 . -1) 1083) nil (25570 5667 392397 182000) 0 nil])
([nil nil ((1082 . 1084) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -1082) (1082 . 1083)) nil (25570 5667 392394 863000) 0 nil])
([nil nil ((1082 . 1083)) nil (25570 5667 392393 501000) 0 nil])
([nil nil ((1086 . 1090) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 1085) (undo-tree-id118 . -4) (undo-tree-id119 . 6) (1089 . 1091) (1084 . 1090)) nil (25570 5667 392392 142000) 0 nil])
([nil nil ((1091 . 1092)) nil (25570 5667 392388 589000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1092) (undo-tree-id117 . -1)) nil (25570 5667 392387 551000) 0 nil])
([nil nil ((1085 . 1091)) nil (25570 5667 392385 591000) 0 nil])
([nil nil ((1091 . 1100)) nil (25570 5667 392384 339000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -1098) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1099) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 1100) nil (25570 5667 392382 786000) 0 nil])
([nil nil ((1098 . 1100)) nil (25570 5667 392376 360000) 0 nil])
([nil nil ((1099 . 1103)) nil (25570 5667 392375 432000) 0 nil])
([nil nil ((1104 . 1121)) nil (25570 5667 392374 528000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -1120) (undo-tree-id111 . -1) 1121) nil (25570 5667 392373 155000) 0 nil])
([nil nil ((1121 . 1122) (1120 . 1122) (#("[" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1120) (1120 . 1121)) nil (25570 5667 392369 844000) 0 nil])
([nil nil ((#("    " 0 4 (part-side javascript)) . -1130) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) 1134) nil (25570 5667 392362 274000) 0 nil])
([nil nil ((4028 . 4039) (t 25570 5667 395384 23000)) nil (25570 5800 165228 400000) 0 nil])
([nil nil ((4039 . 4042)) nil (25570 5800 165227 191000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4070 . 4071) (nil part-side javascript 4059 . 4071) (nil part-side javascript 4058 . 4059) (nil face (rainbow-delimiters-depth-6-face) 4058 . 4059) (nil part-side javascript 4054 . 4058) (nil part-side javascript 4053 . 4054) (nil face (rainbow-delimiters-depth-6-face) 4053 . 4054) (nil part-side javascript 4049 . 4053) (nil face web-mode-function-call-face 4049 . 4053) (nil part-side javascript 4042 . 4049) (4042 . 4071)) nil (25570 5800 165225 631000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -4054) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("i" 0 1 (part-side javascript)) . -4055) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("l" 0 1 (part-side javascript)) . -4056) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("t" 0 1 (part-side javascript)) . -4057) (undo-tree-id134 . -1) 4058) nil (25570 5800 165221 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4067 . 4068) (nil rear-nonsticky t 4067 . 4068) (nil part-side javascript 4067 . 4068) (nil part-side javascript 4054 . 4067) (4054 . 4068)) nil (25570 5800 165211 965000) 0 nil])
([nil nil ((4081 . 4082)) nil (25570 5800 165210 154000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -4081) (undo-tree-id127 . -1) 4082) nil (25570 5800 165208 980000) 0 nil])
([nil nil ((4081 . 4082)) nil (25570 5800 165206 666000) 0 nil])
([nil nil ((4042 . 4044) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -4042) (4042 . 4043)) nil (25570 5800 165205 612000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 4043)) nil (25570 5800 165204 103000) 0 nil])
([nil nil ((4084 . 4086) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -4084) (4083 . 4085)) nil (25570 5800 165203 90000) 0 nil])
([nil nil ((4087 . 4097) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 4086) (undo-tree-id125 . -10) (undo-tree-id126 . 12) (4096 . 4098) (4085 . 4097)) nil (25570 5800 165201 190000) 0 nil])
([nil nil ((4086 . 4098)) nil (25570 5800 165196 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4112 . 4113) (nil part-side javascript 4112 . 4113) (nil rear-nonsticky t 4111 . 4112) (nil part-side javascript 4111 . 4112) (nil part-side javascript 4098 . 4111) (4098 . 4113)) nil (25570 5800 165195 375000) 0 nil])
([nil nil ((4113 . 4126)) nil (25570 5800 165192 622000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4125) (undo-tree-id124 . -1) 4126) nil (25570 5800 165187 639000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -2029) (undo-tree-id151 . -1) (#("e" 0 1 (part-side javascript)) . -2030) (undo-tree-id152 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -2031) (undo-tree-id153 . -1) 2032 (t 25570 5800 171318 893000)) nil (25570 5857 465079 460000) 0 nil])
([nil nil ((2029 . 2034)) nil (25570 5857 465074 592000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1971) (undo-tree-id150 . -1)) nil (25570 5857 465073 537000) 0 nil])
([nil nil ((2164 . 2171)) nil (25570 5857 465071 164000) 0 nil])
([nil nil ((2790 . 2797)) nil (25570 5857 465069 464000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -2785) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . 6) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -2165) 2797) nil (25570 5857 465063 504000) 0 nil])
([nil nil ((6414 . 6419) (t 25570 5857 471278 317000)) nil (25570 6347 594241 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7968 . 7969) (nil part-side javascript 7968 . 7969) (nil part-side javascript 7967 . 7968) (nil face (rainbow-delimiters-depth-3-face) 7967 . 7968) (nil part-side javascript 7936 . 7967) (nil part-side javascript 7932 . 7936) (nil face web-mode-constant-face 7932 . 7936) (nil part-side javascript 7923 . 7932) (nil part-side javascript 7922 . 7923) (nil face (rainbow-delimiters-depth-4-face) 7922 . 7923) (nil part-side javascript 7914 . 7922) (nil part-side javascript 7913 . 7914) (nil syntax-table (12) 7913 . 7914) (nil part-side javascript 7889 . 7913) (nil part-token comment 7889 . 7913) (nil font-lock-face web-mode-javascript-comment-face 7889 . 7913) (nil part-side javascript 7885 . 7889) (nil part-token comment 7885 . 7889) (nil font-lock-face web-mode-javascript-comment-face 7885 . 7889) (nil part-side javascript 7883 . 7885) (nil part-token comment 7883 . 7885) (nil font-lock-face web-mode-javascript-comment-face 7883 . 7885) (nil part-side javascript 7882 . 7883) (nil part-token comment 7882 . 7883) (nil syntax-table (11) 7882 . 7883) (nil font-lock-face web-mode-javascript-comment-face 7882 . 7883) (nil part-side javascript 7871 . 7882) (nil part-side javascript 7870 . 7871) (nil face (rainbow-delimiters-depth-5-face) 7870 . 7871) (nil part-side javascript 7869 . 7870) (nil part-token string 7869 . 7870) (nil syntax-table (15) 7869 . 7870) (nil font-lock-face web-mode-javascript-string-face 7869 . 7870) (nil part-side javascript 7868 . 7869) (nil part-token string 7868 . 7869) (nil font-lock-face web-mode-javascript-string-face 7868 . 7869) (nil part-side javascript 7867 . 7868) (nil part-token string 7867 . 7868) (nil syntax-table (15) 7867 . 7868) (nil font-lock-face web-mode-javascript-string-face 7867 . 7868) (nil part-side javascript 7866 . 7867) (nil face (rainbow-delimiters-depth-5-face) 7866 . 7867) (nil part-side javascript 7863 . 7866) (nil part-side javascript 7862 . 7863) (nil face (rainbow-delimiters-depth-5-face) 7862 . 7863) (nil part-side javascript 7861 . 7862) (nil part-token string 7861 . 7862) (nil syntax-table (15) 7861 . 7862) (nil font-lock-face web-mode-javascript-string-face 7861 . 7862) (nil part-side javascript 7856 . 7861) (nil part-token string 7856 . 7861) (nil font-lock-face web-mode-javascript-string-face 7856 . 7861) (nil part-side javascript 7855 . 7856) (nil part-token string 7855 . 7856) (nil syntax-table (15) 7855 . 7856) (nil font-lock-face web-mode-javascript-string-face 7855 . 7856) (nil part-side javascript 7854 . 7855) (nil face (rainbow-delimiters-depth-5-face) 7854 . 7855) (nil part-side javascript 7831 . 7854) (nil part-side javascript 7830 . 7831) (nil syntax-table (15) 7830 . 7831) (nil part-side javascript 7829 . 7830) (nil part-token string 7829 . 7830) (nil font-lock-face web-mode-javascript-string-face 7829 . 7830) (nil part-side javascript 7825 . 7829) (nil part-token string 7825 . 7829) (nil font-lock-face web-mode-javascript-string-face 7825 . 7829) (nil part-side javascript 7824 . 7825) (nil part-token string 7824 . 7825) (nil syntax-table (15) 7824 . 7825) (nil font-lock-face web-mode-javascript-string-face 7824 . 7825) (nil part-side javascript 7821 . 7824) (nil part-side javascript 7820 . 7821) (nil face (rainbow-delimiters-depth-5-face) 7820 . 7821) (nil part-side javascript 7819 . 7820) (nil part-token string 7819 . 7820) (nil syntax-table (15) 7819 . 7820) (nil font-lock-face web-mode-javascript-string-face 7819 . 7820) (nil part-side javascript 7813 . 7819) (nil part-token string 7813 . 7819) (nil font-lock-face web-mode-javascript-string-face 7813 . 7819) (nil part-side javascript 7812 . 7813) (nil part-token string 7812 . 7813) (nil syntax-table (15) 7812 . 7813) (nil font-lock-face web-mode-javascript-string-face 7812 . 7813) (nil part-side javascript 7811 . 7812) (nil face (rainbow-delimiters-depth-5-face) 7811 . 7812) (nil part-side javascript 7788 . 7811) (nil part-side javascript 7787 . 7788) (nil syntax-table (15) 7787 . 7788) (nil part-side javascript 7783 . 7787) (nil part-token string 7783 . 7787) (nil font-lock-face web-mode-javascript-string-face 7783 . 7787) (nil part-side javascript 7782 . 7783) (nil part-token string 7782 . 7783) (nil syntax-table (15) 7782 . 7783) (nil font-lock-face web-mode-javascript-string-face 7782 . 7783) (nil part-side javascript 7779 . 7782) (nil part-side javascript 7778 . 7779) (nil face (rainbow-delimiters-depth-5-face) 7778 . 7779) (nil part-side javascript 7777 . 7778) (nil part-token string 7777 . 7778) (nil syntax-table (15) 7777 . 7778) (nil font-lock-face web-mode-javascript-string-face 7777 . 7778) (nil part-side javascript 7768 . 7777) (nil part-token string 7768 . 7777) (nil font-lock-face web-mode-javascript-string-face 7768 . 7777) (nil part-side javascript 7767 . 7768) (nil part-token string 7767 . 7768) (nil syntax-table (15) 7767 . 7768) (nil font-lock-face web-mode-javascript-string-face 7767 . 7768) (nil part-side javascript 7766 . 7767) (nil face (rainbow-delimiters-depth-5-face) 7766 . 7767) (nil part-side javascript 7742 . 7766) (nil part-side javascript 7741 . 7742) (nil face (rainbow-delimiters-depth-5-face) 7741 . 7742) (nil part-side javascript 7730 . 7741) (nil part-side javascript 7729 . 7730) (nil face (rainbow-delimiters-depth-6-face) 7729 . 7730) (nil part-side javascript 7716 . 7729) (nil part-side javascript 7715 . 7716) (nil face (rainbow-delimiters-depth-7-face) 7715 . 7716) (nil part-side javascript 7714 . 7715) (nil face (rainbow-delimiters-depth-8-face) 7714 . 7715) (nil part-side javascript 7713 . 7714) (nil part-side javascript 7712 . 7713) (nil face (rainbow-delimiters-depth-8-face) 7712 . 7713) (nil part-side javascript 7705 . 7712) (nil part-side javascript 7704 . 7705) (nil face (rainbow-delimiters-depth-7-face) 7704 . 7705) (nil part-side javascript 7690 . 7704) (nil part-side javascript 7684 . 7690) (nil face web-mode-keyword-face 7684 . 7690) (nil part-side javascript 7669 . 7684) (nil part-side javascript 7668 . 7669) (nil face (rainbow-delimiters-depth-7-face) 7668 . 7669) (nil part-side javascript 7667 . 7668) (nil face (rainbow-delimiters-depth-8-face) 7667 . 7668) (nil part-side javascript 7666 . 7667) (nil part-side javascript 7665 . 7666) (nil face (rainbow-delimiters-depth-8-face) 7665 . 7666) (nil part-side javascript 7658 . 7665) (nil part-side javascript 7657 . 7658) (nil face (rainbow-delimiters-depth-7-face) 7657 . 7658) (nil part-side javascript 7641 . 7657) (nil part-side javascript 7640 . 7641) (nil face (rainbow-delimiters-depth-7-face) 7640 . 7641) (nil part-side javascript 7639 . 7640) (nil face (rainbow-delimiters-depth-8-face) 7639 . 7640) (nil part-side javascript 7638 . 7639) (nil part-side javascript 7637 . 7638) (nil face (rainbow-delimiters-depth-8-face) 7637 . 7638) (nil part-side javascript 7630 . 7637) (nil part-side javascript 7629 . 7630) (nil face (rainbow-delimiters-depth-7-face) 7629 . 7630) (nil part-side javascript 7628 . 7629) (nil face (rainbow-delimiters-depth-7-face) 7628 . 7629) (nil part-side javascript 7627 . 7628) (nil part-token string 7627 . 7628) (nil syntax-table (15) 7627 . 7628) (nil font-lock-face web-mode-javascript-string-face 7627 . 7628) (nil part-side javascript 7623 . 7627) (nil part-token string 7623 . 7627) (nil font-lock-face web-mode-javascript-string-face 7623 . 7627) (nil part-side javascript 7622 . 7623) (nil part-token string 7622 . 7623) (nil syntax-table (15) 7622 . 7623) (nil font-lock-face web-mode-javascript-string-face 7622 . 7623) (nil part-side javascript 7621 . 7622) (nil face (rainbow-delimiters-depth-7-face) 7621 . 7622) (nil part-side javascript 7593 . 7621) (nil part-side javascript 7592 . 7593) (nil face (rainbow-delimiters-depth-6-face) 7592 . 7593) (nil part-side javascript 7591 . 7592) (nil part-side javascript 7590 . 7591) (nil face (rainbow-delimiters-depth-6-face) 7590 . 7591) (nil part-side javascript 7576 . 7590) (nil part-side javascript 7574 . 7576) (nil face web-mode-keyword-face 7574 . 7576) (nil part-side javascript 7573 . 7574) (nil part-side javascript 7572 . 7573) (nil face (rainbow-delimiters-depth-7-face) 7572 . 7573) (nil part-side javascript 7571 . 7572) (nil part-side javascript 7570 . 7571) (nil face (rainbow-delimiters-depth-7-face) 7570 . 7571) (nil part-side javascript 7563 . 7570) (nil part-side javascript 7562 . 7563) (nil face (rainbow-delimiters-depth-6-face) 7562 . 7563) (nil part-side javascript 7561 . 7562) (nil part-side javascript 7559 . 7561) (nil face web-mode-keyword-face 7559 . 7561) (nil part-side javascript 7546 . 7559) (nil part-side javascript 7545 . 7546) (nil face (rainbow-delimiters-depth-5-face) 7545 . 7546) (nil part-side javascript 7544 . 7545) (nil part-side javascript 7543 . 7544) (nil face (rainbow-delimiters-depth-5-face) 7543 . 7544) (nil part-side javascript 7514 . 7543) (nil part-side javascript 7513 . 7514) (nil face web-mode-variable-name-face 7513 . 7514) (nil part-side javascript 7512 . 7513) (nil part-side javascript 7509 . 7512) (nil face web-mode-keyword-face 7509 . 7512) (nil part-side javascript 7508 . 7509) (nil face (rainbow-delimiters-depth-5-face) 7508 . 7509) (nil part-side javascript 7507 . 7508) (nil part-side javascript 7504 . 7507) (nil face web-mode-keyword-face 7504 . 7507) (nil part-side javascript 7493 . 7504) (nil part-side javascript 7492 . 7493) (nil face (rainbow-delimiters-depth-5-face) 7492 . 7493) (nil part-side javascript 7491 . 7492) (nil face (rainbow-delimiters-depth-5-face) 7491 . 7492) (nil part-side javascript 7488 . 7491) (nil part-side javascript 7487 . 7488) (nil face (rainbow-delimiters-depth-5-face) 7487 . 7488) (nil part-side javascript 7486 . 7487) (nil part-token string 7486 . 7487) (nil syntax-table (15) 7486 . 7487) (nil font-lock-face web-mode-javascript-string-face 7486 . 7487) (nil part-side javascript 7482 . 7486) (nil part-token string 7482 . 7486) (nil font-lock-face web-mode-javascript-string-face 7482 . 7486) (nil part-side javascript 7481 . 7482) (nil part-token string 7481 . 7482) (nil syntax-table (15) 7481 . 7482) (nil font-lock-face web-mode-javascript-string-face 7481 . 7482) (nil part-side javascript 7480 . 7481) (nil face (rainbow-delimiters-depth-5-face) 7480 . 7481) (nil part-side javascript 7457 . 7480) (nil part-side javascript 7456 . 7457) (nil syntax-table (12) 7456 . 7457) (nil part-side javascript 7433 . 7456) (nil part-token comment 7433 . 7456) (nil font-lock-face web-mode-javascript-comment-face 7433 . 7456) (nil part-side javascript 7424 . 7433) (nil part-token comment 7424 . 7433) (nil font-lock-face web-mode-javascript-comment-face 7424 . 7433) (nil part-side javascript 7369 . 7424) (nil part-token comment 7369 . 7424) (nil font-lock-face web-mode-javascript-comment-face 7369 . 7424) (nil part-side javascript 7368 . 7369) (nil part-token comment 7368 . 7369) (nil syntax-table (11) 7368 . 7369) (nil font-lock-face web-mode-javascript-comment-face 7368 . 7369) (nil part-side javascript 7357 . 7368) (nil part-side javascript 7356 . 7357) (nil face (rainbow-delimiters-depth-4-face) 7356 . 7357) (nil part-side javascript 7355 . 7356) (nil part-side javascript 7351 . 7355) (nil face web-mode-keyword-face 7351 . 7355) (nil part-side javascript 7342 . 7351) (nil part-side javascript 7341 . 7342) (nil face (rainbow-delimiters-depth-4-face) 7341 . 7342) (nil part-side javascript 7332 . 7341) (nil part-side javascript 7331 . 7332) (nil face (rainbow-delimiters-depth-5-face) 7331 . 7332) (nil part-side javascript 7301 . 7331) (nil part-side javascript 7295 . 7301) (nil face web-mode-keyword-face 7295 . 7301) (nil part-side javascript 7283 . 7295) (nil part-side javascript 7282 . 7283) (nil syntax-table (15) 7282 . 7283) (nil part-side javascript 7281 . 7282) (nil part-token string 7281 . 7282) (nil font-lock-face web-mode-javascript-string-face 7281 . 7282) (nil part-side javascript 7280 . 7281) (nil part-token string 7280 . 7281) (nil syntax-table (15) 7280 . 7281) (nil font-lock-face web-mode-javascript-string-face 7280 . 7281) (nil part-side javascript 7246 . 7280) (nil part-side javascript 7245 . 7246) (nil face (rainbow-delimiters-depth-5-face) 7245 . 7246) (nil part-side javascript 7244 . 7245) (nil part-side javascript 7240 . 7244) (nil face web-mode-keyword-face 7240 . 7244) (nil part-side javascript 7229 . 7240) (nil part-side javascript 7228 . 7229) (nil face (rainbow-delimiters-depth-5-face) 7228 . 7229) (nil part-side javascript 7217 . 7228) (nil part-side javascript 7216 . 7217) (nil face (rainbow-delimiters-depth-6-face) 7216 . 7217) (nil part-side javascript 7215 . 7216) (nil part-token string 7215 . 7216) (nil syntax-table (15) 7215 . 7216) (nil font-lock-face web-mode-javascript-string-face 7215 . 7216) (nil part-side javascript 7211 . 7215) (nil part-token string 7211 . 7215) (nil font-lock-face web-mode-javascript-string-face 7211 . 7215) (nil part-side javascript 7210 . 7211) (nil part-token string 7210 . 7211) (nil syntax-table (15) 7210 . 7211) (nil font-lock-face web-mode-javascript-string-face 7210 . 7211) (nil part-side javascript 7209 . 7210) (nil face (rainbow-delimiters-depth-6-face) 7209 . 7210) (nil part-side javascript 7208 . 7209) (nil face (rainbow-delimiters-depth-6-face) 7208 . 7209) (nil part-side javascript 7207 . 7208) (nil part-token string 7207 . 7208) (nil syntax-table (15) 7207 . 7208) (nil font-lock-face web-mode-javascript-string-face 7207 . 7208) (nil part-side javascript 7203 . 7207) (nil part-token string 7203 . 7207) (nil font-lock-face web-mode-javascript-string-face 7203 . 7207) (nil part-side javascript 7202 . 7203) (nil part-token string 7202 . 7203) (nil syntax-table (15) 7202 . 7203) (nil font-lock-face web-mode-javascript-string-face 7202 . 7203) (nil part-side javascript 7201 . 7202) (nil face (rainbow-delimiters-depth-6-face) 7201 . 7202) (nil part-side javascript 7185 . 7201) (nil part-side javascript 7184 . 7185) (nil face (rainbow-delimiters-depth-6-face) 7184 . 7185) (nil part-side javascript 7183 . 7184) (nil part-token string 7183 . 7184) (nil syntax-table (15) 7183 . 7184) (nil font-lock-face web-mode-javascript-string-face 7183 . 7184) (nil part-side javascript 7179 . 7183) (nil part-token string 7179 . 7183) (nil font-lock-face web-mode-javascript-string-face 7179 . 7183) (nil part-side javascript 7178 . 7179) (nil part-token string 7178 . 7179) (nil syntax-table (15) 7178 . 7179) (nil font-lock-face web-mode-javascript-string-face 7178 . 7179) (nil part-side javascript 7177 . 7178) (nil face (rainbow-delimiters-depth-6-face) 7177 . 7178) (nil part-side javascript 7151 . 7177) (nil part-side javascript 7150 . 7151) (nil face (rainbow-delimiters-depth-5-face) 7150 . 7151) (nil part-side javascript 7149 . 7150) (nil part-side javascript 7148 . 7149) (nil face (rainbow-delimiters-depth-5-face) 7148 . 7149) (nil part-side javascript 7147 . 7148) (nil face (rainbow-delimiters-depth-6-face) 7147 . 7148) (nil part-side javascript 7146 . 7147) (nil part-token string 7146 . 7147) (nil syntax-table (15) 7146 . 7147) (nil font-lock-face web-mode-javascript-string-face 7146 . 7147) (nil part-side javascript 7142 . 7146) (nil part-token string 7142 . 7146) (nil font-lock-face web-mode-javascript-string-face 7142 . 7146) (nil part-side javascript 7141 . 7142) (nil part-token string 7141 . 7142) (nil syntax-table (15) 7141 . 7142) (nil font-lock-face web-mode-javascript-string-face 7141 . 7142) (nil part-side javascript 7140 . 7141) (nil face (rainbow-delimiters-depth-6-face) 7140 . 7141) (nil part-side javascript 7126 . 7140) (nil part-side javascript 7124 . 7126) (nil face web-mode-keyword-face 7124 . 7126) (nil part-side javascript 7123 . 7124) (nil part-side javascript 7122 . 7123) (nil part-token string 7122 . 7123) (nil syntax-table (15) 7122 . 7123) (nil font-lock-face web-mode-javascript-string-face 7122 . 7123) (nil part-side javascript 7118 . 7122) (nil part-token string 7118 . 7122) (nil font-lock-face web-mode-javascript-string-face 7118 . 7122) (nil part-side javascript 7117 . 7118) (nil part-token string 7117 . 7118) (nil syntax-table (15) 7117 . 7118) (nil font-lock-face web-mode-javascript-string-face 7117 . 7118) (nil part-side javascript 7116 . 7117) (nil face (rainbow-delimiters-depth-5-face) 7116 . 7117) (nil part-side javascript 7115 . 7116) (nil part-side javascript 7113 . 7115) (nil face web-mode-keyword-face 7113 . 7115) (nil part-side javascript 7102 . 7113) (nil part-side javascript 7101 . 7102) (nil face (rainbow-delimiters-depth-5-face) 7101 . 7102) (nil part-side javascript 7090 . 7101) (nil part-side javascript 7089 . 7090) (nil face (rainbow-delimiters-depth-6-face) 7089 . 7090) (nil part-side javascript 7076 . 7089) (nil part-side javascript 7075 . 7076) (nil face (rainbow-delimiters-depth-7-face) 7075 . 7076) (nil part-side javascript 7074 . 7075) (nil face (rainbow-delimiters-depth-8-face) 7074 . 7075) (nil part-side javascript 7073 . 7074) (nil part-side javascript 7072 . 7073) (nil face (rainbow-delimiters-depth-8-face) 7072 . 7073) (nil part-side javascript 7065 . 7072) (nil part-side javascript 7064 . 7065) (nil face (rainbow-delimiters-depth-7-face) 7064 . 7065) (nil part-side javascript 7050 . 7064) (nil part-side javascript 7044 . 7050) (nil face web-mode-keyword-face 7044 . 7050) (nil part-side javascript 7029 . 7044) (nil part-side javascript 7028 . 7029) (nil face (rainbow-delimiters-depth-6-face) 7028 . 7029) (nil part-side javascript 7027 . 7028) (nil part-side javascript 7023 . 7027) (nil face web-mode-keyword-face 7023 . 7027) (nil part-side javascript 7010 . 7023) (nil part-side javascript 7009 . 7010) (nil face (rainbow-delimiters-depth-6-face) 7009 . 7010) (nil part-side javascript 6996 . 7009) (nil part-side javascript 6995 . 6996) (nil face (rainbow-delimiters-depth-7-face) 6995 . 6996) (nil part-side javascript 6994 . 6995) (nil face (rainbow-delimiters-depth-8-face) 6994 . 6995) (nil part-side javascript 6993 . 6994) (nil part-side javascript 6992 . 6993) (nil face (rainbow-delimiters-depth-8-face) 6992 . 6993) (nil part-side javascript 6985 . 6992) (nil part-side javascript 6984 . 6985) (nil face (rainbow-delimiters-depth-7-face) 6984 . 6985) (nil part-side javascript 6983 . 6984) (nil face (rainbow-delimiters-depth-7-face) 6983 . 6984) (nil part-side javascript 6982 . 6983) (nil part-token string 6982 . 6983) (nil syntax-table (15) 6982 . 6983) (nil font-lock-face web-mode-javascript-string-face 6982 . 6983) (nil part-side javascript 6978 . 6982) (nil part-token string 6978 . 6982) (nil font-lock-face web-mode-javascript-string-face 6978 . 6982) (nil part-side javascript 6977 . 6978) (nil part-token string 6977 . 6978) (nil syntax-table (15) 6977 . 6978) (nil font-lock-face web-mode-javascript-string-face 6977 . 6978) (nil part-side javascript 6976 . 6977) (nil face (rainbow-delimiters-depth-7-face) 6976 . 6977) (nil part-side javascript 6960 . 6976) (nil part-side javascript 6959 . 6960) (nil face (rainbow-delimiters-depth-7-face) 6959 . 6960) (nil part-side javascript 6958 . 6959) (nil face (rainbow-delimiters-depth-8-face) 6958 . 6959) (nil part-side javascript 6957 . 6958) (nil part-side javascript 6956 . 6957) (nil face (rainbow-delimiters-depth-8-face) 6956 . 6957) (nil part-side javascript 6949 . 6956) (nil part-side javascript 6948 . 6949) (nil face (rainbow-delimiters-depth-7-face) 6948 . 6949) (nil part-side javascript 6920 . 6948) (nil part-side javascript 6919 . 6920) (nil face (rainbow-delimiters-depth-6-face) 6919 . 6920) (nil part-side javascript 6918 . 6919) (nil part-side javascript 6917 . 6918) (nil face (rainbow-delimiters-depth-6-face) 6917 . 6918) (nil part-side javascript 6916 . 6917) (nil face (rainbow-delimiters-depth-7-face) 6916 . 6917) (nil part-side javascript 6915 . 6916) (nil part-token string 6915 . 6916) (nil syntax-table (15) 6915 . 6916) (nil font-lock-face web-mode-javascript-string-face 6915 . 6916) (nil part-side javascript 6911 . 6915) (nil part-token string 6911 . 6915) (nil font-lock-face web-mode-javascript-string-face 6911 . 6915) (nil part-side javascript 6910 . 6911) (nil part-token string 6910 . 6911) (nil syntax-table (15) 6910 . 6911) (nil font-lock-face web-mode-javascript-string-face 6910 . 6911) (nil part-side javascript 6909 . 6910) (nil face (rainbow-delimiters-depth-7-face) 6909 . 6910) (nil part-side javascript 6895 . 6909) (nil part-side javascript 6893 . 6895) (nil face web-mode-keyword-face 6893 . 6895) (nil part-side javascript 6892 . 6893) (nil part-side javascript 6891 . 6892) (nil face (rainbow-delimiters-depth-7-face) 6891 . 6892) (nil part-side javascript 6890 . 6891) (nil part-side javascript 6889 . 6890) (nil face (rainbow-delimiters-depth-7-face) 6889 . 6890) (nil part-side javascript 6882 . 6889) (nil part-side javascript 6881 . 6882) (nil face (rainbow-delimiters-depth-6-face) 6881 . 6882) (nil part-side javascript 6880 . 6881) (nil part-side javascript 6878 . 6880) (nil face web-mode-keyword-face 6878 . 6880) (nil part-side javascript 6865 . 6878) (nil part-side javascript 6864 . 6865) (nil face (rainbow-delimiters-depth-5-face) 6864 . 6865) (nil part-side javascript 6863 . 6864) (nil part-side javascript 6862 . 6863) (nil face (rainbow-delimiters-depth-5-face) 6862 . 6863) (nil part-side javascript 6833 . 6862) (nil part-side javascript 6832 . 6833) (nil face web-mode-variable-name-face 6832 . 6833) (nil part-side javascript 6831 . 6832) (nil part-side javascript 6828 . 6831) (nil face web-mode-keyword-face 6828 . 6831) (nil part-side javascript 6827 . 6828) (nil face (rainbow-delimiters-depth-5-face) 6827 . 6828) (nil part-side javascript 6826 . 6827) (nil part-side javascript 6823 . 6826) (nil face web-mode-keyword-face 6823 . 6826) (nil part-side javascript 6813 . 6823) (nil part-side javascript 6812 . 6813) (nil syntax-table (12) 6812 . 6813) (nil part-side javascript 6791 . 6812) (nil part-token comment 6791 . 6812) (nil font-lock-face web-mode-javascript-comment-face 6791 . 6812) (nil part-side javascript 6787 . 6791) (nil part-token comment 6787 . 6791) (nil font-lock-face web-mode-javascript-comment-face 6787 . 6791) (nil part-side javascript 6764 . 6787) (nil part-token comment 6764 . 6787) (nil font-lock-face web-mode-javascript-comment-face 6764 . 6787) (nil part-side javascript 6763 . 6764) (nil part-token comment 6763 . 6764) (nil syntax-table (11) 6763 . 6764) (nil font-lock-face web-mode-javascript-comment-face 6763 . 6764) (nil part-side javascript 6752 . 6763) (nil part-side javascript 6751 . 6752) (nil face (rainbow-delimiters-depth-4-face) 6751 . 6752) (nil part-side javascript 6750 . 6751) (nil part-side javascript 6749 . 6750) (nil face (rainbow-delimiters-depth-4-face) 6749 . 6750) (nil part-side javascript 6748 . 6749) (nil part-token string 6748 . 6749) (nil syntax-table (15) 6748 . 6749) (nil font-lock-face web-mode-javascript-string-face 6748 . 6749) (nil part-side javascript 6745 . 6748) (nil part-token string 6745 . 6748) (nil font-lock-face web-mode-javascript-string-face 6745 . 6748) (nil part-side javascript 6744 . 6745) (nil part-token string 6744 . 6745) (nil syntax-table (15) 6744 . 6745) (nil font-lock-face web-mode-javascript-string-face 6744 . 6745) (nil part-side javascript 6699 . 6744) (nil part-side javascript 6697 . 6699) (nil face web-mode-keyword-face 6697 . 6699) (nil part-side javascript 6696 . 6697) (nil part-side javascript 6695 . 6696) (nil part-token string 6695 . 6696) (nil syntax-table (15) 6695 . 6696) (nil font-lock-face web-mode-javascript-string-face 6695 . 6696) (nil part-side javascript 6686 . 6695) (nil part-token string 6686 . 6695) (nil font-lock-face web-mode-javascript-string-face 6686 . 6695) (nil part-side javascript 6685 . 6686) (nil part-token string 6685 . 6686) (nil syntax-table (15) 6685 . 6686) (nil font-lock-face web-mode-javascript-string-face 6685 . 6686) (nil part-side javascript 6684 . 6685) (nil face (rainbow-delimiters-depth-4-face) 6684 . 6685) (nil part-side javascript 6683 . 6684) (nil part-side javascript 6681 . 6683) (nil face web-mode-keyword-face 6681 . 6683) (nil part-side javascript 6672 . 6681) (nil part-side javascript 6671 . 6672) (nil face (rainbow-delimiters-depth-4-face) 6671 . 6672) (nil part-side javascript 6663 . 6671) (nil part-side javascript 6662 . 6663) (nil syntax-table (15) 6662 . 6663) (nil part-side javascript 6656 . 6662) (nil part-token string 6656 . 6662) (nil font-lock-face web-mode-javascript-string-face 6656 . 6662) (nil part-side javascript 6655 . 6656) (nil part-token string 6655 . 6656) (nil syntax-table (15) 6655 . 6656) (nil font-lock-face web-mode-javascript-string-face 6655 . 6656) (nil part-side javascript 6643 . 6655) (nil part-side javascript 6642 . 6643) (nil part-token string 6642 . 6643) (nil syntax-table (15) 6642 . 6643) (nil font-lock-face web-mode-javascript-string-face 6642 . 6643) (nil part-side javascript 6637 . 6642) (nil part-token string 6637 . 6642) (nil font-lock-face web-mode-javascript-string-face 6637 . 6642) (nil part-side javascript 6636 . 6637) (nil part-token string 6636 . 6637) (nil syntax-table (15) 6636 . 6637) (nil font-lock-face web-mode-javascript-string-face 6636 . 6637) (nil part-side javascript 6624 . 6636) (nil part-side javascript 6623 . 6624) (nil part-token string 6623 . 6624) (nil syntax-table (15) 6623 . 6624) (nil font-lock-face web-mode-javascript-string-face 6623 . 6624) (nil part-side javascript 6614 . 6623) (nil part-token string 6614 . 6623) (nil font-lock-face web-mode-javascript-string-face 6614 . 6623) (nil part-side javascript 6613 . 6614) (nil part-token string 6613 . 6614) (nil syntax-table (15) 6613 . 6614) (nil font-lock-face web-mode-javascript-string-face 6613 . 6614) (nil part-side javascript 6601 . 6613) (nil part-side javascript 6600 . 6601) (nil part-token string 6600 . 6601) (nil syntax-table (15) 6600 . 6601) (nil font-lock-face web-mode-javascript-string-face 6600 . 6601) (nil part-side javascript 6594 . 6600) (nil part-token string 6594 . 6600) (nil font-lock-face web-mode-javascript-string-face 6594 . 6600) (nil part-side javascript 6593 . 6594) (nil part-token string 6593 . 6594) (nil syntax-table (15) 6593 . 6594) (nil font-lock-face web-mode-javascript-string-face 6593 . 6594) (nil part-side javascript 6581 . 6593) (nil part-side javascript 6580 . 6581) (nil part-token string 6580 . 6581) (nil syntax-table (15) 6580 . 6581) (nil font-lock-face web-mode-javascript-string-face 6580 . 6581) (nil part-side javascript 6575 . 6580) (nil part-token string 6575 . 6580) (nil font-lock-face web-mode-javascript-string-face 6575 . 6580) (nil part-side javascript 6574 . 6575) (nil part-token string 6574 . 6575) (nil syntax-table (15) 6574 . 6575) (nil font-lock-face web-mode-javascript-string-face 6574 . 6575) (nil part-side javascript 6562 . 6574) (nil part-side javascript 6561 . 6562) (nil part-token string 6561 . 6562) (nil syntax-table (15) 6561 . 6562) (nil font-lock-face web-mode-javascript-string-face 6561 . 6562) (nil part-side javascript 6553 . 6561) (nil part-token string 6553 . 6561) (nil font-lock-face web-mode-javascript-string-face 6553 . 6561) (nil part-side javascript 6552 . 6553) (nil part-token string 6552 . 6553) (nil syntax-table (15) 6552 . 6553) (nil font-lock-face web-mode-javascript-string-face 6552 . 6553) (nil part-side javascript 6540 . 6552) (nil part-side javascript 6539 . 6540) (nil part-token string 6539 . 6540) (nil syntax-table (15) 6539 . 6540) (nil font-lock-face web-mode-javascript-string-face 6539 . 6540) (nil part-side javascript 6534 . 6539) (nil part-token string 6534 . 6539) (nil font-lock-face web-mode-javascript-string-face 6534 . 6539) (nil part-side javascript 6533 . 6534) (nil part-token string 6533 . 6534) (nil syntax-table (15) 6533 . 6534) (nil font-lock-face web-mode-javascript-string-face 6533 . 6534) (nil part-side javascript 6522 . 6533) (nil part-side javascript 6521 . 6522) (nil face (rainbow-delimiters-depth-4-face) 6521 . 6522) (nil part-side javascript 6518 . 6521) (nil part-side javascript 6511 . 6518) (nil face web-mode-variable-name-face 6511 . 6518) (nil part-side javascript 6510 . 6511) (nil part-side javascript 6505 . 6510) (nil face web-mode-keyword-face 6505 . 6510) (nil part-side javascript 6479 . 6505) (nil part-side javascript 6475 . 6479) (nil face web-mode-constant-face 6475 . 6479) (nil part-side javascript 6472 . 6475) (nil part-side javascript 6459 . 6472) (nil face web-mode-variable-name-face 6459 . 6472) (nil part-side javascript 6458 . 6459) (nil part-side javascript 6453 . 6458) (nil face web-mode-keyword-face 6453 . 6458) (nil part-side javascript 6444 . 6453) (nil part-side javascript 6443 . 6444) (nil face (rainbow-delimiters-depth-3-face) 6443 . 6444) (nil part-side javascript 6442 . 6443) (nil part-side javascript 6441 . 6442) (nil face (rainbow-delimiters-depth-3-face) 6441 . 6442) (nil part-side javascript 6440 . 6441) (nil face (rainbow-delimiters-depth-3-face) 6440 . 6441) (nil part-side javascript 6425 . 6440) (nil face web-mode-function-name-face 6425 . 6440) (nil part-side javascript 6419 . 6425) (6419 . 7969)) nil (25570 6347 594208 916000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -7873) (#("  " 0 2 (part-side javascript)) . -7840) (#("  " 0 2 (part-side javascript)) . -7832) (#("  " 0 2 (part-side javascript)) . -7794) (#("  " 0 2 (part-side javascript)) . -7755) (#("  " 0 2 (part-side javascript)) . -7714) (#("  " 0 2 (part-side javascript)) . -7671) (#("  " 0 2 (part-side javascript)) . -7661) (#("  " 0 2 (part-side javascript)) . -7651) (#("  " 0 2 (part-side javascript)) . -7608) (#("  " 0 2 (part-side javascript)) . -7534) (#("  " 0 2 (part-side javascript)) . -7487) (#("  " 0 2 (part-side javascript)) . -7434) (#("  " 0 2 (part-side javascript)) . -7399) (#("  " 0 2 (part-side javascript)) . -7302) (#("  " 0 2 (part-side javascript)) . -7287) (#("  " 0 2 (part-side javascript)) . -7279) (#("  " 0 2 (part-side javascript)) . -7271) (#("  " 0 2 (part-side javascript)) . -7237) (#("  " 0 2 (part-side javascript)) . -7203) (#("  " 0 2 (part-side javascript)) . -7186) (#("  " 0 2 (part-side javascript)) . -7176) (#("  " 0 2 (part-side javascript)) . -7114) (#("  " 0 2 (part-side javascript)) . -7065) (#("  " 0 2 (part-side javascript)) . -7055) (#("  " 0 2 (part-side javascript)) . -7045) (#("  " 0 2 (part-side javascript)) . -7002) (#("  " 0 2 (part-side javascript)) . -6983) (#("  " 0 2 (part-side javascript)) . -6971) (#("  " 0 2 (part-side javascript)) . -6899) (#("  " 0 2 (part-side javascript)) . -6844) (#("  " 0 2 (part-side javascript)) . -6791) (#("  " 0 2 (part-side javascript)) . -6733) (#("  " 0 2 (part-side javascript)) . -6653) (#("  " 0 2 (part-side javascript)) . -6645) (#("  " 0 2 (part-side javascript)) . -6631) (#("  " 0 2 (part-side javascript)) . -6614) (#("  " 0 2 (part-side javascript)) . -6593) (#("  " 0 2 (part-side javascript)) . -6575) (#("  " 0 2 (part-side javascript)) . -6558) (#("  " 0 2 (part-side javascript)) . -6538) (#("  " 0 2 (part-side javascript)) . -6521) (#("  " 0 2 (part-side javascript)) . -6495) (#("  " 0 2 (part-side javascript)) . -6445) (#("      " 0 6 (part-side javascript)) . -6419) 6415) nil (25570 6347 594065 926000) 0 nil])
([nil nil ((7280 . 7287)) nil (25570 6347 594055 557000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 7297) (7296 . 7297) (7295 . 7297) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -7295) (7287 . 7296)) nil (25570 6347 594054 272000) 0 nil])
([nil nil ((7296 . 7298)) nil (25570 6347 594052 477000) 0 nil])
([nil nil ((7297 . 7306)) nil (25570 6347 594051 583000) 0 nil])
([nil nil ((7307 . 7325)) nil (25570 6347 594050 672000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -7324) (undo-tree-id186 . -1) 7325) nil (25570 6347 594049 530000) 0 nil])
([nil nil ((7324 . 7326)) nil (25570 6347 594047 352000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -7324) (undo-tree-id184 . -1) (#("." 0 1 (part-side javascript)) . -7325) (undo-tree-id185 . -1) 7326) nil (25570 6347 594046 111000) 0 nil])
([nil nil ((7324 . 7332)) nil (25570 6347 594042 697000) 0 nil])
([nil nil ((7332 . 7342)) nil (25570 6347 594041 834000) 0 nil])
([nil nil ((7335 . 7348) (#("current" 0 7 (part-side javascript)) . -7335) (undo-tree-id181 . -4) (undo-tree-id182 . -7) (undo-tree-id183 . -7) 7342) nil (25570 6347 594040 564000) 0 nil])
([nil nil ((7348 . 7356)) nil (25570 6347 594036 309000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7355) (undo-tree-id180 . -1) 7356) nil (25570 6347 594035 102000) 0 nil])
([nil nil ((7355 . 7357)) nil (25570 6347 594033 60000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -7352) (undo-tree-id175 . -1) (#("e" 0 1 (part-side javascript)) . -7353) (undo-tree-id176 . -1) (#("t" 0 1 (part-side javascript)) . -7354) (undo-tree-id177 . -1) (#("." 0 1 (part-side javascript)) . -7355) (undo-tree-id178 . -1) (#("c" 0 1 (part-side javascript)) . -7356) (undo-tree-id179 . -1) 7357) nil (25570 6347 594031 288000) 0 nil])
([nil nil ((7352 . 7366)) nil (25570 6347 594024 226000) 0 nil])
([nil nil ((7366 . 7371)) nil (25570 6347 594023 378000) 0 nil])
([nil nil ((7370 . 7373)) nil (25570 6347 594022 496000) 0 nil])
([nil nil ((7376 . 7378) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -7376) (7375 . 7377)) nil (25570 6347 594021 461000) 0 nil])
([nil nil ((7379 . 7385) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 7378) (undo-tree-id173 . 8) (7378 . 7386) (#("      " 0 6 (part-side javascript)) . 7378) (undo-tree-id174 . -6) (7377 . 7385)) nil (25570 6347 594019 619000) 0 nil])
([nil nil ((7378 . 7386)) nil (25570 6347 594015 687000) 0 nil])
([nil nil ((7386 . 7399)) nil (25570 6347 594014 817000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7418 . 7419) (nil part-side javascript 7399 . 7419) (7399 . 7419)) nil (25570 6347 594013 598000) 0 nil])
([nil nil ((7419 . 7427)) nil (25570 6347 594012 180000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7426) (undo-tree-id172 . -1) 7427) nil (25570 6347 594010 881000) 0 nil])
([nil nil ((7426 . 7435)) nil (25570 6347 594008 758000) 0 nil])
([nil nil ((7379 . 7387) (#("        " 0 8 (part-side javascript)) . 7378) (undo-tree-id171 . -8) (7386 . 7387)) nil (25570 6347 594007 485000) 0 nil])
([nil nil ((7378 . 7386)) nil (25570 6347 594004 936000) 0 nil])
([nil nil ((7386 . 7395)) nil (25570 6347 594003 893000) 0 nil])
([nil nil ((6438 . 6445)) nil (25570 6347 594002 803000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 6458) (6457 . 6458) (6456 . 6458) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -6456) (6445 . 6457)) nil (25570 6347 594001 245000) 0 nil])
([nil nil ((6457 . 6458)) nil (25570 6347 593999 222000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -6457) (undo-tree-id170 . -1) 6458) nil (25570 6347 593997 605000) 0 nil])
([nil nil ((6457 . 6467)) nil (25570 6347 593995 262000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -6463) (undo-tree-id166 . -1) (#("i" 0 1 (part-side javascript)) . -6464) (undo-tree-id167 . -1) (#("æ" 0 1 (part-side javascript)) . -6465) (undo-tree-id168 . -1) (#("t" 0 1 (part-side javascript)) . -6466) (undo-tree-id169 . -1) 6467) nil (25570 6347 593993 546000) 0 nil])
([nil nil ((6463 . 6469)) nil (25570 6347 593987 118000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6468) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 6469) nil (25570 6347 593985 596000) 0 nil])
([nil nil ((6468 . 6470)) nil (25570 6347 593979 685000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6469) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 6470) nil (25570 6347 593977 360000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -7476) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . -7426) 6469) nil (25570 6347 593954 589000) 0 nil])
([nil nil ((7328 . 7330) (t 25570 6347 602729 377000)) nil (25570 6437 263420 267000) 0 nil])
([nil nil ((7329 . 7339)) nil (25570 6437 263419 41000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -7334) (undo-tree-id187 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -7335) (undo-tree-id188 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -7336) (undo-tree-id189 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -7337) (undo-tree-id190 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -7338) (undo-tree-id191 . -1) 7339) nil (25570 6437 263416 548000) 0 nil])
([nil nil ((7334 . 7335)) nil (25570 6437 263400 11000) 0 nil])
([nil nil ((7336 . 7340)) nil (25570 6437 263398 969000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7352 . 7353) (nil part-side javascript 7340 . 7353) (7340 . 7353)) nil (25570 6437 263397 202000) 0 nil])
([nil nil ((7353 . 7357)) nil (25570 6437 263389 947000) 0 nil])
([nil nil ((2784 . 2791) (t 25570 6437 270603 9000)) nil (25570 6705 391273 682000) 0 nil])
([nil nil ((2791 . 2798)) nil (25570 6705 391272 365000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2794) (undo-tree-id204 . -1) (#("e" 0 1 (part-side javascript)) . -2795) (undo-tree-id205 . -1) (#(" " 0 1 (part-side javascript)) . -2796) (undo-tree-id206 . -1) (#("c" 0 1 (part-side javascript)) . -2797) (undo-tree-id207 . -1) 2798) nil (25570 6705 391270 422000) 0 nil])
([nil nil ((2794 . 2812)) nil (25570 6705 391264 248000) 0 nil])
([nil nil ((2812 . 2819)) nil (25570 6705 391263 175000) 0 nil])
([nil nil ((3811 . 3822)) nil (25570 6705 391262 273000) 0 nil])
([nil nil ((3830 . 3832) (3829 . 3831) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -3829) (3822 . 3830)) nil (25570 6705 391260 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3837 . 3838) (nil part-side javascript 3831 . 3838) (nil part-token string 3831 . 3838) (nil font-lock-face web-mode-javascript-string-face 3831 . 3838) (3831 . 3838)) nil (25570 6705 391258 600000) 0 nil])
([nil nil ((3840 . 3845)) nil (25570 6705 391256 614000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -3844) (undo-tree-id203 . -1) 3845) nil (25570 6705 391255 382000) 0 nil])
([nil nil ((3925 . 3927)) nil (25570 6705 391252 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3935 . 3936) (nil part-side javascript 3935 . 3936) (nil part-token string 3935 . 3936) (nil syntax-table (15) 3935 . 3936) (nil font-lock-face web-mode-javascript-string-face 3935 . 3936) (nil rear-nonsticky t 3934 . 3935) (nil part-side javascript 3934 . 3935) (nil part-token string 3934 . 3935) (nil font-lock-face web-mode-javascript-string-face 3934 . 3935) (nil part-side javascript 3928 . 3934) (nil part-token string 3928 . 3934) (nil font-lock-face web-mode-javascript-string-face 3928 . 3934) (nil part-side javascript 3927 . 3928) (nil part-token string 3927 . 3928) (nil syntax-table (15) 3927 . 3928) (nil font-lock-face web-mode-javascript-string-face 3927 . 3928) (3927 . 3936)) nil (25570 6705 391250 778000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t)) . -3935) (undo-tree-id202 . -1) 3936) nil (25570 6705 391246 17000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -3927) (undo-tree-id201 . -1) 3928) nil (25570 6705 391243 344000) 0 nil])
([nil nil ((3934 . 3938)) nil (25570 6705 391240 950000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -3937) (undo-tree-id200 . -1) 3938) nil (25570 6705 391239 757000) 0 nil])
([nil nil ((4054 . 4056)) nil (25570 6705 391237 529000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4065 . 4066) (nil part-side javascript 4063 . 4066) (nil part-side javascript 4056 . 4063) (nil face web-mode-variable-name-face 4056 . 4063) (4056 . 4066)) nil (25570 6705 391236 194000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript rear-nonsticky t)) . -4065) (undo-tree-id199 . -1) 4066) nil (25570 6705 391233 323000) 0 nil])
([nil nil ((4065 . 4066)) nil (25570 6705 391230 810000) 0 nil])
([nil nil ((4104 . 4106)) nil (25570 6705 391229 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4115 . 4116) (nil part-side javascript 4113 . 4116) (nil part-side javascript 4106 . 4113) (nil face web-mode-variable-name-face 4106 . 4113) (4106 . 4116)) nil (25570 6705 391228 371000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript rear-nonsticky t)) . -4115) (undo-tree-id198 . -1) 4116) nil (25570 6705 391226 224000) 0 nil])
([nil nil ((4115 . 4116)) nil (25570 6705 391223 860000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -4115) (undo-tree-id197 . -1) 4116) nil (25570 6705 391222 727000) 0 nil])
([nil nil ((4115 . 4116)) nil (25570 6705 391220 411000) 0 nil])
([nil nil ((4380 . 4381)) nil (25570 6705 391219 544000) 0 nil])
([nil nil ((4381 . 4382)) nil (25570 6705 391218 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4391 . 4392) (nil part-side javascript 4389 . 4392) (nil part-side javascript 4382 . 4389) (nil face web-mode-variable-name-face 4382 . 4389) (4382 . 4392)) nil (25570 6705 391217 480000) 0 nil])
([nil nil ((4292 . 4303)) nil (25570 6705 391215 685000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4312 . 4313) (nil part-side javascript 4310 . 4313) (nil part-side javascript 4303 . 4310) (nil face web-mode-variable-name-face 4303 . 4310) (4303 . 4313)) nil (25570 6705 391214 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4316 . 4317) (nil rear-nonsticky t 4316 . 4317) (nil part-side javascript 4316 . 4317) (nil face web-mode-variable-name-face 4316 . 4317) (nil part-side javascript 4303 . 4316) (nil face web-mode-variable-name-face 4303 . 4316) (4303 . 4317)) nil (25570 6705 391212 411000) 0 nil])
([nil nil ((4317 . 4318)) nil (25570 6705 391209 956000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript rear-nonsticky t)) . -4327) (undo-tree-id196 . -1) 4328) nil (25570 6705 391208 855000) 0 nil])
([nil nil ((4327 . 4328)) nil (25570 6705 391206 695000) 0 nil])
([nil nil ((#(":" 0 1 (part-side javascript)) . -4325) (undo-tree-id195 . -1) 4326) nil (25570 6705 391205 608000) 0 nil])
([nil nil ((4325 . 4328)) nil (25570 6705 391203 301000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . -4326) (undo-tree-id193 . -1) (#(" " 0 1 (part-side javascript)) . -4327) (undo-tree-id194 . -1) 4328) nil (25570 6705 391201 769000) 0 nil])
([nil nil ((4326 . 4328)) nil (25570 6705 391196 465000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4327) (undo-tree-id192 . -1) 4328) nil (25570 6705 391191 650000) 0 nil])
([nil nil ((7608 . 7609) (t 25570 6705 398198 106000)) nil (25570 7238 887188 392000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7621 . 7622) (nil rear-nonsticky t 7621 . 7622) (nil part-side javascript 7621 . 7622) (nil part-side javascript 7609 . 7621) (7609 . 7622)) nil (25570 7238 887186 997000) 0 nil])
([nil nil ((7591 . 7600)) nil (25570 7238 887185 230000) 0 nil])
([nil nil ((7600 . 7603)) nil (25570 7238 887184 445000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -7591) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(" " 0 1 (part-side javascript)) . -7592) (undo-tree-id292 . -1) (#(" " 0 1 (part-side javascript)) . -7593) (undo-tree-id293 . -1) (#(" " 0 1 (part-side javascript)) . -7594) (undo-tree-id294 . -1) (#(" " 0 1 (part-side javascript)) . -7595) (undo-tree-id295 . -1) (#(" " 0 1 (part-side javascript)) . -7596) (undo-tree-id296 . -1) (#(" " 0 1 (part-side javascript)) . -7597) (undo-tree-id297 . -1) (#(" " 0 1 (part-side javascript)) . -7598) (undo-tree-id298 . -1) (#(" " 0 1 (part-side javascript)) . -7599) (undo-tree-id299 . -1) (#("i" 0 1 (part-side javascript)) . -7600) (undo-tree-id300 . -1) (#("f" 0 1 (face web-mode-keyword-face part-side javascript)) . -7601) (undo-tree-id301 . -1) (#(" " 0 1 (part-side javascript)) . -7602) (undo-tree-id302 . -1) 7603) nil (25570 7238 887181 331000) 0 nil])
([nil nil ((7624 . 7632) (#("        " 0 8 (part-side javascript)) . 7623) (undo-tree-id289 . -8) (7622 . 7632)) nil (25570 7238 887164 947000) 0 nil])
([nil nil ((7632 . 7637)) nil (25570 7238 887162 703000) 0 nil])
([nil nil ((7636 . 7642)) nil (25570 7238 887161 815000) 0 nil])
([nil nil ((7643 . 7661)) nil (25570 7238 887160 960000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7660) (undo-tree-id288 . -1) 7661) nil (25570 7238 887159 919000) 0 nil])
([nil nil ((7660 . 7661)) nil (25570 7238 887157 732000) 0 nil])
([nil nil ((7635 . 7637) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -7635) (7635 . 7636)) nil (25570 7238 887156 689000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 7636)) nil (25570 7238 887155 305000) 0 nil])
([nil nil ((7663 . 7665) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -7663) (7662 . 7664)) nil (25570 7238 887154 204000) 0 nil])
([nil nil ((7666 . 7674) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 7665) (undo-tree-id286 . -8) (undo-tree-id287 . 10) (7673 . 7675) (7664 . 7674)) nil (25570 7238 887152 439000) 0 nil])
([nil nil ((7665 . 7675)) nil (25570 7238 887148 735000) 0 nil])
([nil nil ((7675 . 7680)) nil (25570 7238 887147 849000) 0 nil])
([nil nil ((7679 . 7682)) nil (25570 7238 887146 980000) 0 nil])
([nil nil ((7682 . 7683)) nil (25570 7238 887146 142000) 0 nil])
([nil nil ((7684 . 7703)) nil (25570 7238 887145 199000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -7701) (undo-tree-id284 . -1) (#("p" 0 1 (part-side javascript)) . -7702) (undo-tree-id285 . -1) 7703) nil (25570 7238 887143 815000) 0 nil])
([nil nil ((7622 . 7630)) nil (25570 7238 887130 260000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7629) (undo-tree-id283 . -1) 7630) nil (25570 7238 887129 186000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -7655) (undo-tree-id270 . -1) (#("u" 0 1 (part-side javascript)) . -7656) (undo-tree-id271 . -1) (#("r" 0 1 (part-side javascript)) . -7657) (undo-tree-id272 . -1) (#("r" 0 1 (part-side javascript)) . -7658) (undo-tree-id273 . -1) (#("e" 0 1 (part-side javascript)) . -7659) (undo-tree-id274 . -1) (#("n" 0 1 (part-side javascript)) . -7660) (undo-tree-id275 . -1) (#("t" 0 1 (part-side javascript)) . -7661) (undo-tree-id276 . -1) (#("f" 0 1 (part-side javascript)) . -7662) (undo-tree-id277 . -1) (#("i" 0 1 (part-side javascript)) . -7663) (undo-tree-id278 . -1) (#("l" 0 1 (part-side javascript)) . -7664) (undo-tree-id279 . -1) (#("t" 0 1 (part-side javascript)) . -7665) (undo-tree-id280 . -1) (#("e" 0 1 (part-side javascript)) . -7666) (undo-tree-id281 . -1) (#("r" 0 1 (part-side javascript)) . -7667) (undo-tree-id282 . -1) 7668) nil (25570 7238 887124 616000) 0 nil])
([nil nil ((7655 . 7661)) nil (25570 7238 887107 84000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -7688) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("u" 0 1 (part-side javascript)) . -7689) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("r" 0 1 (part-side javascript)) . -7690) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("r" 0 1 (part-side javascript)) . -7691) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("e" 0 1 (part-side javascript)) . -7692) (undo-tree-id261 . -1) (#("n" 0 1 (part-side javascript)) . -7693) (undo-tree-id262 . -1) (#("t" 0 1 (part-side javascript)) . -7694) (undo-tree-id263 . -1) (#("f" 0 1 (part-side javascript)) . -7695) (undo-tree-id264 . -1) (#("i" 0 1 (part-side javascript)) . -7696) (undo-tree-id265 . -1) (#("l" 0 1 (part-side javascript)) . -7697) (undo-tree-id266 . -1) (#("t" 0 1 (part-side javascript)) . -7698) (undo-tree-id267 . -1) (#("e" 0 1 (part-side javascript)) . -7699) (undo-tree-id268 . -1) (#("r" 0 1 (part-side javascript)) . -7700) (undo-tree-id269 . -1) 7701) nil (25570 7238 887102 903000) 0 nil])
([nil nil ((7664 . 7675)) nil (25570 7238 887070 924000) 0 nil])
([nil nil ((7675 . 7696)) nil (25570 7238 887067 226000) 0 nil])
([nil nil ((7696 . 7704)) nil (25570 7238 887064 269000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7703) (undo-tree-id252 . -1) 7704) nil (25570 7238 887061 879000) 0 nil])
([nil nil ((7727 . 7740)) nil (25570 7238 887053 269000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7739) (undo-tree-id251 . -1) 7740) nil (25570 7238 887050 49000) 0 nil])
([nil nil ((7739 . 7740)) nil (25570 7238 887043 574000) 0 nil])
([nil nil ((7717 . 7719) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -7717) (7717 . 7718)) nil (25570 7238 887041 286000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 7718)) nil (25570 7238 887038 655000) 0 nil])
([nil nil ((7742 . 7744) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -7742) (7741 . 7743)) nil (25570 7238 887036 529000) 0 nil])
([nil nil ((7743 . 7754)) nil (25570 7238 887033 727000) 0 nil])
([nil nil ((7745 . 7755) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 7744) (undo-tree-id249 . -10) (undo-tree-id250 . 12) (7754 . 7756) (7754 . 7755)) nil (25570 7238 887031 314000) 0 nil])
([nil nil ((7744 . 7756)) nil (25570 7238 887023 562000) 0 nil])
([nil nil ((7756 . 7762)) nil (25570 7238 887021 775000) 0 nil])
([nil nil ((7756 . 7768) (#("grand_" 0 6 (part-side javascript)) . -7756) (undo-tree-id247 . -6) (undo-tree-id248 . -6) 7762) nil (25570 7238 887019 310000) 0 nil])
([nil nil ((7768 . 7776)) nil (25570 7238 887011 976000) 0 nil])
([nil nil ((7776 . 7790)) nil (25570 7238 887010 445000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7789) (undo-tree-id246 . -1) 7790) nil (25570 7238 887008 423000) 0 nil])
([nil nil ((7801 . 7812)) nil (25570 7238 887003 927000) 0 nil])
([nil nil ((7821 . 7823) (7820 . 7822) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -7820) (7812 . 7821)) nil (25570 7238 887001 700000) 0 nil])
([nil nil ((7822 . 7827)) nil (25570 7238 886998 756000) 0 nil])
([nil nil ((7828 . 7845)) nil (25570 7238 886996 899000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7844) (undo-tree-id245 . -1) 7845) nil (25570 7238 886994 636000) 0 nil])
([nil nil ((7846 . 7848) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -7846) (7845 . 7847)) nil (25570 7238 886989 850000) 0 nil])
([nil nil ((7849 . 7859) (#("            " 0 12 (face whitespace-trailing part-side javascript)) . 7848) (undo-tree-id243 . -10) (undo-tree-id244 . 12) (7858 . 7860) (7847 . 7859)) nil (25570 7238 886986 402000) 0 nil])
([nil nil ((7848 . 7860)) nil (25570 7238 886978 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7892 . 7893) (nil part-side javascript 7879 . 7893) (nil part-side javascript 7877 . 7879) (nil part-side javascript 7860 . 7877) (7860 . 7893)) nil (25570 7238 886976 704000) 0 nil])
([nil nil ((#("rule" 0 4 (part-side javascript)) . 7873) (undo-tree-id241 . -4) (undo-tree-id242 . -4)) nil (25570 7238 886971 540000) 0 nil])
([nil nil ((7873 . 7875)) nil (25570 7238 886957 236000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -7873) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("u" 0 1 (part-side javascript)) . -7874) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 7875) nil (25570 7238 886952 146000) 0 nil])
([nil nil ((7847 . 7860)) nil (25570 7238 886946 482000) 0 nil])
([nil nil ((7860 . 7872)) nil (25570 7238 886945 608000) 0 nil])
([nil nil ((7872 . 7879)) nil (25570 7238 886944 754000) 0 nil])
([nil nil ((7879 . 7887)) nil (25570 7238 886943 801000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7886) (undo-tree-id236 . -1) 7887) nil (25570 7238 886942 582000) 0 nil])
([nil nil ((7918 . 7922) (7917 . 7919) (#("[" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -7917) (7912 . 7918)) nil (25570 7238 886940 192000) 0 nil])
([nil nil ((#("k" 0 1 (part-side javascript)) . -7920) (undo-tree-id234 . -1) (#("e" 0 1 (part-side javascript)) . -7921) (undo-tree-id235 . -1) 7922) nil (25570 7238 886938 281000) 0 nil])
([nil nil ((7920 . 7928)) nil (25570 7238 886934 987000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7927) (undo-tree-id233 . -1) 7928) nil (25570 7238 886933 869000) 0 nil])
([nil nil ((7966 . 7975)) nil (25570 7238 886931 745000) 0 nil])
([nil nil ((7980 . 7982) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -7980) (7975 . 7981)) nil (25570 7238 886930 576000) 0 nil])
([nil nil ((7983 . 7991) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 7982) (undo-tree-id231 . -8) (undo-tree-id232 . 10) (7990 . 7992) (7981 . 7991)) nil (25570 7238 886928 902000) 0 nil])
([nil nil ((#("        new_parent = currentfilter.parent.parent
" 0 8 (part-side javascript) 8 18 (part-side javascript) 18 20 (part-side javascript) 20 21 (part-side javascript) 21 40 (part-side javascript) 40 41 (part-side javascript rear-nonsticky t) 41 49 (part-side javascript)) . 8042) (undo-tree-id229 . -8) (undo-tree-id230 . -49) (8032 . 8042) (#("        }
" 0 8 (part-side javascript) 8 9 (face (rainbow-delimiters-depth-5-face) part-side javascript) 9 10 (part-side javascript)) . 7983) (7993 . 8042) 8001) nil (25570 7238 886924 835000) 0 nil])
([nil nil ((#("        new_parent = currentfilter.parent.parent
" 0 8 (part-side javascript) 8 18 (part-side javascript) 18 20 (part-side javascript) 20 21 (part-side javascript) 21 40 (part-side javascript) 40 41 (part-side javascript rear-nonsticky t) 41 49 (part-side javascript)) . 8032) (undo-tree-id227 . -8) (undo-tree-id228 . -49) (8031 . 8032) (#("
" 0 1 (part-side javascript)) . 7982) (7983 . 8032) 7991) nil (25570 7238 886919 296000) 0 nil])
([nil nil ((7990 . 7992)) nil (25570 7238 886915 322000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8032) (undo-tree-id226 . -1)) nil (25570 7238 886914 239000) 0 nil])
([nil nil ((6823 . 6824)) nil (25570 7238 886912 116000) 0 nil])
([nil nil ((6824 . 6833)) nil (25570 7238 886911 256000) 0 nil])
([nil nil ((6833 . 6835)) nil (25570 7238 886910 366000) 0 nil])
([nil nil ((6834 . 6842)) nil (25570 7238 886909 433000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6841) (undo-tree-id225 . -1) 6842) nil (25570 7238 886908 289000) 0 nil])
([nil nil ((6842 . 6843)) nil (25570 7238 886905 938000) 0 nil])
([nil nil ((6843 . 6852)) nil (25570 7238 886904 883000) 0 nil])
([nil nil ((6852 . 6854)) nil (25570 7238 886903 677000) 0 nil])
([nil nil ((6853 . 6858)) nil (25570 7238 886902 802000) 0 nil])
([nil nil ((6859 . 6860)) nil (25570 7238 886901 759000) 0 nil])
([nil nil ((6860 . 6869)) nil (25570 7238 886900 835000) 0 nil])
([nil nil ((6869 . 6871)) nil (25570 7238 886899 932000) 0 nil])
([nil nil ((6870 . 6876)) nil (25570 7238 886899 25000) 0 nil])
([nil nil ((#("new_parent" 0 10 (part-side javascript)) . 8046) (undo-tree-id223 . -10) (undo-tree-id224 . -10)) nil (25570 7238 886897 881000) 0 nil])
([nil nil ((8046 . 8058)) nil (25570 7238 886894 411000) 0 nil])
([nil nil ((8061 . 8063) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -8061) (8061 . 8062)) nil (25570 7238 886893 89000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 8062)) nil (25570 7238 886891 210000) 0 nil])
([nil nil ((8089 . 8090)) nil (25570 7238 886889 972000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -8074) (undo-tree-id208 . -1) (#("." 0 1 (part-side javascript)) . -8075) (undo-tree-id209 . -1) (#("p" 0 1 (part-side javascript)) . -8076) (undo-tree-id210 . -1) (#("a" 0 1 (part-side javascript)) . -8077) (undo-tree-id211 . -1) (#("r" 0 1 (part-side javascript)) . -8078) (undo-tree-id212 . -1) (#("e" 0 1 (part-side javascript)) . -8079) (undo-tree-id213 . -1) (#("n" 0 1 (part-side javascript)) . -8080) (undo-tree-id214 . -1) (#("t" 0 1 (part-side javascript rear-nonsticky t)) . -8081) (undo-tree-id215 . -1) (#("." 0 1 (part-side javascript)) . -8082) (undo-tree-id216 . -1) (#("p" 0 1 (part-side javascript)) . -8083) (undo-tree-id217 . -1) (#("a" 0 1 (part-side javascript)) . -8084) (undo-tree-id218 . -1) (#("r" 0 1 (part-side javascript)) . -8085) (undo-tree-id219 . -1) (#("e" 0 1 (part-side javascript)) . -8086) (undo-tree-id220 . -1) (#("n" 0 1 (part-side javascript)) . -8087) (undo-tree-id221 . -1) (#("t" 0 1 (part-side javascript)) . -8088) (undo-tree-id222 . -1) 8089) nil (25570 7238 886884 893000) 0 nil])
([nil nil ((8074 . 8075)) nil (25570 7238 886831 406000) 0 nil])
([nil nil ((6673 . 6680) (t 25570 7238 896827 38000)) nil (25570 7409 179441 823000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 6693) (6692 . 6693) (6691 . 6693) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -6691) (6680 . 6692)) nil (25570 7409 179440 155000) 0 nil])
([nil nil ((6692 . 6705)) nil (25570 7409 179438 45000) 0 nil])
([nil nil ((6693 . 6706) (nil part-token string 6693 . 6694) (nil font-lock-face web-mode-javascript-string-face 6693 . 6694) (nil part-side javascript 6693 . 6694) (6692 . 6694) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -6692) (6692 . 6693)) nil (25570 7409 179436 113000) 0 nil])
([nil nil ((#("g" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6702) (undo-tree-id303 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6703) (undo-tree-id304 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6704) (undo-tree-id305 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6705) (undo-tree-id306 . -1) 6706) nil (25570 7409 179431 784000) 0 nil])
([nil nil ((6702 . 6703)) nil (25570 7409 179418 244000) 0 nil])
([nil nil ((6703 . 6708)) nil (25570 7409 179416 226000) 0 nil])
([nil nil ((6709 . 6711)) nil (25570 7409 179408 600000) 0 nil])
([nil nil ((7699 . 7707) (#("        " 0 8 (part-side javascript)) . 7698) (undo-tree-id315 . -8) (7697 . 7707) (t 25570 7409 193714 153000)) nil (25570 7592 277125 517000) 0 nil])
([nil nil ((7699 . 7707) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 7698) (7698 . 7706) (7698 . 7699)) nil (25570 7592 277122 637000) 0 nil])
([nil nil ((8548 . 8557)) nil (25570 7592 277120 929000) 0 nil])
([nil nil ((8571 . 8573) (8570 . 8572) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -8570) (8557 . 8571)) nil (25570 7592 277119 759000) 0 nil])
([nil nil ((8572 . 8577)) nil (25570 7592 277118 196000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -8570) (undo-tree-id308 . -1) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -8571) (undo-tree-id309 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8572) (undo-tree-id310 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8573) (undo-tree-id311 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8574) (undo-tree-id312 . -1) (#("æ" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8575) (undo-tree-id313 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8576) (undo-tree-id314 . -1) 8577) nil (25570 7592 277115 974000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 8570) (#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 8570)) nil (25570 7592 277104 630000) 0 nil])
([nil nil ((8570 . 8576)) nil (25570 7592 277103 315000) 0 nil])
([nil nil ((8576 . 8597)) nil (25570 7592 277102 417000) 0 nil])
([nil nil ((8597 . 8599)) nil (25570 7592 277101 374000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8598) (undo-tree-id307 . -1) 8599) nil (25570 7592 277099 342000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -7700) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . -7699) 8598) nil (25570 7592 277082 991000) 0 nil])
([nil nil ((#("
        'parent'" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 10 17 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . 6912) (undo-tree-id353 . -17) (undo-tree-id354 . -1) (undo-tree-id355 . -17) (t 25570 7592 286377 884000)) nil (25570 7738 480113 517000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -6911) (undo-tree-id351 . -1) (undo-tree-id352 . -1) 6912) nil (25570 7738 480109 242000) 0 nil])
([nil nil ((8514 . 8523)) nil (25570 7738 480106 290000) 0 nil])
([nil nil ((8523 . 8544)) nil (25570 7738 480105 322000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -8537) (undo-tree-id344 . -1) (#("a" 0 1 (part-side javascript)) . -8538) (undo-tree-id345 . -1) (#("r" 0 1 (part-side javascript)) . -8539) (undo-tree-id346 . -1) (#("e" 0 1 (part-side javascript)) . -8540) (undo-tree-id347 . -1) (#("n" 0 1 (part-side javascript)) . -8541) (undo-tree-id348 . -1) (#("t" 0 1 (part-side javascript)) . -8542) (undo-tree-id349 . -1) (#(" " 0 1 (part-side javascript)) . -8543) (undo-tree-id350 . -1) 8544) nil (25570 7738 480103 275000) 0 nil])
([nil nil ((8537 . 8538)) nil (25570 7738 480094 127000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -8537) (undo-tree-id343 . -1) 8538) nil (25570 7738 480092 933000) 0 nil])
([nil nil ((8537 . 8546)) nil (25570 7738 480090 718000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -8538) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("a" 0 1 (part-side javascript)) . -8539) (undo-tree-id336 . -1) (#("n" 0 1 (part-side javascript)) . -8540) (undo-tree-id337 . -1) (#("t" 0 1 (part-side javascript)) . -8541) (undo-tree-id338 . -1) (#("e" 0 1 (part-side javascript)) . -8542) (undo-tree-id339 . -1) (#(" " 0 1 (part-side javascript)) . -8543) (undo-tree-id340 . -1) (#("0" 0 1 (part-side javascript)) . -8544) (undo-tree-id341 . -1) (#(" " 0 1 (part-side javascript)) . -8545) (undo-tree-id342 . -1) 8546) nil (25570 7738 480088 386000) 0 nil])
([nil nil ((8538 . 8548)) nil (25570 7738 480075 853000) 0 nil])
([nil nil ((8548 . 8551)) nil (25570 7738 480074 834000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -8548) (undo-tree-id331 . -1) (#("l" 0 1 (part-side javascript)) . -8549) (undo-tree-id332 . -1) (#("." 0 1 (part-side javascript)) . -8550) (undo-tree-id333 . -1) 8551) nil (25570 7738 480073 46000) 0 nil])
([nil nil ((8548 . 8554)) nil (25570 7738 480068 113000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -8552) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("a" 0 1 (part-side javascript)) . -8553) (undo-tree-id330 . -1) 8554) nil (25570 7738 480066 471000) 0 nil])
([nil nil ((8552 . 8558)) nil (25570 7738 480060 961000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8557) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 8558) nil (25570 7738 480055 798000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -8579) (undo-tree-id362 . -1) 8580 (t 25570 7738 490752 269000)) nil (25570 7975 695799 459000) 0 nil])
([nil nil ((8579 . 8581) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -8579) (8579 . 8580)) nil (25570 7975 695796 474000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 8580)) nil (25570 7975 695794 914000) 0 nil])
([nil nil ((8580 . 8581)) nil (25570 7975 695793 976000) 0 nil])
([nil nil ((8585 . 8586)) nil (25570 7975 695792 966000) 0 nil])
([nil nil ((8585 . 8586)) nil (25570 7975 695791 707000) 0 nil])
([nil nil ((#("

" 0 1 (part-side javascript) 1 2 (part-side javascript)) . 7680) (undo-tree-id359 . -2) (undo-tree-id360 . -1) (undo-tree-id361 . -2)) nil (25570 7975 695790 165000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -7679) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 7680) nil (25570 7975 695784 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8555 . 8556) (nil part-side javascript 8543 . 8556) (8543 . 8556)) nil (25570 7975 695770 928000) 0 nil])
([nil nil ((8556 . 8557)) nil (25570 7975 695763 281000) 0 nil])
([nil nil ((8274 . 8283) (t 25570 7975 707155 743000)) nil (25570 8326 591149 47000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -8274) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#(" " 0 1 (part-side javascript)) . -8275) (undo-tree-id372 . -1) (#(" " 0 1 (part-side javascript)) . -8276) (undo-tree-id373 . -1) (#(" " 0 1 (part-side javascript)) . -8277) (undo-tree-id374 . -1) (#(" " 0 1 (part-side javascript)) . -8278) (undo-tree-id375 . -1) (#(" " 0 1 (part-side javascript)) . -8279) (undo-tree-id376 . -1) (#(" " 0 1 (part-side javascript)) . -8280) (undo-tree-id377 . -1) (#(" " 0 1 (part-side javascript)) . -8281) (undo-tree-id378 . -1) (#(" " 0 1 (part-side javascript)) . -8282) (undo-tree-id379 . -1) 8283) nil (25570 8326 591146 278000) 0 nil])
([nil nil ((8274 . 8283)) nil (25570 8326 591133 250000) 0 nil])
([nil nil ((8283 . 8301)) nil (25570 8326 591132 363000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8300) (undo-tree-id369 . -1) 8301) nil (25570 8326 591131 153000) 0 nil])
([nil nil ((8289 . 8291) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -8289) (8289 . 8290)) nil (25570 8326 591128 382000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 8290)) nil (25570 8326 591127 25000) 0 nil])
([nil nil ((8301 . 8302)) nil (25570 8326 591126 190000) 0 nil])
([nil nil ((8290 . 8292)) nil (25570 8326 591125 340000) 0 nil])
([nil nil ((8291 . 8297)) nil (25570 8326 591124 466000) 0 nil])
([nil nil ((8298 . 8306)) nil (25570 8326 591123 560000) 0 nil])
([nil nil ((8318 . 8321)) nil (25570 8326 591122 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8333 . 8334) (nil part-side javascript 8321 . 8334) (8321 . 8334)) nil (25570 8326 591121 455000) 0 nil])
([nil nil ((#("
        currentfilter.parent = currentfilter.rule.parent" 0 1 (part-side javascript) 1 29 (part-side javascript) 29 31 (part-side javascript) 31 32 (part-side javascript) 32 44 (part-side javascript) 44 45 (part-side javascript rear-nonsticky t) 45 46 (part-side javascript) 46 57 (part-side javascript)) . 8571) (undo-tree-id363 . -57) (undo-tree-id364 . -25) (undo-tree-id365 . -1) (undo-tree-id366 . -22) (undo-tree-id367 . -32) (undo-tree-id368 . -57)) nil (25570 8326 591118 478000) 0 nil])
([nil nil ((8283 . 8286)) nil (25570 8326 591039 280000) 0 nil])
([nil nil ((7763 . 7769) (t 25570 8326 599461 321000)) nil (25570 8416 394562 878000) 0 nil])
([nil nil ((7688 . 7694)) nil (25570 8416 394555 400000) 0 nil])
([nil nil ((7960 . 7966) (t 25570 8416 407503 982000)) nil (25570 8452 529398 260000) 0 nil])
([nil nil ((#("
        'rolepos'," 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 10 17 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 19 (part-side javascript)) . 6876) (undo-tree-id380 . -19) (undo-tree-id381 . -1) (undo-tree-id382 . -19) (t 25570 8452 539518 190000)) nil (25570 8587 795648 158000) 0 nil])
([nil nil ((#("
      delete currentfilter.rulepos" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 13 (face web-mode-keyword-face part-side javascript) 13 35 (part-side javascript)) . 2784) (undo-tree-id383 . -35) (undo-tree-id384 . -1) (undo-tree-id385 . -35) (t 25570 8587 807558 704000)) nil (25570 8711 698373 8000) 0 nil])
([nil nil ((8084 . 8093) (t 25570 8711 707581 304000)) nil (25570 8906 774832 1000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8120 . 8121) (nil part-side javascript 8097 . 8121) (nil part-side javascript 8093 . 8097) (nil face web-mode-constant-face 8093 . 8097) (8093 . 8121)) nil (25570 8906 774830 376000) 0 nil])
([nil nil ((#("+" 0 1 (part-side javascript)) . -8117) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) 8118) nil (25570 8906 774826 375000) 0 nil])
([nil nil ((8117 . 8118)) nil (25570 8906 774795 837000) 0 nil])
([nil nil ((8033 . 8044) (t 25570 8906 783595 853000)) nil (25570 9044 794575 797000) 0 nil])
([nil nil ((8045 . 8046) (8044 . 8046) (#("{" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -8044) (8044 . 8045)) nil (25570 9044 794574 26000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -8045) (undo-tree-id416 . -1) 8046) nil (25570 9044 794572 273000) 0 nil])
([nil nil ((8045 . 8047)) nil (25570 9044 794570 229000) 0 nil])
([nil nil ((8046 . 8052)) nil (25570 9044 794569 332000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8049) (undo-tree-id413 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8050) (undo-tree-id414 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8051) (undo-tree-id415 . -1) 8052) nil (25570 9044 794567 891000) 0 nil])
([nil nil ((8049 . 8053)) nil (25570 9044 794563 135000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -8052) (undo-tree-id412 . -1) 8053) nil (25570 9044 794562 63000) 0 nil])
([nil nil ((8053 . 8057)) nil (25570 9044 794559 947000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8056) (undo-tree-id411 . -1) 8057) nil (25570 9044 794558 577000) 0 nil])
([nil nil ((8056 . 8059)) nil (25570 9044 794556 384000) 0 nil])
([nil nil ((#("m" 0 1 (part-side javascript)) . -8056) (undo-tree-id408 . -1) (#("," 0 1 (part-side javascript)) . -8057) (undo-tree-id409 . -1) (#(" " 0 1 (part-side javascript)) . -8058) (undo-tree-id410 . -1) 8059) nil (25570 9044 794554 918000) 0 nil])
([nil nil ((8056 . 8070)) nil (25570 9044 794550 399000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8069) (undo-tree-id407 . -1) 8070) nil (25570 9044 794549 178000) 0 nil])
([nil nil ((8070 . 8073)) nil (25570 9044 794546 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8085 . 8086) (nil part-side javascript 8073 . 8086) (8073 . 8086)) nil (25570 9044 794545 658000) 0 nil])
([nil nil ((8033 . 8044)) nil (25570 9044 794544 279000) 0 nil])
([nil nil ((8055 . 8061)) nil (25570 9044 794543 378000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8044) (undo-tree-id405 . -1) (undo-tree-id406 . 1)) nil (25570 9044 794542 174000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript)) . -8044)) nil (25570 9044 794538 533000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 8119) (undo-tree-id402 . -13) (undo-tree-id403 . -13) (undo-tree-id404 . -13)) nil (25570 9044 794536 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8126 . 8127) (nil part-side javascript 8119 . 8127) (8119 . 8127)) nil (25570 9044 794518 272000) 0 nil])
([nil nil ((#("
          const {'parent': _, ...noparent} = currentfilter" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 16 (face web-mode-keyword-face part-side javascript) 16 17 (part-side javascript) 17 18 (face (rainbow-delimiters-depth-6-face) part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 25 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 25 26 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 26 42 (part-side javascript) 42 43 (face (rainbow-delimiters-depth-6-face) part-side javascript) 43 45 (part-side javascript) 45 46 (part-side javascript) 46 58 (part-side javascript) 58 59 (part-side javascript rear-nonsticky t)) . 8033) (undo-tree-id445 . -59) (undo-tree-id446 . -36) (undo-tree-id447 . -1) (undo-tree-id448 . -59) (t 25570 9044 804035 557000)) nil (25570 9374 707603 659000) 0 nil])
([nil nil ((7671 . 7679) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 7670) (7670 . 7678) (7670 . 7671)) nil (25570 9374 707598 286000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7737 . 7738) (nil rear-nonsticky t 7737 . 7738) (nil part-side javascript 7737 . 7738) (nil part-side javascript 7725 . 7737) (nil part-side javascript 7724 . 7725) (nil part-side javascript 7722 . 7724) (nil part-side javascript 7721 . 7722) (nil face (rainbow-delimiters-depth-5-face) 7721 . 7722) (nil part-side javascript 7705 . 7721) (nil part-side javascript 7704 . 7705) (nil part-token string 7704 . 7705) (nil syntax-table (15) 7704 . 7705) (nil font-lock-face web-mode-javascript-string-face 7704 . 7705) (nil part-side javascript 7698 . 7704) (nil part-token string 7698 . 7704) (nil font-lock-face web-mode-javascript-string-face 7698 . 7704) (nil part-side javascript 7697 . 7698) (nil part-token string 7697 . 7698) (nil syntax-table (15) 7697 . 7698) (nil font-lock-face web-mode-javascript-string-face 7697 . 7698) (nil part-side javascript 7696 . 7697) (nil face (rainbow-delimiters-depth-5-face) 7696 . 7697) (nil part-side javascript 7695 . 7696) (nil part-side javascript 7690 . 7695) (nil face web-mode-keyword-face 7690 . 7695) (nil part-side javascript 7680 . 7690) (nil part-side javascript 7679 . 7680) (7679 . 7738)) nil (25570 9374 707595 354000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . 7670) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . 7670) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . 7670) (#("
" 0 1 (part-side javascript)) . 7670) (undo-tree-id444 . -1)) nil (25570 9374 707588 446000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -7669) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 7670) nil (25570 9374 707585 568000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -7683) 7718) nil (25570 9374 707582 373000) 0 nil])
([nil nil ((#("
        if ('parent' in parent) {" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 11 (face web-mode-keyword-face part-side javascript) 11 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-5-face) part-side javascript) 13 14 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 14 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 22 (part-side javascript) 22 24 (face web-mode-keyword-face part-side javascript) 24 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-5-face) part-side javascript) 32 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 7731) (undo-tree-id439 . -34) (undo-tree-id440 . -1) (undo-tree-id441 . -34)) nil (25570 9374 707580 980000) 0 nil])
([nil nil ((7731 . 7740)) nil (25570 9374 707575 823000) 0 nil])
([nil nil ((7824 . 7834) (#("  " 0 2 (part-side javascript)) . -7794) (7825 . 7826)) nil (25570 9374 707574 704000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -7749) (undo-tree-id438 . -2) 7751) nil (25570 9374 707573 196000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7837 . 7838) (nil part-side javascript 7830 . 7838) (7830 . 7838)) nil (25570 9374 707570 947000) 0 nil])
([nil nil ((7830 . 7832) 7838) nil (25570 9374 707569 615000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -8153) (#("  " 0 2 (part-side javascript)) . -8119) (#("  " 0 2 (part-side javascript)) . -8111) (#("  " 0 2 (part-side javascript)) . -8079) (#("  " 0 2 (part-side javascript)) . -8064) (#("  " 0 2 (part-side javascript)) . -8056) (#("  " 0 2 (part-side javascript)) . -8048) (#("  " 0 2 (part-side javascript)) . -7994) (#("  " 0 2 (part-side javascript)) . -7951) (#("  " 0 2 (part-side javascript)) . -7905) (#("  " 0 2 (part-side javascript)) . -7895) (#("  " 0 2 (part-side javascript)) . -7853) 7741) nil (25570 9374 707567 99000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -8049) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#(" " 0 1 (part-side javascript)) . -8050) (undo-tree-id431 . -1) (#(" " 0 1 (part-side javascript)) . -8051) (undo-tree-id432 . -1) (#(" " 0 1 (part-side javascript)) . -8052) (undo-tree-id433 . -1) (#(" " 0 1 (part-side javascript)) . -8053) (undo-tree-id434 . -1) (#(" " 0 1 (part-side javascript)) . -8054) (undo-tree-id435 . -1) (#(" " 0 1 (part-side javascript)) . -8055) (undo-tree-id436 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -8056) (undo-tree-id437 . -1) 8057) nil (25570 9374 707562 390000) 0 nil])
([nil nil ((8050 . 8058) (#("      " 0 6 (part-side javascript)) . 8050) 8059) nil (25570 9374 707550 844000) 0 nil])
([nil nil ((8073 . 8075) 8076) nil (25570 9374 707549 556000) 0 nil])
([nil nil ((8101 . 8109) (#("      " 0 6 (part-side javascript)) . 8101) 8108) nil (25570 9374 707548 380000) 0 nil])
([nil nil ((8111 . 8119) (#("      " 0 6 (part-side javascript)) . 8111) 8120) nil (25570 9374 707546 927000) 0 nil])
([nil nil ((8148 . 8156)) nil (25570 9374 707545 652000) 0 nil])
([nil nil ((8161 . 8163) 8162) nil (25570 9374 707544 699000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript rear-nonsticky t)) . -7839) (undo-tree-id426 . -1) (#(" " 0 1 (part-side javascript)) . -7840) (undo-tree-id427 . -1) (#(" " 0 1 (part-side javascript)) . -7841) (undo-tree-id428 . -1) 7842) nil (25570 9374 707543 69000) 0 nil])
([nil nil ((7839 . 7840)) nil (25570 9374 707538 481000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -7839) (undo-tree-id425 . -1) 7840) nil (25570 9374 707537 411000) 0 nil])
([nil nil ((7839 . 7850)) nil (25570 9374 707535 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7861 . 7862) (nil part-side javascript 7850 . 7862) (7850 . 7862)) nil (25570 9374 707534 233000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 7893) (undo-tree-id422 . -13) (undo-tree-id423 . -13) (undo-tree-id424 . -13)) nil (25570 9374 707532 137000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7900 . 7901) (nil part-side javascript 7893 . 7901) (7893 . 7901)) nil (25570 9374 707457 501000) 0 nil])
([nil nil ((#("currentfilter" 0 12 (part-side javascript) 12 13 (part-side javascript rear-nonsticky t)) . 8041) (undo-tree-id420 . -13) (undo-tree-id421 . -13)) nil (25570 9374 707456 36000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8048 . 8049) (nil part-side javascript 8041 . 8049) (8041 . 8049)) nil (25570 9374 707452 805000) 0 nil])
([nil nil ((7998 . 8009)) nil (25570 9374 707451 594000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8016 . 8017) (nil part-side javascript 8009 . 8017) (8009 . 8017)) nil (25570 9374 707450 565000) 0 nil])
([nil nil ((8017 . 8020)) nil (25570 9374 707449 148000) 0 nil])
([nil nil ((8020 . 8025)) nil (25570 9374 707448 70000) 0 nil])
([nil nil ((8020 . 8032) (#("grand" 0 5 (part-side javascript)) . -8020) (undo-tree-id418 . -5) (undo-tree-id419 . -5) 8025) nil (25570 9374 707445 919000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -8179) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . -7727) (#("     " 0 5 (face whitespace-trailing part-side javascript)) . -7669) (undo-tree-id417 . -5) 8032) nil (25570 9374 707437 419000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8178) (undo-tree-id449 . -1) (t 25570 9374 717124 529000)) nil (25570 9436 216281 743000) 0 nil])
([nil nil ((#("const" 0 5 (face web-mode-keyword-face part-side javascript)) . 7678) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5)) nil (25570 9455 354035 555000) 0 nil] [nil nil ((#("const" 0 5 (face web-mode-keyword-face part-side javascript)) . 7678) (undo-tree-id450 . -5) (undo-tree-id451 . -5) (t 25570 9378 913134 802000)) ((7678 . 7683)) (25570 9435 861818 858000) 0 nil])
([nil nil ((7678 . 7681)) nil (25570 9455 354031 45000) 0 nil])
([nil nil ((7678 . 7681)) ((#("let" 0 3 (face web-mode-keyword-face part-side javascript)) . 7678) (t 25570 9403 145192 758000)) (25570 9403 131882 627000) 0 nil])
([nil nil ((8002 . 8010)) nil (25570 9455 354029 814000) 0 nil])
nil
([nil nil ((#("r" 0 1 (part-side javascript)) . -8004) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("a" 0 1 (part-side javascript)) . -8005) (undo-tree-id462 . -1) (#("n" 0 1 (part-side javascript)) . -8006) (undo-tree-id463 . -1) (#("e" 0 1 (part-side javascript)) . -8007) (undo-tree-id464 . -1) (#("t" 0 1 (part-side javascript)) . -8008) (undo-tree-id465 . -1) (#(" " 0 1 (part-side javascript)) . -8009) (undo-tree-id466 . -1) 8010) nil (25570 9455 354026 956000) 0 nil])
([nil nil ((8004 . 8010)) nil (25570 9455 354014 918000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8009) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) 8010) nil (25570 9455 354009 974000) 0 nil])
([nil nil ((#("
      console.log(\"current filter:\", currentfilter)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 28 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 28 34 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 34 35 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 35 36 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 36 38 (part-side javascript) 38 51 (part-side javascript) 51 52 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 6638) (undo-tree-id474 . -52) (undo-tree-id475 . -1) (undo-tree-id476 . -52) (t 25570 9455 365310 88000)) nil (25570 9636 95498 222000) 0 nil])
([nil nil ((6575 . 6577)) nil (25570 9636 95494 214000) 0 nil])
([nil nil ((6576 . 6577)) nil (25570 9636 95493 312000) 0 nil])
([nil nil ((#("E" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6576) (undo-tree-id473 . -1) 6577) nil (25570 9636 95492 157000) 0 nil])
([nil nil ((6576 . 6583)) nil (25570 9636 95490 10000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6582) (undo-tree-id472 . -1) 6583) nil (25570 9636 95488 736000) 0 nil])
([nil nil ((6582 . 6583)) nil (25570 9636 95486 100000) 0 nil])
([nil nil ((6584 . 6586)) nil (25570 9636 95485 107000) 0 nil])
([nil nil ((8771 . 8780)) nil (25570 9636 95483 736000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8831 . 8832) (nil part-side javascript 8831 . 8832) (nil face (rainbow-delimiters-depth-5-face) 8831 . 8832) (nil part-side javascript 8818 . 8831) (nil part-side javascript 8816 . 8818) (nil part-side javascript 8815 . 8816) (nil part-token string 8815 . 8816) (nil syntax-table (15) 8815 . 8816) (nil font-lock-face web-mode-javascript-string-face 8815 . 8816) (nil part-side javascript 8814 . 8815) (nil part-token string 8814 . 8815) (nil font-lock-face web-mode-javascript-string-face 8814 . 8815) (nil part-side javascript 8808 . 8814) (nil part-token string 8808 . 8814) (nil font-lock-face web-mode-javascript-string-face 8808 . 8814) (nil part-side javascript 8800 . 8808) (nil part-token string 8800 . 8808) (nil font-lock-face web-mode-javascript-string-face 8800 . 8808) (nil part-side javascript 8799 . 8800) (nil part-token string 8799 . 8800) (nil syntax-table (15) 8799 . 8800) (nil font-lock-face web-mode-javascript-string-face 8799 . 8800) (nil part-side javascript 8798 . 8799) (nil face (rainbow-delimiters-depth-5-face) 8798 . 8799) (nil part-side javascript 8795 . 8798) (nil face web-mode-function-call-face 8795 . 8798) (nil part-side javascript 8781 . 8795) (nil part-side javascript 8780 . 8781) (8780 . 8832)) nil (25570 9636 95481 93000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8780) (undo-tree-id470 . -1) (undo-tree-id471 . 1)) nil (25570 9636 95473 295000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -8780)) nil (25570 9636 95456 98000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -6584) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) 6585 (t 25570 9636 109648 429000)) nil (25570 9734 674915 83000) 0 nil])
([nil nil ((6584 . 6585)) nil (25570 9734 674871 431000) 0 nil])
([nil nil ((7983 . 7994) (t 25570 9734 685797 223000)) nil (25570 9833 103096 644000) 0 nil])
([nil nil ((7994 . 7997)) nil (25570 9833 111016 853000) 0 nil])
([nil nil ((#("
          nop" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 3 (part-side javascript) 3 4 (part-side javascript) 4 5 (part-side javascript) 5 6 (part-side javascript) 6 7 (part-side javascript) 7 8 (part-side javascript) 8 9 (part-side javascript) 9 10 (part-side javascript) 10 11 (part-side javascript) 11 12 (part-side javascript) 12 13 (part-side javascript) 13 14 (part-side javascript)) . 7983) (undo-tree-id747 . -14) (undo-tree-id748 . -14) (undo-tree-id749 . -1) (undo-tree-id750 . -14)) nil (25570 9867 504641 553000) 0 nil] [nil nil ((#("t" 0 1 (part-side javascript)) . -7982) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("
" 0 1 (part-side javascript)) . -7983) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#(" " 0 1 (part-side javascript)) . -7984) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#(" " 0 1 (part-side javascript)) . -7985) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#(" " 0 1 (part-side javascript)) . -7986) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#(" " 0 1 (part-side javascript)) . -7987) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#(" " 0 1 (part-side javascript)) . -7988) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#(" " 0 1 (part-side javascript)) . -7989) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#(" " 0 1 (part-side javascript)) . -7990) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (#(" " 0 1 (part-side javascript)) . -7991) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (#(" " 0 1 (part-side javascript)) . -7992) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#(" " 0 1 (part-side javascript)) . -7993) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("n" 0 1 (part-side javascript)) . -7994) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("o" 0 1 (part-side javascript)) . -7995) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#("p" 0 1 (part-side javascript)) . -7996) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 7997) ((7982 . 7997)) (25570 9833 103077 672000) 0 nil])
([nil nil ((7983 . 7994)) nil (25570 9867 504636 685000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 8008 . 8009) (nil part-side javascript 8002 . 8009) (nil rear-nonsticky t 8001 . 8002) (nil part-side javascript 8001 . 8002) (nil part-side javascript 7994 . 8001) (7994 . 8009)) nil (25570 9867 504635 465000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -8003) (undo-tree-id741 . -1) (#("a" 0 1 (part-side javascript)) . -8004) (undo-tree-id742 . -1) (#("r" 0 1 (part-side javascript)) . -8005) (undo-tree-id743 . -1) (#("e" 0 1 (part-side javascript)) . -8006) (undo-tree-id744 . -1) (#("n" 0 1 (part-side javascript)) . -8007) (undo-tree-id745 . -1) (#("t" 0 1 (part-side javascript rear-nonsticky t)) . -8008) (undo-tree-id746 . -1) 8009) nil (25570 9867 504632 408000) 0 nil])
([nil nil ((8003 . 8018)) nil (25570 9867 504624 416000) 0 nil])
([nil nil ((8013 . 8025) (#("grand" 0 5 (part-side javascript)) . -8013) (undo-tree-id739 . -5) (undo-tree-id740 . -5) 8018) nil (25570 9867 504623 60000) 0 nil])
([nil nil ((8025 . 8035)) nil (25570 9867 504619 554000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -8030) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (#("p" 0 1 (part-side javascript)) . -8031) (undo-tree-id735 . -1) (#("o" 0 1 (part-side javascript)) . -8032) (undo-tree-id736 . -1) (#("s" 0 1 (part-side javascript)) . -8033) (undo-tree-id737 . -1) (#(" " 0 1 (part-side javascript)) . -8034) (undo-tree-id738 . -1) 8035) nil (25570 9867 504617 710000) 0 nil])
([nil nil ((8030 . 8035)) nil (25570 9867 504608 467000) 0 nil])
([nil nil ((#("å" 0 1 (part-side javascript)) . -8030) (undo-tree-id728 . -1) (#("p" 0 1 (part-side javascript)) . -8031) (undo-tree-id729 . -1) (#("o" 0 1 (part-side javascript)) . -8032) (undo-tree-id730 . -1) (#("s" 0 1 (part-side javascript)) . -8033) (undo-tree-id731 . -1) (#(" " 0 1 (part-side javascript)) . -8034) (undo-tree-id732 . -1) 8035) nil (25570 9867 504606 685000) 0 nil])
([nil nil ((8030 . 8034)) nil (25570 9867 504599 539000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8033) (undo-tree-id727 . -1) 8034) nil (25570 9867 504598 447000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript)) . -8013) (undo-tree-id715 . -1) (#("r" 0 1 (part-side javascript)) . -8014) (undo-tree-id716 . -1) (#("a" 0 1 (part-side javascript)) . -8015) (undo-tree-id717 . -1) (#("n" 0 1 (part-side javascript)) . -8016) (undo-tree-id718 . -1) (#("d" 0 1 (part-side javascript)) . -8017) (undo-tree-id719 . -1) (#("_" 0 1 (part-side javascript)) . -8018) (undo-tree-id720 . -1) (#("p" 0 1 (part-side javascript)) . -8019) (undo-tree-id721 . -1) (#("a" 0 1 (part-side javascript)) . -8020) (undo-tree-id722 . -1) (#("r" 0 1 (part-side javascript)) . -8021) (undo-tree-id723 . -1) (#("e" 0 1 (part-side javascript)) . -8022) (undo-tree-id724 . -1) (#("n" 0 1 (part-side javascript)) . -8023) (undo-tree-id725 . -1) (#("t" 0 1 (part-side javascript)) . -8024) (undo-tree-id726 . -1) 8025) nil (25570 9867 504593 667000) 0 nil])
([nil nil ((8013 . 8020)) nil (25570 9867 504576 659000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -8019) (undo-tree-id714 . -1) 8020) nil (25570 9867 504571 746000) 0 nil])
([nil nil ((2098 . 2101) (t 25570 9867 509967 245000)) nil (25570 14729 10108 432000) 0 nil])
([nil nil ((#("objNoReference" 0 13 (part-side javascript) 13 14 (part-side javascript rear-nonsticky t)) . 4130) (undo-tree-id769 . -14) (undo-tree-id770 . -14)) nil (25570 14729 10107 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4144 . 4145) (nil part-side javascript 4130 . 4145) (4130 . 4145)) nil (25570 14729 10104 47000) 0 nil])
([nil nil ((#("objNoReference" 0 13 (part-side javascript) 13 14 (part-side javascript rear-nonsticky t)) . 4224) (undo-tree-id767 . -14) (undo-tree-id768 . -14)) nil (25570 14729 10102 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4238 . 4239) (nil part-side javascript 4224 . 4239) (4224 . 4239)) nil (25570 14729 10099 432000) 0 nil])
([nil nil ((4274 . 4275) (#("b" 0 1 (part-side javascript)) . -4274) (undo-tree-id754 . -1) (4275 . 4276) (#("j" 0 1 (part-side javascript)) . -4275) (undo-tree-id755 . -1) (4276 . 4277) (#("N" 0 1 (part-side javascript)) . -4276) (undo-tree-id756 . -1) (4277 . 4278) (#("o" 0 1 (part-side javascript)) . -4277) (undo-tree-id757 . -1) (4278 . 4279) (#("R" 0 1 (part-side javascript)) . -4278) (undo-tree-id758 . -1) (4279 . 4280) (#("e" 0 1 (part-side javascript)) . -4279) (undo-tree-id759 . -1) (4280 . 4281) (#("f" 0 1 (part-side javascript)) . -4280) (undo-tree-id760 . -1) (4281 . 4282) (#("e" 0 1 (part-side javascript)) . -4281) (undo-tree-id761 . -1) (4282 . 4283) (#("r" 0 1 (part-side javascript)) . -4282) (undo-tree-id762 . -1) (4283 . 4284) (#("e" 0 1 (part-side javascript)) . -4283) (undo-tree-id763 . -1) (4284 . 4285) (#("n" 0 1 (part-side javascript)) . -4284) (undo-tree-id764 . -1) (4285 . 4286) (#("c" 0 1 (part-side javascript)) . -4285) (undo-tree-id765 . -1) (4286 . 4287) (#("e" 0 1 (part-side javascript rear-nonsticky t)) . -4286) (undo-tree-id766 . -1) 4287) nil (25570 14729 10094 803000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -4273) (undo-tree-id753 . -1) 4274) nil (25570 14729 10074 1000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4287 . 4288) (nil part-side javascript 4273 . 4288) (4273 . 4288)) nil (25570 14729 10071 224000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288) (#(" " 0 1 (part-side javascript)) . 4288)) nil (25570 14729 10067 802000) 0 nil])
([nil nil ((#("objNoReference" 0 14 (part-side javascript)) . 4337) (undo-tree-id751 . -14) (undo-tree-id752 . -14)) nil (25570 14729 10063 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4351 . 4352) (nil part-side javascript 4337 . 4352) (4337 . 4352)) nil (25570 14729 763172 618000) 0 nil])
([nil nil ((#("objNoReference" 0 14 (part-side javascript)) . 4174) (undo-tree-id811 . -14) (undo-tree-id812 . -1) (undo-tree-id813 . -14) (undo-tree-id814 . -14) (t 25570 14752 600470 972000)) nil (25570 14790 195232 552000) 0 nil] [nil nil ((4300 . 4311)) ((#("
          " 0 1 (part-side javascript) 1 11 (part-side javascript)) . 4300) (undo-tree-id785 . -11) (undo-tree-id786 . -11) (undo-tree-id787 . -1) (undo-tree-id788 . -11) (undo-tree-id789 . -11) (undo-tree-id790 . -11) (undo-tree-id791 . -11) (undo-tree-id792 . -11) (undo-tree-id793 . -11) (undo-tree-id794 . -11) (undo-tree-id795 . -11) (undo-tree-id796 . -11) (undo-tree-id797 . -11) (undo-tree-id798 . -11) (undo-tree-id799 . -1) (undo-tree-id800 . -11) (undo-tree-id801 . -11) (undo-tree-id802 . -11) (undo-tree-id803 . -11) (undo-tree-id804 . -11) (undo-tree-id805 . -11) (undo-tree-id806 . -11) (undo-tree-id807 . -11) (undo-tree-id808 . -11) (undo-tree-id809 . -11) (undo-tree-id810 . -11)) (25570 14729 344392 892000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4188 . 4189) (nil rear-nonsticky t 4188 . 4189) (nil part-side javascript 4188 . 4189) (nil part-side javascript 4174 . 4188) (4174 . 4189)) nil (25570 14790 195214 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4323 . 4324) (nil part-side javascript 4311 . 4324) (4311 . 4324)) ((#("currentfilter" 0 12 (part-side javascript) 12 13 (part-side javascript rear-nonsticky nil)) . 4311) (undo-tree-id773 . -13) (undo-tree-id774 . -13) (undo-tree-id775 . -13) (undo-tree-id776 . -13) (undo-tree-id777 . -13) (undo-tree-id778 . -13) (undo-tree-id779 . -13) (undo-tree-id780 . -13) (undo-tree-id781 . -13) (undo-tree-id782 . -13) (undo-tree-id783 . -13) (undo-tree-id784 . -13) (nil rear-nonsticky t 4323 . 4324)) (25570 14729 12812 652000) 0 nil])
([nil nil ((8969 . 8973) (#("    " 0 4 (part-side javascript)) . 8968) (undo-tree-id869 . -4) (8967 . 8973) (t 25570 14790 208507 399000)) nil (25570 15980 308890 685000) 0 nil])
([nil nil ((4324 . 4326) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -4324) (4324 . 4325)) ((#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 4324) (4324 . 4325) (#("[]" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 4324) (undo-tree-id771 . -1) (undo-tree-id772 . -2)) (25570 14729 10041 78000) 0 nil])
([nil nil ((8968 . 8972)) nil (25570 15980 308888 130000) 0 nil])
nil
([nil nil ((8972 . 8973)) nil (25570 15980 308887 202000) 0 nil])
([nil nil ((8973 . 8988)) nil (25570 15980 308886 228000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -8978) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("s" 0 1 (part-side javascript)) . -8979) (undo-tree-id860 . -1) (#("t" 0 1 (part-side javascript)) . -8980) (undo-tree-id861 . -1) (#("r" 0 1 (part-side javascript)) . -8981) (undo-tree-id862 . -1) (#("i" 0 1 (part-side javascript)) . -8982) (undo-tree-id863 . -1) (#("n" 0 1 (part-side javascript)) . -8983) (undo-tree-id864 . -1) (#("g" 0 1 (part-side javascript)) . -8984) (undo-tree-id865 . -1) (#("i" 0 1 (part-side javascript)) . -8985) (undo-tree-id866 . -1) (#("f" 0 1 (part-side javascript)) . -8986) (undo-tree-id867 . -1) (#("y" 0 1 (part-side javascript)) . -8987) (undo-tree-id868 . -1) 8988) nil (25570 15980 308883 378000) 0 nil])
([nil nil ((8988 . 8990) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -8988) (8978 . 8989)) nil (25570 15980 308867 176000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -8987) (undo-tree-id855 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -8988) (undo-tree-id856 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . 8989)) nil (25570 15980 308865 403000) 0 nil])
([nil nil ((8988 . 8992) (8987 . 8989) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -8987) (8987 . 8988)) nil (25570 15980 308861 770000) 0 nil])
([nil nil ((8994 . 8996) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -8994) (8993 . 8995)) nil (25570 15980 308859 993000) 0 nil])
([nil nil ((8997 . 9001) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 8996) (undo-tree-id853 . -4) (undo-tree-id854 . 6) (9000 . 9002) (8995 . 9001)) nil (25570 15980 308858 241000) 0 nil])
([nil nil ((9002 . 9003)) nil (25570 15980 308854 772000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 9003) (undo-tree-id852 . -1)) nil (25570 15980 308853 772000) 0 nil])
([nil nil ((8997 . 9003) (#("      " 0 6 (part-side javascript)) . 8996) (undo-tree-id851 . -6) (8995 . 9003)) nil (25570 15980 308851 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9293 . 9294) (nil part-side javascript 9293 . 9294) (nil part-side javascript 9289 . 9293) (nil face web-mode-constant-face 9289 . 9293) (nil part-side javascript 9279 . 9289) (nil part-side javascript 9278 . 9279) (nil face (rainbow-delimiters-depth-4-face) 9278 . 9279) (nil part-side javascript 9277 . 9278) (nil face (rainbow-delimiters-depth-5-face) 9277 . 9278) (nil part-side javascript 9269 . 9277) (nil part-side javascript 9263 . 9269) (nil face web-mode-keyword-face 9263 . 9269) (nil part-side javascript 9260 . 9263) (nil part-side javascript 9259 . 9260) (nil face (rainbow-delimiters-depth-6-face) 9259 . 9260) (nil part-side javascript 9255 . 9259) (nil part-side javascript 9254 . 9255) (nil face (rainbow-delimiters-depth-7-face) 9254 . 9255) (nil part-side javascript 9249 . 9254) (nil part-side javascript 9248 . 9249) (nil face (rainbow-delimiters-depth-7-face) 9248 . 9249) (nil part-side javascript 9244 . 9248) (nil face web-mode-function-call-face 9244 . 9248) (nil part-side javascript 9234 . 9244) (nil part-side javascript 9233 . 9234) (nil syntax-table (12) 9233 . 9234) (nil part-side javascript 9218 . 9233) (nil part-token comment 9218 . 9233) (nil font-lock-face web-mode-javascript-comment-face 9218 . 9233) (nil part-side javascript 9216 . 9218) (nil part-token comment 9216 . 9218) (nil font-lock-face web-mode-javascript-comment-face 9216 . 9218) (nil part-side javascript 9202 . 9216) (nil part-token comment 9202 . 9216) (nil font-lock-face web-mode-javascript-comment-face 9202 . 9216) (nil part-side javascript 9201 . 9202) (nil part-token comment 9201 . 9202) (nil syntax-table (11) 9201 . 9202) (nil font-lock-face web-mode-javascript-comment-face 9201 . 9202) (nil part-side javascript 9194 . 9201) (nil part-side javascript 9188 . 9194) (nil face web-mode-keyword-face 9188 . 9194) (nil part-side javascript 9187 . 9188) (nil part-side javascript 9186 . 9187) (nil face (rainbow-delimiters-depth-7-face) 9186 . 9187) (nil part-side javascript 9185 . 9186) (nil face (rainbow-delimiters-depth-8-face) 9185 . 9186) (nil part-side javascript 9180 . 9185) (nil part-side javascript 9179 . 9180) (nil face (rainbow-delimiters-depth-8-face) 9179 . 9180) (nil part-side javascript 9171 . 9179) (nil face web-mode-function-call-face 9171 . 9179) (nil part-side javascript 9165 . 9171) (nil part-side javascript 9164 . 9165) (nil face (rainbow-delimiters-depth-7-face) 9164 . 9165) (nil part-side javascript 9163 . 9164) (nil part-side javascript 9161 . 9163) (nil face web-mode-keyword-face 9161 . 9163) (nil part-side javascript 9157 . 9161) (nil part-side javascript 9156 . 9157) (nil syntax-table (12) 9156 . 9157) (nil part-side javascript 9116 . 9156) (nil part-token comment 9116 . 9156) (nil font-lock-face web-mode-javascript-comment-face 9116 . 9156) (nil part-side javascript 9115 . 9116) (nil part-token comment 9115 . 9116) (nil syntax-table (11) 9115 . 9116) (nil font-lock-face web-mode-javascript-comment-face 9115 . 9116) (nil part-side javascript 9110 . 9115) (nil part-side javascript 9109 . 9110) (nil face (rainbow-delimiters-depth-6-face) 9109 . 9110) (nil part-side javascript 9108 . 9109) (nil part-side javascript 9107 . 9108) (nil face (rainbow-delimiters-depth-6-face) 9107 . 9108) (nil part-side javascript 9103 . 9107) (nil face web-mode-constant-face 9103 . 9107) (nil part-side javascript 9089 . 9103) (nil part-side javascript 9088 . 9089) (nil part-token string 9088 . 9089) (nil syntax-table (15) 9088 . 9089) (nil font-lock-face web-mode-javascript-string-face 9088 . 9089) (nil part-side javascript 9082 . 9088) (nil part-token string 9082 . 9088) (nil font-lock-face web-mode-javascript-string-face 9082 . 9088) (nil part-side javascript 9081 . 9082) (nil part-token string 9081 . 9082) (nil syntax-table (15) 9081 . 9082) (nil font-lock-face web-mode-javascript-string-face 9081 . 9082) (nil part-side javascript 9070 . 9081) (nil part-side javascript 9064 . 9070) (nil face web-mode-keyword-face 9064 . 9070) (nil part-side javascript 9063 . 9064) (nil face (rainbow-delimiters-depth-6-face) 9063 . 9064) (nil part-side javascript 9062 . 9063) (nil part-side javascript 9060 . 9062) (nil face web-mode-keyword-face 9060 . 9062) (nil part-side javascript 9057 . 9060) (nil part-side javascript 9056 . 9057) (nil face (rainbow-delimiters-depth-5-face) 9056 . 9057) (nil part-side javascript 9052 . 9056) (nil part-side javascript 9051 . 9052) (nil face (rainbow-delimiters-depth-5-face) 9051 . 9052) (nil part-side javascript 9041 . 9051) (nil part-side javascript 9040 . 9041) (nil face (rainbow-delimiters-depth-5-face) 9040 . 9041) (nil part-side javascript 9034 . 9040) (nil part-side javascript 9033 . 9034) (nil face (rainbow-delimiters-depth-4-face) 9033 . 9034) (nil part-side javascript 9024 . 9033) (nil face web-mode-function-call-face 9024 . 9033) (nil part-side javascript 9017 . 9024) (nil part-side javascript 9016 . 9017) (nil face (rainbow-delimiters-depth-4-face) 9016 . 9017) (nil part-side javascript 9015 . 9016) (nil face (rainbow-delimiters-depth-4-face) 9015 . 9016) (nil part-side javascript 9012 . 9015) (nil part-side javascript 9007 . 9012) (nil face web-mode-variable-name-face 9007 . 9012) (nil part-side javascript 9006 . 9007) (nil part-side javascript 9003 . 9006) (nil face web-mode-keyword-face 9003 . 9006) (9003 . 9294)) nil (25570 15980 308843 290000) 0 nil])
([nil nil ((9335 . 9341) (9325 . 9331) (9303 . 9311) (#("  " 0 2 (part-side javascript)) . 9303) (9293 . 9301) (#("  " 0 2 (part-side javascript)) . 9293) (9264 . 9274) (#("    " 0 4 (part-side javascript)) . 9264) (9221 . 9231) (#("    " 0 4 (part-side javascript)) . 9221) (9175 . 9185) (#("    " 0 4 (part-side javascript)) . 9175) (9123 . 9133) (#("    " 0 4 (part-side javascript)) . 9123) (9064 . 9072) (#("  " 0 2 (part-side javascript)) . 9064) (9019 . 9025) 8997) nil (25570 15980 308816 454000) 0 nil])
([nil nil ((9025 . 9029)) nil (25570 15980 308812 17000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -9026) (undo-tree-id848 . -1) (#("t" 0 1 (part-side javascript)) . -9027) (undo-tree-id849 . -1) (#(" " 0 1 (part-side javascript)) . -9028) (undo-tree-id850 . -1) 9029) nil (25570 15980 308810 528000) 0 nil])
([nil nil ((9026 . 9027)) nil (25570 15980 308806 106000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -9025) (undo-tree-id846 . -1) (#("c" 0 1 (part-side javascript)) . -9026) (undo-tree-id847 . -1) 9027) nil (25570 15980 308804 901000) 0 nil])
([nil nil ((9025 . 9031)) nil (25570 15980 308801 527000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -9025) (undo-tree-id840 . -1) (#("s" 0 1 (part-side javascript)) . -9026) (undo-tree-id841 . -1) (#("o" 0 1 (part-side javascript)) . -9027) (undo-tree-id842 . -1) (#("n" 0 1 (part-side javascript)) . -9028) (undo-tree-id843 . -1) (#("t" 0 1 (part-side javascript)) . -9029) (undo-tree-id844 . -1) (#(" " 0 1 (part-side javascript)) . -9030) (undo-tree-id845 . -1) 9031) nil (25570 15980 308799 526000) 0 nil])
([nil nil ((9025 . 9026)) nil (25570 15980 308791 300000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -9025) (undo-tree-id839 . -1) 9026) nil (25570 15980 308790 137000) 0 nil])
([nil nil ((9025 . 9039)) nil (25570 15980 308787 861000) 0 nil])
([nil nil ((9234 . 9244)) nil (25570 15980 308787 0) 0 nil])
([nil nil ((9379 . 9385)) nil (25570 15980 308786 0) 0 nil])
([nil nil ((9385 . 9398)) nil (25570 15980 308784 924000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9397) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) 9398) nil (25570 15980 308782 586000) 0 nil])
([nil nil ((#("    " 0 4 (part-side javascript)) . -9394) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . -9234) 9408) nil (25570 15980 308767 288000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 8995) (undo-tree-id870 . -1) (t 25570 15980 325467 459000)) nil (25570 16173 515370 91000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -9053) (undo-tree-id871 . -1) (#("i" 0 1 (part-side javascript)) . -9054) (undo-tree-id872 . -1) (#("r" 0 1 (part-side javascript)) . -9055) (undo-tree-id873 . -1) (#("c" 0 1 (part-side javascript)) . -9056) (undo-tree-id874 . -1) 9057 (t 25570 16173 525634 344000)) nil (25570 16362 414442 717000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9056 . 9057) (nil part-side javascript 9053 . 9057) (9053 . 9057)) nil (25570 16362 414422 939000) 0 nil])
([nil nil ((9017 . 9024)) nil (25570 16362 414421 55000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 9037) (9036 . 9037) (9035 . 9037) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9035) (9024 . 9036)) nil (25570 16362 414417 422000) 0 nil])
([nil nil ((9036 . 9040)) nil (25570 16362 414406 336000) 0 nil])
([nil nil ((9041 . 9048) (t 25570 16362 429800 452000)) nil (25570 16452 805165 767000) 0 nil])
([nil nil ((9052 . 9057) (9051 . 9053) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9051) (9048 . 9052)) nil (25570 16452 805164 234000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9056) (undo-tree-id909 . -1) 9057) nil (25570 16452 805162 553000) 0 nil])
([nil nil ((9058 . 9060) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9058) (9057 . 9059)) nil (25570 16452 805160 250000) 0 nil])
([nil nil ((9059 . 9066)) nil (25570 16452 805158 867000) 0 nil])
([nil nil ((#("      const nfilt = JSON.stringify(filt, (key, value) => {
" 0 6 (part-side javascript) 6 11 (face web-mode-keyword-face part-side javascript) 11 12 (part-side javascript) 12 17 (face web-mode-variable-name-face part-side javascript) 17 20 (part-side javascript) 20 24 (part-side javascript) 24 25 (part-side javascript) 25 34 (face web-mode-function-call-face part-side javascript) 34 35 (face (rainbow-delimiters-depth-6-face) part-side javascript) 35 38 (part-side javascript) 38 39 (part-side javascript rear-nonsticky t) 39 41 (part-side javascript) 41 42 (face (rainbow-delimiters-depth-7-face) part-side javascript) 42 52 (part-side javascript) 52 53 (face (rainbow-delimiters-depth-7-face) part-side javascript) 53 57 (part-side javascript) 57 58 (face (rainbow-delimiters-depth-7-face) part-side javascript) 58 59 (part-side javascript)) . 9127) (undo-tree-id907 . -35) (9119 . 9127) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-4-face) part-side javascript) 7 8 (part-side javascript)) . 9060) (undo-tree-id908 . -6) (9068 . 9127) 9066) nil (25570 16452 805157 496000) 0 nil])
([nil nil ((#("        if (typeof value === 'object' && value !== null) {
" 0 8 (part-side javascript) 8 10 (face web-mode-keyword-face part-side javascript) 10 11 (part-side javascript) 11 12 (face (rainbow-delimiters-depth-7-face) part-side javascript) 12 18 (face web-mode-keyword-face part-side javascript) 18 29 (part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 30 36 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 36 37 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 37 51 (part-side javascript) 51 55 (face web-mode-constant-face part-side javascript) 55 56 (face (rainbow-delimiters-depth-7-face) part-side javascript) 56 57 (part-side javascript) 57 58 (face (rainbow-delimiters-depth-7-face) part-side javascript) 58 59 (part-side javascript)) . 9186) (undo-tree-id905 . -58) (9178 . 9186) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-6-face) part-side javascript) 7 8 (part-side javascript)) . 9119) (undo-tree-id906 . -6) (9127 . 9186) 9125) nil (25570 16452 805153 481000) 0 nil])
([nil nil ((#("          // Duplicate reference found, discard key
" 0 10 (part-side javascript) 10 11 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 11 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 52 (syntax-table (12) part-side javascript)) . 9238) (9230 . 9238) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9178) (undo-tree-id904 . -6) (9186 . 9238) 9184) nil (25570 16452 805149 319000) 0 nil])
([nil nil ((#("          if (cache.includes(value)) return;
" 0 10 (part-side javascript) 10 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-7-face) part-side javascript) 14 20 (part-side javascript) 20 28 (face web-mode-function-call-face part-side javascript) 28 29 (face (rainbow-delimiters-depth-8-face) part-side javascript) 29 34 (part-side javascript) 34 35 (face (rainbow-delimiters-depth-8-face) part-side javascript) 35 36 (face (rainbow-delimiters-depth-7-face) part-side javascript) 36 37 (part-side javascript) 37 43 (face web-mode-keyword-face part-side javascript) 43 45 (part-side javascript)) . 9283) (9275 . 9283) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9230) (undo-tree-id903 . -6) (9238 . 9283) 9236) nil (25570 16452 805145 902000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 9284) (9276 . 9284) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9275) (undo-tree-id902 . -6) (9283 . 9284) 9281) nil (25570 16452 805142 784000) 0 nil])
([nil nil ((#("          // Store value in our collection
" 0 10 (part-side javascript) 10 11 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 11 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 25 27 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 27 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 42 43 (syntax-table (12) part-side javascript)) . 9327) (9319 . 9327) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9276) (9284 . 9327) 9282) nil (25570 16452 805138 690000) 0 nil])
([nil nil ((#("          cache.push(value);
" 0 16 (part-side javascript) 16 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-7-face) part-side javascript) 21 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-7-face) part-side javascript) 27 29 (part-side javascript)) . 9356) (9348 . 9356) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9319) (undo-tree-id901 . -6) (9327 . 9356) 9325) nil (25570 16452 805136 681000) 0 nil])
([nil nil ((#("        }
" 0 8 (part-side javascript) 8 9 (face (rainbow-delimiters-mismatched-face) part-side javascript) 9 10 (part-side javascript)) . 9366) (9358 . 9366) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-7-face) part-side javascript) 7 8 (part-side javascript)) . 9348) (undo-tree-id900 . -6) (9356 . 9366) 9354) nil (25570 16452 805133 707000) 0 nil])
([nil nil ((#("        return value;
" 0 8 (part-side javascript) 8 14 (face web-mode-keyword-face part-side javascript) 14 22 (part-side javascript)) . 9388) (9380 . 9388) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-6-face) part-side javascript) 7 8 (part-side javascript)) . 9358) (undo-tree-id899 . -6) (9366 . 9388) 9364) nil (25570 16452 805130 710000) 0 nil])
([nil nil ((#("      });
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-3-face) part-side javascript) 7 8 (face (rainbow-delimiters-mismatched-face) part-side javascript) 8 10 (part-side javascript)) . 9398) (9390 . 9398) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-6-face) part-side javascript) 7 8 (part-side javascript)) . 9380) (undo-tree-id898 . -6) (9388 . 9398) 9386) nil (25570 16452 805127 699000) 0 nil])
([nil nil ((#("      cache = null;
" 0 6 (part-side javascript) 6 14 (part-side javascript) 14 18 (face web-mode-constant-face part-side javascript) 18 19 (part-side javascript rear-nonsticky t) 19 20 (part-side javascript)) . 9418) (undo-tree-id896 . -19) (9410 . 9418) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-4-face) part-side javascript) 7 8 (part-side javascript)) . 9390) (undo-tree-id897 . -6) (9398 . 9418) 9396) nil (25570 16452 805124 458000) 0 nil])
([nil nil ((#("      return nfilt
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 18 (part-side javascript) 18 19 (part-side javascript)) . 9437) (undo-tree-id894 . -9) (9429 . 9437) (#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-4-face) part-side javascript) 7 8 (part-side javascript)) . 9410) (undo-tree-id895 . -6) (9418 . 9437) 9416) nil (25570 16452 805120 304000) 0 nil])
([nil nil ((#("      }
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-3-face) part-side javascript) 7 8 (part-side javascript)) . 9437) (undo-tree-id891 . -8) (undo-tree-id892 . -6) (undo-tree-id893 . -8) (9418 . 9437) (#("      return nfilt
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 18 (part-side javascript) 18 19 (part-side javascript)) . 9410) (9429 . 9437) 9435) nil (25570 16452 805116 261000) 0 nil])
([nil nil ((9408 . 9416) (#("      " 0 6 (part-side javascript)) . 9408) (9396 . 9404) (#("      " 0 6 (part-side javascript)) . 9396) (9380 . 9382) (9368 . 9370) (9339 . 9341) (9294 . 9296) (9246 . 9248) (9192 . 9194) (9129 . 9131) (9060 . 9068) (#("      " 0 6 (part-side javascript)) . 9060) 9042) nil (25570 16452 805110 637000) 0 nil])
([nil nil ((#("const " 0 5 (face web-mode-keyword-face part-side javascript) 5 6 (part-side javascript)) . 9068) (undo-tree-id889 . -6) (undo-tree-id890 . -6)) nil (25570 16452 805106 824000) 0 nil])
([nil nil ((9017 . 9024)) nil (25570 16452 805103 788000) 0 nil])
([nil nil ((9024 . 9030)) nil (25570 16452 805102 851000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -9024) (undo-tree-id883 . -1) (#("o" 0 1 (part-side javascript)) . -9025) (undo-tree-id884 . -1) (#("n" 0 1 (part-side javascript)) . -9026) (undo-tree-id885 . -1) (#("s" 0 1 (part-side javascript)) . -9027) (undo-tree-id886 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -9028) (undo-tree-id887 . -1) (#(" " 0 1 (part-side javascript)) . -9029) (undo-tree-id888 . -1) 9030) nil (25570 16452 805100 800000) 0 nil])
([nil nil ((9036 . 9038) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9036) (9024 . 9037)) nil (25570 16452 805091 577000) 0 nil])
([nil nil ((9038 . 9040)) nil (25570 16452 805089 458000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9039) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) 9040) nil (25570 16452 805084 199000) 0 nil])
([nil nil ((9453 . 9460) (t 25570 16452 813880 670000)) nil (25570 16533 853334 23000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 9473) (9472 . 9473) (9471 . 9473) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9471) (9460 . 9472)) nil (25570 16533 853332 92000) 0 nil])
([nil nil ((9472 . 9474)) nil (25570 16533 853330 244000) 0 nil])
([nil nil ((9473 . 9483)) nil (25570 16533 853329 349000) 0 nil])
([nil nil ((9484 . 9491)) nil (25570 16533 853328 524000) 0 nil])
([nil nil ((9058 . 9060)) nil (25570 16533 853327 662000) 0 nil])
([nil nil ((9059 . 9062)) nil (25570 16533 853326 775000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -9060) (undo-tree-id911 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -9061) (undo-tree-id912 . -1) 9062) nil (25570 16533 853325 417000) 0 nil])
([nil nil ((9060 . 9069)) nil (25570 16533 853321 232000) 0 nil])
([nil nil ((9070 . 9072)) nil (25570 16533 853320 304000) 0 nil])
([nil nil ((9070 . 9071)) nil (25570 16533 853319 256000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9070) (undo-tree-id910 . -1) 9071) nil (25570 16533 853317 239000) 0 nil])
([nil nil ((9069 . 9070)) nil (25570 16533 853308 945000) 0 nil])
([nil nil ((9498 . 9499)) nil (25570 16533 853302 381000) 0 nil])
([nil nil ((#("typeof value === 'object' && value !== null" 0 6 (face web-mode-keyword-face part-side javascript) 6 17 (part-side javascript) 17 18 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 18 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 24 25 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 25 39 (part-side javascript) 39 43 (face web-mode-constant-face part-side javascript)) . 9166) (undo-tree-id921 . -43) (undo-tree-id922 . -43) (t 25570 16533 865952 939000)) nil (25570 16707 784266 111000) 0 nil])
([nil nil ((9166 . 9175)) nil (25570 16707 784262 863000) 0 nil])
([nil nil ((9174 . 9181)) nil (25570 16707 784261 925000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -9180) (undo-tree-id920 . -1) 9181) nil (25570 16707 784260 776000) 0 nil])
([nil nil ((9002 . 9004)) nil (25570 16707 784258 475000) 0 nil])
([nil nil ((9254 . 9256) (#("(" 0 1 (face (rainbow-delimiters-depth-9-face) part-side javascript)) . -9254) (9254 . 9255) (9253 . 9255) (#("(" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -9253) (9253 . 9254)) nil (25570 16707 784257 34000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . -9253) (undo-tree-id918 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-8-face) part-side javascript)) . 9254) (#("(" 0 1 (face (rainbow-delimiters-depth-9-face) part-side javascript)) . -9254) (undo-tree-id919 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-9-face) part-side javascript)) . 9255)) nil (25570 16707 784254 424000) 0 nil])
([nil nil ((9253 . 9255)) nil (25570 16707 784250 629000) 0 nil])
([nil nil ((9348 . 9350)) nil (25570 16707 784249 654000) 0 nil])
([nil nil ((9186 . 9199)) nil (25570 16707 784248 708000) 0 nil])
([nil nil ((9199 . 9205)) nil (25570 16707 784247 750000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -9202) (undo-tree-id915 . -1) (#("u" 0 1 (part-side javascript)) . -9203) (undo-tree-id916 . -1) (#("n" 0 1 (part-side javascript)) . -9204) (undo-tree-id917 . -1) 9205) nil (25570 16707 784246 211000) 0 nil])
([nil nil ((9202 . 9206)) nil (25570 16707 784240 977000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9205) (undo-tree-id914 . -1) 9206) nil (25570 16707 784239 364000) 0 nil])
([nil nil ((9205 . 9207)) nil (25570 16707 784235 844000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9206) (undo-tree-id913 . -1) 9207) nil (25570 16707 784230 787000) 0 nil])
([nil nil ((9445 . 9448) (t 25570 16707 794108 863000)) nil (25570 16812 39758 468000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . 9038) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 9038) (t 25570 16729 298128 195000)) nil (25570 17105 486053 503000) 0 nil] [nil nil ((9038 . 9050) (t 25570 16729 298128 195000)) ((#("json.stringi" 0 5 (part-side javascript) 5 12 (part-side javascript)) . 9038) (undo-tree-id926 . -12) (undo-tree-id927 . -12) (undo-tree-id928 . -12) (undo-tree-id929 . -12) (undo-tree-id930 . -12) (undo-tree-id931 . -12) (undo-tree-id932 . -12) (undo-tree-id933 . -12) (undo-tree-id934 . -12) (undo-tree-id935 . -12)) (25570 16811 715170 988000) 0 nil])
([nil nil ((9038 . 9043)) nil (25570 17105 486052 219000) 0 nil])
([nil nil ((9043 . 9052) (#("stringi" 0 7 (part-side javascript)) . -9043) (undo-tree-id923 . -7) (undo-tree-id924 . -7) 9050) ((9043 . 9050) (#("stringify" 0 9 (part-side javascript)) . 9043) (undo-tree-id925 . -9)) (25570 16811 714407 791000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9042) (undo-tree-id954 . -1) 9043) nil (25570 17105 486050 994000) 0 nil])
nil
([nil nil ((9038 . 9046)) nil (25570 17105 486048 799000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -9045) (undo-tree-id953 . -1) 9046) nil (25570 17105 486047 698000) 0 nil])
([nil nil ((9052 . 9054) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9052) (9045 . 9053)) nil (25570 17105 486045 118000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 9053)) nil (25570 17105 486043 531000) 0 nil])
([nil nil ((9057 . 9058)) nil (25570 17105 486042 587000) 0 nil])
([nil nil ((#("            // Duplicate reference found, discard key
            //if (cache.includes(value)) return;

            // Store value in our collection
            //cache.push(value);" 0 12 (part-side javascript) 12 13 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 13 53 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 53 54 (syntax-table (12) part-side javascript) 54 66 (part-side javascript) 66 67 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 67 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 70 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 70 71 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 71 72 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 72 78 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 78 86 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 86 87 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 87 92 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 93 94 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 94 95 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 95 101 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 101 102 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 102 103 (syntax-table (12) part-side javascript) 103 104 (part-side javascript) 104 116 (part-side javascript) 116 117 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 117 131 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 131 133 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 133 148 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 148 149 (syntax-table (12) part-side javascript) 149 161 (part-side javascript) 161 162 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 162 169 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 169 173 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 173 174 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 174 179 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 179 180 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 180 181 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9225) (undo-tree-id949 . -181) (undo-tree-id950 . -54) (undo-tree-id951 . -54) (undo-tree-id952 . -181)) nil (25570 17105 486041 173000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -9224) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) 9225) nil (25570 17105 486035 323000) 0 nil])
([nil nil ((#("
        // cache = null;" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 24 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 24 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript rear-nonsticky t)) . 9272) (undo-tree-id941 . -25) (undo-tree-id942 . -1) (undo-tree-id943 . -25)) nil (25570 17105 486028 200000) 0 nil])
([nil nil ((#("
      //var cache = [];" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 8 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 8 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 13 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 13 18 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 18 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 21 22 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 22 23 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 23 24 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 8995) (undo-tree-id936 . -24) (undo-tree-id937 . -7) (undo-tree-id938 . -24) (undo-tree-id939 . -1) (undo-tree-id940 . -24)) nil (25570 17105 486019 457000) 0 nil])
([nil nil ((1064 . 1068) (#("    " 0 4 (part-side javascript)) . 1063) (undo-tree-id960 . -4) (1063 . 1068) (#("    " 0 4 (part-side javascript)) . 1062) (undo-tree-id961 . -4) (1062 . 1067) (#("    " 0 4 (part-side javascript)) . 1061) (undo-tree-id962 . -4) (1061 . 1066) (#("    " 0 4 (face whitespace-trailing part-side javascript)) . 1060) (1060 . 1064) (1060 . 1061) (t 25570 17105 498468 118000)) nil (25570 17274 539598 243000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2882 . 2883) (nil part-side javascript 2882 . 2883) (nil part-side javascript 2881 . 2882) (nil face (rainbow-delimiters-depth-3-face) 2881 . 2882) (nil part-side javascript 2875 . 2881) (nil part-side javascript 2874 . 2875) (nil part-side javascript 2873 . 2874) (nil face (rainbow-delimiters-depth-4-face) 2873 . 2874) (nil part-side javascript 2840 . 2873) (nil part-side javascript 2836 . 2840) (nil face web-mode-constant-face 2836 . 2840) (nil part-side javascript 2825 . 2836) (nil part-side javascript 2824 . 2825) (nil face (rainbow-delimiters-depth-5-face) 2824 . 2825) (nil part-side javascript 2811 . 2824) (nil part-side javascript 2810 . 2811) (nil face (rainbow-delimiters-depth-5-face) 2810 . 2811) (nil part-side javascript 2800 . 2810) (nil face web-mode-function-call-face 2800 . 2810) (nil part-side javascript 2799 . 2800) (nil part-side javascript 2795 . 2799) (nil face web-mode-constant-face 2795 . 2799) (nil part-side javascript 2782 . 2795) (nil part-side javascript 2778 . 2782) (nil face web-mode-constant-face 2778 . 2782) (nil part-side javascript 2767 . 2778) (nil part-side javascript 2766 . 2767) (nil face (rainbow-delimiters-depth-5-face) 2766 . 2767) (nil part-side javascript 2765 . 2766) (nil face (rainbow-delimiters-depth-5-face) 2765 . 2766) (nil part-side javascript 2752 . 2765) (nil part-side javascript 2748 . 2752) (nil face web-mode-constant-face 2748 . 2752) (nil part-side javascript 2737 . 2748) (nil part-side javascript 2736 . 2737) (nil face (rainbow-delimiters-depth-5-face) 2736 . 2737) (nil part-side javascript 2725 . 2736) (nil part-side javascript 2724 . 2725) (nil face (rainbow-delimiters-depth-6-face) 2724 . 2725) (nil part-side javascript 2711 . 2724) (nil part-side javascript 2710 . 2711) (nil face (rainbow-delimiters-depth-7-face) 2710 . 2711) (nil part-side javascript 2709 . 2710) (nil face (rainbow-delimiters-depth-8-face) 2709 . 2710) (nil part-side javascript 2708 . 2709) (nil part-side javascript 2707 . 2708) (nil face (rainbow-delimiters-depth-8-face) 2707 . 2708) (nil part-side javascript 2700 . 2707) (nil part-side javascript 2699 . 2700) (nil face (rainbow-delimiters-depth-7-face) 2699 . 2700) (nil part-side javascript 2685 . 2699) (nil part-side javascript 2679 . 2685) (nil face web-mode-keyword-face 2679 . 2685) (nil part-side javascript 2664 . 2679) (nil part-side javascript 2663 . 2664) (nil face (rainbow-delimiters-depth-6-face) 2663 . 2664) (nil part-side javascript 2662 . 2663) (nil part-side javascript 2658 . 2662) (nil face web-mode-keyword-face 2658 . 2662) (nil part-side javascript 2645 . 2658) (nil part-side javascript 2644 . 2645) (nil face (rainbow-delimiters-depth-6-face) 2644 . 2645) (nil part-side javascript 2631 . 2644) (nil part-side javascript 2630 . 2631) (nil face (rainbow-delimiters-depth-7-face) 2630 . 2631) (nil part-side javascript 2629 . 2630) (nil face (rainbow-delimiters-depth-8-face) 2629 . 2630) (nil part-side javascript 2628 . 2629) (nil part-side javascript 2627 . 2628) (nil face (rainbow-delimiters-depth-8-face) 2627 . 2628) (nil part-side javascript 2620 . 2627) (nil part-side javascript 2619 . 2620) (nil face (rainbow-delimiters-depth-7-face) 2619 . 2620) (nil part-side javascript 2602 . 2619) (nil part-side javascript 2601 . 2602) (nil face (rainbow-delimiters-depth-7-face) 2601 . 2602) (nil part-side javascript 2600 . 2601) (nil face (rainbow-delimiters-depth-8-face) 2600 . 2601) (nil part-side javascript 2599 . 2600) (nil part-side javascript 2598 . 2599) (nil face (rainbow-delimiters-depth-8-face) 2598 . 2599) (nil part-side javascript 2591 . 2598) (nil part-side javascript 2590 . 2591) (nil face (rainbow-delimiters-depth-7-face) 2590 . 2591) (nil part-side javascript 2562 . 2590) (nil part-side javascript 2561 . 2562) (nil face (rainbow-delimiters-depth-6-face) 2561 . 2562) (nil part-side javascript 2560 . 2561) (nil part-side javascript 2559 . 2560) (nil face (rainbow-delimiters-depth-6-face) 2559 . 2560) (nil part-side javascript 2544 . 2559) (nil part-side javascript 2542 . 2544) (nil face web-mode-keyword-face 2542 . 2544) (nil part-side javascript 2541 . 2542) (nil part-side javascript 2540 . 2541) (nil face (rainbow-delimiters-depth-7-face) 2540 . 2541) (nil part-side javascript 2539 . 2540) (nil part-side javascript 2538 . 2539) (nil face (rainbow-delimiters-depth-7-face) 2538 . 2539) (nil part-side javascript 2531 . 2538) (nil part-side javascript 2530 . 2531) (nil face (rainbow-delimiters-depth-6-face) 2530 . 2531) (nil part-side javascript 2529 . 2530) (nil part-side javascript 2527 . 2529) (nil face web-mode-keyword-face 2527 . 2529) (nil part-side javascript 2514 . 2527) (nil part-side javascript 2513 . 2514) (nil face (rainbow-delimiters-depth-5-face) 2513 . 2514) (nil part-side javascript 2512 . 2513) (nil part-side javascript 2511 . 2512) (nil face (rainbow-delimiters-depth-5-face) 2511 . 2512) (nil part-side javascript 2482 . 2511) (nil part-side javascript 2481 . 2482) (nil face web-mode-variable-name-face 2481 . 2482) (nil part-side javascript 2480 . 2481) (nil part-side javascript 2477 . 2480) (nil face web-mode-keyword-face 2477 . 2480) (nil part-side javascript 2476 . 2477) (nil face (rainbow-delimiters-depth-5-face) 2476 . 2477) (nil part-side javascript 2475 . 2476) (nil part-side javascript 2472 . 2475) (nil face web-mode-keyword-face 2472 . 2475) (nil part-side javascript 2461 . 2472) (nil part-side javascript 2460 . 2461) (nil syntax-table (12) 2460 . 2461) (nil part-side javascript 2446 . 2460) (nil part-token comment 2446 . 2460) (nil font-lock-face web-mode-javascript-comment-face 2446 . 2460) (nil part-side javascript 2434 . 2446) (nil part-token comment 2434 . 2446) (nil font-lock-face web-mode-javascript-comment-face 2434 . 2446) (nil part-side javascript 2433 . 2434) (nil part-token comment 2433 . 2434) (nil font-lock-face web-mode-javascript-comment-face 2433 . 2434) (nil part-side javascript 2430 . 2433) (nil part-token comment 2430 . 2433) (nil font-lock-face web-mode-javascript-comment-face 2430 . 2433) (nil part-side javascript 2428 . 2430) (nil part-token comment 2428 . 2430) (nil font-lock-face web-mode-javascript-comment-face 2428 . 2430) (nil part-side javascript 2424 . 2428) (nil part-token comment 2424 . 2428) (nil font-lock-face web-mode-javascript-comment-face 2424 . 2428) (nil part-side javascript 2422 . 2424) (nil part-token comment 2422 . 2424) (nil font-lock-face web-mode-javascript-comment-face 2422 . 2424) (nil part-side javascript 2421 . 2422) (nil part-token comment 2421 . 2422) (nil syntax-table (11) 2421 . 2422) (nil font-lock-face web-mode-javascript-comment-face 2421 . 2422) (nil part-side javascript 2409 . 2421) (nil part-side javascript 2408 . 2409) (nil face (rainbow-delimiters-depth-5-face) 2408 . 2409) (nil part-side javascript 2407 . 2408) (nil face (rainbow-delimiters-depth-6-face) 2407 . 2408) (nil part-side javascript 2406 . 2407) (nil face (rainbow-delimiters-depth-7-face) 2406 . 2407) (nil part-side javascript 2405 . 2406) (nil part-side javascript 2404 . 2405) (nil face (rainbow-delimiters-depth-7-face) 2404 . 2405) (nil part-side javascript 2403 . 2404) (nil face (rainbow-delimiters-depth-7-face) 2403 . 2404) (nil part-side javascript 2402 . 2403) (nil part-token string 2402 . 2403) (nil syntax-table (15) 2402 . 2403) (nil font-lock-face web-mode-javascript-string-face 2402 . 2403) (nil part-side javascript 2397 . 2402) (nil part-token string 2397 . 2402) (nil font-lock-face web-mode-javascript-string-face 2397 . 2402) (nil part-side javascript 2396 . 2397) (nil part-token string 2396 . 2397) (nil syntax-table (15) 2396 . 2397) (nil font-lock-face web-mode-javascript-string-face 2396 . 2397) (nil part-side javascript 2395 . 2396) (nil face (rainbow-delimiters-depth-7-face) 2395 . 2396) (nil part-side javascript 2382 . 2395) (nil part-side javascript 2381 . 2382) (nil face (rainbow-delimiters-depth-6-face) 2381 . 2382) (nil part-side javascript 2372 . 2381) (nil face web-mode-function-call-face 2372 . 2381) (nil part-side javascript 2367 . 2372) (nil part-side javascript 2366 . 2367) (nil face (rainbow-delimiters-depth-5-face) 2366 . 2367) (nil part-side javascript 2361 . 2366) (nil face web-mode-function-call-face 2361 . 2366) (nil part-side javascript 2353 . 2361) (nil part-side javascript 2352 . 2353) (nil face (rainbow-delimiters-depth-5-face) 2352 . 2353) (nil part-side javascript 2351 . 2352) (nil face (rainbow-delimiters-depth-6-face) 2351 . 2352) (nil part-side javascript 2350 . 2351) (nil face (rainbow-delimiters-depth-7-face) 2350 . 2351) (nil part-side javascript 2349 . 2350) (nil part-side javascript 2348 . 2349) (nil face (rainbow-delimiters-depth-7-face) 2348 . 2349) (nil part-side javascript 2347 . 2348) (nil face (rainbow-delimiters-depth-7-face) 2347 . 2348) (nil part-side javascript 2346 . 2347) (nil part-token string 2346 . 2347) (nil syntax-table (15) 2346 . 2347) (nil font-lock-face web-mode-javascript-string-face 2346 . 2347) (nil part-side javascript 2341 . 2346) (nil part-token string 2341 . 2346) (nil font-lock-face web-mode-javascript-string-face 2341 . 2346) (nil part-side javascript 2340 . 2341) (nil part-token string 2340 . 2341) (nil syntax-table (15) 2340 . 2341) (nil font-lock-face web-mode-javascript-string-face 2340 . 2341) (nil part-side javascript 2339 . 2340) (nil face (rainbow-delimiters-depth-7-face) 2339 . 2340) (nil part-side javascript 2326 . 2339) (nil part-side javascript 2325 . 2326) (nil face (rainbow-delimiters-depth-6-face) 2325 . 2326) (nil part-side javascript 2316 . 2325) (nil face web-mode-function-call-face 2316 . 2325) (nil part-side javascript 2311 . 2316) (nil part-side javascript 2310 . 2311) (nil face (rainbow-delimiters-depth-5-face) 2310 . 2311) (nil part-side javascript 2305 . 2310) (nil face web-mode-function-call-face 2305 . 2310) (nil part-side javascript 2290 . 2305) (nil part-side javascript 2276 . 2290) (nil face web-mode-variable-name-face 2276 . 2290) (nil part-side javascript 2275 . 2276) (nil part-side javascript 2270 . 2275) (nil face web-mode-keyword-face 2270 . 2275) (nil part-side javascript 2259 . 2270) (nil part-side javascript 2258 . 2259) (nil face (rainbow-delimiters-depth-4-face) 2258 . 2259) (nil part-side javascript 2257 . 2258) (nil part-side javascript 2256 . 2257) (nil face (rainbow-delimiters-depth-4-face) 2256 . 2257) (nil part-side javascript 2255 . 2256) (nil part-token string 2255 . 2256) (nil syntax-table (15) 2255 . 2256) (nil font-lock-face web-mode-javascript-string-face 2255 . 2256) (nil part-side javascript 2253 . 2255) (nil part-token string 2253 . 2255) (nil font-lock-face web-mode-javascript-string-face 2253 . 2255) (nil part-side javascript 2252 . 2253) (nil part-token string 2252 . 2253) (nil syntax-table (15) 2252 . 2253) (nil font-lock-face web-mode-javascript-string-face 2252 . 2253) (nil part-side javascript 2234 . 2252) (nil part-side javascript 2233 . 2234) (nil part-token string 2233 . 2234) (nil syntax-table (15) 2233 . 2234) (nil font-lock-face web-mode-javascript-string-face 2233 . 2234) (nil part-side javascript 2230 . 2233) (nil part-token string 2230 . 2233) (nil font-lock-face web-mode-javascript-string-face 2230 . 2233) (nil part-side javascript 2229 . 2230) (nil part-token string 2229 . 2230) (nil syntax-table (15) 2229 . 2230) (nil font-lock-face web-mode-javascript-string-face 2229 . 2230) (nil part-side javascript 2215 . 2229) (nil part-side javascript 2214 . 2215) (nil face (rainbow-delimiters-depth-4-face) 2214 . 2215) (nil part-side javascript 2213 . 2214) (nil part-side javascript 2211 . 2213) (nil face web-mode-keyword-face 2211 . 2213) (nil part-side javascript 2201 . 2211) (nil part-side javascript 2200 . 2201) (nil face (rainbow-delimiters-depth-4-face) 2200 . 2201) (nil part-side javascript 2192 . 2200) (nil part-side javascript 2191 . 2192) (nil syntax-table (15) 2191 . 2192) (nil part-side javascript 2185 . 2191) (nil part-token string 2185 . 2191) (nil font-lock-face web-mode-javascript-string-face 2185 . 2191) (nil part-side javascript 2184 . 2185) (nil part-token string 2184 . 2185) (nil syntax-table (15) 2184 . 2185) (nil font-lock-face web-mode-javascript-string-face 2184 . 2185) (nil part-side javascript 2172 . 2184) (nil part-side javascript 2171 . 2172) (nil part-token string 2171 . 2172) (nil syntax-table (15) 2171 . 2172) (nil font-lock-face web-mode-javascript-string-face 2171 . 2172) (nil part-side javascript 2166 . 2171) (nil part-token string 2166 . 2171) (nil font-lock-face web-mode-javascript-string-face 2166 . 2171) (nil part-side javascript 2165 . 2166) (nil part-token string 2165 . 2166) (nil syntax-table (15) 2165 . 2166) (nil font-lock-face web-mode-javascript-string-face 2165 . 2166) (nil part-side javascript 2153 . 2165) (nil part-side javascript 2152 . 2153) (nil part-token string 2152 . 2153) (nil syntax-table (15) 2152 . 2153) (nil font-lock-face web-mode-javascript-string-face 2152 . 2153) (nil part-side javascript 2143 . 2152) (nil part-token string 2143 . 2152) (nil font-lock-face web-mode-javascript-string-face 2143 . 2152) (nil part-side javascript 2142 . 2143) (nil part-token string 2142 . 2143) (nil syntax-table (15) 2142 . 2143) (nil font-lock-face web-mode-javascript-string-face 2142 . 2143) (nil part-side javascript 2130 . 2142) (nil part-side javascript 2129 . 2130) (nil part-token string 2129 . 2130) (nil syntax-table (15) 2129 . 2130) (nil font-lock-face web-mode-javascript-string-face 2129 . 2130) (nil part-side javascript 2123 . 2129) (nil part-token string 2123 . 2129) (nil font-lock-face web-mode-javascript-string-face 2123 . 2129) (nil part-side javascript 2122 . 2123) (nil part-token string 2122 . 2123) (nil syntax-table (15) 2122 . 2123) (nil font-lock-face web-mode-javascript-string-face 2122 . 2123) (nil part-side javascript 2110 . 2122) (nil part-side javascript 2109 . 2110) (nil part-token string 2109 . 2110) (nil syntax-table (15) 2109 . 2110) (nil font-lock-face web-mode-javascript-string-face 2109 . 2110) (nil part-side javascript 2104 . 2109) (nil part-token string 2104 . 2109) (nil font-lock-face web-mode-javascript-string-face 2104 . 2109) (nil part-side javascript 2103 . 2104) (nil part-token string 2103 . 2104) (nil syntax-table (15) 2103 . 2104) (nil font-lock-face web-mode-javascript-string-face 2103 . 2104) (nil part-side javascript 2091 . 2103) (nil part-side javascript 2090 . 2091) (nil part-token string 2090 . 2091) (nil syntax-table (15) 2090 . 2091) (nil font-lock-face web-mode-javascript-string-face 2090 . 2091) (nil part-side javascript 2082 . 2090) (nil part-token string 2082 . 2090) (nil font-lock-face web-mode-javascript-string-face 2082 . 2090) (nil part-side javascript 2081 . 2082) (nil part-token string 2081 . 2082) (nil syntax-table (15) 2081 . 2082) (nil font-lock-face web-mode-javascript-string-face 2081 . 2082) (nil part-side javascript 2069 . 2081) (nil part-side javascript 2068 . 2069) (nil part-token string 2068 . 2069) (nil syntax-table (15) 2068 . 2069) (nil font-lock-face web-mode-javascript-string-face 2068 . 2069) (nil part-side javascript 2063 . 2068) (nil part-token string 2063 . 2068) (nil font-lock-face web-mode-javascript-string-face 2063 . 2068) (nil part-side javascript 2062 . 2063) (nil part-token string 2062 . 2063) (nil syntax-table (15) 2062 . 2063) (nil font-lock-face web-mode-javascript-string-face 2062 . 2063) (nil part-side javascript 2051 . 2062) (nil part-side javascript 2050 . 2051) (nil face (rainbow-delimiters-depth-4-face) 2050 . 2051) (nil part-side javascript 2047 . 2050) (nil part-side javascript 2040 . 2047) (nil face web-mode-variable-name-face 2040 . 2047) (nil part-side javascript 2039 . 2040) (nil part-side javascript 2034 . 2039) (nil face web-mode-keyword-face 2034 . 2039) (nil part-side javascript 2024 . 2034) (nil part-side javascript 2023 . 2024) (nil face (rainbow-delimiters-depth-4-face) 2023 . 2024) (nil part-side javascript 2022 . 2023) (nil part-token string 2022 . 2023) (nil syntax-table (15) 2022 . 2023) (nil font-lock-face web-mode-javascript-string-face 2022 . 2023) (nil part-side javascript 2013 . 2022) (nil part-token string 2013 . 2022) (nil font-lock-face web-mode-javascript-string-face 2013 . 2022) (nil part-side javascript 2012 . 2013) (nil part-token string 2012 . 2013) (nil syntax-table (15) 2012 . 2013) (nil font-lock-face web-mode-javascript-string-face 2012 . 2013) (nil part-side javascript 2011 . 2012) (nil face (rainbow-delimiters-depth-4-face) 2011 . 2012) (nil part-side javascript 1995 . 2011) (nil part-side javascript 1985 . 1995) (nil face web-mode-variable-name-face 1985 . 1995) (nil part-side javascript 1984 . 1985) (nil part-side javascript 1979 . 1984) (nil face web-mode-keyword-face 1979 . 1984) (nil part-side javascript 1953 . 1979) (nil part-side javascript 1949 . 1953) (nil face web-mode-constant-face 1949 . 1953) (nil part-side javascript 1946 . 1949) (nil part-side javascript 1933 . 1946) (nil face web-mode-variable-name-face 1933 . 1946) (nil part-side javascript 1932 . 1933) (nil part-side javascript 1927 . 1932) (nil face web-mode-keyword-face 1927 . 1932) (nil part-side javascript 1918 . 1927) (nil part-side javascript 1917 . 1918) (nil face (rainbow-delimiters-depth-3-face) 1917 . 1918) (nil part-side javascript 1916 . 1917) (nil part-side javascript 1915 . 1916) (nil face (rainbow-delimiters-depth-3-face) 1915 . 1916) (nil part-side javascript 1911 . 1915) (nil face web-mode-constant-face 1911 . 1915) (nil part-side javascript 1896 . 1911) (nil part-side javascript 1892 . 1896) (nil face web-mode-constant-face 1892 . 1896) (nil part-side javascript 1885 . 1892) (nil part-side javascript 1884 . 1885) (nil face (rainbow-delimiters-depth-3-face) 1884 . 1885) (nil part-side javascript 1868 . 1884) (nil face web-mode-function-name-face 1868 . 1884) (nil part-side javascript 1860 . 1868) (nil part-side javascript 1859 . 1860) (nil face (rainbow-delimiters-depth-3-face) 1859 . 1860) (nil part-side javascript 1828 . 1859) (nil part-side javascript 1824 . 1828) (nil face web-mode-constant-face 1824 . 1828) (nil part-side javascript 1815 . 1824) (nil part-side javascript 1814 . 1815) (nil face (rainbow-delimiters-depth-4-face) 1814 . 1815) (nil part-side javascript 1801 . 1814) (nil part-side javascript 1800 . 1801) (nil face (rainbow-delimiters-depth-4-face) 1800 . 1801) (nil part-side javascript 1790 . 1800) (nil face web-mode-function-call-face 1790 . 1800) (nil part-side javascript 1789 . 1790) (nil part-side javascript 1785 . 1789) (nil face web-mode-constant-face 1785 . 1789) (nil part-side javascript 1772 . 1785) (nil part-side javascript 1768 . 1772) (nil face web-mode-constant-face 1768 . 1772) (nil part-side javascript 1760 . 1768) (nil part-side javascript 1759 . 1760) (nil part-side javascript 1758 . 1759) (nil face (rainbow-delimiters-depth-4-face) 1758 . 1759) (nil part-side javascript 1757 . 1758) (nil face (rainbow-delimiters-depth-4-face) 1757 . 1758) (nil part-side javascript 1744 . 1757) (nil part-side javascript 1740 . 1744) (nil face web-mode-constant-face 1740 . 1744) (nil part-side javascript 1731 . 1740) (nil part-side javascript 1727 . 1731) (nil face web-mode-constant-face 1727 . 1731) (nil part-side javascript 1726 . 1727) (nil part-side javascript 1724 . 1726) (nil part-side javascript 1697 . 1724) (nil part-side javascript 1696 . 1697) (nil part-side javascript 1695 . 1696) (nil part-side javascript 1675 . 1695) (nil part-side javascript 1669 . 1675) (nil face web-mode-keyword-face 1669 . 1675) (nil part-side javascript 1661 . 1669) (nil part-side javascript 1638 . 1661) (nil part-side javascript 1632 . 1638) (nil face web-mode-keyword-face 1632 . 1638) (nil part-side javascript 1624 . 1632) (nil part-side javascript 1602 . 1624) (nil part-side javascript 1596 . 1602) (nil face web-mode-keyword-face 1596 . 1602) (nil part-side javascript 1567 . 1596) (nil part-side javascript 1561 . 1567) (nil face web-mode-keyword-face 1561 . 1567) (nil part-side javascript 1524 . 1561) (nil part-side javascript 1518 . 1524) (nil face web-mode-keyword-face 1518 . 1524) (nil part-side javascript 1484 . 1518) (nil part-side javascript 1478 . 1484) (nil face web-mode-keyword-face 1478 . 1484) (nil part-side javascript 1446 . 1478) (nil part-side javascript 1440 . 1446) (nil face web-mode-keyword-face 1440 . 1446) (nil part-side javascript 1409 . 1440) (nil part-side javascript 1403 . 1409) (nil face web-mode-keyword-face 1403 . 1409) (nil part-side javascript 1374 . 1403) (nil part-side javascript 1368 . 1374) (nil face web-mode-keyword-face 1368 . 1374) (nil part-side javascript 1333 . 1368) (nil part-side javascript 1327 . 1333) (nil face web-mode-keyword-face 1327 . 1333) (nil part-side javascript 1298 . 1327) (nil part-side javascript 1292 . 1298) (nil face web-mode-keyword-face 1292 . 1298) (nil part-side javascript 1260 . 1292) (nil part-side javascript 1254 . 1260) (nil face web-mode-keyword-face 1254 . 1260) (nil part-side javascript 1225 . 1254) (nil part-side javascript 1219 . 1225) (nil face web-mode-keyword-face 1219 . 1225) (nil part-side javascript 1191 . 1219) (nil part-side javascript 1185 . 1191) (nil face web-mode-keyword-face 1185 . 1191) (nil part-side javascript 1152 . 1185) (nil part-side javascript 1146 . 1152) (nil face web-mode-keyword-face 1146 . 1152) (nil part-side javascript 1120 . 1146) (nil part-side javascript 1116 . 1120) (nil face web-mode-constant-face 1116 . 1120) (nil part-side javascript 1113 . 1116) (nil part-side javascript 1100 . 1113) (nil face web-mode-variable-name-face 1100 . 1113) (nil part-side javascript 1099 . 1100) (nil part-side javascript 1094 . 1099) (nil face web-mode-keyword-face 1094 . 1099) (nil part-side javascript 1086 . 1094) (nil part-side javascript 1085 . 1086) (nil part-side javascript 1084 . 1085) (nil face (rainbow-delimiters-depth-3-face) 1084 . 1085) (nil part-side javascript 1083 . 1084) (nil part-side javascript 1082 . 1083) (nil face (rainbow-delimiters-depth-3-face) 1082 . 1083) (nil part-side javascript 1081 . 1082) (nil face (rainbow-delimiters-depth-3-face) 1081 . 1082) (nil part-side javascript 1067 . 1081) (nil face web-mode-function-name-face 1067 . 1081) (nil part-side javascript 1061 . 1067) (1061 . 2883)) nil (25570 17274 539564 234000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2883) (undo-tree-id957 . -1) (#("
" 0 1 (part-side javascript)) . 2883) (undo-tree-id958 . -1) (#("
" 0 1 (part-side javascript)) . 2883) (undo-tree-id959 . -1)) nil (25570 17274 539427 20000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1060) (undo-tree-id955 . -1) (undo-tree-id956 . -1)) nil (25570 17274 539421 70000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -2780) (#("  " 0 2 (part-side javascript)) . -2774) (#("  " 0 2 (part-side javascript)) . -2739) (#("  " 0 2 (part-side javascript)) . -2683) (#("  " 0 2 (part-side javascript)) . -2655) (#("  " 0 2 (part-side javascript)) . -2645) (#("  " 0 2 (part-side javascript)) . -2635) (#("  " 0 2 (part-side javascript)) . -2592) (#("  " 0 2 (part-side javascript)) . -2573) (#("  " 0 2 (part-side javascript)) . -2561) (#("  " 0 2 (part-side javascript)) . -2496) (#("  " 0 2 (part-side javascript)) . -2448) (#("  " 0 2 (part-side javascript)) . -2395) (#("  " 0 2 (part-side javascript)) . -2346) (#("  " 0 2 (part-side javascript)) . -2197) (#("  " 0 2 (part-side javascript)) . -2140) (#("  " 0 2 (part-side javascript)) . -2131) (#("  " 0 2 (part-side javascript)) . -2117) (#("  " 0 2 (part-side javascript)) . -2100) (#("  " 0 2 (part-side javascript)) . -2079) (#("  " 0 2 (part-side javascript)) . -2061) (#("  " 0 2 (part-side javascript)) . -2044) (#("  " 0 2 (part-side javascript)) . -2024) (#("  " 0 2 (part-side javascript)) . -2007) (#("  " 0 2 (part-side javascript)) . -1981) (#("  " 0 2 (part-side javascript)) . -1928) (#("  " 0 2 (part-side javascript)) . -1878) (#("  " 0 2 (part-side javascript)) . -1821) (#("  " 0 2 (part-side javascript)) . -1814) (#("  " 0 2 (part-side javascript)) . -1781) (#("  " 0 2 (part-side javascript)) . -1727) (#("  " 0 2 (part-side javascript)) . -1701) (#("  " 0 2 (part-side javascript)) . -1668) (#("  " 0 2 (part-side javascript)) . -1634) (#("  " 0 2 (part-side javascript)) . -1599) (#("  " 0 2 (part-side javascript)) . -1565) (#("  " 0 2 (part-side javascript)) . -1532) (#("  " 0 2 (part-side javascript)) . -1491) (#("  " 0 2 (part-side javascript)) . -1453) (#("  " 0 2 (part-side javascript)) . -1417) (#("  " 0 2 (part-side javascript)) . -1382) (#("  " 0 2 (part-side javascript)) . -1349) (#("  " 0 2 (part-side javascript)) . -1310) (#("  " 0 2 (part-side javascript)) . -1277) (#("  " 0 2 (part-side javascript)) . -1241) (#("  " 0 2 (part-side javascript)) . -1208) (#("  " 0 2 (part-side javascript)) . -1176) (#("  " 0 2 (part-side javascript)) . -1139) (#("  " 0 2 (part-side javascript)) . -1089) (#("  " 0 2 (part-side javascript)) . -1064) 1045) nil (25570 17274 539404 119000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing part-side javascript)) . -2782) 1628) nil (25570 17274 539382 996000) 0 nil])
([nil nil ((2194 . 2202) (#("        " 0 8 (part-side javascript)) . 2193) (undo-tree-id1026 . -8) (2193 . 2202) (#("        " 0 8 (part-side javascript)) . 2192) (undo-tree-id1027 . -8) (2192 . 2201) (#("        " 0 8 (part-side javascript)) . 2191) (undo-tree-id1028 . -8) (2191 . 2200) (#("        " 0 8 (part-side javascript)) . 2190) (undo-tree-id1029 . -8) (2190 . 2199) (#("        " 0 8 (part-side javascript)) . 2189) (undo-tree-id1030 . -8) (2188 . 2198) (t 25570 17274 550879 586000)) nil (25570 17809 34574 525000) 0 nil])
([nil nil ((2191 . 2199)) nil (25570 17809 34564 425000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2933 . 2934) (nil part-side javascript 2933 . 2934) (nil face (rainbow-delimiters-depth-5-face) 2933 . 2934) (nil part-side javascript 2926 . 2933) (nil rear-nonsticky t 2925 . 2926) (nil part-side javascript 2925 . 2926) (nil part-side javascript 2902 . 2925) (nil part-side javascript 2898 . 2902) (nil face web-mode-constant-face 2898 . 2902) (nil part-side javascript 2890 . 2898) (nil part-side javascript 2889 . 2890) (nil part-side javascript 2888 . 2889) (nil face (rainbow-delimiters-depth-6-face) 2888 . 2889) (nil part-side javascript 2879 . 2888) (nil part-side javascript 2878 . 2879) (nil face (rainbow-delimiters-depth-7-face) 2878 . 2879) (nil rear-nonsticky t 2877 . 2878) (nil part-side javascript 2877 . 2878) (nil part-side javascript 2870 . 2877) (nil part-side javascript 2869 . 2870) (nil face (rainbow-delimiters-depth-7-face) 2869 . 2870) (nil part-side javascript 2868 . 2869) (nil part-side javascript 2866 . 2868) (nil part-side javascript 2858 . 2866) (nil part-side javascript 2854 . 2858) (nil face web-mode-constant-face 2854 . 2858) (nil part-side javascript 2844 . 2854) (nil part-side javascript 2843 . 2844) (nil part-side javascript 2842 . 2843) (nil face (rainbow-delimiters-depth-6-face) 2842 . 2843) (nil part-side javascript 2841 . 2842) (nil part-side javascript 2837 . 2841) (nil face web-mode-keyword-face 2837 . 2841) (nil part-side javascript 2829 . 2837) (nil part-side javascript 2828 . 2829) (nil part-side javascript 2827 . 2828) (nil face (rainbow-delimiters-depth-6-face) 2827 . 2828) (nil part-side javascript 2818 . 2827) (nil rear-nonsticky t 2817 . 2818) (nil part-side javascript 2817 . 2818) (nil part-side javascript 2810 . 2817) (nil part-side javascript 2807 . 2810) (nil part-side javascript 2806 . 2807) (nil face (rainbow-delimiters-depth-7-face) 2806 . 2807) (nil part-side javascript 2797 . 2806) (nil part-side javascript 2796 . 2797) (nil face (rainbow-delimiters-depth-7-face) 2796 . 2797) (nil part-side javascript 2778 . 2796) (nil part-side javascript 2768 . 2778) (nil part-side javascript 2767 . 2768) (nil part-side javascript 2759 . 2767) (nil part-side javascript 2752 . 2759) (nil part-side javascript 2750 . 2752) (nil part-side javascript 2734 . 2750) (nil part-side javascript 2724 . 2734) (nil part-side javascript 2722 . 2724) (nil part-side javascript 2711 . 2722) (nil part-side javascript 2710 . 2711) (nil part-side javascript 2708 . 2710) (nil part-side javascript 2701 . 2708) (nil rear-nonsticky t 2700 . 2701) (nil part-side javascript 2700 . 2701) (nil part-side javascript 2693 . 2700) (nil part-side javascript 2683 . 2693) (nil part-side javascript 2667 . 2683) (nil part-side javascript 2665 . 2667) (nil part-side javascript 2656 . 2665) (nil face web-mode-variable-name-face 2656 . 2665) (nil part-side javascript 2655 . 2656) (nil part-side javascript 2650 . 2655) (nil face web-mode-keyword-face 2650 . 2655) (nil part-side javascript 2640 . 2650) (nil part-side javascript 2639 . 2640) (nil part-side javascript 2638 . 2639) (nil face (rainbow-delimiters-depth-6-face) 2638 . 2639) (nil part-side javascript 2637 . 2638) (nil part-side javascript 2636 . 2637) (nil face (rainbow-delimiters-depth-6-face) 2636 . 2637) (nil part-side javascript 2623 . 2636) (nil part-side javascript 2621 . 2623) (nil face web-mode-keyword-face 2621 . 2623) (nil part-side javascript 2620 . 2621) (nil part-side javascript 2619 . 2620) (nil part-token string 2619 . 2620) (nil syntax-table (15) 2619 . 2620) (nil font-lock-face web-mode-javascript-string-face 2619 . 2620) (nil part-side javascript 2614 . 2619) (nil part-token string 2614 . 2619) (nil font-lock-face web-mode-javascript-string-face 2614 . 2619) (nil part-side javascript 2613 . 2614) (nil part-token string 2613 . 2614) (nil syntax-table (15) 2613 . 2614) (nil font-lock-face web-mode-javascript-string-face 2613 . 2614) (nil part-side javascript 2612 . 2613) (nil face (rainbow-delimiters-depth-6-face) 2612 . 2613) (nil part-side javascript 2611 . 2612) (nil part-side javascript 2609 . 2611) (nil face web-mode-keyword-face 2609 . 2611) (nil part-side javascript 2608 . 2609) (nil part-side javascript 2604 . 2608) (nil face web-mode-keyword-face 2604 . 2608) (nil part-side javascript 2596 . 2604) (nil part-side javascript 2595 . 2596) (nil part-side javascript 2594 . 2595) (nil face (rainbow-delimiters-depth-6-face) 2594 . 2595) (nil part-side javascript 2585 . 2594) (nil rear-nonsticky t 2584 . 2585) (nil part-side javascript 2584 . 2585) (nil part-side javascript 2577 . 2584) (nil part-side javascript 2576 . 2577) (nil part-side javascript 2574 . 2576) (nil part-side javascript 2557 . 2574) (nil part-side javascript 2547 . 2557) (nil part-side javascript 2546 . 2547) (nil rear-nonsticky t 2545 . 2546) (nil part-side javascript 2545 . 2546) (nil part-side javascript 2534 . 2545) (nil part-side javascript 2533 . 2534) (nil part-side javascript 2531 . 2533) (nil part-side javascript 2516 . 2531) (nil part-side javascript 2506 . 2516) (nil part-side javascript 2505 . 2506) (nil part-side javascript 2504 . 2505) (nil face (rainbow-delimiters-depth-6-face) 2504 . 2505) (nil part-side javascript 2503 . 2504) (nil part-side javascript 2502 . 2503) (nil face (rainbow-delimiters-depth-6-face) 2502 . 2503) (nil part-side javascript 2489 . 2502) (nil part-side javascript 2487 . 2489) (nil face web-mode-keyword-face 2487 . 2489) (nil part-side javascript 2486 . 2487) (nil part-side javascript 2485 . 2486) (nil part-token string 2485 . 2486) (nil syntax-table (15) 2485 . 2486) (nil font-lock-face web-mode-javascript-string-face 2485 . 2486) (nil part-side javascript 2481 . 2485) (nil part-token string 2481 . 2485) (nil font-lock-face web-mode-javascript-string-face 2481 . 2485) (nil part-side javascript 2480 . 2481) (nil part-token string 2480 . 2481) (nil syntax-table (15) 2480 . 2481) (nil font-lock-face web-mode-javascript-string-face 2480 . 2481) (nil part-side javascript 2479 . 2480) (nil face (rainbow-delimiters-depth-6-face) 2479 . 2480) (nil part-side javascript 2478 . 2479) (nil part-side javascript 2476 . 2478) (nil face web-mode-keyword-face 2476 . 2478) (nil part-side javascript 2468 . 2476) (nil part-side javascript 2467 . 2468) (nil part-side javascript 2453 . 2467) (nil part-side javascript 2451 . 2453) (nil part-side javascript 2439 . 2451) (nil face web-mode-variable-name-face 2439 . 2451) (nil part-side javascript 2438 . 2439) (nil part-side javascript 2433 . 2438) (nil face web-mode-keyword-face 2433 . 2438) (nil part-side javascript 2425 . 2433) (nil part-side javascript 2424 . 2425) (nil part-side javascript 2423 . 2424) (nil rear-nonsticky t 2422 . 2423) (nil part-side javascript 2422 . 2423) (nil part-side javascript 2407 . 2422) (nil part-side javascript 2406 . 2407) (nil face (rainbow-delimiters-depth-6-face) 2406 . 2407) (nil part-side javascript 2390 . 2406) (nil part-side javascript 2389 . 2390) (nil part-token string 2389 . 2390) (nil syntax-table (15) 2389 . 2390) (nil font-lock-face web-mode-javascript-string-face 2389 . 2390) (nil part-side javascript 2383 . 2389) (nil part-token string 2383 . 2389) (nil font-lock-face web-mode-javascript-string-face 2383 . 2389) (nil part-side javascript 2382 . 2383) (nil part-token string 2382 . 2383) (nil syntax-table (15) 2382 . 2383) (nil font-lock-face web-mode-javascript-string-face 2382 . 2383) (nil part-side javascript 2381 . 2382) (nil face (rainbow-delimiters-depth-6-face) 2381 . 2382) (nil part-side javascript 2380 . 2381) (nil part-side javascript 2377 . 2380) (nil face web-mode-keyword-face 2377 . 2380) (nil part-side javascript 2368 . 2377) (nil part-side javascript 2361 . 2368) (nil rear-nonsticky t 2360 . 2361) (nil part-side javascript 2360 . 2361) (nil part-side javascript 2348 . 2360) (nil part-side javascript 2347 . 2348) (nil part-side javascript 2345 . 2347) (nil part-side javascript 2339 . 2345) (nil face web-mode-variable-name-face 2339 . 2345) (nil part-side javascript 2338 . 2339) (nil part-side javascript 2333 . 2338) (nil face web-mode-keyword-face 2333 . 2338) (nil part-side javascript 2325 . 2333) (nil part-side javascript 2324 . 2325) (nil part-side javascript 2323 . 2324) (nil face (rainbow-delimiters-depth-5-face) 2323 . 2324) (nil part-side javascript 2322 . 2323) (nil part-side javascript 2321 . 2322) (nil face (rainbow-delimiters-depth-5-face) 2321 . 2322) (nil part-side javascript 2320 . 2321) (nil part-token string 2320 . 2321) (nil syntax-table (15) 2320 . 2321) (nil font-lock-face web-mode-javascript-string-face 2320 . 2321) (nil part-side javascript 2317 . 2320) (nil part-token string 2317 . 2320) (nil font-lock-face web-mode-javascript-string-face 2317 . 2320) (nil part-side javascript 2316 . 2317) (nil part-token string 2316 . 2317) (nil syntax-table (15) 2316 . 2317) (nil font-lock-face web-mode-javascript-string-face 2316 . 2317) (nil part-side javascript 2282 . 2316) (nil part-side javascript 2257 . 2282) (nil part-side javascript 2255 . 2257) (nil face web-mode-keyword-face 2255 . 2257) (nil part-side javascript 2254 . 2255) (nil part-side javascript 2253 . 2254) (nil part-token string 2253 . 2254) (nil syntax-table (15) 2253 . 2254) (nil font-lock-face web-mode-javascript-string-face 2253 . 2254) (nil part-side javascript 2244 . 2253) (nil part-token string 2244 . 2253) (nil font-lock-face web-mode-javascript-string-face 2244 . 2253) (nil part-side javascript 2243 . 2244) (nil part-token string 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil font-lock-face web-mode-javascript-string-face 2243 . 2244) (nil part-side javascript 2239 . 2243) (nil rear-nonsticky t 2238 . 2239) (nil part-side javascript 2238 . 2239) (nil part-side javascript 2226 . 2238) (nil part-side javascript 2225 . 2226) (nil part-side javascript 2223 . 2225) (nil face web-mode-keyword-face 2223 . 2225) (nil part-side javascript 2222 . 2223) (nil part-side javascript 2221 . 2222) (nil part-token string 2221 . 2222) (nil syntax-table (15) 2221 . 2222) (nil font-lock-face web-mode-javascript-string-face 2221 . 2222) (nil part-side javascript 2215 . 2221) (nil part-token string 2215 . 2221) (nil font-lock-face web-mode-javascript-string-face 2215 . 2221) (nil part-side javascript 2214 . 2215) (nil part-token string 2214 . 2215) (nil syntax-table (15) 2214 . 2215) (nil font-lock-face web-mode-javascript-string-face 2214 . 2215) (nil part-side javascript 2213 . 2214) (nil face (rainbow-delimiters-depth-5-face) 2213 . 2214) (nil part-side javascript 2212 . 2213) (nil part-side javascript 2210 . 2212) (nil face web-mode-keyword-face 2210 . 2212) (nil part-side javascript 2209 . 2210) (nil part-side javascript 2205 . 2209) (nil face web-mode-keyword-face 2205 . 2209) (nil part-side javascript 2199 . 2205) (2199 . 2934)) nil (25570 17809 34550 806000) 0 nil])
([nil nil ((#("else " 0 4 (face web-mode-keyword-face part-side javascript) 4 5 (part-side javascript)) . 2205) (undo-tree-id1024 . -5) (undo-tree-id1025 . -5)) nil (25570 17809 34481 834000) 0 nil])
([nil nil ((#("i" 0 1 (face web-mode-keyword-face part-side javascript)) . 2205)) nil (25570 17809 34478 187000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -2199) (undo-tree-id1022 . -6) (undo-tree-id1023 . -6) 2205) nil (25570 17809 34476 758000) 0 nil])
([nil nil ((2199 . 2200)) nil (25570 17809 34472 804000) 0 nil])
([nil nil ((2322 . 2324) 2340) nil (25570 17809 34471 497000) 0 nil])
([nil nil ((2368 . 2370) 2388) nil (25570 17809 34469 923000) 0 nil])
([nil nil ((2417 . 2427)) nil (25570 17809 34468 368000) 0 nil])
([nil nil ((2479 . 2481) 2481) nil (25570 17809 34467 34000) 0 nil])
([nil nil ((2436 . 2438) 2440) nil (25570 17809 34465 546000) 0 nil])
([nil nil ((2523 . 2525) 2527) nil (25570 17809 34463 932000) 0 nil])
([nil nil ((2566 . 2568) 2572) nil (25570 17809 34462 518000) 0 nil])
([nil nil ((2605 . 2607) 2606) nil (25570 17809 34461 53000) 0 nil])
([nil nil ((2617 . 2619) 2620) nil (25570 17809 34459 584000) 0 nil])
([nil nil ((2665 . 2667) 2668) nil (25570 17809 34457 868000) 0 nil])
([nil nil ((2710 . 2712) 2715) nil (25570 17809 34456 317000) 0 nil])
([nil nil ((2753 . 2755) 2760) nil (25570 17809 34454 807000) 0 nil])
([nil nil ((2799 . 2801) 2808) nil (25570 17809 34453 402000) 0 nil])
([nil nil ((2850 . 2852) 2851) nil (25570 17809 34451 706000) 0 nil])
([nil nil ((2862 . 2864) 2865) nil (25570 17809 34450 397000) 0 nil])
([nil nil ((2881 . 2883) 2884) nil (25570 17809 34448 737000) 0 nil])
([nil nil ((2917 . 2919) 2918) nil (25570 17809 34447 244000) 0 nil])
([nil nil ((2929 . 2931) 2932) nil (25570 17809 34445 689000) 0 nil])
([nil nil ((2960 . 2968) (#("      " 0 6 (part-side javascript)) . 2960) 2967) nil (25570 17809 34444 64000) 0 nil])
([nil nil ((#("&& 'condition' in currentfilter.parent && currentfilter.parent.condition == 'not'" 0 3 (part-side javascript) 3 4 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 4 13 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 13 14 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 14 15 (part-side javascript) 15 17 (face web-mode-keyword-face part-side javascript) 17 76 (part-side javascript) 76 77 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 77 80 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 80 81 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 2229) (undo-tree-id1020 . -81) (undo-tree-id1021 . -81)) nil (25570 17809 34442 181000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2228) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) 2229) nil (25570 17809 34438 400000) 0 nil])
([nil nil ((#("grand_" 0 6 (part-side javascript)) . 2415) (undo-tree-id1016 . -6) (undo-tree-id1017 . -6)) nil (25570 17809 34433 991000) 0 nil])
([nil nil ((#("grand_" 0 6 (part-side javascript)) . 2551) (undo-tree-id1014 . -6) (undo-tree-id1015 . -6)) nil (25570 17809 34430 521000) 0 nil])
([nil nil ((#("
          const grand_parent = parent.parent" 0 11 (part-side javascript) 11 16 (face web-mode-keyword-face part-side javascript) 16 17 (part-side javascript) 17 29 (face web-mode-variable-name-face part-side javascript) 29 45 (part-side javascript)) . 2345) (undo-tree-id1011 . -45) (undo-tree-id1012 . -1) (undo-tree-id1013 . -45)) nil (25570 17809 34426 528000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2339) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (#(" " 0 1 (part-side javascript)) . -2340) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (#(" " 0 1 (part-side javascript)) . -2341) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (#(" " 0 1 (part-side javascript)) . -2342) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (#(" " 0 1 (part-side javascript)) . -2343) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#(" " 0 1 (part-side javascript)) . -2344) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) 2345) nil (25570 17809 34420 483000) 0 nil])
([nil nil ((#("grand_parent" 0 12 (part-side javascript)) . 2404) (undo-tree-id997 . -12) (undo-tree-id998 . -12)) nil (25570 17809 34403 888000) 0 nil])
([nil nil ((2404 . 2411)) nil (25570 17809 34398 790000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2410) (undo-tree-id996 . -1) 2411) nil (25570 17809 34396 967000) 0 nil])
([nil nil ((#("grand_" 0 6 (part-side javascript)) . 2423) (undo-tree-id994 . -6) (undo-tree-id995 . -6)) nil (25570 17809 34393 983000) 0 nil])
([nil nil ((#("grand_" 0 6 (part-side javascript)) . 2573) (undo-tree-id992 . -6) (undo-tree-id993 . -6)) nil (25570 17809 34390 487000) 0 nil])
([nil nil ((#("parent" 0 6 (part-side javascript)) . 2528) (undo-tree-id990 . -6) (undo-tree-id991 . -6)) nil (25570 17809 34386 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2540 . 2541) (nil part-side javascript 2528 . 2541) (2528 . 2541)) nil (25570 17809 34382 907000) 0 nil])
([nil nil ((#("parent.rulepos" 0 14 (part-side javascript)) . 2618) (undo-tree-id987 . -14) (undo-tree-id988 . -14) (undo-tree-id989 . -14)) nil (25570 17809 34381 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2639 . 2640) (nil part-side javascript 2632 . 2640) (nil rear-nonsticky t 2631 . 2632) (nil part-side javascript 2631 . 2632) (nil part-side javascript 2619 . 2631) (nil part-side javascript 2618 . 2619) (2618 . 2640)) nil (25570 17809 34376 63000) 0 nil])
([nil nil ((#("
            const rule_side = currentfilter.rulepos" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 18 (face web-mode-keyword-face part-side javascript) 18 19 (part-side javascript) 19 28 (face web-mode-variable-name-face part-side javascript) 28 31 (part-side javascript) 31 43 (part-side javascript) 43 44 (part-side javascript rear-nonsticky t) 44 52 (part-side javascript)) . 2497) (undo-tree-id983 . -52) (undo-tree-id984 . -1) (undo-tree-id985 . -52) (undo-tree-id986 . -52)) nil (25570 17809 34373 79000) 0 nil])
([nil nil ((#("rule_side" 0 9 (part-side javascript)) . 2620) (undo-tree-id981 . -9) (undo-tree-id982 . -9)) nil (25570 17809 34367 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil rear-nonsticky t 2640 . 2641) (nil part-side javascript 2640 . 2641) (nil part-side javascript 2620 . 2640) (2620 . 2641)) nil (25570 17809 34363 124000) 0 nil])
([nil nil ((#("grand_" 0 6 (part-side javascript)) . 2601) (undo-tree-id979 . -6) (undo-tree-id980 . -6)) nil (25570 17809 34360 693000) 0 nil])
([nil nil ((#("      const attlist = [
        'field',
        'operator',
        'value',
        'active',
        'condition',
        'rules',
        'types'
      ]" 0 6 (part-side javascript) 6 11 (face web-mode-keyword-face part-side javascript) 11 12 (part-side javascript) 12 19 (face web-mode-variable-name-face part-side javascript) 19 22 (part-side javascript) 22 23 (face (rainbow-delimiters-depth-4-face) part-side javascript) 23 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 33 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 39 49 (part-side javascript) 49 50 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 50 58 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 59 69 (part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 75 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 75 76 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 76 86 (part-side javascript) 86 87 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 87 93 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 93 94 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 94 104 (part-side javascript) 104 105 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 105 114 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 114 115 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 115 125 (part-side javascript) 125 126 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 126 131 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 131 132 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 132 142 (part-side javascript) 142 143 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 143 149 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 149 150 (syntax-table (15) part-side javascript) 150 156 (part-side javascript) 156 157 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 1975) (undo-tree-id976 . -157) (undo-tree-id977 . -24) (undo-tree-id978 . -157)) nil (25570 17809 34356 992000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -1973) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("
" 0 1 (part-side javascript)) . -1974) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 1975) nil (25570 17809 34351 631000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2030) (undo-tree-id969 . -1)) nil (25570 17809 34342 538000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 3154) (undo-tree-id967 . -13) (undo-tree-id968 . -13)) nil (25570 17809 34339 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3161 . 3162) (nil part-side javascript 3154 . 3162) (3154 . 3162)) nil (25570 17931 461880 917000) 0 nil])
([nil nil ((#("let {'parent': _, ...noparent} = currentfilter" 0 3 (face web-mode-keyword-face part-side javascript) 3 4 (part-side javascript) 4 5 (face (rainbow-delimiters-depth-6-face) part-side javascript) 5 6 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 6 12 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 12 13 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 13 29 (part-side javascript) 29 30 (face (rainbow-delimiters-depth-6-face) part-side javascript) 30 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (part-side javascript) 34 35 (part-side javascript) 35 36 (part-side javascript) 36 37 (part-side javascript) 37 38 (part-side javascript) 38 39 (part-side javascript) 39 40 (part-side javascript) 40 41 (part-side javascript) 41 42 (part-side javascript) 42 43 (part-side javascript) 43 44 (part-side javascript) 44 45 (part-side javascript) 45 46 (part-side javascript)) . 2128) (undo-tree-id1138 . -46) (undo-tree-id1139 . -33) (undo-tree-id1140 . -33) (undo-tree-id1141 . -33) (undo-tree-id1142 . -33) (undo-tree-id1143 . -46) (undo-tree-id1144 . -46)) nil (25570 17987 759721 798000) 0 nil] [nil nil ((#("

        
        const objNoReference = left ? JSON.parse(JSON.stringify(currentfilter['rules'][0])) : JSON.parse(JSON.stringify(currentfilter['rules'][1]))

        // TODO: set filtercursor to the second

        for (let i = 0; i < attlist.length; i++) {
          if (attlist[i] in objNoReference) {
            currentfilter[attlist[i]] = objNoReference[attlist[i]]
          }
          else {
            delete currentfilter[attlist[i]]
          }
        }" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 10 (face whitespace-trailing part-side javascript) 10 11 (part-side javascript) 11 19 (part-side javascript) 19 24 (face web-mode-keyword-face part-side javascript) 24 25 (part-side javascript) 25 39 (face web-mode-variable-name-face part-side javascript) 39 54 (part-side javascript) 54 59 (face web-mode-function-call-face part-side javascript) 59 60 (face (rainbow-delimiters-depth-5-face) part-side javascript) 60 65 (part-side javascript) 65 74 (face web-mode-function-call-face part-side javascript) 74 75 (face (rainbow-delimiters-depth-6-face) part-side javascript) 75 88 (part-side javascript) 88 89 (face (rainbow-delimiters-depth-7-face) part-side javascript) 89 90 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 90 95 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 95 96 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 96 97 (face (rainbow-delimiters-depth-7-face) part-side javascript) 97 98 (face (rainbow-delimiters-depth-7-face) part-side javascript) 98 99 (part-side javascript) 99 100 (face (rainbow-delimiters-depth-7-face) part-side javascript) 100 101 (face (rainbow-delimiters-depth-6-face) part-side javascript) 101 102 (face (rainbow-delimiters-depth-5-face) part-side javascript) 102 110 (part-side javascript) 110 115 (face web-mode-function-call-face part-side javascript) 115 116 (face (rainbow-delimiters-depth-5-face) part-side javascript) 116 121 (part-side javascript) 121 130 (face web-mode-function-call-face part-side javascript) 130 131 (face (rainbow-delimiters-depth-6-face) part-side javascript) 131 144 (part-side javascript) 144 145 (face (rainbow-delimiters-depth-7-face) part-side javascript) 145 146 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 146 151 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 151 152 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 152 153 (face (rainbow-delimiters-depth-7-face) part-side javascript) 153 154 (face (rainbow-delimiters-depth-7-face) part-side javascript) 154 155 (part-side javascript) 155 156 (face (rainbow-delimiters-depth-7-face) part-side javascript) 156 157 (face (rainbow-delimiters-depth-6-face) part-side javascript) 157 158 (face (rainbow-delimiters-depth-5-face) part-side javascript) 158 159 (part-side javascript) 159 168 (part-side javascript) 168 169 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 169 171 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 171 175 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 175 177 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 177 180 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 180 181 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 181 193 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 193 207 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 207 208 (syntax-table (12) part-side javascript) 208 217 (part-side javascript) 217 220 (face web-mode-keyword-face part-side javascript) 220 221 (part-side javascript) 221 222 (face (rainbow-delimiters-depth-5-face) part-side javascript) 222 225 (face web-mode-keyword-face part-side javascript) 225 226 (part-side javascript) 226 227 (face web-mode-variable-name-face part-side javascript) 227 256 (part-side javascript) 256 257 (face (rainbow-delimiters-depth-5-face) part-side javascript) 257 258 (part-side javascript) 258 259 (face (rainbow-delimiters-depth-5-face) part-side javascript) 259 260 (part-side javascript) 260 270 (part-side javascript) 270 272 (face web-mode-keyword-face part-side javascript) 272 273 (part-side javascript) 273 274 (face (rainbow-delimiters-depth-6-face) part-side javascript) 274 281 (part-side javascript) 281 282 (face (rainbow-delimiters-depth-7-face) part-side javascript) 282 283 (part-side javascript) 283 284 (face (rainbow-delimiters-depth-7-face) part-side javascript) 284 285 (part-side javascript) 285 287 (face web-mode-keyword-face part-side javascript) 287 302 (part-side javascript) 302 303 (face (rainbow-delimiters-depth-6-face) part-side javascript) 303 304 (part-side javascript) 304 305 (face (rainbow-delimiters-depth-6-face) part-side javascript) 305 306 (part-side javascript) 306 331 (part-side javascript) 331 332 (face (rainbow-delimiters-depth-7-face) part-side javascript) 332 339 (part-side javascript) 339 340 (face (rainbow-delimiters-depth-8-face) part-side javascript) 340 341 (part-side javascript) 341 342 (face (rainbow-delimiters-depth-8-face) part-side javascript) 342 343 (face (rainbow-delimiters-depth-7-face) part-side javascript) 343 360 (part-side javascript) 360 361 (face (rainbow-delimiters-depth-7-face) part-side javascript) 361 368 (part-side javascript) 368 369 (face (rainbow-delimiters-depth-8-face) part-side javascript) 369 370 (part-side javascript) 370 371 (face (rainbow-delimiters-depth-8-face) part-side javascript) 371 372 (face (rainbow-delimiters-depth-7-face) part-side javascript) 372 383 (part-side javascript) 383 384 (face (rainbow-delimiters-depth-6-face) part-side javascript) 384 385 (part-side javascript) 385 395 (part-side javascript) 395 399 (face web-mode-keyword-face part-side javascript) 399 400 (part-side javascript) 400 401 (face (rainbow-delimiters-depth-6-face) part-side javascript) 401 402 (part-side javascript) 402 414 (part-side javascript) 414 420 (face web-mode-keyword-face part-side javascript) 420 434 (part-side javascript) 434 435 (face (rainbow-delimiters-depth-7-face) part-side javascript) 435 442 (part-side javascript) 442 443 (face (rainbow-delimiters-depth-8-face) part-side javascript) 443 444 (part-side javascript) 444 445 (face (rainbow-delimiters-depth-8-face) part-side javascript) 445 446 (face (rainbow-delimiters-depth-7-face) part-side javascript) 446 457 (part-side javascript) 457 458 (face (rainbow-delimiters-depth-6-face) part-side javascript) 458 459 (part-side javascript) 459 467 (part-side javascript) 467 468 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2616) (undo-tree-id1049 . -468) (undo-tree-id1050 . -1) (undo-tree-id1051 . -302) (undo-tree-id1052 . -468) (undo-tree-id1053 . -468)) ((2616 . 3084)) (25570 17931 156512 794000) 0 nil] [nil nil ((#("

        
        const objNoReference = left ? JSON.parse(JSON.stringify(currentfilter['rules'][0])) : JSON.parse(JSON.stringify(currentfilter['rules'][1]))

        // TODO: set filtercursor to the second

        for (let i = 0; i < attlist.length; i++) {
          if (attlist[i] in objNoReference) {
            currentfilter[attlist[i]] = objNoReference[attlist[i]]
          }
          else {
            delete currentfilter[attlist[i]]
          }
        }" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 10 (face whitespace-trailing part-side javascript) 10 11 (part-side javascript) 11 19 (part-side javascript) 19 24 (face web-mode-keyword-face part-side javascript) 24 25 (part-side javascript) 25 39 (face web-mode-variable-name-face part-side javascript) 39 54 (part-side javascript) 54 59 (face web-mode-function-call-face part-side javascript) 59 60 (face (rainbow-delimiters-depth-5-face) part-side javascript) 60 65 (part-side javascript) 65 74 (face web-mode-function-call-face part-side javascript) 74 75 (face (rainbow-delimiters-depth-6-face) part-side javascript) 75 88 (part-side javascript) 88 89 (face (rainbow-delimiters-depth-7-face) part-side javascript) 89 90 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 90 95 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 95 96 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 96 97 (face (rainbow-delimiters-depth-7-face) part-side javascript) 97 98 (face (rainbow-delimiters-depth-7-face) part-side javascript) 98 99 (part-side javascript) 99 100 (face (rainbow-delimiters-depth-7-face) part-side javascript) 100 101 (face (rainbow-delimiters-depth-6-face) part-side javascript) 101 102 (face (rainbow-delimiters-depth-5-face) part-side javascript) 102 110 (part-side javascript) 110 115 (face web-mode-function-call-face part-side javascript) 115 116 (face (rainbow-delimiters-depth-5-face) part-side javascript) 116 121 (part-side javascript) 121 130 (face web-mode-function-call-face part-side javascript) 130 131 (face (rainbow-delimiters-depth-6-face) part-side javascript) 131 144 (part-side javascript) 144 145 (face (rainbow-delimiters-depth-7-face) part-side javascript) 145 146 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 146 151 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 151 152 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 152 153 (face (rainbow-delimiters-depth-7-face) part-side javascript) 153 154 (face (rainbow-delimiters-depth-7-face) part-side javascript) 154 155 (part-side javascript) 155 156 (face (rainbow-delimiters-depth-7-face) part-side javascript) 156 157 (face (rainbow-delimiters-depth-6-face) part-side javascript) 157 158 (face (rainbow-delimiters-depth-5-face) part-side javascript) 158 159 (part-side javascript) 159 168 (part-side javascript) 168 169 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 169 171 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 171 175 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 175 177 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 177 180 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 180 181 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 181 193 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 193 207 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 207 208 (syntax-table (12) part-side javascript) 208 217 (part-side javascript) 217 220 (face web-mode-keyword-face part-side javascript) 220 221 (part-side javascript) 221 222 (face (rainbow-delimiters-depth-5-face) part-side javascript) 222 225 (face web-mode-keyword-face part-side javascript) 225 226 (part-side javascript) 226 227 (face web-mode-variable-name-face part-side javascript) 227 256 (part-side javascript) 256 257 (face (rainbow-delimiters-depth-5-face) part-side javascript) 257 258 (part-side javascript) 258 259 (face (rainbow-delimiters-depth-5-face) part-side javascript) 259 260 (part-side javascript) 260 270 (part-side javascript) 270 272 (face web-mode-keyword-face part-side javascript) 272 273 (part-side javascript) 273 274 (face (rainbow-delimiters-depth-6-face) part-side javascript) 274 281 (part-side javascript) 281 282 (face (rainbow-delimiters-depth-7-face) part-side javascript) 282 283 (part-side javascript) 283 284 (face (rainbow-delimiters-depth-7-face) part-side javascript) 284 285 (part-side javascript) 285 287 (face web-mode-keyword-face part-side javascript) 287 302 (part-side javascript) 302 303 (face (rainbow-delimiters-depth-6-face) part-side javascript) 303 304 (part-side javascript) 304 305 (face (rainbow-delimiters-depth-6-face) part-side javascript) 305 306 (part-side javascript) 306 331 (part-side javascript) 331 332 (face (rainbow-delimiters-depth-7-face) part-side javascript) 332 339 (part-side javascript) 339 340 (face (rainbow-delimiters-depth-8-face) part-side javascript) 340 341 (part-side javascript) 341 342 (face (rainbow-delimiters-depth-8-face) part-side javascript) 342 343 (face (rainbow-delimiters-depth-7-face) part-side javascript) 343 360 (part-side javascript) 360 361 (face (rainbow-delimiters-depth-7-face) part-side javascript) 361 368 (part-side javascript) 368 369 (face (rainbow-delimiters-depth-8-face) part-side javascript) 369 370 (part-side javascript) 370 371 (face (rainbow-delimiters-depth-8-face) part-side javascript) 371 372 (face (rainbow-delimiters-depth-7-face) part-side javascript) 372 383 (part-side javascript) 383 384 (face (rainbow-delimiters-depth-6-face) part-side javascript) 384 385 (part-side javascript) 385 395 (part-side javascript) 395 399 (face web-mode-keyword-face part-side javascript) 399 400 (part-side javascript) 400 401 (face (rainbow-delimiters-depth-6-face) part-side javascript) 401 402 (part-side javascript) 402 414 (part-side javascript) 414 420 (face web-mode-keyword-face part-side javascript) 420 434 (part-side javascript) 434 435 (face (rainbow-delimiters-depth-7-face) part-side javascript) 435 442 (part-side javascript) 442 443 (face (rainbow-delimiters-depth-8-face) part-side javascript) 443 444 (part-side javascript) 444 445 (face (rainbow-delimiters-depth-8-face) part-side javascript) 445 446 (face (rainbow-delimiters-depth-7-face) part-side javascript) 446 457 (part-side javascript) 457 458 (face (rainbow-delimiters-depth-6-face) part-side javascript) 458 459 (part-side javascript) 459 467 (part-side javascript) 467 468 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2616) (undo-tree-id963 . -468) (undo-tree-id964 . -1) (undo-tree-id965 . -302) (undo-tree-id966 . -468)) ((2616 . 3084)) (25570 17809 34329 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2224 . 2225) (nil rear-nonsticky t 2224 . 2225) (nil part-side javascript 2224 . 2225) (nil face (rainbow-delimiters-depth-6-face) 2224 . 2225) (nil part-side javascript 2223 . 2224) (nil part-side javascript 2222 . 2223) (nil face (rainbow-delimiters-depth-6-face) 2222 . 2223) (nil part-side javascript 2203 . 2222) (nil part-side javascript 2202 . 2203) (nil part-side javascript 2200 . 2202) (nil part-side javascript 2199 . 2200) (nil face (rainbow-delimiters-depth-6-face) 2199 . 2200) (nil part-side javascript 2198 . 2199) (nil part-side javascript 2197 . 2198) (nil face (rainbow-delimiters-depth-6-face) 2197 . 2198) (nil part-side javascript 2170 . 2197) (nil part-side javascript 2168 . 2170) (nil part-side javascript 2167 . 2168) (nil face (rainbow-delimiters-depth-6-face) 2167 . 2168) (nil part-side javascript 2151 . 2167) (nil part-side javascript 2150 . 2151) (nil part-token string 2150 . 2151) (nil syntax-table (15) 2150 . 2151) (nil font-lock-face web-mode-javascript-string-face 2150 . 2151) (nil part-side javascript 2144 . 2150) (nil part-token string 2144 . 2150) (nil font-lock-face web-mode-javascript-string-face 2144 . 2150) (nil part-side javascript 2143 . 2144) (nil part-token string 2143 . 2144) (nil syntax-table (15) 2143 . 2144) (nil font-lock-face web-mode-javascript-string-face 2143 . 2144) (nil part-side javascript 2142 . 2143) (nil face (rainbow-delimiters-depth-6-face) 2142 . 2143) (nil part-side javascript 2141 . 2142) (nil part-side javascript 2138 . 2141) (nil face web-mode-keyword-face 2138 . 2141) (nil part-side javascript 2128 . 2138) (2128 . 2225)) nil (25570 17987 759710 404000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2615) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) 2616) ((2615 . 2616)) (25570 17930 605902 901000) 0 nil])
nil
([nil nil ((#("          " 0 10 (part-side javascript)) . -2128) 2127) nil (25570 17987 759699 453000) 0 nil])
([nil nil ((2615 . 2624)) ((#("
        " 0 1 (part-side javascript) 1 9 (face whitespace-trailing part-side javascript)) . 2615)) (25570 17930 277946 646000) 0 nil])
([nil nil ((3127 . 3135) (#("        " 0 8 (part-side javascript)) . 3126) (undo-tree-id1137 . -8) (3125 . 3135)) nil (25570 17987 759697 690000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -2161) (undo-tree-id1031 . -1) (#("u" 0 1 (part-side javascript)) . -2162) (undo-tree-id1032 . -1) (#("r" 0 1 (part-side javascript)) . -2163) (undo-tree-id1033 . -1) (#("r" 0 1 (part-side javascript)) . -2164) (undo-tree-id1034 . -1) (#("e" 0 1 (part-side javascript)) . -2165) (undo-tree-id1035 . -1) (#("n" 0 1 (part-side javascript)) . -2166) (undo-tree-id1036 . -1) (#("t" 0 1 (part-side javascript)) . -2167) (undo-tree-id1037 . -1) (#("f" 0 1 (part-side javascript)) . -2168) (undo-tree-id1038 . -1) (#("i" 0 1 (part-side javascript)) . -2169) (undo-tree-id1039 . -1) (#("l" 0 1 (part-side javascript)) . -2170) (undo-tree-id1040 . -1) (#("t" 0 1 (part-side javascript)) . -2171) (undo-tree-id1041 . -1) (#("e" 0 1 (part-side javascript)) . -2172) (undo-tree-id1042 . -1) (#("r" 0 1 (part-side javascript)) . -2173) (undo-tree-id1043 . -1) 2174) ((2161 . 2174)) (25570 17930 66268 825000) 0 nil])
([nil nil ((#("

        
        const objNoReference = left ? JSON.parse(JSON.stringify(currentfilter['rules'][0])) : JSON.parse(JSON.stringify(currentfilter['rules'][1]))

        // TODO: set filtercursor to the second

        for (let i = 0; i < attlist.length; i++) {
          if (attlist[i] in objNoReference) {
            currentfilter[attlist[i]] = objNoReference[attlist[i]]
          }
          else {
            delete currentfilter[attlist[i]]
          }
        }" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 10 (face whitespace-trailing part-side javascript) 10 11 (part-side javascript) 11 19 (part-side javascript) 19 24 (face web-mode-keyword-face part-side javascript) 24 25 (part-side javascript) 25 39 (face web-mode-variable-name-face part-side javascript) 39 54 (part-side javascript) 54 59 (face web-mode-function-call-face part-side javascript) 59 60 (face (rainbow-delimiters-depth-5-face) part-side javascript) 60 65 (part-side javascript) 65 74 (face web-mode-function-call-face part-side javascript) 74 75 (face (rainbow-delimiters-depth-6-face) part-side javascript) 75 88 (part-side javascript) 88 89 (face (rainbow-delimiters-depth-7-face) part-side javascript) 89 90 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 90 95 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 95 96 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 96 97 (face (rainbow-delimiters-depth-7-face) part-side javascript) 97 98 (face (rainbow-delimiters-depth-7-face) part-side javascript) 98 99 (part-side javascript) 99 100 (face (rainbow-delimiters-depth-7-face) part-side javascript) 100 101 (face (rainbow-delimiters-depth-6-face) part-side javascript) 101 102 (face (rainbow-delimiters-depth-5-face) part-side javascript) 102 110 (part-side javascript) 110 115 (face web-mode-function-call-face part-side javascript) 115 116 (face (rainbow-delimiters-depth-5-face) part-side javascript) 116 121 (part-side javascript) 121 130 (face web-mode-function-call-face part-side javascript) 130 131 (face (rainbow-delimiters-depth-6-face) part-side javascript) 131 144 (part-side javascript) 144 145 (face (rainbow-delimiters-depth-7-face) part-side javascript) 145 146 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 146 151 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 151 152 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 152 153 (face (rainbow-delimiters-depth-7-face) part-side javascript) 153 154 (face (rainbow-delimiters-depth-7-face) part-side javascript) 154 155 (part-side javascript) 155 156 (face (rainbow-delimiters-depth-7-face) part-side javascript) 156 157 (face (rainbow-delimiters-depth-6-face) part-side javascript) 157 158 (face (rainbow-delimiters-depth-5-face) part-side javascript) 158 159 (part-side javascript) 159 168 (part-side javascript) 168 169 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 169 171 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 171 175 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 175 177 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 177 180 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 180 181 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 181 193 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 193 207 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 207 208 (syntax-table (12) part-side javascript) 208 217 (part-side javascript) 217 220 (face web-mode-keyword-face part-side javascript) 220 221 (part-side javascript) 221 222 (face (rainbow-delimiters-depth-5-face) part-side javascript) 222 225 (face web-mode-keyword-face part-side javascript) 225 226 (part-side javascript) 226 227 (face web-mode-variable-name-face part-side javascript) 227 256 (part-side javascript) 256 257 (face (rainbow-delimiters-depth-5-face) part-side javascript) 257 258 (part-side javascript) 258 259 (face (rainbow-delimiters-depth-5-face) part-side javascript) 259 260 (part-side javascript) 260 270 (part-side javascript) 270 272 (face web-mode-keyword-face part-side javascript) 272 273 (part-side javascript) 273 274 (face (rainbow-delimiters-depth-6-face) part-side javascript) 274 281 (part-side javascript) 281 282 (face (rainbow-delimiters-depth-7-face) part-side javascript) 282 283 (part-side javascript) 283 284 (face (rainbow-delimiters-depth-7-face) part-side javascript) 284 285 (part-side javascript) 285 287 (face web-mode-keyword-face part-side javascript) 287 302 (part-side javascript) 302 303 (face (rainbow-delimiters-depth-6-face) part-side javascript) 303 304 (part-side javascript) 304 305 (face (rainbow-delimiters-depth-6-face) part-side javascript) 305 306 (part-side javascript) 306 331 (part-side javascript) 331 332 (face (rainbow-delimiters-depth-7-face) part-side javascript) 332 339 (part-side javascript) 339 340 (face (rainbow-delimiters-depth-8-face) part-side javascript) 340 341 (part-side javascript) 341 342 (face (rainbow-delimiters-depth-8-face) part-side javascript) 342 343 (face (rainbow-delimiters-depth-7-face) part-side javascript) 343 360 (part-side javascript) 360 361 (face (rainbow-delimiters-depth-7-face) part-side javascript) 361 368 (part-side javascript) 368 369 (face (rainbow-delimiters-depth-8-face) part-side javascript) 369 370 (part-side javascript) 370 371 (face (rainbow-delimiters-depth-8-face) part-side javascript) 371 372 (face (rainbow-delimiters-depth-7-face) part-side javascript) 372 383 (part-side javascript) 383 384 (face (rainbow-delimiters-depth-6-face) part-side javascript) 384 385 (part-side javascript) 385 395 (part-side javascript) 395 399 (face web-mode-keyword-face part-side javascript) 399 400 (part-side javascript) 400 401 (face (rainbow-delimiters-depth-6-face) part-side javascript) 401 402 (part-side javascript) 402 414 (part-side javascript) 414 420 (face web-mode-keyword-face part-side javascript) 420 434 (part-side javascript) 434 435 (face (rainbow-delimiters-depth-7-face) part-side javascript) 435 442 (part-side javascript) 442 443 (face (rainbow-delimiters-depth-8-face) part-side javascript) 443 444 (part-side javascript) 444 445 (face (rainbow-delimiters-depth-8-face) part-side javascript) 445 446 (face (rainbow-delimiters-depth-7-face) part-side javascript) 446 457 (part-side javascript) 457 458 (face (rainbow-delimiters-depth-6-face) part-side javascript) 458 459 (part-side javascript) 459 467 (part-side javascript) 467 468 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2657) (undo-tree-id1132 . -468) (undo-tree-id1133 . -1) (undo-tree-id1134 . -302) (undo-tree-id1135 . -468) (undo-tree-id1136 . -468)) nil (25570 17987 759694 831000) 0 nil])
([nil nil ((2161 . 2174)) ((#("currentfilter" 0 13 (part-side javascript)) . 2161) (undo-tree-id1089 . -13) (undo-tree-id1090 . -13) (undo-tree-id1091 . -13) (undo-tree-id1092 . -13) (undo-tree-id1093 . -13) (undo-tree-id1094 . -13) (undo-tree-id1095 . -13) (undo-tree-id1096 . -13) (undo-tree-id1097 . -13) (undo-tree-id1098 . -13) (undo-tree-id1099 . -13) (undo-tree-id1100 . -13) (undo-tree-id1101 . -13) (undo-tree-id1102 . -13) (undo-tree-id1103 . -13) (undo-tree-id1104 . -13) (undo-tree-id1105 . -13) (undo-tree-id1106 . -13) (undo-tree-id1107 . -13) (undo-tree-id1108 . -13) (undo-tree-id1109 . -13) (undo-tree-id1110 . -13) (undo-tree-id1111 . -13)) (25570 17929 825849 603000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2656) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) 2657) nil (25570 17987 759687 655000) 0 nil])
([nil nil ((2175 . 2176) (2174 . 2176) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -2174) (2174 . 2175)) ((#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 2174) (2174 . 2175) (#("[]" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 2174) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (#("0" 0 1 (part-side javascript)) . 2175)) (25570 17929 626250 741000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2656) (undo-tree-id1126 . -1)) nil (25570 17987 759679 537000) 0 nil])
([nil nil ((2174 . 2180)) ((#(".rules" 0 6 (part-side javascript)) . 2174) (undo-tree-id1080 . -5)) (25570 17929 396949 79000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2215) (undo-tree-id1125 . -1)) nil (25570 17987 759677 165000) 0 nil])
([nil nil ((2183 . 2186)) ((#(" : " 0 2 (part-side javascript) 2 3 (part-side javascript)) . 2183) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -2) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3)) (25570 17929 156195 405000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . 2213)) nil (25570 17987 759674 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2207 . 2208) (nil part-side javascript 2207 . 2208) (nil face (rainbow-delimiters-depth-6-face) 2207 . 2208) (nil part-side javascript 2206 . 2207) (nil part-side javascript 2205 . 2206) (nil face (rainbow-delimiters-depth-6-face) 2205 . 2206) (nil part-side javascript 2186 . 2205) (2186 . 2208)) ((#("currentfilter.rules[0]" 0 19 (part-side javascript) 19 20 (face (rainbow-delimiters-depth-6-face) part-side javascript) 20 21 (part-side javascript) 21 22 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky nil)) . 2186) (undo-tree-id1068 . -22) (nil face (rainbow-delimiters-depth-6-face) 2205 . 2206) (nil face (rainbow-delimiters-depth-6-face) 2207 . 2208) (nil rear-nonsticky t 2207 . 2208)) (25570 17928 756876 658000) 0 nil])
([nil nil ((2213 . 2214)) nil (25570 17987 759673 383000) 0 nil])
([nil nil ((2161 . 2168)) ((#("left ? " 0 7 (part-side javascript)) . 2161) (undo-tree-id1054 . -7) (undo-tree-id1055 . -7) (undo-tree-id1056 . -7) (undo-tree-id1057 . -7) (undo-tree-id1058 . -7) (undo-tree-id1059 . -7) (undo-tree-id1060 . -7) (undo-tree-id1061 . -7) (undo-tree-id1062 . -7) (undo-tree-id1063 . -7) (undo-tree-id1064 . -7) (undo-tree-id1065 . -7) (undo-tree-id1066 . -7) (undo-tree-id1067 . -7)) (25570 17928 461733 167000) 0 nil])
([nil nil ((#("
        this.$forceUpdate()
        this.checkEdit = this.updateEdit(noparent)
        this.forceRecomputeCounter++" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 13 (face web-mode-constant-face part-side javascript) 13 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-5-face) part-side javascript) 27 28 (face (rainbow-delimiters-depth-5-face) part-side javascript) 28 29 (part-side javascript) 29 37 (part-side javascript) 37 41 (face web-mode-constant-face part-side javascript) 41 54 (part-side javascript) 54 58 (face web-mode-constant-face part-side javascript) 58 59 (part-side javascript) 59 69 (face web-mode-function-call-face part-side javascript) 69 70 (face (rainbow-delimiters-depth-5-face) part-side javascript) 70 77 (part-side javascript) 77 78 (part-side javascript rear-nonsticky t) 78 79 (face (rainbow-delimiters-depth-5-face) part-side javascript) 79 80 (part-side javascript) 80 88 (part-side javascript) 88 92 (face web-mode-constant-face part-side javascript) 92 116 (part-side javascript)) . 2664) (undo-tree-id1116 . -116) (undo-tree-id1117 . -79) (undo-tree-id1118 . -70) (undo-tree-id1119 . -70) (undo-tree-id1120 . -78) (undo-tree-id1121 . -78) (undo-tree-id1122 . -1) (undo-tree-id1123 . -116) (undo-tree-id1124 . 116)) nil (25570 17987 760354 360000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -2653) (#("    " 0 4 (face whitespace-trailing part-side javascript)) . -2216) 2168) ((2216 . 2220) (2653 . 2661) (t 25570 17881 412126 277000)) (25570 17881 393498 466000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2655) (undo-tree-id1145 . -1)) nil (25570 18004 831747 834000) 0 nil] [nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t)) . 2654) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1)) ((2654 . 2655)) (25570 17987 759655 163000) 0 nil])
nil
([nil nil ((2656 . 2664) (#("        " 0 8 (part-side javascript)) . 2655) (undo-tree-id1216 . -8) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8) (undo-tree-id1219 . -8) (undo-tree-id1220 . -8) (2663 . 2664)) nil (25570 18072 449931 352000) 0 nil] [nil nil ((2645 . 2656)) ((#("
          " 0 1 (part-side javascript) 1 11 (part-side javascript)) . 2645) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -1) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -11) (undo-tree-id1162 . -11) (undo-tree-id1163 . -11) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (undo-tree-id1166 . -11) (undo-tree-id1167 . -11) (undo-tree-id1168 . -11) (undo-tree-id1169 . -11) (undo-tree-id1170 . -11) (undo-tree-id1171 . -11) (undo-tree-id1172 . -11) (undo-tree-id1173 . -11) (undo-tree-id1174 . -11) (undo-tree-id1175 . -11) (undo-tree-id1176 . -11) (undo-tree-id1177 . -11) (undo-tree-id1178 . -11)) (25570 18003 849313 499000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2779 . 2780) (nil part-side javascript 2756 . 2780) (nil part-side javascript 2752 . 2756) (nil face web-mode-constant-face 2752 . 2756) (nil part-side javascript 2744 . 2752) (nil part-side javascript 2743 . 2744) (nil part-side javascript 2742 . 2743) (nil face (rainbow-delimiters-depth-5-face) 2742 . 2743) (nil rear-nonsticky t 2741 . 2742) (nil part-side javascript 2741 . 2742) (nil part-side javascript 2734 . 2741) (nil part-side javascript 2733 . 2734) (nil face (rainbow-delimiters-depth-5-face) 2733 . 2734) (nil part-side javascript 2723 . 2733) (nil face web-mode-function-call-face 2723 . 2733) (nil part-side javascript 2722 . 2723) (nil part-side javascript 2718 . 2722) (nil face web-mode-constant-face 2718 . 2722) (nil part-side javascript 2705 . 2718) (nil part-side javascript 2701 . 2705) (nil face web-mode-constant-face 2701 . 2705) (nil part-side javascript 2693 . 2701) (nil part-side javascript 2692 . 2693) (nil part-side javascript 2691 . 2692) (nil face (rainbow-delimiters-depth-5-face) 2691 . 2692) (nil part-side javascript 2690 . 2691) (nil face (rainbow-delimiters-depth-5-face) 2690 . 2691) (nil part-side javascript 2677 . 2690) (nil part-side javascript 2673 . 2677) (nil face web-mode-constant-face 2673 . 2677) (nil part-side javascript 2665 . 2673) (nil part-side javascript 2664 . 2665) (2664 . 2780)) nil (25570 18072 449922 346000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2771 . 2772) (nil part-side javascript 2748 . 2772) (nil part-side javascript 2744 . 2748) (nil face web-mode-constant-face 2744 . 2748) (nil part-side javascript 2736 . 2744) (nil part-side javascript 2735 . 2736) (nil part-side javascript 2734 . 2735) (nil face (rainbow-delimiters-depth-6-face) 2734 . 2735) (nil rear-nonsticky t 2733 . 2734) (nil part-side javascript 2733 . 2734) (nil part-side javascript 2726 . 2733) (nil part-side javascript 2725 . 2726) (nil face (rainbow-delimiters-depth-6-face) 2725 . 2726) (nil part-side javascript 2715 . 2725) (nil face web-mode-function-call-face 2715 . 2725) (nil part-side javascript 2714 . 2715) (nil part-side javascript 2710 . 2714) (nil face web-mode-constant-face 2710 . 2714) (nil part-side javascript 2697 . 2710) (nil part-side javascript 2693 . 2697) (nil face web-mode-constant-face 2693 . 2697) (nil part-side javascript 2685 . 2693) (nil part-side javascript 2684 . 2685) (nil part-side javascript 2683 . 2684) (nil face (rainbow-delimiters-depth-6-face) 2683 . 2684) (nil part-side javascript 2682 . 2683) (nil face (rainbow-delimiters-depth-6-face) 2682 . 2683) (nil part-side javascript 2669 . 2682) (nil part-side javascript 2665 . 2669) (nil face web-mode-constant-face 2665 . 2669) (nil part-side javascript 2657 . 2665) (nil part-side javascript 2656 . 2657) (2656 . 2772)) ((#("
        this.$forceUpdate()
        this.checkEdit = this.updateEdit(noparent)
        this.forceRecomputeCounter++" 0 9 (part-side javascript) 9 13 (face web-mode-constant-face part-side javascript) 13 26 (part-side javascript) 26 27 (face (rainbow-delimiters-depth-6-face) part-side javascript) 27 28 (face (rainbow-delimiters-depth-6-face) part-side javascript) 28 29 (part-side javascript) 29 37 (part-side javascript) 37 41 (face web-mode-constant-face part-side javascript) 41 54 (part-side javascript) 54 58 (face web-mode-constant-face part-side javascript) 58 59 (part-side javascript) 59 69 (face web-mode-function-call-face part-side javascript) 69 70 (face (rainbow-delimiters-depth-6-face) part-side javascript) 70 77 (part-side javascript) 77 78 (part-side javascript rear-nonsticky t) 78 79 (face (rainbow-delimiters-depth-6-face) part-side javascript) 79 80 (part-side javascript) 80 88 (part-side javascript) 88 92 (face web-mode-constant-face part-side javascript) 92 115 (part-side javascript) 115 116 (part-side javascript rear-nonsticky nil)) . 2656) (undo-tree-id1146 . -1) (undo-tree-id1147 . 116) (nil face (rainbow-delimiters-depth-6-face) 2682 . 2683) (nil face (rainbow-delimiters-depth-6-face) 2683 . 2684) (nil face (rainbow-delimiters-depth-6-face) 2725 . 2726) (nil rear-nonsticky nil 2733 . 2734) (nil face (rainbow-delimiters-depth-6-face) 2734 . 2735) (nil rear-nonsticky t 2771 . 2772)) (25570 18003 844849 845000) 0 nil])
([nil nil ((#("        }
" 0 8 (part-side javascript) 8 9 (face (rainbow-delimiters-depth-4-face) part-side javascript rear-nonsticky t) 9 10 (part-side javascript)) . 2656) (undo-tree-id1208 . -9) (undo-tree-id1209 . -9) (undo-tree-id1210 . -9) (undo-tree-id1211 . -9) (undo-tree-id1212 . -9) (undo-tree-id1213 . -9) (2617 . 2656) (#("          this.filtercursordetail -= 1
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 38 (part-side javascript) 38 39 (part-side javascript)) . 2607) (undo-tree-id1214 . -8) (undo-tree-id1215 . -38) (2646 . 2656) 2615) nil (25570 18072 449911 426000) 0 nil])
nil
([nil nil ((#("        
" 0 8 (face whitespace-trailing part-side javascript) 8 9 (part-side javascript)) . 2665) (undo-tree-id1206 . -8) (2626 . 2665) (#("          this.filtercursordetail -= 1
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 38 (part-side javascript) 38 39 (part-side javascript)) . 2617) (undo-tree-id1207 . -8) (2656 . 2665) 2625) nil (25570 18072 449898 850000) 0 nil])
([nil nil ((#("          this.filtercursordetail -= 1
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 38 (part-side javascript) 38 39 (part-side javascript)) . 2665) (undo-tree-id1203 . -39) (undo-tree-id1204 . -8) (undo-tree-id1205 . -39) (2656 . 2665) (#("        
" 0 8 (face whitespace-trailing part-side javascript) 8 9 (part-side javascript)) . 2617) (2626 . 2665) 2634) nil (25570 18072 449857 984000) 0 nil])
([nil nil ((#("        
" 0 8 (face whitespace-trailing part-side javascript) 8 9 (part-side javascript)) . 2665) (undo-tree-id1201 . -9) (2626 . 2665) (#("          this.filtercursordetail -= 1
" 0 10 (part-side javascript) 10 14 (face web-mode-constant-face part-side javascript) 14 38 (part-side javascript) 38 39 (part-side javascript)) . 2617) (undo-tree-id1202 . -8) (2656 . 2665) 2625) nil (25570 18072 449852 118000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -2634) (undo-tree-id1200 . -1) 2635) nil (25570 18072 449847 920000) 0 nil])
([nil nil ((2616 . 2625)) nil (25570 18072 449845 390000) 0 nil])
([nil nil ((2631 . 2633) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -2631) (2625 . 2632)) nil (25570 18072 449843 948000) 0 nil])
([nil nil ((2634 . 2642) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 2633) (undo-tree-id1198 . -8) (undo-tree-id1199 . 10) (2641 . 2643) (2632 . 2642)) nil (25570 18072 449842 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2657 . 2658) (nil part-side javascript 2657 . 2658) (nil face (rainbow-delimiters-depth-6-face) 2657 . 2658) (nil part-side javascript 2649 . 2657) (nil part-side javascript 2648 . 2649) (nil face (rainbow-delimiters-depth-6-face) 2648 . 2649) (nil part-side javascript 2637 . 2648) (nil part-side javascript 2633 . 2637) (nil face web-mode-constant-face 2633 . 2637) (2633 . 2658)) nil (25570 18072 449837 375000) 0 nil])
([nil nil ((2633 . 2643) 2658) nil (25570 18072 449833 613000) 0 nil])
([nil nil ((#("          let {'parent': _, ...noparent} = left ? currentfilter.rules[0] : currentfilter.rules[1]    
" 0 10 (part-side javascript) 10 13 (face web-mode-keyword-face part-side javascript) 13 14 (part-side javascript) 14 15 (face (rainbow-delimiters-depth-6-face) part-side javascript) 15 16 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 16 22 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 22 23 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 23 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-6-face) part-side javascript) 40 69 (part-side javascript) 69 70 (face (rainbow-delimiters-depth-6-face) part-side javascript) 70 71 (part-side javascript) 71 72 (face (rainbow-delimiters-depth-6-face) part-side javascript) 72 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-6-face) part-side javascript) 95 96 (part-side javascript) 96 97 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky t) 97 101 (face whitespace-trailing part-side javascript) 101 102 (part-side javascript)) . 2220) (undo-tree-id1187 . -101) (undo-tree-id1188 . -9) (undo-tree-id1189 . -10) (undo-tree-id1190 . -10) (undo-tree-id1191 . -10) (undo-tree-id1192 . -10) (undo-tree-id1193 . -10) (undo-tree-id1194 . -10) (undo-tree-id1195 . -102) (undo-tree-id1196 . -9) (2174 . 2220) (#("          const parent = currentfilter.parent
" 0 10 (part-side javascript) 10 15 (face web-mode-keyword-face part-side javascript) 15 16 (part-side javascript) 16 22 (face web-mode-variable-name-face part-side javascript) 22 46 (part-side javascript)) . 2072) (undo-tree-id1197 . -45) (2118 . 2220) 2127) nil (25570 18072 449830 817000) 0 nil])
([nil nil ((#("          let {'parent': _, ...noparent} = left ? currentfilter.rules[0] : currentfilter.rules[1]    
" 0 10 (part-side javascript) 10 13 (face web-mode-keyword-face part-side javascript) 13 14 (part-side javascript) 14 15 (face (rainbow-delimiters-depth-6-face) part-side javascript) 15 16 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 16 22 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 22 23 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 23 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-6-face) part-side javascript) 40 69 (part-side javascript) 69 70 (face (rainbow-delimiters-depth-6-face) part-side javascript) 70 71 (part-side javascript) 71 72 (face (rainbow-delimiters-depth-6-face) part-side javascript) 72 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-6-face) part-side javascript) 95 96 (part-side javascript) 96 97 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky t) 97 101 (face whitespace-trailing part-side javascript) 101 102 (part-side javascript)) . 2174) (undo-tree-id1185 . -9) (undo-tree-id1186 . -102) (2133 . 2174) (#("        if ('parent' in currentfilter) {
" 0 8 (part-side javascript) 8 9 (face web-mode-keyword-face part-side javascript) 9 10 (face web-mode-keyword-face part-side javascript) 10 11 (part-side javascript) 11 12 (face (rainbow-delimiters-depth-5-face) part-side javascript) 12 13 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 13 19 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 21 (part-side javascript) 21 23 (face web-mode-keyword-face part-side javascript) 23 37 (part-side javascript) 37 38 (face (rainbow-delimiters-depth-5-face) part-side javascript) 38 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-5-face) part-side javascript) 40 41 (part-side javascript)) . 2031) (2072 . 2174) 2081) nil (25570 18072 449816 438000) 0 nil])
([nil nil ((#("          let {'parent': _, ...noparent} = left ? currentfilter.rules[0] : currentfilter.rules[1]    
" 0 10 (part-side javascript) 10 13 (face web-mode-keyword-face part-side javascript) 13 14 (part-side javascript) 14 15 (face (rainbow-delimiters-depth-5-face) part-side javascript) 15 16 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 16 22 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 22 23 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 23 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-5-face) part-side javascript) 40 69 (part-side javascript) 69 70 (face (rainbow-delimiters-depth-5-face) part-side javascript) 70 71 (part-side javascript) 71 72 (face (rainbow-delimiters-depth-5-face) part-side javascript) 72 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-5-face) part-side javascript) 95 96 (part-side javascript) 96 97 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 97 101 (face whitespace-trailing part-side javascript) 101 102 (part-side javascript)) . 2133) (undo-tree-id1182 . -102) (undo-tree-id1183 . -9) (undo-tree-id1184 . -102) (2132 . 2133) (#("
" 0 1 (part-side javascript)) . 2030) (2031 . 2133) 2040) nil (25570 18072 449811 588000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -2038) (undo-tree-id1181 . -1) 2039) nil (25570 18072 449805 421000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2130) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1)) nil (25570 18072 449795 690000) 0 nil])
([nil nil ((#("        " 0 8 (face whitespace-trailing part-side javascript)) . -2672) (#("    " 0 4 (face whitespace-trailing part-side javascript)) . -2125) 2675) nil (25570 18072 449780 662000) 0 nil])
([nil nil ((#("
        this.filtercursordetail -= 1" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 13 (face web-mode-constant-face part-side javascript) 13 37 (part-side javascript)) . 2672) (undo-tree-id1227 . -37) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -37) (t 25570 18072 468422 235000)) nil (25570 18320 541432 689000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2671) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) 2672) nil (25570 18320 541418 980000) 0 nil])
([nil nil ((1975 . 1981) (#("      " 0 6 (part-side javascript)) . 1974) (undo-tree-id1239 . -6) (1973 . 1981) (t 25570 18320 560773 90000)) nil (25570 18388 598783 382000) 0 nil])
([nil nil ((1981 . 1984)) nil (25570 18388 598780 310000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -1981) (undo-tree-id1236 . -1) (#("o" 0 1 (part-side javascript)) . -1982) (undo-tree-id1237 . -1) (#("f" 0 1 (part-side javascript)) . -1983) (undo-tree-id1238 . -1) 1984) nil (25570 18388 598778 651000) 0 nil])
([nil nil ((1985 . 2001) (1984 . 1986) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1984) (1981 . 1985)) nil (25570 18388 598773 209000) 0 nil])
([nil nil ((2000 . 2007)) nil (25570 18388 598771 64000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2006) (undo-tree-id1235 . -1) 2007) nil (25570 18388 598769 753000) 0 nil])
([nil nil ((2008 . 2009)) nil (25570 18388 598767 68000) 0 nil])
([nil nil ((2009 . 2011) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2009) (2009 . 2010)) nil (25570 18388 598765 799000) 0 nil])
([nil nil ((2012 . 2018) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 2011) (undo-tree-id1233 . 8) (2011 . 2019) (#("      " 0 6 (part-side javascript)) . 2011) (undo-tree-id1234 . -6) (2010 . 2018)) nil (25570 18388 598762 760000) 0 nil])
([nil nil ((2010 . 2019)) nil (25570 18388 603111 491000) 0 nil])
([nil nil ((2021 . 2023) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -2021) (2019 . 2022)) nil (25570 18597 555719 512000) 0 nil] [nil nil ((nil rear-nonsticky nil 2125 . 2126) (nil part-side javascript 2125 . 2126) (nil part-token string 2125 . 2126) (nil font-lock-face web-mode-javascript-string-face 2125 . 2126) (nil part-side javascript 2122 . 2125) (nil part-token string 2122 . 2125) (nil font-lock-face web-mode-javascript-string-face 2122 . 2125) (nil part-side javascript 2121 . 2122) (nil part-token string 2121 . 2122) (nil syntax-table (15) 2121 . 2122) (nil font-lock-face web-mode-javascript-string-face 2121 . 2122) (nil part-side javascript 2087 . 2121) (nil part-side javascript 2062 . 2087) (nil part-side javascript 2060 . 2062) (nil face web-mode-keyword-face 2060 . 2062) (nil part-side javascript 2059 . 2060) (nil part-side javascript 2058 . 2059) (nil part-token string 2058 . 2059) (nil syntax-table (15) 2058 . 2059) (nil font-lock-face web-mode-javascript-string-face 2058 . 2059) (nil part-side javascript 2049 . 2058) (nil part-token string 2049 . 2058) (nil font-lock-face web-mode-javascript-string-face 2049 . 2058) (nil part-side javascript 2048 . 2049) (nil part-token string 2048 . 2049) (nil syntax-table (15) 2048 . 2049) (nil font-lock-face web-mode-javascript-string-face 2048 . 2049) (nil part-side javascript 2044 . 2048) (nil rear-nonsticky t 2043 . 2044) (nil part-side javascript 2043 . 2044) (nil part-side javascript 2031 . 2043) (nil part-side javascript 2030 . 2031) (nil part-side javascript 2028 . 2030) (nil face web-mode-keyword-face 2028 . 2030) (nil part-side javascript 2027 . 2028) (nil part-side javascript 2026 . 2027) (nil part-token string 2026 . 2027) (nil syntax-table (15) 2026 . 2027) (nil font-lock-face web-mode-javascript-string-face 2026 . 2027) (nil part-side javascript 2020 . 2026) (nil part-token string 2020 . 2026) (nil font-lock-face web-mode-javascript-string-face 2020 . 2026) (nil part-side javascript 2019 . 2020) (nil part-token string 2019 . 2020) (nil syntax-table (15) 2019 . 2020) (nil font-lock-face web-mode-javascript-string-face 2019 . 2020) (2019 . 2126)) ((#("'parent' in currentfilter && 'condition' in currentfilter.parent && currentfilter.parent.condition == 'not'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1 7 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 7 8 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 8 9 (part-side javascript) 9 11 (face web-mode-keyword-face part-side javascript) 11 24 (part-side javascript) 24 25 (part-side javascript rear-nonsticky t) 25 29 (part-side javascript) 29 30 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 30 39 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 39 40 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 40 41 (part-side javascript) 41 43 (face web-mode-keyword-face part-side javascript) 43 102 (part-side javascript) 102 103 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 103 106 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 106 107 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript rear-nonsticky nil)) . 2019) (undo-tree-id1240 . -107) (nil syntax-table (15) 2019 . 2020) (nil syntax-table (15) 2026 . 2027) (nil rear-nonsticky nil 2043 . 2044) (nil syntax-table (15) 2048 . 2049) (nil syntax-table (15) 2058 . 2059) (nil syntax-table (15) 2121 . 2122) (nil rear-nonsticky t 2125 . 2126)) (25570 18388 598740 682000) 0 nil])
([nil nil ((2021 . 2022)) nil (25570 18597 555718 153000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2129 . 2130) (nil part-side javascript 2129 . 2130) (nil part-token string 2129 . 2130) (nil syntax-table (15) 2129 . 2130) (nil font-lock-face web-mode-javascript-string-face 2129 . 2130) (nil part-side javascript 2126 . 2129) (nil part-token string 2126 . 2129) (nil font-lock-face web-mode-javascript-string-face 2126 . 2129) (nil part-side javascript 2125 . 2126) (nil part-token string 2125 . 2126) (nil syntax-table (15) 2125 . 2126) (nil font-lock-face web-mode-javascript-string-face 2125 . 2126) (nil part-side javascript 2091 . 2125) (nil part-side javascript 2066 . 2091) (nil part-side javascript 2064 . 2066) (nil face web-mode-keyword-face 2064 . 2066) (nil part-side javascript 2063 . 2064) (nil part-side javascript 2062 . 2063) (nil part-token string 2062 . 2063) (nil syntax-table (15) 2062 . 2063) (nil font-lock-face web-mode-javascript-string-face 2062 . 2063) (nil part-side javascript 2053 . 2062) (nil part-token string 2053 . 2062) (nil font-lock-face web-mode-javascript-string-face 2053 . 2062) (nil part-side javascript 2052 . 2053) (nil part-token string 2052 . 2053) (nil syntax-table (15) 2052 . 2053) (nil font-lock-face web-mode-javascript-string-face 2052 . 2053) (nil part-side javascript 2048 . 2052) (nil rear-nonsticky t 2047 . 2048) (nil part-side javascript 2047 . 2048) (nil part-side javascript 2035 . 2047) (nil part-side javascript 2034 . 2035) (nil part-side javascript 2032 . 2034) (nil face web-mode-keyword-face 2032 . 2034) (nil part-side javascript 2031 . 2032) (nil part-side javascript 2030 . 2031) (nil part-token string 2030 . 2031) (nil syntax-table (15) 2030 . 2031) (nil font-lock-face web-mode-javascript-string-face 2030 . 2031) (nil part-side javascript 2024 . 2030) (nil part-token string 2024 . 2030) (nil font-lock-face web-mode-javascript-string-face 2024 . 2030) (nil part-side javascript 2023 . 2024) (nil part-token string 2023 . 2024) (nil syntax-table (15) 2023 . 2024) (nil font-lock-face web-mode-javascript-string-face 2023 . 2024) (2023 . 2130)) nil (25570 18597 555714 878000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2127) (undo-tree-id1257 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2128) (undo-tree-id1258 . -1) 2129) nil (25570 18597 555704 115000) 0 nil])
([nil nil ((2127 . 2128)) nil (25570 18597 555700 724000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2126) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2127) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) 2128) nil (25570 18597 555699 279000) 0 nil])
([nil nil ((2126 . 2129)) nil (25570 18597 555693 863000) 0 nil])
([nil nil ((2091 . 2093) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -2091) (2091 . 2092)) nil (25570 18597 555692 677000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 2092)) nil (25570 18597 555691 174000) 0 nil])
([nil nil ((2132 . 2133)) nil (25570 18597 555690 317000) 0 nil])
([nil nil ((2131 . 2135)) nil (25570 18597 555689 425000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2173 . 2174) (nil rear-nonsticky t 2173 . 2174) (nil part-side javascript 2173 . 2174) (nil part-token string 2173 . 2174) (nil syntax-table (15) 2173 . 2174) (nil font-lock-face web-mode-javascript-string-face 2173 . 2174) (nil face (whitespace-line web-mode-javascript-string-face) 2173 . 2174) (nil part-side javascript 2170 . 2173) (nil part-token string 2170 . 2173) (nil font-lock-face web-mode-javascript-string-face 2170 . 2173) (nil face (whitespace-line web-mode-javascript-string-face) 2170 . 2173) (nil part-side javascript 2169 . 2170) (nil part-token string 2169 . 2170) (nil syntax-table (15) 2169 . 2170) (nil font-lock-face web-mode-javascript-string-face 2169 . 2170) (nil face (whitespace-line web-mode-javascript-string-face) 2169 . 2170) (nil part-side javascript 2161 . 2169) (nil face (whitespace-line) 2161 . 2169) (nil part-side javascript 2135 . 2161) (2135 . 2174)) nil (25570 18597 555687 591000) 0 nil])
([nil nil ((#("a" 0 1 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2170) (undo-tree-id1250 . -1) (#("n" 0 1 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2171) (undo-tree-id1251 . -1) (#("d" 0 1 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2172) (undo-tree-id1252 . -1) 2173) nil (25570 18597 555682 120000) 0 nil])
([nil nil ((2170 . 2172)) nil (25570 18597 555677 248000) 0 nil])
([nil nil ((#(") {
        if (" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (part-side javascript) 2 3 (face (rainbow-delimiters-depth-4-face) part-side javascript) 3 4 (part-side javascript) 4 12 (part-side javascript) 12 14 (face web-mode-keyword-face part-side javascript) 14 15 (part-side javascript) 15 16 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2007) (undo-tree-id1245 . -16) (undo-tree-id1246 . -4) (undo-tree-id1247 . -12) (undo-tree-id1248 . -16) (undo-tree-id1249 . -16)) nil (25570 18597 555675 885000) 0 nil])
([nil nil ((2007 . 2011)) nil (25570 18597 555668 931000) 0 nil])
([nil nil ((2164 . 2166) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face whitespace-line) part-side javascript)) . -2164) (2163 . 2165)) nil (25570 18597 555667 794000) 0 nil])
([nil nil ((2167 . 2173) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 2166) (undo-tree-id1243 . 8) (2166 . 2174) (#("      " 0 6 (part-side javascript)) . 2166) (undo-tree-id1244 . -6) (2165 . 2173)) nil (25570 18597 555665 707000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2173)) nil (25570 18597 555660 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2728 . 2729) (nil part-side javascript 2728 . 2729) (nil face (rainbow-delimiters-depth-5-face) 2728 . 2729) (nil part-side javascript 2719 . 2728) (nil part-side javascript 2718 . 2719) (nil face (rainbow-delimiters-depth-6-face) 2718 . 2719) (nil rear-nonsticky t 2717 . 2718) (nil part-side javascript 2717 . 2718) (nil part-side javascript 2710 . 2717) (nil part-side javascript 2709 . 2710) (nil face (rainbow-delimiters-depth-6-face) 2709 . 2710) (nil part-side javascript 2708 . 2709) (nil part-side javascript 2706 . 2708) (nil part-side javascript 2698 . 2706) (nil part-side javascript 2694 . 2698) (nil face web-mode-constant-face 2694 . 2698) (nil part-side javascript 2684 . 2694) (nil part-side javascript 2683 . 2684) (nil part-side javascript 2682 . 2683) (nil face (rainbow-delimiters-depth-5-face) 2682 . 2683) (nil part-side javascript 2681 . 2682) (nil part-side javascript 2677 . 2681) (nil face web-mode-keyword-face 2677 . 2681) (nil part-side javascript 2669 . 2677) (nil part-side javascript 2668 . 2669) (nil part-side javascript 2667 . 2668) (nil face (rainbow-delimiters-depth-5-face) 2667 . 2668) (nil part-side javascript 2658 . 2667) (nil rear-nonsticky t 2657 . 2658) (nil part-side javascript 2657 . 2658) (nil part-side javascript 2650 . 2657) (nil part-side javascript 2647 . 2650) (nil part-side javascript 2646 . 2647) (nil face (rainbow-delimiters-depth-6-face) 2646 . 2647) (nil part-side javascript 2637 . 2646) (nil part-side javascript 2636 . 2637) (nil face (rainbow-delimiters-depth-6-face) 2636 . 2637) (nil part-side javascript 2618 . 2636) (nil part-side javascript 2608 . 2618) (nil part-side javascript 2607 . 2608) (nil part-side javascript 2599 . 2607) (nil part-side javascript 2592 . 2599) (nil part-side javascript 2590 . 2592) (nil part-side javascript 2574 . 2590) (nil part-side javascript 2564 . 2574) (nil part-side javascript 2562 . 2564) (nil part-side javascript 2551 . 2562) (nil part-side javascript 2550 . 2551) (nil part-side javascript 2548 . 2550) (nil part-side javascript 2541 . 2548) (nil rear-nonsticky t 2540 . 2541) (nil part-side javascript 2540 . 2541) (nil part-side javascript 2533 . 2540) (nil part-side javascript 2523 . 2533) (nil part-side javascript 2507 . 2523) (nil part-side javascript 2505 . 2507) (nil part-side javascript 2496 . 2505) (nil face web-mode-variable-name-face 2496 . 2505) (nil part-side javascript 2495 . 2496) (nil part-side javascript 2490 . 2495) (nil face web-mode-keyword-face 2490 . 2495) (nil part-side javascript 2480 . 2490) (nil part-side javascript 2479 . 2480) (nil part-side javascript 2478 . 2479) (nil face (rainbow-delimiters-depth-5-face) 2478 . 2479) (nil part-side javascript 2477 . 2478) (nil part-side javascript 2476 . 2477) (nil face (rainbow-delimiters-depth-5-face) 2476 . 2477) (nil part-side javascript 2463 . 2476) (nil part-side javascript 2461 . 2463) (nil face web-mode-keyword-face 2461 . 2463) (nil part-side javascript 2460 . 2461) (nil part-side javascript 2459 . 2460) (nil part-token string 2459 . 2460) (nil syntax-table (15) 2459 . 2460) (nil font-lock-face web-mode-javascript-string-face 2459 . 2460) (nil part-side javascript 2454 . 2459) (nil part-token string 2454 . 2459) (nil font-lock-face web-mode-javascript-string-face 2454 . 2459) (nil part-side javascript 2453 . 2454) (nil part-token string 2453 . 2454) (nil syntax-table (15) 2453 . 2454) (nil font-lock-face web-mode-javascript-string-face 2453 . 2454) (nil part-side javascript 2452 . 2453) (nil face (rainbow-delimiters-depth-5-face) 2452 . 2453) (nil part-side javascript 2451 . 2452) (nil part-side javascript 2449 . 2451) (nil face web-mode-keyword-face 2449 . 2451) (nil part-side javascript 2448 . 2449) (nil part-side javascript 2444 . 2448) (nil face web-mode-keyword-face 2444 . 2448) (nil part-side javascript 2436 . 2444) (nil part-side javascript 2435 . 2436) (nil part-side javascript 2434 . 2435) (nil face (rainbow-delimiters-depth-5-face) 2434 . 2435) (nil part-side javascript 2425 . 2434) (nil rear-nonsticky t 2424 . 2425) (nil part-side javascript 2424 . 2425) (nil part-side javascript 2417 . 2424) (nil part-side javascript 2416 . 2417) (nil part-side javascript 2414 . 2416) (nil part-side javascript 2397 . 2414) (nil part-side javascript 2387 . 2397) (nil part-side javascript 2386 . 2387) (nil rear-nonsticky t 2385 . 2386) (nil part-side javascript 2385 . 2386) (nil part-side javascript 2374 . 2385) (nil part-side javascript 2373 . 2374) (nil part-side javascript 2371 . 2373) (nil part-side javascript 2356 . 2371) (nil part-side javascript 2346 . 2356) (nil part-side javascript 2345 . 2346) (nil part-side javascript 2344 . 2345) (nil face (rainbow-delimiters-depth-5-face) 2344 . 2345) (nil part-side javascript 2343 . 2344) (nil part-side javascript 2342 . 2343) (nil face (rainbow-delimiters-depth-5-face) 2342 . 2343) (nil part-side javascript 2329 . 2342) (nil part-side javascript 2327 . 2329) (nil face web-mode-keyword-face 2327 . 2329) (nil part-side javascript 2326 . 2327) (nil part-side javascript 2325 . 2326) (nil part-token string 2325 . 2326) (nil syntax-table (15) 2325 . 2326) (nil font-lock-face web-mode-javascript-string-face 2325 . 2326) (nil part-side javascript 2321 . 2325) (nil part-token string 2321 . 2325) (nil font-lock-face web-mode-javascript-string-face 2321 . 2325) (nil part-side javascript 2320 . 2321) (nil part-token string 2320 . 2321) (nil syntax-table (15) 2320 . 2321) (nil font-lock-face web-mode-javascript-string-face 2320 . 2321) (nil part-side javascript 2319 . 2320) (nil face (rainbow-delimiters-depth-5-face) 2319 . 2320) (nil part-side javascript 2318 . 2319) (nil part-side javascript 2316 . 2318) (nil face web-mode-keyword-face 2316 . 2318) (nil part-side javascript 2308 . 2316) (nil part-side javascript 2307 . 2308) (nil part-side javascript 2293 . 2307) (nil part-side javascript 2291 . 2293) (nil part-side javascript 2279 . 2291) (nil face web-mode-variable-name-face 2279 . 2291) (nil part-side javascript 2278 . 2279) (nil part-side javascript 2273 . 2278) (nil face web-mode-keyword-face 2273 . 2278) (nil part-side javascript 2265 . 2273) (nil part-side javascript 2264 . 2265) (nil part-side javascript 2263 . 2264) (nil rear-nonsticky t 2262 . 2263) (nil part-side javascript 2262 . 2263) (nil part-side javascript 2247 . 2262) (nil part-side javascript 2246 . 2247) (nil face (rainbow-delimiters-depth-5-face) 2246 . 2247) (nil part-side javascript 2230 . 2246) (nil part-side javascript 2229 . 2230) (nil part-token string 2229 . 2230) (nil syntax-table (15) 2229 . 2230) (nil font-lock-face web-mode-javascript-string-face 2229 . 2230) (nil part-side javascript 2223 . 2229) (nil part-token string 2223 . 2229) (nil font-lock-face web-mode-javascript-string-face 2223 . 2229) (nil part-side javascript 2222 . 2223) (nil part-token string 2222 . 2223) (nil syntax-table (15) 2222 . 2223) (nil font-lock-face web-mode-javascript-string-face 2222 . 2223) (nil part-side javascript 2221 . 2222) (nil face (rainbow-delimiters-depth-5-face) 2221 . 2222) (nil part-side javascript 2220 . 2221) (nil part-side javascript 2217 . 2220) (nil face web-mode-keyword-face 2217 . 2220) (nil part-side javascript 2208 . 2217) (nil part-side javascript 2201 . 2208) (nil rear-nonsticky t 2200 . 2201) (nil part-side javascript 2200 . 2201) (nil part-side javascript 2188 . 2200) (nil part-side javascript 2187 . 2188) (nil part-side javascript 2185 . 2187) (nil part-side javascript 2179 . 2185) (nil face web-mode-variable-name-face 2179 . 2185) (nil part-side javascript 2178 . 2179) (nil part-side javascript 2173 . 2178) (nil face web-mode-keyword-face 2173 . 2178) (2173 . 2729)) nil (25570 18597 555649 782000) 0 nil])
([nil nil ((2167 . 2175) (#("      " 0 6 (part-side javascript)) . 2167) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6)) nil (25570 18597 555603 741000) 0 nil])
([nil nil ((1973 . 1980) (t 25570 18597 573136 649000)) nil (25570 18669 537516 310000) 0 nil])
([nil nil ((1980 . 1981)) nil (25570 18669 537515 112000) 0 nil])
([nil nil ((1981 . 1988)) nil (25570 18669 537514 116000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -1980) (undo-tree-id1278 . -1) (#("
" 0 1 (part-side javascript)) . -1981) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (#(" " 0 1 (part-side javascript)) . -1982) (undo-tree-id1281 . -1) (#(" " 0 1 (part-side javascript)) . -1983) (undo-tree-id1282 . -1) (#(" " 0 1 (part-side javascript)) . -1984) (undo-tree-id1283 . -1) (#(" " 0 1 (part-side javascript)) . -1985) (undo-tree-id1284 . -1) (#(" " 0 1 (part-side javascript)) . -1986) (undo-tree-id1285 . -1) (#(" " 0 1 (part-side javascript)) . -1987) (undo-tree-id1286 . -1) 1988) nil (25570 18669 537511 333000) 0 nil])
([nil nil ((1975 . 1981) (#("      " 0 6 (part-side javascript)) . 1974) (undo-tree-id1277 . -6) (1980 . 1981)) nil (25570 18669 537498 928000) 0 nil])
([nil nil ((1981 . 1983)) nil (25570 18669 537496 571000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -1982) (undo-tree-id1276 . -1) 1983) nil (25570 18669 537495 544000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 1994) (1993 . 1994) (1992 . 1994) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -1992) (1982 . 1993)) nil (25570 18669 537492 969000) 0 nil])
([nil nil ((1993 . 1995)) nil (25570 18669 537491 206000) 0 nil])
([nil nil ((1994 . 1996)) nil (25570 18669 537490 6000) 0 nil])
([nil nil ((1996 . 2007)) nil (25570 18669 537488 879000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1994) (undo-tree-id1263 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1995) (undo-tree-id1264 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1996) (undo-tree-id1265 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1997) (undo-tree-id1266 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1998) (undo-tree-id1267 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -1999) (undo-tree-id1268 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2000) (undo-tree-id1269 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2001) (undo-tree-id1270 . -1) (#("y" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2002) (undo-tree-id1271 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2003) (undo-tree-id1272 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2004) (undo-tree-id1273 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2005) (undo-tree-id1274 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2006) (undo-tree-id1275 . -1) 2007) nil (25570 18669 537484 964000) 0 nil])
([nil nil ((1994 . 2008)) nil (25570 18669 537466 365000) 0 nil])
([nil nil ((2009 . 2019)) nil (25570 18669 537465 263000) 0 nil])
([nil nil ((2019 . 2025)) nil (25570 18669 537463 427000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2024) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) 2025) nil (25570 18669 537458 473000) 0 nil])
([nil nil ((#("'condition' in currentfilter.parent && (currentfilter.parent.condition == 'and' || currentfilter.parent.condition == 'or'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 1 10 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 10 11 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 11 12 (part-side javascript) 12 14 (face web-mode-keyword-face part-side javascript) 14 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-5-face) part-side javascript) 40 74 (part-side javascript) 74 75 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 75 78 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 78 79 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t) 79 83 (part-side javascript) 83 85 (part-side javascript) 85 86 (face (whitespace-line) part-side javascript) 86 87 (face (whitespace-line) part-side javascript) 87 88 (face (whitespace-line) part-side javascript) 88 89 (face (whitespace-line) part-side javascript) 89 109 (face (whitespace-line) part-side javascript) 109 117 (face (whitespace-line) part-side javascript) 117 118 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 118 120 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 120 121 (face (whitespace-line web-mode-javascript-string-face) font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript rear-nonsticky t)) . 2092) (undo-tree-id1289 . -121) (undo-tree-id1290 . -79) (undo-tree-id1291 . -79) (undo-tree-id1292 . -83) (undo-tree-id1293 . -121) (t 25570 18669 557227 869000)) nil (25570 18758 802842 850000) 0 nil])
([nil nil ((2092 . 2094)) nil (25570 18758 802835 536000) 0 nil])
([nil nil ((2093 . 2098)) nil (25570 18758 802834 256000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2097) (undo-tree-id1288 . -1) 2098) nil (25570 18758 802832 666000) 0 nil])
([nil nil ((2097 . 2100)) nil (25570 18758 802828 960000) 0 nil])
([nil nil ((2101 . 2119)) nil (25570 18758 802826 752000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2118) (undo-tree-id1287 . -1) 2119) nil (25570 18758 802821 479000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2118) (t 25570 18758 821339 604000)) nil (25570 18762 760921 780000) 0 nil])
([nil nil ((#("filtertype == 'simple' &&" 0 14 (part-side javascript) 14 15 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 15 21 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 21 22 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 22 25 (part-side javascript)) . 2037) (undo-tree-id1294 . -25) (undo-tree-id1295 . -22) (undo-tree-id1296 . -22) (undo-tree-id1297 . -22) (undo-tree-id1298 . -25) (t 25570 18762 781344 526000)) nil (25570 18867 601434 887000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 2037)) nil (25570 18867 601414 134000) 0 nil])
([nil nil ((2197 . 2205) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 2196) (2196 . 2204) (2196 . 2197) (t 25570 18867 621474 27000)) nil (25570 19149 705788 465000) 0 nil])
([nil nil ((2205 . 2209)) nil (25570 19149 705786 578000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -2208) (undo-tree-id1328 . -1) 2209) nil (25570 19149 705785 323000) 0 nil])
([nil nil ((2208 . 2210)) nil (25570 19149 705782 966000) 0 nil])
([nil nil ((2209 . 2214)) nil (25570 19149 705781 994000) 0 nil])
([nil nil ((#("å" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2209) (undo-tree-id1323 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2210) (undo-tree-id1324 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2211) (undo-tree-id1325 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2212) (undo-tree-id1326 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2213) (undo-tree-id1327 . -1) 2214) nil (25570 19149 705779 824000) 0 nil])
([nil nil ((2209 . 2216)) nil (25570 19149 705772 487000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -2215) (undo-tree-id1322 . -1) 2216) nil (25570 19149 705771 250000) 0 nil])
([nil nil ((2216 . 2219)) nil (25570 19149 705769 74000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -2217) (undo-tree-id1320 . -1) (#("o" 0 1 (part-side javascript)) . -2218) (undo-tree-id1321 . -1) 2219) nil (25570 19149 705767 637000) 0 nil])
([nil nil ((2217 . 2220)) nil (25570 19149 705763 933000) 0 nil])
([nil nil ((2220 . 2227)) nil (25570 19149 705763 28000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2226) (undo-tree-id1319 . -1) 2227) nil (25570 19149 705761 860000) 0 nil])
([nil nil ((2226 . 2227)) nil (25570 19149 705759 811000) 0 nil])
([nil nil ((2208 . 2210) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -2208) (2208 . 2209)) nil (25570 19149 705758 605000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2209)) nil (25570 19149 705757 69000) 0 nil])
([nil nil ((2229 . 2231) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -2229) (2228 . 2230)) nil (25570 19149 705756 39000) 0 nil])
([nil nil ((2232 . 2240) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 2231) (undo-tree-id1317 . -8) (undo-tree-id1318 . 10) (2239 . 2241) (2230 . 2240)) nil (25570 19149 705754 397000) 0 nil])
([nil nil ((#("        const grand_parent = parent.parent
        if ('rule' in grand_parent) {
          noparent.parent = grand_parent
          grand_parent.rule = noparent
        }
        else if ('rules' in grand_parent) {
          const rule_side = parent.rulepos
          noparent.parent = grand_parent
          noparent.rulepos = parent.rulepos
          grand_parent.rules[rule_side] = noparent
        }" 0 8 (part-side javascript) 8 13 (face web-mode-keyword-face part-side javascript) 13 14 (part-side javascript) 14 26 (face web-mode-variable-name-face part-side javascript) 26 51 (part-side javascript) 51 53 (face web-mode-keyword-face part-side javascript) 53 54 (part-side javascript) 54 55 (face (rainbow-delimiters-depth-5-face) part-side javascript) 55 56 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 56 60 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 60 61 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 61 62 (part-side javascript) 62 64 (face web-mode-keyword-face part-side javascript) 64 77 (part-side javascript) 77 78 (face (rainbow-delimiters-depth-5-face) part-side javascript) 78 79 (part-side javascript) 79 80 (face (rainbow-delimiters-depth-5-face) part-side javascript) 80 81 (part-side javascript) 81 169 (part-side javascript) 169 170 (face (rainbow-delimiters-depth-5-face) part-side javascript) 170 179 (part-side javascript) 179 183 (face web-mode-keyword-face part-side javascript) 183 184 (part-side javascript) 184 186 (face web-mode-keyword-face part-side javascript) 186 187 (part-side javascript) 187 188 (face (rainbow-delimiters-depth-5-face) part-side javascript) 188 189 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 189 194 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 194 195 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 195 196 (part-side javascript) 196 198 (face web-mode-keyword-face part-side javascript) 198 211 (part-side javascript) 211 212 (face (rainbow-delimiters-depth-5-face) part-side javascript) 212 213 (part-side javascript) 213 214 (face (rainbow-delimiters-depth-5-face) part-side javascript) 214 225 (part-side javascript) 225 230 (face web-mode-keyword-face part-side javascript) 230 231 (part-side javascript) 231 240 (face web-mode-variable-name-face part-side javascript) 240 371 (part-side javascript) 371 372 (face (rainbow-delimiters-depth-6-face) part-side javascript) 372 381 (part-side javascript) 381 382 (face (rainbow-delimiters-depth-6-face) part-side javascript) 382 402 (part-side javascript) 402 403 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 2242) (undo-tree-id1313 . -403) (undo-tree-id1314 . -43) (undo-tree-id1315 . -42) (undo-tree-id1316 . -403)) nil (25570 19149 705750 269000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2241) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 2242) nil (25570 19149 705743 408000) 0 nil])
([nil nil ((2233 . 2243) (#("          " 0 10 (part-side javascript)) . 2232) (undo-tree-id1308 . -10) (2232 . 2243) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 2231) (2231 . 2241) (2231 . 2232)) nil (25570 19149 705737 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2633 . 2634) (nil part-side javascript 2633 . 2634) (nil face (rainbow-delimiters-depth-6-face) 2633 . 2634) (nil part-side javascript 2613 . 2633) (nil part-side javascript 2612 . 2613) (nil face (rainbow-delimiters-depth-7-face) 2612 . 2613) (nil part-side javascript 2603 . 2612) (nil part-side javascript 2602 . 2603) (nil face (rainbow-delimiters-depth-7-face) 2602 . 2603) (nil part-side javascript 2471 . 2602) (nil part-side javascript 2462 . 2471) (nil face web-mode-variable-name-face 2462 . 2471) (nil part-side javascript 2461 . 2462) (nil part-side javascript 2456 . 2461) (nil face web-mode-keyword-face 2456 . 2461) (nil part-side javascript 2445 . 2456) (nil part-side javascript 2444 . 2445) (nil face (rainbow-delimiters-depth-6-face) 2444 . 2445) (nil part-side javascript 2443 . 2444) (nil part-side javascript 2442 . 2443) (nil face (rainbow-delimiters-depth-6-face) 2442 . 2443) (nil part-side javascript 2429 . 2442) (nil part-side javascript 2427 . 2429) (nil face web-mode-keyword-face 2427 . 2429) (nil part-side javascript 2426 . 2427) (nil part-side javascript 2425 . 2426) (nil part-token string 2425 . 2426) (nil syntax-table (15) 2425 . 2426) (nil font-lock-face web-mode-javascript-string-face 2425 . 2426) (nil part-side javascript 2420 . 2425) (nil part-token string 2420 . 2425) (nil font-lock-face web-mode-javascript-string-face 2420 . 2425) (nil part-side javascript 2419 . 2420) (nil part-token string 2419 . 2420) (nil syntax-table (15) 2419 . 2420) (nil font-lock-face web-mode-javascript-string-face 2419 . 2420) (nil part-side javascript 2418 . 2419) (nil face (rainbow-delimiters-depth-6-face) 2418 . 2419) (nil part-side javascript 2417 . 2418) (nil part-side javascript 2415 . 2417) (nil face web-mode-keyword-face 2415 . 2417) (nil part-side javascript 2414 . 2415) (nil part-side javascript 2410 . 2414) (nil face web-mode-keyword-face 2410 . 2414) (nil part-side javascript 2401 . 2410) (nil part-side javascript 2400 . 2401) (nil face (rainbow-delimiters-depth-6-face) 2400 . 2401) (nil part-side javascript 2312 . 2400) (nil part-side javascript 2311 . 2312) (nil part-side javascript 2310 . 2311) (nil face (rainbow-delimiters-depth-6-face) 2310 . 2311) (nil part-side javascript 2309 . 2310) (nil part-side javascript 2308 . 2309) (nil face (rainbow-delimiters-depth-6-face) 2308 . 2309) (nil part-side javascript 2295 . 2308) (nil part-side javascript 2293 . 2295) (nil face web-mode-keyword-face 2293 . 2295) (nil part-side javascript 2292 . 2293) (nil part-side javascript 2291 . 2292) (nil part-token string 2291 . 2292) (nil syntax-table (15) 2291 . 2292) (nil font-lock-face web-mode-javascript-string-face 2291 . 2292) (nil part-side javascript 2287 . 2291) (nil part-token string 2287 . 2291) (nil font-lock-face web-mode-javascript-string-face 2287 . 2291) (nil part-side javascript 2286 . 2287) (nil part-token string 2286 . 2287) (nil syntax-table (15) 2286 . 2287) (nil font-lock-face web-mode-javascript-string-face 2286 . 2287) (nil part-side javascript 2285 . 2286) (nil face (rainbow-delimiters-depth-6-face) 2285 . 2286) (nil part-side javascript 2284 . 2285) (nil part-side javascript 2282 . 2284) (nil face web-mode-keyword-face 2282 . 2284) (nil part-side javascript 2257 . 2282) (nil part-side javascript 2245 . 2257) (nil face web-mode-variable-name-face 2245 . 2257) (nil part-side javascript 2244 . 2245) (nil part-side javascript 2239 . 2244) (nil face web-mode-keyword-face 2239 . 2244) (nil part-side javascript 2231 . 2239) (2231 . 2634)) nil (25570 19149 705730 179000) 0 nil])
([nil nil ((2653 . 2655) (2602 . 2604) (2556 . 2558) (2513 . 2515) (2468 . 2470) (2420 . 2422) (2408 . 2410) (2369 . 2371) (2326 . 2328) (2284 . 2286) (2239 . 2241) 2231) nil (25570 19149 705711 365000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2656) (undo-tree-id1306 . -1) (#("
" 0 1 (part-side javascript)) . 2656) (undo-tree-id1307 . -1)) nil (25570 19149 705707 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2852 . 2853) (nil rear-nonsticky t 2852 . 2853) (nil part-side javascript 2852 . 2853) (nil part-side javascript 2829 . 2852) (nil part-side javascript 2825 . 2829) (nil face web-mode-constant-face 2825 . 2829) (nil part-side javascript 2817 . 2825) (nil part-side javascript 2816 . 2817) (nil part-side javascript 2815 . 2816) (nil face (rainbow-delimiters-depth-5-face) 2815 . 2816) (nil part-side javascript 2807 . 2815) (nil part-side javascript 2806 . 2807) (nil face (rainbow-delimiters-depth-5-face) 2806 . 2807) (nil part-side javascript 2796 . 2806) (nil face web-mode-function-call-face 2796 . 2806) (nil part-side javascript 2795 . 2796) (nil part-side javascript 2791 . 2795) (nil face web-mode-constant-face 2791 . 2795) (nil part-side javascript 2778 . 2791) (nil part-side javascript 2774 . 2778) (nil face web-mode-constant-face 2774 . 2778) (nil part-side javascript 2766 . 2774) (nil part-side javascript 2765 . 2766) (nil part-side javascript 2764 . 2765) (nil face (rainbow-delimiters-depth-5-face) 2764 . 2765) (nil part-side javascript 2763 . 2764) (nil face (rainbow-delimiters-depth-5-face) 2763 . 2764) (nil part-side javascript 2750 . 2763) (nil part-side javascript 2746 . 2750) (nil face web-mode-constant-face 2746 . 2750) (nil part-side javascript 2738 . 2746) (2738 . 2853)) nil (25570 19149 705702 50000) 0 nil])
([nil nil ((3745 . 3752) (3705 . 3712) (3651 . 3658) (3620 . 3627) (3607 . 3614) (3568 . 3575) (3549 . 3556) (3536 . 3543) (3521 . 3528) (3480 . 3487) (3460 . 3467) (3445 . 3452) (3383 . 3390) (3326 . 3333) (3286 . 3293) (3243 . 3250) (3228 . 3235) (3190 . 3197) (3150 . 3157) (3113 . 3120) (3064 . 3071) (3020 . 3027) (2921 . 2928) (2869 . 3597) (#("if (filtertype == 'and' || filtertype == 'or') {
        let {'parent': _, ...noparent} = left ? currentfilter.rules[0] : currentfilter.rules[1]
        if ('parent' in currentfilter) {
          const parent = currentfilter.parent
          if ('rule' in parent) {
            noparent.parent = parent
            parent.rule = noparent
          }
          else if ('rules' in parent) {
            noparent.parent = parent
            noparent.rulepos =  currentfilter.rulepos
            parent.rules[currentfilter.rulepos] = noparent
          }
          else {
            this.filters = [noparent]
          }
        }
        else  {
          this.filters = [noparent]
        }
        this.$forceUpdate()
        this.checkEdit = this.updateEdit(noparent)
        this.forceRecomputeCounter++
      }" 0 2 (face web-mode-keyword-face part-side javascript) 2 3 (part-side javascript) 3 4 (face (rainbow-delimiters-depth-4-face) part-side javascript) 4 18 (part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 22 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 22 23 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 23 41 (part-side javascript) 41 42 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 42 44 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 44 45 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 45 46 (face (rainbow-delimiters-depth-4-face) part-side javascript) 46 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-4-face) part-side javascript) 48 49 (part-side javascript) 49 57 (part-side javascript) 57 60 (face web-mode-keyword-face part-side javascript) 60 61 (part-side javascript) 61 62 (face (rainbow-delimiters-depth-5-face) part-side javascript) 62 63 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 63 69 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 86 (part-side javascript) 86 87 (face (rainbow-delimiters-depth-5-face) part-side javascript) 87 116 (part-side javascript) 116 117 (face (rainbow-delimiters-depth-5-face) part-side javascript) 117 118 (part-side javascript) 118 119 (face (rainbow-delimiters-depth-5-face) part-side javascript) 119 141 (part-side javascript) 141 142 (face (rainbow-delimiters-depth-5-face) part-side javascript) 142 143 (part-side javascript) 143 144 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 144 145 (part-side javascript) 145 153 (part-side javascript) 153 154 (face web-mode-keyword-face part-side javascript) 154 155 (face web-mode-keyword-face part-side javascript) 155 156 (part-side javascript) 156 157 (face (rainbow-delimiters-depth-5-face) part-side javascript) 157 158 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 158 164 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 164 165 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 165 166 (part-side javascript) 166 168 (face web-mode-keyword-face part-side javascript) 168 182 (part-side javascript) 182 183 (face (rainbow-delimiters-depth-5-face) part-side javascript) 183 184 (part-side javascript) 184 185 (face (rainbow-delimiters-depth-5-face) part-side javascript) 185 186 (part-side javascript) 186 196 (part-side javascript) 196 201 (face web-mode-keyword-face part-side javascript) 201 202 (part-side javascript) 202 208 (face web-mode-variable-name-face part-side javascript) 208 232 (part-side javascript) 232 242 (part-side javascript) 242 244 (face web-mode-keyword-face part-side javascript) 244 245 (part-side javascript) 245 246 (face (rainbow-delimiters-depth-6-face) part-side javascript) 246 247 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 247 251 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 251 252 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 252 253 (part-side javascript) 253 255 (face web-mode-keyword-face part-side javascript) 255 262 (part-side javascript) 262 263 (face (rainbow-delimiters-depth-6-face) part-side javascript) 263 264 (part-side javascript) 264 265 (face (rainbow-delimiters-depth-6-face) part-side javascript) 265 266 (part-side javascript) 266 302 (part-side javascript) 302 348 (part-side javascript) 348 349 (face (rainbow-delimiters-depth-6-face) part-side javascript) 349 350 (part-side javascript) 350 360 (part-side javascript) 360 364 (face web-mode-keyword-face part-side javascript) 364 365 (part-side javascript) 365 367 (face web-mode-keyword-face part-side javascript) 367 368 (part-side javascript) 368 369 (face (rainbow-delimiters-depth-6-face) part-side javascript) 369 370 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 370 375 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 375 376 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 376 377 (part-side javascript) 377 379 (face web-mode-keyword-face part-side javascript) 379 386 (part-side javascript) 386 387 (face (rainbow-delimiters-depth-6-face) part-side javascript) 387 388 (part-side javascript) 388 389 (face (rainbow-delimiters-depth-6-face) part-side javascript) 389 390 (part-side javascript) 390 458 (part-side javascript) 458 479 (part-side javascript) 479 480 (part-side javascript rear-nonsticky t) 480 505 (part-side javascript) 505 506 (face (rainbow-delimiters-depth-7-face) part-side javascript) 506 526 (part-side javascript) 526 527 (part-side javascript rear-nonsticky t) 527 528 (face (rainbow-delimiters-depth-7-face) part-side javascript) 528 550 (part-side javascript) 550 551 (face (rainbow-delimiters-depth-6-face) part-side javascript) 551 552 (part-side javascript) 552 562 (part-side javascript) 562 566 (face web-mode-keyword-face part-side javascript) 566 567 (part-side javascript) 567 568 (face (rainbow-delimiters-depth-6-face) part-side javascript) 568 569 (part-side javascript) 569 581 (part-side javascript) 581 585 (face web-mode-constant-face part-side javascript) 585 596 (part-side javascript) 596 597 (face (rainbow-delimiters-depth-7-face) part-side javascript) 597 605 (part-side javascript) 605 606 (face (rainbow-delimiters-depth-7-face) part-side javascript) 606 617 (part-side javascript) 617 618 (face (rainbow-delimiters-depth-6-face) part-side javascript) 618 619 (part-side javascript) 619 627 (part-side javascript) 627 628 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t) 628 629 (part-side javascript) 629 637 (part-side javascript) 637 641 (face web-mode-keyword-face part-side javascript) 641 643 (part-side javascript) 643 644 (face (rainbow-delimiters-depth-5-face) part-side javascript) 644 645 (part-side javascript) 645 655 (part-side javascript) 655 659 (face web-mode-constant-face part-side javascript) 659 670 (part-side javascript) 670 671 (face (rainbow-delimiters-depth-6-face) part-side javascript) 671 679 (part-side javascript) 679 680 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky t) 680 689 (part-side javascript) 689 690 (face (rainbow-delimiters-depth-5-face) part-side javascript) 690 691 (part-side javascript) 691 699 (part-side javascript) 699 703 (face web-mode-constant-face part-side javascript) 703 716 (part-side javascript) 716 717 (face (rainbow-delimiters-depth-5-face) part-side javascript) 717 718 (face (rainbow-delimiters-depth-5-face) part-side javascript) 718 719 (part-side javascript) 719 727 (part-side javascript) 727 731 (face web-mode-constant-face part-side javascript) 731 744 (part-side javascript) 744 748 (face web-mode-constant-face part-side javascript) 748 749 (part-side javascript) 749 759 (face web-mode-function-call-face part-side javascript) 759 760 (face (rainbow-delimiters-depth-5-face) part-side javascript) 760 768 (part-side javascript) 768 769 (face (rainbow-delimiters-depth-5-face) part-side javascript) 769 770 (part-side javascript) 770 778 (part-side javascript) 778 782 (face web-mode-constant-face part-side javascript) 782 805 (part-side javascript) 805 806 (part-side javascript rear-nonsticky t) 806 807 (part-side javascript) 807 813 (part-side javascript) 813 814 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2869) (undo-tree-id1299 . -814) (undo-tree-id1300 . -690) (undo-tree-id1301 . -49) (undo-tree-id1302 . -690) (undo-tree-id1303 . -806) (undo-tree-id1304 . -814) (undo-tree-id1305 . -814)) nil (25570 19149 705691 605000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing part-side javascript)) . -2656) 2863) nil (25570 19149 705663 459000) 0 nil])
([nil nil ((2717 . 2728) (t 25570 19149 725815 984000)) nil (25570 19273 542717 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2755 . 2756) (nil rear-nonsticky t 2755 . 2756) (nil part-side javascript 2755 . 2756) (nil part-side javascript 2732 . 2755) (nil part-side javascript 2728 . 2732) (nil face web-mode-constant-face 2728 . 2732) (2728 . 2756)) nil (25570 19273 542716 199000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript)) . -2752) (undo-tree-id1385 . -1) 2753) nil (25570 19273 542713 491000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript rear-nonsticky t)) . -2754) (undo-tree-id1384 . -1) 2755) nil (25570 19273 542710 671000) 0 nil])
([nil nil ((2754 . 2755)) nil (25570 19273 542708 413000) 0 nil])
([nil nil ((2399 . 2412)) nil (25570 19273 542707 345000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2438 . 2439) (nil part-side javascript 2437 . 2439) (nil part-side javascript 2416 . 2437) (nil part-side javascript 2412 . 2416) (nil face web-mode-constant-face 2412 . 2416) (2412 . 2439)) nil (25570 19273 542705 979000) 0 nil])
([nil nil ((2436 . 2437)) nil (25570 19273 542703 928000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript rear-nonsticky t)) . -2439) (undo-tree-id1383 . -1) 2440) nil (25570 19273 542702 860000) 0 nil])
([nil nil ((2439 . 2440)) nil (25570 19273 542700 322000) 0 nil])
([nil nil ((2685 . 2698)) nil (25570 19273 542699 351000) 0 nil])
([nil nil ((2698 . 2710)) nil (25570 19273 542698 430000) 0 nil])
([nil nil ((#("z" 0 1 (part-side javascript)) . -2707) (undo-tree-id1380 . -1) (#("e" 0 1 (part-side javascript)) . -2708) (undo-tree-id1381 . -1) (#(" " 0 1 (part-side javascript)) . -2709) (undo-tree-id1382 . -1) 2710) nil (25570 19273 542696 898000) 0 nil])
([nil nil ((2707 . 2711)) nil (25570 19273 542691 970000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2710) (undo-tree-id1379 . -1) 2711) nil (25570 19273 542690 729000) 0 nil])
([nil nil ((2710 . 2714)) nil (25570 19273 542688 364000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -2712) (undo-tree-id1377 . -1) (#(" " 0 1 (part-side javascript)) . -2713) (undo-tree-id1378 . -1) 2714) nil (25570 19273 542686 949000) 0 nil])
([nil nil ((2712 . 2714)) nil (25570 19273 542683 267000) 0 nil])
([nil nil ((#(">" 0 1 (part-side javascript)) . -2710) (undo-tree-id1373 . -1) (#(" " 0 1 (part-side javascript)) . -2711) (undo-tree-id1374 . -1) (#("1" 0 1 (part-side javascript)) . -2712) (undo-tree-id1375 . -1) (#(" " 0 1 (part-side javascript)) . -2713) (undo-tree-id1376 . -1) 2714) nil (25570 19273 542681 433000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -2698) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (#("f" 0 1 (face web-mode-keyword-face part-side javascript)) . -2699) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (#(" " 0 1 (part-side javascript)) . -2700) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (#("r" 0 1 (part-side javascript)) . -2701) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (#("u" 0 1 (part-side javascript)) . -2702) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("l" 0 1 (part-side javascript)) . -2703) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (#("e" 0 1 (part-side javascript)) . -2704) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (#("s" 0 1 (part-side javascript)) . -2705) (undo-tree-id1368 . -1) (#("i" 0 1 (part-side javascript)) . -2706) (undo-tree-id1369 . -1) (#("d" 0 1 (part-side javascript)) . -2707) (undo-tree-id1370 . -1) (#("e" 0 1 (part-side javascript)) . -2708) (undo-tree-id1371 . -1) (#(" " 0 1 (part-side javascript)) . -2709) (undo-tree-id1372 . -1) 2710) nil (25570 19273 542671 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2724 . 2725) (nil part-side javascript 2723 . 2725) (nil part-side javascript 2702 . 2723) (nil part-side javascript 2698 . 2702) (nil face web-mode-constant-face 2698 . 2702) (2698 . 2725)) nil (25570 19273 542647 574000) 0 nil])
([nil nil ((2722 . 2723)) nil (25570 19273 542645 402000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript rear-nonsticky t)) . -2725) (undo-tree-id1353 . -1) 2726) nil (25570 19273 542644 30000) 0 nil])
([nil nil ((2725 . 2727)) nil (25570 19273 542641 789000) 0 nil])
([nil nil ((#("+" 0 1 (part-side javascript)) . -2726) (undo-tree-id1352 . -1) 2727) nil (25570 19273 542640 551000) 0 nil])
([nil nil ((2726 . 2737)) nil (25570 19273 542638 16000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2736) (undo-tree-id1351 . -1) 2737) nil (25570 19273 542636 479000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -2729) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (#("u" 0 1 (part-side javascript)) . -2730) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (#("l" 0 1 (part-side javascript)) . -2731) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (#("e" 0 1 (part-side javascript)) . -2732) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (#("p" 0 1 (part-side javascript)) . -2733) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (#("o" 0 1 (part-side javascript)) . -2734) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#("s" 0 1 (part-side javascript)) . -2735) (undo-tree-id1350 . -1) 2736) nil (25570 19273 542631 538000) 0 nil])
([nil nil ((2729 . 2739)) nil (25570 19273 542614 227000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2738) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 2739) nil (25570 19273 542609 41000) 0 nil])
([nil nil ((#("+" 0 1 (part-side javascript)) . -2727) (undo-tree-id1386 . -1) 2728 (t 25570 19273 565952 826000)) nil (25570 19327 440717 617000) 0 nil])
([nil nil ((2727 . 2728)) nil (25570 19327 440691 35000) 0 nil])
([nil nil ((2738 . 2751) (t 25570 19327 458010 334000)) nil (25570 19380 627293 601000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 2764) (2763 . 2764) (2762 . 2764) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -2762) (2751 . 2763)) nil (25570 19380 627290 868000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2785 . 2786) (nil part-side javascript 2767 . 2786) (nil part-side javascript 2763 . 2767) (nil face web-mode-constant-face 2763 . 2767) (2763 . 2786)) nil (25570 19380 627281 938000) 0 nil])
([nil nil ((#("*" 0 1 (part-side javascript)) . -2727) (undo-tree-id1387 . -1) 2728 (t 25570 19380 646067 522000)) nil (25570 19528 875391 203000) 0 nil])
([nil nil ((2727 . 2728)) nil (25570 19528 875375 854000) 0 nil])
([nil nil ((2685 . 2698) (t 25570 19528 894228 790000)) nil (25570 19576 779807 170000) 0 nil])
([nil nil ((2702 . 2712) (2701 . 2703) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -2701) (2698 . 2702)) nil (25570 19576 779805 401000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2711) (undo-tree-id1507 . -1) 2712) nil (25570 19576 779803 504000) 0 nil])
([nil nil ((2712 . 2717)) nil (25570 19576 779801 305000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2716) (undo-tree-id1506 . -1) 2717) nil (25570 19576 779800 229000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -2711) (undo-tree-id1505 . -1) 2712) nil (25570 19576 779797 808000) 0 nil])
([nil nil ((2715 . 2716)) nil (25570 19576 779795 145000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2715) (undo-tree-id1504 . -1) 2716) nil (25570 19576 779794 10000) 0 nil])
([nil nil ((2717 . 2719) (#("{" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -2717) (2715 . 2718)) nil (25570 19576 779791 688000) 0 nil])
([nil nil ((2720 . 2732) (#("              " 0 14 (face whitespace-trailing part-side javascript)) . 2719) (undo-tree-id1502 . -12) (undo-tree-id1503 . 14) (2731 . 2733) (2718 . 2732)) nil (25570 19576 779789 917000) 0 nil])
([nil nil ((#("            this.filtercursordetail -= 1 + rule_side
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 38 (part-side javascript) 38 40 (part-side javascript) 40 42 (part-side javascript) 42 53 (part-side javascript)) . 2787) (undo-tree-id1498 . -12) (undo-tree-id1499 . -12) (undo-tree-id1500 . -35) (undo-tree-id1501 . -53) (2773 . 2787) (#("            }
" 0 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-7-face) part-side javascript) 13 14 (part-side javascript)) . 2720) (2734 . 2787) 2746) nil (25570 19576 779785 170000) 0 nil])
([nil nil ((#("            this.filtercursordetail -= 1 + rule_side
" 0 12 (part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 38 (part-side javascript) 38 40 (part-side javascript) 40 42 (part-side javascript) 42 53 (part-side javascript)) . 2773) (undo-tree-id1496 . -12) (undo-tree-id1497 . -53) (2772 . 2773) (#("
" 0 1 (part-side javascript)) . 2719) (2720 . 2773) 2732) nil (25570 19576 779778 550000) 0 nil])
([nil nil ((2731 . 2733)) nil (25570 19576 779774 823000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2774) (undo-tree-id1495 . -1)) nil (25570 19576 779773 406000) 0 nil])
([nil nil ((#("+ rule_side" 0 1 (part-side javascript) 1 11 (part-side javascript)) . 2762) (undo-tree-id1493 . -11) (undo-tree-id1494 . -11)) nil (25570 19576 779771 94000) 0 nil])
([nil nil ((#("1" 0 1 (part-side javascript)) . -2760) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (#(" " 0 1 (part-side javascript)) . -2761) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) 2762) nil (25570 19576 779762 959000) 0 nil])
([nil nil ((2760 . 2762)) nil (25570 19576 779666 283000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2761) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) 2762) nil (25570 19576 779660 397000) 0 nil])
([nil nil ((2685 . 2698) (t 25570 19576 798281 399000)) nil (25570 19642 37955 527000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 2711) (2710 . 2711) (2709 . 2711) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -2709) (2698 . 2710)) nil (25570 19642 37953 670000) 0 nil])
([nil nil ((2710 . 2712)) nil (25570 19642 37951 788000) 0 nil])
([nil nil ((2711 . 2720)) nil (25570 19642 37950 626000) 0 nil])
([nil nil ((2721 . 2722)) nil (25570 19642 37949 477000) 0 nil])
([nil nil ((#(":" 0 1 (part-side javascript)) . -2721) (undo-tree-id1516 . -1) 2722) nil (25570 19642 37947 639000) 0 nil])
([nil nil ((2721 . 2733)) nil (25570 19642 37944 437000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2732) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) 2733) nil (25570 19642 37939 86000) 0 nil])
([nil nil ((#("rule_side" 0 9 (part-side javascript)) . 2750) (undo-tree-id1528 . -9) (undo-tree-id1529 . -9) (t 25570 19642 58353 410000)) nil (25570 19747 849307 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2765 . 2766) (nil part-side javascript 2750 . 2766) (2750 . 2766)) nil (25570 19747 849303 995000) 0 nil])
([nil nil ((#("rule_side" 0 9 (part-side javascript)) . 2723) (undo-tree-id1525 . -9) (undo-tree-id1526 . -8) (undo-tree-id1527 . -9)) nil (25570 19747 849302 109000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2738 . 2739) (nil part-side javascript 2723 . 2739) (2723 . 2739)) nil (25570 19747 849297 74000) 0 nil])
([nil nil ((#("2" 0 1 (part-side javascript)) . -2822) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) 2823) nil (25570 19747 849293 67000) 0 nil])
([nil nil ((2822 . 2823)) nil (25570 19747 849211 111000) 0 nil])
([nil nil ((2025 . 2032) (t 25570 19747 870470 904000)) nil (25570 19796 705044 324000) 0 nil])
([nil nil ((2044 . 2046) (2043 . 2045) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2043) (2032 . 2044)) nil (25570 19796 705042 687000) 0 nil])
([nil nil ((2045 . 2051)) nil (25570 19796 705040 812000) 0 nil])
([nil nil ((2052 . 2067)) nil (25570 19796 705039 242000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2066) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) 2067) nil (25570 19796 705033 779000) 0 nil])
([nil nil ((2585 . 2598) (t 25570 19796 722525 415000)) nil (25570 19906 96462 904000) 0 nil])
([nil nil ((2598 . 2606)) nil (25570 19906 96461 297000) 0 nil])
([nil nil ((#("d" 0 1 (face web-mode-variable-name-face part-side javascript)) . -2605) (undo-tree-id1548 . -1) 2606) nil (25570 19906 96460 91000) 0 nil])
([nil nil ((2605 . 2610)) nil (25570 19906 96457 690000) 0 nil])
([nil nil ((#("p" 0 1 (face web-mode-variable-name-face part-side javascript)) . -2608) (undo-tree-id1546 . -1) (#("s" 0 1 (face web-mode-variable-name-face part-side javascript)) . -2609) (undo-tree-id1547 . -1) 2610) nil (25570 19906 96456 358000) 0 nil])
([nil nil ((2608 . 2615)) nil (25570 19906 96452 890000) 0 nil])
([nil nil ((2615 . 2636)) nil (25570 19906 96451 746000) 0 nil])
([nil nil ((2636 . 2637)) nil (25570 19906 96450 702000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2636) (undo-tree-id1545 . -1) 2637) nil (25570 19906 96449 361000) 0 nil])
([nil nil ((#("oparent.rulepos" 0 14 (part-side javascript) 14 15 (part-side javascript rear-nonsticky t)) . 2851) (undo-tree-id1543 . -15) (undo-tree-id1544 . -15)) nil (25570 19906 96446 913000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -2850) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 2851) nil (25570 19906 96443 42000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2857 . 2858) (nil part-side javascript 2850 . 2858) (2850 . 2858)) nil (25570 19906 96439 186000) 0 nil])
([nil nil ((#("noparent.rulepos" 0 15 (part-side javascript) 15 16 (part-side javascript rear-nonsticky t)) . 2816) (undo-tree-id1538 . -16) (undo-tree-id1539 . -16) (undo-tree-id1540 . -16)) nil (25570 19906 96436 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2823 . 2824) (nil part-side javascript 2816 . 2824) (2816 . 2824)) nil (25570 19906 96418 185000) 0 nil])
([nil nil ((2900 . 2903) (t 25570 19906 114647 975000)) nil (25570 19952 430319 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2910 . 2911) (nil rear-nonsticky t 2910 . 2911) (nil part-side javascript 2910 . 2911) (nil part-side javascript 2903 . 2910) (2903 . 2911)) nil (25570 19952 430318 364000) 0 nil])
([nil nil ((#("
            if (old_side > 0) {" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 15 (face web-mode-keyword-face part-side javascript) 15 16 (part-side javascript) 16 17 (face (rainbow-delimiters-depth-7-face) part-side javascript) 17 24 (part-side javascript) 24 25 (part-side javascript rear-nonsticky t) 25 27 (part-side javascript) 27 29 (part-side javascript) 29 30 (face (rainbow-delimiters-depth-7-face) part-side javascript) 30 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 2825) (undo-tree-id1552 . -32) (undo-tree-id1553 . -1) (undo-tree-id1554 . -17) (undo-tree-id1555 . -17) (undo-tree-id1556 . -17) (undo-tree-id1557 . -17) (undo-tree-id1558 . -25) (undo-tree-id1559 . -32)) nil (25570 19952 430315 840000) 0 nil])
([nil nil ((#("
            }" 0 1 (part-side javascript) 1 13 (part-side javascript) 13 14 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 2879) (undo-tree-id1549 . -14) (undo-tree-id1550 . -1) (undo-tree-id1551 . -14)) nil (25570 19952 430305 153000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -2838) 2879) nil (25570 19952 430285 972000) 0 nil])
([nil nil ((#("*" 0 1 (part-side javascript)) . -2867) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) 2868 (t 25570 19952 450700 76000)) nil (25570 19981 461645 302000) 0 nil])
([nil nil ((2867 . 2868)) nil (25570 19981 461609 533000) 0 nil])
([nil nil ((#("      // console.log(this.filtercursordetail)
      // console.log(this.filters)
      // console.log(this.filters[this.filtercursordetail])" 0 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 7 17 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 17 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 21 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 25 44 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 44 45 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 45 46 (syntax-table (12) part-side javascript) 46 52 (part-side javascript) 52 53 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 53 63 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 63 66 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 66 67 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 67 71 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 71 79 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 79 80 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 80 81 (syntax-table (12) part-side javascript) 81 87 (part-side javascript) 87 88 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 88 98 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 98 101 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 101 102 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 102 106 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 106 114 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 114 115 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 115 119 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 119 138 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 138 139 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 139 140 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4621) (undo-tree-id1630 . -140) (undo-tree-id1631 . -46) (undo-tree-id1632 . -140) (t 25570 19981 478732 760000)) nil (25570 21909 24259 287000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side javascript)) . -4619) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (#("
" 0 1 (part-side javascript)) . -4620) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) 4621) nil (25570 21909 24254 255000) 0 nil])
([nil nil ((#("
      console.log(this.filters)
      console.log(this.currentsubfilter)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 23 (face web-mode-constant-face part-side javascript) 23 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-4-face) part-side javascript) 32 33 (part-side javascript) 33 47 (part-side javascript) 47 50 (face web-mode-function-call-face part-side javascript) 50 51 (face (rainbow-delimiters-depth-4-face) part-side javascript) 51 55 (face web-mode-constant-face part-side javascript) 55 56 (part-side javascript) 56 72 (part-side javascript) 72 73 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 4620) (undo-tree-id1621 . -73) (undo-tree-id1622 . -1) (undo-tree-id1623 . -73)) nil (25570 21909 24245 740000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side javascript)) . -4619) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) 4620) nil (25570 21909 24241 369000) 0 nil])
([nil nil ((#("
      // const objNoReference = JSON.parse(JSON.stringify(cfilternoparent))" 0 7 (part-side javascript) 7 8 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 8 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 16 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 16 30 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 30 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 43 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 43 44 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 44 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 58 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 58 59 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 59 73 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 73 74 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript rear-nonsticky t) 74 75 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 75 76 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4890) (undo-tree-id1615 . -76) (undo-tree-id1616 . -1) (undo-tree-id1617 . -76)) nil (25570 21909 24236 293000) 0 nil])
([nil nil ((4820 . 4827)) nil (25570 21909 24232 277000) 0 nil])
([nil nil ((4827 . 4830)) nil (25570 21909 24231 398000) 0 nil])
([nil nil ((4830 . 4836)) nil (25570 21909 24230 144000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4834) (undo-tree-id1613 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4835) (undo-tree-id1614 . -1) 4836) nil (25570 21909 24228 860000) 0 nil])
([nil nil ((4834 . 4855)) nil (25570 21909 24225 431000) 0 nil])
([nil nil ((4855 . 4876)) nil (25570 21909 24224 363000) 0 nil])
([nil nil ((4876 . 4878)) nil (25570 21909 24223 484000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4877) (undo-tree-id1612 . -1) 4878) nil (25570 21909 24222 256000) 0 nil])
([nil nil ((4877 . 4879)) nil (25570 21909 24220 33000) 0 nil])
([nil nil ((4879 . 4882)) nil (25570 21909 24218 927000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4879) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4880) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4881) (undo-tree-id1611 . -1) 4882) nil (25570 21909 24217 99000) 0 nil])
([nil nil ((4879 . 4884)) nil (25570 21909 24208 990000) 0 nil])
([nil nil ((4884 . 4905)) nil (25570 21909 24208 117000) 0 nil])
([nil nil ((4905 . 4906)) nil (25570 21909 24207 325000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4901) (undo-tree-id1602 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4902) (undo-tree-id1603 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4903) (undo-tree-id1604 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4904) (undo-tree-id1605 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4905) (undo-tree-id1606 . -1) 4906) nil (25570 21909 24205 456000) 0 nil])
([nil nil ((4901 . 4902)) nil (25570 21909 24197 548000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4900) (undo-tree-id1600 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4901) (undo-tree-id1601 . -1) 4902) nil (25570 21909 24196 152000) 0 nil])
([nil nil ((4900 . 4906)) nil (25570 21909 24192 804000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4905) (undo-tree-id1599 . -1) 4906) nil (25570 21909 24191 581000) 0 nil])
([nil nil ((4905 . 4910)) nil (25570 21909 24189 418000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4909) (undo-tree-id1598 . -1) 4910) nil (25570 21909 24188 249000) 0 nil])
([nil nil ((#("
        // TODO: set filtercursor to the second" 0 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 16 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 16 18 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 18 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 21 22 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 22 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 48 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 6181) (undo-tree-id1595 . -48) (undo-tree-id1596 . -1) (undo-tree-id1597 . -48)) nil (25570 21909 24185 541000) 0 nil])
([nil nil ((#("
        // const cindex = opt_cursor ? this.filesidlist[this.mdata[opt_cursor[0]][0]] : currentindex" 0 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 17 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 17 18 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 18 24 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 24 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 44 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 44 57 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 57 61 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 61 101 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 5720) (undo-tree-id1592 . -101) (undo-tree-id1593 . -1) (undo-tree-id1594 . -101)) nil (25570 21909 24181 311000) 0 nil])
([nil nil ((5017 . 5018)) nil (25570 21909 24177 289000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4616)) nil (25570 21909 24176 344000) 0 nil])
([nil nil ((7779 . 7786)) nil (25570 21909 24175 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8144 . 8145) (nil part-side javascript 8119 . 8145) (nil part-token comment 8119 . 8145) (nil font-lock-face web-mode-javascript-comment-face 8119 . 8145) (nil part-side javascript 8117 . 8119) (nil part-token comment 8117 . 8119) (nil font-lock-face web-mode-javascript-comment-face 8117 . 8119) (nil part-side javascript 8038 . 8117) (nil part-token comment 8038 . 8117) (nil font-lock-face web-mode-javascript-comment-face 8038 . 8117) (nil part-side javascript 8035 . 8038) (nil part-token comment 8035 . 8038) (nil font-lock-face web-mode-javascript-comment-face 8035 . 8038) (nil part-side javascript 7967 . 8035) (nil part-token comment 7967 . 8035) (nil font-lock-face web-mode-javascript-comment-face 7967 . 8035) (nil part-side javascript 7965 . 7967) (nil part-token comment 7965 . 7967) (nil font-lock-face web-mode-javascript-comment-face 7965 . 7967) (nil part-side javascript 7964 . 7965) (nil part-token comment 7964 . 7965) (nil font-lock-face web-mode-javascript-comment-face 7964 . 7965) (nil part-side javascript 7960 . 7964) (nil part-token comment 7960 . 7964) (nil font-lock-face web-mode-javascript-comment-face 7960 . 7964) (nil part-side javascript 7793 . 7960) (nil part-token comment 7793 . 7960) (nil font-lock-face web-mode-javascript-comment-face 7793 . 7960) (nil part-side javascript 7792 . 7793) (nil part-token comment 7792 . 7793) (nil syntax-table (11) 7792 . 7793) (nil font-lock-face web-mode-javascript-comment-face 7792 . 7793) (nil part-side javascript 7786 . 7792) (7786 . 8145)) nil (25570 21909 24172 831000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -7786) (undo-tree-id1591 . -5) 7791) nil (25570 21909 24163 499000) 0 nil])
([nil nil ((#("Adds a subfilter to an existing filter" 0 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 7789) (undo-tree-id1589 . -38) (undo-tree-id1590 . -38)) nil (25570 21909 24160 967000) 0 nil])
([nil nil ((7789 . 7810)) nil (25570 21909 24157 647000) 0 nil])
([nil nil ((7810 . 7814)) nil (25570 21909 24156 725000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -7813) (undo-tree-id1588 . -1) 7814) nil (25570 21909 24155 510000) 0 nil])
([nil nil ((#("a boolean indicating wether to replace the current filter or add to it
      filtertype -- the type of the filter. Defaults to 'simple'
      wrap_simple -- boolean used for wrapping a simple filter
      opt_cursor -- an optional value to use instead of the cursor value" 0 95 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 95 99 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 99 100 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 100 102 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 102 170 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 170 173 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 173 252 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 252 254 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 254 271 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 7845) (undo-tree-id1584 . -271) (undo-tree-id1585 . -71) (undo-tree-id1586 . -198) (undo-tree-id1587 . -271)) nil (25570 21909 24152 780000) 0 nil])
([nil nil ((7845 . 7854)) nil (25570 21909 24147 48000) 0 nil])
([nil nil ((7854 . 7875)) nil (25570 21909 24145 923000) 0 nil])
([nil nil ((7875 . 7886)) nil (25570 21909 24144 979000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -7885) (undo-tree-id1583 . -1) 7886) nil (25570 21909 24143 701000) 0 nil])
([nil nil ((#("
      console.log('BEFORE:', this.filters)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 26 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 26 27 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 27 28 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 28 29 (part-side javascript) 29 30 (part-side javascript) 30 34 (face web-mode-constant-face part-side javascript) 34 42 (part-side javascript) 42 43 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 9342) (undo-tree-id1580 . -43) (undo-tree-id1581 . -1) (undo-tree-id1582 . -43)) nil (25570 21909 24140 987000) 0 nil])
([nil nil ((9342 . 9349)) nil (25570 21909 24127 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9707 . 9708) (nil part-side javascript 9682 . 9708) (nil part-token comment 9682 . 9708) (nil font-lock-face web-mode-javascript-comment-face 9682 . 9708) (nil part-side javascript 9680 . 9682) (nil part-token comment 9680 . 9682) (nil font-lock-face web-mode-javascript-comment-face 9680 . 9682) (nil part-side javascript 9601 . 9680) (nil part-token comment 9601 . 9680) (nil font-lock-face web-mode-javascript-comment-face 9601 . 9680) (nil part-side javascript 9598 . 9601) (nil part-token comment 9598 . 9601) (nil font-lock-face web-mode-javascript-comment-face 9598 . 9601) (nil part-side javascript 9530 . 9598) (nil part-token comment 9530 . 9598) (nil font-lock-face web-mode-javascript-comment-face 9530 . 9598) (nil part-side javascript 9528 . 9530) (nil part-token comment 9528 . 9530) (nil font-lock-face web-mode-javascript-comment-face 9528 . 9530) (nil part-side javascript 9527 . 9528) (nil part-token comment 9527 . 9528) (nil font-lock-face web-mode-javascript-comment-face 9527 . 9528) (nil part-side javascript 9523 . 9527) (nil part-token comment 9523 . 9527) (nil font-lock-face web-mode-javascript-comment-face 9523 . 9527) (nil part-side javascript 9356 . 9523) (nil part-token comment 9356 . 9523) (nil font-lock-face web-mode-javascript-comment-face 9356 . 9523) (nil part-side javascript 9355 . 9356) (nil part-token comment 9355 . 9356) (nil syntax-table (11) 9355 . 9356) (nil font-lock-face web-mode-javascript-comment-face 9355 . 9356) (nil part-side javascript 9349 . 9355) (9349 . 9708)) nil (25570 21909 24125 219000) 0 nil])
([nil nil ((9716 . 9722) (9700 . 9713) (#("      " 0 6 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9700) (9708 . 9709)) nil (25570 21909 24116 691000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -9349)) nil (25570 21909 24114 801000) 0 nil])
([nil nil ((#("      " 0 6 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9701) 9700) nil (25570 21909 25895 661000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9699) (undo-tree-id1955 . -1) 9700) nil (25570 22420 20569 457000) 0 nil] [nil nil ((#("*" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9701)) ((9701 . 9702)) (25570 21909 24104 762000) 0 nil])
([nil nil ((9700 . 9701) 9699) nil (25570 22420 20567 355000) 0 nil])
nil
([nil nil ((7892 . 7893) 7894) nil (25570 22420 20566 68000) 0 nil])
([nil nil ((4616 . 4617) 4618) nil (25570 22420 20564 595000) 0 nil])
([nil nil ((7896 . 7903)) nil (25570 22420 20563 285000) 0 nil])
([nil nil ((#("Adds a subfilter to an existing filter" 0 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9361) (undo-tree-id1953 . -38) (undo-tree-id1954 . -38)) nil (25570 22420 20561 767000) 0 nil])
([nil nil ((9361 . 9362)) nil (25570 22420 20558 846000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9361) (undo-tree-id1952 . -1) 9362) nil (25570 22420 20557 578000) 0 nil])
([nil nil ((9361 . 9372)) nil (25570 22420 20555 505000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9370) (undo-tree-id1950 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9371) (undo-tree-id1951 . -1) 9372) nil (25570 22420 20553 931000) 0 nil])
([nil nil ((9370 . 9379)) nil (25570 22420 20550 455000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9361) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9362) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9363) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9364) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9365) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9366) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9367) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9368) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9369) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9370) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9371) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9372) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9373) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9374) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9375) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9376) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9377) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9378) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) 9379) nil (25570 22420 20544 989000) 0 nil])
([nil nil ((9361 . 9376)) nil (25570 22420 20504 169000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9375) (undo-tree-id1913 . -1) 9376) nil (25570 22420 20502 928000) 0 nil])
([nil nil ((#("A" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9361) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9362) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9363) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9364) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9365) (undo-tree-id1903 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9366) (undo-tree-id1904 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9367) (undo-tree-id1905 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9368) (undo-tree-id1906 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9369) (undo-tree-id1907 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9370) (undo-tree-id1908 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9371) (undo-tree-id1909 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9372) (undo-tree-id1910 . -1) (#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9373) (undo-tree-id1911 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9374) (undo-tree-id1912 . -1) 9375) nil (25570 22420 20497 416000) 0 nil])
([nil nil ((9361 . 9381)) nil (25570 22420 20470 708000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9380) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) 9381) nil (25570 22420 20469 462000) 0 nil])
([nil nil ((9380 . 9392)) nil (25570 22420 20466 372000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9391) (undo-tree-id1888 . -1) 9392) nil (25570 22420 20465 266000) 0 nil])
([nil nil ((#("
      replacecurrentfilter -- a boolean indicating wether to replace the current filter or add to it
      filtertype -- the type of the filter. Defaults to 'simple'
      wrap_simple -- boolean used for wrapping a simple filter
      opt_cursor -- an optional value to use instead of the cursor value" 0 126 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 126 130 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 130 131 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 131 133 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 133 158 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 158 159 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 159 166 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 166 167 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 167 201 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 201 204 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 204 283 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 283 285 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 285 302 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9392) (undo-tree-id1885 . -302) (undo-tree-id1886 . -1) (undo-tree-id1887 . -302)) nil (25570 22420 20462 614000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9391) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) 9392) nil (25570 22420 20458 560000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 9391) (undo-tree-id1881 . -1)) nil (25570 22420 20453 342000) 0 nil])
([nil nil ((9762 . 9783)) nil (25570 22420 20450 174000) 0 nil])
([nil nil ((9783 . 9791)) nil (25570 22420 20449 199000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -9790) (undo-tree-id1880 . -1) 9791) nil (25570 22420 20448 28000) 0 nil])
([nil nil ((#("        // replace 'not' filter with the 'rule' subfilter if standing on a not filter
" 0 8 (part-side javascript) 8 9 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 9 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 36 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 36 57 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 57 58 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 58 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 69 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 69 72 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 72 74 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 74 78 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 78 85 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 85 86 (syntax-table (12) part-side javascript)) . 9791) (undo-tree-id1875 . -57) (undo-tree-id1876 . -63) (undo-tree-id1877 . -64) (undo-tree-id1878 . -85) (undo-tree-id1879 . -86) (9713 . 9791) (#("      if ('condition' in currentfilter && currentfilter.condition == 'not') {
" 0 6 (part-side javascript) 6 8 (face web-mode-keyword-face part-side javascript) 8 9 (part-side javascript) 9 10 (face (rainbow-delimiters-depth-4-face) part-side javascript) 10 11 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 11 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 22 (part-side javascript) 22 24 (face web-mode-keyword-face part-side javascript) 24 69 (part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 73 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 73 74 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 74 75 (face (rainbow-delimiters-depth-4-face) part-side javascript) 75 76 (part-side javascript) 76 77 (face (rainbow-delimiters-depth-4-face) part-side javascript) 77 78 (part-side javascript)) . 9627) (9705 . 9791) 9790) nil (25570 22420 20444 853000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -9633) 9712) nil (25570 22420 20438 105000) 0 nil])
([nil nil ((10286 . 10293)) nil (25570 22420 20437 93000) 0 nil])
([nil nil ((10293 . 10296)) nil (25570 22420 20436 153000) 0 nil])
([nil nil ((10296 . 10316)) nil (25570 22420 20435 230000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10315) (undo-tree-id1874 . -1) 10316) nil (25570 22420 20434 54000) 0 nil])
([nil nil ((10315 . 10336)) nil (25570 22420 20431 963000) 0 nil])
([nil nil ((10336 . 10347)) nil (25570 22420 20431 14000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10343) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10344) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10345) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10346) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) 10347) nil (25570 22420 20428 829000) 0 nil])
([nil nil ((10343 . 10350)) nil (25570 22420 20416 689000) 0 nil])
([nil nil ((10350 . 10360)) nil (25570 22420 20415 668000) 0 nil])
([nil nil ((10360 . 10368)) nil (25570 22420 20414 838000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10360) (undo-tree-id1855 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10361) (undo-tree-id1856 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10362) (undo-tree-id1857 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10363) (undo-tree-id1858 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10364) (undo-tree-id1859 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10365) (undo-tree-id1860 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10366) (undo-tree-id1861 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10367) (undo-tree-id1862 . -1) 10368) nil (25570 22420 20412 308000) 0 nil])
([nil nil ((10360 . 10381)) nil (25570 22420 20401 185000) 0 nil])
([nil nil ((10381 . 10389)) nil (25570 22420 20400 240000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10385) (undo-tree-id1851 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10386) (undo-tree-id1852 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10387) (undo-tree-id1853 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10388) (undo-tree-id1854 . -1) 10389) nil (25570 22420 20398 384000) 0 nil])
([nil nil ((10390 . 10397) (10389 . 10391) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10389) (10385 . 10390)) nil (25570 22420 20392 497000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10396) (undo-tree-id1850 . -1) 10397) nil (25570 22420 20390 354000) 0 nil])
([nil nil ((10396 . 10402)) nil (25570 22420 20388 147000) 0 nil])
([nil nil ((#("q" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10399) (undo-tree-id1847 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10400) (undo-tree-id1848 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10401) (undo-tree-id1849 . -1) 10402) nil (25570 22420 20386 651000) 0 nil])
([nil nil ((10399 . 10400)) nil (25570 22420 20381 937000) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10399) (undo-tree-id1846 . -1) 10400) nil (25570 22420 20380 646000) 0 nil])
([nil nil ((10399 . 10401)) nil (25570 22420 20378 432000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10388) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10389) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10390) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10391) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10392) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10393) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10394) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10395) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10396) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10397) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10398) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10399) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10400) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (#(")" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -10401) (undo-tree-id1845 . -1) 10402) nil (25570 22420 20373 485000) 0 nil])
([nil nil ((#("
        // const {'parent': _, ...objnoparent} = currentfilter" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 17 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 17 18 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 18 19 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 19 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 26 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 27 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 46 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 46 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 50 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 50 62 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 62 63 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript rear-nonsticky t)) . 11269) (undo-tree-id1806 . -63) (undo-tree-id1807 . -1) (undo-tree-id1808 . -63)) nil (25570 22420 20330 649000) 0 nil])
([nil nil ((#("
        // this.filtercursordetail += 1" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 16 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 16 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 11736) (undo-tree-id1803 . -40) (undo-tree-id1804 . -1) (undo-tree-id1805 . -40)) nil (25570 22420 20326 324000) 0 nil])
([nil nil ((11814 . 11821)) nil (25570 22420 20322 157000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11856 . 11857) (nil rear-nonsticky t 11856 . 11857) (nil part-side javascript 11856 . 11857) (nil part-token comment 11856 . 11857) (nil font-lock-face web-mode-javascript-comment-face 11856 . 11857) (nil part-side javascript 11855 . 11856) (nil part-token comment 11855 . 11856) (nil font-lock-face web-mode-javascript-comment-face 11855 . 11856) (nil part-side javascript 11854 . 11855) (nil part-token comment 11854 . 11855) (nil font-lock-face web-mode-javascript-comment-face 11854 . 11855) (nil part-side javascript 11847 . 11854) (nil part-token comment 11847 . 11854) (nil font-lock-face web-mode-javascript-comment-face 11847 . 11854) (nil part-side javascript 11843 . 11847) (nil part-token comment 11843 . 11847) (nil font-lock-face web-mode-javascript-comment-face 11843 . 11847) (nil part-side javascript 11841 . 11843) (nil part-token comment 11841 . 11843) (nil font-lock-face web-mode-javascript-comment-face 11841 . 11843) (nil part-side javascript 11834 . 11841) (nil part-token comment 11834 . 11841) (nil font-lock-face web-mode-javascript-comment-face 11834 . 11841) (nil part-side javascript 11831 . 11834) (nil part-token comment 11831 . 11834) (nil font-lock-face web-mode-javascript-comment-face 11831 . 11834) (nil part-side javascript 11824 . 11831) (nil part-token comment 11824 . 11831) (nil font-lock-face web-mode-javascript-comment-face 11824 . 11831) (nil part-side javascript 11823 . 11824) (nil part-token comment 11823 . 11824) (nil font-lock-face web-mode-javascript-comment-face 11823 . 11824) (nil part-side javascript 11822 . 11823) (nil part-token comment 11822 . 11823) (nil font-lock-face web-mode-javascript-comment-face 11822 . 11823) (nil part-side javascript 11821 . 11822) (nil part-token comment 11821 . 11822) (nil syntax-table (11) 11821 . 11822) (nil font-lock-face web-mode-javascript-comment-face 11821 . 11822) (11821 . 11857)) nil (25570 22420 20319 33000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11833) (undo-tree-id1782 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11834) (undo-tree-id1783 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11835) (undo-tree-id1784 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11836) (undo-tree-id1785 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11837) (undo-tree-id1786 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11838) (undo-tree-id1787 . -1) (#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11839) (undo-tree-id1788 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11840) (undo-tree-id1789 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11841) (undo-tree-id1790 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11842) (undo-tree-id1791 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11843) (undo-tree-id1792 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11844) (undo-tree-id1793 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11845) (undo-tree-id1794 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11846) (undo-tree-id1795 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11847) (undo-tree-id1796 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11848) (undo-tree-id1797 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11849) (undo-tree-id1798 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11850) (undo-tree-id1799 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11851) (undo-tree-id1800 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11852) (undo-tree-id1801 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11853) (undo-tree-id1802 . -1) 11854) nil (25570 22420 20304 539000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11824) (undo-tree-id1773 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11825) (undo-tree-id1774 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11826) (undo-tree-id1775 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11827) (undo-tree-id1776 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11828) (undo-tree-id1777 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11829) (undo-tree-id1778 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11830) (undo-tree-id1779 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11831) (undo-tree-id1780 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11832) (undo-tree-id1781 . -1) 11833) nil (25570 22420 20274 568000) 0 nil])
([nil nil ((11824 . 11844)) nil (25570 22420 20113 488000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11841) (undo-tree-id1770 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11842) (undo-tree-id1771 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11843) (undo-tree-id1772 . -1) 11844) nil (25570 22420 20112 66000) 0 nil])
([nil nil ((11841 . 11843)) nil (25570 22420 20107 620000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11842) (undo-tree-id1769 . -1) 11843) nil (25570 22420 20106 433000) 0 nil])
([nil nil ((11842 . 11843)) nil (25570 22420 20104 391000) 0 nil])
([nil nil ((11843 . 11844)) nil (25570 22420 20103 465000) 0 nil])
([nil nil ((#("," 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11842) (undo-tree-id1767 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11843) (undo-tree-id1768 . -1) 11844) nil (25570 22420 20102 64000) 0 nil])
([nil nil ((11842 . 11860)) nil (25570 22420 20098 894000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11855) (undo-tree-id1762 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11856) (undo-tree-id1763 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11857) (undo-tree-id1764 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11858) (undo-tree-id1765 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11859) (undo-tree-id1766 . -1) 11860) nil (25570 22420 20096 890000) 0 nil])
([nil nil ((11855 . 11867)) nil (25570 22420 20089 741000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11866) (undo-tree-id1761 . -1) 11867) nil (25570 22420 20088 578000) 0 nil])
([nil nil ((11866 . 11873)) nil (25570 22420 20086 527000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11872) (undo-tree-id1760 . -1) 11873) nil (25570 22420 20085 364000) 0 nil])
([nil nil ((11872 . 11874)) nil (25570 22420 20082 845000) 0 nil])
([nil nil ((11874 . 11895)) nil (25570 22420 20081 902000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11894) (undo-tree-id1759 . -1) 11895) nil (25570 22420 20080 590000) 0 nil])
([nil nil ((11894 . 11899)) nil (25570 22420 20078 405000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11898) (undo-tree-id1758 . -1) 11899) nil (25570 22420 20077 118000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11894) (undo-tree-id1754 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11895) (undo-tree-id1755 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11896) (undo-tree-id1756 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11897) (undo-tree-id1757 . -1) 11898) nil (25570 22420 20074 172000) 0 nil])
([nil nil ((11894 . 11905)) nil (25570 22420 20067 489000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11904) (undo-tree-id1753 . -1) 11905) nil (25570 22420 20066 262000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4905) (undo-tree-id1749 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4906) (undo-tree-id1750 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4907) (undo-tree-id1751 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4908) (undo-tree-id1752 . -1) 4909) nil (25570 22420 20063 175000) 0 nil])
([nil nil ((4905 . 4915)) nil (25570 22420 20057 344000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4911) (undo-tree-id1745 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4912) (undo-tree-id1746 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4913) (undo-tree-id1747 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4914) (undo-tree-id1748 . -1) 4915) nil (25570 22420 20055 558000) 0 nil])
([nil nil ((4911 . 4916)) nil (25570 22420 20049 498000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4915) (undo-tree-id1744 . -1) 4916) nil (25570 22420 20048 419000) 0 nil])
([nil nil ((11913 . 11920)) nil (25570 22420 20046 161000) 0 nil])
([nil nil ((11911 . 11914)) nil (25570 22420 20045 242000) 0 nil])
([nil nil ((11914 . 11921)) nil (25570 22420 20044 406000) 0 nil])
([nil nil ((11913 . 11922)) nil (25570 22420 20043 501000) 0 nil])
([nil nil ((11922 . 11930)) nil (25570 22420 20042 561000) 0 nil])
([nil nil ((11930 . 11944)) nil (25570 22420 20041 501000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11941) (undo-tree-id1741 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11942) (undo-tree-id1742 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11943) (undo-tree-id1743 . -1) 11944) nil (25570 22420 20039 847000) 0 nil])
([nil nil ((11941 . 11942)) nil (25570 22420 20035 358000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11941) (undo-tree-id1740 . -1) 11942) nil (25570 22420 20034 212000) 0 nil])
([nil nil ((11941 . 11962)) nil (25570 22420 20032 21000) 0 nil])
([nil nil ((11962 . 11965)) nil (25570 22420 20030 936000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11963) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11964) (undo-tree-id1739 . -1) 11965) nil (25570 22420 20029 175000) 0 nil])
([nil nil ((11963 . 11984)) nil (25570 22420 20024 755000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11983) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) 11984) nil (25570 22420 20023 613000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11968) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#("w" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11969) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11970) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11971) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11972) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11973) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11974) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11975) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11976) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11977) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11978) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11979) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11980) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11981) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -11982) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) 11983) nil (25570 22420 20016 449000) 0 nil])
([nil nil ((#("
      console.log('old filter ', filt)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 34 (part-side javascript) 34 38 (part-side javascript) 38 39 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 12025) (undo-tree-id1702 . -39) (undo-tree-id1703 . -1) (undo-tree-id1704 . -39)) nil (25570 22420 19981 4000) 0 nil])
([nil nil ((#("
      console.log('new filter ', nfilt)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 24 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 24 30 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 30 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 12207) (undo-tree-id1699 . -40) (undo-tree-id1700 . -1) (undo-tree-id1701 . -40)) nil (25570 22420 19976 531000) 0 nil])
([nil nil ((12025 . 12032)) nil (25570 22420 19972 540000) 0 nil])
([nil nil ((12032 . 12053)) nil (25570 22420 19971 469000) 0 nil])
([nil nil ((12053 . 12074)) nil (25570 22420 19970 447000) 0 nil])
([nil nil ((12074 . 12081)) nil (25570 22420 19969 410000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12080) (undo-tree-id1698 . -1) 12081) nil (25570 22420 19968 144000) 0 nil])
([nil nil ((4099 . 4106)) nil (25570 22420 19965 650000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4465 . 4466) (nil part-side javascript 4439 . 4466) (nil part-token comment 4439 . 4466) (nil font-lock-face web-mode-javascript-comment-face 4439 . 4466) (nil part-side javascript 4437 . 4439) (nil part-token comment 4437 . 4439) (nil font-lock-face web-mode-javascript-comment-face 4437 . 4439) (nil part-side javascript 4358 . 4437) (nil part-token comment 4358 . 4437) (nil font-lock-face web-mode-javascript-comment-face 4358 . 4437) (nil part-side javascript 4355 . 4358) (nil part-token comment 4355 . 4358) (nil font-lock-face web-mode-javascript-comment-face 4355 . 4358) (nil part-side javascript 4287 . 4355) (nil part-token comment 4287 . 4355) (nil font-lock-face web-mode-javascript-comment-face 4287 . 4355) (nil part-side javascript 4285 . 4287) (nil part-token comment 4285 . 4287) (nil font-lock-face web-mode-javascript-comment-face 4285 . 4287) (nil part-side javascript 4284 . 4285) (nil part-token comment 4284 . 4285) (nil font-lock-face web-mode-javascript-comment-face 4284 . 4285) (nil part-side javascript 4280 . 4284) (nil part-token comment 4280 . 4284) (nil font-lock-face web-mode-javascript-comment-face 4280 . 4284) (nil part-side javascript 4113 . 4280) (nil part-token comment 4113 . 4280) (nil font-lock-face web-mode-javascript-comment-face 4113 . 4280) (nil part-side javascript 4112 . 4113) (nil part-token comment 4112 . 4113) (nil syntax-table (11) 4112 . 4113) (nil font-lock-face web-mode-javascript-comment-face 4112 . 4113) (nil part-side javascript 4106 . 4112) (4106 . 4466)) nil (25570 22420 19962 917000) 0 nil])
([nil nil ((4473 . 4479) (4457 . 4470) (#("       " 0 7 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4457) (4466 . 4467)) nil (25570 22420 19953 895000) 0 nil])
([nil nil ((#("Adds a subfilter to an existing filter

      replacecurrentfilter -- a boolean indicating wether to replace the current filter or add to it
      filtertype -- the type of the filter. Defaults to 'simple'
      wrap_simple -- boolean used for wrapping a simple filter
      opt_cursor -- an optional value to use instead of the cursor value" 0 165 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 165 169 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 169 170 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 170 172 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 172 240 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 240 243 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 243 322 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 322 324 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 324 341 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4115) (undo-tree-id1695 . -341) (undo-tree-id1696 . -39) (undo-tree-id1697 . -341)) nil (25570 22420 19951 445000) 0 nil])
([nil nil ((4115 . 4136)) nil (25570 22420 19947 238000) 0 nil])
([nil nil ((4136 . 4139)) nil (25570 22420 19946 149000) 0 nil])
([nil nil ((4139 . 4160)) nil (25570 22420 19944 949000) 0 nil])
([nil nil ((4160 . 4181)) nil (25570 22420 19944 72000) 0 nil])
([nil nil ((4181 . 4182)) nil (25570 22420 19943 188000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4178) (undo-tree-id1691 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4179) (undo-tree-id1692 . -1) (#("y" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4180) (undo-tree-id1693 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4181) (undo-tree-id1694 . -1) 4182) nil (25570 22420 19941 393000) 0 nil])
([nil nil ((4178 . 4182)) nil (25570 22420 19934 391000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4176) (undo-tree-id1685 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4177) (undo-tree-id1686 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4178) (undo-tree-id1687 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4179) (undo-tree-id1688 . -1) (#("y" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4180) (undo-tree-id1689 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4181) (undo-tree-id1690 . -1) 4182) nil (25570 22420 19932 428000) 0 nil])
([nil nil ((4176 . 4189)) nil (25570 22420 19923 932000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4188) (undo-tree-id1684 . -1) 4189) nil (25570 22420 19922 693000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4188) (undo-tree-id1683 . -1)) nil (25570 22420 19918 519000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -4106) 4188) nil (25570 22420 19913 560000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 4192) (undo-tree-id1682 . -1)) nil (25570 22420 19911 780000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -4192)) nil (25570 22420 19909 353000) 0 nil])
([nil nil ((1873 . 1879) (#("      " 0 6 (part-side javascript)) . 1872) (undo-tree-id1681 . -6) (1871 . 1879)) nil (25570 22420 19907 971000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2238 . 2239) (nil part-side javascript 2212 . 2239) (nil part-token comment 2212 . 2239) (nil font-lock-face web-mode-javascript-comment-face 2212 . 2239) (nil part-side javascript 2210 . 2212) (nil part-token comment 2210 . 2212) (nil font-lock-face web-mode-javascript-comment-face 2210 . 2212) (nil part-side javascript 2131 . 2210) (nil part-token comment 2131 . 2210) (nil font-lock-face web-mode-javascript-comment-face 2131 . 2210) (nil part-side javascript 2128 . 2131) (nil part-token comment 2128 . 2131) (nil font-lock-face web-mode-javascript-comment-face 2128 . 2131) (nil part-side javascript 2060 . 2128) (nil part-token comment 2060 . 2128) (nil font-lock-face web-mode-javascript-comment-face 2060 . 2128) (nil part-side javascript 2058 . 2060) (nil part-token comment 2058 . 2060) (nil font-lock-face web-mode-javascript-comment-face 2058 . 2060) (nil part-side javascript 2057 . 2058) (nil part-token comment 2057 . 2058) (nil font-lock-face web-mode-javascript-comment-face 2057 . 2058) (nil part-side javascript 2053 . 2057) (nil part-token comment 2053 . 2057) (nil font-lock-face web-mode-javascript-comment-face 2053 . 2057) (nil part-side javascript 1886 . 2053) (nil part-token comment 1886 . 2053) (nil font-lock-face web-mode-javascript-comment-face 1886 . 2053) (nil part-side javascript 1885 . 1886) (nil part-token comment 1885 . 1886) (nil syntax-table (11) 1885 . 1886) (nil font-lock-face web-mode-javascript-comment-face 1885 . 1886) (nil part-side javascript 1879 . 1885) (1879 . 2239)) nil (25570 22420 19903 805000) 0 nil])
([nil nil ((2246 . 2252) (2230 . 2243) (#("       " 0 7 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 2230) (2239 . 2240)) nil (25570 22420 19895 336000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -1879) 1896) nil (25570 22420 19893 294000) 0 nil])
([nil nil ((#("      " 0 6 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2231) 2239) nil (25570 22420 19891 891000) 0 nil])
([nil nil ((#("left = true, opt_cursor = null" 0 7 (part-side javascript) 7 11 (face web-mode-constant-face part-side javascript) 11 26 (part-side javascript) 26 30 (face web-mode-constant-face part-side javascript)) . 1838) (undo-tree-id1678 . -30) (undo-tree-id1679 . -30) (undo-tree-id1680 . -30)) nil (25570 22420 19890 282000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 1842) (undo-tree-id1677 . -1)) nil (25570 22420 19885 554000) 0 nil])
([nil nil ((#("Adds a subfilter to an existing filter" 0 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1851) (undo-tree-id1675 . -38) (undo-tree-id1676 . -38)) nil (25570 22420 19882 739000) 0 nil])
([nil nil ((1851 . 1852)) nil (25570 22420 19879 400000) 0 nil])
([nil nil ((#("R" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1851) (undo-tree-id1674 . -1) 1852) nil (25570 22420 19878 150000) 0 nil])
([nil nil ((1851 . 1863)) nil (25570 22420 19875 607000) 0 nil])
([nil nil ((1863 . 1869)) nil (25570 22420 19874 515000) 0 nil])
([nil nil ((#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1863) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1864) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1865) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1866) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1867) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1868) (undo-tree-id1673 . -1) 1869) nil (25570 22420 19871 833000) 0 nil])
([nil nil ((1863 . 1884)) nil (25570 22420 19857 333000) 0 nil])
([nil nil ((1884 . 1887)) nil (25570 22420 19856 395000) 0 nil])
([nil nil ((1887 . 1904)) nil (25570 22420 19855 299000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1903) (undo-tree-id1662 . -1) 1904) nil (25570 22420 19854 19000) 0 nil])
([nil nil ((#("
      replacecurrentfilter -- a boolean indicating wether to replace the current filter or add to it
      filtertype -- the type of the filter. Defaults to 'simple'
      wrap_simple -- boolean used for wrapping a simple filter
      opt_cursor -- an optional value to use instead of the cursor value" 0 126 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 126 130 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 130 131 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 131 133 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 133 201 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 201 204 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 204 283 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 283 285 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 285 302 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1904) (undo-tree-id1659 . -302) (undo-tree-id1660 . -1) (undo-tree-id1661 . -302)) nil (25570 22420 19851 606000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1903) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) 1904) nil (25570 22420 19847 476000) 0 nil])
([nil nil ((#("      console.log('current filter', currentfilter)
      console.log('filter', this.filters)" 0 14 (part-side javascript) 14 17 (face web-mode-function-call-face part-side javascript) 17 18 (face (rainbow-delimiters-depth-4-face) part-side javascript) 18 19 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 19 33 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 33 34 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 34 49 (part-side javascript) 49 50 (face (rainbow-delimiters-depth-4-face) part-side javascript) 50 51 (part-side javascript) 51 65 (part-side javascript) 65 68 (face web-mode-function-call-face part-side javascript) 68 69 (face (rainbow-delimiters-depth-4-face) part-side javascript) 69 70 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 70 76 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 76 77 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 77 79 (part-side javascript) 79 83 (face web-mode-constant-face part-side javascript) 83 91 (part-side javascript) 91 92 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2024) (undo-tree-id1653 . -92) (undo-tree-id1654 . -51) (undo-tree-id1655 . -92)) nil (25570 22420 19843 66000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2022) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (#("
" 0 1 (part-side javascript)) . -2023) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) 2024) nil (25570 22420 922041 495000) 0 nil])
([nil nil ((2094 . 2102) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 2093) (2093 . 2101) (2093 . 2094)) nil (25570 22534 220528 335000) 0 nil] [nil nil ((1915 . 1921) (#("      " 0 6 (part-side javascript)) . 1914) (undo-tree-id1645 . -6) (undo-tree-id1646 . -6) (1920 . 1921)) ((#("
" 0 1 (part-side javascript)) . 1920) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (1914 . 1920) (#("      " 0 6 (part-side javascript)) . 1915) (undo-tree-id2014 . -6) (undo-tree-id2015 . -6) (undo-tree-id2016 . -6) (undo-tree-id2017 . -6) (undo-tree-id2018 . -6) (undo-tree-id2019 . -6) (undo-tree-id2020 . -6) (undo-tree-id2021 . -6) (undo-tree-id2022 . -6) (undo-tree-id2023 . -6) (undo-tree-id2024 . -6) (undo-tree-id2025 . -6) (undo-tree-id2026 . -6) (undo-tree-id2027 . -6) (undo-tree-id2028 . -6) (undo-tree-id2029 . -6) (undo-tree-id2030 . -6) (undo-tree-id2031 . -6) (undo-tree-id2032 . -6) (undo-tree-id2033 . -6) (undo-tree-id2034 . -6) (undo-tree-id2035 . -6) (undo-tree-id2036 . -6) (undo-tree-id2037 . -6) (undo-tree-id2038 . -6) (undo-tree-id2039 . -6) (undo-tree-id2040 . -6) (undo-tree-id2041 . -6) (undo-tree-id2042 . -6) (undo-tree-id2043 . -6) (undo-tree-id2044 . -6) (undo-tree-id2045 . -6)) (25570 22420 549886 132000) 0 nil])
([nil nil ((2102 . 2122)) nil (25570 22534 220526 241000) 0 nil])
([nil nil ((1921 . 1937)) ((#("// takes teh cur" 0 1 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 1 2 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2 8 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 8 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 11 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 11 12 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 12 13 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 13 14 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 14 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 16 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1921) (undo-tree-id1960 . -10) (undo-tree-id1961 . -16) (undo-tree-id1962 . -16) (undo-tree-id1963 . -10) (undo-tree-id1964 . -10) (undo-tree-id1965 . -10) (undo-tree-id1966 . -10) (undo-tree-id1967 . -10) (undo-tree-id1968 . -10) (undo-tree-id1969 . -10) (undo-tree-id1970 . -16) (undo-tree-id1971 . -16) (undo-tree-id1972 . -16) (undo-tree-id1973 . -16) (undo-tree-id1974 . -16) (undo-tree-id1975 . -16) (undo-tree-id1976 . -16) (undo-tree-id1977 . -16) (undo-tree-id1978 . -16) (undo-tree-id1979 . -16) (undo-tree-id1980 . -16)) (25570 22420 246769 752000) 0 nil])
([nil nil ((2122 . 2126)) nil (25570 22534 220524 947000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1931) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1932) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1933) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1934) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1935) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1936) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) 1937) ((1931 . 1937)) (25570 22420 21643 837000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2119) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2120) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2121) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2122) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2123) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2124) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2125) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) 2126) nil (25570 22534 220521 659000) 0 nil])
([nil nil ((1931 . 1952)) ((#("he current subfilter " 0 2 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 2 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1931) (undo-tree-id1956 . -15) (undo-tree-id1957 . -19) (undo-tree-id1958 . -21) (undo-tree-id1959 . -20)) (25570 22420 19792 298000) 0 nil])
([nil nil ((2119 . 2140)) nil (25570 22534 220502 484000) 0 nil])
nil
([nil nil ((2140 . 2154)) nil (25570 22534 220501 283000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2153) (undo-tree-id2108 . -1) 2154) nil (25570 22534 220499 519000) 0 nil])
([nil nil ((2254 . 2262) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 2253) (2253 . 2261) (2253 . 2254)) nil (25570 22534 220496 551000) 0 nil])
([nil nil ((2262 . 2269)) nil (25570 22534 220494 495000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2265) (undo-tree-id2104 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2266) (undo-tree-id2105 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2267) (undo-tree-id2106 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2268) (undo-tree-id2107 . -1) 2269) nil (25570 22534 220492 593000) 0 nil])
([nil nil ((2265 . 2274)) nil (25570 22534 220485 774000) 0 nil])
([nil nil ((2274 . 2295)) nil (25570 22534 220484 522000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2294) (undo-tree-id2103 . -1) 2295) nil (25570 22534 220483 241000) 0 nil])
([nil nil ((2294 . 2300)) nil (25570 22534 220480 519000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2279) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2280) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2281) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2282) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2283) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2284) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2285) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2286) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2287) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2288) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2289) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2290) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2291) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2292) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2293) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (#("," 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2294) (undo-tree-id2097 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2295) (undo-tree-id2098 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2296) (undo-tree-id2099 . -1) (#("." 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2297) (undo-tree-id2100 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2298) (undo-tree-id2101 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2299) (undo-tree-id2102 . -1) 2300) nil (25570 22534 220474 8000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2274) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2275) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2276) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2277) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2278) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) 2279) nil (25570 22534 220426 549000) 0 nil])
([nil nil ((2274 . 2285)) nil (25570 22534 220412 707000) 0 nil])
([nil nil ((2285 . 2292)) nil (25570 22534 220411 702000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2291) (undo-tree-id2056 . -1) 2292) nil (25570 22534 220410 516000) 0 nil])
([nil nil ((2291 . 2312)) nil (25570 22534 220408 236000) 0 nil])
([nil nil ((2312 . 2331)) nil (25570 22534 220407 141000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2330) (undo-tree-id2055 . -1) 2331) nil (25570 22534 220405 938000) 0 nil])
([nil nil ((#("
            console.log('rule side', old_side)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 24 (face web-mode-function-call-face part-side javascript) 24 25 (face (rainbow-delimiters-depth-7-face) part-side javascript) 25 26 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 26 35 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 35 36 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 36 38 (part-side javascript) 38 45 (part-side javascript) 45 46 (part-side javascript rear-nonsticky t) 46 47 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 2870) (undo-tree-id2052 . -47) (undo-tree-id2053 . -1) (undo-tree-id2054 . -47)) nil (25570 22534 220403 417000) 0 nil])
([nil nil ((2870 . 2883)) nil (25570 22534 220399 66000) 0 nil])
([nil nil ((2883 . 2904)) nil (25570 22534 220398 191000) 0 nil])
([nil nil ((2904 . 2920)) nil (25570 22534 220397 172000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2918) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2919) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) 2920) nil (25570 22534 220395 561000) 0 nil])
([nil nil ((2918 . 2922)) nil (25570 22534 220384 484000) 0 nil])
([nil nil ((2922 . 2938)) nil (25570 22534 220382 632000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2937) (undo-tree-id2047 . -1) 2938) nil (25570 22534 220380 17000) 0 nil])
([nil nil ((2937 . 2953)) nil (25570 22534 220371 42000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2952) (undo-tree-id2046 . -1) 2953) nil (25570 22534 220366 899000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -12172) (#(" " 0 1 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -12104) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -9601) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -8109) (#(" " 0 1 (face whitespace-trailing part-side javascript)) . -5230) (#("      " 0 6 (part-side javascript)) . -1914) 2952) nil (25570 22534 220346 732000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1903) (undo-tree-id2126 . -1) (t 25570 22534 245860 490000)) nil (25570 22551 908576 959000) 0 nil])
([nil nil ((1082 . 1089)) nil (25570 22551 908573 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1146 . 1147) (nil rear-nonsticky t 1146 . 1147) (nil part-side javascript 1146 . 1147) (nil part-token comment 1146 . 1147) (nil font-lock-face web-mode-javascript-comment-face 1146 . 1147) (nil part-side javascript 1144 . 1146) (nil part-token comment 1144 . 1146) (nil font-lock-face web-mode-javascript-comment-face 1144 . 1146) (nil part-side javascript 1137 . 1144) (nil part-token comment 1137 . 1144) (nil font-lock-face web-mode-javascript-comment-face 1137 . 1144) (nil part-side javascript 1133 . 1137) (nil part-token comment 1133 . 1137) (nil font-lock-face web-mode-javascript-comment-face 1133 . 1137) (nil part-side javascript 1130 . 1133) (nil part-token comment 1130 . 1133) (nil font-lock-face web-mode-javascript-comment-face 1130 . 1133) (nil part-side javascript 1127 . 1130) (nil part-token comment 1127 . 1130) (nil font-lock-face web-mode-javascript-comment-face 1127 . 1130) (nil part-side javascript 1124 . 1127) (nil part-token comment 1124 . 1127) (nil font-lock-face web-mode-javascript-comment-face 1124 . 1127) (nil part-side javascript 1120 . 1124) (nil part-token comment 1120 . 1124) (nil font-lock-face web-mode-javascript-comment-face 1120 . 1124) (nil part-side javascript 1119 . 1120) (nil part-token comment 1119 . 1120) (nil font-lock-face web-mode-javascript-comment-face 1119 . 1120) (nil part-side javascript 1113 . 1119) (nil part-token comment 1113 . 1119) (nil font-lock-face web-mode-javascript-comment-face 1113 . 1119) (nil part-side javascript 1103 . 1113) (nil part-token comment 1103 . 1113) (nil font-lock-face web-mode-javascript-comment-face 1103 . 1113) (nil part-side javascript 1099 . 1103) (nil part-token comment 1099 . 1103) (nil font-lock-face web-mode-javascript-comment-face 1099 . 1103) (nil part-side javascript 1091 . 1099) (nil part-token comment 1091 . 1099) (nil font-lock-face web-mode-javascript-comment-face 1091 . 1099) (nil part-side javascript 1090 . 1091) (nil part-token comment 1090 . 1091) (nil font-lock-face web-mode-javascript-comment-face 1090 . 1091) (nil part-side javascript 1089 . 1090) (nil part-token comment 1089 . 1090) (nil syntax-table (11) 1089 . 1090) (nil font-lock-face web-mode-javascript-comment-face 1089 . 1090) (1089 . 1147)) nil (25570 22551 908569 988000) 0 nil])
([nil nil ((1147 . 1154)) nil (25570 22551 908558 662000) 0 nil])
([nil nil ((#("Unpacks the subfilter value from an OR or AND filter" 0 28 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 28 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 52 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1092) (undo-tree-id2124 . -52) (undo-tree-id2125 . -52)) nil (25570 22551 908557 60000) 0 nil])
([nil nil ((1092 . 1103)) nil (25570 22551 908553 125000) 0 nil])
([nil nil ((1103 . 1116)) nil (25570 22551 908551 533000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1115) (undo-tree-id2123 . -1) 1116) nil (25570 22551 908549 434000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -1119) 1115) nil (25570 22551 908535 553000) 0 nil])
([nil nil ((5260 . 5279) (t 25570 22551 929882 124000)) nil (25570 22643 50977 524000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5278) (undo-tree-id2170 . -1) 5279) nil (25570 22643 50976 212000) 0 nil])
([nil nil ((5310 . 5323)) nil (25570 22643 50974 74000) 0 nil])
([nil nil ((5323 . 5344)) nil (25570 22643 50972 949000) 0 nil])
([nil nil ((5344 . 5348)) nil (25570 22643 50972 52000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5347) (undo-tree-id2169 . -1) 5348) nil (25570 22643 50970 885000) 0 nil])
([nil nil ((5380 . 5386)) nil (25570 22643 50968 746000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5383) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5384) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5385) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) 5386) nil (25570 22643 50967 52000) 0 nil])
([nil nil ((5383 . 5384)) nil (25570 22643 50959 365000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5383) (undo-tree-id2162 . -1) 5384) nil (25570 22643 50958 164000) 0 nil])
([nil nil ((5383 . 5389)) nil (25570 22643 50956 83000) 0 nil])
([nil nil ((5389 . 5392)) nil (25570 22643 50954 824000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5384) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5385) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5386) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5387) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5388) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5389) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5390) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5391) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) 5392) nil (25570 22643 50951 329000) 0 nil])
([nil nil ((5384 . 5405)) nil (25570 22643 50927 907000) 0 nil])
([nil nil ((5405 . 5409)) nil (25570 22643 50926 991000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5405) (undo-tree-id2139 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5406) (undo-tree-id2140 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5407) (undo-tree-id2141 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5408) (undo-tree-id2142 . -1) 5409) nil (25570 22643 50925 440000) 0 nil])
([nil nil ((5403 . 5404)) nil (25570 22643 50918 549000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5403) (undo-tree-id2138 . -1) 5404) nil (25570 22643 50917 198000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5390) (undo-tree-id2135 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5391) (undo-tree-id2136 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5392) (undo-tree-id2137 . -1) 5393) nil (25570 22643 50913 955000) 0 nil])
([nil nil ((5390 . 5391)) nil (25570 22643 50908 276000) 0 nil])
([nil nil ((#("y" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5390) (undo-tree-id2134 . -1) 5391) nil (25570 22643 50906 867000) 0 nil])
([nil nil ((5390 . 5397)) nil (25570 22643 50904 62000) 0 nil])
([nil nil ((5408 . 5417)) nil (25570 22643 50903 86000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5416) (undo-tree-id2133 . -1) 5417) nil (25570 22643 50901 656000) 0 nil])
([nil nil ((5453 . 5455)) nil (25570 22643 50899 74000) 0 nil])
([nil nil ((5455 . 5476)) nil (25570 22643 50898 20000) 0 nil])
([nil nil ((5476 . 5478)) nil (25570 22643 50896 961000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5476) (undo-tree-id2131 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5477) (undo-tree-id2132 . -1) 5478) nil (25570 22643 50895 436000) 0 nil])
([nil nil ((5476 . 5493)) nil (25570 22643 50891 224000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5492) (undo-tree-id2130 . -1) 5493) nil (25570 22643 50889 493000) 0 nil])
([nil nil ((5525 . 5536)) nil (25570 22643 50886 911000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5535) (undo-tree-id2129 . -1) 5536) nil (25570 22643 50885 471000) 0 nil])
([nil nil ((5535 . 5551)) nil (25570 22643 50882 281000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5550) (undo-tree-id2128 . -1) 5551) nil (25570 22643 50881 13000) 0 nil])
([nil nil ((5550 . 5562)) nil (25570 22643 50878 89000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5561) (undo-tree-id2127 . -1) 5562) nil (25570 22643 50876 420000) 0 nil])
([nil nil ((5261 . 5262)) nil (25570 22662 49666 979000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -5261) (undo-tree-id2364 . -1) 5262) nil (25570 22982 438837 910000) 0 nil] [nil nil ((5262 . 5263)) ((#(" " 0 1 (part-side javascript)) . 5262)) (25570 22661 756216 97000) 0 nil])
([nil nil ((#("      /* if (filtertype == 'and' || filtertype == 'or') {
       *   let {'parent': _, ...noparent} = left ? currentfilter.rules[0] : currentfilter.rules[1]
       *   if ('parent' in currentfilter) {
       *     const parent = currentfilter.parent
       *     if ('rule' in parent) {
       *       noparent.parent = parent
       *       parent.rule = noparent
       *     }
       *     else if ('rules' in parent) {
       *       noparent.parent = parent
       *       noparent.rulepos =  currentfilter.rulepos
       *       parent.rules[currentfilter.rulepos] = noparent
       *     }
       *     else {
       *       this.filters = [noparent]
       *     }
       *   }
       *   else  {
       *     this.filters = [noparent]
       *   }
       *   this.$forceUpdate()
       *   this.checkEdit = this.updateEdit(noparent)
       *   this.forceRecomputeCounter++
       * } */" 0 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 11 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 11 69 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 69 72 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 72 168 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 168 170 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 170 181 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 181 183 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 183 214 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 214 219 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 219 220 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 220 226 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 226 263 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 263 265 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 265 274 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 274 276 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 276 393 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 393 397 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 397 398 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 398 400 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 400 410 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 410 412 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 412 610 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 610 614 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 614 632 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 632 636 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 636 697 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 697 701 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 701 718 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 718 722 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 722 768 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 768 772 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 772 799 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 799 803 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 803 816 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 816 820 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 820 821 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 821 831 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 831 853 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 853 857 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 857 895 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 3324) (undo-tree-id2361 . -895) (undo-tree-id2362 . -58) (undo-tree-id2363 . -895)) nil (25570 22982 438835 320000) 0 nil])
([nil nil ((5313 . 5320)) ((#("       " 0 7 (part-side javascript)) . 5313)) (25570 22661 448501 941000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -3322) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (#("
" 0 1 (part-side javascript)) . -3323) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) 3324) nil (25570 22982 438830 128000) 0 nil])
([nil nil ((5390 . 5396)) ((#("      " 0 6 (part-side javascript)) . 5390)) (25570 22661 144434 367000) 0 nil])
([nil nil ((4671 . 4674)) nil (25570 22982 438822 380000) 0 nil])
([nil nil ((5469 . 5472)) ((#("   " 0 3 (part-side javascript)) . 5469) (undo-tree-id2171 . -3) (undo-tree-id2172 . -3) (undo-tree-id2173 . -3) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (undo-tree-id2176 . -3) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -3) (undo-tree-id2181 . -3) (undo-tree-id2182 . -3) (undo-tree-id2183 . -3) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -3) (undo-tree-id2196 . -3) (undo-tree-id2197 . -3) (undo-tree-id2198 . -3)) (25570 22660 800124 842000) 0 nil])
([nil nil ((4803 . 4824)) nil (25570 22982 438821 438000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5431) 5472) ((5431 . 5432) (t 25570 22643 69993 506000)) (25570 22643 50854 335000) 0 nil])
([nil nil ((4824 . 4845)) nil (25570 22982 438820 473000) 0 nil])
nil
([nil nil ((4845 . 4847)) nil (25570 22982 438819 553000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4846) (undo-tree-id2354 . -1) 4847) nil (25570 22982 438818 393000) 0 nil])
([nil nil ((4879 . 4880)) nil (25570 22982 438815 893000) 0 nil])
([nil nil ((4880 . 4901)) nil (25570 22982 438814 963000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4900) (undo-tree-id2353 . -1) 4901) nil (25570 22982 438813 674000) 0 nil])
([nil nil ((4932 . 4944)) nil (25570 22982 438811 479000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4941) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4942) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4943) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) 4944) nil (25570 22982 438809 567000) 0 nil])
([nil nil ((4941 . 4942)) nil (25570 22982 438800 814000) 0 nil])
([nil nil ((4942 . 4945)) nil (25570 22982 438799 831000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4936) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4937) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4938) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4939) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4940) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (#("q" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4941) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4942) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4943) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4944) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) 4945) nil (25570 22982 438796 98000) 0 nil])
([nil nil ((4936 . 4957)) nil (25570 22982 438773 638000) 0 nil])
([nil nil ((4957 . 4959)) nil (25570 22982 438772 672000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4958) (undo-tree-id2328 . -1) 4959) nil (25570 22982 438771 469000) 0 nil])
([nil nil ((4989 . 5003)) nil (25570 22982 438768 975000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5002) (undo-tree-id2327 . -1) 5003) nil (25570 22982 438767 686000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4993) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4994) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4995) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4996) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4997) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4998) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4999) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5000) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5001) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) 5002) nil (25570 22982 438760 35000) 0 nil])
([nil nil ((4993 . 4997)) nil (25570 22982 438653 986000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4993) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4994) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4995) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4996) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) 4997) nil (25570 22982 438651 558000) 0 nil])
([nil nil ((4993 . 5000)) nil (25570 22982 438641 344000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4993) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4994) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4995) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4996) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4997) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4998) (undo-tree-id2292 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4999) (undo-tree-id2293 . -1) 5000) nil (25570 22982 438638 60000) 0 nil])
([nil nil ((4993 . 5012)) nil (25570 22982 438620 537000) 0 nil])
([nil nil ((5012 . 5033)) nil (25570 22982 438619 573000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5032) (undo-tree-id2281 . -1) 5033) nil (25570 22982 438618 368000) 0 nil])
([nil nil ((5215 . 5219)) nil (25570 22982 438615 505000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5218) (undo-tree-id2280 . -1) 5219) nil (25570 22982 438614 127000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 5219) (undo-tree-id2278 . -35) (undo-tree-id2279 . -36) (5178 . 5219) (#("      delete currentfilter.submatchfield
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 41 (part-side javascript)) . 5142) (5183 . 5219) 5218) nil (25570 22982 438611 104000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 5178) (undo-tree-id2276 . -35) (undo-tree-id2277 . -36) (5140 . 5178) (#("      delete currentfilter.matchfield
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 38 (part-side javascript)) . 5104) (5142 . 5178) 5177) nil (25570 22982 438606 20000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 5140) (undo-tree-id2274 . -35) (undo-tree-id2275 . -36) (5104 . 5140) (#("      delete currentfilter.subcount
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 36 (part-side javascript)) . 5068) (5104 . 5140) 5139) nil (25570 22982 438601 313000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 5104) (undo-tree-id2272 . -35) (undo-tree-id2273 . -36) (5069 . 5104) (#("      delete currentfilter.subtype
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 35 (part-side javascript)) . 5033) (5068 . 5104) 5103) nil (25570 22982 438596 95000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 5069) (undo-tree-id2268 . -35) (undo-tree-id2269 . -36) (4995 . 5069) (#("      delete currentfilter.asc // whether aggregation sort is asc or desc
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 30 (part-side javascript) 30 31 (part-side javascript) 31 32 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 33 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 53 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 53 58 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 58 61 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 61 62 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 62 65 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 65 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 73 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 73 74 (syntax-table (12) part-side javascript)) . 4959) (undo-tree-id2270 . -34) (undo-tree-id2271 . -52) (5033 . 5069) 5068) nil (25570 22982 438591 308000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4995) (undo-tree-id2266 . -35) (undo-tree-id2267 . -36) (4937 . 4995) (#("      delete currentfilter.sort // aggregation sort query
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 31 (part-side javascript) 31 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 46 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 46 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 57 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 57 58 (syntax-table (12) part-side javascript)) . 4901) (4959 . 4995) 4994) nil (25570 22982 438584 490000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4937) (undo-tree-id2262 . -36) (undo-tree-id2263 . -36) (undo-tree-id2264 . -35) (undo-tree-id2265 . -36) (4883 . 4937) (#("      delete currentfilter.query // aggregation query
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 53 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 53 54 (syntax-table (12) part-side javascript)) . 4847) (4901 . 4937) 4936) nil (25570 22982 438579 711000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4883) (undo-tree-id2260 . -35) (undo-tree-id2261 . -36) (4808 . 4883) (#("      delete currentfilter.aggr // whether filter is an aggregation filter
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 31 (part-side javascript) 31 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 42 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 52 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 52 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 55 67 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 67 74 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 74 75 (syntax-table (12) part-side javascript)) . 4772) (4847 . 4883) 4882) nil (25570 22982 438571 749000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4808) (undo-tree-id2258 . -35) (undo-tree-id2259 . -36) (4776 . 4808) (#("      delete currentfilter.type
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript)) . 4740) (4772 . 4808) 4807) nil (25570 22982 438567 30000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4776) (undo-tree-id2256 . -35) (undo-tree-id2257 . -36) (4743 . 4776) (#("      delete currentfilter.types
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 33 (part-side javascript)) . 4707) (4740 . 4776) 4775) nil (25570 22982 438562 185000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4743) (undo-tree-id2249 . -35) (undo-tree-id2250 . -36) (4701 . 4743) (#("      // delete currentfilter.passthrough
" 0 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 42 (syntax-table (12) part-side javascript)) . 4665) (undo-tree-id2251 . -41) (undo-tree-id2252 . -41) (undo-tree-id2253 . -41) (undo-tree-id2254 . -41) (undo-tree-id2255 . -41) (4707 . 4743) 4742) nil (25570 22982 438557 404000) 0 nil])
([nil nil ((#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4701) (undo-tree-id2247 . -35) (undo-tree-id2248 . -36) (4632 . 4701) (#("      delete currentfilter.value // value used in comparison filters
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 46 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 46 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4596) (4665 . 4701) 4700) nil (25570 22982 438547 353000) 0 nil])
([nil nil ((#("      delete currentfilter.value // value used in comparison filters
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 46 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 46 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4701) (4665 . 4701) (#("      delete currentfilter.rules //
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript)) . 4596) (undo-tree-id2246 . -35) (4632 . 4701) 4631) nil (25570 22982 438542 856000) 0 nil])
([nil nil ((#("      delete currentfilter.field // field used in comparison filters 
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 69 70 (syntax-table (12) part-side javascript)) . 4521) (4452 . 4521) (#("      delete currentfilter.rule // child if filter type only has one
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 31 (part-side javascript) 31 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 43 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 43 50 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 50 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 55 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 64 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 64 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4382) (undo-tree-id2245 . -35) (4451 . 4521) 4417) nil (25570 22982 438539 173000) 0 nil])
([nil nil ((#("      delete currentfilter.operator // operator used in comparison filters
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 35 (part-side javascript) 35 36 (part-side javascript) 36 37 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 37 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 52 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 52 53 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 53 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 55 66 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 66 74 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 74 75 (syntax-table (12) part-side javascript)) . 4596) (4527 . 4596) (#("      delete currentfilter.rule // child if filter type only has one
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 31 (part-side javascript) 31 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 43 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 43 50 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 50 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 55 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 64 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 64 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4452) (undo-tree-id2244 . -35) (4521 . 4596) 4487) nil (25570 22982 438535 883000) 0 nil])
([nil nil ((#("      delete currentfilter.value // value used in comparison filters
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 32 (part-side javascript) 32 33 (part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 34 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 46 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 46 47 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 47 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4665) (undo-tree-id2238 . -69) (undo-tree-id2239 . -69) (undo-tree-id2240 . -69) (undo-tree-id2241 . -69) (undo-tree-id2242 . -69) (4596 . 4665) (#("      delete currentfilter.rule // child if filter type only has one
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 31 (part-side javascript) 31 32 (part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 43 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 43 50 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 50 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 55 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 55 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 64 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 64 68 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 68 69 (syntax-table (12) part-side javascript)) . 4527) (undo-tree-id2243 . -35) (4596 . 4665) 4562) nil (25570 22982 438532 141000) 0 nil])
([nil nil ((4700 . 4702)) nil (25570 22982 438521 785000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4701) (undo-tree-id2237 . -1) 4702) nil (25570 22982 438520 424000) 0 nil])
([nil nil ((4701 . 4722)) nil (25570 22982 438517 886000) 0 nil])
([nil nil ((4722 . 4726)) nil (25570 22982 438516 786000) 0 nil])
([nil nil ((#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4725) (undo-tree-id2236 . -1) 4726) nil (25570 22982 438515 519000) 0 nil])
([nil nil ((4725 . 4742)) nil (25570 22982 438513 267000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4741) (undo-tree-id2235 . -1) 4742) nil (25570 22982 438512 46000) 0 nil])
([nil nil ((4636 . 4645)) nil (25570 22982 438509 571000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4644) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) 4645) nil (25570 22982 438508 113000) 0 nil])
([nil nil ((4418 . 4425)) nil (25570 22982 438504 733000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4419) (undo-tree-id2227 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4420) (undo-tree-id2228 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4421) (undo-tree-id2229 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4422) (undo-tree-id2230 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4423) (undo-tree-id2231 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4424) (undo-tree-id2232 . -1) 4425) nil (25570 22982 438501 935000) 0 nil])
([nil nil ((4419 . 4425)) nil (25570 22982 438492 538000) 0 nil])
([nil nil ((4498 . 4505)) nil (25570 22982 438491 496000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4496) (undo-tree-id2218 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4497) (undo-tree-id2219 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4498) (undo-tree-id2220 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4499) (undo-tree-id2221 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4500) (undo-tree-id2222 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4501) (undo-tree-id2223 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4502) (undo-tree-id2224 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4503) (undo-tree-id2225 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4504) (undo-tree-id2226 . -1) 4505) nil (25570 22982 438487 944000) 0 nil])
([nil nil ((4496 . 4498)) nil (25570 22982 438473 427000) 0 nil])
([nil nil ((4383 . 4390) (4382 . 4384) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4382) (4381 . 4383)) nil (25570 22982 438472 83000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4389) (undo-tree-id2217 . -1) 4390) nil (25570 22982 438470 141000) 0 nil])
([nil nil ((4468 . 4474) (4467 . 4469) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4467) (4467 . 4468)) nil (25570 22982 438467 403000) 0 nil])
([nil nil ((4552 . 4554) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4552) (4550 . 4553)) nil (25570 22982 438465 354000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4551) (undo-tree-id2215 . -1) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4552) (undo-tree-id2216 . -1) (#(")" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4553)) nil (25570 22982 438463 354000) 0 nil])
([nil nil ((4552 . 4558) (4551 . 4553) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4551) (4551 . 4552)) nil (25570 22982 438459 369000) 0 nil])
([nil nil ((4629 . 4631) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4629) (4628 . 4630)) nil (25570 22982 438457 256000) 0 nil])
([nil nil ((4630 . 4637)) nil (25570 22982 438455 892000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4636) (undo-tree-id2214 . -1) 4637) nil (25570 22982 438454 710000) 0 nil])
([nil nil ((4636 . 4641)) nil (25570 22982 438452 337000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4636) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4637) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4638) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4639) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4640) (undo-tree-id2213 . -1) 4641) nil (25570 22982 438449 863000) 0 nil])
([nil nil ((4636 . 4648)) nil (25570 22982 438438 243000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4647) (undo-tree-id2204 . -1) 4648) nil (25570 22982 438436 930000) 0 nil])
([nil nil ((4727 . 4734) (4726 . 4728) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4726) (4725 . 4727)) nil (25570 22982 438434 255000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4733) (undo-tree-id2203 . -1) 4734) nil (25570 22982 438432 230000) 0 nil])
([nil nil ((4813 . 4814) (4812 . 4814) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4812) (4811 . 4813)) nil (25570 22982 438429 482000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4813) (undo-tree-id2202 . -1) 4814) nil (25570 22982 438427 531000) 0 nil])
([nil nil ((4814 . 4829) (4813 . 4815) (#("[" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4813) (4813 . 4814)) nil (25570 22982 438424 839000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -4828) (undo-tree-id2201 . -1) 4829) nil (25570 22982 438422 919000) 0 nil])
([nil nil ((5014 . 5018) (5013 . 5015) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5013) (5012 . 5014)) nil (25570 22982 438419 713000) 0 nil])
([nil nil ((5075 . 5082) (5074 . 5076) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5074) (5073 . 5075)) nil (25570 22982 438417 550000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5081) (undo-tree-id2200 . -1) 5082) nil (25570 22982 438415 380000) 0 nil])
([nil nil ((5142 . 5148) (5141 . 5143) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5141) (5140 . 5142)) nil (25570 22982 438411 288000) 0 nil])
([nil nil ((5225 . 5230) (5224 . 5226) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5224) (5223 . 5225)) nil (25570 22982 438408 223000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -5229) (undo-tree-id2199 . -1) 5230) nil (25570 22982 438402 396000) 0 nil])
([nil nil ((1347 . 1350) (t 25570 22982 470405 952000)) nil (25570 23794 826422 951000) 0 nil])
([nil nil ((#("      // delete currentfilter.passthrough" 0 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 4834) (undo-tree-id2388 . -41) (undo-tree-id2389 . -41)) nil (25570 23794 826420 982000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side javascript)) . -4833) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) 4834) nil (25570 23794 826416 689000) 0 nil])
([nil nil ((#("
      // delete currentfilter.passthrough" 0 7 (part-side javascript) 7 8 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 8 10 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 10 16 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 16 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 1340) (undo-tree-id2365 . -42) (undo-tree-id2366 . -1) (undo-tree-id2367 . -10) (undo-tree-id2368 . -42) (undo-tree-id2369 . -42) (undo-tree-id2370 . -42) (undo-tree-id2371 . -42) (undo-tree-id2372 . -42) (undo-tree-id2373 . -42) (undo-tree-id2374 . -42) (undo-tree-id2375 . -42) (undo-tree-id2376 . -42) (undo-tree-id2377 . -42) (undo-tree-id2378 . -42) (undo-tree-id2379 . -42) (undo-tree-id2380 . -42) (undo-tree-id2381 . -42) (undo-tree-id2382 . -42) (undo-tree-id2383 . -42) (undo-tree-id2384 . -42)) nil (25570 23794 826407 521000) 0 nil])
([nil nil ((451 . 462) (t 25570 23794 852154 384000)) nil (25570 24531 388771 224000) 0 nil])
([nil nil ((462 . 478)) nil (25570 24531 388769 797000) 0 nil])
([nil nil ((nil rear-nonsticky nil 506 . 507) (nil part-side javascript 506 . 507) (nil face (rainbow-delimiters-depth-6-face) 506 . 507) (nil part-side javascript 495 . 506) (nil part-side javascript 491 . 495) (nil face web-mode-constant-face 491 . 495) (nil part-side javascript 490 . 491) (nil face (rainbow-delimiters-depth-6-face) 490 . 491) (nil part-side javascript 485 . 490) (nil face web-mode-function-call-face 485 . 490) (nil part-side javascript 478 . 485) (478 . 507)) nil (25570 24531 388767 732000) 0 nil])
([nil nil ((507 . 518)) nil (25570 24531 388763 940000) 0 nil])
([nil nil ((740 . 745)) nil (25570 24531 388762 994000) 0 nil])
([nil nil ((745 . 750)) nil (25570 24531 388761 988000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -745) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (#("e" 0 1 (part-side javascript)) . -746) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (#("x" 0 1 (part-side javascript)) . -747) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("t" 0 1 (part-side javascript)) . -748) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (#("_" 0 1 (part-side javascript)) . -749) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) 750) nil (25570 24531 388759 46000) 0 nil])
([nil nil ((745 . 746)) nil (25570 24531 388740 433000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -745) (undo-tree-id2400 . -1) 746) nil (25570 24531 388739 154000) 0 nil])
([nil nil ((745 . 763)) nil (25570 24531 388736 478000) 0 nil])
([nil nil ((#("m" 0 1 (part-side javascript)) . -759) (undo-tree-id2396 . -1) (#("a" 0 1 (part-side javascript)) . -760) (undo-tree-id2397 . -1) (#("t" 0 1 (part-side javascript)) . -761) (undo-tree-id2398 . -1) (#("c" 0 1 (part-side javascript)) . -762) (undo-tree-id2399 . -1) 763) nil (25570 24531 388734 500000) 0 nil])
([nil nil ((759 . 766)) nil (25570 24531 388728 210000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -765) (undo-tree-id2395 . -1) 766) nil (25570 24531 388726 974000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 767) (766 . 767) (765 . 767) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -765) (765 . 766)) nil (25570 24531 388723 840000) 0 nil])
([nil nil ((768 . 770) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . -768) (767 . 769)) nil (25570 24531 388721 515000) 0 nil])
([nil nil ((771 . 775) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 770) (undo-tree-id2393 . -4) (undo-tree-id2394 . 6) (774 . 776) (769 . 775)) nil (25570 24531 388719 653000) 0 nil])
([nil nil ((766 . 772)) nil (25570 24531 388715 389000) 0 nil])
([nil nil ((777 . 783) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 776) (776 . 782) (776 . 777)) nil (25570 24531 388714 115000) 0 nil])
([nil nil ((777 . 783) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 776) (776 . 782) (776 . 777)) nil (25570 24531 388712 112000) 0 nil])
([nil nil ((4921 . 4923)) nil (25570 24531 388710 401000) 0 nil])
([nil nil ((4956 . 4959)) nil (25570 24531 388709 520000) 0 nil])
([nil nil ((4923 . 4924)) nil (25570 24531 388708 553000) 0 nil])
([nil nil ((1470 . 1473)) nil (25570 24531 388707 561000) 0 nil])
([nil nil ((7031 . 7034)) nil (25570 24531 388706 552000) 0 nil])
([nil nil ((7458 . 7461)) nil (25570 24531 388704 942000) 0 nil])
([nil nil ((#("
        'types'," 0 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 10 15 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 15 16 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 16 17 (part-side javascript)) . 9443) (undo-tree-id2390 . -17) (undo-tree-id2391 . -1) (undo-tree-id2392 . -17)) nil (25570 24531 388702 905000) 0 nil])
([nil nil ((11493 . 11496)) nil (25570 24531 388689 200000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -768) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -767) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . -508) 11580) nil (25570 24531 388680 197000) 0 nil])
([nil nil ((774 . 775) (t 25570 24531 421515 795000)) nil (25570 24691 14819 584000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 766) (undo-tree-id2429 . -1) (#("
" 0 1 (part-side javascript)) . 766) (undo-tree-id2430 . -1)) nil (25570 24691 14818 1000) 0 nil])
([nil nil ((766 . 772)) nil (25570 24691 14814 566000) 0 nil])
([nil nil ((#("_" 0 1 (face web-mode-function-name-face part-side javascript)) . 735) (#("t" 0 1 (face web-mode-function-name-face part-side javascript)) . 735) (#("x" 0 1 (face web-mode-function-name-face part-side javascript)) . 735) (#("e" 0 1 (face web-mode-function-name-face part-side javascript)) . 735) (#("t" 0 1 (face web-mode-function-name-face part-side javascript)) . 735)) nil (25570 24691 14812 483000) 0 nil])
([nil nil ((767 . 777)) nil (25570 24691 14810 678000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -767) (undo-tree-id2419 . -1) (#("f" 0 1 (face web-mode-keyword-face part-side javascript)) . -768) (undo-tree-id2420 . -1) (#(" " 0 1 (part-side javascript)) . -769) (undo-tree-id2421 . -1) (#("f" 0 1 (part-side javascript)) . -770) (undo-tree-id2422 . -1) (#("i" 0 1 (part-side javascript)) . -771) (undo-tree-id2423 . -1) (#("l" 0 1 (part-side javascript)) . -772) (undo-tree-id2424 . -1) (#("t" 0 1 (part-side javascript)) . -773) (undo-tree-id2425 . -1) (#("e" 0 1 (part-side javascript)) . -774) (undo-tree-id2426 . -1) (#("r" 0 1 (part-side javascript)) . -775) (undo-tree-id2427 . -1) (#(" " 0 1 (part-side javascript)) . -776) (undo-tree-id2428 . -1) 777) nil (25570 24691 14807 815000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 772) (771 . 772) (770 . 772) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -770) (767 . 771)) nil (25570 24691 14791 597000) 0 nil])
([nil nil ((771 . 773)) nil (25570 24691 14785 765000) 0 nil])
([nil nil ((772 . 776)) nil (25570 24691 14781 981000) 0 nil])
([nil nil ((777 . 781)) nil (25570 24691 14779 628000) 0 nil])
([nil nil ((781 . 788)) nil (25570 24691 14776 1000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -787) (undo-tree-id2418 . -1) 788) nil (25570 24691 14772 171000) 0 nil])
([nil nil ((789 . 791) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -789) (788 . 790)) nil (25570 24691 14768 42000) 0 nil])
([nil nil ((792 . 798) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 791) (undo-tree-id2416 . 8) (791 . 799) (#("      " 0 6 (part-side javascript)) . 791) (undo-tree-id2417 . -6) (790 . 798)) nil (25570 24691 14765 266000) 0 nil])
([nil nil ((791 . 799)) nil (25570 24691 14754 201000) 0 nil])
([nil nil ((757 . 766)) nil (25570 24691 14752 518000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -765) (undo-tree-id2415 . -1) 766) nil (25570 24691 14750 154000) 0 nil])
([nil nil ((765 . 771)) nil (25570 24691 14742 61000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -770) (undo-tree-id2414 . -1) 771) nil (25570 24691 236422 37000) 0 nil])
([nil nil ((822 . 828) (#("      " 0 6 (part-side javascript)) . 821) (undo-tree-id2502 . -6) (820 . 828)) nil (25570 24889 7853 458000) 0 nil] [nil nil ((773 . 780)) ((#("
      " 0 1 (part-side javascript) 1 7 (part-side javascript)) . 773) (undo-tree-id2436 . -7) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -7) (undo-tree-id2440 . -7) (undo-tree-id2441 . -7) (undo-tree-id2442 . -7) (undo-tree-id2443 . -7) (undo-tree-id2444 . -7) (undo-tree-id2445 . -7)) (25570 24691 16764 315000) 0 nil])
([nil nil ((828 . 842)) nil (25570 24889 7851 160000) 0 nil])
([nil nil ((783 . 785) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -783) (780 . 784)) ((#("if (" 0 2 (face web-mode-keyword-face part-side javascript) 2 3 (part-side javascript) 3 4 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 780) (undo-tree-id2431 . -3) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (783 . 784) (#("()" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript) 1 2 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 783) (undo-tree-id2434 . -1) (undo-tree-id2435 . -2)) (25570 24691 14719 699000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -841) (undo-tree-id2501 . -1) 842) nil (25570 24889 7849 989000) 0 nil])
nil
([nil nil ((822 . 828) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 821) (821 . 827) (821 . 822)) nil (25570 24889 7847 638000) 0 nil])
([nil nil ((828 . 838)) nil (25570 24889 7846 108000) 0 nil])
([nil nil ((831 . 832)) nil (25570 24889 7845 253000) 0 nil])
([nil nil ((831 . 833) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -831) (831 . 832)) nil (25570 24889 7844 5000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 832)) nil (25570 24889 7842 500000) 0 nil])
([nil nil ((841 . 843) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -841) (839 . 842)) nil (25570 24889 7841 388000) 0 nil])
([nil nil ((844 . 850) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 843) (undo-tree-id2499 . 8) (843 . 851) (#("      " 0 6 (part-side javascript)) . 843) (undo-tree-id2500 . -6) (842 . 850)) nil (25570 24889 7839 388000) 0 nil])
([nil nil ((#("      return filter
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 19 (part-side javascript) 19 20 (part-side javascript)) . 873) (undo-tree-id2497 . -6) (undo-tree-id2498 . -20) (864 . 873) (#("      } 
" 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-4-face) part-side javascript) 7 8 (face whitespace-trailing part-side javascript) 8 9 (part-side javascript)) . 844) (853 . 873) 859) nil (25570 24889 7835 43000) 0 nil])
([nil nil ((#("      return filter
" 0 6 (part-side javascript) 6 12 (face web-mode-keyword-face part-side javascript) 12 19 (part-side javascript) 19 20 (part-side javascript)) . 864) (undo-tree-id2495 . -6) (undo-tree-id2496 . -20) (863 . 864) (#("
" 0 1 (part-side javascript)) . 843) (844 . 864) 850) nil (25570 24889 7830 774000) 0 nil])
([nil nil ((843 . 851) (#("      " 0 6 (part-side javascript)) . 843) (undo-tree-id2494 . -6) 849) nil (25570 24889 7825 806000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 865) (undo-tree-id2493 . -1)) nil (25570 24889 7823 342000) 0 nil])
([nil nil ((812 . 833)) nil (25570 24889 7821 420000) 0 nil])
([nil nil ((833 . 835)) nil (25570 24889 7820 538000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -834) (undo-tree-id2492 . -1) 835) nil (25570 24889 7819 429000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 836) (835 . 836) (834 . 836) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -834) (834 . 835)) nil (25570 24889 7816 945000) 0 nil])
([nil nil ((835 . 841)) nil (25570 24889 7815 22000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -811) (undo-tree-id2484 . -1) (#("r" 0 1 (face web-mode-function-call-face part-side javascript)) . -812) (undo-tree-id2485 . -1) (#("e" 0 1 (face web-mode-function-call-face part-side javascript)) . -813) (undo-tree-id2486 . -1) (#("t" 0 1 (face web-mode-function-call-face part-side javascript)) . -814) (undo-tree-id2487 . -1) (#("u" 0 1 (face web-mode-function-call-face part-side javascript)) . -815) (undo-tree-id2488 . -1) (#("r" 0 1 (face web-mode-function-call-face part-side javascript)) . -816) (undo-tree-id2489 . -1) (#("n" 0 1 (face web-mode-function-call-face part-side javascript)) . -817) (undo-tree-id2490 . -1) (#(" " 0 1 (part-side javascript)) . -818) (undo-tree-id2491 . -1) 819) nil (25570 24889 7812 379000) 0 nil])
([nil nil ((811 . 812)) nil (25570 24889 7801 741000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -811) (undo-tree-id2483 . -1) 812) nil (25570 24889 7800 597000) 0 nil])
([nil nil ((804 . 812) (#("       " 0 7 (part-side javascript)) . 804) (undo-tree-id2482 . -7) 811) nil (25570 24889 7798 238000) 0 nil])
([nil nil ((834 . 837)) nil (25570 24889 7795 927000) 0 nil])
([nil nil ((837 . 840)) nil (25570 24889 7794 995000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -839) (undo-tree-id2481 . -1) 840) nil (25570 24889 7793 771000) 0 nil])
([nil nil ((839 . 848)) nil (25570 24889 7791 665000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -847) (undo-tree-id2480 . -1) 848) nil (25570 24889 7790 529000) 0 nil])
([nil nil ((773 . 780)) nil (25570 24889 7788 282000) 0 nil])
([nil nil ((784 . 791) (783 . 785) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -783) (780 . 784)) nil (25570 24889 7787 110000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -790) (undo-tree-id2479 . -1) 791) nil (25570 24889 7785 289000) 0 nil])
([nil nil ((792 . 794) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -792) (791 . 793)) nil (25570 24889 7782 950000) 0 nil])
([nil nil ((795 . 801) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 794) (undo-tree-id2477 . 8) (794 . 802) (#("      " 0 6 (part-side javascript)) . 794) (undo-tree-id2478 . -6) (793 . 801)) nil (25570 24889 7781 27000) 0 nil])
([nil nil ((794 . 802)) nil (25570 24889 7777 166000) 0 nil])
([nil nil ((802 . 823)) nil (25570 24889 7776 257000) 0 nil])
([nil nil ((823 . 825)) nil (25570 24889 7775 353000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -824) (undo-tree-id2476 . -1) 825) nil (25570 24889 7773 681000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -808) (undo-tree-id2475 . -1) 809) nil (25570 24889 7771 298000) 0 nil])
([nil nil ((809 . 810) (808 . 810) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -808) (808 . 809)) nil (25570 24889 7768 746000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript)) . 810)) nil (25570 24889 7766 994000) 0 nil])
([nil nil ((816 . 818)) nil (25570 24889 7766 133000) 0 nil])
([nil nil ((918 . 920)) nil (25570 24889 7765 266000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -918) (undo-tree-id2473 . -1) (#("e" 0 1 (part-side javascript)) . -919) (undo-tree-id2474 . -1) 920) nil (25570 24889 7763 908000) 0 nil])
([nil nil ((918 . 925)) nil (25570 24889 7759 436000) 0 nil])
([nil nil ((925 . 928)) nil (25570 24889 7758 545000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -926) (undo-tree-id2471 . -1) (#("l" 0 1 (part-side javascript)) . -927) (undo-tree-id2472 . -1) 928) nil (25570 24889 7757 153000) 0 nil])
([nil nil ((934 . 936) (933 . 935) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -933) (926 . 934)) nil (25570 24889 7753 495000) 0 nil])
([nil nil ((935 . 939)) nil (25570 24889 7751 928000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -937) (undo-tree-id2469 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -938) (undo-tree-id2470 . -1) 939) nil (25570 24889 7750 545000) 0 nil])
([nil nil ((937 . 940)) nil (25570 24889 7746 771000) 0 nil])
([nil nil ((941 . 952)) nil (25570 24889 7745 838000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -951) (undo-tree-id2468 . -1) 952) nil (25570 24889 7744 508000) 0 nil])
([nil nil ((953 . 955) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -953) (952 . 954)) nil (25570 24889 7673 616000) 0 nil])
([nil nil ((956 . 962) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 955) (undo-tree-id2466 . 8) (955 . 963) (#("      " 0 6 (part-side javascript)) . 955) (undo-tree-id2467 . -6) (954 . 962)) nil (25570 24889 7671 693000) 0 nil])
([nil nil ((955 . 963)) nil (25570 24889 7667 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 998 . 999) (nil part-side javascript 998 . 999) (nil face (rainbow-delimiters-depth-5-face) 998 . 999) (nil part-side javascript 979 . 998) (nil part-side javascript 978 . 979) (nil face (rainbow-delimiters-depth-5-face) 978 . 979) (nil part-side javascript 963 . 978) (nil face web-mode-function-call-face 963 . 978) (963 . 999)) nil (25570 24889 7666 540000) 0 nil])
([nil nil ((992 . 993) (991 . 993) (#("[" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -991) (990 . 992)) nil (25570 24889 7663 722000) 0 nil])
([nil nil ((1003 . 1012)) nil (25570 24889 7662 115000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1051 . 1052) (nil rear-nonsticky t 1051 . 1052) (nil part-side javascript 1051 . 1052) (nil face (rainbow-delimiters-depth-5-face) 1051 . 1052) (nil part-side javascript 1043 . 1051) (nil part-side javascript 1042 . 1043) (nil face (rainbow-delimiters-depth-6-face) 1042 . 1043) (nil part-side javascript 1041 . 1042) (nil part-side javascript 1040 . 1041) (nil face (rainbow-delimiters-depth-6-face) 1040 . 1041) (nil part-side javascript 1028 . 1040) (nil part-side javascript 1027 . 1028) (nil face (rainbow-delimiters-depth-5-face) 1027 . 1028) (nil part-side javascript 1012 . 1027) (nil face web-mode-function-call-face 1012 . 1027) (1012 . 1052)) nil (25570 24889 7660 433000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -1041) (undo-tree-id2465 . -1) 1042) nil (25570 24889 7655 787000) 0 nil])
([nil nil ((1041 . 1042)) nil (25570 24889 7653 509000) 0 nil])
([nil nil ((#("
      if (!parent) {" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 9 (face web-mode-keyword-face part-side javascript) 9 10 (part-side javascript) 10 11 (face (rainbow-delimiters-depth-4-face) part-side javascript) 11 18 (part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (part-side javascript) 20 21 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 1061) (undo-tree-id2462 . -21) (undo-tree-id2463 . -1) (undo-tree-id2464 . -21)) nil (25570 24889 7652 131000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-3-face) part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084) (#(" " 0 1 (part-side javascript)) . 1084)) nil (25570 24889 7646 468000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -1083) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) 1084) nil (25570 24889 7642 794000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -1068) 1083) nil (25570 24889 7617 707000) 0 nil])
([nil nil ((#(" " 0 1 (face whitespace-trailing part-side javascript)) . -1081) 1061) nil (25570 24889 7609 545000) 0 nil])
([nil nil ((nil rear-nonsticky nil 549 . 550) (nil part-side javascript 535 . 550) (535 . 550) (t 25570 24889 34080 651000)) nil (25570 24920 208159 73000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 552) (551 . 552) (550 . 552) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -550) (550 . 551)) nil (25570 24920 208156 952000) 0 nil])
([nil nil ((535 . 540)) nil (25570 24920 208155 26000) 0 nil])
([nil nil ((556 . 561)) nil (25570 24920 208154 112000) 0 nil])
([nil nil ((561 . 566)) nil (25570 24920 208152 873000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -565) (undo-tree-id2547 . -1) 566) nil (25570 24920 208150 838000) 0 nil])
([nil nil ((#("arser.parse(this.filter_raw)" 0 6 (part-side javascript) 6 11 (face web-mode-function-call-face part-side javascript) 11 12 (face (rainbow-delimiters-depth-7-face) part-side javascript) 12 16 (face web-mode-constant-face part-side javascript) 16 27 (part-side javascript) 27 28 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 567) (undo-tree-id2541 . -28) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -28) (undo-tree-id2546 . -28)) nil (25570 24920 208146 763000) 0 nil])
([nil nil ((#("P" 0 1 (part-side javascript)) . -566) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) 567) nil (25570 24920 208132 358000) 0 nil])
([nil nil ((876 . 881) (t 25570 24920 234128 596000)) nil (25570 25051 359906 981000) 0 nil])
([nil nil ((970 . 975)) nil (25570 25051 359904 658000) 0 nil])
([nil nil ((1024 . 1029)) nil (25570 25051 359897 288000) 0 nil])
([nil nil ((9569 . 9575) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 9568) (9568 . 9574) (9568 . 9569) (t 25570 25051 386328 620000)) nil (25570 25203 595340 576000) 0 nil])
([nil nil ((9575 . 9584)) nil (25570 25203 595339 8000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -9583) (undo-tree-id2550 . -1) 9584) nil (25570 25203 595337 929000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 9588) (9587 . 9588) (9586 . 9588) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -9586) (9583 . 9587)) nil (25570 25203 595335 524000) 0 nil])
([nil nil ((9587 . 9600)) nil (25570 25203 595333 858000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -9599) (undo-tree-id2549 . -1) 9600) nil (25570 25203 595332 638000) 0 nil])
([nil nil ((9587 . 9589)) nil (25570 25203 595329 936000) 0 nil])
([nil nil ((9588 . 9596)) nil (25570 25203 595328 723000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -9595) (undo-tree-id2548 . -1) 9596) nil (25570 25203 595326 599000) 0 nil])
([nil nil ((9595 . 9596)) nil (25570 25203 595314 533000) 0 nil])
([nil nil ((9597 . 9599)) nil (25570 25203 595307 232000) 0 nil])
([nil nil ((10708 . 10717) (t 25570 25203 618558 185000)) nil (25570 25386 296434 505000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 10730) (10729 . 10730) (10728 . 10730) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -10728) (10717 . 10729)) nil (25570 25386 296432 933000) 0 nil])
([nil nil ((#("        const parent = currentfilter.parent
" 0 8 (part-side javascript) 8 13 (face web-mode-keyword-face part-side javascript) 13 14 (part-side javascript) 14 20 (face web-mode-variable-name-face part-side javascript) 20 22 (part-side javascript) 22 23 (part-side javascript) 23 35 (part-side javascript) 35 36 (part-side javascript rear-nonsticky t) 36 43 (part-side javascript) 43 44 (part-side javascript)) . 10775) (10753 . 10775) (#("        console.log()
" 0 16 (part-side javascript) 16 19 (face web-mode-function-call-face part-side javascript) 19 20 (face (rainbow-delimiters-depth-5-face) part-side javascript) 20 21 (face (rainbow-delimiters-depth-5-face) part-side javascript) 21 22 (part-side javascript)) . 10709) (undo-tree-id2553 . -19) (undo-tree-id2554 . -20) (10731 . 10775) 10729) nil (25570 25386 296430 635000) 0 nil])
([nil nil ((#("        let {'parent': _, ...noparent} = currentfilter
" 0 8 (part-side javascript) 8 11 (face web-mode-keyword-face part-side javascript) 11 12 (part-side javascript) 12 13 (face (rainbow-delimiters-depth-5-face) part-side javascript) 13 14 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 14 20 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 20 21 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 21 37 (part-side javascript) 37 38 (face (rainbow-delimiters-depth-5-face) part-side javascript) 38 53 (part-side javascript) 53 54 (part-side javascript rear-nonsticky t) 54 55 (part-side javascript)) . 10830) (10808 . 10830) (#("        console.log()
" 0 16 (part-side javascript) 16 19 (face web-mode-function-call-face part-side javascript) 19 20 (face (rainbow-delimiters-depth-5-face) part-side javascript) 20 21 (face (rainbow-delimiters-depth-5-face) part-side javascript) 21 22 (part-side javascript)) . 10753) (undo-tree-id2552 . -20) (10775 . 10830) 10773) nil (25570 25386 296426 24000) 0 nil])
([nil nil ((10828 . 10830)) nil (25570 25386 296422 792000) 0 nil])
([nil nil ((10829 . 10836)) nil (25570 25386 296421 843000) 0 nil])
([nil nil ((10837 . 10846)) nil (25570 25386 296420 819000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10845) (undo-tree-id2551 . -1) 10846) nil (25570 25386 296419 101000) 0 nil])
([nil nil ((10836 . 10837)) nil (25570 25386 296408 841000) 0 nil])
([nil nil ((10929 . 10940)) nil (25570 25386 296407 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10970 . 10971) (nil part-side javascript 10970 . 10971) (nil face (rainbow-delimiters-depth-6-face) 10970 . 10971) (nil part-side javascript 10962 . 10970) (nil part-side javascript 10961 . 10962) (nil part-token string 10961 . 10962) (nil syntax-table (15) 10961 . 10962) (nil font-lock-face web-mode-javascript-string-face 10961 . 10962) (nil part-side javascript 10953 . 10961) (nil part-token string 10953 . 10961) (nil font-lock-face web-mode-javascript-string-face 10953 . 10961) (nil part-side javascript 10952 . 10953) (nil part-token string 10952 . 10953) (nil syntax-table (15) 10952 . 10953) (nil font-lock-face web-mode-javascript-string-face 10952 . 10953) (nil part-side javascript 10951 . 10952) (nil face (rainbow-delimiters-depth-6-face) 10951 . 10952) (nil part-side javascript 10948 . 10951) (nil face web-mode-function-call-face 10948 . 10951) (nil part-side javascript 10940 . 10948) (10940 . 10971)) nil (25570 25386 296404 872000) 0 nil])
([nil nil ((10953 . 10959)) nil (25570 25386 296393 523000) 0 nil])
([nil nil ((11111 . 11122) (t 25570 25386 330860 637000)) nil (25570 25479 302484 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11158 . 11159) (nil rear-nonsticky t 11158 . 11159) (nil part-side javascript 11158 . 11159) (nil face (rainbow-delimiters-depth-6-face) 11158 . 11159) (nil part-side javascript 11150 . 11158) (nil part-side javascript 11149 . 11150) (nil part-token string 11149 . 11150) (nil syntax-table (15) 11149 . 11150) (nil font-lock-face web-mode-javascript-string-face 11149 . 11150) (nil part-side javascript 11135 . 11149) (nil part-token string 11135 . 11149) (nil font-lock-face web-mode-javascript-string-face 11135 . 11149) (nil part-side javascript 11134 . 11135) (nil part-token string 11134 . 11135) (nil syntax-table (15) 11134 . 11135) (nil font-lock-face web-mode-javascript-string-face 11134 . 11135) (nil part-side javascript 11133 . 11134) (nil face (rainbow-delimiters-depth-6-face) 11133 . 11134) (nil part-side javascript 11130 . 11133) (nil face web-mode-function-call-face 11130 . 11133) (nil part-side javascript 11122 . 11130) (11122 . 11159)) nil (25570 25479 302476 251000) 0 nil])
([nil nil ((867 . 876) (t 25570 25479 327049 203000)) nil (25570 25603 111445 778000) 0 nil])
([nil nil ((882 . 884) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -882) (876 . 883)) nil (25570 25603 111444 450000) 0 nil])
([nil nil ((883 . 885)) nil (25570 25603 111443 63000) 0 nil])
([nil nil ((884 . 888)) nil (25570 25603 111442 88000) 0 nil])
([nil nil ((890 . 891)) nil (25570 25603 111441 55000) 0 nil])
([nil nil ((890 . 891)) nil (25570 25603 111440 123000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#(" " 0 1 (part-side javascript)) . 892) (#("
" 0 1 (part-side javascript)) . 892) (undo-tree-id2556 . -1)) nil (25570 25603 111438 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1002 . 1003) (nil part-side javascript 1002 . 1003) (nil part-side javascript 1001 . 1002) (nil part-side javascript 1000 . 1001) (nil face (rainbow-delimiters-depth-5-face) 1000 . 1001) (nil part-side javascript 999 . 1000) (nil part-token string 999 . 1000) (nil syntax-table (15) 999 . 1000) (nil font-lock-face web-mode-javascript-string-face 999 . 1000) (nil part-side javascript 995 . 999) (nil part-token string 995 . 999) (nil font-lock-face web-mode-javascript-string-face 995 . 999) (nil part-side javascript 994 . 995) (nil part-token string 994 . 995) (nil syntax-table (15) 994 . 995) (nil font-lock-face web-mode-javascript-string-face 994 . 995) (nil part-side javascript 993 . 994) (nil face (rainbow-delimiters-depth-5-face) 993 . 994) (nil part-side javascript 987 . 993) (987 . 1003)) nil (25570 25603 111432 861000) 0 nil])
([nil nil ((1003 . 1004)) nil (25570 25603 111427 795000) 0 nil])
([nil nil ((999 . 1000)) nil (25570 25603 111426 835000) 0 nil])
([nil nil ((1003 . 1004) (1002 . 1004) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -1002) (1002 . 1003)) nil (25570 25603 111425 512000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1082 . 1083) (nil part-side javascript 1082 . 1083) (nil rear-nonsticky t 1081 . 1082) (nil part-side javascript 1081 . 1082) (nil part-side javascript 1080 . 1081) (nil part-side javascript 1079 . 1080) (nil face (rainbow-delimiters-depth-5-face) 1079 . 1080) (nil part-side javascript 1078 . 1079) (nil part-side javascript 1077 . 1078) (nil face (rainbow-delimiters-depth-5-face) 1077 . 1078) (nil part-side javascript 1076 . 1077) (nil face (rainbow-delimiters-depth-5-face) 1076 . 1077) (nil part-side javascript 1075 . 1076) (nil part-token string 1075 . 1076) (nil syntax-table (15) 1075 . 1076) (nil font-lock-face web-mode-javascript-string-face 1075 . 1076) (nil part-side javascript 1070 . 1075) (nil part-token string 1070 . 1075) (nil font-lock-face web-mode-javascript-string-face 1070 . 1075) (nil part-side javascript 1069 . 1070) (nil part-token string 1069 . 1070) (nil syntax-table (15) 1069 . 1070) (nil font-lock-face web-mode-javascript-string-face 1069 . 1070) (nil part-side javascript 1068 . 1069) (nil face (rainbow-delimiters-depth-5-face) 1068 . 1069) (nil part-side javascript 1062 . 1068) (1062 . 1083)) nil (25570 25603 111422 486000) 0 nil])
([nil nil ((#("0" 0 1 (part-side javascript)) . -1078) (undo-tree-id2555 . -1) 1079) nil (25570 25603 111414 645000) 0 nil])
([nil nil ((1078 . 1079)) nil (25570 25603 111398 441000) 0 nil])
([nil nil ((509 . 519) (#("          " 0 10 (face whitespace-trailing part-side javascript)) . 508) (508 . 518) (508 . 509) (t 25570 25603 143288 501000)) nil (25570 25690 858602 875000) 0 nil])
([nil nil ((519 . 524)) nil (25570 25690 858600 855000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -519) (undo-tree-id2557 . -1) (#("r" 0 1 (part-side javascript)) . -520) (undo-tree-id2558 . -1) (#("i" 0 1 (part-side javascript)) . -521) (undo-tree-id2559 . -1) (#("n" 0 1 (part-side javascript)) . -522) (undo-tree-id2560 . -1) (#("t" 0 1 (part-side javascript)) . -523) (undo-tree-id2561 . -1) 524) nil (25570 25690 858598 492000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 532) (531 . 532) (530 . 532) (#("(" 0 1 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . -530) (519 . 531)) nil (25570 25690 862144 945000) 0 nil])
([nil nil ((531 . 541)) nil (25570 25709 73068 647000) 0 nil] [nil nil ((nil rear-nonsticky nil 561 . 562) (nil part-side javascript 561 . 562) (nil face (rainbow-delimiters-depth-7-face) 561 . 562) (nil part-side javascript 552 . 561) (nil part-side javascript 551 . 552) (nil face (rainbow-delimiters-depth-7-face) 551 . 552) (nil rear-nonsticky t 550 . 551) (nil part-side javascript 550 . 551) (nil face web-mode-function-call-face 550 . 551) (nil part-side javascript 536 . 550) (nil face web-mode-function-call-face 536 . 550) (nil part-side javascript 535 . 536) (nil part-side javascript 531 . 535) (nil face web-mode-constant-face 531 . 535) (531 . 562)) ((#("this.filter_restruct(temp_filt)" 0 4 (face web-mode-constant-face part-side javascript) 4 5 (part-side javascript) 5 19 (face web-mode-function-call-face part-side javascript) 19 20 (face web-mode-function-call-face part-side javascript rear-nonsticky t) 20 21 (face (rainbow-delimiters-depth-7-face) part-side javascript) 21 30 (part-side javascript) 30 31 (face (rainbow-delimiters-depth-7-face) part-side javascript rear-nonsticky nil)) . 531) (undo-tree-id2562 . -31) (nil rear-nonsticky nil 550 . 551) (nil face (rainbow-delimiters-depth-7-face) 551 . 552) (nil face (rainbow-delimiters-depth-7-face) 561 . 562) (nil rear-nonsticky t 561 . 562)) (25570 25690 858574 198000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -540) (undo-tree-id2572 . -1) 541) nil (25570 25709 73067 282000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 498 . 499) (nil part-side javascript 498 . 499) (nil face (rainbow-delimiters-depth-6-face) 498 . 499) (nil rear-nonsticky t 497 . 498) (nil part-side javascript 497 . 498) (nil face web-mode-function-call-face 497 . 498) (nil part-side javascript 483 . 497) (nil face web-mode-function-call-face 483 . 497) (nil part-side javascript 482 . 483) (nil part-side javascript 478 . 482) (nil face web-mode-constant-face 478 . 482) (478 . 499)) nil (25570 25709 73064 337000) 0 nil])
([nil nil ((528 . 529)) nil (25570 25709 73061 44000) 0 nil])
([nil nil ((#("this.filter_restruct(temp_filt)" 0 4 (face web-mode-constant-face part-side javascript) 4 5 (part-side javascript) 5 19 (face web-mode-function-call-face part-side javascript) 19 20 (face web-mode-function-call-face part-side javascript rear-nonsticky t) 20 21 (face (rainbow-delimiters-depth-7-face) part-side javascript) 21 30 (part-side javascript) 30 31 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 590) (undo-tree-id2568 . -31) (undo-tree-id2569 . -31) (undo-tree-id2570 . -21) (undo-tree-id2571 . -31)) nil (25570 25709 73059 521000) 0 nil])
([nil nil ((590 . 600)) nil (25570 25709 73053 312000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -599) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) 600) nil (25570 25709 73048 283000) 0 nil])
([nil nil ((#("

      return filter" 0 1 (part-side javascript) 1 2 (part-side javascript) 2 8 (part-side javascript) 8 14 (face web-mode-keyword-face part-side javascript) 14 21 (part-side javascript)) . 1169) (undo-tree-id2587 . -21) (undo-tree-id2588 . -1) (undo-tree-id2589 . -21) (t 25570 25709 99484 612000)) nil (25570 27740 339280 603000) 0 nil])
([nil nil ((#("filter['rule'] = " 0 6 (part-side javascript) 6 7 (face (rainbow-delimiters-depth-5-face) part-side javascript) 7 8 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 8 12 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 12 13 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 13 14 (face (rainbow-delimiters-depth-5-face) part-side javascript) 14 15 (part-side javascript) 15 16 (part-side javascript) 16 17 (part-side javascript)) . 909) (undo-tree-id2584 . -17) (undo-tree-id2585 . -16) (undo-tree-id2586 . -17)) nil (25570 27740 339275 957000) 0 nil])
([nil nil ((#("ilter['rules'][0] =" 0 5 (part-side javascript) 5 6 (face (rainbow-delimiters-depth-5-face) part-side javascript) 6 7 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 7 12 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 12 13 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 13 14 (face (rainbow-delimiters-depth-5-face) part-side javascript) 14 15 (face (rainbow-delimiters-depth-5-face) part-side javascript) 15 16 (part-side javascript) 16 17 (face (rainbow-delimiters-depth-5-face) part-side javascript) 17 18 (part-side javascript) 18 19 (part-side javascript rear-nonsticky t)) . 1004) (undo-tree-id2581 . -19) (undo-tree-id2582 . -18) (undo-tree-id2583 . -19)) nil (25570 27740 339271 699000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -1003) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) 1004) nil (25570 27740 339267 140000) 0 nil])
([nil nil ((#("ilter['rules'][1] = " 0 5 (part-side javascript) 5 6 (face (rainbow-delimiters-depth-5-face) part-side javascript) 6 7 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 7 12 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 12 13 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 13 14 (face (rainbow-delimiters-depth-5-face) part-side javascript) 14 15 (face (rainbow-delimiters-depth-5-face) part-side javascript) 15 16 (part-side javascript) 16 17 (face (rainbow-delimiters-depth-5-face) part-side javascript) 17 19 (part-side javascript) 19 20 (part-side javascript rear-nonsticky t)) . 1059) (undo-tree-id2576 . -20) (undo-tree-id2577 . -20)) nil (25570 27740 339261 832000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -1058) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) 1059) nil (25570 27740 339257 112000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 1003) (undo-tree-id2573 . -1)) nil (25570 27740 339248 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 506 . 507) (nil rear-nonsticky t 506 . 507) (nil part-side javascript 506 . 507) (nil face (rainbow-delimiters-depth-6-face) 506 . 507) (nil part-side javascript 495 . 506) (nil part-side javascript 491 . 495) (nil face web-mode-constant-face 491 . 495) (nil part-side javascript 490 . 491) (nil face (rainbow-delimiters-depth-6-face) 490 . 491) (nil part-side javascript 485 . 490) (nil face web-mode-function-call-face 485 . 490) (nil part-side javascript 478 . 485) (478 . 507) (t 25570 27740 366417 134000)) nil (25570 27792 63816 882000) 0 nil])
([nil nil ((507 . 508)) nil (25570 27792 63812 975000) 0 nil])
([nil nil ((509 . 519) (#("          " 0 10 (part-side javascript)) . 508) (undo-tree-id2606 . -10) (508 . 519) (#(" " 0 1 (part-side javascript)) . 507) (undo-tree-id2607 . -1) (508 . 509)) nil (25570 27792 63811 502000) 0 nil])
([nil nil ((#("Parser.parse(this.filter_raw)" 0 7 (part-side javascript) 7 12 (face web-mode-function-call-face part-side javascript) 12 13 (face (rainbow-delimiters-depth-7-face) part-side javascript) 13 17 (face web-mode-constant-face part-side javascript) 17 28 (part-side javascript) 28 29 (face (rainbow-delimiters-depth-7-face) part-side javascript rear-nonsticky t)) . 540) (undo-tree-id2603 . -29) (undo-tree-id2604 . -29) (undo-tree-id2605 . -29)) nil (25570 27792 63806 422000) 0 nil])
([nil nil ((540 . 550)) nil (25570 27792 63801 52000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -549) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) 550) nil (25570 27792 63795 610000) 0 nil])
([nil nil ((2477 . 2483) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . 2476) (2476 . 2482) (2476 . 2477) (t 25570 27792 90463 643000)) nil (25570 27909 879850 374000) 0 nil])
([nil nil ((2483 . 2491)) nil (25570 27909 879848 644000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2490) (undo-tree-id2620 . -1) 2491) nil (25570 27909 879847 502000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) part-side javascript)) . 2496) (2495 . 2496) (2494 . 2496) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -2494) (2490 . 2495)) nil (25570 27909 879844 906000) 0 nil])
([nil nil ((2495 . 2497)) nil (25570 27909 879843 51000) 0 nil])
([nil nil ((2496 . 2504)) nil (25570 27909 879842 92000) 0 nil])
([nil nil ((2505 . 2508)) nil (25570 27909 879841 63000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -2507) (undo-tree-id2619 . -1) 2508) nil (25570 27909 879839 564000) 0 nil])
([nil nil ((2507 . 2516)) nil (25570 27909 879837 321000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2513) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (#("_" 0 1 (part-side javascript)) . -2514) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (#(":" 0 1 (part-side javascript)) . -2515) (undo-tree-id2618 . -1) 2516) nil (25570 27909 879835 689000) 0 nil])
([nil nil ((2513 . 2518)) nil (25570 27909 879828 790000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -2514) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (#("f" 0 1 (part-side javascript)) . -2515) (undo-tree-id2611 . -1) (#("i" 0 1 (part-side javascript)) . -2516) (undo-tree-id2612 . -1) (#("l" 0 1 (part-side javascript)) . -2517) (undo-tree-id2613 . -1) 2518) nil (25570 27909 879826 714000) 0 nil])
([nil nil ((2514 . 2528)) nil (25570 27909 879817 641000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -2527) (undo-tree-id2608 . -1) 2528) nil (25570 27909 879812 469000) 0 nil])
([nil nil ((826 . 828) (t 25570 27909 906578 484000)) nil (25570 28730 16861 940000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -826) (undo-tree-id2629 . -1) (#(" " 0 1 (part-side javascript)) . -827) (undo-tree-id2630 . -1) 828) nil (25570 28730 16858 307000) 0 nil])
([nil nil ((826 . 834)) nil (25570 28730 16850 35000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -833) (undo-tree-id2628 . -1) 834) nil (25570 28730 16847 193000) 0 nil])
([nil nil ((833 . 843)) nil (25570 28730 16839 424000) 0 nil])
([nil nil ((908 . 915)) nil (25570 28730 16837 954000) 0 nil])
([nil nil ((915 . 919)) nil (25570 28730 16834 652000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -916) (undo-tree-id2625 . -1) (#("f" 0 1 (part-side javascript)) . -917) (undo-tree-id2626 . -1) (#(" " 0 1 (part-side javascript)) . -918) (undo-tree-id2627 . -1) 919) nil (25570 28730 16830 995000) 0 nil])
([nil nil ((919 . 923) (918 . 920) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -918) (916 . 919)) nil (25570 28730 16820 414000) 0 nil])
([nil nil ((923 . 929)) nil (25570 28730 16818 838000) 0 nil])
([nil nil ((931 . 933) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . -931) (930 . 932)) nil (25570 28730 16817 696000) 0 nil])
([nil nil ((934 . 940) (#("        " 0 8 (face whitespace-trailing part-side javascript)) . 933) (undo-tree-id2623 . 8) (933 . 941) (#("      " 0 6 (part-side javascript)) . 933) (undo-tree-id2624 . -6) (932 . 940)) nil (25570 28730 16815 749000) 0 nil])
([nil nil ((933 . 941)) nil (25570 28730 16811 521000) 0 nil])
([nil nil ((948 . 950) (947 . 949) (#("[" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -947) (941 . 948)) nil (25570 28730 16810 267000) 0 nil])
([nil nil ((#("rulesorder" 0 10 (part-side javascript)) . 828) (undo-tree-id2621 . -10) (undo-tree-id2622 . -10)) nil (25570 28730 16808 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 834 . 835) (nil part-side javascript 828 . 835) (828 . 835)) nil (25570 28730 16798 529000) 0 nil])
([nil nil ((nil rear-nonsticky nil 952 . 953) (nil part-side javascript 946 . 953) (nil part-token string 946 . 953) (nil font-lock-face web-mode-javascript-string-face 946 . 953) (946 . 953)) nil (25570 28730 16796 832000) 0 nil])
([nil nil ((955 . 958)) nil (25570 28730 16794 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 964 . 965) (nil part-side javascript 958 . 965) (958 . 965)) nil (25570 28730 16792 846000) 0 nil])
([nil nil ((1150 . 1153)) nil (25570 28730 16790 635000) 0 nil])
([nil nil ((1207 . 1210)) nil (25570 28730 16783 212000) 0 nil])
([nil nil ((#("ulesorder" 0 9 (part-side javascript)) . 917) (undo-tree-id2633 . -9) (undo-tree-id2634 . -9) (t 25570 28730 43570 729000)) nil (25570 28756 70398 38000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -916) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) 917) nil (25570 28756 70392 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 922 . 923) (nil rear-nonsticky t 922 . 923) (nil part-side javascript 922 . 923) (nil part-side javascript 916 . 922) (916 . 923)) nil (25570 28756 70375 218000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -12743) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) 12744 (t 25570 28756 99605 212000)) nil (25570 29213 606286 689000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -12731) (undo-tree-id2637 . -1) 12732) nil (25570 29213 606280 984000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -12695) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) 12696) nil (25570 29213 606273 608000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -12514) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) 12515 (t 25570 29213 636222 648000)) nil (25570 29220 56753 753000) 0 nil])
([nil nil ((#("
        // currentfilter['types'] = ['*']
        console.log(\"current filter:\", currentfilter)" 0 1 (syntax-table (15) part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 25 26 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 27 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 37 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 37 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 39 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 42 43 (syntax-table (12) part-side javascript) 43 51 (part-side javascript) 51 59 (part-side javascript) 59 62 (face web-mode-function-call-face part-side javascript) 62 63 (face (rainbow-delimiters-depth-5-face) part-side javascript) 63 64 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 64 72 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 72 78 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 78 79 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 79 80 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 80 95 (part-side javascript) 95 96 (face (rainbow-delimiters-depth-5-face) part-side javascript rear-nonsticky t)) . 12143) (undo-tree-id2642 . -96) (undo-tree-id2643 . -1) (undo-tree-id2644 . -42) (undo-tree-id2645 . -42) (undo-tree-id2646 . -42) (undo-tree-id2647 . -42) (undo-tree-id2648 . -42) (undo-tree-id2649 . -42) (undo-tree-id2650 . -42) (undo-tree-id2651 . -42) (undo-tree-id2652 . -42) (undo-tree-id2653 . -42) (undo-tree-id2654 . -42) (undo-tree-id2655 . -42) (undo-tree-id2656 . -96) (undo-tree-id2657 . -96) (undo-tree-id2658 . -96) (undo-tree-id2659 . -96) (undo-tree-id2660 . -96) (undo-tree-id2661 . -96) (undo-tree-id2662 . -96) (undo-tree-id2663 . -96) (undo-tree-id2664 . -96) (undo-tree-id2665 . -96) (undo-tree-id2666 . -42) (undo-tree-id2667 . -42) (undo-tree-id2668 . -42) (undo-tree-id2669 . -96) (undo-tree-id2670 . -96) (t 25570 29220 84231 466000)) nil (25570 29232 477280 320000) 0 nil])
([nil nil ((#("
          console.log('Grand parent! ', parent)" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 19 (part-side javascript) 19 22 (face web-mode-function-call-face part-side javascript) 22 23 (face (rainbow-delimiters-depth-6-face) part-side javascript) 23 24 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 24 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 39 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky t)) . 11281) (undo-tree-id2680 . -48) (undo-tree-id2681 . -1) (undo-tree-id2682 . -48) (t 25570 29232 508248 469000)) nil (25570 29244 203720 93000) 0 nil])
([nil nil ((#("
          console.log('Grand parent! ', parent)" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 19 (part-side javascript) 19 22 (face web-mode-function-call-face part-side javascript) 22 23 (face (rainbow-delimiters-depth-6-face) part-side javascript) 23 24 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 24 38 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 38 39 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 39 47 (part-side javascript) 47 48 (face (rainbow-delimiters-depth-6-face) part-side javascript rear-nonsticky t)) . 11099) (undo-tree-id2677 . -48) (undo-tree-id2678 . -1) (undo-tree-id2679 . -48)) nil (25570 29244 203715 377000) 0 nil])
([nil nil ((#("
        console.log('parent! ', parent)" 0 1 (part-side javascript) 1 17 (part-side javascript) 17 20 (face web-mode-function-call-face part-side javascript) 20 21 (face (rainbow-delimiters-depth-5-face) part-side javascript) 21 22 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 22 30 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 30 31 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 31 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 10977) (undo-tree-id2674 . -40) (undo-tree-id2675 . -1) (undo-tree-id2676 . -40)) nil (25570 29244 203710 135000) 0 nil])
([nil nil ((#("
      console.log('filters ', this.filters)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 28 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 28 29 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 29 31 (part-side javascript) 31 35 (face web-mode-constant-face part-side javascript) 35 43 (part-side javascript) 43 44 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 9738) (undo-tree-id2671 . -44) (undo-tree-id2672 . -1) (undo-tree-id2673 . -44)) nil (25570 29244 203701 407000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -10887) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (#("e" 0 1 (part-side javascript)) . -10888) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -10889) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (#(" " 0 1 (part-side javascript)) . -10890) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) 10891 (t 25570 29244 232264 519000)) nil (25570 29265 640165 50000) 0 nil])
([nil nil ((10887 . 10893)) nil (25570 29265 640153 327000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -10888) (undo-tree-id2686 . -1) (#("o" 0 1 (part-side javascript)) . -10889) (undo-tree-id2687 . -1) (#("n" 0 1 (part-side javascript)) . -10890) (undo-tree-id2688 . -1) (#("t" 0 1 (part-side javascript)) . -10891) (undo-tree-id2689 . -1) (#(" " 0 1 (part-side javascript)) . -10892) (undo-tree-id2690 . -1) 10893) nil (25570 29265 640150 761000) 0 nil])
([nil nil ((10888 . 10894)) nil (25570 29265 640141 545000) 0 nil])
([nil nil ((#("x" 0 1 (face web-mode-variable-name-face part-side javascript)) . -10893) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) 10894) nil (25570 29265 640134 612000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 10894) (t 25570 29265 668293 884000)) nil (25570 29283 518250 934000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 10900)) nil (25570 29283 518242 874000) 0 nil])
([nil nil ((#("
        // currentfilter['types'] = ['*']" 0 1 (syntax-table (15) part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 25 26 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 27 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 37 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 37 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 39 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 7501) (undo-tree-id2710 . -42) (undo-tree-id2711 . -1) (undo-tree-id2712 . -42) (t 25570 29283 548318 393000)) nil (25570 29341 681915 103000) 0 nil])
([nil nil ((#("
        // currentfilter['types'] = ['*']" 0 1 (syntax-table (15) part-side javascript) 1 9 (part-side javascript) 9 10 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 10 25 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 25 26 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 26 27 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 27 32 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 32 33 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 33 34 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 34 37 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 37 38 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 38 39 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 39 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 42 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 7886) (undo-tree-id2707 . -42) (undo-tree-id2708 . -1) (undo-tree-id2709 . -42)) nil (25570 29341 681909 918000) 0 nil])
([nil nil ((#("      // delete currentfilter.types
      // delete currentfilter.type" 0 6 (part-side javascript) 6 7 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 7 9 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 9 15 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 15 35 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 35 36 (syntax-table (12) part-side javascript) 36 42 (part-side javascript) 42 43 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 43 45 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 45 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 70 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 5397) (undo-tree-id2704 . -70) (undo-tree-id2705 . -36) (undo-tree-id2706 . -70)) nil (25570 29341 681905 355000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side javascript)) . -5396) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) 5397) nil (25570 29341 681900 348000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -4835) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) 4836) nil (25570 29341 681894 184000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 4841)) nil (25570 29341 681876 783000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -2796) (undo-tree-id2720 . -1) (#("e" 0 1 (part-side javascript)) . -2797) (undo-tree-id2721 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -2798) (undo-tree-id2722 . -1) 2799 (t 25570 29341 716398 248000)) nil (25570 29364 365211 620000) 0 nil])
([nil nil ((2796 . 2801)) nil (25570 29364 365196 241000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -2797) (undo-tree-id2716 . -1) (#("o" 0 1 (part-side javascript)) . -2798) (undo-tree-id2717 . -1) (#("n" 0 1 (part-side javascript)) . -2799) (undo-tree-id2718 . -1) (#("t" 0 1 (part-side javascript)) . -2800) (undo-tree-id2719 . -1) 2801) nil (25570 29364 365191 109000) 0 nil])
([nil nil ((2797 . 2801)) nil (25570 29364 365178 695000) 0 nil])
([nil nil ((#("
            console.log(this.filtercursordetail)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 24 (face web-mode-function-call-face part-side javascript) 24 25 (face (rainbow-delimiters-depth-7-face) part-side javascript) 25 29 (face web-mode-constant-face part-side javascript) 29 47 (part-side javascript) 47 48 (part-side javascript rear-nonsticky t) 48 49 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 3596) (undo-tree-id2713 . -49) (undo-tree-id2714 . -1) (undo-tree-id2715 . -49)) nil (25570 29364 365172 124000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -2803) (undo-tree-id2726 . -1) 2804 (t 25570 29364 396429 425000)) nil (25570 29379 434737 48000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -2809) (undo-tree-id2725 . -1) 2810) nil (25570 29379 435952 354000) 0 nil])
([nil nil ((#("
      console.log('parent  ', currentfilter.parent)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 20 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 20 28 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 28 29 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 29 31 (part-side javascript) 31 51 (part-side javascript) 51 52 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2561) (undo-tree-id2727 . -52) (undo-tree-id2728 . -1) (undo-tree-id2729 . -52)) nil (25570 29388 562453 658000) 0 nil] [nil nil ((#("'" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -2624) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) 2625) ((2624 . 2625)) (25570 29379 434726 367000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2630) (undo-tree-id2730 . -1) (t 25570 29388 592462 708000)) nil (25570 29401 850819 183000) 0 nil])
nil
([nil nil ((#("
      const filtertype = currentfilter['condition']" 0 7 (part-side javascript) 7 12 (face web-mode-keyword-face part-side javascript) 12 13 (part-side javascript) 13 23 (face web-mode-variable-name-face part-side javascript) 23 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-4-face) part-side javascript) 40 41 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 41 50 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 50 51 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 51 52 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 2508) (undo-tree-id2731 . -52) (undo-tree-id2732 . -1) (undo-tree-id2733 . -52) (undo-tree-id2734 . -52) (t 25570 29401 888481 10000)) nil (25570 29435 409997 660000) 0 nil])
([nil nil ((835 . 836) (t 25570 29435 440526 917000)) nil (25570 29445 566834 504000) 0 nil])
([nil nil ((837 . 838)) nil (25570 29445 566832 854000) 0 nil])
([nil nil ((821 . 822)) nil (25570 29445 566831 48000) 0 nil])
([nil nil ((823 . 824)) nil (25570 29445 566823 577000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -462) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (#("e" 0 1 (part-side javascript)) . -463) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (#("t" 0 1 (face web-mode-keyword-face part-side javascript)) . -464) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) 465 (t 25570 29445 600535 848000)) nil (25570 29454 766876 526000) 0 nil])
([nil nil ((462 . 467)) nil (25570 29454 766867 347000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -463) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (#("o" 0 1 (part-side javascript)) . -464) (undo-tree-id2737 . -1) (#("n" 0 1 (part-side javascript)) . -465) (undo-tree-id2738 . -1) (#("t" 0 1 (part-side javascript)) . -466) (undo-tree-id2739 . -1) 467) nil (25570 29454 766863 932000) 0 nil])
([nil nil ((463 . 467)) nil (25570 29454 766844 280000) 0 nil])
([nil nil ((#("
          console.log(temp_filt)" 0 1 (part-side javascript) 1 19 (part-side javascript) 19 22 (face web-mode-function-call-face part-side javascript) 22 23 (face (rainbow-delimiters-depth-6-face) part-side javascript) 23 32 (part-side javascript) 32 33 (face (rainbow-delimiters-depth-6-face) part-side javascript)) . 553) (undo-tree-id2770 . -33) (undo-tree-id2771 . -1) (undo-tree-id2772 . -33) (t 25570 29454 800544 11000)) nil (25570 29458 988553 960000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -552) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) 553) nil (25570 29458 988543 286000) 0 nil])
([nil nil ((817 . 823) (#("      " 0 6 (part-side javascript)) . 816) (undo-tree-id2839 . -6) (815 . 823) (t 25570 29459 20547 780000)) nil (25570 29567 86432 53000) 0 nil])
([nil nil ((nil rear-nonsticky nil 880 . 881) (nil rear-nonsticky t 880 . 881) (nil part-side javascript 880 . 881) (nil part-token comment 880 . 881) (nil font-lock-face web-mode-javascript-comment-face 880 . 881) (nil part-side javascript 878 . 880) (nil part-token comment 878 . 880) (nil font-lock-face web-mode-javascript-comment-face 878 . 880) (nil part-side javascript 871 . 878) (nil part-token comment 871 . 878) (nil font-lock-face web-mode-javascript-comment-face 871 . 878) (nil part-side javascript 867 . 871) (nil part-token comment 867 . 871) (nil font-lock-face web-mode-javascript-comment-face 867 . 871) (nil part-side javascript 864 . 867) (nil part-token comment 864 . 867) (nil font-lock-face web-mode-javascript-comment-face 864 . 867) (nil part-side javascript 861 . 864) (nil part-token comment 861 . 864) (nil font-lock-face web-mode-javascript-comment-face 861 . 864) (nil part-side javascript 858 . 861) (nil part-token comment 858 . 861) (nil font-lock-face web-mode-javascript-comment-face 858 . 861) (nil part-side javascript 854 . 858) (nil part-token comment 854 . 858) (nil font-lock-face web-mode-javascript-comment-face 854 . 858) (nil part-side javascript 853 . 854) (nil part-token comment 853 . 854) (nil font-lock-face web-mode-javascript-comment-face 853 . 854) (nil part-side javascript 847 . 853) (nil part-token comment 847 . 853) (nil font-lock-face web-mode-javascript-comment-face 847 . 853) (nil part-side javascript 837 . 847) (nil part-token comment 837 . 847) (nil font-lock-face web-mode-javascript-comment-face 837 . 847) (nil part-side javascript 833 . 837) (nil part-token comment 833 . 837) (nil font-lock-face web-mode-javascript-comment-face 833 . 837) (nil part-side javascript 825 . 833) (nil part-token comment 825 . 833) (nil font-lock-face web-mode-javascript-comment-face 825 . 833) (nil part-side javascript 824 . 825) (nil part-token comment 824 . 825) (nil font-lock-face web-mode-javascript-comment-face 824 . 825) (nil part-side javascript 823 . 824) (nil part-token comment 823 . 824) (nil syntax-table (11) 823 . 824) (nil font-lock-face web-mode-javascript-comment-face 823 . 824) (nil part-side javascript 817 . 823) (nil part-side javascript 816 . 817) (816 . 881)) nil (25570 29567 86426 990000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 816) (undo-tree-id2838 . -1)) nil (25570 29567 86414 971000) 0 nil])
([nil nil ((825 . 837)) nil (25570 29567 86413 96000) 0 nil])
([nil nil ((837 . 856)) nil (25570 29567 86412 121000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -855) (undo-tree-id2837 . -1) 856) nil (25570 29567 86410 908000) 0 nil])
([nil nil ((855 . 865)) nil (25570 29567 86407 965000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -862) (undo-tree-id2834 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -863) (undo-tree-id2835 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -864) (undo-tree-id2836 . -1) 865) nil (25570 29567 86406 265000) 0 nil])
([nil nil ((862 . 879)) nil (25570 29567 86401 960000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -877) (undo-tree-id2832 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -878) (undo-tree-id2833 . -1) 879) nil (25570 29567 86400 460000) 0 nil])
([nil nil ((877 . 881)) nil (25570 29567 86396 817000) 0 nil])
([nil nil ((856 . 861)) nil (25570 29567 86395 878000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("b" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("k" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("U" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885)) nil (25570 29567 86391 642000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("R" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("O" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("u" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("v" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885)) nil (25570 29567 86382 690000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("D" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("N" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#("A" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 885)) nil (25570 29567 86374 843000) 0 nil])
([nil nil ((885 . 887)) nil (25570 29567 86371 382000) 0 nil])
([nil nil ((888 . 894) 887) nil (25570 29567 86370 353000) 0 nil])
([nil nil ((886 . 887)) nil (25570 29567 86369 112000) 0 nil])
([nil nil ((886 . 895)) nil (25570 29567 86368 151000) 0 nil])
([nil nil ((895 . 914)) nil (25570 29567 86366 963000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -913) (undo-tree-id2831 . -1) 914) nil (25570 29567 86365 677000) 0 nil])
([nil nil ((914 . 923)) nil (25570 29567 86363 383000) 0 nil])
([nil nil ((923 . 924)) nil (25570 29567 86362 477000) 0 nil])
([nil nil ((924 . 933)) nil (25570 29567 86361 478000) 0 nil])
([nil nil ((933 . 954)) nil (25570 29567 86360 526000) 0 nil])
([nil nil ((954 . 955)) nil (25570 29567 86359 440000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -954) (undo-tree-id2830 . -1) 955) nil (25570 29567 86358 252000) 0 nil])
([nil nil ((#("F" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -943) (undo-tree-id2819 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -944) (undo-tree-id2820 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -945) (undo-tree-id2821 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -946) (undo-tree-id2822 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -947) (undo-tree-id2823 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -948) (undo-tree-id2824 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -949) (undo-tree-id2825 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -950) (undo-tree-id2826 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -951) (undo-tree-id2827 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -952) (undo-tree-id2828 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -953) (undo-tree-id2829 . -1) 954) nil (25570 29567 86353 698000) 0 nil])
([nil nil ((943 . 964)) nil (25570 29567 86338 969000) 0 nil])
([nil nil ((982 . 985) (981 . 983) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -981) (964 . 982)) nil (25570 29567 86337 716000) 0 nil])
([nil nil ((985 . 989)) nil (25570 29567 86335 925000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -988) (undo-tree-id2818 . -1) 989) nil (25570 29567 86334 792000) 0 nil])
([nil nil ((989 . 990)) nil (25570 29567 86332 605000) 0 nil])
([nil nil ((990 . 999)) nil (25570 29567 86331 613000) 0 nil])
([nil nil ((999 . 1001)) nil (25570 29567 86330 681000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1000) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) 1001) nil (25570 29567 86329 476000) 0 nil])
([nil nil ((1000 . 1021)) nil (25570 29567 86324 879000) 0 nil])
([nil nil ((1021 . 1031)) nil (25570 29567 86323 894000) 0 nil])
([nil nil ((1031 . 1034)) nil (25570 29567 86322 564000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1022) (undo-tree-id2804 . -1) (#("h" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1023) (undo-tree-id2805 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1024) (undo-tree-id2806 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1025) (undo-tree-id2807 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1026) (undo-tree-id2808 . -1) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1027) (undo-tree-id2809 . -1) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1028) (undo-tree-id2810 . -1) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1029) (undo-tree-id2811 . -1) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1030) (undo-tree-id2812 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1031) (undo-tree-id2813 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1032) (undo-tree-id2814 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1033) (undo-tree-id2815 . -1) 1034) nil (25570 29567 86318 917000) 0 nil])
([nil nil ((1041 . 1043) (1040 . 1042) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1040) (1022 . 1041)) nil (25570 29567 86302 379000) 0 nil])
([nil nil ((1043 . 1048)) nil (25570 29567 86300 632000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1047) (undo-tree-id2803 . -1) 1048) nil (25570 29567 86299 486000) 0 nil])
([nil nil ((1048 . 1049)) nil (25570 29567 86297 132000) 0 nil])
([nil nil ((1049 . 1050)) nil (25570 29567 86296 152000) 0 nil])
([nil nil ((#("ø" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1049) (undo-tree-id2802 . -1) 1050) nil (25570 29567 86295 16000) 0 nil])
([nil nil ((1049 . 1058)) nil (25570 29567 86292 740000) 0 nil])
([nil nil ((1058 . 1062)) nil (25570 29567 86291 394000) 0 nil])
([nil nil ((1062 . 1083)) nil (25570 29567 86290 407000) 0 nil])
([nil nil ((1083 . 1100)) nil (25570 29567 86289 360000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1098) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1099) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) 1100) nil (25570 29567 86287 794000) 0 nil])
([nil nil ((1098 . 1102)) nil (25570 29567 86281 842000) 0 nil])
([nil nil ((#("D" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1099) (undo-tree-id2795 . -1) (#("N" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1100) (undo-tree-id2796 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1101) (undo-tree-id2797 . -1) 1102) nil (25570 29567 86280 121000) 0 nil])
([nil nil ((1099 . 1103)) nil (25570 29567 86275 187000) 0 nil])
([nil nil ((1114 . 1115) (1113 . 1115) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1113) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (1103 . 1114)) nil (25570 29567 86273 711000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1114) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) 1115) nil (25570 29567 86269 54000) 0 nil])
([nil nil ((1114 . 1118)) nil (25570 29567 86254 516000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -1117) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) 1118) nil (25570 29567 86252 29000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing part-side javascript)) . -1120) (#("         " 0 9 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -914) 1118) nil (25570 29567 86227 203000) 0 nil])
([nil nil ((374 . 380) (#("      " 0 6 (part-side javascript)) . 373) (undo-tree-id2919 . -6) (372 . 380) (t 25570 29567 120648 976000)) nil (25570 29672 640974 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 675 . 676) (nil rear-nonsticky t 675 . 676) (nil part-side javascript 675 . 676) (nil part-token comment 675 . 676) (nil font-lock-face web-mode-javascript-comment-face 675 . 676) (nil part-side javascript 667 . 675) (nil part-token comment 667 . 675) (nil font-lock-face web-mode-javascript-comment-face 667 . 675) (nil part-side javascript 666 . 667) (nil part-token comment 666 . 667) (nil font-lock-face web-mode-javascript-comment-face 666 . 667) (nil part-side javascript 665 . 666) (nil part-token comment 665 . 666) (nil font-lock-face web-mode-javascript-comment-face 665 . 666) (nil part-side javascript 662 . 665) (nil part-token comment 662 . 665) (nil font-lock-face web-mode-javascript-comment-face 662 . 665) (nil part-side javascript 661 . 662) (nil part-token comment 661 . 662) (nil font-lock-face web-mode-javascript-comment-face 661 . 662) (nil part-side javascript 660 . 661) (nil part-token comment 660 . 661) (nil font-lock-face web-mode-javascript-comment-face 660 . 661) (nil part-side javascript 653 . 660) (nil part-token comment 653 . 660) (nil font-lock-face web-mode-javascript-comment-face 653 . 660) (nil part-side javascript 652 . 653) (nil part-token comment 652 . 653) (nil font-lock-face web-mode-javascript-comment-face 652 . 653) (nil part-side javascript 645 . 652) (nil part-token comment 645 . 652) (nil font-lock-face web-mode-javascript-comment-face 645 . 652) (nil part-side javascript 635 . 645) (nil part-token comment 635 . 645) (nil font-lock-face web-mode-javascript-comment-face 635 . 645) (nil part-side javascript 630 . 635) (nil part-token comment 630 . 635) (nil font-lock-face web-mode-javascript-comment-face 630 . 635) (nil part-side javascript 621 . 630) (nil part-token comment 621 . 630) (nil font-lock-face web-mode-javascript-comment-face 621 . 630) (nil part-side javascript 616 . 621) (nil part-token comment 616 . 621) (nil font-lock-face web-mode-javascript-comment-face 616 . 621) (nil part-side javascript 613 . 616) (nil part-token comment 613 . 616) (nil font-lock-face web-mode-javascript-comment-face 613 . 616) (nil part-side javascript 597 . 613) (nil part-token comment 597 . 613) (nil font-lock-face web-mode-javascript-comment-face 597 . 613) (nil part-side javascript 595 . 597) (nil part-token comment 595 . 597) (nil font-lock-face web-mode-javascript-comment-face 595 . 597) (nil part-side javascript 588 . 595) (nil part-token comment 588 . 595) (nil font-lock-face web-mode-javascript-comment-face 588 . 595) (nil part-side javascript 587 . 588) (nil part-token comment 587 . 588) (nil font-lock-face web-mode-javascript-comment-face 587 . 588) (nil part-side javascript 581 . 587) (nil part-token comment 581 . 587) (nil font-lock-face web-mode-javascript-comment-face 581 . 587) (nil part-side javascript 580 . 581) (nil part-token comment 580 . 581) (nil font-lock-face web-mode-javascript-comment-face 580 . 581) (nil part-side javascript 577 . 580) (nil part-token comment 577 . 580) (nil font-lock-face web-mode-javascript-comment-face 577 . 580) (nil part-side javascript 576 . 577) (nil part-token comment 576 . 577) (nil font-lock-face web-mode-javascript-comment-face 576 . 577) (nil part-side javascript 573 . 576) (nil part-token comment 573 . 576) (nil font-lock-face web-mode-javascript-comment-face 573 . 576) (nil part-side javascript 572 . 573) (nil part-token comment 572 . 573) (nil font-lock-face web-mode-javascript-comment-face 572 . 573) (nil part-side javascript 569 . 572) (nil part-token comment 569 . 572) (nil font-lock-face web-mode-javascript-comment-face 569 . 572) (nil part-side javascript 562 . 569) (nil part-token comment 562 . 569) (nil font-lock-face web-mode-javascript-comment-face 562 . 569) (nil part-side javascript 556 . 562) (nil part-token comment 556 . 562) (nil font-lock-face web-mode-javascript-comment-face 556 . 562) (nil part-side javascript 553 . 556) (nil part-token comment 553 . 556) (nil font-lock-face web-mode-javascript-comment-face 553 . 556) (nil part-side javascript 538 . 553) (nil part-token comment 538 . 553) (nil font-lock-face web-mode-javascript-comment-face 538 . 553) (nil part-side javascript 536 . 538) (nil part-token comment 536 . 538) (nil font-lock-face web-mode-javascript-comment-face 536 . 538) (nil part-side javascript 529 . 536) (nil part-token comment 529 . 536) (nil font-lock-face web-mode-javascript-comment-face 529 . 536) (nil part-side javascript 528 . 529) (nil part-token comment 528 . 529) (nil font-lock-face web-mode-javascript-comment-face 528 . 529) (nil part-side javascript 520 . 528) (nil part-token comment 520 . 528) (nil font-lock-face web-mode-javascript-comment-face 520 . 528) (nil part-side javascript 519 . 520) (nil part-token comment 519 . 520) (nil font-lock-face web-mode-javascript-comment-face 519 . 520) (nil part-side javascript 516 . 519) (nil part-token comment 516 . 519) (nil font-lock-face web-mode-javascript-comment-face 516 . 519) (nil part-side javascript 509 . 516) (nil part-token comment 509 . 516) (nil font-lock-face web-mode-javascript-comment-face 509 . 516) (nil part-side javascript 504 . 509) (nil part-token comment 504 . 509) (nil font-lock-face web-mode-javascript-comment-face 504 . 509) (nil part-side javascript 497 . 504) (nil part-token comment 497 . 504) (nil font-lock-face web-mode-javascript-comment-face 497 . 504) (nil part-side javascript 490 . 497) (nil part-token comment 490 . 497) (nil font-lock-face web-mode-javascript-comment-face 490 . 497) (nil part-side javascript 487 . 490) (nil part-token comment 487 . 490) (nil font-lock-face web-mode-javascript-comment-face 487 . 490) (nil part-side javascript 472 . 487) (nil part-token comment 472 . 487) (nil font-lock-face web-mode-javascript-comment-face 472 . 487) (nil part-side javascript 471 . 472) (nil part-token comment 471 . 472) (nil font-lock-face web-mode-javascript-comment-face 471 . 472) (nil part-side javascript 470 . 471) (nil part-token comment 470 . 471) (nil font-lock-face web-mode-javascript-comment-face 470 . 471) (nil part-side javascript 462 . 470) (nil part-token comment 462 . 470) (nil font-lock-face web-mode-javascript-comment-face 462 . 470) (nil part-side javascript 461 . 462) (nil part-token comment 461 . 462) (nil font-lock-face web-mode-javascript-comment-face 461 . 462) (nil part-side javascript 443 . 461) (nil part-token comment 443 . 461) (nil font-lock-face web-mode-javascript-comment-face 443 . 461) (nil part-side javascript 433 . 443) (nil part-token comment 433 . 443) (nil font-lock-face web-mode-javascript-comment-face 433 . 443) (nil part-side javascript 431 . 433) (nil part-token comment 431 . 433) (nil font-lock-face web-mode-javascript-comment-face 431 . 433) (nil part-side javascript 405 . 431) (nil part-token comment 405 . 431) (nil font-lock-face web-mode-javascript-comment-face 405 . 431) (nil part-side javascript 403 . 405) (nil part-token comment 403 . 405) (nil font-lock-face web-mode-javascript-comment-face 403 . 405) (nil part-side javascript 380 . 403) (nil part-token comment 380 . 403) (nil font-lock-face web-mode-javascript-comment-face 380 . 403) (nil part-side javascript 379 . 380) (nil part-token comment 379 . 380) (nil syntax-table (11) 379 . 380) (nil font-lock-face web-mode-javascript-comment-face 379 . 380) (nil part-side javascript 373 . 379) (373 . 676)) nil (25570 29672 640962 963000) 0 nil])
([nil nil ((#("Restores object refs in filter, refs used solely in frontend
         Recursive function

         filter -- filter object that should be restored (object)
         parent -- Given parent to set for filter (object)
         rulepos -- Rule position when restoring AND/OR filters (int)" 0 21 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 21 23 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 23 49 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 49 51 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 51 80 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 80 88 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 88 138 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 138 146 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 146 191 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 191 194 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 194 195 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 195 198 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 198 199 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 199 205 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 205 271 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 271 278 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 278 284 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 382) (undo-tree-id2915 . -284) (undo-tree-id2916 . -61) (undo-tree-id2917 . -88) (undo-tree-id2918 . -284)) nil (25570 29672 640925 484000) 0 nil])
([nil nil ((382 . 389)) nil (25570 29672 640920 165000) 0 nil])
([nil nil ((389 . 392)) nil (25570 29672 640919 178000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -390) (undo-tree-id2913 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -391) (undo-tree-id2914 . -1) 392) nil (25570 29672 640917 913000) 0 nil])
([nil nil ((390 . 394)) nil (25570 29672 640914 532000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -389) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -390) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (#("w" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -391) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -392) (undo-tree-id2911 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -393) (undo-tree-id2912 . -1) 394) nil (25570 29672 640912 347000) 0 nil])
([nil nil ((389 . 410)) nil (25570 29672 640901 629000) 0 nil])
([nil nil ((410 . 417)) nil (25570 29672 640900 722000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 417) (undo-tree-id2903 . -1) (undo-tree-id2904 . 1)) nil (25570 29672 640898 613000) 0 nil])
([nil nil ((93 . 100)) nil (25570 29672 640893 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 139 . 140) (nil rear-nonsticky t 139 . 140) (nil part-side javascript 139 . 140) (nil part-token comment 139 . 140) (nil font-lock-face web-mode-javascript-comment-face 139 . 140) (nil part-side javascript 138 . 139) (nil part-token comment 138 . 139) (nil font-lock-face web-mode-javascript-comment-face 138 . 139) (nil part-side javascript 137 . 138) (nil part-token comment 137 . 138) (nil font-lock-face web-mode-javascript-comment-face 137 . 138) (nil part-side javascript 130 . 137) (nil part-token comment 130 . 137) (nil font-lock-face web-mode-javascript-comment-face 130 . 137) (nil part-side javascript 123 . 130) (nil part-token comment 123 . 130) (nil font-lock-face web-mode-javascript-comment-face 123 . 130) (nil part-side javascript 121 . 123) (nil part-token comment 121 . 123) (nil font-lock-face web-mode-javascript-comment-face 121 . 123) (nil part-side javascript 118 . 121) (nil part-token comment 118 . 121) (nil font-lock-face web-mode-javascript-comment-face 118 . 121) (nil part-side javascript 109 . 118) (nil part-token comment 109 . 118) (nil font-lock-face web-mode-javascript-comment-face 109 . 118) (nil part-side javascript 101 . 109) (nil part-token comment 101 . 109) (nil font-lock-face web-mode-javascript-comment-face 101 . 109) (nil part-side javascript 100 . 101) (nil part-token comment 100 . 101) (nil syntax-table (11) 100 . 101) (nil font-lock-face web-mode-javascript-comment-face 100 . 101) (100 . 140)) nil (25570 29672 640891 187000) 0 nil])
([nil nil ((140 . 147)) nil (25570 29672 640882 569000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("l" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("i" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("x" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("f" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110)) nil (25570 29672 640878 387000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("c" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("j" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("b" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110) (#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 110)) nil (25570 29672 640872 453000) 0 nil])
([nil nil ((110 . 113)) nil (25570 29672 640870 384000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -110) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -111) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -112) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) 113) nil (25570 29672 640868 590000) 0 nil])
([nil nil ((110 . 113)) nil (25570 29672 640860 176000) 0 nil])
([nil nil ((#("P" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -103) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -104) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -105) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -106) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -107) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -108) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -109) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (#("p" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -110) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (#("a" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -111) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -112) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) 113) nil (25570 29672 640856 94000) 0 nil])
([nil nil ((103 . 124)) nil (25570 29672 640821 459000) 0 nil])
([nil nil ((124 . 132)) nil (25570 29672 640820 390000) 0 nil])
([nil nil ((132 . 147)) nil (25570 29672 640819 442000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -143) (undo-tree-id2864 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -144) (undo-tree-id2865 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -145) (undo-tree-id2866 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -146) (undo-tree-id2867 . -1) 147) nil (25570 29672 640817 205000) 0 nil])
([nil nil ((143 . 149)) nil (25570 29672 640811 143000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -148) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) 149) nil (25570 29672 640809 779000) 0 nil])
([nil nil ((148 . 169)) nil (25570 29672 640806 192000) 0 nil])
([nil nil ((169 . 177)) nil (25570 29672 640805 186000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -172) (undo-tree-id2857 . -1) (#("e" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -173) (undo-tree-id2858 . -1) (#("n" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -174) (undo-tree-id2859 . -1) (#("d" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -175) (undo-tree-id2860 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -176) (undo-tree-id2861 . -1) 177) nil (25570 29672 640803 19000) 0 nil])
([nil nil ((172 . 176)) nil (25570 29672 640795 176000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -175) (undo-tree-id2856 . -1) 176) nil (25570 29672 640793 998000) 0 nil])
([nil nil ((175 . 177)) nil (25570 29672 640791 760000) 0 nil])
([nil nil ((178 . 184) 177) nil (25570 29672 640790 700000) 0 nil])
([nil nil ((184 . 185)) nil (25570 29672 640789 473000) 0 nil])
([nil nil ((177 . 186) (#("       " 0 7 (face whitespace-trailing font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 177)) nil (25570 29672 640788 358000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . 186) (undo-tree-id2854 . -1) (undo-tree-id2855 . 1)) nil (25570 29672 640786 726000) 0 nil])
([nil nil ((#("  " 0 2 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -184) (undo-tree-id2853 . -2) 186) nil (25570 29672 640783 242000) 0 nil])
([nil nil ((176 . 177)) nil (25570 29672 640780 891000) 0 nil])
([nil nil ((177 . 186)) nil (25570 29672 640779 823000) 0 nil])
([nil nil ((186 . 194)) nil (25570 29672 640778 768000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -193) (undo-tree-id2852 . -1) 194) nil (25570 29672 640777 475000) 0 nil])
([nil nil ((193 . 201)) nil (25570 29672 640775 55000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -199) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (#("m" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -200) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) 201) nil (25570 29672 640773 276000) 0 nil])
([nil nil ((199 . 204)) nil (25570 29672 640767 261000) 0 nil])
([nil nil ((217 . 224) (216 . 218) (#("(" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -216) (204 . 217)) nil (25570 29672 640765 825000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -223) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) 224) nil (25570 29672 640762 244000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -562) (#("      " 0 6 (face whitespace-trailing part-side javascript)) . -235) 223) nil (25570 29672 640740 64000) 0 nil])
([nil nil ((#(">" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -191) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) 192 (t 25570 29672 676755 314000)) nil (25570 29677 193322 174000) 0 nil])
([nil nil ((191 . 192)) nil (25570 29677 193281 2000) 0 nil])
([nil nil ((4840 . 4846) (#("      " 0 6 (part-side javascript)) . 4839) (undo-tree-id10 . -6) (4838 . 4846) (t 25570 29677 224760 42000)) nil (25571 27142 905410 434000) 0 nil])
([nil nil ((4846 . 4855)) nil (25571 27142 905407 935000) 0 nil])
([nil nil ((4849 . 4864) (#("checkF" 0 6 (part-side javascript)) . -4849) (undo-tree-id8 . -6) (undo-tree-id9 . -6) 4855) nil (25571 27142 905406 256000) 0 nil])
([nil nil ((4865 . 4867) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -4865) (4864 . 4866)) nil (25571 27142 905402 554000) 0 nil])
([nil nil ((4868 . 4874) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 4867) (undo-tree-id6 . 8) (4867 . 4875) (#("      " 0 6 (part-side javascript)) . 4867) (undo-tree-id7 . -6) (4866 . 4874)) nil (25571 27142 905400 589000) 0 nil])
([nil nil ((4849 . 4850)) nil (25571 27142 905396 456000) 0 nil])
([nil nil ((4868 . 4876)) nil (25571 27142 905395 547000) 0 nil])
([nil nil ((4876 . 4883)) nil (25571 27142 905394 713000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4882) (undo-tree-id5 . -1) 4883) nil (25571 27142 905393 635000) 0 nil])
([nil nil ((4882 . 4884)) nil (25571 27142 905391 530000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4883) (undo-tree-id4 . -1) 4884) nil (25571 27142 905390 408000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -4849) (undo-tree-id3 . -1) 4850) nil (25571 27142 905387 827000) 0 nil])
([nil nil ((4849 . 4851) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -4849) (4849 . 4850)) nil (25571 27142 905384 931000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 4850)) nil (25571 27142 905382 792000) 0 nil])
([nil nil ((4867 . 4868) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 4867) (undo-tree-id0 . -1) (4866 . 4867) (4865 . 4867) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -4865) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (4865 . 4866)) nil (25571 27142 905377 882000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -4885) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 4886 (t 25571 27142 936543 351000)) nil (25571 27148 327728 789000) 0 nil])
([nil nil ((4850 . 4855) (t 25571 27148 356519 343000)) nil (25571 27154 881396 266000) 0 nil])
([nil nil ((#("ref " 0 4 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 5174) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (t 25571 27154 908490 321000)) nil (25571 27737 272905 31000) 0 nil])
([nil nil ((5190 . 5196)) nil (25571 27737 272897 778000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -5195) (undo-tree-id23 . -1) 5196) nil (25571 27737 272892 433000) 0 nil])
([nil nil ((9956 . 9962) (#("      " 0 6 (part-side javascript)) . 9955) (undo-tree-id43 . -6) (9954 . 9962) (t 25571 27737 301910 899000)) nil (25571 38429 700448 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10019 . 10020) (nil part-side javascript 10019 . 10020) (nil face (rainbow-delimiters-depth-4-face) 10019 . 10020) (nil part-side javascript 10012 . 10019) (nil part-side javascript 10006 . 10012) (nil face web-mode-keyword-face 10006 . 10012) (nil part-side javascript 9998 . 10006) (nil part-side javascript 9997 . 9998) (nil part-side javascript 9996 . 9997) (nil face (rainbow-delimiters-depth-4-face) 9996 . 9997) (nil part-side javascript 9995 . 9996) (nil part-side javascript 9994 . 9995) (nil face (rainbow-delimiters-depth-4-face) 9994 . 9995) (nil part-side javascript 9993 . 9994) (nil face (rainbow-delimiters-depth-5-face) 9993 . 9994) (nil part-side javascript 9992 . 9993) (nil face (rainbow-delimiters-depth-5-face) 9992 . 9993) (nil part-side javascript 9977 . 9992) (nil face web-mode-function-call-face 9977 . 9992) (nil part-side javascript 9976 . 9977) (nil part-side javascript 9972 . 9976) (nil face web-mode-constant-face 9972 . 9976) (nil part-side javascript 9971 . 9972) (nil face (rainbow-delimiters-depth-4-face) 9971 . 9972) (nil part-side javascript 9970 . 9971) (nil part-side javascript 9968 . 9970) (nil face web-mode-keyword-face 9968 . 9970) (nil part-side javascript 9962 . 9968) (9962 . 10020)) nil (25571 38429 700444 86000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -9962) (undo-tree-id42 . -1) 9963) nil (25571 38429 700437 338000) 0 nil])
([nil nil ((4366 . 4370) (#("    " 0 4 (part-side javascript)) . 4365) (undo-tree-id41 . -4) (4364 . 4370)) nil (25571 38429 700435 12000) 0 nil])
([nil nil ((4365 . 4366)) nil (25571 38429 700432 797000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -4365) (undo-tree-id40 . -1) 4366) nil (25571 38429 700431 605000) 0 nil])
([nil nil ((4365 . 4369)) nil (25571 38429 700429 560000) 0 nil])
([nil nil ((4369 . 4373)) nil (25571 38429 700428 684000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -4372) (undo-tree-id39 . -1) 4373) nil (25571 38429 700427 682000) 0 nil])
([nil nil ((4372 . 4373)) nil (25571 38429 700425 582000) 0 nil])
([nil nil ((#("A" 0 1 (part-side javascript)) . -4372) (undo-tree-id38 . -1) 4373) nil (25571 38429 700424 519000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 4390) (4389 . 4390) (4388 . 4390) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -4388) (4372 . 4389)) nil (25571 38429 700422 69000) 0 nil])
([nil nil ((4391 . 4393) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -4391) (4390 . 4392)) nil (25571 38429 700420 143000) 0 nil])
([nil nil ((4394 . 4398) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 4393) (undo-tree-id36 . -4) (undo-tree-id37 . 6) (4397 . 4399) (4392 . 4398)) nil (25571 38429 700418 458000) 0 nil])
([nil nil ((4399 . 4400)) nil (25571 38429 700414 898000) 0 nil])
([nil nil ((4389 . 4400)) nil (25571 38429 700413 919000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -4399) (undo-tree-id35 . -1) 4400) nil (25571 38429 700412 693000) 0 nil])
([nil nil ((4399 . 4401)) nil (25571 38429 700410 514000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -4399) (undo-tree-id33 . -1) (#("=" 0 1 (part-side javascript)) . -4400) (undo-tree-id34 . -1) 4401) nil (25571 38429 700409 298000) 0 nil])
([nil nil ((4399 . 4400)) nil (25571 38429 700405 748000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -4399) (undo-tree-id32 . -1) 4400) nil (25571 38429 700404 598000) 0 nil])
([nil nil ((4399 . 4400)) nil (25571 38429 700402 465000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -4399) (undo-tree-id31 . -1) 4400) nil (25571 38429 700401 323000) 0 nil])
([nil nil ((4399 . 4405)) nil (25571 38429 700398 738000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4404) (undo-tree-id30 . -1) 4405) nil (25571 38429 700397 564000) 0 nil])
([nil nil ((4404 . 4406)) nil (25571 38429 700394 805000) 0 nil])
([nil nil ((4406 . 4411)) nil (25571 38429 700393 590000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 4422) (undo-tree-id29 . -1)) nil (25571 38429 700391 658000) 0 nil])
([nil nil ((#("    " 0 4 (part-side javascript face whitespace-trailing)) . -4422) (undo-tree-id28 . -4) 4415) nil (25571 38429 700384 927000) 0 nil])
([nil nil ((#("repla" 0 5 (part-side javascript)) . 4406) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -3) (undo-tree-id173 . -5) (t 25571 38429 728328 585000)) nil (25571 39019 924729 115000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4399) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("=" 0 1 (part-side javascript)) . -4400) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#(" " 0 1 (part-side javascript)) . -4401) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -4402) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -4403) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("," 0 1 (part-side javascript)) . -4404) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#(" " 0 1 (part-side javascript)) . -4405) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 4406) nil (25571 39019 924721 443000) 0 nil])
([nil nil ((4389 . 4410)) nil (25571 39019 924685 504000) 0 nil])
([nil nil ((4410 . 4411)) nil (25571 39019 924684 584000) 0 nil])
([nil nil ((#("m" 0 1 (part-side javascript)) . -4410) (undo-tree-id141 . -1) 4411) nil (25571 39019 924683 483000) 0 nil])
([nil nil ((4410 . 4411)) nil (25571 39019 924681 288000) 0 nil])
([nil nil ((4426 . 4432) (#("      " 0 6 (part-side javascript)) . 4425) (undo-tree-id140 . -6) (4424 . 4432)) nil (25571 39019 924680 112000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4489 . 4490) (nil part-side javascript 4489 . 4490) (nil face (rainbow-delimiters-depth-4-face) 4489 . 4490) (nil part-side javascript 4482 . 4489) (nil part-side javascript 4476 . 4482) (nil face web-mode-keyword-face 4476 . 4482) (nil part-side javascript 4468 . 4476) (nil part-side javascript 4467 . 4468) (nil part-side javascript 4466 . 4467) (nil face (rainbow-delimiters-depth-4-face) 4466 . 4467) (nil part-side javascript 4465 . 4466) (nil part-side javascript 4464 . 4465) (nil face (rainbow-delimiters-depth-4-face) 4464 . 4465) (nil part-side javascript 4463 . 4464) (nil face (rainbow-delimiters-depth-5-face) 4463 . 4464) (nil part-side javascript 4462 . 4463) (nil face (rainbow-delimiters-depth-5-face) 4462 . 4463) (nil part-side javascript 4447 . 4462) (nil face web-mode-function-call-face 4447 . 4462) (nil part-side javascript 4446 . 4447) (nil part-side javascript 4442 . 4446) (nil face web-mode-constant-face 4442 . 4446) (nil part-side javascript 4441 . 4442) (nil face (rainbow-delimiters-depth-4-face) 4441 . 4442) (nil part-side javascript 4440 . 4441) (nil part-side javascript 4438 . 4440) (nil face web-mode-keyword-face 4438 . 4440) (nil part-side javascript 4432 . 4438) (4432 . 4490)) nil (25571 39019 924676 401000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -4432) 4441) nil (25571 39019 924669 187000) 0 nil])
([nil nil ((4436 . 4437)) nil (25571 39019 924668 83000) 0 nil])
([nil nil ((4487 . 4493) (#("      " 0 6 (part-side javascript)) . 4486) (undo-tree-id139 . -6) (4485 . 4493)) nil (25571 39019 924666 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4849 . 4850) (nil part-side javascript 4833 . 4850) (nil part-side javascript 4829 . 4833) (nil face web-mode-constant-face 4829 . 4833) (nil part-side javascript 4826 . 4829) (nil part-side javascript 4825 . 4826) (nil face (rainbow-delimiters-depth-4-face) 4825 . 4826) (nil part-side javascript 4802 . 4825) (nil part-side javascript 4796 . 4802) (nil face web-mode-variable-name-face 4796 . 4802) (nil part-side javascript 4795 . 4796) (nil face (rainbow-delimiters-depth-4-face) 4795 . 4796) (nil part-side javascript 4794 . 4795) (nil part-side javascript 4789 . 4794) (nil face web-mode-keyword-face 4789 . 4794) (nil part-side javascript 4783 . 4789) (nil part-side javascript 4782 . 4783) (nil syntax-table (12) 4782 . 4783) (nil part-side javascript 4777 . 4782) (nil part-token comment 4777 . 4782) (nil font-lock-face web-mode-javascript-comment-face 4777 . 4782) (nil part-side javascript 4760 . 4777) (nil part-token comment 4760 . 4777) (nil font-lock-face web-mode-javascript-comment-face 4760 . 4777) (nil part-side javascript 4758 . 4760) (nil part-token comment 4758 . 4760) (nil font-lock-face web-mode-javascript-comment-face 4758 . 4760) (nil part-side javascript 4749 . 4758) (nil part-token comment 4749 . 4758) (nil font-lock-face web-mode-javascript-comment-face 4749 . 4758) (nil part-side javascript 4745 . 4749) (nil part-token comment 4745 . 4749) (nil font-lock-face web-mode-javascript-comment-face 4745 . 4749) (nil part-side javascript 4694 . 4745) (nil part-token comment 4694 . 4745) (nil font-lock-face web-mode-javascript-comment-face 4694 . 4745) (nil part-side javascript 4693 . 4694) (nil part-token comment 4693 . 4694) (nil syntax-table (11) 4693 . 4694) (nil font-lock-face web-mode-javascript-comment-face 4693 . 4694) (nil part-side javascript 4669 . 4693) (nil part-side javascript 4665 . 4669) (nil face web-mode-constant-face 4665 . 4669) (nil part-side javascript 4662 . 4665) (nil part-side javascript 4649 . 4662) (nil face web-mode-variable-name-face 4649 . 4662) (nil part-side javascript 4648 . 4649) (nil part-side javascript 4643 . 4648) (nil face web-mode-keyword-face 4643 . 4648) (nil part-side javascript 4610 . 4643) (nil part-side javascript 4606 . 4610) (nil face web-mode-constant-face 4606 . 4610) (nil part-side javascript 4603 . 4606) (nil part-side javascript 4592 . 4603) (nil face web-mode-variable-name-face 4592 . 4603) (nil part-side javascript 4591 . 4592) (nil part-side javascript 4586 . 4591) (nil face web-mode-keyword-face 4586 . 4591) (nil part-side javascript 4567 . 4586) (nil part-side javascript 4563 . 4567) (nil face web-mode-constant-face 4563 . 4567) (nil part-side javascript 4560 . 4563) (nil part-side javascript 4548 . 4560) (nil face web-mode-variable-name-face 4548 . 4560) (nil part-side javascript 4547 . 4548) (nil part-side javascript 4542 . 4547) (nil face web-mode-keyword-face 4542 . 4547) (nil part-side javascript 4513 . 4542) (nil part-side javascript 4509 . 4513) (nil face web-mode-constant-face 4509 . 4513) (nil part-side javascript 4506 . 4509) (nil part-side javascript 4499 . 4506) (nil face web-mode-variable-name-face 4499 . 4506) (nil part-side javascript 4498 . 4499) (nil part-side javascript 4493 . 4498) (nil face web-mode-keyword-face 4493 . 4498) (4493 . 4850)) nil (25571 39019 924660 740000) 0 nil])
([nil nil ((4852 . 4858) (#("      " 0 6 (part-side javascript)) . 4851) (undo-tree-id138 . -6) (4850 . 4858)) nil (25571 39019 924643 774000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5830 . 5831) (nil part-side javascript 5811 . 5831) (nil part-side javascript 5805 . 5811) (nil face web-mode-keyword-face 5805 . 5811) (nil part-side javascript 5770 . 5805) (nil part-side javascript 5764 . 5770) (nil face web-mode-keyword-face 5764 . 5770) (nil part-side javascript 5732 . 5764) (nil part-side javascript 5726 . 5732) (nil face web-mode-keyword-face 5726 . 5732) (nil part-side javascript 5696 . 5726) (nil part-side javascript 5690 . 5696) (nil face web-mode-keyword-face 5690 . 5696) (nil part-side javascript 5661 . 5690) (nil part-side javascript 5655 . 5661) (nil face web-mode-keyword-face 5655 . 5661) (nil part-side javascript 5649 . 5655) (nil part-side javascript 5648 . 5649) (nil syntax-table (12) 5648 . 5649) (nil part-side javascript 5641 . 5648) (nil part-token comment 5641 . 5648) (nil font-lock-face web-mode-javascript-comment-face 5641 . 5648) (nil part-side javascript 5637 . 5641) (nil part-token comment 5637 . 5641) (nil font-lock-face web-mode-javascript-comment-face 5637 . 5641) (nil part-side javascript 5600 . 5637) (nil part-token comment 5600 . 5637) (nil font-lock-face web-mode-javascript-comment-face 5600 . 5637) (nil part-side javascript 5599 . 5600) (nil part-token comment 5599 . 5600) (nil syntax-table (11) 5599 . 5600) (nil font-lock-face web-mode-javascript-comment-face 5599 . 5600) (nil part-side javascript 5580 . 5599) (nil part-side javascript 5574 . 5580) (nil face web-mode-keyword-face 5574 . 5580) (nil part-side javascript 5568 . 5574) (nil part-side javascript 5567 . 5568) (nil syntax-table (12) 5567 . 5568) (nil part-side javascript 5558 . 5567) (nil part-token comment 5558 . 5567) (nil font-lock-face web-mode-javascript-comment-face 5558 . 5567) (nil part-side javascript 5553 . 5558) (nil part-token comment 5553 . 5558) (nil font-lock-face web-mode-javascript-comment-face 5553 . 5558) (nil part-side javascript 5534 . 5553) (nil part-token comment 5534 . 5553) (nil font-lock-face web-mode-javascript-comment-face 5534 . 5553) (nil part-side javascript 5533 . 5534) (nil part-token comment 5533 . 5534) (nil syntax-table (11) 5533 . 5534) (nil font-lock-face web-mode-javascript-comment-face 5533 . 5534) (nil part-side javascript 5513 . 5533) (nil part-side javascript 5507 . 5513) (nil face web-mode-keyword-face 5507 . 5513) (nil part-side javascript 5501 . 5507) (nil part-side javascript 5500 . 5501) (nil syntax-table (12) 5500 . 5501) (nil part-side javascript 5491 . 5500) (nil part-token comment 5491 . 5500) (nil font-lock-face web-mode-javascript-comment-face 5491 . 5500) (nil part-side javascript 5486 . 5491) (nil part-token comment 5486 . 5491) (nil font-lock-face web-mode-javascript-comment-face 5486 . 5491) (nil part-side javascript 5472 . 5486) (nil part-token comment 5472 . 5486) (nil font-lock-face web-mode-javascript-comment-face 5472 . 5486) (nil part-side javascript 5471 . 5472) (nil part-token comment 5471 . 5472) (nil syntax-table (11) 5471 . 5472) (nil font-lock-face web-mode-javascript-comment-face 5471 . 5472) (nil part-side javascript 5450 . 5471) (nil part-side javascript 5444 . 5450) (nil face web-mode-keyword-face 5444 . 5450) (nil part-side javascript 5438 . 5444) (nil part-side javascript 5437 . 5438) (nil syntax-table (12) 5437 . 5438) (nil part-side javascript 5430 . 5437) (nil part-token comment 5430 . 5437) (nil font-lock-face web-mode-javascript-comment-face 5430 . 5437) (nil part-side javascript 5424 . 5430) (nil part-token comment 5424 . 5430) (nil font-lock-face web-mode-javascript-comment-face 5424 . 5430) (nil part-side javascript 5389 . 5424) (nil part-token comment 5389 . 5424) (nil font-lock-face web-mode-javascript-comment-face 5389 . 5424) (nil part-side javascript 5388 . 5389) (nil part-token comment 5388 . 5389) (nil syntax-table (11) 5388 . 5389) (nil font-lock-face web-mode-javascript-comment-face 5388 . 5389) (nil part-side javascript 5368 . 5388) (nil part-side javascript 5362 . 5368) (nil face web-mode-keyword-face 5362 . 5368) (nil part-side javascript 5356 . 5362) (nil part-side javascript 5355 . 5356) (nil syntax-table (12) 5355 . 5356) (nil part-side javascript 5336 . 5355) (nil part-token comment 5336 . 5355) (nil font-lock-face web-mode-javascript-comment-face 5336 . 5355) (nil part-side javascript 5330 . 5336) (nil part-token comment 5330 . 5336) (nil font-lock-face web-mode-javascript-comment-face 5330 . 5336) (nil part-side javascript 5319 . 5330) (nil part-token comment 5319 . 5330) (nil font-lock-face web-mode-javascript-comment-face 5319 . 5330) (nil part-side javascript 5317 . 5319) (nil part-token comment 5317 . 5319) (nil font-lock-face web-mode-javascript-comment-face 5317 . 5319) (nil part-side javascript 5303 . 5317) (nil part-token comment 5303 . 5317) (nil font-lock-face web-mode-javascript-comment-face 5303 . 5317) (nil part-side javascript 5301 . 5303) (nil part-token comment 5301 . 5303) (nil font-lock-face web-mode-javascript-comment-face 5301 . 5303) (nil part-side javascript 5294 . 5301) (nil part-token comment 5294 . 5301) (nil font-lock-face web-mode-javascript-comment-face 5294 . 5301) (nil part-side javascript 5293 . 5294) (nil part-token comment 5293 . 5294) (nil syntax-table (11) 5293 . 5294) (nil font-lock-face web-mode-javascript-comment-face 5293 . 5294) (nil part-side javascript 5272 . 5293) (nil part-side javascript 5266 . 5272) (nil face web-mode-keyword-face 5266 . 5272) (nil part-side javascript 5260 . 5266) (nil part-side javascript 5259 . 5260) (nil syntax-table (12) 5259 . 5260) (nil part-side javascript 5250 . 5259) (nil part-token comment 5250 . 5259) (nil font-lock-face web-mode-javascript-comment-face 5250 . 5259) (nil part-side javascript 5247 . 5250) (nil part-token comment 5247 . 5250) (nil font-lock-face web-mode-javascript-comment-face 5247 . 5250) (nil part-side javascript 5237 . 5247) (nil part-token comment 5237 . 5247) (nil font-lock-face web-mode-javascript-comment-face 5237 . 5247) (nil part-side javascript 5233 . 5237) (nil part-token comment 5233 . 5237) (nil font-lock-face web-mode-javascript-comment-face 5233 . 5237) (nil part-side javascript 5225 . 5233) (nil part-token comment 5225 . 5233) (nil font-lock-face web-mode-javascript-comment-face 5225 . 5233) (nil part-side javascript 5223 . 5225) (nil part-token comment 5223 . 5225) (nil font-lock-face web-mode-javascript-comment-face 5223 . 5225) (nil part-side javascript 5207 . 5223) (nil part-token comment 5207 . 5223) (nil font-lock-face web-mode-javascript-comment-face 5207 . 5223) (nil part-side javascript 5206 . 5207) (nil part-token comment 5206 . 5207) (nil syntax-table (11) 5206 . 5207) (nil font-lock-face web-mode-javascript-comment-face 5206 . 5207) (nil part-side javascript 5186 . 5206) (nil part-side javascript 5180 . 5186) (nil face web-mode-keyword-face 5180 . 5186) (nil part-side javascript 5174 . 5180) (nil part-side javascript 5173 . 5174) (nil syntax-table (12) 5173 . 5174) (nil part-side javascript 5153 . 5173) (nil part-token comment 5153 . 5173) (nil font-lock-face web-mode-javascript-comment-face 5153 . 5173) (nil part-side javascript 5146 . 5153) (nil part-token comment 5146 . 5153) (nil font-lock-face web-mode-javascript-comment-face 5146 . 5153) (nil part-side javascript 5134 . 5146) (nil part-token comment 5134 . 5146) (nil font-lock-face web-mode-javascript-comment-face 5134 . 5146) (nil part-side javascript 5132 . 5134) (nil part-token comment 5132 . 5134) (nil font-lock-face web-mode-javascript-comment-face 5132 . 5134) (nil part-side javascript 5119 . 5132) (nil part-token comment 5119 . 5132) (nil font-lock-face web-mode-javascript-comment-face 5119 . 5132) (nil part-side javascript 5118 . 5119) (nil part-token comment 5118 . 5119) (nil syntax-table (11) 5118 . 5119) (nil font-lock-face web-mode-javascript-comment-face 5118 . 5119) (nil part-side javascript 5097 . 5118) (nil part-side javascript 5091 . 5097) (nil face web-mode-keyword-face 5091 . 5097) (nil part-side javascript 5085 . 5091) (nil part-side javascript 5084 . 5085) (nil syntax-table (12) 5084 . 5085) (nil part-side javascript 5075 . 5084) (nil part-token comment 5075 . 5084) (nil font-lock-face web-mode-javascript-comment-face 5075 . 5084) (nil part-side javascript 5068 . 5075) (nil part-token comment 5068 . 5075) (nil font-lock-face web-mode-javascript-comment-face 5068 . 5075) (nil part-side javascript 5056 . 5068) (nil part-token comment 5056 . 5068) (nil font-lock-face web-mode-javascript-comment-face 5056 . 5068) (nil part-side javascript 5054 . 5056) (nil part-token comment 5054 . 5056) (nil font-lock-face web-mode-javascript-comment-face 5054 . 5056) (nil part-side javascript 5038 . 5054) (nil part-token comment 5038 . 5054) (nil font-lock-face web-mode-javascript-comment-face 5038 . 5054) (nil part-side javascript 5037 . 5038) (nil part-token comment 5037 . 5038) (nil syntax-table (11) 5037 . 5038) (nil font-lock-face web-mode-javascript-comment-face 5037 . 5038) (nil part-side javascript 5013 . 5037) (nil part-side javascript 5007 . 5013) (nil face web-mode-keyword-face 5007 . 5013) (nil part-side javascript 5001 . 5007) (nil part-side javascript 5000 . 5001) (nil syntax-table (12) 5000 . 5001) (nil part-side javascript 4991 . 5000) (nil part-token comment 4991 . 5000) (nil font-lock-face web-mode-javascript-comment-face 4991 . 5000) (nil part-side javascript 4984 . 4991) (nil part-token comment 4984 . 4991) (nil font-lock-face web-mode-javascript-comment-face 4984 . 4991) (nil part-side javascript 4972 . 4984) (nil part-token comment 4972 . 4984) (nil font-lock-face web-mode-javascript-comment-face 4972 . 4984) (nil part-side javascript 4970 . 4972) (nil part-token comment 4970 . 4972) (nil font-lock-face web-mode-javascript-comment-face 4970 . 4972) (nil part-side javascript 4950 . 4970) (nil part-token comment 4950 . 4970) (nil font-lock-face web-mode-javascript-comment-face 4950 . 4970) (nil part-side javascript 4949 . 4950) (nil part-token comment 4949 . 4950) (nil syntax-table (11) 4949 . 4950) (nil font-lock-face web-mode-javascript-comment-face 4949 . 4950) (nil part-side javascript 4928 . 4949) (nil part-side javascript 4922 . 4928) (nil face web-mode-keyword-face 4922 . 4928) (nil part-side javascript 4916 . 4922) (nil part-side javascript 4915 . 4916) (nil syntax-table (12) 4915 . 4916) (nil part-side javascript 4906 . 4915) (nil part-token comment 4906 . 4915) (nil font-lock-face web-mode-javascript-comment-face 4906 . 4915) (nil part-side javascript 4900 . 4906) (nil part-token comment 4900 . 4906) (nil font-lock-face web-mode-javascript-comment-face 4900 . 4906) (nil part-side javascript 4899 . 4900) (nil part-token comment 4899 . 4900) (nil font-lock-face web-mode-javascript-comment-face 4899 . 4900) (nil part-side javascript 4897 . 4899) (nil part-token comment 4897 . 4899) (nil font-lock-face web-mode-javascript-comment-face 4897 . 4899) (nil part-side javascript 4896 . 4897) (nil part-token comment 4896 . 4897) (nil font-lock-face web-mode-javascript-comment-face 4896 . 4897) (nil part-side javascript 4892 . 4896) (nil part-token comment 4892 . 4896) (nil font-lock-face web-mode-javascript-comment-face 4892 . 4896) (nil part-side javascript 4890 . 4892) (nil part-token comment 4890 . 4892) (nil font-lock-face web-mode-javascript-comment-face 4890 . 4892) (nil part-side javascript 4889 . 4890) (nil part-token comment 4889 . 4890) (nil syntax-table (11) 4889 . 4890) (nil font-lock-face web-mode-javascript-comment-face 4889 . 4890) (nil part-side javascript 4864 . 4889) (nil part-side javascript 4858 . 4864) (nil face web-mode-keyword-face 4858 . 4864) (4858 . 5831)) nil (25571 39019 924628 807000) 0 nil])
([nil nil ((#("    addaggrtofilterlist(replacecurrentfilter, filtertype) {

      if (!this.checkFilterType()) {
        return
      }

      const cursorX = this.$refs.conntab.cursorX
      const currentindex = this.current_log
      const cursorvalue = this.$refs.conntab.cursorvalue
      const currentfilter = this.currentsubfilter
      // Copy reference to object but without the parent, else we fall in circle reference hell
      const {parent: _, ...cfilternoparent} = this.currentsubfilter

      delete currentfilter.condition // type of filter (string)
      delete currentfilter.field // string field used in comparison filters (string)
      delete currentfilter.operator // operator used in comparison filters (string)
      delete currentfilter.value // value used in comparison filters (string or numeric)
      delete currentfilter.rule // child obj ref if filter type only has one (Object)
      delete currentfilter.rules // list of two children if AND or OR filter ([Object, Object])
      delete currentfilter.aggr // whether filter is an aggregation filter (bool)
      delete currentfilter.query // aggregation query (object)
      delete currentfilter.sort // aggregation sort query (object)
      delete currentfilter.asc // whether aggregation sort is asc or desc (bool)
      delete currentfilter.subtype
      delete currentfilter.subcount
      delete currentfilter.matchfield
      delete currentfilter.submatchfield
      delete currentfilter.empty

    }," 0 4 (part-side javascript) 4 23 (part-side javascript face web-mode-function-name-face) 23 24 (part-side javascript face (rainbow-delimiters-depth-3-face)) 24 46 (part-side javascript) 46 56 (part-side javascript) 56 57 (part-side javascript face (rainbow-delimiters-depth-3-face)) 57 58 (part-side javascript) 58 59 (part-side javascript face (rainbow-delimiters-depth-3-face)) 59 60 (part-side javascript) 60 61 (part-side javascript) 61 67 (part-side javascript) 67 69 (part-side javascript face web-mode-keyword-face) 69 70 (part-side javascript) 70 71 (part-side javascript face (rainbow-delimiters-depth-4-face)) 71 72 (part-side javascript) 72 76 (part-side javascript face web-mode-constant-face) 76 77 (part-side javascript) 77 92 (part-side javascript face web-mode-function-call-face) 92 93 (part-side javascript face (rainbow-delimiters-depth-5-face)) 93 94 (part-side javascript face (rainbow-delimiters-depth-5-face)) 94 95 (part-side javascript face (rainbow-delimiters-depth-4-face)) 95 96 (part-side javascript) 96 97 (part-side javascript face (rainbow-delimiters-depth-4-face)) 97 98 (part-side javascript) 98 106 (part-side javascript) 106 112 (part-side javascript face web-mode-keyword-face) 112 119 (part-side javascript) 119 120 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face)) 120 121 (part-side javascript) 121 122 (part-side javascript) 122 128 (part-side javascript) 128 133 (part-side javascript face web-mode-keyword-face) 133 134 (part-side javascript) 134 141 (part-side javascript face web-mode-variable-name-face) 141 144 (part-side javascript) 144 148 (part-side javascript face web-mode-constant-face) 148 177 (part-side javascript) 177 182 (part-side javascript face web-mode-keyword-face) 182 183 (part-side javascript) 183 195 (part-side javascript face web-mode-variable-name-face) 195 198 (part-side javascript) 198 202 (part-side javascript face web-mode-constant-face) 202 221 (part-side javascript) 221 226 (part-side javascript face web-mode-keyword-face) 226 227 (part-side javascript) 227 238 (part-side javascript face web-mode-variable-name-face) 238 241 (part-side javascript) 241 245 (part-side javascript face web-mode-constant-face) 245 278 (part-side javascript) 278 283 (part-side javascript face web-mode-keyword-face) 283 284 (part-side javascript) 284 297 (part-side javascript face web-mode-variable-name-face) 297 300 (part-side javascript) 300 304 (part-side javascript face web-mode-constant-face) 304 328 (part-side javascript) 328 329 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 329 380 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 380 384 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 384 393 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 393 395 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 395 417 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 417 418 (part-side javascript syntax-table (12)) 418 424 (part-side javascript) 424 429 (part-side javascript face web-mode-keyword-face) 429 430 (part-side javascript) 430 431 (part-side javascript face (rainbow-delimiters-depth-4-face)) 431 437 (part-side javascript face web-mode-variable-name-face) 437 460 (part-side javascript) 460 461 (part-side javascript face (rainbow-delimiters-depth-4-face)) 461 464 (part-side javascript) 464 468 (part-side javascript face web-mode-constant-face) 468 484 (part-side javascript) 484 485 (rear-nonsticky t part-side javascript) 485 486 (part-side javascript) 486 487 (part-side javascript) 487 493 (part-side javascript) 493 499 (part-side javascript face web-mode-keyword-face) 499 524 (part-side javascript) 524 525 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 525 527 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 527 531 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 531 532 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 532 534 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 534 535 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 535 541 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 541 550 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 550 551 (part-side javascript syntax-table (12)) 551 557 (part-side javascript) 557 563 (part-side javascript face web-mode-keyword-face) 563 584 (part-side javascript) 584 585 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 585 605 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 605 607 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 607 619 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 619 626 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 626 635 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 635 636 (part-side javascript syntax-table (12)) 636 642 (part-side javascript) 642 648 (part-side javascript face web-mode-keyword-face) 648 672 (part-side javascript) 672 673 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 673 689 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 689 691 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 691 703 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 703 710 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 710 719 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 719 720 (part-side javascript syntax-table (12)) 720 726 (part-side javascript) 726 732 (part-side javascript face web-mode-keyword-face) 732 753 (part-side javascript) 753 754 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 754 767 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 767 769 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 769 781 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 781 788 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 788 808 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 808 809 (part-side javascript syntax-table (12)) 809 815 (part-side javascript) 815 821 (part-side javascript face web-mode-keyword-face) 821 841 (part-side javascript) 841 842 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 842 858 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 858 860 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 860 868 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 868 872 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 872 882 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 882 885 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 885 894 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 894 895 (part-side javascript syntax-table (12)) 895 901 (part-side javascript) 901 907 (part-side javascript face web-mode-keyword-face) 907 928 (part-side javascript) 928 929 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 929 936 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 936 938 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 938 952 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 952 954 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 954 965 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 965 971 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 971 990 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 990 991 (part-side javascript syntax-table (12)) 991 997 (part-side javascript) 997 1003 (part-side javascript face web-mode-keyword-face) 1003 1023 (part-side javascript) 1023 1024 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1024 1059 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1059 1065 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1065 1072 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1072 1073 (part-side javascript syntax-table (12)) 1073 1079 (part-side javascript) 1079 1085 (part-side javascript face web-mode-keyword-face) 1085 1106 (part-side javascript) 1106 1107 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1107 1121 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1121 1126 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1126 1135 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1135 1136 (part-side javascript syntax-table (12)) 1136 1142 (part-side javascript) 1142 1148 (part-side javascript face web-mode-keyword-face) 1148 1168 (part-side javascript) 1168 1169 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1169 1188 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1188 1193 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1193 1202 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1202 1203 (part-side javascript syntax-table (12)) 1203 1209 (part-side javascript) 1209 1215 (part-side javascript face web-mode-keyword-face) 1215 1234 (part-side javascript) 1234 1235 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 1235 1272 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1272 1276 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1276 1283 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1283 1284 (part-side javascript syntax-table (12)) 1284 1290 (part-side javascript) 1290 1296 (part-side javascript face web-mode-keyword-face) 1296 1325 (part-side javascript) 1325 1331 (part-side javascript face web-mode-keyword-face) 1331 1361 (part-side javascript) 1361 1367 (part-side javascript face web-mode-keyword-face) 1367 1399 (part-side javascript) 1399 1405 (part-side javascript face web-mode-keyword-face) 1405 1440 (part-side javascript) 1440 1446 (part-side javascript face web-mode-keyword-face) 1446 1465 (part-side javascript) 1465 1466 (rear-nonsticky t part-side javascript) 1466 1467 (part-side javascript) 1467 1472 (part-side javascript) 1472 1473 (part-side javascript face (rainbow-delimiters-depth-3-face)) 1473 1474 (part-side javascript)) . 4365) (undo-tree-id128 . -1474) (undo-tree-id129 . -56) (undo-tree-id130 . -60) (undo-tree-id131 . -56) (undo-tree-id132 . -56) (undo-tree-id133 . -67) (undo-tree-id134 . -128) (undo-tree-id135 . -493) (undo-tree-id136 . -1467) (undo-tree-id137 . -1474)) nil (25571 39019 924573 57000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -4364) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 4365) nil (25571 39019 924560 893000) 0 nil])
([nil nil ((#("      if (this.checkFilterType()) {
        return
      }" 0 6 (part-side javascript) 6 8 (part-side javascript face web-mode-keyword-face) 8 9 (part-side javascript) 9 10 (part-side javascript face (rainbow-delimiters-depth-4-face)) 10 14 (part-side javascript face web-mode-constant-face) 14 15 (part-side javascript) 15 30 (part-side javascript face web-mode-function-call-face) 30 31 (part-side javascript face (rainbow-delimiters-depth-5-face)) 31 32 (part-side javascript face (rainbow-delimiters-depth-5-face)) 32 33 (part-side javascript face (rainbow-delimiters-depth-4-face)) 33 34 (part-side javascript) 34 35 (part-side javascript face (rainbow-delimiters-depth-4-face)) 35 36 (part-side javascript) 36 44 (part-side javascript) 44 50 (part-side javascript face web-mode-keyword-face) 50 57 (part-side javascript) 57 58 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 4840) (undo-tree-id114 . -58) (undo-tree-id115 . -36) (undo-tree-id116 . -58) (undo-tree-id117 . -58)) nil (25571 39019 924549 462000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript syntax-table (12))) . -4838) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("
" 0 1 (part-side javascript)) . -4839) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 4840) nil (25571 39019 924542 672000) 0 nil])
([nil nil ((6186 . 6192) (#("      " 0 6 (part-side javascript)) . 6185) (undo-tree-id105 . -6) (6184 . 6192)) nil (25571 39019 924458 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6249 . 6250) (nil part-side javascript 6249 . 6250) (nil face (rainbow-delimiters-depth-4-face) 6249 . 6250) (nil part-side javascript 6242 . 6249) (nil part-side javascript 6236 . 6242) (nil face web-mode-keyword-face 6236 . 6242) (nil part-side javascript 6228 . 6236) (nil part-side javascript 6227 . 6228) (nil part-side javascript 6226 . 6227) (nil face (rainbow-delimiters-depth-4-face) 6226 . 6227) (nil part-side javascript 6225 . 6226) (nil part-side javascript 6224 . 6225) (nil face (rainbow-delimiters-depth-4-face) 6224 . 6225) (nil part-side javascript 6223 . 6224) (nil face (rainbow-delimiters-depth-5-face) 6223 . 6224) (nil part-side javascript 6222 . 6223) (nil face (rainbow-delimiters-depth-5-face) 6222 . 6223) (nil part-side javascript 6207 . 6222) (nil face web-mode-function-call-face 6207 . 6222) (nil part-side javascript 6206 . 6207) (nil part-side javascript 6202 . 6206) (nil face web-mode-constant-face 6202 . 6206) (nil part-side javascript 6201 . 6202) (nil face (rainbow-delimiters-depth-4-face) 6201 . 6202) (nil part-side javascript 6200 . 6201) (nil part-side javascript 6198 . 6200) (nil face web-mode-keyword-face 6198 . 6200) (nil part-side javascript 6192 . 6198) (6192 . 6250)) nil (25571 39019 924454 877000) 0 nil])
([nil nil ((6257 . 6263) (6243 . 6255) (#("      " 0 6 (part-side javascript)) . 6243) (6250 . 6251)) nil (25571 39019 924448 3000) 0 nil])
([nil nil ((6268 . 6270) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6268) (6263 . 6269)) nil (25571 39019 924446 128000) 0 nil])
([nil nil ((6271 . 6277) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 6270) (undo-tree-id103 . 8) (6270 . 6278) (#("      " 0 6 (part-side javascript)) . 6270) (undo-tree-id104 . -6) (6269 . 6277)) nil (25571 39019 924444 176000) 0 nil])
([nil nil ((#("      }" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 6271) (undo-tree-id101 . -7) (undo-tree-id102 . -7)) nil (25571 39019 924440 65000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -6269) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("
" 0 1 (part-side javascript)) . -6270) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 6271) nil (25571 39019 924436 461000) 0 nil])
([nil nil ((8220 . 8229)) nil (25571 39019 924428 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8235 . 8236) (nil part-side javascript 8235 . 8236) (nil face (rainbow-delimiters-depth-4-face) 8235 . 8236) (nil part-side javascript 8229 . 8235) (8229 . 8236)) nil (25571 39019 924427 736000) 0 nil])
([nil nil ((#("        " 0 2 (part-side javascript) 2 8 (part-side javascript)) . -8297) (undo-tree-id94 . -2) (8281 . 8289) (#("      " 0 6 (part-side javascript)) . 8281) (8240 . 8242) (8194 . 8196) (8152 . 8154) (8105 . 8107) (8062 . 8064) (8012 . 8014) (7975 . 7977) (7888 . 7896) (#("      " 0 6 (part-side javascript)) . 7888) (7878 . 7886) (#("      " 0 6 (part-side javascript)) . 7878) (7843 . 7845) (7831 . 7833) (7792 . 7794) (7687 . 7689) (7647 . 7649) (7596 . 7598) (7582 . 7584) (7541 . 7543) (7479 . 7481) (7458 . 7460) (7322 . 7324) (7275 . 7277) (7180 . 7182) (7145 . 7147) (7099 . 7101) (7060 . 7062) (7006 . 7008) (6968 . 6970) (6901 . 6903) (6870 . 6872) (6815 . 6817) (6765 . 6767) (6695 . 6703) (#("      " 0 6 (part-side javascript)) . 6695) (6685 . 6693) (#("      " 0 6 (part-side javascript)) . 6685) (6650 . 6652) (6563 . 6565) (6521 . 6523) (6393 . 6395) (6356 . 6358) (6310 . 6318) (#("      " 0 6 (part-side javascript)) . 6310) (6259 . 6267) (#("      " 0 6 (part-side javascript)) . 6259) (#("      " 0 6 (part-side javascript)) . -6243) (#("      " 0 6 (part-side javascript)) . -6192) 6186) nil (25571 39019 924422 81000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 6258) (undo-tree-id93 . -1)) nil (25571 39019 924409 777000) 0 nil])
([nil nil ((#("
        return" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 15 (part-side javascript face web-mode-keyword-face)) . 6221) (undo-tree-id82 . -15) (undo-tree-id83 . -1) (undo-tree-id84 . -15) (undo-tree-id85 . -15) (undo-tree-id86 . -15) (undo-tree-id87 . -15) (undo-tree-id88 . -15) (undo-tree-id89 . -15) (undo-tree-id90 . -15) (undo-tree-id91 . -15) (undo-tree-id92 . -15)) nil (25571 39019 924406 812000) 0 nil])
([nil nil ((6221 . 6230)) nil (25571 39019 924392 660000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -6222) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) 6230) nil (25571 39019 924386 138000) 0 nil])
([nil nil ((4332 . 4334) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -4332) (4332 . 4333) (t 25571 39019 957924 971000)) nil (25571 39290 466486 662000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 4333)) nil (25571 39290 466484 936000) 0 nil])
([nil nil ((4358 . 4363)) nil (25571 39290 466483 874000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -4362) (undo-tree-id174 . -1) 4363) nil (25571 39290 466482 166000) 0 nil])
([nil nil ((4362 . 4363)) nil (25571 39290 466471 852000) 0 nil])
([nil nil ((4375 . 4376) (4374 . 4376) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -4374) (4362 . 4375)) nil (25571 39290 466469 641000) 0 nil])
([nil nil ((4381 . 4383) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -4381) (4377 . 4382)) nil (25571 39290 466461 282000) 0 nil])
([nil nil ((6250 . 6258) (#("        " 0 8 (part-side javascript)) . 6249) (undo-tree-id204 . -8) (6248 . 6258) (t 25571 39290 500834 117000)) nil (25571 40306 66490 326000) 0 nil])
([nil nil ((6263 . 6266) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6263) (6262 . 6263) (6261 . 6263) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6261) (6258 . 6262)) nil (25571 40306 66487 350000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6262) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("f" 0 1 (part-side javascript)) . -6263) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("i" 0 1 (part-side javascript)) . -6264) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("l" 0 1 (part-side javascript)) . -6265) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 6266) nil (25571 40306 66484 400000) 0 nil])
([nil nil ((6262 . 6278)) nil (25571 40306 66472 444000) 0 nil])
([nil nil ((6277 . 6279)) nil (25571 40306 66471 339000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6277) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6278) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 6279) nil (25571 40306 66469 784000) 0 nil])
([nil nil ((6277 . 6281)) nil (25571 40306 66463 957000) 0 nil])
([nil nil ((6284 . 6286) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6284) (6282 . 6285)) nil (25571 40306 66462 671000) 0 nil])
([nil nil ((6287 . 6295) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 6286) (undo-tree-id190 . -8) (undo-tree-id191 . 10) (6294 . 6296) (6285 . 6295)) nil (25571 40306 66460 558000) 0 nil])
([nil nil ((6286 . 6296)) nil (25571 40306 66456 423000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 6249) (undo-tree-id189 . -1)) nil (25571 40306 66455 196000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 6306) (undo-tree-id188 . -1)) nil (25571 40306 66453 70000) 0 nil])
([nil nil ((6295 . 6309)) nil (25571 40306 66450 918000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6308) (undo-tree-id187 . -1) 6309) nil (25571 40306 66449 567000) 0 nil])
([nil nil ((6309 . 6311) (6308 . 6310) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6308) (6308 . 6309)) nil (25571 40306 66446 940000) 0 nil])
([nil nil ((6310 . 6314)) nil (25571 40306 66445 437000) 0 nil])
([nil nil ((6316 . 6317)) nil (25571 40306 66444 47000) 0 nil])
([nil nil ((6317 . 6325)) nil (25571 40306 66442 806000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript)) . -6320) (undo-tree-id182 . -1) (#("r" 0 1 (part-side javascript)) . -6321) (undo-tree-id183 . -1) (#("u" 0 1 (part-side javascript)) . -6322) (undo-tree-id184 . -1) (#("e" 0 1 (part-side javascript)) . -6323) (undo-tree-id185 . -1) (#(" " 0 1 (part-side javascript)) . -6324) (undo-tree-id186 . -1) 6325) nil (25571 40306 66440 597000) 0 nil])
([nil nil ((6320 . 6324)) nil (25571 40306 66432 406000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6323) (undo-tree-id181 . -1) 6324) nil (25571 40306 66431 165000) 0 nil])
([nil nil ((6323 . 6334)) nil (25571 40306 66428 976000) 0 nil])
([nil nil ((6348 . 6350) (6347 . 6349) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6347) (6334 . 6348)) nil (25571 40306 66427 743000) 0 nil])
([nil nil ((6349 . 6354)) nil (25571 40306 66425 790000) 0 nil])
([nil nil ((6360 . 6372) (6359 . 6361) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6359) (6356 . 6360)) nil (25571 40306 66424 436000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6371) (undo-tree-id180 . -1) 6372) nil (25571 40306 66422 376000) 0 nil])
([nil nil ((6372 . 6383)) nil (25571 40306 66419 588000) 0 nil])
([nil nil ((6397 . 6399) (6396 . 6398) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6396) (6383 . 6397)) nil (25571 40306 66418 172000) 0 nil])
([nil nil ((6398 . 6402)) nil (25571 40306 66416 396000) 0 nil])
([nil nil ((6408 . 6413) (6407 . 6409) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6407) (6404 . 6408)) nil (25571 40306 66415 37000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -6412) (undo-tree-id179 . -1) 6413) nil (25571 40306 66412 911000) 0 nil])
([nil nil ((6412 . 6420)) nil (25571 40306 66410 350000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6419) (undo-tree-id178 . -1) 6420) nil (25571 40306 66408 974000) 0 nil])
([nil nil ((6371 . 6380)) nil (25571 40306 66406 673000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6379) (undo-tree-id177 . -1) 6380) nil (25571 40306 66405 327000) 0 nil])
([nil nil ((6379 . 6395)) nil (25571 40306 66402 413000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6394) (undo-tree-id176 . -1) 6395) nil (25571 40306 66400 782000) 0 nil])
([nil nil ((6442 . 6463)) nil (25571 40306 66397 42000) 0 nil])
([nil nil ((6463 . 6466)) nil (25571 40306 66395 302000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6465) (undo-tree-id175 . -1) 6466) nil (25571 40306 66390 111000) 0 nil])
([nil nil ((6476 . 6485) (t 25571 40306 96545 223000)) nil (25571 42224 185755 539000) 0 nil])
([nil nil ((6494 . 6506) (6493 . 6495) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6493) (6485 . 6494)) nil (25571 42224 185753 869000) 0 nil])
([nil nil ((6506 . 6510)) nil (25571 42224 185752 352000) 0 nil])
([nil nil ((6509 . 6516)) nil (25571 42224 185751 450000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6515) (undo-tree-id233 . -1) 6516) nil (25571 42224 185750 242000) 0 nil])
([nil nil ((#("== 'simple'" 0 3 (part-side javascript) 3 4 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 4 10 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 10 11 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 6505) (undo-tree-id230 . -11) (undo-tree-id231 . -9) (undo-tree-id232 . -11)) nil (25571 42224 185747 755000) 0 nil])
([nil nil ((6509 . 6511) (6508 . 6510) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6508) (6505 . 6509)) nil (25571 42224 185743 254000) 0 nil])
([nil nil ((6510 . 6513)) nil (25571 42224 185741 621000) 0 nil])
([nil nil ((6514 . 6518)) nil (25571 42224 185740 708000) 0 nil])
([nil nil ((6517 . 6522)) nil (25571 42224 185739 395000) 0 nil])
([nil nil ((6523 . 6527)) nil (25571 42224 185738 534000) 0 nil])
([nil nil ((6526 . 6529)) nil (25571 42224 185737 471000) 0 nil])
([nil nil ((6530 . 6534)) nil (25571 42224 185736 516000) 0 nil])
([nil nil ((6533 . 6536)) nil (25571 42224 185735 531000) 0 nil])
([nil nil ((6537 . 6541)) nil (25571 42224 185734 530000) 0 nil])
([nil nil ((6540 . 6543)) nil (25571 42224 185733 545000) 0 nil])
([nil nil ((6544 . 6548)) nil (25571 42224 185732 549000) 0 nil])
([nil nil ((6547 . 6549)) nil (25571 42224 185731 567000) 0 nil])
([nil nil ((6549 . 6552)) nil (25571 42224 185730 519000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6551) (undo-tree-id229 . -1) 6552) nil (25571 42224 185729 360000) 0 nil])
([nil nil ((6555 . 6557) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6555) (6554 . 6556)) nil (25571 42224 185726 763000) 0 nil])
([nil nil ((6558 . 6566) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 6557) (undo-tree-id227 . -8) (undo-tree-id228 . 10) (6565 . 6567) (6556 . 6566)) nil (25571 42224 185724 891000) 0 nil])
([nil nil ((6557 . 6567)) nil (25571 42224 185721 189000) 0 nil])
([nil nil ((6581 . 6583) (6580 . 6582) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6580) (6567 . 6581)) nil (25571 42224 185719 930000) 0 nil])
([nil nil ((6558 . 6568) (#("          " 0 10 (part-side javascript)) . 6557) (undo-tree-id226 . -10) (6567 . 6568)) nil (25571 42224 185717 847000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6582 . 6583) (nil part-side javascript 6563 . 6583) (nil part-side javascript 6557 . 6563) (nil face web-mode-keyword-face 6557 . 6563) (6557 . 6583)) nil (25571 42224 185715 147000) 0 nil])
([nil nil ((6557 . 6567) 6583) nil (25571 42224 185713 141000) 0 nil])
([nil nil ((6619 . 6623)) nil (25571 42224 185711 894000) 0 nil])
([nil nil ((6625 . 6628)) nil (25571 42224 185710 999000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6625) (undo-tree-id223 . -1) (#(":" 0 1 (part-side javascript)) . -6626) (undo-tree-id224 . -1) (#(" " 0 1 (part-side javascript)) . -6627) (undo-tree-id225 . -1) 6628) nil (25571 42224 185709 575000) 0 nil])
([nil nil ((6625 . 6630)) nil (25571 42224 185704 369000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6642 . 6643) (nil fontified t 6629 . 6643) (nil part-side javascript 6629 . 6643) (nil part-token string 6629 . 6643) (nil font-lock-face web-mode-javascript-string-face 6629 . 6643) (6629 . 6643)) nil (25571 42224 185703 11000) 0 nil])
([nil nil ((6644 . 6655)) nil (25571 42224 185700 845000) 0 nil])
([nil nil ((6669 . 6671) (6668 . 6670) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6668) (6655 . 6669)) nil (25571 42224 185699 246000) 0 nil])
([nil nil ((6670 . 6680)) nil (25571 42224 185697 481000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6679) (undo-tree-id222 . -1) 6680) nil (25571 42224 185696 251000) 0 nil])
([nil nil ((6681 . 6695)) nil (25571 42224 185694 93000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6694) (undo-tree-id221 . -1) 6695) nil (25571 42224 185692 943000) 0 nil])
([nil nil ((6694 . 6705)) nil (25571 42224 185690 649000) 0 nil])
([nil nil ((6705 . 6711)) nil (25571 42224 185689 741000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -6707) (undo-tree-id217 . -1) (#("r" 0 1 (part-side javascript)) . -6708) (undo-tree-id218 . -1) (#("r" 0 1 (part-side javascript)) . -6709) (undo-tree-id219 . -1) (#("e" 0 1 (part-side javascript)) . -6710) (undo-tree-id220 . -1) 6711) nil (25571 42224 185687 918000) 0 nil])
([nil nil ((6719 . 6721) (6718 . 6720) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6718) (6707 . 6719)) nil (25571 42224 185681 466000) 0 nil])
([nil nil ((6720 . 6725)) nil (25571 42224 185679 663000) 0 nil])
([nil nil ((6727 . 6730)) nil (25571 42224 185678 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6821 . 6822) (nil part-side javascript 6821 . 6822) (nil face (rainbow-delimiters-depth-6-face) 6821 . 6822) (nil part-side javascript 6814 . 6821) (nil part-side javascript 6813 . 6814) (nil face (rainbow-delimiters-depth-6-face) 6813 . 6814) (nil part-side javascript 6812 . 6813) (nil face (rainbow-delimiters-depth-6-face) 6812 . 6813) (nil part-side javascript 6800 . 6812) (nil part-side javascript 6799 . 6800) (nil face (rainbow-delimiters-depth-6-face) 6799 . 6800) (nil part-side javascript 6791 . 6799) (nil part-side javascript 6787 . 6791) (nil face web-mode-constant-face 6787 . 6791) (nil part-side javascript 6784 . 6787) (nil part-side javascript 6783 . 6784) (nil face (rainbow-delimiters-depth-6-face) 6783 . 6784) (nil part-side javascript 6782 . 6783) (nil face (rainbow-delimiters-depth-7-face) 6782 . 6783) (nil part-side javascript 6781 . 6782) (nil part-side javascript 6780 . 6781) (nil face (rainbow-delimiters-depth-7-face) 6780 . 6781) (nil part-side javascript 6770 . 6780) (nil part-side javascript 6769 . 6770) (nil face (rainbow-delimiters-depth-6-face) 6769 . 6770) (nil part-side javascript 6768 . 6769) (nil face (rainbow-delimiters-depth-6-face) 6768 . 6769) (nil part-side javascript 6756 . 6768) (nil part-side javascript 6755 . 6756) (nil face (rainbow-delimiters-depth-6-face) 6755 . 6756) (nil part-side javascript 6747 . 6755) (nil part-side javascript 6743 . 6747) (nil face web-mode-constant-face 6743 . 6747) (nil part-side javascript 6730 . 6743) (6730 . 6822)) nil (25571 42224 185675 619000) 0 nil])
([nil nil ((6063 . 6070)) nil (25571 42224 185667 775000) 0 nil])
([nil nil ((6070 . 6076)) nil (25571 42224 185666 844000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -6073) (undo-tree-id214 . -1) (#("e" 0 1 (part-side javascript)) . -6074) (undo-tree-id215 . -1) (#(" " 0 1 (part-side javascript)) . -6075) (undo-tree-id216 . -1) 6076) nil (25571 42224 185665 183000) 0 nil])
([nil nil ((6073 . 6094)) nil (25571 42224 185659 821000) 0 nil])
([nil nil ((6094 . 6096)) nil (25571 42224 185658 907000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript)) . -6094) (undo-tree-id212 . -1) (#("e" 0 1 (part-side javascript)) . -6095) (undo-tree-id213 . -1) 6096) nil (25571 42224 185657 606000) 0 nil])
([nil nil ((6094 . 6096)) nil (25571 42224 185653 287000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6095) (undo-tree-id211 . -1) 6096) nil (25571 42224 185652 117000) 0 nil])
([nil nil ((#("      delete currentfilter.type
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 31 (part-side javascript) 31 32 (part-side javascript)) . 6096) (undo-tree-id208 . -25) (undo-tree-id209 . -31) (undo-tree-id210 . -32) (6061 . 6096) (#("      delete currentfilter.subtype
" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 35 (part-side javascript)) . 6029) (6064 . 6096) 6095) nil (25571 42224 185649 278000) 0 nil])
([nil nil ((6060 . 6070)) nil (25571 42224 185643 502000) 0 nil])
([nil nil ((6070 . 6079)) nil (25571 42224 185642 594000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -6078) (undo-tree-id207 . -1) 6079) nil (25571 42224 185641 319000) 0 nil])
([nil nil ((7451 . 7462)) nil (25571 42224 185638 856000) 0 nil])
([nil nil ((7476 . 7478) (7475 . 7477) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7475) (7462 . 7476)) nil (25571 42224 185637 501000) 0 nil])
([nil nil ((7477 . 7481)) nil (25571 42224 185635 845000) 0 nil])
([nil nil ((7483 . 7486)) nil (25571 42224 185634 944000) 0 nil])
([nil nil ((7486 . 7488)) nil (25571 42224 185634 19000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7498 . 7499) (nil fontified t 7487 . 7499) (nil part-side javascript 7487 . 7499) (nil part-token string 7487 . 7499) (nil font-lock-face web-mode-javascript-string-face 7487 . 7499) (7487 . 7499)) nil (25571 42224 185632 831000) 0 nil])
([nil nil ((7329 . 7340)) nil (25571 42224 185630 823000) 0 nil])
([nil nil ((7340 . 7350)) nil (25571 42224 185629 429000) 0 nil])
([nil nil ((7354 . 7356) (7353 . 7355) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7353) (7350 . 7354)) nil (25571 42224 185628 252000) 0 nil])
([nil nil ((7355 . 7359)) nil (25571 42224 185626 645000) 0 nil])
([nil nil ((7361 . 7365)) nil (25571 42224 185625 682000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -7363) (undo-tree-id205 . -1) (#(" " 0 1 (part-side javascript)) . -7364) (undo-tree-id206 . -1) 7365) nil (25571 42224 185624 16000) 0 nil])
([nil nil ((7363 . 7366)) nil (25571 42224 185612 372000) 0 nil])
([nil nil ((7365 . 7370)) nil (25571 42224 185611 308000) 0 nil])
([nil nil ((7370 . 7379)) nil (25571 42225 523783 118000) 0 nil])
([nil nil ((13047 . 13056)) nil (25571 42235 775026 984000) 0 nil] [nil nil ((12884 . 12897)) ((#("
            " 0 1 (part-side javascript) 1 13 (part-side javascript)) . 12884) (undo-tree-id290 . -13) (undo-tree-id291 . -13) (undo-tree-id292 . -1) (undo-tree-id293 . -13) (undo-tree-id294 . -13) (undo-tree-id295 . -13) (undo-tree-id296 . -13) (undo-tree-id297 . -13) (undo-tree-id298 . -13) (undo-tree-id299 . -13) (undo-tree-id300 . -13) (undo-tree-id301 . -13) (undo-tree-id302 . -13) (undo-tree-id303 . -13) (undo-tree-id304 . -13) (undo-tree-id305 . -13) (undo-tree-id306 . -13) (undo-tree-id307 . -13) (undo-tree-id308 . -13) (undo-tree-id309 . -13) (undo-tree-id310 . -13) (undo-tree-id311 . -1) (undo-tree-id312 . -13) (undo-tree-id313 . -13) (undo-tree-id314 . -13) (undo-tree-id315 . -13) (undo-tree-id316 . -13) (undo-tree-id317 . -13) (undo-tree-id318 . -13) (undo-tree-id319 . -13) (undo-tree-id320 . -13) (undo-tree-id321 . -13) (undo-tree-id322 . -13) (undo-tree-id323 . -13) (undo-tree-id324 . -13) (undo-tree-id325 . -13) (undo-tree-id326 . -13) (undo-tree-id327 . -13) (undo-tree-id328 . -13) (undo-tree-id329 . -13) (undo-tree-id330 . -13) (undo-tree-id331 . -13) (undo-tree-id332 . -13) (undo-tree-id333 . -13) (undo-tree-id334 . -13)) (25571 42224 825162 328000) 0 nil])
([nil nil ((13070 . 13072) (13069 . 13071) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -13069) (13056 . 13070)) nil (25571 42235 775025 656000) 0 nil])
([nil nil ((12911 . 12913) (12910 . 12912) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -12910) (12897 . 12911)) ((#("currentfilter[" 0 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 12897) (undo-tree-id237 . -13) (undo-tree-id238 . -13) (undo-tree-id239 . -13) (undo-tree-id240 . -13) (undo-tree-id241 . -13) (undo-tree-id242 . -13) (undo-tree-id243 . -13) (undo-tree-id244 . -13) (undo-tree-id245 . -13) (undo-tree-id246 . -13) (undo-tree-id247 . -13) (undo-tree-id248 . -13) (undo-tree-id249 . -13) (undo-tree-id250 . -13) (undo-tree-id251 . -13) (undo-tree-id252 . -13) (undo-tree-id253 . -13) (undo-tree-id254 . -13) (undo-tree-id255 . -13) (undo-tree-id256 . -13) (12910 . 12911) (#("[]" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 12910) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("''" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 2 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 12911) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1)) (25571 42224 433787 745000) 0 nil])
([nil nil ((13071 . 13073)) nil (25571 42235 775024 79000) 0 nil])
([nil nil ((12912 . 12916)) ((#("type" 0 4 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 12912) (undo-tree-id236 . -4)) (25571 42224 186580 317000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -13072) (undo-tree-id335 . -1) 13073) nil (25571 42235 775022 296000) 0 nil])
([nil nil ((12918 . 12921)) ((#(" = " 0 2 (part-side javascript) 2 3 (part-side javascript)) . 12918) (undo-tree-id234 . -3) (undo-tree-id235 . -2)) (25571 42224 185598 89000) 0 nil])
([nil nil ((13072 . 13075)) nil (25571 42235 775012 636000) 0 nil])
nil
([nil nil ((13077 . 13080)) nil (25571 42235 780460 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13094 . 13095) (nil fontified t 13094 . 13095) (nil part-side javascript 13094 . 13095) (nil part-token string 13094 . 13095) (nil font-lock-face web-mode-javascript-string-face 13094 . 13095) (nil fontified t 13081 . 13094) (nil part-side javascript 13081 . 13094) (nil part-token string 13081 . 13094) (nil font-lock-face web-mode-javascript-string-face 13081 . 13094) (nil fontified t 13080 . 13081) (nil part-side javascript 13080 . 13081) (nil part-token string 13080 . 13081) (nil syntax-table (15) 13080 . 13081) (nil font-lock-face web-mode-javascript-string-face 13080 . 13081) (13080 . 13095)) nil (25571 42253 668059 376000) 0 nil] [nil nil ((nil rear-nonsticky nil 13119 . 13120) (nil part-side javascript 13119 . 13120) (nil part-token string 13119 . 13120) (nil font-lock-face web-mode-javascript-string-face 13119 . 13120) (nil part-side javascript 13110 . 13119) (nil part-token string 13110 . 13119) (nil font-lock-face web-mode-javascript-string-face 13110 . 13119) (nil part-side javascript 13105 . 13110) (nil part-token string 13105 . 13110) (nil font-lock-face web-mode-javascript-string-face 13105 . 13110) (nil part-side javascript 13104 . 13105) (nil part-token string 13104 . 13105) (nil syntax-table (15) 13104 . 13105) (nil font-lock-face web-mode-javascript-string-face 13104 . 13105) (nil part-side javascript 13103 . 13104) (nil part-side javascript 13101 . 13103) (nil part-side javascript 13100 . 13101) (nil face (rainbow-delimiters-depth-5-face) 13100 . 13101) (nil part-side javascript 13099 . 13100) (nil part-token string 13099 . 13100) (nil syntax-table (15) 13099 . 13100) (nil font-lock-face web-mode-javascript-string-face 13099 . 13100) (nil part-side javascript 13095 . 13099) (nil part-token string 13095 . 13099) (nil font-lock-face web-mode-javascript-string-face 13095 . 13099) (nil part-side javascript 13094 . 13095) (nil part-token string 13094 . 13095) (nil syntax-table (15) 13094 . 13095) (nil font-lock-face web-mode-javascript-string-face 13094 . 13095) (nil part-side javascript 13093 . 13094) (nil face (rainbow-delimiters-depth-5-face) 13093 . 13094) (nil part-side javascript 13080 . 13093) (13080 . 13120)) ((#("currentfilter['type'] = 'Compexpression'" 0 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 19 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face)) 21 24 (part-side javascript) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 39 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 39 40 (rear-nonsticky nil part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 13080) (undo-tree-id336 . -39) (nil face (rainbow-delimiters-depth-5-face) 13093 . 13094) (nil syntax-table (15) 13094 . 13095) (nil syntax-table (15) 13099 . 13100) (nil face (rainbow-delimiters-depth-5-face) 13100 . 13101) (nil syntax-table (15) 13104 . 13105) (nil rear-nonsticky t 13119 . 13120)) (25571 42235 775002 300000) 0 nil])
([nil nil ((9050 . 9059) (8998 . 9007) (8949 . 8958) (8904 . 8913) (8854 . 8863) (8808 . 8817) (8755 . 8764) (8715 . 8724) (8641 . 8993) (#("else if (filtertype == 'subcountmin' || filtertype == 'subcountmax') {
          delete currentfilter.rules
          currentfilter['condition'] = filtertype
          currentfilter['active'] = 'true'
          currentfilter['subtype'] = 'dns.log'
          currentfilter['subcount'] = '2'
          currentfilter['matchfield'] = 'uid'
          currentfilter['submatchfield'] = 'uid'
        }" 0 4 (part-side javascript face web-mode-keyword-face) 4 5 (part-side javascript) 5 7 (part-side javascript face web-mode-keyword-face) 7 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 23 (part-side javascript) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 54 (part-side javascript) 54 55 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 55 66 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 66 67 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 67 68 (part-side javascript face (rainbow-delimiters-depth-5-face)) 68 69 (part-side javascript) 69 70 (part-side javascript face (rainbow-delimiters-depth-5-face)) 70 71 (part-side javascript) 71 81 (part-side javascript) 81 87 (part-side javascript face web-mode-keyword-face) 87 131 (part-side javascript) 131 132 (part-side javascript face (rainbow-delimiters-depth-6-face)) 132 133 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 133 142 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 142 143 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 143 144 (part-side javascript face (rainbow-delimiters-depth-6-face)) 144 181 (part-side javascript) 181 182 (part-side javascript face (rainbow-delimiters-depth-6-face)) 182 183 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 183 189 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 189 190 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 190 191 (part-side javascript face (rainbow-delimiters-depth-6-face)) 191 194 (part-side javascript) 194 195 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 195 199 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 199 200 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 200 201 (part-side javascript syntax-table (15)) 201 224 (part-side javascript) 224 225 (part-side javascript face (rainbow-delimiters-depth-6-face)) 225 226 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 226 233 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 233 234 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 234 235 (part-side javascript face (rainbow-delimiters-depth-6-face)) 235 238 (part-side javascript) 238 239 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 239 247 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 247 248 (part-side javascript syntax-table (15)) 248 271 (part-side javascript) 271 272 (part-side javascript face (rainbow-delimiters-depth-6-face)) 272 273 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 273 281 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 281 282 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 282 283 (part-side javascript face (rainbow-delimiters-depth-6-face)) 283 286 (part-side javascript) 286 287 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 287 289 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 289 290 (part-side javascript syntax-table (15)) 290 313 (part-side javascript) 313 314 (part-side javascript face (rainbow-delimiters-depth-6-face)) 314 315 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 315 325 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 325 326 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 326 327 (part-side javascript face (rainbow-delimiters-depth-6-face)) 327 330 (part-side javascript) 330 331 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 331 335 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 335 336 (part-side javascript syntax-table (15)) 336 359 (part-side javascript) 359 360 (part-side javascript face (rainbow-delimiters-depth-6-face)) 360 361 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 361 374 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 374 375 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 375 376 (part-side javascript face (rainbow-delimiters-depth-6-face)) 376 379 (part-side javascript) 379 380 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 380 384 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 384 385 (part-side javascript syntax-table (15)) 385 393 (part-side javascript) 393 394 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 8641) (undo-tree-id337 . -394) (undo-tree-id338 . -394) (undo-tree-id339 . -71) (undo-tree-id340 . -394) (t 25571 42253 700044 756000)) nil (25571 42303 74280 249000) 0 nil])
nil
([nil nil ((6882 . 6891) (t 25571 42303 111839 856000)) nil (25571 43046 368608 739000) 0 nil])
([nil nil ((6900 . 6912) (6899 . 6901) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6899) (6891 . 6900)) nil (25571 43046 368606 722000) 0 nil])
([nil nil ((6912 . 6915)) nil (25571 43046 368605 68000) 0 nil])
([nil nil ((6912 . 6913)) nil (25571 43046 368604 106000) 0 nil])
([nil nil ((6915 . 6919)) nil (25571 43046 368602 886000) 0 nil])
([nil nil ((6922 . 6924) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6922) (6921 . 6923)) nil (25571 43046 368601 275000) 0 nil])
([nil nil ((6925 . 6933) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 6924) (undo-tree-id355 . -8) (undo-tree-id356 . 10) (6932 . 6934) (6923 . 6933)) nil (25571 43046 368599 47000) 0 nil])
([nil nil ((6924 . 6934)) nil (25571 43046 368595 241000) 0 nil])
([nil nil ((6948 . 6950) (6947 . 6949) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6947) (6934 . 6948)) nil (25571 43046 368593 961000) 0 nil])
([nil nil ((6950 . 6953)) nil (25571 43046 368592 421000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -6950) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("s" 0 1 (part-side javascript)) . -6951) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("c" 0 1 (part-side javascript)) . -6952) (undo-tree-id354 . -1) 6953) nil (25571 43046 368590 747000) 0 nil])
([nil nil ((6949 . 6952)) nil (25571 43046 368583 663000) 0 nil])
([nil nil ((6954 . 6957)) nil (25571 43046 368582 469000) 0 nil])
([nil nil ((4501 . 4510)) nil (25571 43046 368581 293000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4506) (undo-tree-id346 . -1) (#(" " 0 1 (part-side javascript)) . -4507) (undo-tree-id347 . -1) (#("=" 0 1 (part-side javascript)) . -4508) (undo-tree-id348 . -1) (#(" " 0 1 (part-side javascript)) . -4509) (undo-tree-id349 . -1) 4510) nil (25571 43046 368579 446000) 0 nil])
([nil nil ((4506 . 4514)) nil (25571 43046 368572 250000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4513) (undo-tree-id345 . -1) 4514) nil (25571 43046 368571 60000) 0 nil])
([nil nil ((4513 . 4514)) nil (25571 43046 368568 451000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4513) (undo-tree-id344 . -1) 4514) nil (25571 43046 368567 220000) 0 nil])
([nil nil ((4513 . 4515)) nil (25571 43046 368531 817000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4514) (undo-tree-id343 . -1) 4515) nil (25571 43046 368530 455000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -4513) (undo-tree-id342 . -1) 4514) nil (25571 43046 368527 703000) 0 nil])
([nil nil ((6969 . 6974)) nil (25571 43046 603732 809000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -6969) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("r" 0 1 (part-side javascript)) . -6970) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("u" 0 1 (part-side javascript)) . -6971) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("e" 0 1 (part-side javascript face web-mode-constant-face)) . -6972) (undo-tree-id372 . -1) (#(" " 0 1 (part-side javascript)) . -6973) (undo-tree-id373 . -1) 6974) nil (25571 43078 560342 271000) 0 nil] [nil nil ((#(" " 0 1 (part-side javascript)) . -6973) (undo-tree-id341 . -1) 6974) ((6973 . 6974)) (25571 43046 369224 545000) 0 nil])
([nil nil ((6969 . 6973)) nil (25571 43078 560331 419000) 0 nil])
([nil nil ((6973 . 6984)) ((#("
          " 0 1 (part-side javascript) 1 11 (part-side javascript)) . 6973) (undo-tree-id357 . -11) (undo-tree-id358 . -1) (undo-tree-id359 . -1)) (25571 43046 368505 285000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6972) (undo-tree-id365 . -1) 6973) nil (25571 43078 560330 198000) 0 nil])
nil
([nil nil ((6972 . 6983)) nil (25571 43078 560327 837000) 0 nil])
([nil nil ((6983 . 6984)) nil (25571 43078 560326 698000) 0 nil])
([nil nil ((#("v" 0 1 (part-side javascript)) . -6983) (undo-tree-id364 . -1) 6984) nil (25571 43078 560325 132000) 0 nil])
([nil nil ((6983 . 6999)) nil (25571 43078 560322 566000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6996) (undo-tree-id361 . -1) (#("=" 0 1 (part-side javascript)) . -6997) (undo-tree-id362 . -1) (#(" " 0 1 (part-side javascript)) . -6998) (undo-tree-id363 . -1) 6999) nil (25571 43078 560320 865000) 0 nil])
([nil nil ((6997 . 6999) (6996 . 6998) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6996) (6996 . 6997)) nil (25571 43078 560315 369000) 0 nil])
([nil nil ((6998 . 7007)) nil (25571 43078 560313 355000) 0 nil])
([nil nil ((7009 . 7023)) nil (25571 43078 560312 119000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7022) (undo-tree-id360 . -1) 7023) nil (25571 43078 560310 107000) 0 nil])
([nil nil ((7022 . 7033)) nil (25571 43078 560299 413000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7149 . 7150) (nil rear-nonsticky t 7149 . 7150) (nil part-side javascript 7149 . 7150) (nil face (rainbow-delimiters-depth-6-face) 7149 . 7150) (nil part-side javascript 7142 . 7149) (nil part-side javascript 7141 . 7142) (nil face (rainbow-delimiters-depth-6-face) 7141 . 7142) (nil part-side javascript 7140 . 7141) (nil face (rainbow-delimiters-depth-6-face) 7140 . 7141) (nil part-side javascript 7128 . 7140) (nil part-side javascript 7127 . 7128) (nil face (rainbow-delimiters-depth-6-face) 7127 . 7128) (nil part-side javascript 7119 . 7127) (nil part-side javascript 7115 . 7119) (nil face web-mode-constant-face 7115 . 7119) (nil part-side javascript 7112 . 7115) (nil part-side javascript 7111 . 7112) (nil face (rainbow-delimiters-depth-6-face) 7111 . 7112) (nil part-side javascript 7110 . 7111) (nil face (rainbow-delimiters-depth-7-face) 7110 . 7111) (nil part-side javascript 7109 . 7110) (nil part-side javascript 7108 . 7109) (nil face (rainbow-delimiters-depth-7-face) 7108 . 7109) (nil part-side javascript 7098 . 7108) (nil part-side javascript 7097 . 7098) (nil face (rainbow-delimiters-depth-6-face) 7097 . 7098) (nil part-side javascript 7096 . 7097) (nil face (rainbow-delimiters-depth-6-face) 7096 . 7097) (nil part-side javascript 7084 . 7096) (nil part-side javascript 7083 . 7084) (nil face (rainbow-delimiters-depth-6-face) 7083 . 7084) (nil part-side javascript 7075 . 7083) (nil part-side javascript 7071 . 7075) (nil face web-mode-constant-face 7071 . 7075) (nil part-side javascript 7058 . 7071) (nil part-side javascript 7057 . 7058) (nil part-side javascript 7055 . 7057) (nil part-side javascript 7054 . 7055) (nil face (rainbow-delimiters-depth-6-face) 7054 . 7055) (nil part-side javascript 7053 . 7054) (nil part-token string 7053 . 7054) (nil syntax-table (15) 7053 . 7054) (nil font-lock-face web-mode-javascript-string-face 7053 . 7054) (nil part-side javascript 7048 . 7053) (nil part-token string 7048 . 7053) (nil font-lock-face web-mode-javascript-string-face 7048 . 7053) (nil part-side javascript 7047 . 7048) (nil part-token string 7047 . 7048) (nil syntax-table (15) 7047 . 7048) (nil font-lock-face web-mode-javascript-string-face 7047 . 7048) (nil part-side javascript 7046 . 7047) (nil face (rainbow-delimiters-depth-6-face) 7046 . 7047) (nil part-side javascript 7033 . 7046) (7033 . 7150)) nil (25571 43078 560290 174000) 0 nil])
([nil nil ((6972 . 6983) (t 25571 43078 592607 758000)) nil (25571 43085 972801 260000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7022 . 7023) (nil part-side javascript 7022 . 7023) (nil part-token string 7022 . 7023) (nil font-lock-face web-mode-javascript-string-face 7022 . 7023) (nil rear-nonsticky t 7021 . 7022) (nil part-side javascript 7021 . 7022) (nil part-token string 7021 . 7022) (nil font-lock-face web-mode-javascript-string-face 7021 . 7022) (nil part-side javascript 7008 . 7021) (nil part-token string 7008 . 7021) (nil font-lock-face web-mode-javascript-string-face 7008 . 7021) (nil part-side javascript 7007 . 7008) (nil part-token string 7007 . 7008) (nil syntax-table (15) 7007 . 7008) (nil font-lock-face web-mode-javascript-string-face 7007 . 7008) (nil part-side javascript 7006 . 7007) (nil part-side javascript 7004 . 7006) (nil part-side javascript 7003 . 7004) (nil face (rainbow-delimiters-depth-6-face) 7003 . 7004) (nil part-side javascript 7002 . 7003) (nil part-token string 7002 . 7003) (nil syntax-table (15) 7002 . 7003) (nil font-lock-face web-mode-javascript-string-face 7002 . 7003) (nil part-side javascript 6998 . 7002) (nil part-token string 6998 . 7002) (nil font-lock-face web-mode-javascript-string-face 6998 . 7002) (nil part-side javascript 6997 . 6998) (nil part-token string 6997 . 6998) (nil syntax-table (15) 6997 . 6998) (nil font-lock-face web-mode-javascript-string-face 6997 . 6998) (nil part-side javascript 6996 . 6997) (nil face (rainbow-delimiters-depth-6-face) 6996 . 6997) (nil part-side javascript 6983 . 6996) (6983 . 7023)) nil (25571 43085 972791 950000) 0 nil])
([nil nil ((6935 . 6946) (t 25571 43086 8576 765000)) nil (25571 43093 517091 698000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6971 . 6972) (nil rear-nonsticky t 6971 . 6972) (nil part-side javascript 6971 . 6972) (nil part-side javascript 6952 . 6971) (nil part-side javascript 6946 . 6952) (nil face web-mode-keyword-face 6946 . 6952) (6946 . 6972)) nil (25571 43093 517084 14000) 0 nil])
([nil nil ((7248 . 7257) (t 25571 43093 548545 250000)) nil (25571 44142 472008 753000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8497 . 8498) (nil part-side javascript 8497 . 8498) (nil face (rainbow-delimiters-depth-5-face) 8497 . 8498) (nil part-side javascript 8489 . 8497) (nil part-side javascript 8488 . 8489) (nil syntax-table (15) 8488 . 8489) (nil part-side javascript 8487 . 8488) (nil part-token string 8487 . 8488) (nil font-lock-face web-mode-javascript-string-face 8487 . 8488) (nil part-side javascript 8483 . 8487) (nil part-token string 8483 . 8487) (nil font-lock-face web-mode-javascript-string-face 8483 . 8487) (nil part-side javascript 8482 . 8483) (nil part-token string 8482 . 8483) (nil syntax-table (15) 8482 . 8483) (nil font-lock-face web-mode-javascript-string-face 8482 . 8483) (nil part-side javascript 8479 . 8482) (nil part-side javascript 8478 . 8479) (nil face (rainbow-delimiters-depth-6-face) 8478 . 8479) (nil part-side javascript 8477 . 8478) (nil part-token string 8477 . 8478) (nil syntax-table (15) 8477 . 8478) (nil font-lock-face web-mode-javascript-string-face 8477 . 8478) (nil part-side javascript 8471 . 8477) (nil part-token string 8471 . 8477) (nil font-lock-face web-mode-javascript-string-face 8471 . 8477) (nil part-side javascript 8470 . 8471) (nil part-token string 8470 . 8471) (nil syntax-table (15) 8470 . 8471) (nil font-lock-face web-mode-javascript-string-face 8470 . 8471) (nil part-side javascript 8469 . 8470) (nil face (rainbow-delimiters-depth-6-face) 8469 . 8470) (nil part-side javascript 8446 . 8469) (nil part-side javascript 8445 . 8446) (nil part-side javascript 8444 . 8445) (nil face (rainbow-delimiters-depth-6-face) 8444 . 8445) (nil part-side javascript 8409 . 8444) (nil part-side javascript 8405 . 8409) (nil face web-mode-constant-face 8405 . 8409) (nil part-side javascript 8392 . 8405) (nil part-side javascript 8391 . 8392) (nil face (rainbow-delimiters-depth-7-face) 8391 . 8392) (nil part-side javascript 8390 . 8391) (nil face (rainbow-delimiters-depth-8-face) 8390 . 8391) (nil part-side javascript 8387 . 8390) (nil part-side javascript 8380 . 8387) (nil face web-mode-variable-name-face 8380 . 8387) (nil part-side javascript 8363 . 8380) (nil part-side javascript 8357 . 8363) (nil face web-mode-variable-name-face 8357 . 8363) (nil part-side javascript 8355 . 8357) (nil part-side javascript 8351 . 8355) (nil face web-mode-constant-face 8351 . 8355) (nil part-side javascript 8349 . 8351) (nil part-side javascript 8344 . 8349) (nil face web-mode-variable-name-face 8344 . 8349) (nil part-side javascript 8343 . 8344) (nil face (rainbow-delimiters-depth-8-face) 8343 . 8344) (nil part-side javascript 8326 . 8343) (nil part-side javascript 8325 . 8326) (nil face (rainbow-delimiters-depth-7-face) 8325 . 8326) (nil part-side javascript 8322 . 8325) (nil part-side javascript 8321 . 8322) (nil face (rainbow-delimiters-depth-7-face) 8321 . 8322) (nil part-side javascript 8320 . 8321) (nil part-token string 8320 . 8321) (nil syntax-table (15) 8320 . 8321) (nil font-lock-face web-mode-javascript-string-face 8320 . 8321) (nil part-side javascript 8315 . 8320) (nil part-token string 8315 . 8320) (nil font-lock-face web-mode-javascript-string-face 8315 . 8320) (nil part-side javascript 8314 . 8315) (nil part-token string 8314 . 8315) (nil syntax-table (15) 8314 . 8315) (nil font-lock-face web-mode-javascript-string-face 8314 . 8315) (nil part-side javascript 8313 . 8314) (nil face (rainbow-delimiters-depth-7-face) 8313 . 8314) (nil part-side javascript 8197 . 8313) (nil part-side javascript 8196 . 8197) (nil part-side javascript 8195 . 8196) (nil face (rainbow-delimiters-depth-7-face) 8195 . 8196) (nil part-side javascript 8182 . 8195) (nil part-side javascript 8178 . 8182) (nil face web-mode-constant-face 8178 . 8182) (nil part-side javascript 8140 . 8178) (nil part-side javascript 8139 . 8140) (nil part-side javascript 8138 . 8139) (nil face (rainbow-delimiters-depth-7-face) 8138 . 8139) (nil part-side javascript 8137 . 8138) (nil part-side javascript 8136 . 8137) (nil face (rainbow-delimiters-depth-7-face) 8136 . 8137) (nil part-side javascript 8124 . 8136) (nil part-side javascript 8123 . 8124) (nil face (rainbow-delimiters-depth-8-face) 8123 . 8124) (nil part-side javascript 8108 . 8123) (nil part-side javascript 8107 . 8108) (nil face (rainbow-delimiters-depth-8-face) 8107 . 8108) (nil part-side javascript 8103 . 8107) (nil face web-mode-function-call-face 8103 . 8107) (nil part-side javascript 8096 . 8103) (nil part-side javascript 8095 . 8096) (nil face (rainbow-delimiters-depth-7-face) 8095 . 8096) (nil part-side javascript 8094 . 8095) (nil part-side javascript 8092 . 8094) (nil face web-mode-keyword-face 8092 . 8094) (nil part-side javascript 8080 . 8092) (nil part-side javascript 8079 . 8080) (nil part-side javascript 8078 . 8079) (nil face (rainbow-delimiters-depth-6-face) 8078 . 8079) (nil part-side javascript 8077 . 8078) (nil part-side javascript 8073 . 8077) (nil face web-mode-keyword-face 8073 . 8077) (nil part-side javascript 8072 . 8073) (nil part-side javascript 8071 . 8072) (nil face (rainbow-delimiters-depth-6-face) 8071 . 8072) (nil part-side javascript 8060 . 8071) (nil part-side javascript 8059 . 8060) (nil face (rainbow-delimiters-depth-7-face) 8059 . 8060) (nil part-side javascript 8058 . 8059) (nil face (rainbow-delimiters-depth-8-face) 8058 . 8059) (nil part-side javascript 8055 . 8058) (nil part-side javascript 8048 . 8055) (nil face web-mode-variable-name-face 8048 . 8055) (nil part-side javascript 8031 . 8048) (nil part-side javascript 8025 . 8031) (nil face web-mode-variable-name-face 8025 . 8031) (nil part-side javascript 8023 . 8025) (nil part-side javascript 8019 . 8023) (nil face web-mode-constant-face 8019 . 8023) (nil part-side javascript 8017 . 8019) (nil part-side javascript 8012 . 8017) (nil face web-mode-variable-name-face 8012 . 8017) (nil part-side javascript 8011 . 8012) (nil face (rainbow-delimiters-depth-8-face) 8011 . 8012) (nil part-side javascript 8009 . 8011) (nil part-side javascript 8008 . 8009) (nil face (rainbow-delimiters-depth-8-face) 8008 . 8009) (nil part-side javascript 8005 . 8008) (nil part-side javascript 7998 . 8005) (nil face web-mode-variable-name-face 7998 . 8005) (nil part-side javascript 7981 . 7998) (nil part-side javascript 7975 . 7981) (nil face web-mode-variable-name-face 7975 . 7981) (nil part-side javascript 7973 . 7975) (nil part-side javascript 7969 . 7973) (nil face web-mode-constant-face 7969 . 7973) (nil part-side javascript 7967 . 7969) (nil part-side javascript 7962 . 7967) (nil face web-mode-variable-name-face 7962 . 7967) (nil part-side javascript 7961 . 7962) (nil face (rainbow-delimiters-depth-8-face) 7961 . 7962) (nil part-side javascript 7960 . 7961) (nil face (rainbow-delimiters-depth-7-face) 7960 . 7961) (nil part-side javascript 7957 . 7960) (nil part-side javascript 7956 . 7957) (nil face (rainbow-delimiters-depth-7-face) 7956 . 7957) (nil part-side javascript 7955 . 7956) (nil part-token string 7955 . 7956) (nil syntax-table (15) 7955 . 7956) (nil font-lock-face web-mode-javascript-string-face 7955 . 7956) (nil part-side javascript 7950 . 7955) (nil part-token string 7950 . 7955) (nil font-lock-face web-mode-javascript-string-face 7950 . 7955) (nil part-side javascript 7949 . 7950) (nil part-token string 7949 . 7950) (nil syntax-table (15) 7949 . 7950) (nil font-lock-face web-mode-javascript-string-face 7949 . 7950) (nil part-side javascript 7948 . 7949) (nil face (rainbow-delimiters-depth-7-face) 7948 . 7949) (nil part-side javascript 7923 . 7948) (nil part-side javascript 7922 . 7923) (nil part-side javascript 7921 . 7922) (nil face (rainbow-delimiters-depth-6-face) 7921 . 7922) (nil part-side javascript 7920 . 7921) (nil part-side javascript 7919 . 7920) (nil face (rainbow-delimiters-depth-6-face) 7919 . 7920) (nil part-side javascript 7899 . 7919) (nil part-side javascript 7898 . 7899) (nil face (rainbow-delimiters-depth-6-face) 7898 . 7899) (nil part-side javascript 7897 . 7898) (nil part-side javascript 7895 . 7897) (nil face web-mode-keyword-face 7895 . 7897) (nil part-side javascript 7894 . 7895) (nil part-side javascript 7890 . 7894) (nil face web-mode-keyword-face 7890 . 7894) (nil part-side javascript 7889 . 7890) (nil part-side javascript 7888 . 7889) (nil face (rainbow-delimiters-depth-6-face) 7888 . 7889) (nil part-side javascript 7877 . 7888) (nil part-side javascript 7876 . 7877) (nil face (rainbow-delimiters-depth-7-face) 7876 . 7877) (nil part-side javascript 7875 . 7876) (nil face (rainbow-delimiters-depth-8-face) 7875 . 7876) (nil part-side javascript 7872 . 7875) (nil part-side javascript 7865 . 7872) (nil face web-mode-variable-name-face 7865 . 7872) (nil part-side javascript 7848 . 7865) (nil part-side javascript 7842 . 7848) (nil face web-mode-variable-name-face 7842 . 7848) (nil part-side javascript 7840 . 7842) (nil part-side javascript 7836 . 7840) (nil face web-mode-constant-face 7836 . 7840) (nil part-side javascript 7834 . 7836) (nil part-side javascript 7829 . 7834) (nil face web-mode-variable-name-face 7829 . 7834) (nil part-side javascript 7828 . 7829) (nil face (rainbow-delimiters-depth-8-face) 7828 . 7829) (nil part-side javascript 7819 . 7828) (nil part-side javascript 7818 . 7819) (nil face (rainbow-delimiters-depth-7-face) 7818 . 7819) (nil part-side javascript 7815 . 7818) (nil part-side javascript 7814 . 7815) (nil face (rainbow-delimiters-depth-7-face) 7814 . 7815) (nil part-side javascript 7813 . 7814) (nil part-token string 7813 . 7814) (nil syntax-table (15) 7813 . 7814) (nil font-lock-face web-mode-javascript-string-face 7813 . 7814) (nil part-side javascript 7808 . 7813) (nil part-token string 7808 . 7813) (nil font-lock-face web-mode-javascript-string-face 7808 . 7813) (nil part-side javascript 7807 . 7808) (nil part-token string 7807 . 7808) (nil syntax-table (15) 7807 . 7808) (nil font-lock-face web-mode-javascript-string-face 7807 . 7808) (nil part-side javascript 7806 . 7807) (nil face (rainbow-delimiters-depth-7-face) 7806 . 7807) (nil part-side javascript 7776 . 7806) (nil part-side javascript 7775 . 7776) (nil face (rainbow-delimiters-depth-7-face) 7775 . 7776) (nil part-side javascript 7774 . 7775) (nil part-token string 7774 . 7775) (nil syntax-table (15) 7774 . 7775) (nil font-lock-face web-mode-javascript-string-face 7774 . 7775) (nil part-side javascript 7767 . 7774) (nil part-token string 7767 . 7774) (nil font-lock-face web-mode-javascript-string-face 7767 . 7774) (nil part-side javascript 7766 . 7767) (nil part-token string 7766 . 7767) (nil syntax-table (15) 7766 . 7767) (nil font-lock-face web-mode-javascript-string-face 7766 . 7767) (nil part-side javascript 7765 . 7766) (nil face (rainbow-delimiters-depth-7-face) 7765 . 7766) (nil part-side javascript 7729 . 7765) (nil part-side javascript 7728 . 7729) (nil face (rainbow-delimiters-depth-7-face) 7728 . 7729) (nil part-side javascript 7727 . 7728) (nil part-token string 7727 . 7728) (nil syntax-table (15) 7727 . 7728) (nil font-lock-face web-mode-javascript-string-face 7727 . 7728) (nil part-side javascript 7721 . 7727) (nil part-token string 7721 . 7727) (nil font-lock-face web-mode-javascript-string-face 7721 . 7727) (nil part-side javascript 7720 . 7721) (nil part-token string 7720 . 7721) (nil syntax-table (15) 7720 . 7721) (nil font-lock-face web-mode-javascript-string-face 7720 . 7721) (nil part-side javascript 7719 . 7720) (nil face (rainbow-delimiters-depth-7-face) 7719 . 7720) (nil part-side javascript 7700 . 7719) (nil part-side javascript 7699 . 7700) (nil syntax-table (15) 7699 . 7700) (nil part-side javascript 7698 . 7699) (nil part-token string 7698 . 7699) (nil font-lock-face web-mode-javascript-string-face 7698 . 7699) (nil part-side javascript 7694 . 7698) (nil part-token string 7694 . 7698) (nil font-lock-face web-mode-javascript-string-face 7694 . 7698) (nil part-side javascript 7693 . 7694) (nil part-token string 7693 . 7694) (nil syntax-table (15) 7693 . 7694) (nil font-lock-face web-mode-javascript-string-face 7693 . 7694) (nil part-side javascript 7690 . 7693) (nil part-side javascript 7689 . 7690) (nil face (rainbow-delimiters-depth-7-face) 7689 . 7690) (nil part-side javascript 7688 . 7689) (nil part-token string 7688 . 7689) (nil syntax-table (15) 7688 . 7689) (nil font-lock-face web-mode-javascript-string-face 7688 . 7689) (nil part-side javascript 7682 . 7688) (nil part-token string 7682 . 7688) (nil font-lock-face web-mode-javascript-string-face 7682 . 7688) (nil part-side javascript 7681 . 7682) (nil part-token string 7681 . 7682) (nil syntax-table (15) 7681 . 7682) (nil font-lock-face web-mode-javascript-string-face 7681 . 7682) (nil part-side javascript 7680 . 7681) (nil face (rainbow-delimiters-depth-7-face) 7680 . 7681) (nil part-side javascript 7661 . 7680) (nil part-side javascript 7660 . 7661) (nil part-side javascript 7659 . 7660) (nil face (rainbow-delimiters-depth-7-face) 7659 . 7660) (nil part-side javascript 7658 . 7659) (nil face (rainbow-delimiters-depth-7-face) 7658 . 7659) (nil part-side javascript 7650 . 7658) (nil face web-mode-function-call-face 7650 . 7658) (nil part-side javascript 7635 . 7650) (nil part-side javascript 7634 . 7635) (nil face (rainbow-delimiters-depth-7-face) 7634 . 7635) (nil part-side javascript 7633 . 7634) (nil part-token string 7633 . 7634) (nil syntax-table (15) 7633 . 7634) (nil font-lock-face web-mode-javascript-string-face 7633 . 7634) (nil part-side javascript 7628 . 7633) (nil part-token string 7628 . 7633) (nil font-lock-face web-mode-javascript-string-face 7628 . 7633) (nil part-side javascript 7627 . 7628) (nil part-token string 7627 . 7628) (nil syntax-table (15) 7627 . 7628) (nil font-lock-face web-mode-javascript-string-face 7627 . 7628) (nil part-side javascript 7626 . 7627) (nil face (rainbow-delimiters-depth-7-face) 7626 . 7627) (nil part-side javascript 7607 . 7626) (nil part-side javascript 7606 . 7607) (nil syntax-table (15) 7606 . 7607) (nil part-side javascript 7604 . 7606) (nil part-token string 7604 . 7606) (nil font-lock-face web-mode-javascript-string-face 7604 . 7606) (nil part-side javascript 7603 . 7604) (nil part-token string 7603 . 7604) (nil syntax-table (15) 7603 . 7604) (nil font-lock-face web-mode-javascript-string-face 7603 . 7604) (nil part-side javascript 7600 . 7603) (nil part-side javascript 7599 . 7600) (nil face (rainbow-delimiters-depth-7-face) 7599 . 7600) (nil part-side javascript 7598 . 7599) (nil part-token string 7598 . 7599) (nil syntax-table (15) 7598 . 7599) (nil font-lock-face web-mode-javascript-string-face 7598 . 7599) (nil part-side javascript 7590 . 7598) (nil part-token string 7590 . 7598) (nil font-lock-face web-mode-javascript-string-face 7590 . 7598) (nil part-side javascript 7589 . 7590) (nil part-token string 7589 . 7590) (nil syntax-table (15) 7589 . 7590) (nil font-lock-face web-mode-javascript-string-face 7589 . 7590) (nil part-side javascript 7588 . 7589) (nil face (rainbow-delimiters-depth-7-face) 7588 . 7589) (nil part-side javascript 7568 . 7588) (nil part-side javascript 7567 . 7568) (nil face (rainbow-delimiters-depth-7-face) 7567 . 7568) (nil part-side javascript 7560 . 7567) (nil part-side javascript 7559 . 7560) (nil face (rainbow-delimiters-depth-7-face) 7559 . 7560) (nil part-side javascript 7558 . 7559) (nil face (rainbow-delimiters-depth-7-face) 7558 . 7559) (nil part-side javascript 7546 . 7558) (nil part-side javascript 7545 . 7546) (nil face (rainbow-delimiters-depth-7-face) 7545 . 7546) (nil part-side javascript 7537 . 7545) (nil part-side javascript 7533 . 7537) (nil face web-mode-constant-face 7533 . 7537) (nil part-side javascript 7530 . 7533) (nil part-side javascript 7529 . 7530) (nil face (rainbow-delimiters-depth-7-face) 7529 . 7530) (nil part-side javascript 7528 . 7529) (nil part-token string 7528 . 7529) (nil syntax-table (15) 7528 . 7529) (nil font-lock-face web-mode-javascript-string-face 7528 . 7529) (nil part-side javascript 7523 . 7528) (nil part-token string 7523 . 7528) (nil font-lock-face web-mode-javascript-string-face 7523 . 7528) (nil part-side javascript 7522 . 7523) (nil part-token string 7522 . 7523) (nil syntax-table (15) 7522 . 7523) (nil font-lock-face web-mode-javascript-string-face 7522 . 7523) (nil part-side javascript 7521 . 7522) (nil face (rainbow-delimiters-depth-7-face) 7521 . 7522) (nil part-side javascript 7502 . 7521) (nil part-side javascript 7501 . 7502) (nil part-side javascript 7500 . 7501) (nil face (rainbow-delimiters-depth-7-face) 7500 . 7501) (nil part-side javascript 7499 . 7500) (nil face (rainbow-delimiters-depth-7-face) 7499 . 7500) (nil part-side javascript 7496 . 7499) (nil part-side javascript 7489 . 7496) (nil face web-mode-variable-name-face 7489 . 7496) (nil part-side javascript 7488 . 7489) (nil part-side javascript 7483 . 7488) (nil face web-mode-keyword-face 7483 . 7488) (nil part-side javascript 7471 . 7483) (nil part-side javascript 7470 . 7471) (nil part-side javascript 7469 . 7470) (nil face (rainbow-delimiters-depth-6-face) 7469 . 7470) (nil part-side javascript 7468 . 7469) (nil part-side javascript 7467 . 7468) (nil face (rainbow-delimiters-depth-6-face) 7467 . 7468) (nil part-side javascript 7432 . 7467) (nil part-side javascript 7431 . 7432) (nil face (rainbow-delimiters-depth-6-face) 7431 . 7432) (nil part-side javascript 7430 . 7431) (nil part-side javascript 7428 . 7430) (nil face web-mode-keyword-face 7428 . 7430) (nil part-side javascript 7418 . 7428) (nil part-side javascript 7417 . 7418) (nil syntax-table (15) 7417 . 7418) (nil part-side javascript 7416 . 7417) (nil part-token string 7416 . 7417) (nil font-lock-face web-mode-javascript-string-face 7416 . 7417) (nil rear-nonsticky t 7415 . 7416) (nil part-side javascript 7415 . 7416) (nil part-token string 7415 . 7416) (nil font-lock-face web-mode-javascript-string-face 7415 . 7416) (nil part-side javascript 7404 . 7415) (nil part-token string 7404 . 7415) (nil font-lock-face web-mode-javascript-string-face 7404 . 7415) (nil part-side javascript 7403 . 7404) (nil part-token string 7403 . 7404) (nil syntax-table (15) 7403 . 7404) (nil font-lock-face web-mode-javascript-string-face 7403 . 7404) (nil part-side javascript 7402 . 7403) (nil part-side javascript 7400 . 7402) (nil part-side javascript 7399 . 7400) (nil face (rainbow-delimiters-depth-6-face) 7399 . 7400) (nil part-side javascript 7398 . 7399) (nil part-token string 7398 . 7399) (nil syntax-table (15) 7398 . 7399) (nil font-lock-face web-mode-javascript-string-face 7398 . 7399) (nil part-side javascript 7394 . 7398) (nil part-token string 7394 . 7398) (nil font-lock-face web-mode-javascript-string-face 7394 . 7398) (nil part-side javascript 7393 . 7394) (nil part-token string 7393 . 7394) (nil syntax-table (15) 7393 . 7394) (nil font-lock-face web-mode-javascript-string-face 7393 . 7394) (nil part-side javascript 7392 . 7393) (nil face (rainbow-delimiters-depth-6-face) 7392 . 7393) (nil part-side javascript 7369 . 7392) (nil part-side javascript 7355 . 7369) (nil part-side javascript 7354 . 7355) (nil face (rainbow-delimiters-depth-6-face) 7354 . 7355) (nil part-side javascript 7353 . 7354) (nil part-token string 7353 . 7354) (nil syntax-table (15) 7353 . 7354) (nil font-lock-face web-mode-javascript-string-face 7353 . 7354) (nil part-side javascript 7344 . 7353) (nil part-token string 7344 . 7353) (nil font-lock-face web-mode-javascript-string-face 7344 . 7353) (nil part-side javascript 7343 . 7344) (nil part-token string 7343 . 7344) (nil syntax-table (15) 7343 . 7344) (nil font-lock-face web-mode-javascript-string-face 7343 . 7344) (nil part-side javascript 7342 . 7343) (nil face (rainbow-delimiters-depth-6-face) 7342 . 7343) (nil part-side javascript 7319 . 7342) (nil part-side javascript 7318 . 7319) (nil part-side javascript 7317 . 7318) (nil face (rainbow-delimiters-depth-5-face) 7317 . 7318) (nil part-side javascript 7316 . 7317) (nil part-side javascript 7315 . 7316) (nil face (rainbow-delimiters-depth-5-face) 7315 . 7316) (nil part-side javascript 7314 . 7315) (nil part-token string 7314 . 7315) (nil syntax-table (15) 7314 . 7315) (nil font-lock-face web-mode-javascript-string-face 7314 . 7315) (nil part-side javascript 7312 . 7314) (nil part-token string 7312 . 7314) (nil font-lock-face web-mode-javascript-string-face 7312 . 7314) (nil part-side javascript 7311 . 7312) (nil part-token string 7311 . 7312) (nil syntax-table (15) 7311 . 7312) (nil font-lock-face web-mode-javascript-string-face 7311 . 7312) (nil part-side javascript 7293 . 7311) (nil part-side javascript 7292 . 7293) (nil part-token string 7292 . 7293) (nil syntax-table (15) 7292 . 7293) (nil font-lock-face web-mode-javascript-string-face 7292 . 7293) (nil part-side javascript 7289 . 7292) (nil part-token string 7289 . 7292) (nil font-lock-face web-mode-javascript-string-face 7289 . 7292) (nil part-side javascript 7288 . 7289) (nil part-token string 7288 . 7289) (nil syntax-table (15) 7288 . 7289) (nil font-lock-face web-mode-javascript-string-face 7288 . 7289) (nil part-side javascript 7274 . 7288) (nil part-side javascript 7273 . 7274) (nil face (rainbow-delimiters-depth-5-face) 7273 . 7274) (nil part-side javascript 7272 . 7273) (nil part-side javascript 7270 . 7272) (nil face web-mode-keyword-face 7270 . 7272) (nil part-side javascript 7269 . 7270) (nil part-side javascript 7265 . 7269) (nil face web-mode-keyword-face 7265 . 7269) (nil part-side javascript 7257 . 7265) (7257 . 8498)) nil (25571 44142 471984 504000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -7257) 7251) nil (25571 44142 471884 799000) 0 nil])
([nil nil ((#("|| filtertype == 'or'" 0 17 (part-side javascript) 17 18 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 18 20 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 20 21 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7286) (undo-tree-id429 . -21) (undo-tree-id430 . -21)) nil (25571 44142 471883 119000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7285) (undo-tree-id427 . -1) (undo-tree-id428 . -1) 7286) nil (25571 44142 471879 708000) 0 nil])
([nil nil ((#("rExpression" 0 11 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7375) (undo-tree-id424 . -11) (undo-tree-id425 . -11) (undo-tree-id426 . -11)) nil (25571 44142 471876 349000) 0 nil])
([nil nil ((#("O" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7374) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 7375) nil (25571 44142 471871 638000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7386 . 7387) (nil fontified t 7377 . 7387) (nil part-side javascript 7377 . 7387) (nil part-token string 7377 . 7387) (nil font-lock-face web-mode-javascript-string-face 7377 . 7387) (nil fontified t 7374 . 7377) (nil part-side javascript 7374 . 7377) (nil part-token string 7374 . 7377) (nil font-lock-face web-mode-javascript-string-face 7374 . 7377) (7374 . 7387)) nil (25571 44142 471866 961000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7281) (undo-tree-id418 . -1) (#("n" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7282) (undo-tree-id419 . -1) (#("d" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7283) (undo-tree-id420 . -1) 7284) nil (25571 44142 471863 771000) 0 nil])
([nil nil ((7281 . 7284)) nil (25571 44142 471859 25000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -7328) (undo-tree-id408 . -1) (#("i" 0 1 (part-side javascript)) . -7329) (undo-tree-id409 . -1) (#("l" 0 1 (part-side javascript)) . -7330) (undo-tree-id410 . -1) (#("t" 0 1 (part-side javascript)) . -7331) (undo-tree-id411 . -1) (#("e" 0 1 (part-side javascript)) . -7332) (undo-tree-id412 . -1) (#("r" 0 1 (part-side javascript)) . -7333) (undo-tree-id413 . -1) (#("t" 0 1 (part-side javascript)) . -7334) (undo-tree-id414 . -1) (#("y" 0 1 (part-side javascript)) . -7335) (undo-tree-id415 . -1) (#("p" 0 1 (part-side javascript)) . -7336) (undo-tree-id416 . -1) (#("e" 0 1 (part-side javascript)) . -7337) (undo-tree-id417 . -1) 7338) nil (25571 44142 471855 901000) 0 nil])
([nil nil ((7328 . 7330)) nil (25571 44142 471841 15000) 0 nil])
([nil nil ((7329 . 7332)) nil (25571 44142 471840 115000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7281) (undo-tree-id405 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7282) (undo-tree-id406 . -1) (#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7283) (undo-tree-id407 . -1) 7284) nil (25571 44142 471838 504000) 0 nil])
([nil nil ((7281 . 7284)) nil (25571 44142 471833 832000) 0 nil])
([nil nil ((#("          if (replacecurrentfilter && wrap_simple) {
            const nfilter = {}
            nfilter['field'] = this.mheader[currentindex][cursorX]
            nfilter['operator'] = '='
            nfilter['value'] = cursorvalue.toString()
            nfilter['active'] = 'true'
            nfilter['parent'] = currentfilter
            nfilter['rulepos'] = 0
            currentfilter['rules'] = [nfilter, {empty: true, parent: currentfilter, rulepos: 1}]
          } else" 0 10 (part-side javascript) 10 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 14 (part-side javascript face (rainbow-delimiters-depth-6-face)) 14 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-6-face)) 50 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-6-face)) 52 53 (part-side javascript) 53 65 (part-side javascript) 65 70 (part-side javascript face web-mode-keyword-face) 70 71 (part-side javascript) 71 78 (part-side javascript face web-mode-variable-name-face) 78 81 (part-side javascript) 81 82 (part-side javascript face (rainbow-delimiters-depth-7-face)) 82 83 (part-side javascript face (rainbow-delimiters-depth-7-face)) 83 84 (part-side javascript) 84 103 (part-side javascript) 103 104 (part-side javascript face (rainbow-delimiters-depth-7-face)) 104 105 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 105 110 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 110 111 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 111 112 (part-side javascript face (rainbow-delimiters-depth-7-face)) 112 115 (part-side javascript) 115 119 (part-side javascript face web-mode-constant-face) 119 127 (part-side javascript) 127 128 (part-side javascript face (rainbow-delimiters-depth-7-face)) 128 140 (part-side javascript) 140 141 (part-side javascript face (rainbow-delimiters-depth-7-face)) 141 142 (part-side javascript face (rainbow-delimiters-depth-7-face)) 142 149 (part-side javascript) 149 150 (part-side javascript face (rainbow-delimiters-depth-7-face)) 150 170 (part-side javascript) 170 171 (part-side javascript face (rainbow-delimiters-depth-7-face)) 171 172 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 172 180 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 180 181 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 181 182 (part-side javascript face (rainbow-delimiters-depth-7-face)) 182 185 (part-side javascript) 185 186 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 186 188 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 188 189 (part-side javascript syntax-table (15)) 189 208 (part-side javascript) 208 209 (part-side javascript face (rainbow-delimiters-depth-7-face)) 209 210 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 210 215 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 215 216 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 216 217 (part-side javascript face (rainbow-delimiters-depth-7-face)) 217 232 (part-side javascript) 232 240 (part-side javascript face web-mode-function-call-face) 240 241 (part-side javascript face (rainbow-delimiters-depth-7-face)) 241 242 (part-side javascript face (rainbow-delimiters-depth-7-face)) 242 262 (part-side javascript) 262 263 (part-side javascript face (rainbow-delimiters-depth-7-face)) 263 264 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 264 270 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 270 271 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 271 272 (part-side javascript face (rainbow-delimiters-depth-7-face)) 272 275 (part-side javascript) 275 276 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 276 280 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 280 281 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 281 282 (part-side javascript syntax-table (15)) 282 301 (part-side javascript) 301 302 (part-side javascript face (rainbow-delimiters-depth-7-face)) 302 303 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 303 309 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 309 310 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 310 311 (part-side javascript face (rainbow-delimiters-depth-7-face)) 311 347 (part-side javascript) 347 348 (part-side javascript face (rainbow-delimiters-depth-7-face)) 348 349 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 349 356 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 356 357 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 357 358 (part-side javascript face (rainbow-delimiters-depth-7-face)) 358 388 (part-side javascript) 388 389 (part-side javascript face (rainbow-delimiters-depth-7-face)) 389 390 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 390 395 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 395 396 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 396 397 (part-side javascript face (rainbow-delimiters-depth-7-face)) 397 400 (part-side javascript) 400 401 (part-side javascript face (rainbow-delimiters-depth-7-face)) 401 410 (part-side javascript) 410 411 (part-side javascript face (rainbow-delimiters-depth-8-face)) 411 416 (part-side javascript face web-mode-variable-name-face) 416 418 (part-side javascript) 418 422 (part-side javascript face web-mode-constant-face) 422 424 (part-side javascript) 424 430 (part-side javascript face web-mode-variable-name-face) 430 447 (part-side javascript) 447 454 (part-side javascript face web-mode-variable-name-face) 454 457 (part-side javascript) 457 458 (part-side javascript face (rainbow-delimiters-depth-8-face)) 458 459 (part-side javascript face (rainbow-delimiters-depth-7-face)) 459 470 (part-side javascript) 470 471 (part-side javascript face (rainbow-delimiters-depth-6-face)) 471 472 (part-side javascript) 472 476 (part-side javascript face web-mode-keyword-face)) . 7384) (undo-tree-id402 . -476) (undo-tree-id403 . -53) (undo-tree-id404 . -476)) nil (25571 44142 471832 633000) 0 nil])
([nil nil ((7384 . 7394) (#(" " 0 1 (part-side javascript)) . 7384)) nil (25571 44142 471828 261000) 0 nil])
([nil nil ((7572 . 7582) (#(" " 0 1 (part-side javascript)) . 7571) (undo-tree-id401 . -1) (7572 . 7573)) nil (25571 44142 471826 856000) 0 nil])
([nil nil ((7285 . 7290)) nil (25571 44142 471824 322000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -7286) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("n" 0 1 (part-side javascript)) . -7287) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("d" 0 1 (part-side javascript)) . -7288) (undo-tree-id399 . -1) (#(" " 0 1 (part-side javascript)) . -7289) (undo-tree-id400 . -1) 7290) nil (25571 44142 471822 472000) 0 nil])
([nil nil ((7286 . 7291)) nil (25571 44142 471814 314000) 0 nil])
([nil nil ((7290 . 7294)) nil (25571 44142 471813 231000) 0 nil])
([nil nil ((7295 . 7305)) nil (25571 44142 471812 371000) 0 nil])
([nil nil ((7305 . 7317)) nil (25571 44142 471811 425000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7316) (undo-tree-id394 . -1) 7317) nil (25571 44142 471810 305000) 0 nil])
([nil nil ((#("not" 0 3 (part-side javascript)) . 7296) (undo-tree-id392 . -3) (undo-tree-id393 . -3)) nil (25571 44142 471807 953000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7295) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 7296) nil (25571 44142 471804 636000) 0 nil])
([nil nil ((7289 . 7291) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7289) (7289 . 7290)) nil (25571 44142 471801 151000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 7290)) nil (25571 44142 471799 720000) 0 nil])
([nil nil ((7314 . 7315)) nil (25571 44142 471798 762000) 0 nil])
([nil nil ((7289 . 7290)) nil (25571 44142 471797 801000) 0 nil])
([nil nil ((7314 . 7320)) nil (25571 44142 471796 874000) 0 nil])
([nil nil ((7319 . 7323)) nil (25571 44142 471795 935000) 0 nil])
([nil nil ((7324 . 7342)) nil (25571 44142 471795 22000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7341) (undo-tree-id389 . -1) 7342) nil (25571 44142 471793 788000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7045) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("g" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7046) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("g" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7047) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7048) (undo-tree-id387 . -1) (undo-tree-id388 . -1) 7049) nil (25571 44142 471790 102000) 0 nil])
([nil nil ((7045 . 7049)) nil (25571 44142 471779 329000) 0 nil])
([nil nil ((7314 . 7319)) nil (25571 44142 471778 461000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 7319) (#("n" 0 1 (part-side javascript)) . 7319) (#("i" 0 1 (part-side javascript face web-mode-keyword-face)) . 7319) (#(" " 0 1 (part-side javascript)) . 7319) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7319) (#("t" 0 1 (part-side javascript)) . 7319) (#("r" 0 1 (part-side javascript)) . 7319) (#("o" 0 1 (part-side javascript)) . 7319) (#("s" 0 1 (part-side javascript)) . 7319) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7319) (#(" " 0 1 (part-side javascript)) . 7319) (#("|" 0 1 (part-side javascript)) . 7319) (#("|" 0 1 (part-side javascript)) . 7319) (#(" " 0 1 (part-side javascript)) . 7319)) nil (25571 44142 471775 612000) 0 nil])
([nil nil ((7332 . 7341)) nil (25571 44142 471771 915000) 0 nil])
([nil nil ((7341 . 7343)) nil (25571 44142 471770 978000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -7339) (undo-tree-id377 . -1) (#(" " 0 1 (part-side javascript)) . -7340) (undo-tree-id378 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -7341) (undo-tree-id379 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -7342) (undo-tree-id380 . -1) 7343) nil (25571 44142 471769 89000) 0 nil])
([nil nil ((7339 . 7340)) nil (25571 44142 471762 677000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7339) (undo-tree-id376 . -1) 7340) nil (25571 44142 471761 387000) 0 nil])
([nil nil ((7339 . 7340)) nil (25571 44142 471758 834000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -7338) (undo-tree-id374 . -1) (#("=" 0 1 (part-side javascript)) . -7339) (undo-tree-id375 . -1) 7340) nil (25571 44142 471756 507000) 0 nil])
([nil nil ((7338 . 7342)) nil (25571 44142 471745 247000) 0 nil])
([nil nil ((7342 . 7343)) nil (25571 44142 471744 243000) 0 nil])
([nil nil ((7342 . 7348)) nil (25571 44142 471742 569000) 0 nil])
([nil nil ((7348 . 7356)) nil (25571 44142 471735 436000) 0 nil])
([nil nil ((7298 . 7302) (t 25571 44142 516155 985000)) nil (25571 44164 920862 834000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . -7362) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) 7363) nil (25571 44164 920856 390000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript)) . -7298) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("o" 0 1 (part-side javascript)) . -7299) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("t" 0 1 (part-side javascript)) . -7300) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#(" " 0 1 (part-side javascript)) . -7301) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) 7302 (t 25571 44164 960062 19000)) nil (25571 44176 917694 443000) 0 nil])
([nil nil ((#("&& currentfilter.type != 'sortExpression'" 0 3 (part-side javascript) 3 25 (part-side javascript) 25 26 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 26 32 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 32 40 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 40 41 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7316) (undo-tree-id578 . -41) (undo-tree-id579 . -32) (undo-tree-id580 . -41) (t 25571 44176 952011 808000)) nil (25571 44186 463308 987000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7315) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 7316) nil (25571 44186 463302 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7326 . 7327) (nil part-side javascript 7326 . 7327) (nil part-token string 7326 . 7327) (nil syntax-table (15) 7326 . 7327) (nil font-lock-face web-mode-javascript-string-face 7326 . 7327) (nil part-side javascript 7318 . 7326) (nil part-token string 7318 . 7326) (nil font-lock-face web-mode-javascript-string-face 7318 . 7326) (nil part-side javascript 7312 . 7318) (nil part-token string 7312 . 7318) (nil font-lock-face web-mode-javascript-string-face 7312 . 7318) (nil part-side javascript 7311 . 7312) (nil part-token string 7311 . 7312) (nil syntax-table (15) 7311 . 7312) (nil font-lock-face web-mode-javascript-string-face 7311 . 7312) (nil part-side javascript 7289 . 7311) (nil part-side javascript 7286 . 7289) (7286 . 7327)) nil (25571 44186 463290 312000) 0 nil])
([nil nil ((7327 . 7328)) nil (25571 44186 463278 591000) 0 nil])
([nil nil ((#("'aggr' in " 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 5 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 5 6 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 6 7 (part-side javascript) 7 9 (part-side javascript face web-mode-keyword-face) 9 10 (part-side javascript)) . 7333) (undo-tree-id591 . -10) (undo-tree-id592 . -7) (undo-tree-id593 . -6) (undo-tree-id594 . -10) (t 25571 44186 503971 820000)) nil (25571 44219 292885 585000) 0 nil])
([nil nil ((7346 . 7352)) nil (25571 44219 292879 415000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . -7349) (undo-tree-id588 . -1) (#("r" 0 1 (part-side javascript)) . -7350) (undo-tree-id589 . -1) (#("e" 0 1 (part-side javascript)) . -7351) (undo-tree-id590 . -1) 7352) nil (25571 44219 292877 466000) 0 nil])
([nil nil ((7349 . 7352)) nil (25571 44219 292871 406000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -7351) (undo-tree-id587 . -1) 7352) nil (25571 44219 292869 721000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7351) (undo-tree-id585 . -1) (undo-tree-id586 . -1) 7352) nil (25571 44219 292865 893000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7332) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 7333) nil (25571 44219 292857 516000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -7308) (undo-tree-id596 . -1) 7309 (t 25571 44219 327801 70000)) nil (25571 45233 493496 293000) 0 nil])
([nil nil ((7308 . 7309)) nil (25571 45233 493492 544000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -7308) (undo-tree-id595 . -1) 7309) nil (25571 45233 493489 958000) 0 nil])
([nil nil ((7308 . 7309)) nil (25571 45233 493473 316000) 0 nil])
([nil nil ((6310 . 6319) (t 25571 45233 530901 895000)) nil (25571 45577 347564 681000) 0 nil])
([nil nil ((6321 . 6323) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6321) (6319 . 6322)) nil (25571 45577 347563 243000) 0 nil])
([nil nil ((6322 . 6329)) nil (25571 45577 347561 880000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -6328) (undo-tree-id623 . -1) 6329) nil (25571 45577 347560 721000) 0 nil])
([nil nil ((6328 . 6331)) nil (25571 45577 347558 307000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -6329) (undo-tree-id621 . -1) (#("p" 0 1 (part-side javascript)) . -6330) (undo-tree-id622 . -1) 6331) nil (25571 45577 347556 899000) 0 nil])
([nil nil ((6329 . 6333)) nil (25571 45577 347553 245000) 0 nil])
([nil nil ((6333 . 6335)) nil (25571 45577 347552 296000) 0 nil])
([nil nil ((6334 . 6341)) nil (25571 45577 347551 418000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6340) (undo-tree-id620 . -1) 6341) nil (25571 45577 347550 318000) 0 nil])
([nil nil ((6343 . 6345) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6343) (6342 . 6344)) nil (25571 45577 347548 12000) 0 nil])
([nil nil ((6346 . 6354) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 6345) (undo-tree-id618 . -8) (undo-tree-id619 . 10) (6353 . 6355) (6344 . 6354)) nil (25571 45577 347546 242000) 0 nil])
([nil nil ((6345 . 6355)) nil (25571 45577 347542 372000) 0 nil])
([nil nil ((#("
        if(filtertype='simple') {
          
        }" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 11 (part-side javascript face web-mode-keyword-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 23 (part-side javascript) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 30 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript face (rainbow-delimiters-depth-5-face)) 32 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-5-face)) 34 35 (part-side javascript) 35 45 (part-side javascript) 45 54 (part-side javascript) 54 55 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 6310) (undo-tree-id613 . -55) (undo-tree-id614 . -19) (undo-tree-id615 . -30) (undo-tree-id616 . -1) (undo-tree-id617 . -55)) nil (25571 45577 347540 978000) 0 nil])
([nil nil ((6571 . 6573)) nil (25571 45577 347533 533000) 0 nil])
([nil nil ((6572 . 6585)) nil (25571 45577 347532 645000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6584) (undo-tree-id612 . -1) 6585) nil (25571 45577 347531 606000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6578) (undo-tree-id606 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6579) (undo-tree-id607 . -1) (#("l" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6580) (undo-tree-id608 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6581) (undo-tree-id609 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6582) (undo-tree-id610 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6583) (undo-tree-id611 . -1) 6584) nil (25571 45577 347527 739000) 0 nil])
([nil nil ((6579 . 6581)) nil (25571 45577 347518 549000) 0 nil])
([nil nil ((6756 . 6773)) nil (25571 45577 347517 555000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -6770) (undo-tree-id603 . -1) (#("i" 0 1 (part-side javascript)) . -6771) (undo-tree-id604 . -1) (#("m" 0 1 (part-side javascript)) . -6772) (undo-tree-id605 . -1) 6773) nil (25571 45577 347515 864000) 0 nil])
([nil nil ((6770 . 6772)) nil (25571 45577 347510 512000) 0 nil])
([nil nil ((6771 . 6777)) nil (25571 45577 347509 440000) 0 nil])
([nil nil ((6778 . 6780)) nil (25571 45577 347508 502000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -6778) (undo-tree-id601 . -1) (#(" " 0 1 (part-side javascript)) . -6779) (undo-tree-id602 . -1) 6780) nil (25571 45577 347507 42000) 0 nil])
([nil nil ((6778 . 6783)) nil (25571 45577 347502 739000) 0 nil])
([nil nil ((6782 . 6785)) nil (25571 45577 347501 627000) 0 nil])
([nil nil ((6786 . 6789)) nil (25571 45577 347500 404000) 0 nil])
([nil nil ((#("=" 0 1 (part-side javascript)) . -6966) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("=" 0 1 (part-side javascript)) . -6967) (undo-tree-id599 . -1) (undo-tree-id600 . -1) 6968) nil (25571 45577 347498 480000) 0 nil])
([nil nil ((6966 . 6968)) nil (25571 45578 927463 716000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -6966) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#("n" 0 1 (part-side javascript face web-mode-keyword-face)) . -6967) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#(" " 0 1 (part-side javascript)) . -6968) (undo-tree-id672 . -1) 6969) nil (25571 45625 381315 309000) 0 nil] [nil nil ((6969 . 6971) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6969) (6969 . 6970)) ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6969) (6969 . 6970) (#("[]" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face)) 1 2 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6969) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) (25571 45578 377240 829000) 0 nil])
([nil nil ((6966 . 6969)) nil (25571 45625 381189 940000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6970)) ((6970 . 6971)) (25571 45578 29434 215000) 0 nil])
([nil nil ((6975 . 6979)) nil (25571 45625 381188 790000) 0 nil])
([nil nil ((6983 . 6984) (#(" " 0 1 (part-side javascript)) . -6983) (6983 . 6984) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6983) (6976 . 6984)) ((#(",simple]" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 8 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6976) (undo-tree-id624 . -1) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -7) (undo-tree-id629 . -7) (undo-tree-id630 . -7) (undo-tree-id631 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (6983 . 6984) (#(" " 0 1 (part-side javascript)) . 6983) (6983 . 6984) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6983)) (25571 45577 647007 0) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6975) (undo-tree-id664 . -1) (#("&" 0 1 (part-side javascript)) . -6976) (undo-tree-id665 . -1) (#("&" 0 1 (part-side javascript)) . -6977) (undo-tree-id666 . -1) (#(" " 0 1 (part-side javascript)) . -6978) (undo-tree-id667 . -1) 6979) nil (25571 45625 382661 745000) 0 nil])
([nil nil ((6977 . 6979)) ((#(" '" 0 1 (part-side javascript) 1 2 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 6977)) (25571 45577 348350 105000) 0 nil])
([nil nil ((6989 . 6991)) nil (25571 45761 696398 635000) 0 nil] [nil nil ((7015 . 7026)) ((#("
          " 0 1 (part-side javascript) 1 11 (part-side javascript)) . 7015) (undo-tree-id673 . -11) (undo-tree-id674 . -1) (undo-tree-id675 . -1)) (25571 45625 381165 769000) 0 nil])
([nil nil ((6985 . 6986)) ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 6985)) (25571 45577 347469 32000) 0 nil])
([nil nil ((7017 . 7028)) nil (25571 45761 696397 710000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 7045 . 7046) (nil part-side javascript 7045 . 7046) (nil face (rainbow-delimiters-depth-6-face) 7045 . 7046) (nil part-side javascript 7044 . 7045) (nil face (rainbow-delimiters-depth-6-face) 7044 . 7045) (nil part-side javascript 7041 . 7044) (nil part-side javascript 7034 . 7041) (nil face web-mode-variable-name-face 7034 . 7041) (nil part-side javascript 7033 . 7034) (nil part-side javascript 7028 . 7033) (nil face web-mode-keyword-face 7028 . 7033) (7028 . 7046)) nil (25571 45761 696396 115000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 7057) (undo-tree-id723 . -13) (undo-tree-id724 . -13)) nil (25571 45761 696392 729000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7063 . 7064) (nil part-side javascript 7057 . 7064) (7057 . 7064)) nil (25571 45761 696389 213000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -7088) (undo-tree-id710 . -1) (#("u" 0 1 (part-side javascript)) . -7089) (undo-tree-id711 . -1) (#("r" 0 1 (part-side javascript)) . -7090) (undo-tree-id712 . -1) (#("r" 0 1 (part-side javascript)) . -7091) (undo-tree-id713 . -1) (#("e" 0 1 (part-side javascript)) . -7092) (undo-tree-id714 . -1) (#("n" 0 1 (part-side javascript)) . -7093) (undo-tree-id715 . -1) (#("t" 0 1 (part-side javascript)) . -7094) (undo-tree-id716 . -1) (#("f" 0 1 (part-side javascript)) . -7095) (undo-tree-id717 . -1) (#("i" 0 1 (part-side javascript)) . -7096) (undo-tree-id718 . -1) (#("l" 0 1 (part-side javascript)) . -7097) (undo-tree-id719 . -1) (#("t" 0 1 (part-side javascript)) . -7098) (undo-tree-id720 . -1) (#("e" 0 1 (part-side javascript)) . -7099) (undo-tree-id721 . -1) (#("r" 0 1 (part-side javascript)) . -7100) (undo-tree-id722 . -1) 7101) nil (25571 45761 696385 346000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7094 . 7095) (nil part-side javascript 7088 . 7095) (7088 . 7095)) nil (25571 45761 696367 755000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -7133) (undo-tree-id697 . -1) (#("u" 0 1 (part-side javascript)) . -7134) (undo-tree-id698 . -1) (#("r" 0 1 (part-side javascript)) . -7135) (undo-tree-id699 . -1) (#("r" 0 1 (part-side javascript)) . -7136) (undo-tree-id700 . -1) (#("e" 0 1 (part-side javascript)) . -7137) (undo-tree-id701 . -1) (#("n" 0 1 (part-side javascript)) . -7138) (undo-tree-id702 . -1) (#("t" 0 1 (part-side javascript)) . -7139) (undo-tree-id703 . -1) (#("f" 0 1 (part-side javascript)) . -7140) (undo-tree-id704 . -1) (#("i" 0 1 (part-side javascript)) . -7141) (undo-tree-id705 . -1) (#("l" 0 1 (part-side javascript)) . -7142) (undo-tree-id706 . -1) (#("t" 0 1 (part-side javascript)) . -7143) (undo-tree-id707 . -1) (#("e" 0 1 (part-side javascript)) . -7144) (undo-tree-id708 . -1) (#("r" 0 1 (part-side javascript)) . -7145) (undo-tree-id709 . -1) 7146) nil (25571 45761 696364 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7139 . 7140) (nil part-side javascript 7133 . 7140) (7133 . 7140)) nil (25571 45761 696345 15000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -7177) (undo-tree-id684 . -1) (#("u" 0 1 (part-side javascript)) . -7178) (undo-tree-id685 . -1) (#("r" 0 1 (part-side javascript)) . -7179) (undo-tree-id686 . -1) (#("r" 0 1 (part-side javascript)) . -7180) (undo-tree-id687 . -1) (#("e" 0 1 (part-side javascript)) . -7181) (undo-tree-id688 . -1) (#("n" 0 1 (part-side javascript)) . -7182) (undo-tree-id689 . -1) (#("t" 0 1 (part-side javascript)) . -7183) (undo-tree-id690 . -1) (#("f" 0 1 (part-side javascript)) . -7184) (undo-tree-id691 . -1) (#("i" 0 1 (part-side javascript)) . -7185) (undo-tree-id692 . -1) (#("l" 0 1 (part-side javascript)) . -7186) (undo-tree-id693 . -1) (#("t" 0 1 (part-side javascript)) . -7187) (undo-tree-id694 . -1) (#("e" 0 1 (part-side javascript)) . -7188) (undo-tree-id695 . -1) (#("r" 0 1 (part-side javascript)) . -7189) (undo-tree-id696 . -1) 7190) nil (25571 45761 696341 424000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7183 . 7184) (nil part-side javascript 7177 . 7184) (7177 . 7184)) nil (25571 45761 696324 0) 0 nil])
([nil nil ((7288 . 7299)) nil (25571 45761 696322 697000) 0 nil])
([nil nil ((7312 . 7313) (7311 . 7313) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7311) (7299 . 7312)) nil (25571 45761 696321 532000) 0 nil])
([nil nil ((7314 . 7315)) nil (25571 45761 696320 13000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -7314) (undo-tree-id683 . -1) 7315) nil (25571 45761 696318 917000) 0 nil])
([nil nil ((7315 . 7317) (7314 . 7316) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7314) (7314 . 7315)) nil (25571 45761 696316 432000) 0 nil])
([nil nil ((7316 . 7320)) nil (25571 45761 696314 764000) 0 nil])
([nil nil ((7325 . 7327) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7325) (7322 . 7326)) nil (25571 45761 696313 490000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7326) (undo-tree-id682 . -1) 7327) nil (25571 45761 696311 828000) 0 nil])
([nil nil ((#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7325) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#("
        }" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 7326) (undo-tree-id681 . -1)) nil (25571 45761 696309 208000) 0 nil])
([nil nil ((7325 . 7333)) nil (25571 45761 696304 341000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7332) (undo-tree-id678 . -1) 7333) nil (25571 45761 696303 203000) 0 nil])
([nil nil ((7166 . 7177)) nil (25571 45761 696300 725000) 0 nil])
([nil nil ((7177 . 7181)) nil (25571 45761 696299 543000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -7180) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 7181) nil (25571 45761 696297 927000) 0 nil])
([nil nil ((7185 . 7187) (7184 . 7186) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7184) (7180 . 7185)) nil (25571 45761 696287 388000) 0 nil])
([nil nil ((7186 . 7192)) nil (25571 45761 696285 417000) 0 nil])
([nil nil ((7194 . 7197)) nil (25571 45761 696283 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7211 . 7212) (nil part-side javascript 7211 . 7212) (nil face (rainbow-delimiters-depth-6-face) 7211 . 7212) (nil part-side javascript 7210 . 7211) (nil part-side javascript 7209 . 7210) (nil face (rainbow-delimiters-depth-6-face) 7209 . 7210) (nil part-side javascript 7201 . 7209) (nil part-side javascript 7197 . 7201) (nil face web-mode-constant-face 7197 . 7201) (7197 . 7212)) nil (25571 45761 696276 414000) 0 nil])
([nil nil ((7378 . 7389) (t 25571 45761 732559 510000)) nil (25571 45805 104410 161000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -7387) (7389 . 7390)) nil (25571 45805 104402 916000) 0 nil])
([nil nil ((#("
          //delete currentfilter.rules" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 12 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 12 13 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 13 19 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 19 38 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 38 39 (rear-nonsticky t part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 6978) (undo-tree-id725 . -39) (undo-tree-id726 . -1) (undo-tree-id727 . -39) (undo-tree-id728 . -39) (undo-tree-id729 . -39) (undo-tree-id730 . -39) (undo-tree-id731 . -39) (undo-tree-id732 . -39) (undo-tree-id733 . -39) (undo-tree-id734 . -39) (undo-tree-id735 . -39) (undo-tree-id736 . -39) (undo-tree-id737 . -39) (undo-tree-id738 . -39) (t 25571 45805 136368 942000)) nil (25571 45812 921135 187000) 0 nil])
([nil nil ((6468 . 6471) (t 25571 45812 952334 647000)) nil (25571 45912 486071 690000) 0 nil])
([nil nil ((6456 . 6460)) nil (25571 45912 486070 592000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6458) (undo-tree-id790 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6459) (undo-tree-id791 . -1) 6460) nil (25571 45912 486069 270000) 0 nil])
([nil nil ((6458 . 6466)) nil (25571 45912 486065 767000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6478 . 6479) (nil rear-nonsticky t 6478 . 6479) (nil part-side javascript 6478 . 6479) (nil part-token string 6478 . 6479) (nil font-lock-face web-mode-javascript-string-face 6478 . 6479) (nil part-side javascript 6465 . 6478) (nil part-token string 6465 . 6478) (nil font-lock-face web-mode-javascript-string-face 6465 . 6478) (6465 . 6479)) nil (25571 45912 486064 409000) 0 nil])
([nil nil ((6652 . 6668)) nil (25571 45912 486061 895000) 0 nil])
([nil nil ((6668 . 6672)) nil (25571 45912 486061 39000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6671) (undo-tree-id789 . -1) 6672) nil (25571 45912 486059 837000) 0 nil])
([nil nil ((6679 . 6681) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6679) (6671 . 6680)) nil (25571 45912 486057 131000) 0 nil])
([nil nil ((6680 . 6682)) nil (25571 45912 486055 801000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6694 . 6695) (nil rear-nonsticky t 6694 . 6695) (nil part-side javascript 6694 . 6695) (nil part-token string 6694 . 6695) (nil font-lock-face web-mode-javascript-string-face 6694 . 6695) (nil part-side javascript 6681 . 6694) (nil part-token string 6681 . 6694) (nil font-lock-face web-mode-javascript-string-face 6681 . 6694) (6681 . 6695)) nil (25571 45912 486054 414000) 0 nil])
([nil nil ((6696 . 6700)) nil (25571 45912 486051 610000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6698) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6699) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) 6700) nil (25571 45912 486046 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6712 . 6713) (nil part-side javascript 6712 . 6713) (nil part-token string 6712 . 6713) (nil syntax-table (15) 6712 . 6713) (nil font-lock-face web-mode-javascript-string-face 6712 . 6713) (nil rear-nonsticky t 6711 . 6712) (nil part-side javascript 6711 . 6712) (nil part-token string 6711 . 6712) (nil font-lock-face web-mode-javascript-string-face 6711 . 6712) (nil part-side javascript 6699 . 6711) (nil part-token string 6699 . 6711) (nil font-lock-face web-mode-javascript-string-face 6699 . 6711) (nil part-side javascript 6698 . 6699) (nil part-token string 6698 . 6699) (nil syntax-table (15) 6698 . 6699) (nil font-lock-face web-mode-javascript-string-face 6698 . 6699) (6698 . 6713)) nil (25571 45912 485977 295000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -6653) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("n" 0 1 (part-side javascript)) . -6654) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("d" 0 1 (part-side javascript)) . -6655) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) 6656 (t 25571 45912 523898 233000)) nil (25571 45917 483175 117000) 0 nil])
([nil nil ((6653 . 6655)) nil (25571 45924 519788 321000) 0 nil])
([nil nil ((6656 . 6673) (#(" " 0 1 (part-side javascript)) . 6656) (6655 . 6656) (t 25571 45917 515876 376000)) nil (25571 45926 585545 461000) 0 nil] [nil nil ((6653 . 6670) (#(" " 0 1 (part-side javascript)) . 6652) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (6653 . 6654) (t 25571 45917 515876 376000)) ((#("
" 0 1 (part-side javascript)) . 6653) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (6652 . 6653) (#("                 " 0 17 (part-side javascript)) . 6653) (undo-tree-id901 . -17)) (25571 45924 516982 718000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7640) (undo-tree-id903 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7641) (undo-tree-id904 . -1) (#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7642) (undo-tree-id905 . -1) 7643 (t 25571 45926 623836 504000)) nil (25571 45999 80008 356000) 0 nil])
nil
([nil nil ((7640 . 7644)) nil (25571 45999 79995 623000) 0 nil])
([nil nil ((#("!" 0 1 (part-side javascript)) . -7514) (undo-tree-id902 . -1) 7515) nil (25571 45999 79992 7000) 0 nil])
([nil nil ((7514 . 7515)) nil (25571 45999 79978 327000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7518) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7518) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7518) (#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7518)) nil (25571 45999 79975 419000) 0 nil])
([nil nil ((7518 . 7522)) nil (25571 45999 79973 789000) 0 nil])
([nil nil ((7779 . 7781)) nil (25571 45999 79972 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7802 . 7803) (nil part-side javascript 7802 . 7803) (nil part-token string 7802 . 7803) (nil syntax-table (15) 7802 . 7803) (nil font-lock-face web-mode-javascript-string-face 7802 . 7803) (nil rear-nonsticky t 7801 . 7802) (nil part-side javascript 7801 . 7802) (nil part-token string 7801 . 7802) (nil font-lock-face web-mode-javascript-string-face 7801 . 7802) (nil part-side javascript 7788 . 7801) (nil part-token string 7788 . 7801) (nil font-lock-face web-mode-javascript-string-face 7788 . 7801) (nil part-side javascript 7787 . 7788) (nil part-token string 7787 . 7788) (nil syntax-table (15) 7787 . 7788) (nil font-lock-face web-mode-javascript-string-face 7787 . 7788) (nil part-side javascript 7785 . 7787) (nil part-side javascript 7781 . 7785) (nil face web-mode-keyword-face 7781 . 7785) (7781 . 7803)) nil (25571 45999 79970 703000) 0 nil])
([nil nil ((7853 . 7855)) nil (25571 45999 79965 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7876 . 7877) (nil part-side javascript 7876 . 7877) (nil part-token string 7876 . 7877) (nil syntax-table (15) 7876 . 7877) (nil font-lock-face web-mode-javascript-string-face 7876 . 7877) (nil face (whitespace-line web-mode-javascript-string-face) 7876 . 7877) (nil rear-nonsticky t 7875 . 7876) (nil part-side javascript 7875 . 7876) (nil part-token string 7875 . 7876) (nil font-lock-face web-mode-javascript-string-face 7875 . 7876) (nil face (whitespace-line web-mode-javascript-string-face) 7875 . 7876) (nil part-side javascript 7862 . 7875) (nil part-token string 7862 . 7875) (nil font-lock-face web-mode-javascript-string-face 7862 . 7875) (nil face (whitespace-line web-mode-javascript-string-face) 7862 . 7875) (nil part-side javascript 7861 . 7862) (nil part-token string 7861 . 7862) (nil syntax-table (15) 7861 . 7862) (nil font-lock-face web-mode-javascript-string-face 7861 . 7862) (nil face (whitespace-line web-mode-javascript-string-face) 7861 . 7862) (nil part-side javascript 7859 . 7861) (nil face (whitespace-line) 7859 . 7861) (nil part-side javascript 7855 . 7859) (nil face (whitespace-line web-mode-keyword-face) 7855 . 7859) (7855 . 7877)) nil (25571 45999 79956 980000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 6673) (undo-tree-id910 . -13) (undo-tree-id911 . -4) (undo-tree-id912 . -13) (t 25571 45999 119519 367000)) nil (25571 46124 623253 642000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6693 . 6694) (nil part-side javascript 6677 . 6694) (nil part-side javascript 6673 . 6677) (nil face web-mode-constant-face 6673 . 6677) (6673 . 6694)) nil (25571 46124 623248 866000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 7503) (undo-tree-id908 . -13) (undo-tree-id909 . -13)) nil (25571 46124 623246 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7523 . 7524) (nil part-side javascript 7507 . 7524) (nil part-side javascript 7503 . 7507) (nil face web-mode-constant-face 7503 . 7507) (7503 . 7524)) nil (25571 46124 623243 272000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 7554) (undo-tree-id906 . -13) (undo-tree-id907 . -13)) nil (25571 46124 623240 205000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7574 . 7575) (nil part-side javascript 7558 . 7575) (nil part-side javascript 7554 . 7558) (nil face web-mode-constant-face 7554 . 7558) (7554 . 7575)) nil (25571 46124 623223 324000) 0 nil])
([nil nil ((15652 . 15656) (t 25571 46124 662970 994000)) nil (25571 46404 803914 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15680 . 15681) (nil part-side javascript 15680 . 15681) (nil part-token string 15680 . 15681) (nil syntax-table (15) 15680 . 15681) (nil font-lock-face web-mode-javascript-string-face 15680 . 15681) (nil part-side javascript 15678 . 15680) (nil part-token string 15678 . 15680) (nil font-lock-face web-mode-javascript-string-face 15678 . 15680) (nil part-side javascript 15677 . 15678) (nil part-token string 15677 . 15678) (nil syntax-table (15) 15677 . 15678) (nil font-lock-face web-mode-javascript-string-face 15677 . 15678) (nil part-side javascript 15673 . 15677) (nil part-side javascript 15672 . 15673) (nil face (rainbow-delimiters-depth-6-face) 15672 . 15673) (nil part-side javascript 15671 . 15672) (nil part-token string 15671 . 15672) (nil syntax-table (15) 15671 . 15672) (nil font-lock-face web-mode-javascript-string-face 15671 . 15672) (nil part-side javascript 15662 . 15671) (nil part-token string 15662 . 15671) (nil font-lock-face web-mode-javascript-string-face 15662 . 15671) (nil part-side javascript 15661 . 15662) (nil part-token string 15661 . 15662) (nil syntax-table (15) 15661 . 15662) (nil font-lock-face web-mode-javascript-string-face 15661 . 15662) (nil part-side javascript 15660 . 15661) (nil face (rainbow-delimiters-depth-6-face) 15660 . 15661) (nil part-side javascript 15656 . 15660) (15656 . 15681)) nil (25571 46404 803912 299000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -15678) (undo-tree-id927 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -15679) (undo-tree-id928 . -1) 15680) nil (25571 46404 803905 49000) 0 nil])
([nil nil ((15678 . 15681)) nil (25571 46404 803901 499000) 0 nil])
([nil nil ((16416 . 16420)) nil (25571 46404 803900 490000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript face web-mode-function-name-face)) . -16416) (undo-tree-id923 . -1) (#("l" 0 1 (part-side javascript face web-mode-function-name-face)) . -16417) (undo-tree-id924 . -1) (#("e" 0 1 (part-side javascript face web-mode-function-name-face)) . -16418) (undo-tree-id925 . -1) (#(" " 0 1 (part-side javascript)) . -16419) (undo-tree-id926 . -1) 16420) nil (25571 46404 803898 709000) 0 nil])
([nil nil ((16416 . 16421)) nil (25571 46404 803892 392000) 0 nil])
([nil nil ((16757 . 16762)) nil (25571 46404 803891 458000) 0 nil])
([nil nil ((17329 . 17334)) nil (25571 46404 803890 563000) 0 nil])
([nil nil ((17911 . 17918)) nil (25571 46404 803889 612000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18501 . 18502) (nil part-side javascript 18501 . 18502) (nil face (rainbow-delimiters-depth-4-face) 18501 . 18502) (nil part-side javascript 18494 . 18501) (nil part-side javascript 18493 . 18494) (nil face (rainbow-delimiters-depth-5-face) 18493 . 18494) (nil part-side javascript 18480 . 18493) (nil part-side javascript 18479 . 18480) (nil face (rainbow-delimiters-depth-6-face) 18479 . 18480) (nil part-side javascript 18478 . 18479) (nil part-token string 18478 . 18479) (nil syntax-table (15) 18478 . 18479) (nil font-lock-face web-mode-javascript-string-face 18478 . 18479) (nil part-side javascript 18477 . 18478) (nil part-token string 18477 . 18478) (nil font-lock-face web-mode-javascript-string-face 18477 . 18478) (nil part-side javascript 18476 . 18477) (nil part-token string 18476 . 18477) (nil syntax-table (15) 18476 . 18477) (nil font-lock-face web-mode-javascript-string-face 18476 . 18477) (nil part-side javascript 18475 . 18476) (nil face (rainbow-delimiters-depth-6-face) 18475 . 18476) (nil part-side javascript 18466 . 18475) (nil part-side javascript 18465 . 18466) (nil face (rainbow-delimiters-depth-6-face) 18465 . 18466) (nil part-side javascript 18464 . 18465) (nil part-token string 18464 . 18465) (nil syntax-table (15) 18464 . 18465) (nil font-lock-face web-mode-javascript-string-face 18464 . 18465) (nil part-side javascript 18463 . 18464) (nil part-token string 18463 . 18464) (nil font-lock-face web-mode-javascript-string-face 18463 . 18464) (nil part-side javascript 18462 . 18463) (nil part-token string 18462 . 18463) (nil syntax-table (15) 18462 . 18463) (nil font-lock-face web-mode-javascript-string-face 18462 . 18463) (nil part-side javascript 18461 . 18462) (nil face (rainbow-delimiters-depth-6-face) 18461 . 18462) (nil part-side javascript 18444 . 18461) (nil part-side javascript 18443 . 18444) (nil face (rainbow-delimiters-depth-6-face) 18443 . 18444) (nil part-side javascript 18432 . 18443) (nil part-side javascript 18431 . 18432) (nil face (rainbow-delimiters-depth-7-face) 18431 . 18432) (nil part-side javascript 18430 . 18431) (nil face (rainbow-delimiters-depth-8-face) 18430 . 18431) (nil part-side javascript 18417 . 18430) (nil part-side javascript 18416 . 18417) (nil face (rainbow-delimiters-depth-9-face) 18416 . 18417) (nil part-side javascript 18415 . 18416) (nil part-token string 18415 . 18416) (nil syntax-table (15) 18415 . 18416) (nil font-lock-face web-mode-javascript-string-face 18415 . 18416) (nil part-side javascript 18414 . 18415) (nil part-token string 18414 . 18415) (nil font-lock-face web-mode-javascript-string-face 18414 . 18415) (nil part-side javascript 18413 . 18414) (nil part-token string 18413 . 18414) (nil syntax-table (15) 18413 . 18414) (nil font-lock-face web-mode-javascript-string-face 18413 . 18414) (nil part-side javascript 18412 . 18413) (nil face (rainbow-delimiters-depth-9-face) 18412 . 18413) (nil part-side javascript 18404 . 18412) (nil part-side javascript 18399 . 18404) (nil face web-mode-variable-name-face 18399 . 18404) (nil part-side javascript 18383 . 18399) (nil part-side javascript 18382 . 18383) (nil face (rainbow-delimiters-depth-9-face) 18382 . 18383) (nil part-side javascript 18381 . 18382) (nil part-token string 18381 . 18382) (nil syntax-table (15) 18381 . 18382) (nil font-lock-face web-mode-javascript-string-face 18381 . 18382) (nil part-side javascript 18376 . 18381) (nil part-token string 18376 . 18381) (nil font-lock-face web-mode-javascript-string-face 18376 . 18381) (nil part-side javascript 18375 . 18376) (nil part-token string 18375 . 18376) (nil syntax-table (15) 18375 . 18376) (nil font-lock-face web-mode-javascript-string-face 18375 . 18376) (nil part-side javascript 18374 . 18375) (nil face (rainbow-delimiters-depth-9-face) 18374 . 18375) (nil part-side javascript 18367 . 18374) (nil part-side javascript 18366 . 18367) (nil part-token string 18366 . 18367) (nil syntax-table (15) 18366 . 18367) (nil font-lock-face web-mode-javascript-string-face 18366 . 18367) (nil part-side javascript 18365 . 18366) (nil part-token string 18365 . 18366) (nil font-lock-face web-mode-javascript-string-face 18365 . 18366) (nil part-side javascript 18364 . 18365) (nil part-token string 18364 . 18365) (nil syntax-table (15) 18364 . 18365) (nil font-lock-face web-mode-javascript-string-face 18364 . 18365) (nil part-side javascript 18361 . 18364) (nil part-side javascript 18360 . 18361) (nil face (rainbow-delimiters-depth-9-face) 18360 . 18361) (nil part-side javascript 18359 . 18360) (nil part-token string 18359 . 18360) (nil syntax-table (15) 18359 . 18360) (nil font-lock-face web-mode-javascript-string-face 18359 . 18360) (nil part-side javascript 18351 . 18359) (nil part-token string 18351 . 18359) (nil font-lock-face web-mode-javascript-string-face 18351 . 18359) (nil part-side javascript 18350 . 18351) (nil part-token string 18350 . 18351) (nil syntax-table (15) 18350 . 18351) (nil font-lock-face web-mode-javascript-string-face 18350 . 18351) (nil part-side javascript 18349 . 18350) (nil face (rainbow-delimiters-depth-9-face) 18349 . 18350) (nil part-side javascript 18342 . 18349) (nil part-side javascript 18341 . 18342) (nil part-token string 18341 . 18342) (nil syntax-table (15) 18341 . 18342) (nil font-lock-face web-mode-javascript-string-face 18341 . 18342) (nil part-side javascript 18340 . 18341) (nil part-token string 18340 . 18341) (nil font-lock-face web-mode-javascript-string-face 18340 . 18341) (nil part-side javascript 18339 . 18340) (nil part-token string 18339 . 18340) (nil syntax-table (15) 18339 . 18340) (nil font-lock-face web-mode-javascript-string-face 18339 . 18340) (nil part-side javascript 18336 . 18339) (nil part-side javascript 18335 . 18336) (nil face (rainbow-delimiters-depth-9-face) 18335 . 18336) (nil part-side javascript 18334 . 18335) (nil part-token string 18334 . 18335) (nil syntax-table (15) 18334 . 18335) (nil font-lock-face web-mode-javascript-string-face 18334 . 18335) (nil part-side javascript 18329 . 18334) (nil part-token string 18329 . 18334) (nil font-lock-face web-mode-javascript-string-face 18329 . 18334) (nil part-side javascript 18328 . 18329) (nil part-token string 18328 . 18329) (nil syntax-table (15) 18328 . 18329) (nil font-lock-face web-mode-javascript-string-face 18328 . 18329) (nil part-side javascript 18327 . 18328) (nil face (rainbow-delimiters-depth-9-face) 18327 . 18328) (nil part-side javascript 18321 . 18327) (nil part-side javascript 18316 . 18321) (nil face web-mode-variable-name-face 18316 . 18321) (nil part-side javascript 18301 . 18316) (nil part-side javascript 18300 . 18301) (nil face (rainbow-delimiters-depth-8-face) 18300 . 18301) (nil part-side javascript 18299 . 18300) (nil face (rainbow-delimiters-depth-7-face) 18299 . 18300) (nil part-side javascript 18295 . 18299) (nil face web-mode-function-call-face 18295 . 18299) (nil part-side javascript 18275 . 18295) (nil part-side javascript 18274 . 18275) (nil face (rainbow-delimiters-depth-6-face) 18274 . 18275) (nil part-side javascript 18273 . 18274) (nil part-side javascript 18269 . 18273) (nil face web-mode-keyword-face 18269 . 18273) (nil part-side javascript 18258 . 18269) (nil part-side javascript 18257 . 18258) (nil face (rainbow-delimiters-depth-6-face) 18257 . 18258) (nil part-side javascript 18246 . 18257) (nil part-side javascript 18245 . 18246) (nil face (rainbow-delimiters-depth-7-face) 18245 . 18246) (nil part-side javascript 18244 . 18245) (nil face (rainbow-delimiters-depth-8-face) 18244 . 18245) (nil part-side javascript 18231 . 18244) (nil part-side javascript 18230 . 18231) (nil face (rainbow-delimiters-depth-9-face) 18230 . 18231) (nil part-side javascript 18229 . 18230) (nil part-token string 18229 . 18230) (nil syntax-table (15) 18229 . 18230) (nil font-lock-face web-mode-javascript-string-face 18229 . 18230) (nil part-side javascript 18228 . 18229) (nil part-token string 18228 . 18229) (nil font-lock-face web-mode-javascript-string-face 18228 . 18229) (nil part-side javascript 18227 . 18228) (nil part-token string 18227 . 18228) (nil syntax-table (15) 18227 . 18228) (nil font-lock-face web-mode-javascript-string-face 18227 . 18228) (nil part-side javascript 18226 . 18227) (nil face (rainbow-delimiters-depth-9-face) 18226 . 18227) (nil part-side javascript 18218 . 18226) (nil part-side javascript 18213 . 18218) (nil face web-mode-variable-name-face 18213 . 18218) (nil part-side javascript 18197 . 18213) (nil part-side javascript 18196 . 18197) (nil part-token string 18196 . 18197) (nil syntax-table (15) 18196 . 18197) (nil font-lock-face web-mode-javascript-string-face 18196 . 18197) (nil part-side javascript 18195 . 18196) (nil part-token string 18195 . 18196) (nil font-lock-face web-mode-javascript-string-face 18195 . 18196) (nil part-side javascript 18194 . 18195) (nil part-token string 18194 . 18195) (nil syntax-table (15) 18194 . 18195) (nil font-lock-face web-mode-javascript-string-face 18194 . 18195) (nil part-side javascript 18191 . 18194) (nil part-side javascript 18190 . 18191) (nil face (rainbow-delimiters-depth-9-face) 18190 . 18191) (nil part-side javascript 18189 . 18190) (nil part-token string 18189 . 18190) (nil syntax-table (15) 18189 . 18190) (nil font-lock-face web-mode-javascript-string-face 18189 . 18190) (nil part-side javascript 18184 . 18189) (nil part-token string 18184 . 18189) (nil font-lock-face web-mode-javascript-string-face 18184 . 18189) (nil part-side javascript 18183 . 18184) (nil part-token string 18183 . 18184) (nil syntax-table (15) 18183 . 18184) (nil font-lock-face web-mode-javascript-string-face 18183 . 18184) (nil part-side javascript 18182 . 18183) (nil face (rainbow-delimiters-depth-9-face) 18182 . 18183) (nil part-side javascript 18175 . 18182) (nil part-side javascript 18174 . 18175) (nil part-token string 18174 . 18175) (nil syntax-table (15) 18174 . 18175) (nil font-lock-face web-mode-javascript-string-face 18174 . 18175) (nil part-side javascript 18172 . 18174) (nil part-token string 18172 . 18174) (nil font-lock-face web-mode-javascript-string-face 18172 . 18174) (nil part-side javascript 18171 . 18172) (nil part-token string 18171 . 18172) (nil syntax-table (15) 18171 . 18172) (nil font-lock-face web-mode-javascript-string-face 18171 . 18172) (nil part-side javascript 18168 . 18171) (nil part-side javascript 18167 . 18168) (nil face (rainbow-delimiters-depth-9-face) 18167 . 18168) (nil part-side javascript 18166 . 18167) (nil part-token string 18166 . 18167) (nil syntax-table (15) 18166 . 18167) (nil font-lock-face web-mode-javascript-string-face 18166 . 18167) (nil part-side javascript 18158 . 18166) (nil part-token string 18158 . 18166) (nil font-lock-face web-mode-javascript-string-face 18158 . 18166) (nil part-side javascript 18157 . 18158) (nil part-token string 18157 . 18158) (nil syntax-table (15) 18157 . 18158) (nil font-lock-face web-mode-javascript-string-face 18157 . 18158) (nil part-side javascript 18156 . 18157) (nil face (rainbow-delimiters-depth-9-face) 18156 . 18157) (nil part-side javascript 18149 . 18156) (nil part-side javascript 18148 . 18149) (nil part-token string 18148 . 18149) (nil syntax-table (15) 18148 . 18149) (nil font-lock-face web-mode-javascript-string-face 18148 . 18149) (nil part-side javascript 18147 . 18148) (nil part-token string 18147 . 18148) (nil font-lock-face web-mode-javascript-string-face 18147 . 18148) (nil part-side javascript 18146 . 18147) (nil part-token string 18146 . 18147) (nil syntax-table (15) 18146 . 18147) (nil font-lock-face web-mode-javascript-string-face 18146 . 18147) (nil part-side javascript 18143 . 18146) (nil part-side javascript 18142 . 18143) (nil face (rainbow-delimiters-depth-9-face) 18142 . 18143) (nil part-side javascript 18141 . 18142) (nil part-token string 18141 . 18142) (nil syntax-table (15) 18141 . 18142) (nil font-lock-face web-mode-javascript-string-face 18141 . 18142) (nil part-side javascript 18136 . 18141) (nil part-token string 18136 . 18141) (nil font-lock-face web-mode-javascript-string-face 18136 . 18141) (nil part-side javascript 18135 . 18136) (nil part-token string 18135 . 18136) (nil syntax-table (15) 18135 . 18136) (nil font-lock-face web-mode-javascript-string-face 18135 . 18136) (nil part-side javascript 18134 . 18135) (nil face (rainbow-delimiters-depth-9-face) 18134 . 18135) (nil part-side javascript 18128 . 18134) (nil part-side javascript 18123 . 18128) (nil face web-mode-variable-name-face 18123 . 18128) (nil part-side javascript 18108 . 18123) (nil part-side javascript 18107 . 18108) (nil face (rainbow-delimiters-depth-8-face) 18107 . 18108) (nil part-side javascript 18106 . 18107) (nil face (rainbow-delimiters-depth-7-face) 18106 . 18107) (nil part-side javascript 18102 . 18106) (nil face web-mode-function-call-face 18102 . 18106) (nil part-side javascript 18082 . 18102) (nil part-side javascript 18081 . 18082) (nil face (rainbow-delimiters-depth-6-face) 18081 . 18082) (nil part-side javascript 18080 . 18081) (nil part-side javascript 18079 . 18080) (nil face (rainbow-delimiters-depth-6-face) 18079 . 18080) (nil part-side javascript 18078 . 18079) (nil face (rainbow-delimiters-depth-7-face) 18078 . 18079) (nil part-side javascript 18077 . 18078) (nil face (rainbow-delimiters-depth-8-face) 18077 . 18078) (nil part-side javascript 18076 . 18077) (nil part-token string 18076 . 18077) (nil syntax-table (15) 18076 . 18077) (nil font-lock-face web-mode-javascript-string-face 18076 . 18077) (nil part-side javascript 18071 . 18076) (nil part-token string 18071 . 18076) (nil font-lock-face web-mode-javascript-string-face 18071 . 18076) (nil part-side javascript 18070 . 18071) (nil part-token string 18070 . 18071) (nil syntax-table (15) 18070 . 18071) (nil font-lock-face web-mode-javascript-string-face 18070 . 18071) (nil part-side javascript 18069 . 18070) (nil face (rainbow-delimiters-depth-8-face) 18069 . 18070) (nil part-side javascript 18065 . 18069) (nil part-side javascript 18064 . 18065) (nil face (rainbow-delimiters-depth-7-face) 18064 . 18065) (nil part-side javascript 18059 . 18064) (nil face web-mode-function-call-face 18059 . 18064) (nil part-side javascript 18058 . 18059) (nil face (rainbow-delimiters-depth-6-face) 18058 . 18059) (nil part-side javascript 18057 . 18058) (nil part-side javascript 18055 . 18057) (nil face web-mode-keyword-face 18055 . 18057) (nil part-side javascript 18044 . 18055) (nil part-side javascript 18043 . 18044) (nil face (rainbow-delimiters-depth-5-face) 18043 . 18044) (nil part-side javascript 18042 . 18043) (nil part-side javascript 18041 . 18042) (nil face (rainbow-delimiters-depth-5-face) 18041 . 18042) (nil part-side javascript 18040 . 18041) (nil face (rainbow-delimiters-depth-6-face) 18040 . 18041) (nil part-side javascript 18039 . 18040) (nil face (rainbow-delimiters-depth-7-face) 18039 . 18040) (nil part-side javascript 18038 . 18039) (nil part-token string 18038 . 18039) (nil syntax-table (15) 18038 . 18039) (nil font-lock-face web-mode-javascript-string-face 18038 . 18039) (nil part-side javascript 18030 . 18038) (nil part-token string 18030 . 18038) (nil font-lock-face web-mode-javascript-string-face 18030 . 18038) (nil part-side javascript 18029 . 18030) (nil part-token string 18029 . 18030) (nil syntax-table (15) 18029 . 18030) (nil font-lock-face web-mode-javascript-string-face 18029 . 18030) (nil part-side javascript 18028 . 18029) (nil face (rainbow-delimiters-depth-7-face) 18028 . 18029) (nil part-side javascript 18024 . 18028) (nil part-side javascript 18023 . 18024) (nil face (rainbow-delimiters-depth-6-face) 18023 . 18024) (nil part-side javascript 18015 . 18023) (nil face web-mode-function-call-face 18015 . 18023) (nil part-side javascript 18000 . 18015) (nil part-side javascript 17996 . 18000) (nil face web-mode-constant-face 17996 . 18000) (nil part-side javascript 17995 . 17996) (nil face (rainbow-delimiters-depth-5-face) 17995 . 17996) (nil part-side javascript 17994 . 17995) (nil part-side javascript 17992 . 17994) (nil face web-mode-keyword-face 17992 . 17994) (nil part-side javascript 17984 . 17992) (nil part-side javascript 17983 . 17984) (nil syntax-table (12) 17983 . 17984) (nil part-side javascript 17968 . 17983) (nil part-token comment 17968 . 17983) (nil font-lock-face web-mode-javascript-comment-face 17968 . 17983) (nil part-side javascript 17962 . 17968) (nil part-token comment 17962 . 17968) (nil font-lock-face web-mode-javascript-comment-face 17962 . 17968) (nil part-side javascript 17960 . 17962) (nil part-token comment 17960 . 17962) (nil font-lock-face web-mode-javascript-comment-face 17960 . 17962) (nil part-side javascript 17959 . 17960) (nil part-token comment 17959 . 17960) (nil syntax-table (11) 17959 . 17960) (nil font-lock-face web-mode-javascript-comment-face 17959 . 17960) (nil part-side javascript 17950 . 17959) (nil part-side javascript 17949 . 17950) (nil face (rainbow-delimiters-depth-4-face) 17949 . 17950) (nil part-side javascript 17948 . 17949) (nil part-side javascript 17947 . 17948) (nil face (rainbow-delimiters-depth-4-face) 17947 . 17948) (nil part-side javascript 17942 . 17947) (nil part-side javascript 17940 . 17942) (nil face web-mode-keyword-face 17940 . 17942) (nil part-side javascript 17939 . 17940) (nil part-side javascript 17938 . 17939) (nil part-token string 17938 . 17939) (nil syntax-table (15) 17938 . 17939) (nil font-lock-face web-mode-javascript-string-face 17938 . 17939) (nil part-side javascript 17930 . 17938) (nil part-token string 17930 . 17938) (nil font-lock-face web-mode-javascript-string-face 17930 . 17938) (nil part-side javascript 17929 . 17930) (nil part-token string 17929 . 17930) (nil syntax-table (15) 17929 . 17930) (nil font-lock-face web-mode-javascript-string-face 17929 . 17930) (nil part-side javascript 17928 . 17929) (nil face (rainbow-delimiters-depth-4-face) 17928 . 17929) (nil part-side javascript 17927 . 17928) (nil part-side javascript 17925 . 17927) (nil face web-mode-keyword-face 17925 . 17927) (nil part-side javascript 17918 . 17925) (17918 . 18502)) nil (25571 46404 803870 135000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 17911) (undo-tree-id922 . -1)) nil (25571 46404 803787 482000) 0 nil])
([nil nil ((#("operator" 0 8 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 17929) (undo-tree-id919 . -8) (undo-tree-id920 . -8) (undo-tree-id921 . -8)) nil (25571 46404 803785 219000) 0 nil])
([nil nil ((17929 . 17933)) nil (25571 46404 803781 167000) 0 nil])
([nil nil ((17942 . 17946)) nil (25571 46404 803780 296000) 0 nil])
([nil nil ((17946 . 17950)) nil (25571 46404 803779 408000) 0 nil])
([nil nil ((17951 . 17953) (17950 . 17952) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -17950) (17950 . 17951)) nil (25571 46404 803777 962000) 0 nil])
([nil nil ((17952 . 17967)) nil (25571 46404 803776 462000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -17966) (undo-tree-id918 . -1) 17967) nil (25571 46404 803775 316000) 0 nil])
([nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -17950) (undo-tree-id917 . -1) 17951) nil (25571 46404 803772 886000) 0 nil])
([nil nil ((17951 . 17953) (17950 . 17952) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -17950) (17950 . 17951)) nil (25571 46404 803770 438000) 0 nil])
([nil nil ((17952 . 17956)) nil (25571 46404 803768 851000) 0 nil])
([nil nil ((17958 . 17962)) nil (25571 46404 803767 886000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 17978)) nil (25571 46404 803766 796000) 0 nil])
([nil nil ((17983 . 17991) (#("        " 0 8 (part-side javascript)) . 17982) (undo-tree-id916 . -8) (17981 . 17991)) nil (25571 46404 803765 661000) 0 nil])
([nil nil ((17983 . 17991) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 17982) (17982 . 17990) (17982 . 17983)) nil (25571 46404 803762 533000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18028 . 18029) (nil part-side javascript 18025 . 18029) (nil part-side javascript 18024 . 18025) (nil face (rainbow-delimiters-depth-5-face) 18024 . 18025) (nil part-side javascript 18023 . 18024) (nil part-token string 18023 . 18024) (nil syntax-table (15) 18023 . 18024) (nil font-lock-face web-mode-javascript-string-face 18023 . 18024) (nil part-side javascript 18022 . 18023) (nil part-token string 18022 . 18023) (nil font-lock-face web-mode-javascript-string-face 18022 . 18023) (nil part-side javascript 18021 . 18022) (nil part-token string 18021 . 18022) (nil syntax-table (15) 18021 . 18022) (nil font-lock-face web-mode-javascript-string-face 18021 . 18022) (nil part-side javascript 18020 . 18021) (nil face (rainbow-delimiters-depth-5-face) 18020 . 18021) (nil part-side javascript 18011 . 18020) (nil part-side javascript 18010 . 18011) (nil face (rainbow-delimiters-depth-5-face) 18010 . 18011) (nil part-side javascript 18009 . 18010) (nil part-token string 18009 . 18010) (nil syntax-table (15) 18009 . 18010) (nil font-lock-face web-mode-javascript-string-face 18009 . 18010) (nil part-side javascript 18008 . 18009) (nil part-token string 18008 . 18009) (nil font-lock-face web-mode-javascript-string-face 18008 . 18009) (nil part-side javascript 18007 . 18008) (nil part-token string 18007 . 18008) (nil syntax-table (15) 18007 . 18008) (nil font-lock-face web-mode-javascript-string-face 18007 . 18008) (nil part-side javascript 18006 . 18007) (nil face (rainbow-delimiters-depth-5-face) 18006 . 18007) (nil part-side javascript 18000 . 18006) (18000 . 18029)) nil (25571 46404 803758 992000) 0 nil])
([nil nil ((17924 . 17929)) nil (25571 46404 803749 968000) 0 nil])
([nil nil ((17996 . 17999)) nil (25571 46404 803748 796000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -17996) (undo-tree-id913 . -1) (#("f" 0 1 (part-side javascript face web-mode-keyword-face)) . -17997) (undo-tree-id914 . -1) (#(" " 0 1 (part-side javascript)) . -17998) (undo-tree-id915 . -1) 17999) nil (25571 46404 816768 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18139 . 18140) (nil part-side javascript 18139 . 18140) (nil face (rainbow-delimiters-depth-5-face) 18139 . 18140) (nil part-side javascript 18138 . 18139) (nil face (rainbow-delimiters-depth-6-face) 18138 . 18139) (nil part-side javascript 18125 . 18138) (nil part-side javascript 18124 . 18125) (nil face (rainbow-delimiters-depth-7-face) 18124 . 18125) (nil part-side javascript 18123 . 18124) (nil part-token string 18123 . 18124) (nil syntax-table (15) 18123 . 18124) (nil font-lock-face web-mode-javascript-string-face 18123 . 18124) (nil part-side javascript 18122 . 18123) (nil part-token string 18122 . 18123) (nil font-lock-face web-mode-javascript-string-face 18122 . 18123) (nil part-side javascript 18121 . 18122) (nil part-token string 18121 . 18122) (nil syntax-table (15) 18121 . 18122) (nil font-lock-face web-mode-javascript-string-face 18121 . 18122) (nil part-side javascript 18120 . 18121) (nil face (rainbow-delimiters-depth-7-face) 18120 . 18121) (nil part-side javascript 18112 . 18120) (nil part-side javascript 18107 . 18112) (nil face web-mode-variable-name-face 18107 . 18112) (nil part-side javascript 18091 . 18107) (nil part-side javascript 18090 . 18091) (nil face (rainbow-delimiters-depth-7-face) 18090 . 18091) (nil part-side javascript 18089 . 18090) (nil part-token string 18089 . 18090) (nil syntax-table (15) 18089 . 18090) (nil font-lock-face web-mode-javascript-string-face 18089 . 18090) (nil part-side javascript 18084 . 18089) (nil part-token string 18084 . 18089) (nil font-lock-face web-mode-javascript-string-face 18084 . 18089) (nil part-side javascript 18083 . 18084) (nil part-token string 18083 . 18084) (nil syntax-table (15) 18083 . 18084) (nil font-lock-face web-mode-javascript-string-face 18083 . 18084) (nil part-side javascript 18082 . 18083) (nil face (rainbow-delimiters-depth-7-face) 18082 . 18083) (nil part-side javascript 18075 . 18082) (nil part-side javascript 18074 . 18075) (nil part-token string 18074 . 18075) (nil syntax-table (15) 18074 . 18075) (nil font-lock-face web-mode-javascript-string-face 18074 . 18075) (nil part-side javascript 18073 . 18074) (nil part-token string 18073 . 18074) (nil font-lock-face web-mode-javascript-string-face 18073 . 18074) (nil part-side javascript 18072 . 18073) (nil part-token string 18072 . 18073) (nil syntax-table (15) 18072 . 18073) (nil font-lock-face web-mode-javascript-string-face 18072 . 18073) (nil part-side javascript 18069 . 18072) (nil part-side javascript 18068 . 18069) (nil face (rainbow-delimiters-depth-7-face) 18068 . 18069) (nil part-side javascript 18067 . 18068) (nil part-token string 18067 . 18068) (nil syntax-table (15) 18067 . 18068) (nil font-lock-face web-mode-javascript-string-face 18067 . 18068) (nil part-side javascript 18059 . 18067) (nil part-token string 18059 . 18067) (nil font-lock-face web-mode-javascript-string-face 18059 . 18067) (nil part-side javascript 18058 . 18059) (nil part-token string 18058 . 18059) (nil syntax-table (15) 18058 . 18059) (nil font-lock-face web-mode-javascript-string-face 18058 . 18059) (nil part-side javascript 18057 . 18058) (nil face (rainbow-delimiters-depth-7-face) 18057 . 18058) (nil part-side javascript 18050 . 18057) (nil part-side javascript 18049 . 18050) (nil part-token string 18049 . 18050) (nil syntax-table (15) 18049 . 18050) (nil font-lock-face web-mode-javascript-string-face 18049 . 18050) (nil part-side javascript 18048 . 18049) (nil part-token string 18048 . 18049) (nil font-lock-face web-mode-javascript-string-face 18048 . 18049) (nil part-side javascript 18047 . 18048) (nil part-token string 18047 . 18048) (nil syntax-table (15) 18047 . 18048) (nil font-lock-face web-mode-javascript-string-face 18047 . 18048) (nil part-side javascript 18044 . 18047) (nil part-side javascript 18043 . 18044) (nil face (rainbow-delimiters-depth-7-face) 18043 . 18044) (nil part-side javascript 18042 . 18043) (nil part-token string 18042 . 18043) (nil syntax-table (15) 18042 . 18043) (nil font-lock-face web-mode-javascript-string-face 18042 . 18043) (nil part-side javascript 18037 . 18042) (nil part-token string 18037 . 18042) (nil font-lock-face web-mode-javascript-string-face 18037 . 18042) (nil part-side javascript 18036 . 18037) (nil part-token string 18036 . 18037) (nil syntax-table (15) 18036 . 18037) (nil font-lock-face web-mode-javascript-string-face 18036 . 18037) (nil part-side javascript 18035 . 18036) (nil face (rainbow-delimiters-depth-7-face) 18035 . 18036) (nil part-side javascript 18029 . 18035) (nil part-side javascript 18024 . 18029) (nil face web-mode-variable-name-face 18024 . 18029) (nil part-side javascript 18009 . 18024) (nil part-side javascript 18008 . 18009) (nil face (rainbow-delimiters-depth-6-face) 18008 . 18009) (nil part-side javascript 18007 . 18008) (nil face (rainbow-delimiters-depth-5-face) 18007 . 18008) (nil part-side javascript 18003 . 18007) (nil face web-mode-function-call-face 18003 . 18007) (nil part-side javascript 17996 . 18003) (17996 . 18140)) nil (25571 46497 935407 59000) 0 nil] [nil nil ((nil rear-nonsticky nil 18139 . 18140) (nil part-side javascript 18139 . 18140) (nil face (rainbow-delimiters-depth-5-face) 18139 . 18140) (nil part-side javascript 18138 . 18139) (nil face (rainbow-delimiters-depth-6-face) 18138 . 18139) (nil part-side javascript 18125 . 18138) (nil part-side javascript 18124 . 18125) (nil face (rainbow-delimiters-depth-7-face) 18124 . 18125) (nil part-side javascript 18123 . 18124) (nil part-token string 18123 . 18124) (nil syntax-table (15) 18123 . 18124) (nil font-lock-face web-mode-javascript-string-face 18123 . 18124) (nil part-side javascript 18122 . 18123) (nil part-token string 18122 . 18123) (nil font-lock-face web-mode-javascript-string-face 18122 . 18123) (nil part-side javascript 18121 . 18122) (nil part-token string 18121 . 18122) (nil syntax-table (15) 18121 . 18122) (nil font-lock-face web-mode-javascript-string-face 18121 . 18122) (nil part-side javascript 18120 . 18121) (nil face (rainbow-delimiters-depth-7-face) 18120 . 18121) (nil part-side javascript 18112 . 18120) (nil part-side javascript 18107 . 18112) (nil face web-mode-variable-name-face 18107 . 18112) (nil part-side javascript 18091 . 18107) (nil part-side javascript 18090 . 18091) (nil face (rainbow-delimiters-depth-7-face) 18090 . 18091) (nil part-side javascript 18089 . 18090) (nil part-token string 18089 . 18090) (nil syntax-table (15) 18089 . 18090) (nil font-lock-face web-mode-javascript-string-face 18089 . 18090) (nil part-side javascript 18084 . 18089) (nil part-token string 18084 . 18089) (nil font-lock-face web-mode-javascript-string-face 18084 . 18089) (nil part-side javascript 18083 . 18084) (nil part-token string 18083 . 18084) (nil syntax-table (15) 18083 . 18084) (nil font-lock-face web-mode-javascript-string-face 18083 . 18084) (nil part-side javascript 18082 . 18083) (nil face (rainbow-delimiters-depth-7-face) 18082 . 18083) (nil part-side javascript 18075 . 18082) (nil part-side javascript 18074 . 18075) (nil part-token string 18074 . 18075) (nil syntax-table (15) 18074 . 18075) (nil font-lock-face web-mode-javascript-string-face 18074 . 18075) (nil part-side javascript 18073 . 18074) (nil part-token string 18073 . 18074) (nil font-lock-face web-mode-javascript-string-face 18073 . 18074) (nil part-side javascript 18072 . 18073) (nil part-token string 18072 . 18073) (nil syntax-table (15) 18072 . 18073) (nil font-lock-face web-mode-javascript-string-face 18072 . 18073) (nil part-side javascript 18069 . 18072) (nil part-side javascript 18068 . 18069) (nil face (rainbow-delimiters-depth-7-face) 18068 . 18069) (nil part-side javascript 18067 . 18068) (nil part-token string 18067 . 18068) (nil syntax-table (15) 18067 . 18068) (nil font-lock-face web-mode-javascript-string-face 18067 . 18068) (nil part-side javascript 18059 . 18067) (nil part-token string 18059 . 18067) (nil font-lock-face web-mode-javascript-string-face 18059 . 18067) (nil part-side javascript 18058 . 18059) (nil part-token string 18058 . 18059) (nil syntax-table (15) 18058 . 18059) (nil font-lock-face web-mode-javascript-string-face 18058 . 18059) (nil part-side javascript 18057 . 18058) (nil face (rainbow-delimiters-depth-7-face) 18057 . 18058) (nil part-side javascript 18050 . 18057) (nil part-side javascript 18049 . 18050) (nil part-token string 18049 . 18050) (nil syntax-table (15) 18049 . 18050) (nil font-lock-face web-mode-javascript-string-face 18049 . 18050) (nil part-side javascript 18048 . 18049) (nil part-token string 18048 . 18049) (nil font-lock-face web-mode-javascript-string-face 18048 . 18049) (nil part-side javascript 18047 . 18048) (nil part-token string 18047 . 18048) (nil syntax-table (15) 18047 . 18048) (nil font-lock-face web-mode-javascript-string-face 18047 . 18048) (nil part-side javascript 18044 . 18047) (nil part-side javascript 18043 . 18044) (nil face (rainbow-delimiters-depth-7-face) 18043 . 18044) (nil part-side javascript 18042 . 18043) (nil part-token string 18042 . 18043) (nil syntax-table (15) 18042 . 18043) (nil font-lock-face web-mode-javascript-string-face 18042 . 18043) (nil part-side javascript 18037 . 18042) (nil part-token string 18037 . 18042) (nil font-lock-face web-mode-javascript-string-face 18037 . 18042) (nil part-side javascript 18036 . 18037) (nil part-token string 18036 . 18037) (nil syntax-table (15) 18036 . 18037) (nil font-lock-face web-mode-javascript-string-face 18036 . 18037) (nil part-side javascript 18035 . 18036) (nil face (rainbow-delimiters-depth-7-face) 18035 . 18036) (nil part-side javascript 18029 . 18035) (nil part-side javascript 18024 . 18029) (nil face web-mode-variable-name-face 18024 . 18029) (nil part-side javascript 18009 . 18024) (nil part-side javascript 18008 . 18009) (nil face (rainbow-delimiters-depth-6-face) 18008 . 18009) (nil part-side javascript 18007 . 18008) (nil face (rainbow-delimiters-depth-5-face) 18007 . 18008) (nil part-side javascript 18003 . 18007) (nil face web-mode-function-call-face 18003 . 18007) (nil part-side javascript 17996 . 18003) (17996 . 18140)) ((#("result.push({
              value: filt['field'] + ' ' + filt['operator'] + ' ' + filt['value'],
              index: idxobj['i']
            })" 0 7 (part-side javascript) 7 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 13 (part-side javascript face (rainbow-delimiters-depth-6-face)) 13 14 (part-side javascript) 14 28 (part-side javascript) 28 33 (part-side javascript face web-mode-variable-name-face) 33 39 (part-side javascript) 39 40 (part-side javascript face (rainbow-delimiters-depth-7-face)) 40 41 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 41 46 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 46 47 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 47 48 (part-side javascript face (rainbow-delimiters-depth-7-face)) 48 51 (part-side javascript) 51 52 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 52 53 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 53 54 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 54 61 (part-side javascript) 61 62 (part-side javascript face (rainbow-delimiters-depth-7-face)) 62 63 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 63 71 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 71 72 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 72 73 (part-side javascript face (rainbow-delimiters-depth-7-face)) 73 76 (part-side javascript) 76 77 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 77 78 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 78 79 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 79 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-7-face)) 87 88 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 88 93 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 93 94 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 94 95 (part-side javascript face (rainbow-delimiters-depth-7-face)) 95 111 (part-side javascript) 111 116 (part-side javascript face web-mode-variable-name-face) 116 124 (part-side javascript) 124 125 (part-side javascript face (rainbow-delimiters-depth-7-face)) 125 126 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 126 127 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 127 128 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 128 129 (part-side javascript face (rainbow-delimiters-depth-7-face)) 129 142 (part-side javascript) 142 143 (part-side javascript face (rainbow-delimiters-depth-6-face)) 143 144 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-5-face))) . 17996) (undo-tree-id929 . -130) (undo-tree-id930 . -144) (nil face (rainbow-delimiters-depth-5-face) 18007 . 18008) (nil face (rainbow-delimiters-depth-6-face) 18008 . 18009) (nil face (rainbow-delimiters-depth-7-face) 18035 . 18036) (nil syntax-table (15) 18036 . 18037) (nil syntax-table (15) 18042 . 18043) (nil face (rainbow-delimiters-depth-7-face) 18043 . 18044) (nil syntax-table (15) 18047 . 18048) (nil syntax-table (15) 18049 . 18050) (nil face (rainbow-delimiters-depth-7-face) 18057 . 18058) (nil syntax-table (15) 18058 . 18059) (nil syntax-table (15) 18067 . 18068) (nil face (rainbow-delimiters-depth-7-face) 18068 . 18069) (nil syntax-table (15) 18072 . 18073) (nil syntax-table (15) 18074 . 18075) (nil face (rainbow-delimiters-depth-7-face) 18082 . 18083) (nil syntax-table (15) 18083 . 18084) (nil syntax-table (15) 18089 . 18090) (nil face (rainbow-delimiters-depth-7-face) 18090 . 18091) (nil face (rainbow-delimiters-depth-7-face) 18120 . 18121) (nil syntax-table (15) 18121 . 18122) (nil syntax-table (15) 18123 . 18124) (nil face (rainbow-delimiters-depth-7-face) 18124 . 18125) (nil face (rainbow-delimiters-depth-6-face) 18138 . 18139) (nil face (rainbow-delimiters-depth-5-face) 18139 . 18140) (nil rear-nonsticky t 18139 . 18140)) (25571 46404 803720 397000) 0 nil])
([nil nil ((18138 . 18146) (#("        " 0 8 (part-side javascript)) . 18137) (undo-tree-id959 . -8) (18137 . 18146) (#("    " 0 4 (part-side javascript)) . -18134) (18140 . 18141)) nil (25571 46497 935383 493000) 0 nil])
nil
([nil nil ((#("        if (this.operator_list.includes(filt['operator'])) {
          if (isNaN(filt['value'])) {
            result.push({
              value: filt['field'] + ' ' + filt['operator'] + ' \"' + filt['value'] + '\"',
              index: idxobj['i']
            })
          }
          else {
            result.push({
              value: filt['field'] + ' ' + filt['operator'] + ' ' + filt['value'],
              index: idxobj['i']
            })
          }
          idxobj['i'] = idxobj['i'] + 1
        }" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 16 (part-side javascript face web-mode-constant-face) 16 31 (part-side javascript) 31 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-6-face)) 40 44 (part-side javascript) 44 45 (part-side javascript face (rainbow-delimiters-depth-7-face)) 45 46 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 46 54 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 54 55 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 55 56 (part-side javascript face (rainbow-delimiters-depth-7-face)) 56 57 (part-side javascript face (rainbow-delimiters-depth-6-face)) 57 58 (part-side javascript face (rainbow-delimiters-depth-5-face)) 58 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-5-face)) 60 61 (part-side javascript) 61 71 (part-side javascript) 71 73 (part-side javascript face web-mode-keyword-face) 73 74 (part-side javascript) 74 75 (part-side javascript face (rainbow-delimiters-depth-6-face)) 75 80 (part-side javascript face web-mode-function-call-face) 80 81 (part-side javascript face (rainbow-delimiters-depth-7-face)) 81 85 (part-side javascript) 85 86 (part-side javascript face (rainbow-delimiters-depth-8-face)) 86 87 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 87 92 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 92 93 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 93 94 (part-side javascript face (rainbow-delimiters-depth-8-face)) 94 95 (part-side javascript face (rainbow-delimiters-depth-7-face)) 95 96 (part-side javascript face (rainbow-delimiters-depth-6-face)) 96 97 (part-side javascript) 97 98 (part-side javascript face (rainbow-delimiters-depth-6-face)) 98 99 (part-side javascript) 99 118 (part-side javascript) 118 122 (part-side javascript face web-mode-function-call-face) 122 123 (part-side javascript face (rainbow-delimiters-depth-7-face)) 123 124 (part-side javascript face (rainbow-delimiters-depth-8-face)) 124 139 (part-side javascript) 139 144 (part-side javascript face web-mode-variable-name-face) 144 150 (part-side javascript) 150 151 (part-side javascript face (rainbow-delimiters-depth-9-face)) 151 152 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 152 157 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 157 158 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 158 159 (part-side javascript face (rainbow-delimiters-depth-9-face)) 159 162 (part-side javascript) 162 163 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 163 164 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 164 165 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 165 172 (part-side javascript) 172 173 (part-side javascript face (rainbow-delimiters-depth-9-face)) 173 174 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 174 182 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 182 183 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 183 184 (part-side javascript face (rainbow-delimiters-depth-9-face)) 184 187 (part-side javascript) 187 188 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 188 190 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 190 191 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 191 198 (part-side javascript) 198 199 (part-side javascript face (rainbow-delimiters-depth-9-face)) 199 200 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 200 205 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 205 206 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 206 207 (part-side javascript face (rainbow-delimiters-depth-9-face)) 207 210 (part-side javascript) 210 211 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 211 212 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 212 213 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 213 229 (part-side javascript) 229 234 (part-side javascript face web-mode-variable-name-face) 234 242 (part-side javascript) 242 243 (part-side javascript face (rainbow-delimiters-depth-9-face)) 243 244 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 244 245 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 245 246 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 246 247 (part-side javascript face (rainbow-delimiters-depth-9-face)) 247 260 (part-side javascript) 260 261 (part-side javascript face (rainbow-delimiters-depth-8-face)) 261 262 (part-side javascript face (rainbow-delimiters-depth-7-face)) 262 273 (part-side javascript) 273 274 (part-side javascript face (rainbow-delimiters-depth-6-face)) 274 285 (part-side javascript) 285 289 (part-side javascript face web-mode-keyword-face) 289 290 (part-side javascript) 290 291 (part-side javascript face (rainbow-delimiters-depth-6-face)) 291 311 (part-side javascript) 311 315 (part-side javascript face web-mode-function-call-face) 315 316 (part-side javascript face (rainbow-delimiters-depth-7-face)) 316 317 (part-side javascript face (rainbow-delimiters-depth-8-face)) 317 332 (part-side javascript) 332 337 (part-side javascript face web-mode-variable-name-face) 337 343 (part-side javascript) 343 344 (part-side javascript face (rainbow-delimiters-depth-9-face)) 344 345 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 345 350 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 350 351 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 351 352 (part-side javascript face (rainbow-delimiters-depth-9-face)) 352 355 (part-side javascript) 355 356 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 356 357 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 357 358 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 358 365 (part-side javascript) 365 366 (part-side javascript face (rainbow-delimiters-depth-9-face)) 366 367 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 367 375 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 375 376 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 376 377 (part-side javascript face (rainbow-delimiters-depth-9-face)) 377 380 (part-side javascript) 380 381 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 381 382 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 382 383 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 383 390 (part-side javascript) 390 391 (part-side javascript face (rainbow-delimiters-depth-9-face)) 391 392 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 392 397 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 397 398 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 398 399 (part-side javascript face (rainbow-delimiters-depth-9-face)) 399 415 (part-side javascript) 415 420 (part-side javascript face web-mode-variable-name-face) 420 428 (part-side javascript) 428 429 (part-side javascript face (rainbow-delimiters-depth-9-face)) 429 430 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 430 431 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 431 432 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 432 433 (part-side javascript face (rainbow-delimiters-depth-9-face)) 433 446 (part-side javascript) 446 447 (part-side javascript face (rainbow-delimiters-depth-8-face)) 447 448 (part-side javascript face (rainbow-delimiters-depth-7-face)) 448 459 (part-side javascript) 459 460 (part-side javascript face (rainbow-delimiters-depth-6-face)) 460 477 (part-side javascript) 477 478 (part-side javascript face (rainbow-delimiters-depth-6-face)) 478 479 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 479 480 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 480 481 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 481 482 (part-side javascript face (rainbow-delimiters-depth-6-face)) 482 491 (part-side javascript) 491 492 (part-side javascript face (rainbow-delimiters-depth-6-face)) 492 493 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 493 494 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 494 495 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 495 496 (part-side javascript face (rainbow-delimiters-depth-6-face)) 496 509 (part-side javascript) 509 510 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 18218) (undo-tree-id953 . -510) (undo-tree-id954 . -61) (undo-tree-id955 . -500) (undo-tree-id956 . -262) (undo-tree-id957 . -448) (undo-tree-id958 . -510)) nil (25571 46497 935380 269000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript syntax-table (12))) . -18217) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) 18218) nil (25571 46497 935371 770000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18037) (undo-tree-id942 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18038) (undo-tree-id943 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18039) (undo-tree-id944 . -1) (#("l" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18040) (undo-tree-id945 . -1) (#("d" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18041) (undo-tree-id946 . -1) 18042) nil (25571 46497 935363 515000) 0 nil])
([nil nil ((18037 . 18047)) nil (25571 46497 935355 754000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18046) (undo-tree-id941 . -1) 18047) nil (25571 46497 935354 486000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18063) (undo-tree-id933 . -1) (#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18064) (undo-tree-id934 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18065) (undo-tree-id935 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18066) (undo-tree-id936 . -1) (#("a" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18067) (undo-tree-id937 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18068) (undo-tree-id938 . -1) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18069) (undo-tree-id939 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18070) (undo-tree-id940 . -1) 18071) nil (25571 46497 935350 567000) 0 nil])
([nil nil ((18063 . 18068)) nil (25571 46497 935338 385000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18070) (#("e" 0 1 (part-side javascript)) . 18070) (#("u" 0 1 (part-side javascript)) . 18070) (#("l" 0 1 (part-side javascript)) . 18070) (#("a" 0 1 (part-side javascript)) . 18070) (#("v" 0 1 (part-side javascript)) . 18070) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18070) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 18070) (#("t" 0 1 (part-side javascript)) . 18070) (#("l" 0 1 (part-side javascript)) . 18070) (#("i" 0 1 (part-side javascript)) . 18070) (#("f" 0 1 (part-side javascript)) . 18070) (#(" " 0 1 (part-side javascript)) . 18070) (#("+" 0 1 (part-side javascript)) . 18070) (#(" " 0 1 (part-side javascript)) . 18070) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18070) (#(" " 0 1 (part-side javascript)) . 18070) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18070) (#(" " 0 1 (part-side javascript)) . 18070) (#("+" 0 1 (part-side javascript)) . 18070) (#(" " 0 1 (part-side javascript)) . 18070)) nil (25571 46497 935334 806000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 18070)) nil (25571 46497 935329 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18060 . 18061) (nil part-side javascript 18060 . 18061) (nil face (rainbow-delimiters-depth-7-face) 18060 . 18061) (nil part-side javascript 18059 . 18060) (nil face (rainbow-delimiters-depth-7-face) 18059 . 18060) (nil part-side javascript 18048 . 18059) (nil face web-mode-function-call-face 18048 . 18059) (18048 . 18061)) nil (25571 46497 935328 18000) 0 nil])
([nil nil ((18047 . 18048)) nil (25571 46497 935325 554000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -18047) (undo-tree-id932 . -1) 18048) nil (25571 46497 935324 47000) 0 nil])
([nil nil ((18048 . 18049)) nil (25571 46497 935320 263000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript face whitespace-trailing)) . -18125) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . -17911) (undo-tree-id931 . -6) 18049) nil (25571 46497 935314 512000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18123) (undo-tree-id1092 . -1) (t 25571 46497 978007 615000)) nil (25571 46819 878948 386000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18123) (undo-tree-id1091 . -1)) nil (25571 46819 878945 987000) 0 nil])
([nil nil ((#("
        // switch over operators" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 10 12 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 12 18 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 18 33 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 18161) (undo-tree-id1085 . -33) (undo-tree-id1086 . -1) (undo-tree-id1087 . -33) (undo-tree-id1088 . -33) (undo-tree-id1089 . -33) (undo-tree-id1090 . -33)) nil (25571 46819 878943 437000) 0 nil])
([nil nil ((17911 . 17918)) nil (25571 46819 878935 976000) 0 nil])
([nil nil ((17918 . 17932)) nil (25571 46819 878935 82000) 0 nil])
([nil nil ((17932 . 17934)) nil (25571 46819 878934 69000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17932) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17933) (undo-tree-id1084 . -1) 17934) nil (25571 46819 878932 571000) 0 nil])
([nil nil ((17932 . 17934)) nil (25571 46819 878927 932000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17933) (undo-tree-id1081 . -1) 17934) nil (25571 46819 878926 498000) 0 nil])
([nil nil ((17933 . 17954)) nil (25571 46819 878924 351000) 0 nil])
([nil nil ((17954 . 17959)) nil (25571 46819 878923 469000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17958) (undo-tree-id1080 . -1) 17959) nil (25571 46819 878922 93000) 0 nil])
([nil nil ((15225 . 15232)) nil (25571 46819 878919 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15388 . 15389) (nil part-side javascript 15388 . 15389) (nil syntax-table (12) 15388 . 15389) (nil part-side javascript 15239 . 15388) (nil part-token comment 15239 . 15388) (nil font-lock-face web-mode-javascript-comment-face 15239 . 15388) (nil part-side javascript 15238 . 15239) (nil part-token comment 15238 . 15239) (nil syntax-table (11) 15238 . 15239) (nil font-lock-face web-mode-javascript-comment-face 15238 . 15239) (nil part-side javascript 15232 . 15238) (15232 . 15389)) nil (25571 46819 878917 876000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -15232) 15226) nil (25571 46819 878914 214000) 0 nil])
([nil nil ((15316 . 15325)) nil (25571 46819 878912 853000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15235)) nil (25571 46819 878911 776000) 0 nil])
([nil nil ((15235 . 15236)) nil (25571 46819 878910 785000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15245) (#("a" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15245)) nil (25571 46819 878909 617000) 0 nil])
([nil nil ((15245 . 15247)) nil (25571 46819 878908 601000) 0 nil])
([nil nil ((#("n" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("a" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("p" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("g" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("n" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("y" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("p" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("h" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("w" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254)) nil (25571 46819 878904 490000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("d" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("v" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("a" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("s" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("h" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("," 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("s" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("l" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("a" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("v" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254)) nil (25571 46819 878896 566000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("n" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("l" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("g" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254) (#("n" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15254)) nil (25571 46819 878888 627000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15253) (undo-tree-id1079 . -1) 15254) nil (25571 46819 878883 674000) 0 nil])
([nil nil ((15253 . 15271)) nil (25571 46819 878880 664000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15270) (undo-tree-id1078 . -1) 15271) nil (25571 46819 878879 511000) 0 nil])
([nil nil ((15270 . 15274)) nil (25571 46819 878877 203000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15273) (undo-tree-id1077 . -1) 15274) nil (25571 46819 878876 46000) 0 nil])
([nil nil ((15339 . 15340)) nil (25571 46819 878873 604000) 0 nil])
([nil nil ((15340 . 15349)) nil (25571 46819 878872 612000) 0 nil])
([nil nil ((15349 . 15356)) nil (25571 46819 878871 727000) 0 nil])
([nil nil ((15356 . 15377)) nil (25571 46819 878870 726000) 0 nil])
([nil nil ((15377 . 15382)) nil (25571 46819 878869 806000) 0 nil])
([nil nil ((15382 . 15390)) nil (25571 46819 878868 927000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15388) (undo-tree-id1075 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15389) (undo-tree-id1076 . -1) 15390) nil (25571 46819 878867 579000) 0 nil])
([nil nil ((15388 . 15398)) nil (25571 46819 878863 704000) 0 nil])
([nil nil ((#("h" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15382) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15383) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15384) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (#("k" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15385) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15386) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("y" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15387) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15388) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (#("m" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15389) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15390) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (#("v" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15391) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15392) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (#("m" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15393) (undo-tree-id1070 . -1) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15394) (undo-tree-id1071 . -1) (#("n" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15395) (undo-tree-id1072 . -1) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15396) (undo-tree-id1073 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15397) (undo-tree-id1074 . -1) 15398) nil (25571 46819 878858 787000) 0 nil])
([nil nil ((15382 . 15390)) nil (25571 46819 878825 173000) 0 nil])
([nil nil ((15390 . 15411)) nil (25571 46819 878824 163000) 0 nil])
([nil nil ((15411 . 15413)) nil (25571 46819 878823 319000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15412) (undo-tree-id1047 . -1) 15413) nil (25571 46819 878822 142000) 0 nil])
([nil nil ((15412 . 15413)) nil (25571 46819 878819 930000) 0 nil])
([nil nil ((15413 . 15414)) nil (25571 46819 878818 682000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15413) (undo-tree-id1046 . -1) 15414) nil (25571 46819 878817 497000) 0 nil])
([nil nil ((15413 . 15422)) nil (25571 46819 878815 326000) 0 nil])
([nil nil ((15422 . 15436)) nil (25571 46819 878814 283000) 0 nil])
([nil nil ((#("-" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15422) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (#("-" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15423) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15424) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (#("s" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15425) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (#("e" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15426) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15427) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15428) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15429) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15430) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15431) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15432) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15433) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#("l" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15434) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15435) (undo-tree-id1045 . -1) 15436) nil (25571 46819 878809 401000) 0 nil])
([nil nil ((15422 . 15428)) nil (25571 46819 878768 139000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15426) (undo-tree-id1010 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15427) (undo-tree-id1011 . -1) 15428) nil (25571 46819 878766 674000) 0 nil])
([nil nil ((15426 . 15428)) nil (25571 46819 878762 829000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15425) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15426) (undo-tree-id1008 . -1) (#("u" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15427) (undo-tree-id1009 . -1) 15428) nil (25571 46819 878760 999000) 0 nil])
([nil nil ((15425 . 15435)) nil (25571 46819 878753 934000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15434) (undo-tree-id1004 . -1) 15435) nil (25571 46819 878752 734000) 0 nil])
([nil nil ((15434 . 15435)) nil (25571 46819 878750 367000) 0 nil])
([nil nil ((15435 . 15456)) nil (25571 46819 878749 506000) 0 nil])
([nil nil ((15456 . 15465)) nil (25571 46819 878748 542000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15464) (undo-tree-id1003 . -1) 15465) nil (25571 46819 878746 965000) 0 nil])
([nil nil ((#("the" 0 3 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15443) (undo-tree-id1001 . -3) (undo-tree-id1002 . -3)) nil (25571 46819 878611 945000) 0 nil])
([nil nil ((15443 . 15447)) nil (25571 46819 878608 794000) 0 nil])
([nil nil ((15447 . 15452)) nil (25571 46819 878607 900000) 0 nil])
([nil nil ((15482 . 15488) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 15481) (15481 . 15487) (15481 . 15482)) nil (25571 46819 878606 672000) 0 nil])
([nil nil ((15488 . 15491)) nil (25571 46819 878604 488000) 0 nil])
([nil nil ((15491 . 15512)) nil (25571 46819 878603 404000) 0 nil])
([nil nil ((15512 . 15533)) nil (25571 46819 878602 536000) 0 nil])
([nil nil ((15533 . 15545)) nil (25571 46819 878601 585000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15544) (undo-tree-id1000 . -1) 15545) nil (25571 46819 878600 420000) 0 nil])
([nil nil ((15680 . 15686) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 15679) (15679 . 15685) (15679 . 15680)) nil (25571 46819 878597 574000) 0 nil])
([nil nil ((15686 . 15702)) nil (25571 46819 878595 985000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15701) (undo-tree-id999 . -1) 15702) nil (25571 46819 878594 680000) 0 nil])
([nil nil ((15701 . 15705)) nil (25571 46819 878592 142000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15704) (undo-tree-id998 . -1) 15705) nil (25571 46819 878590 974000) 0 nil])
([nil nil ((15728 . 15734) (#("      " 0 6 (part-side javascript)) . 15727) (undo-tree-id997 . -6) (15726 . 15734)) nil (25571 46819 878588 341000) 0 nil])
([nil nil ((15734 . 15738)) nil (25571 46819 878585 911000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15737) (undo-tree-id996 . -1) 15738) nil (25571 46819 878584 814000) 0 nil])
([nil nil ((15737 . 15756)) nil (25571 46819 878582 318000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15755) (undo-tree-id995 . -1) 15756) nil (25571 46819 878581 136000) 0 nil])
([nil nil ((15918 . 15925)) nil (25571 46819 878577 933000) 0 nil])
([nil nil ((15925 . 15927)) nil (25571 46819 878577 87000) 0 nil])
([nil nil ((15918 . 15925)) nil (25571 46819 878576 93000) 0 nil])
([nil nil ((15934 . 15948)) nil (25571 46819 878575 120000) 0 nil])
([nil nil ((15948 . 15958)) nil (25571 46819 878574 75000) 0 nil])
([nil nil ((#("R" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15953) (undo-tree-id990 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15954) (undo-tree-id991 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15955) (undo-tree-id992 . -1) (#("r" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15956) (undo-tree-id993 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15957) (undo-tree-id994 . -1) 15958) nil (25571 46819 878572 70000) 0 nil])
([nil nil ((15953 . 15955)) nil (25571 46819 878564 863000) 0 nil])
([nil nil ((#("d" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15953) (undo-tree-id988 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15954) (undo-tree-id989 . -1) 15955) nil (25571 46819 878563 338000) 0 nil])
([nil nil ((15953 . 15961)) nil (25571 46819 878559 843000) 0 nil])
([nil nil ((#("D" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15959) (undo-tree-id986 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15960) (undo-tree-id987 . -1) 15961) nil (25571 46819 878558 279000) 0 nil])
([nil nil ((15959 . 15961)) nil (25571 46819 878554 828000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15960) (undo-tree-id985 . -1) 15961) nil (25571 46819 878553 615000) 0 nil])
([nil nil ((16824 . 16831)) nil (25571 46819 878551 303000) 0 nil])
([nil nil ((16831 . 16835)) nil (25571 46819 878550 190000) 0 nil])
([nil nil ((16835 . 16856)) nil (25571 46819 878549 192000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -16855) (undo-tree-id984 . -1) 16856) nil (25571 46819 878547 911000) 0 nil])
([nil nil ((17827 . 17834) (17813 . 17820) (17781 . 17788) (17763 . 17770) (17731 . 17738) (17712 . 17719) (17681 . 17688) (17662 . 17669) (17640 . 17647) (17614 . 17621) (17594 . 17601) (17569 . 17576) (17528 . 17535) (17515 . 17522) (17487 . 17494) (17434 . 17441) (17404 . 17411) (17361 . 17368) (17348 . 17355) (17300 . 17307) (17250 . 17257) (17216 . 17223) (17203 . 17686) (#("else if (
        'condition' in filt &&
        (filt['condition'] == 'subcountmin' ||
         filt['condition'] == 'subcountmax')
      ) {
        const subcountidx = idxobj['i']
        let sctype = 'MIN'
        if (filt['condition'] == 'subcountmax') {
          sctype = 'MAX'
        }
        idxobj['i'] = idxobj['i'] + 1
        result.push({
          value:
          'SUBCOUNT' +
          sctype +
          '(' +
          filt['subtype'] +
          ',' +
          filt['subcount'] +
          ')',
          index: subcountidx
        })
      }" 0 4 (part-side javascript face web-mode-keyword-face) 4 5 (part-side javascript) 5 7 (part-side javascript face web-mode-keyword-face) 7 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 18 (part-side javascript) 18 19 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 19 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript) 30 32 (part-side javascript face web-mode-keyword-face) 32 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-5-face)) 50 54 (part-side javascript) 54 55 (part-side javascript face (rainbow-delimiters-depth-6-face)) 55 56 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 56 65 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 65 66 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 66 67 (part-side javascript face (rainbow-delimiters-depth-6-face)) 67 71 (part-side javascript) 71 72 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 72 83 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 83 84 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 84 101 (part-side javascript) 101 102 (part-side javascript face (rainbow-delimiters-depth-6-face)) 102 103 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 103 112 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 112 113 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 113 114 (part-side javascript face (rainbow-delimiters-depth-6-face)) 114 118 (part-side javascript) 118 119 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 119 130 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 130 131 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 131 132 (part-side javascript face (rainbow-delimiters-depth-5-face)) 132 133 (part-side javascript) 133 139 (part-side javascript) 139 140 (part-side javascript face (rainbow-delimiters-depth-4-face)) 140 141 (part-side javascript) 141 142 (part-side javascript face (rainbow-delimiters-depth-4-face)) 142 151 (part-side javascript) 151 156 (part-side javascript face web-mode-keyword-face) 156 157 (part-side javascript) 157 168 (part-side javascript face web-mode-variable-name-face) 168 177 (part-side javascript) 177 178 (part-side javascript face (rainbow-delimiters-depth-5-face)) 178 179 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 179 180 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 180 181 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 181 182 (part-side javascript face (rainbow-delimiters-depth-5-face)) 182 191 (part-side javascript) 191 194 (part-side javascript face web-mode-keyword-face) 194 195 (part-side javascript) 195 201 (part-side javascript face web-mode-variable-name-face) 201 204 (part-side javascript) 204 205 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 205 209 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 209 210 (part-side javascript syntax-table (15)) 210 218 (part-side javascript) 218 220 (part-side javascript face web-mode-keyword-face) 220 221 (part-side javascript) 221 222 (part-side javascript face (rainbow-delimiters-depth-5-face)) 222 226 (part-side javascript) 226 227 (part-side javascript face (rainbow-delimiters-depth-6-face)) 227 228 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 228 237 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 237 238 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 238 239 (part-side javascript face (rainbow-delimiters-depth-6-face)) 239 243 (part-side javascript) 243 244 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 244 255 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 255 256 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 256 257 (part-side javascript face (rainbow-delimiters-depth-5-face)) 257 258 (part-side javascript) 258 259 (part-side javascript face (rainbow-delimiters-depth-5-face)) 259 279 (part-side javascript) 279 280 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 280 284 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 284 285 (part-side javascript syntax-table (15)) 285 293 (part-side javascript) 293 294 (part-side javascript face (rainbow-delimiters-depth-5-face)) 294 309 (part-side javascript) 309 310 (part-side javascript face (rainbow-delimiters-depth-5-face)) 310 311 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 311 312 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 312 313 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 313 314 (part-side javascript face (rainbow-delimiters-depth-5-face)) 314 323 (part-side javascript) 323 324 (part-side javascript face (rainbow-delimiters-depth-5-face)) 324 325 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 325 326 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 326 327 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 327 328 (part-side javascript face (rainbow-delimiters-depth-5-face)) 328 348 (part-side javascript) 348 352 (part-side javascript face web-mode-function-call-face) 352 353 (part-side javascript face (rainbow-delimiters-depth-5-face)) 353 354 (part-side javascript face (rainbow-delimiters-depth-6-face)) 354 365 (part-side javascript) 365 370 (part-side javascript face web-mode-variable-name-face) 370 382 (part-side javascript) 382 383 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 383 391 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 391 392 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 392 424 (part-side javascript) 424 425 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 425 426 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 426 427 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 427 444 (part-side javascript) 444 445 (part-side javascript face (rainbow-delimiters-depth-7-face)) 445 446 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 446 453 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 453 454 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 454 455 (part-side javascript face (rainbow-delimiters-depth-7-face)) 455 468 (part-side javascript) 468 469 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 469 470 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 470 471 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 471 488 (part-side javascript) 488 489 (part-side javascript face (rainbow-delimiters-depth-7-face)) 489 490 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 490 498 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 498 499 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 499 500 (part-side javascript face (rainbow-delimiters-depth-7-face)) 500 513 (part-side javascript) 513 514 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 514 515 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 515 516 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 516 528 (part-side javascript) 528 533 (part-side javascript face web-mode-variable-name-face) 533 555 (part-side javascript) 555 556 (part-side javascript face (rainbow-delimiters-depth-6-face)) 556 557 (part-side javascript face (rainbow-delimiters-depth-5-face)) 557 564 (part-side javascript) 564 565 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 17203) (undo-tree-id981 . -565) (undo-tree-id982 . -10) (undo-tree-id983 . -565)) nil (25571 46819 878544 15000) 0 nil])
([nil nil ((17840 . 17847)) nil (25571 46819 878534 117000) 0 nil])
([nil nil ((17847 . 17868)) nil (25571 46819 878533 56000) 0 nil])
([nil nil ((17868 . 17869)) nil (25571 46819 878532 56000) 0 nil])
([nil nil ((#("if a" 0 2 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2 4 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 17850) (undo-tree-id979 . -4) (undo-tree-id980 . -4)) nil (25571 46819 878530 710000) 0 nil])
([nil nil ((17850 . 17857)) nil (25571 46819 878527 342000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17856) (undo-tree-id978 . -1) 17857) nil (25571 46819 878525 983000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17870) (undo-tree-id977 . -1) 17871) nil (25571 46819 878523 36000) 0 nil])
([nil nil ((17870 . 17874)) nil (25571 46819 878520 343000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17870) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17871) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("c" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17872) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (#("o" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17873) (undo-tree-id975 . -1) (undo-tree-id976 . -1) 17874) nil (25571 46819 878517 849000) 0 nil])
([nil nil ((17872 . 17891) (17871 . 17873) (#("(" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17871) (17870 . 17872)) nil (25571 46819 878506 738000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -17890) (undo-tree-id968 . -1) 17891) nil (25571 46819 878504 466000) 0 nil])
([nil nil ((#("If it is a" 0 2 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2 5 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 5 8 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 8 10 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 16834) (undo-tree-id966 . -10) (undo-tree-id967 . -10)) nil (25571 46819 878502 25000) 0 nil])
([nil nil ((16834 . 16840)) nil (25571 46819 878498 669000) 0 nil])
([nil nil ((#("if filter is" 0 2 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 2 9 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 9 12 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15935) (undo-tree-id964 . -12) (undo-tree-id965 . -12)) nil (25571 46819 878497 159000) 0 nil])
([nil nil ((15935 . 15941)) nil (25571 46819 878493 577000) 0 nil])
([nil nil ((#("f filter is" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 1 8 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 8 11 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 15738) (undo-tree-id962 . -11) (undo-tree-id963 . -11)) nil (25571 46819 878492 238000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -15737) (undo-tree-id960 . -1) (undo-tree-id961 . -1) 15738) nil (25571 46819 878488 166000) 0 nil])
([nil nil ((15737 . 15743)) nil (25571 46819 878479 128000) 0 nil])
([nil nil ((15749 . 15756)) nil (25571 46819 878477 347000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript face whitespace-trailing)) . -15911) (#("         " 0 9 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face face whitespace-trailing)) . -15274) 15670) nil (25571 46819 878469 709000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -6492) (undo-tree-id4 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -6493) (undo-tree-id5 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -6494) (undo-tree-id6 . -1) 6495 (t 25571 46819 917133 540000)) nil (25574 26716 828981 35000) 0 nil])
([nil nil ((6551 . 6553)) nil (25574 26716 828974 31000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6574 . 6575) (nil part-side javascript 6574 . 6575) (nil part-token string 6574 . 6575) (nil syntax-table (15) 6574 . 6575) (nil font-lock-face web-mode-javascript-string-face 6574 . 6575) (nil part-side javascript 6560 . 6574) (nil part-token string 6560 . 6574) (nil font-lock-face web-mode-javascript-string-face 6560 . 6574) (nil part-side javascript 6559 . 6560) (nil part-token string 6559 . 6560) (nil syntax-table (15) 6559 . 6560) (nil font-lock-face web-mode-javascript-string-face 6559 . 6560) (nil part-side javascript 6557 . 6559) (nil part-side javascript 6553 . 6557) (nil face web-mode-keyword-face 6553 . 6557) (6553 . 6575)) nil (25574 26716 828971 390000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6560) (undo-tree-id0 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6561) (undo-tree-id1 . -1) (#("g" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6562) (undo-tree-id2 . -1) (#("r" 0 1 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript)) . -6563) (undo-tree-id3 . -1) 6564) nil (25574 26716 828963 13000) 0 nil])
([nil nil ((6560 . 6564)) nil (25574 26716 828916 492000) 0 nil])
([nil nil ((18477 . 18484) (t 25579 18392 269697 682000)) nil (25579 31409 393220 165000) 0 nil])
([nil nil ((18484 . 18491)) nil (25579 31409 393218 863000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -18484) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("e" 0 1 (part-side javascript)) . -18485) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("l" 0 1 (part-side javascript)) . -18486) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (part-side javascript)) . -18487) (undo-tree-id31 . -1) (#("i" 0 1 (part-side javascript)) . -18488) (undo-tree-id32 . -1) (#("f" 0 1 (part-side javascript face web-mode-keyword-face)) . -18489) (undo-tree-id33 . -1) (#(" " 0 1 (part-side javascript)) . -18490) (undo-tree-id34 . -1) 18491) nil (25579 31409 393216 351000) 0 nil])
([nil nil ((18493 . 18495) (18492 . 18494) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -18492) (18484 . 18493)) nil (25579 31409 393202 815000) 0 nil])
([nil nil ((18494 . 18498)) nil (25579 31409 393201 105000) 0 nil])
([nil nil ((18499 . 18502)) nil (25579 31409 393200 127000) 0 nil])
([nil nil ((18502 . 18508)) nil (25579 31409 393198 909000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18507) (undo-tree-id24 . -1) 18508) nil (25579 31409 393197 818000) 0 nil])
([nil nil ((18509 . 18511) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -18509) (18508 . 18510)) nil (25579 31409 393195 302000) 0 nil])
([nil nil ((18513 . 18519) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 18512) (18512 . 18520) (#("      " 0 6 (part-side javascript)) . 18512) (undo-tree-id21 . -6) (18512 . 18519) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 18511) (undo-tree-id22 . 8) (18511 . 18519) (#("      " 0 6 (part-side javascript)) . 18511) (undo-tree-id23 . -6) (18510 . 18518)) nil (25579 31409 393192 871000) 0 nil])
([nil nil ((18512 . 18520)) nil (25579 31409 393186 943000) 0 nil])
([nil nil ((18520 . 18525)) nil (25579 31409 393185 805000) 0 nil])
([nil nil ((18532 . 18534) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -18532) (18532 . 18533) (18531 . 18533) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -18531) (18525 . 18532)) nil (25579 31409 393184 436000) 0 nil])
([nil nil ((18535 . 18543) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 18534) (undo-tree-id19 . -8) (undo-tree-id20 . 10) (18542 . 18544) (18533 . 18543)) nil (25579 31409 393181 877000) 0 nil])
([nil nil ((18534 . 18544)) nil (25579 31409 393178 351000) 0 nil])
([nil nil ((18544 . 18550)) nil (25579 31409 393177 303000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18549) (undo-tree-id18 . -1) 18550) nil (25579 31409 393176 136000) 0 nil])
([nil nil ((18549 . 18556)) nil (25579 31409 393174 42000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18555) (undo-tree-id17 . -1) 18556) nil (25579 31409 393172 806000) 0 nil])
([nil nil ((18555 . 18557) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -18555) (18555 . 18556)) nil (25579 31409 393170 447000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -18551) (undo-tree-id11 . -1) (#("i" 0 1 (part-side javascript)) . -18552) (undo-tree-id12 . -1) (#("l" 0 1 (part-side javascript)) . -18553) (undo-tree-id13 . -1) (#("t" 0 1 (part-side javascript)) . -18554) (undo-tree-id14 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -18555) (undo-tree-id15 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -18556) (undo-tree-id16 . -1) 18557) nil (25579 31409 393168 30000) 0 nil])
([nil nil ((18552 . 18554) (nil part-token string 18552 . 18553) (nil font-lock-face web-mode-javascript-string-face 18552 . 18553) (nil part-side javascript 18552 . 18553) (18551 . 18553) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -18551) (18551 . 18552)) nil (25579 31409 393159 307000) 0 nil])
([nil nil ((18554 . 18557)) nil (25579 31409 393156 917000) 0 nil])
([nil nil ((18558 . 18563)) nil (25579 31409 393155 866000) 0 nil])
([nil nil ((18562 . 18563)) nil (25579 31409 393154 934000) 0 nil])
([nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -18561) (undo-tree-id8 . -1) (#(" " 0 1 (part-side javascript)) . -18562) (undo-tree-id9 . -1) (#("'" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18563) (undo-tree-id10 . -1) 18564) nil (25579 31409 393153 196000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18551)) nil (25579 31409 393148 258000) 0 nil])
([nil nil ((18551 . 18552)) nil (25579 31409 393147 350000) 0 nil])
([nil nil ((#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18557)) nil (25579 31409 393146 310000) 0 nil])
([nil nil ((18557 . 18558)) nil (25579 31409 393145 391000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18556) (undo-tree-id7 . -1) 18557) nil (25579 31409 393143 976000) 0 nil])
([nil nil ((18556 . 18558) (#("(" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18556) (18556 . 18557)) nil (25579 31409 393141 689000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 18557)) nil (25579 31409 393140 180000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript face whitespace-trailing)) . -18558) (undo-tree-id5 . -1) (#("+" 0 1 (part-side javascript)) . -18559) (undo-tree-id6 . -1) 18560) nil (25579 31409 393138 763000) 0 nil])
([nil nil ((18559 . 18569) (#(" " 0 1 (part-side javascript face whitespace-trailing)) . 18559) (undo-tree-id4 . -1) (18558 . 18559)) nil (25579 31409 393134 860000) 0 nil])
([nil nil ((18569 . 18582)) nil (25579 31409 393132 361000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18581) (undo-tree-id3 . -1) 18582) nil (25579 31409 393131 94000) 0 nil])
([nil nil ((18510 . 18519)) nil (25579 31409 393128 598000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18582 . 18583) (nil part-side javascript 18579 . 18583) (nil part-side javascript 18578 . 18579) (nil face (rainbow-delimiters-depth-5-face) 18578 . 18579) (nil part-side javascript 18577 . 18578) (nil part-token string 18577 . 18578) (nil syntax-table (15) 18577 . 18578) (nil font-lock-face web-mode-javascript-string-face 18577 . 18578) (nil part-side javascript 18576 . 18577) (nil part-token string 18576 . 18577) (nil font-lock-face web-mode-javascript-string-face 18576 . 18577) (nil part-side javascript 18575 . 18576) (nil part-token string 18575 . 18576) (nil syntax-table (15) 18575 . 18576) (nil font-lock-face web-mode-javascript-string-face 18575 . 18576) (nil part-side javascript 18574 . 18575) (nil face (rainbow-delimiters-depth-5-face) 18574 . 18575) (nil part-side javascript 18565 . 18574) (nil part-side javascript 18564 . 18565) (nil face (rainbow-delimiters-depth-5-face) 18564 . 18565) (nil part-side javascript 18563 . 18564) (nil part-token string 18563 . 18564) (nil syntax-table (15) 18563 . 18564) (nil font-lock-face web-mode-javascript-string-face 18563 . 18564) (nil part-side javascript 18562 . 18563) (nil part-token string 18562 . 18563) (nil font-lock-face web-mode-javascript-string-face 18562 . 18563) (nil part-side javascript 18561 . 18562) (nil part-token string 18561 . 18562) (nil syntax-table (15) 18561 . 18562) (nil font-lock-face web-mode-javascript-string-face 18561 . 18562) (nil part-side javascript 18560 . 18561) (nil face (rainbow-delimiters-depth-5-face) 18560 . 18561) (nil part-side javascript 18545 . 18560) (nil part-side javascript 18544 . 18545) (nil face (rainbow-delimiters-depth-5-face) 18544 . 18545) (nil part-side javascript 18543 . 18544) (nil part-token string 18543 . 18544) (nil syntax-table (15) 18543 . 18544) (nil font-lock-face web-mode-javascript-string-face 18543 . 18544) (nil part-side javascript 18542 . 18543) (nil part-token string 18542 . 18543) (nil font-lock-face web-mode-javascript-string-face 18542 . 18543) (nil part-side javascript 18541 . 18542) (nil part-token string 18541 . 18542) (nil syntax-table (15) 18541 . 18542) (nil font-lock-face web-mode-javascript-string-face 18541 . 18542) (nil part-side javascript 18540 . 18541) (nil face (rainbow-delimiters-depth-5-face) 18540 . 18541) (nil part-side javascript 18531 . 18540) (nil part-side javascript 18525 . 18531) (nil face web-mode-variable-name-face 18525 . 18531) (nil part-side javascript 18524 . 18525) (nil part-side javascript 18519 . 18524) (nil face web-mode-keyword-face 18519 . 18524) (18519 . 18583)) nil (25579 31409 393124 989000) 0 nil])
([nil nil ((#("notidx" 0 6 (part-side javascript)) . 18648) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6)) nil (25579 31409 393111 487000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18658 . 18659) (nil part-side javascript 18658 . 18659) (nil face (rainbow-delimiters-depth-7-face) 18658 . 18659) (nil part-side javascript 18657 . 18658) (nil part-token string 18657 . 18658) (nil syntax-table (15) 18657 . 18658) (nil font-lock-face web-mode-javascript-string-face 18657 . 18658) (nil part-side javascript 18656 . 18657) (nil part-token string 18656 . 18657) (nil font-lock-face web-mode-javascript-string-face 18656 . 18657) (nil part-side javascript 18655 . 18656) (nil part-token string 18655 . 18656) (nil syntax-table (15) 18655 . 18656) (nil font-lock-face web-mode-javascript-string-face 18655 . 18656) (nil part-side javascript 18654 . 18655) (nil face (rainbow-delimiters-depth-7-face) 18654 . 18655) (nil part-side javascript 18648 . 18654) (18648 . 18659)) nil (25579 31409 393088 558000) 0 nil])
([nil nil ((18659 . 18670)) nil (25579 31409 393084 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18798 . 18799) (nil part-side javascript 18798 . 18799) (nil face (rainbow-delimiters-depth-7-face) 18798 . 18799) (nil part-side javascript 18797 . 18798) (nil face (rainbow-delimiters-depth-8-face) 18797 . 18798) (nil part-side javascript 18796 . 18797) (nil part-side javascript 18790 . 18796) (nil face web-mode-variable-name-face 18790 . 18796) (nil part-side javascript 18788 . 18790) (nil part-side javascript 18783 . 18788) (nil face web-mode-variable-name-face 18783 . 18788) (nil part-side javascript 18781 . 18783) (nil part-side javascript 18780 . 18781) (nil part-token string 18780 . 18781) (nil syntax-table (15) 18780 . 18781) (nil font-lock-face web-mode-javascript-string-face 18780 . 18781) (nil part-side javascript 18779 . 18780) (nil part-token string 18779 . 18780) (nil font-lock-face web-mode-javascript-string-face 18779 . 18780) (nil part-side javascript 18778 . 18779) (nil part-token string 18778 . 18779) (nil syntax-table (15) 18778 . 18779) (nil font-lock-face web-mode-javascript-string-face 18778 . 18779) (nil part-side javascript 18776 . 18778) (nil part-side javascript 18771 . 18776) (nil face web-mode-variable-name-face 18771 . 18776) (nil part-side javascript 18770 . 18771) (nil part-side javascript 18769 . 18770) (nil face (rainbow-delimiters-depth-8-face) 18769 . 18770) (nil part-side javascript 18768 . 18769) (nil face (rainbow-delimiters-depth-7-face) 18768 . 18769) (nil part-side javascript 18764 . 18768) (nil face web-mode-function-call-face 18764 . 18768) (nil part-side javascript 18748 . 18764) (nil part-side javascript 18747 . 18748) (nil face (rainbow-delimiters-depth-7-face) 18747 . 18748) (nil part-side javascript 18746 . 18747) (nil face (rainbow-delimiters-depth-8-face) 18746 . 18747) (nil part-side javascript 18727 . 18746) (nil part-side javascript 18726 . 18727) (nil face (rainbow-delimiters-depth-9-face) 18726 . 18727) (nil part-side javascript 18725 . 18726) (nil part-token string 18725 . 18726) (nil syntax-table (15) 18725 . 18726) (nil font-lock-face web-mode-javascript-string-face 18725 . 18726) (nil part-side javascript 18721 . 18725) (nil part-token string 18721 . 18725) (nil font-lock-face web-mode-javascript-string-face 18721 . 18725) (nil part-side javascript 18720 . 18721) (nil part-token string 18720 . 18721) (nil syntax-table (15) 18720 . 18721) (nil font-lock-face web-mode-javascript-string-face 18720 . 18721) (nil part-side javascript 18719 . 18720) (nil face (rainbow-delimiters-depth-9-face) 18719 . 18720) (nil part-side javascript 18715 . 18719) (nil part-side javascript 18714 . 18715) (nil face (rainbow-delimiters-depth-8-face) 18714 . 18715) (nil part-side javascript 18698 . 18714) (nil face web-mode-function-call-face 18698 . 18714) (nil part-side javascript 18697 . 18698) (nil part-side javascript 18693 . 18697) (nil face web-mode-constant-face 18693 . 18697) (nil part-side javascript 18692 . 18693) (nil face (rainbow-delimiters-depth-7-face) 18692 . 18693) (nil part-side javascript 18686 . 18692) (nil face web-mode-function-call-face 18686 . 18692) (nil part-side javascript 18670 . 18686) (18670 . 18799)) nil (25579 31409 393079 833000) 0 nil])
([nil nil ((18802 . 18812) (18757 . 18759) (18799 . 18800)) nil (25579 31409 409186 672000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18721) (undo-tree-id76 . -1) (#("u" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18722) (undo-tree-id77 . -1) (#("l" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18723) (undo-tree-id78 . -1) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18724) (undo-tree-id79 . -1) 18725) nil (25579 32213 545190 854000) 0 nil] [nil nil ((nil rear-nonsticky nil 18940 . 18941) (nil part-side javascript 18940 . 18941) (nil face (rainbow-delimiters-depth-7-face) 18940 . 18941) (nil part-side javascript 18939 . 18940) (nil face (rainbow-delimiters-depth-8-face) 18939 . 18940) (nil part-side javascript 18938 . 18939) (nil part-side javascript 18932 . 18938) (nil face web-mode-variable-name-face 18932 . 18938) (nil part-side javascript 18930 . 18932) (nil part-side javascript 18925 . 18930) (nil face web-mode-variable-name-face 18925 . 18930) (nil part-side javascript 18923 . 18925) (nil part-side javascript 18922 . 18923) (nil part-token string 18922 . 18923) (nil syntax-table (15) 18922 . 18923) (nil font-lock-face web-mode-javascript-string-face 18922 . 18923) (nil part-side javascript 18921 . 18922) (nil part-token string 18921 . 18922) (nil font-lock-face web-mode-javascript-string-face 18921 . 18922) (nil part-side javascript 18920 . 18921) (nil part-token string 18920 . 18921) (nil syntax-table (15) 18920 . 18921) (nil font-lock-face web-mode-javascript-string-face 18920 . 18921) (nil part-side javascript 18918 . 18920) (nil part-side javascript 18913 . 18918) (nil face web-mode-variable-name-face 18913 . 18918) (nil part-side javascript 18912 . 18913) (nil part-side javascript 18911 . 18912) (nil face (rainbow-delimiters-depth-8-face) 18911 . 18912) (nil part-side javascript 18910 . 18911) (nil face (rainbow-delimiters-depth-7-face) 18910 . 18911) (nil part-side javascript 18906 . 18910) (nil face web-mode-function-call-face 18906 . 18910) (nil part-side javascript 18890 . 18906) (nil part-side javascript 18889 . 18890) (nil face (rainbow-delimiters-depth-7-face) 18889 . 18890) (nil part-side javascript 18888 . 18889) (nil face (rainbow-delimiters-depth-8-face) 18888 . 18889) (nil part-side javascript 18869 . 18888) (nil part-side javascript 18868 . 18869) (nil face (rainbow-delimiters-depth-9-face) 18868 . 18869) (nil part-side javascript 18867 . 18868) (nil part-token string 18867 . 18868) (nil syntax-table (15) 18867 . 18868) (nil font-lock-face web-mode-javascript-string-face 18867 . 18868) (nil part-side javascript 18863 . 18867) (nil part-token string 18863 . 18867) (nil font-lock-face web-mode-javascript-string-face 18863 . 18867) (nil part-side javascript 18862 . 18863) (nil part-token string 18862 . 18863) (nil syntax-table (15) 18862 . 18863) (nil font-lock-face web-mode-javascript-string-face 18862 . 18863) (nil part-side javascript 18861 . 18862) (nil face (rainbow-delimiters-depth-9-face) 18861 . 18862) (nil part-side javascript 18857 . 18861) (nil part-side javascript 18856 . 18857) (nil face (rainbow-delimiters-depth-8-face) 18856 . 18857) (nil part-side javascript 18840 . 18856) (nil face web-mode-function-call-face 18840 . 18856) (nil part-side javascript 18839 . 18840) (nil part-side javascript 18835 . 18839) (nil face web-mode-constant-face 18835 . 18839) (nil part-side javascript 18834 . 18835) (nil face (rainbow-delimiters-depth-7-face) 18834 . 18835) (nil part-side javascript 18828 . 18834) (nil face web-mode-function-call-face 18828 . 18834) (nil part-side javascript 18812 . 18828) (18812 . 18941)) ((#("result = result.concat(this.filtertotextlist(filt['rule'], idxobj, setcurfil))
        result.push({ value: ')', index: notidx })" 0 16 (part-side javascript) 16 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-7-face)) 23 27 (part-side javascript face web-mode-constant-face) 27 28 (part-side javascript) 28 44 (part-side javascript face web-mode-function-call-face) 44 45 (part-side javascript face (rainbow-delimiters-depth-8-face)) 45 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-9-face)) 50 51 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 51 55 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 55 56 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 56 57 (part-side javascript face (rainbow-delimiters-depth-9-face)) 57 76 (part-side javascript) 76 77 (part-side javascript face (rainbow-delimiters-depth-8-face)) 77 78 (part-side javascript face (rainbow-delimiters-depth-7-face)) 78 79 (part-side javascript) 79 94 (part-side javascript) 94 98 (part-side javascript face web-mode-function-call-face) 98 99 (part-side javascript face (rainbow-delimiters-depth-7-face)) 99 100 (part-side javascript face (rainbow-delimiters-depth-8-face)) 100 101 (part-side javascript) 101 106 (part-side javascript face web-mode-variable-name-face) 106 108 (part-side javascript) 108 109 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 109 110 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 110 111 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 111 113 (part-side javascript) 113 118 (part-side javascript face web-mode-variable-name-face) 118 120 (part-side javascript) 120 126 (part-side javascript face web-mode-variable-name-face) 126 127 (part-side javascript) 127 128 (part-side javascript face (rainbow-delimiters-depth-8-face)) 128 129 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-7-face))) . 18812) (undo-tree-id35 . -40) (undo-tree-id36 . -79) (nil face (rainbow-delimiters-depth-7-face) 18834 . 18835) (nil face (rainbow-delimiters-depth-8-face) 18856 . 18857) (nil face (rainbow-delimiters-depth-9-face) 18861 . 18862) (nil syntax-table (15) 18862 . 18863) (nil syntax-table (15) 18867 . 18868) (nil face (rainbow-delimiters-depth-9-face) 18868 . 18869) (nil face (rainbow-delimiters-depth-8-face) 18888 . 18889) (nil face (rainbow-delimiters-depth-7-face) 18889 . 18890) (nil face (rainbow-delimiters-depth-7-face) 18910 . 18911) (nil face (rainbow-delimiters-depth-8-face) 18911 . 18912) (nil syntax-table (15) 18920 . 18921) (nil syntax-table (15) 18922 . 18923) (nil face (rainbow-delimiters-depth-8-face) 18939 . 18940) (nil face (rainbow-delimiters-depth-7-face) 18940 . 18941) (nil rear-nonsticky t 18940 . 18941)) (25579 31409 393054 264000) 0 nil])
([nil nil ((18721 . 18726)) nil (25579 32213 545185 87000) 0 nil])
nil
([nil nil ((#("        })
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript face (rainbow-delimiters-mismatched-face)) 10 11 (part-side javascript)) . 18825) (undo-tree-id73 . -10) (undo-tree-id74 . -11) (18814 . 18825) (#("          
" 0 10 (part-side javascript face whitespace-trailing) 10 11 (part-side javascript)) . 18803) (undo-tree-id75 . -10) (18814 . 18825) 18824) nil (25579 32213 545183 517000) 0 nil])
([nil nil ((#("        })
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript face (rainbow-delimiters-mismatched-face)) 10 11 (part-side javascript)) . 18814) (undo-tree-id71 . -10) (undo-tree-id72 . -11) (18761 . 18814) (#("          result.push({ value: ')', index: notidx })
" 0 17 (part-side javascript) 17 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-7-face)) 22 23 (part-side javascript face (rainbow-delimiters-depth-8-face)) 23 24 (part-side javascript) 24 29 (part-side javascript face web-mode-variable-name-face) 29 31 (part-side javascript) 31 32 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 36 (part-side javascript) 36 41 (part-side javascript face web-mode-variable-name-face) 41 43 (part-side javascript) 43 49 (part-side javascript face web-mode-variable-name-face) 49 50 (part-side javascript) 50 51 (part-side javascript face (rainbow-delimiters-depth-8-face)) 51 52 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-7-face)) 52 53 (part-side javascript)) . 18750) (18803 . 18814) 18813) nil (25579 32213 545177 914000) 0 nil])
([nil nil ((#("        })
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript face (rainbow-delimiters-mismatched-face)) 10 11 (part-side javascript)) . 18761) (undo-tree-id66 . -10) (undo-tree-id67 . -11) (undo-tree-id68 . -11) (18671 . 18761) (#("          result = result.concat(this.filtertotextlist(filt['query'], idxobj, setcurfil))
" 0 10 (part-side javascript) 10 26 (part-side javascript) 26 32 (part-side javascript face web-mode-function-call-face) 32 33 (part-side javascript face (rainbow-delimiters-depth-7-face)) 33 37 (part-side javascript face web-mode-constant-face) 37 38 (part-side javascript) 38 54 (part-side javascript face web-mode-function-call-face) 54 55 (part-side javascript face (rainbow-delimiters-depth-8-face)) 55 59 (part-side javascript) 59 60 (part-side javascript face (rainbow-delimiters-depth-9-face)) 60 61 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 61 66 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 66 67 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 67 68 (part-side javascript face (rainbow-delimiters-depth-9-face)) 68 87 (part-side javascript) 87 88 (part-side javascript face (rainbow-delimiters-depth-8-face)) 88 89 (part-side javascript face (rainbow-delimiters-depth-7-face)) 89 90 (part-side javascript)) . 18660) (undo-tree-id69 . -66) (undo-tree-id70 . -10) (18750 . 18761) 18760) nil (25579 32213 545173 15000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -18679) (undo-tree-id65 . -2) 18681) nil (25579 32213 545165 585000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -18767)) nil (25579 32213 545161 465000) 0 nil])
([nil nil ((#("
        const notidx = idxobj['i']" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 14 (part-side javascript face web-mode-keyword-face) 14 15 (part-side javascript) 15 21 (part-side javascript face web-mode-variable-name-face) 21 30 (part-side javascript) 30 31 (part-side javascript face (rainbow-delimiters-depth-5-face)) 31 32 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 18510) (undo-tree-id59 . -35) (undo-tree-id60 . -1) (undo-tree-id61 . -9) (undo-tree-id62 . -35) (undo-tree-id63 . -35) (undo-tree-id64 . -35)) nil (25579 32213 545160 118000) 0 nil])
([nil nil ((#("idxobj['i'] = idxobj['i'] + 1" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-5-face)) 7 8 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 8 9 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (part-side javascript face (rainbow-delimiters-depth-5-face)) 11 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 23 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 25 (part-side javascript face (rainbow-delimiters-depth-5-face)) 25 28 (part-side javascript) 28 29 (rear-nonsticky t part-side javascript)) . 18519) (undo-tree-id57 . -29) (undo-tree-id58 . -29)) nil (25579 32213 545151 396000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -18510) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (part-side javascript)) . -18511) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (part-side javascript)) . -18512) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (part-side javascript)) . -18513) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (part-side javascript)) . -18514) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(" " 0 1 (part-side javascript)) . -18515) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (part-side javascript)) . -18516) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (part-side javascript)) . -18517) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (part-side javascript)) . -18518) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 18519) nil (25579 32213 545145 375000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18510) (undo-tree-id37 . -1)) nil (25579 32214 144455 461000) 0 nil])
([nil nil ((18510 . 18519)) nil (25579 32308 681621 40000) 0 nil] [nil nil ((18684 . 18693)) ((#("
        " 0 1 (part-side javascript) 1 9 (part-side javascript)) . 18684) (undo-tree-id81 . -9) (undo-tree-id82 . -9) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -9) (undo-tree-id86 . -9) (undo-tree-id87 . -9) (undo-tree-id88 . -9) (undo-tree-id89 . -9) (undo-tree-id90 . -9) (undo-tree-id91 . -9) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -9) (undo-tree-id99 . -9) (undo-tree-id100 . -9) (undo-tree-id101 . -9) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -9)) (25579 32213 554316 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18547 . 18548) (nil rear-nonsticky t 18547 . 18548) (nil part-side javascript 18547 . 18548) (nil part-side javascript 18544 . 18547) (nil part-side javascript 18543 . 18544) (nil face (rainbow-delimiters-depth-5-face) 18543 . 18544) (nil part-side javascript 18542 . 18543) (nil part-token string 18542 . 18543) (nil syntax-table (15) 18542 . 18543) (nil font-lock-face web-mode-javascript-string-face 18542 . 18543) (nil part-side javascript 18541 . 18542) (nil part-token string 18541 . 18542) (nil font-lock-face web-mode-javascript-string-face 18541 . 18542) (nil part-side javascript 18540 . 18541) (nil part-token string 18540 . 18541) (nil syntax-table (15) 18540 . 18541) (nil font-lock-face web-mode-javascript-string-face 18540 . 18541) (nil part-side javascript 18539 . 18540) (nil face (rainbow-delimiters-depth-5-face) 18539 . 18540) (nil part-side javascript 18530 . 18539) (nil part-side javascript 18529 . 18530) (nil face (rainbow-delimiters-depth-5-face) 18529 . 18530) (nil part-side javascript 18528 . 18529) (nil part-token string 18528 . 18529) (nil syntax-table (15) 18528 . 18529) (nil font-lock-face web-mode-javascript-string-face 18528 . 18529) (nil part-side javascript 18527 . 18528) (nil part-token string 18527 . 18528) (nil font-lock-face web-mode-javascript-string-face 18527 . 18528) (nil part-side javascript 18526 . 18527) (nil part-token string 18526 . 18527) (nil syntax-table (15) 18526 . 18527) (nil font-lock-face web-mode-javascript-string-face 18526 . 18527) (nil part-side javascript 18525 . 18526) (nil face (rainbow-delimiters-depth-5-face) 18525 . 18526) (nil part-side javascript 18519 . 18525) (18519 . 18548)) nil (25579 32308 681618 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18721 . 18722) (nil rear-nonsticky t 18721 . 18722) (nil part-side javascript 18721 . 18722) (nil part-side javascript 18718 . 18721) (nil part-side javascript 18717 . 18718) (nil face (rainbow-delimiters-depth-5-face) 18717 . 18718) (nil part-side javascript 18716 . 18717) (nil part-token string 18716 . 18717) (nil syntax-table (15) 18716 . 18717) (nil font-lock-face web-mode-javascript-string-face 18716 . 18717) (nil part-side javascript 18715 . 18716) (nil part-token string 18715 . 18716) (nil font-lock-face web-mode-javascript-string-face 18715 . 18716) (nil part-side javascript 18714 . 18715) (nil part-token string 18714 . 18715) (nil syntax-table (15) 18714 . 18715) (nil font-lock-face web-mode-javascript-string-face 18714 . 18715) (nil part-side javascript 18713 . 18714) (nil face (rainbow-delimiters-depth-5-face) 18713 . 18714) (nil part-side javascript 18704 . 18713) (nil part-side javascript 18703 . 18704) (nil face (rainbow-delimiters-depth-5-face) 18703 . 18704) (nil part-side javascript 18702 . 18703) (nil part-token string 18702 . 18703) (nil syntax-table (15) 18702 . 18703) (nil font-lock-face web-mode-javascript-string-face 18702 . 18703) (nil part-side javascript 18701 . 18702) (nil part-token string 18701 . 18702) (nil font-lock-face web-mode-javascript-string-face 18701 . 18702) (nil part-side javascript 18700 . 18701) (nil part-token string 18700 . 18701) (nil syntax-table (15) 18700 . 18701) (nil font-lock-face web-mode-javascript-string-face 18700 . 18701) (nil part-side javascript 18699 . 18700) (nil face (rainbow-delimiters-depth-5-face) 18699 . 18700) (nil part-side javascript 18693 . 18699) (18693 . 18722)) ((#("idxobj['i'] = idxobj['i'] + 1" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-5-face)) 7 8 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 8 9 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (part-side javascript face (rainbow-delimiters-depth-5-face)) 11 20 (part-side javascript) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face)) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 23 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 25 (part-side javascript face (rainbow-delimiters-depth-5-face)) 25 28 (part-side javascript) 28 29 (rear-nonsticky t part-side javascript)) . 18693) (undo-tree-id80 . -29) (nil face (rainbow-delimiters-depth-5-face) 18699 . 18700) (nil syntax-table (15) 18700 . 18701) (nil syntax-table (15) 18702 . 18703) (nil face (rainbow-delimiters-depth-5-face) 18703 . 18704) (nil face (rainbow-delimiters-depth-5-face) 18713 . 18714) (nil syntax-table (15) 18714 . 18715) (nil syntax-table (15) 18716 . 18717) (nil face (rainbow-delimiters-depth-5-face) 18717 . 18718) (nil rear-nonsticky nil 18721 . 18722) (nil rear-nonsticky t 18721 . 18722)) (25579 32213 545100 969000) 0 nil])
([nil nil ((18510 . 18519)) nil (25579 32308 681609 187000) 0 nil])
nil
([nil nil ((18519 . 18537)) nil (25579 32308 681608 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18565 . 18566) (nil rear-nonsticky t 18565 . 18566) (nil part-side javascript 18565 . 18566) (nil part-side javascript 18562 . 18565) (nil part-side javascript 18561 . 18562) (nil face (rainbow-delimiters-depth-5-face) 18561 . 18562) (nil part-side javascript 18560 . 18561) (nil part-token string 18560 . 18561) (nil syntax-table (15) 18560 . 18561) (nil font-lock-face web-mode-javascript-string-face 18560 . 18561) (nil part-side javascript 18559 . 18560) (nil part-token string 18559 . 18560) (nil font-lock-face web-mode-javascript-string-face 18559 . 18560) (nil part-side javascript 18558 . 18559) (nil part-token string 18558 . 18559) (nil syntax-table (15) 18558 . 18559) (nil font-lock-face web-mode-javascript-string-face 18558 . 18559) (nil part-side javascript 18557 . 18558) (nil face (rainbow-delimiters-depth-5-face) 18557 . 18558) (nil part-side javascript 18548 . 18557) (nil part-side javascript 18547 . 18548) (nil face (rainbow-delimiters-depth-5-face) 18547 . 18548) (nil part-side javascript 18546 . 18547) (nil part-token string 18546 . 18547) (nil syntax-table (15) 18546 . 18547) (nil font-lock-face web-mode-javascript-string-face 18546 . 18547) (nil part-side javascript 18545 . 18546) (nil part-token string 18545 . 18546) (nil font-lock-face web-mode-javascript-string-face 18545 . 18546) (nil part-side javascript 18544 . 18545) (nil part-token string 18544 . 18545) (nil syntax-table (15) 18544 . 18545) (nil font-lock-face web-mode-javascript-string-face 18544 . 18545) (nil part-side javascript 18543 . 18544) (nil face (rainbow-delimiters-depth-5-face) 18543 . 18544) (nil part-side javascript 18537 . 18543) (18537 . 18566)) nil (25579 32308 681605 276000) 0 nil])
([nil nil ((#("1" 0 1 (rear-nonsticky t part-side javascript)) . -18565) (undo-tree-id130 . -1) 18566) nil (25579 32308 681595 595000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18548) (undo-tree-id113 . -1) (#("=" 0 1 (part-side javascript)) . -18549) (undo-tree-id114 . -1) (#(" " 0 1 (part-side javascript)) . -18550) (undo-tree-id115 . -1) (#("i" 0 1 (part-side javascript)) . -18551) (undo-tree-id116 . -1) (#("d" 0 1 (part-side javascript)) . -18552) (undo-tree-id117 . -1) (#("x" 0 1 (part-side javascript)) . -18553) (undo-tree-id118 . -1) (#("o" 0 1 (part-side javascript)) . -18554) (undo-tree-id119 . -1) (#("b" 0 1 (part-side javascript)) . -18555) (undo-tree-id120 . -1) (#("j" 0 1 (part-side javascript)) . -18556) (undo-tree-id121 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -18557) (undo-tree-id122 . -1) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -18558) (undo-tree-id123 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18559) (undo-tree-id124 . -1) (#("'" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18560) (undo-tree-id125 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -18561) (undo-tree-id126 . -1) (#(" " 0 1 (part-side javascript)) . -18562) (undo-tree-id127 . -1) (#("+" 0 1 (part-side javascript)) . -18563) (undo-tree-id128 . -1) (#(" " 0 1 (part-side javascript)) . -18564) (undo-tree-id129 . -1) 18565) nil (25579 32308 681590 201000) 0 nil])
([nil nil ((#(" notidx" 0 1 (part-side javascript) 1 7 (part-side javascript face web-mode-variable-name-face)) . 18801) (undo-tree-id111 . -7) (undo-tree-id112 . -7)) nil (25579 32308 681566 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18809 . 18810) (nil part-side javascript 18801 . 18810) (nil face web-mode-variable-name-face 18801 . 18810) (18801 . 18810)) nil (25579 32308 681563 541000) 0 nil])
([nil nil ((18801 . 18802)) nil (25579 32308 681561 739000) 0 nil])
([nil nil ((#("idxobj['i']" 0 6 (part-side javascript) 6 7 (part-side javascript face (rainbow-delimiters-depth-7-face)) 7 8 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 8 9 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 9 10 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 10 11 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-7-face))) . 18650) (undo-tree-id109 . -11) (undo-tree-id110 . -11)) nil (25579 32308 681560 5000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18649) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 18650) nil (25579 32308 681555 666000) 0 nil])
([nil nil ((18649 . 18651)) nil (25579 32308 681541 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18659 . 18660) (nil part-side javascript 18651 . 18660) (18651 . 18660)) nil (25579 32308 681540 16000) 0 nil])
([nil nil ((18633 . 18634)) nil (25579 32308 681538 266000) 0 nil])
([nil nil ((18760 . 18769)) nil (25579 32308 683308 551000) 0 nil])
([nil nil ((#("
        " 0 1 (part-side javascript) 1 9 (part-side javascript)) . 18760) (undo-tree-id132 . -9) (undo-tree-id133 . -9) (undo-tree-id134 . -1) (undo-tree-id135 . -9) (undo-tree-id136 . -9) (undo-tree-id137 . -1) 18681) nil (25579 32314 626581 243000) 0 nil] [nil nil ((nil rear-nonsticky nil 18777 . 18778) (nil part-side javascript 18769 . 18778) (18769 . 18778)) ((#("aggrindex" 0 8 (part-side javascript) 8 9 (rear-nonsticky nil part-side javascript)) . 18769) (undo-tree-id131 . -9) (nil rear-nonsticky t 18777 . 18778)) (25579 32308 681529 949000) 0 nil])
([nil nil ((18760 . 18769)) nil (25579 32356 795155 31000) 0 nil] [nil nil ((nil rear-nonsticky nil 18838 . 18839) (nil part-side javascript 18838 . 18839) (nil face (rainbow-delimiters-depth-5-face whitespace-line) 18838 . 18839) (nil part-side javascript 18837 . 18838) (nil face (rainbow-delimiters-depth-6-face whitespace-line) 18837 . 18838) (nil part-side javascript 18823 . 18837) (nil face (whitespace-line) 18823 . 18837) (nil part-side javascript 18818 . 18823) (nil part-side javascript 18817 . 18818) (nil face (rainbow-delimiters-depth-7-face) 18817 . 18818) (nil part-side javascript 18816 . 18817) (nil part-token string 18816 . 18817) (nil syntax-table (15) 18816 . 18817) (nil font-lock-face web-mode-javascript-string-face 18816 . 18817) (nil part-side javascript 18811 . 18816) (nil part-token string 18811 . 18816) (nil font-lock-face web-mode-javascript-string-face 18811 . 18816) (nil part-side javascript 18810 . 18811) (nil part-token string 18810 . 18811) (nil syntax-table (15) 18810 . 18811) (nil font-lock-face web-mode-javascript-string-face 18810 . 18811) (nil part-side javascript 18809 . 18810) (nil face (rainbow-delimiters-depth-7-face) 18809 . 18810) (nil part-side javascript 18805 . 18809) (nil part-side javascript 18804 . 18805) (nil face (rainbow-delimiters-depth-6-face) 18804 . 18805) (nil part-side javascript 18788 . 18804) (nil face web-mode-function-call-face 18788 . 18804) (nil part-side javascript 18787 . 18788) (nil part-side javascript 18783 . 18787) (nil face web-mode-constant-face 18783 . 18787) (nil part-side javascript 18782 . 18783) (nil face (rainbow-delimiters-depth-5-face) 18782 . 18783) (nil part-side javascript 18776 . 18782) (nil face web-mode-function-call-face 18776 . 18782) (nil part-side javascript 18760 . 18776) (18760 . 18839)) ((#("result = result.concat(this.filtertotextlist(filt['query'], idxobj, setcurfil))" 0 16 (part-side javascript) 16 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-5-face)) 23 27 (part-side javascript face web-mode-constant-face) 27 28 (part-side javascript) 28 44 (part-side javascript face web-mode-function-call-face) 44 45 (part-side javascript face (rainbow-delimiters-depth-6-face)) 45 49 (part-side javascript) 49 50 (part-side javascript face (rainbow-delimiters-depth-7-face)) 50 51 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 51 56 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 56 57 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 57 58 (part-side javascript face (rainbow-delimiters-depth-7-face)) 58 63 (part-side javascript) 63 77 (part-side javascript face (whitespace-line)) 77 78 (part-side javascript face (rainbow-delimiters-depth-6-face whitespace-line)) 78 79 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-5-face whitespace-line))) . 18760) (undo-tree-id138 . -79) (nil face (rainbow-delimiters-depth-5-face) 18782 . 18783) (nil face (rainbow-delimiters-depth-6-face) 18804 . 18805) (nil face (rainbow-delimiters-depth-7-face) 18809 . 18810) (nil syntax-table (15) 18810 . 18811) (nil syntax-table (15) 18816 . 18817) (nil face (rainbow-delimiters-depth-7-face) 18817 . 18818) (nil face (whitespace-line) 18823 . 18837) (nil face (rainbow-delimiters-depth-6-face whitespace-line) 18837 . 18838) (nil face (rainbow-delimiters-depth-5-face whitespace-line) 18838 . 18839) (nil rear-nonsticky t 18838 . 18839)) (25579 32314 617941 656000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 18847 . 18848) (nil part-side javascript 18847 . 18848) (nil face (rainbow-delimiters-depth-5-face) 18847 . 18848) (nil part-side javascript 18846 . 18847) (nil face (rainbow-delimiters-depth-6-face) 18846 . 18847) (nil part-side javascript 18827 . 18846) (nil part-side javascript 18826 . 18827) (nil face (rainbow-delimiters-depth-7-face) 18826 . 18827) (nil part-side javascript 18825 . 18826) (nil part-token string 18825 . 18826) (nil syntax-table (15) 18825 . 18826) (nil font-lock-face web-mode-javascript-string-face 18825 . 18826) (nil part-side javascript 18820 . 18825) (nil part-token string 18820 . 18825) (nil font-lock-face web-mode-javascript-string-face 18820 . 18825) (nil part-side javascript 18819 . 18820) (nil part-token string 18819 . 18820) (nil syntax-table (15) 18819 . 18820) (nil font-lock-face web-mode-javascript-string-face 18819 . 18820) (nil part-side javascript 18818 . 18819) (nil face (rainbow-delimiters-depth-7-face) 18818 . 18819) (nil part-side javascript 18814 . 18818) (nil part-side javascript 18813 . 18814) (nil face (rainbow-delimiters-depth-6-face) 18813 . 18814) (nil part-side javascript 18797 . 18813) (nil face web-mode-function-call-face 18797 . 18813) (nil part-side javascript 18796 . 18797) (nil part-side javascript 18792 . 18796) (nil face web-mode-constant-face 18792 . 18796) (nil part-side javascript 18791 . 18792) (nil face (rainbow-delimiters-depth-5-face) 18791 . 18792) (nil part-side javascript 18785 . 18791) (nil face web-mode-function-call-face 18785 . 18791) (nil part-side javascript 18769 . 18785) (18769 . 18848)) nil (25579 32356 795152 137000) 0 nil])
nil
([nil nil ((#("query" 0 5 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 18820) (undo-tree-id140 . -5) (undo-tree-id141 . -5)) nil (25579 32356 795142 758000) 0 nil])
([nil nil ((18820 . 18824)) nil (25579 32356 795137 470000) 0 nil])
([nil nil ((18760 . 18769)) nil (25579 32356 795135 947000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18813 . 18814) (nil rear-nonsticky t 18813 . 18814) (nil part-side javascript 18813 . 18814) (nil face (rainbow-delimiters-depth-5-face) 18813 . 18814) (nil part-side javascript 18812 . 18813) (nil face (rainbow-delimiters-depth-6-face) 18812 . 18813) (nil part-side javascript 18811 . 18812) (nil rear-nonsticky t 18810 . 18811) (nil part-side javascript 18810 . 18811) (nil face web-mode-variable-name-face 18810 . 18811) (nil part-side javascript 18802 . 18810) (nil face web-mode-variable-name-face 18802 . 18810) (nil part-side javascript 18800 . 18802) (nil part-side javascript 18795 . 18800) (nil face web-mode-variable-name-face 18795 . 18800) (nil part-side javascript 18793 . 18795) (nil part-side javascript 18792 . 18793) (nil part-token string 18792 . 18793) (nil syntax-table (15) 18792 . 18793) (nil font-lock-face web-mode-javascript-string-face 18792 . 18793) (nil part-side javascript 18791 . 18792) (nil part-token string 18791 . 18792) (nil font-lock-face web-mode-javascript-string-face 18791 . 18792) (nil part-side javascript 18790 . 18791) (nil part-token string 18790 . 18791) (nil syntax-table (15) 18790 . 18791) (nil font-lock-face web-mode-javascript-string-face 18790 . 18791) (nil part-side javascript 18788 . 18790) (nil part-side javascript 18783 . 18788) (nil face web-mode-variable-name-face 18783 . 18788) (nil part-side javascript 18782 . 18783) (nil part-side javascript 18781 . 18782) (nil face (rainbow-delimiters-depth-6-face) 18781 . 18782) (nil part-side javascript 18780 . 18781) (nil face (rainbow-delimiters-depth-5-face) 18780 . 18781) (nil part-side javascript 18776 . 18780) (nil face web-mode-function-call-face 18776 . 18780) (nil part-side javascript 18769 . 18776) (18769 . 18814)) nil (25579 32356 795127 569000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18791) (undo-tree-id139 . -1) 18792) nil (25579 32356 795099 444000) 0 nil])
([nil nil ((18791 . 18792)) nil (25579 32356 795090 761000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript face whitespace-trailing)) . -18956) 18805) nil (25579 32356 795081 871000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#(" " 0 1 (part-side javascript)) . 18608) (#("
" 0 1 (part-side javascript)) . 18608) (undo-tree-id170 . -1) (t 25579 32356 837752 808000)) nil (25579 33294 251614 747000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#(" " 0 1 (part-side javascript)) . 18623) (#("
" 0 1 (part-side javascript)) . 18623) (undo-tree-id169 . -1)) nil (25579 33294 251608 876000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#(" " 0 1 (part-side javascript)) . 18640) (#("
" 0 1 (part-side javascript)) . 18640) (undo-tree-id168 . -1)) nil (25579 33294 251603 597000) 0 nil])
([nil nil ((18935 . 18942)) nil (25579 33294 251599 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19398 . 19399) (nil part-side javascript 19398 . 19399) (nil face (rainbow-delimiters-depth-4-face) 19398 . 19399) (nil part-side javascript 19392 . 19398) (nil part-side javascript 19391 . 19392) (nil part-side javascript 19390 . 19391) (nil rear-nonsticky t 19389 . 19390) (nil part-side javascript 19389 . 19390) (nil face (rainbow-delimiters-depth-5-face) 19389 . 19390) (nil part-side javascript 19388 . 19389) (nil face (rainbow-delimiters-depth-6-face) 19388 . 19389) (nil part-side javascript 19387 . 19388) (nil rear-nonsticky t 19386 . 19387) (nil part-side javascript 19386 . 19387) (nil face web-mode-variable-name-face 19386 . 19387) (nil part-side javascript 19378 . 19386) (nil face web-mode-variable-name-face 19378 . 19386) (nil part-side javascript 19376 . 19378) (nil part-side javascript 19371 . 19376) (nil face web-mode-variable-name-face 19371 . 19376) (nil part-side javascript 19369 . 19371) (nil part-side javascript 19368 . 19369) (nil part-token string 19368 . 19369) (nil syntax-table (15) 19368 . 19369) (nil font-lock-face web-mode-javascript-string-face 19368 . 19369) (nil part-side javascript 19367 . 19368) (nil part-token string 19367 . 19368) (nil font-lock-face web-mode-javascript-string-face 19367 . 19368) (nil part-side javascript 19366 . 19367) (nil part-token string 19366 . 19367) (nil syntax-table (15) 19366 . 19367) (nil font-lock-face web-mode-javascript-string-face 19366 . 19367) (nil part-side javascript 19364 . 19366) (nil part-side javascript 19359 . 19364) (nil face web-mode-variable-name-face 19359 . 19364) (nil part-side javascript 19358 . 19359) (nil part-side javascript 19357 . 19358) (nil face (rainbow-delimiters-depth-6-face) 19357 . 19358) (nil part-side javascript 19356 . 19357) (nil face (rainbow-delimiters-depth-5-face) 19356 . 19357) (nil part-side javascript 19352 . 19356) (nil face web-mode-function-call-face 19352 . 19356) (nil part-side javascript 19337 . 19352) (nil part-side javascript 19336 . 19337) (nil rear-nonsticky t 19335 . 19336) (nil part-side javascript 19335 . 19336) (nil face (rainbow-delimiters-depth-5-face) 19335 . 19336) (nil part-side javascript 19334 . 19335) (nil face (rainbow-delimiters-depth-6-face) 19334 . 19335) (nil part-side javascript 19315 . 19334) (nil part-side javascript 19314 . 19315) (nil face (rainbow-delimiters-depth-7-face) 19314 . 19315) (nil part-side javascript 19313 . 19314) (nil part-token string 19313 . 19314) (nil syntax-table (15) 19313 . 19314) (nil font-lock-face web-mode-javascript-string-face 19313 . 19314) (nil part-side javascript 19309 . 19313) (nil part-token string 19309 . 19313) (nil font-lock-face web-mode-javascript-string-face 19309 . 19313) (nil part-side javascript 19308 . 19309) (nil part-token string 19308 . 19309) (nil syntax-table (15) 19308 . 19309) (nil font-lock-face web-mode-javascript-string-face 19308 . 19309) (nil part-side javascript 19307 . 19308) (nil face (rainbow-delimiters-depth-7-face) 19307 . 19308) (nil part-side javascript 19303 . 19307) (nil part-side javascript 19302 . 19303) (nil face (rainbow-delimiters-depth-6-face) 19302 . 19303) (nil part-side javascript 19286 . 19302) (nil face web-mode-function-call-face 19286 . 19302) (nil part-side javascript 19285 . 19286) (nil part-side javascript 19281 . 19285) (nil face web-mode-constant-face 19281 . 19285) (nil part-side javascript 19280 . 19281) (nil face (rainbow-delimiters-depth-5-face) 19280 . 19281) (nil part-side javascript 19274 . 19280) (nil face web-mode-function-call-face 19274 . 19280) (nil part-side javascript 19258 . 19274) (nil part-side javascript 19250 . 19258) (nil part-side javascript 19249 . 19250) (nil rear-nonsticky t 19248 . 19249) (nil part-side javascript 19248 . 19249) (nil face (rainbow-delimiters-depth-5-face) 19248 . 19249) (nil part-side javascript 19247 . 19248) (nil face (rainbow-delimiters-depth-6-face) 19247 . 19248) (nil part-side javascript 19246 . 19247) (nil part-side javascript 19237 . 19246) (nil face web-mode-variable-name-face 19237 . 19246) (nil part-side javascript 19235 . 19237) (nil part-side javascript 19230 . 19235) (nil face web-mode-variable-name-face 19230 . 19235) (nil part-side javascript 19228 . 19230) (nil part-side javascript 19227 . 19228) (nil part-token string 19227 . 19228) (nil syntax-table (15) 19227 . 19228) (nil font-lock-face web-mode-javascript-string-face 19227 . 19228) (nil part-side javascript 19226 . 19227) (nil part-token string 19226 . 19227) (nil font-lock-face web-mode-javascript-string-face 19226 . 19227) (nil part-side javascript 19225 . 19226) (nil part-token string 19225 . 19226) (nil syntax-table (15) 19225 . 19226) (nil font-lock-face web-mode-javascript-string-face 19225 . 19226) (nil part-side javascript 19223 . 19225) (nil part-side javascript 19218 . 19223) (nil face web-mode-variable-name-face 19218 . 19223) (nil part-side javascript 19217 . 19218) (nil part-side javascript 19216 . 19217) (nil face (rainbow-delimiters-depth-6-face) 19216 . 19217) (nil part-side javascript 19215 . 19216) (nil face (rainbow-delimiters-depth-5-face) 19215 . 19216) (nil part-side javascript 19211 . 19215) (nil face web-mode-function-call-face 19211 . 19215) (nil part-side javascript 19204 . 19211) (nil part-side javascript 19196 . 19204) (nil part-side javascript 19195 . 19196) (nil part-side javascript 19194 . 19195) (nil face (rainbow-delimiters-depth-5-face) 19194 . 19195) (nil part-side javascript 19193 . 19194) (nil face (rainbow-delimiters-depth-6-face) 19193 . 19194) (nil part-side javascript 19174 . 19193) (nil part-side javascript 19173 . 19174) (nil face (rainbow-delimiters-depth-7-face) 19173 . 19174) (nil part-side javascript 19172 . 19173) (nil part-token string 19172 . 19173) (nil syntax-table (15) 19172 . 19173) (nil font-lock-face web-mode-javascript-string-face 19172 . 19173) (nil part-side javascript 19167 . 19172) (nil part-token string 19167 . 19172) (nil font-lock-face web-mode-javascript-string-face 19167 . 19172) (nil part-side javascript 19166 . 19167) (nil part-token string 19166 . 19167) (nil syntax-table (15) 19166 . 19167) (nil font-lock-face web-mode-javascript-string-face 19166 . 19167) (nil part-side javascript 19165 . 19166) (nil face (rainbow-delimiters-depth-7-face) 19165 . 19166) (nil part-side javascript 19161 . 19165) (nil part-side javascript 19160 . 19161) (nil face (rainbow-delimiters-depth-6-face) 19160 . 19161) (nil part-side javascript 19144 . 19160) (nil face web-mode-function-call-face 19144 . 19160) (nil part-side javascript 19143 . 19144) (nil part-side javascript 19139 . 19143) (nil face web-mode-constant-face 19139 . 19143) (nil part-side javascript 19138 . 19139) (nil face (rainbow-delimiters-depth-5-face) 19138 . 19139) (nil part-side javascript 19132 . 19138) (nil face web-mode-function-call-face 19132 . 19138) (nil part-side javascript 19116 . 19132) (nil part-side javascript 19108 . 19116) (nil part-side javascript 19107 . 19108) (nil part-side javascript 19106 . 19107) (nil face (rainbow-delimiters-depth-5-face) 19106 . 19107) (nil part-side javascript 19105 . 19106) (nil face (rainbow-delimiters-depth-6-face) 19105 . 19106) (nil part-side javascript 19104 . 19105) (nil rear-nonsticky t 19103 . 19104) (nil part-side javascript 19103 . 19104) (nil face web-mode-variable-name-face 19103 . 19104) (nil part-side javascript 19095 . 19103) (nil face web-mode-variable-name-face 19095 . 19103) (nil part-side javascript 19094 . 19095) (nil part-side javascript 19093 . 19094) (nil part-side javascript 19088 . 19093) (nil face web-mode-variable-name-face 19088 . 19093) (nil part-side javascript 19087 . 19088) (nil part-side javascript 19086 . 19087) (nil part-side javascript 19085 . 19086) (nil part-token string 19085 . 19086) (nil syntax-table (15) 19085 . 19086) (nil font-lock-face web-mode-javascript-string-face 19085 . 19086) (nil part-side javascript 19084 . 19085) (nil part-token string 19084 . 19085) (nil font-lock-face web-mode-javascript-string-face 19084 . 19085) (nil part-side javascript 19080 . 19084) (nil part-token string 19080 . 19084) (nil font-lock-face web-mode-javascript-string-face 19080 . 19084) (nil part-side javascript 19079 . 19080) (nil part-token string 19079 . 19080) (nil syntax-table (15) 19079 . 19080) (nil font-lock-face web-mode-javascript-string-face 19079 . 19080) (nil part-side javascript 19078 . 19079) (nil part-side javascript 19077 . 19078) (nil part-side javascript 19072 . 19077) (nil face web-mode-variable-name-face 19072 . 19077) (nil part-side javascript 19071 . 19072) (nil face (rainbow-delimiters-depth-6-face) 19071 . 19072) (nil part-side javascript 19070 . 19071) (nil face (rainbow-delimiters-depth-5-face) 19070 . 19071) (nil part-side javascript 19066 . 19070) (nil face web-mode-function-call-face 19066 . 19070) (nil part-side javascript 19051 . 19066) (nil part-side javascript 19050 . 19051) (nil rear-nonsticky t 19049 . 19050) (nil part-side javascript 19049 . 19050) (nil part-side javascript 19046 . 19049) (nil part-side javascript 19045 . 19046) (nil face (rainbow-delimiters-depth-5-face) 19045 . 19046) (nil part-side javascript 19044 . 19045) (nil part-token string 19044 . 19045) (nil syntax-table (15) 19044 . 19045) (nil font-lock-face web-mode-javascript-string-face 19044 . 19045) (nil part-side javascript 19043 . 19044) (nil part-token string 19043 . 19044) (nil font-lock-face web-mode-javascript-string-face 19043 . 19044) (nil part-side javascript 19042 . 19043) (nil part-token string 19042 . 19043) (nil syntax-table (15) 19042 . 19043) (nil font-lock-face web-mode-javascript-string-face 19042 . 19043) (nil part-side javascript 19041 . 19042) (nil face (rainbow-delimiters-depth-5-face) 19041 . 19042) (nil part-side javascript 19032 . 19041) (nil part-side javascript 19031 . 19032) (nil face (rainbow-delimiters-depth-5-face) 19031 . 19032) (nil part-side javascript 19030 . 19031) (nil part-token string 19030 . 19031) (nil syntax-table (15) 19030 . 19031) (nil font-lock-face web-mode-javascript-string-face 19030 . 19031) (nil part-side javascript 19029 . 19030) (nil part-token string 19029 . 19030) (nil font-lock-face web-mode-javascript-string-face 19029 . 19030) (nil part-side javascript 19028 . 19029) (nil part-token string 19028 . 19029) (nil syntax-table (15) 19028 . 19029) (nil font-lock-face web-mode-javascript-string-face 19028 . 19029) (nil part-side javascript 19027 . 19028) (nil face (rainbow-delimiters-depth-5-face) 19027 . 19028) (nil part-side javascript 19021 . 19027) (nil part-side javascript 19013 . 19021) (nil part-side javascript 19012 . 19013) (nil part-side javascript 19011 . 19012) (nil face (rainbow-delimiters-depth-5-face) 19011 . 19012) (nil part-side javascript 19010 . 19011) (nil part-token string 19010 . 19011) (nil syntax-table (15) 19010 . 19011) (nil font-lock-face web-mode-javascript-string-face 19010 . 19011) (nil part-side javascript 19009 . 19010) (nil part-token string 19009 . 19010) (nil font-lock-face web-mode-javascript-string-face 19009 . 19010) (nil part-side javascript 19008 . 19009) (nil part-token string 19008 . 19009) (nil syntax-table (15) 19008 . 19009) (nil font-lock-face web-mode-javascript-string-face 19008 . 19009) (nil part-side javascript 19007 . 19008) (nil face (rainbow-delimiters-depth-5-face) 19007 . 19008) (nil part-side javascript 19001 . 19007) (nil part-side javascript 19000 . 19001) (nil part-side javascript 18998 . 19000) (nil part-side javascript 18989 . 18998) (nil face web-mode-variable-name-face 18989 . 18998) (nil part-side javascript 18988 . 18989) (nil part-side javascript 18983 . 18988) (nil face web-mode-keyword-face 18983 . 18988) (nil part-side javascript 18975 . 18983) (nil part-side javascript 18974 . 18975) (nil part-side javascript 18973 . 18974) (nil face (rainbow-delimiters-depth-4-face) 18973 . 18974) (nil part-side javascript 18972 . 18973) (nil part-side javascript 18971 . 18972) (nil face (rainbow-delimiters-depth-4-face) 18971 . 18972) (nil part-side javascript 18966 . 18971) (nil part-side javascript 18964 . 18966) (nil face web-mode-keyword-face 18964 . 18966) (nil part-side javascript 18963 . 18964) (nil part-side javascript 18962 . 18963) (nil part-token string 18962 . 18963) (nil syntax-table (15) 18962 . 18963) (nil font-lock-face web-mode-javascript-string-face 18962 . 18963) (nil part-side javascript 18958 . 18962) (nil part-token string 18958 . 18962) (nil font-lock-face web-mode-javascript-string-face 18958 . 18962) (nil part-side javascript 18957 . 18958) (nil part-token string 18957 . 18958) (nil syntax-table (15) 18957 . 18958) (nil font-lock-face web-mode-javascript-string-face 18957 . 18958) (nil part-side javascript 18956 . 18957) (nil face (rainbow-delimiters-depth-4-face) 18956 . 18957) (nil part-side javascript 18955 . 18956) (nil part-side javascript 18953 . 18955) (nil face web-mode-keyword-face 18953 . 18955) (nil part-side javascript 18952 . 18953) (nil part-side javascript 18948 . 18952) (nil face web-mode-keyword-face 18948 . 18952) (nil part-side javascript 18942 . 18948) (18942 . 19399)) nil (25579 33294 251584 425000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -18942) 18936) nil (25579 33294 251519 846000) 0 nil])
([nil nil ((#("'aggr' in filt" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 1 5 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 5 6 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 6 7 (part-side javascript) 7 9 (part-side javascript face web-mode-keyword-face) 9 14 (part-side javascript)) . 18951) (undo-tree-id163 . -14) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -14)) nil (25579 33294 251518 4000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19000 . 19001) (nil part-side javascript 19000 . 19001) (nil part-token string 19000 . 19001) (nil syntax-table (15) 19000 . 19001) (nil font-lock-face web-mode-javascript-string-face 19000 . 19001) (nil part-side javascript 18986 . 19000) (nil part-token string 18986 . 19000) (nil font-lock-face web-mode-javascript-string-face 18986 . 19000) (nil part-side javascript 18985 . 18986) (nil part-token string 18985 . 18986) (nil syntax-table (15) 18985 . 18986) (nil font-lock-face web-mode-javascript-string-face 18985 . 18986) (nil part-side javascript 18981 . 18985) (nil part-side javascript 18980 . 18981) (nil face (rainbow-delimiters-depth-5-face) 18980 . 18981) (nil part-side javascript 18979 . 18980) (nil part-token string 18979 . 18980) (nil syntax-table (15) 18979 . 18980) (nil font-lock-face web-mode-javascript-string-face 18979 . 18980) (nil part-side javascript 18975 . 18979) (nil part-token string 18975 . 18979) (nil font-lock-face web-mode-javascript-string-face 18975 . 18979) (nil part-side javascript 18974 . 18975) (nil part-token string 18974 . 18975) (nil syntax-table (15) 18974 . 18975) (nil font-lock-face web-mode-javascript-string-face 18974 . 18975) (nil part-side javascript 18973 . 18974) (nil face (rainbow-delimiters-depth-5-face) 18973 . 18974) (nil part-side javascript 18960 . 18973) (nil part-side javascript 18958 . 18960) (nil face web-mode-keyword-face 18958 . 18960) (nil part-side javascript 18957 . 18958) (nil part-side javascript 18956 . 18957) (nil part-token string 18956 . 18957) (nil syntax-table (15) 18956 . 18957) (nil font-lock-face web-mode-javascript-string-face 18956 . 18957) (nil part-side javascript 18952 . 18956) (nil part-token string 18952 . 18956) (nil font-lock-face web-mode-javascript-string-face 18952 . 18956) (nil part-side javascript 18951 . 18952) (nil part-token string 18951 . 18952) (nil syntax-table (15) 18951 . 18952) (nil font-lock-face web-mode-javascript-string-face 18951 . 18952) (18951 . 19001)) nil (25579 33294 251509 518000) 0 nil])
([nil nil ((#("g" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18987) (undo-tree-id160 . -1) (#("g" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18988) (undo-tree-id161 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18989) (undo-tree-id162 . -1) 18990) nil (25579 33294 251499 175000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -18986) (undo-tree-id159 . -1) 18987) nil (25579 33294 251494 12000) 0 nil])
([nil nil ((18986 . 18990)) nil (25579 33294 251491 626000) 0 nil])
([nil nil ((#("A" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19110) (undo-tree-id155 . -1) (#("G" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19111) (undo-tree-id156 . -1) (#("G" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19112) (undo-tree-id157 . -1) (#("R" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19113) (undo-tree-id158 . -1) 19114) nil (25579 33294 251489 751000) 0 nil])
([nil nil ((19110 . 19114)) nil (25579 33294 251483 469000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 19114)) nil (25579 33294 251482 333000) 0 nil])
([nil nil ((19114 . 19115)) nil (25579 33294 251481 338000) 0 nil])
([nil nil ((19124 . 19130) (19123 . 19125) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19123) (19116 . 19124)) nil (25579 33294 251480 109000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -19124) (undo-tree-id149 . -1) (#("i" 0 1 (part-side javascript)) . -19125) (undo-tree-id150 . -1) (#("e" 0 1 (part-side javascript)) . -19126) (undo-tree-id151 . -1) (#("l" 0 1 (part-side javascript)) . -19127) (undo-tree-id152 . -1) (#("d" 0 1 (part-side javascript)) . -19128) (undo-tree-id153 . -1) (#(" " 0 1 (part-side javascript)) . -19129) (undo-tree-id154 . -1) 19130) nil (25579 33294 251477 6000) 0 nil])
([nil nil ((19124 . 19126)) nil (25579 33294 251468 61000) 0 nil])
([nil nil ((19125 . 19130)) nil (25579 33294 251467 19000) 0 nil])
([nil nil ((19132 . 19135)) nil (25579 33294 251466 72000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -19133) (undo-tree-id147 . -1) (#(" " 0 1 (part-side javascript)) . -19134) (undo-tree-id148 . -1) 19135) nil (25579 33294 251464 571000) 0 nil])
([nil nil ((19135 . 19137) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19135) (19133 . 19136)) nil (25579 33294 251460 531000) 0 nil])
([nil nil ((19136 . 19138)) nil (25579 33294 251459 7000) 0 nil])
([nil nil ((19137 . 19141)) nil (25579 33294 251457 997000) 0 nil])
([nil nil ((19142 . 19149)) nil (25579 33294 251456 955000) 0 nil])
([nil nil ((#("." 0 1 (part-side javascript)) . -19148) (undo-tree-id146 . -1) 19149) nil (25579 33294 251455 747000) 0 nil])
([nil nil ((19148 . 19154)) nil (25579 33294 251453 299000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19153) (undo-tree-id145 . -1) 19154) nil (25579 33294 251451 818000) 0 nil])
([nil nil ((19153 . 19156)) nil (25579 33294 251449 172000) 0 nil])
([nil nil ((19156 . 19158)) nil (25579 33294 251448 73000) 0 nil])
([nil nil ((19157 . 19162)) nil (25579 33294 251446 946000) 0 nil])
([nil nil ((#(" filt.asc" 0 6 (part-side javascript) 6 9 (part-side javascript face web-mode-variable-name-face)) . 19144) (undo-tree-id143 . -9) (undo-tree-id144 . -9)) nil (25579 33294 251445 602000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19144 . 19145) (nil part-side javascript 19142 . 19145) (nil part-side javascript 19136 . 19142) (19136 . 19145)) nil (25579 33294 251441 294000) 0 nil])
([nil nil ((19145 . 19146)) nil (25579 33294 251438 996000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 19153) (#("?" 0 1 (part-side javascript)) . 19153) (undo-tree-id142 . -1)) nil (25579 33294 251436 610000) 0 nil])
([nil nil ((19146 . 19148)) nil (25579 33294 251421 409000) 0 nil])
([nil nil ((#("
        result = result.concat(this.filtertotextlist(filt['query'], idxobj, setcurfil))
        result.push({ value: '|', index: aggrindex })
        result = result.concat(this.filtertotextlist(filt['sort'], idxobj, setcurfil))
        result.push({ value: ')', index: aggrindex })" 0 1 (part-side javascript) 1 25 (part-side javascript) 25 31 (part-side javascript face web-mode-function-call-face) 31 32 (part-side javascript face (rainbow-delimiters-depth-5-face)) 32 36 (part-side javascript face web-mode-constant-face) 36 37 (part-side javascript) 37 53 (part-side javascript face web-mode-function-call-face) 53 54 (part-side javascript face (rainbow-delimiters-depth-6-face)) 54 58 (part-side javascript) 58 59 (part-side javascript face (rainbow-delimiters-depth-7-face)) 59 60 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 60 65 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 65 66 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 66 67 (part-side javascript face (rainbow-delimiters-depth-7-face)) 67 86 (part-side javascript) 86 87 (part-side javascript face (rainbow-delimiters-depth-6-face)) 87 88 (part-side javascript face (rainbow-delimiters-depth-5-face)) 88 89 (part-side javascript) 89 104 (part-side javascript) 104 108 (part-side javascript face web-mode-function-call-face) 108 109 (part-side javascript face (rainbow-delimiters-depth-5-face)) 109 110 (part-side javascript face (rainbow-delimiters-depth-6-face)) 110 111 (part-side javascript) 111 116 (part-side javascript face web-mode-variable-name-face) 116 118 (part-side javascript) 118 119 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 119 120 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 120 121 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 121 123 (part-side javascript) 123 128 (part-side javascript face web-mode-variable-name-face) 128 130 (part-side javascript) 130 139 (part-side javascript face web-mode-variable-name-face) 139 140 (part-side javascript) 140 141 (part-side javascript face (rainbow-delimiters-depth-6-face)) 141 142 (part-side javascript face (rainbow-delimiters-depth-5-face)) 142 167 (part-side javascript) 167 173 (part-side javascript face web-mode-function-call-face) 173 174 (part-side javascript face (rainbow-delimiters-depth-5-face)) 174 178 (part-side javascript face web-mode-constant-face) 178 179 (part-side javascript) 179 195 (part-side javascript face web-mode-function-call-face) 195 196 (part-side javascript face (rainbow-delimiters-depth-6-face)) 196 200 (part-side javascript) 200 201 (part-side javascript face (rainbow-delimiters-depth-7-face)) 201 202 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 202 206 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 206 207 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 207 208 (part-side javascript face (rainbow-delimiters-depth-7-face)) 208 227 (part-side javascript) 227 228 (part-side javascript face (rainbow-delimiters-depth-6-face)) 228 229 (part-side javascript face (rainbow-delimiters-depth-5-face)) 229 245 (part-side javascript) 245 249 (part-side javascript face web-mode-function-call-face) 249 250 (part-side javascript face (rainbow-delimiters-depth-5-face)) 250 251 (part-side javascript face (rainbow-delimiters-depth-6-face)) 251 252 (part-side javascript) 252 257 (part-side javascript face web-mode-variable-name-face) 257 259 (part-side javascript) 259 260 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 260 261 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 261 262 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 262 264 (part-side javascript) 264 269 (part-side javascript face web-mode-variable-name-face) 269 271 (part-side javascript) 271 280 (part-side javascript face web-mode-variable-name-face) 280 281 (part-side javascript) 281 282 (part-side javascript face (rainbow-delimiters-depth-6-face)) 282 283 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 19186) (undo-tree-id192 . -283) (undo-tree-id193 . -1) (undo-tree-id194 . -283) (t 25579 33294 302876 990000)) nil (25579 33325 96639 473000) 0 nil])
([nil nil ((19167 . 19188) (#(" " 0 1 (part-side javascript)) . 19166) (undo-tree-id191 . -1) (19167 . 19168)) nil (25579 33325 96634 787000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -19195) (undo-tree-id182 . -1) (#("g" 0 1 (part-side javascript)) . -19196) (undo-tree-id183 . -1) (#("g" 0 1 (part-side javascript)) . -19197) (undo-tree-id184 . -1) (#("r" 0 1 (part-side javascript)) . -19198) (undo-tree-id185 . -1) (#("i" 0 1 (part-side javascript)) . -19199) (undo-tree-id186 . -1) (#("n" 0 1 (part-side javascript)) . -19200) (undo-tree-id187 . -1) (#("d" 0 1 (part-side javascript)) . -19201) (undo-tree-id188 . -1) (#("e" 0 1 (part-side javascript)) . -19202) (undo-tree-id189 . -1) (#("x" 0 1 (part-side javascript)) . -19203) (undo-tree-id190 . -1) 19204) nil (25579 33325 96630 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19205 . 19206) (nil part-side javascript 19205 . 19206) (nil face (rainbow-delimiters-depth-7-face) 19205 . 19206) (nil part-side javascript 19204 . 19205) (nil part-token string 19204 . 19205) (nil syntax-table (15) 19204 . 19205) (nil font-lock-face web-mode-javascript-string-face 19204 . 19205) (nil part-side javascript 19203 . 19204) (nil part-token string 19203 . 19204) (nil font-lock-face web-mode-javascript-string-face 19203 . 19204) (nil part-side javascript 19202 . 19203) (nil part-token string 19202 . 19203) (nil syntax-table (15) 19202 . 19203) (nil font-lock-face web-mode-javascript-string-face 19202 . 19203) (nil part-side javascript 19201 . 19202) (nil face (rainbow-delimiters-depth-7-face) 19201 . 19202) (nil part-side javascript 19195 . 19201) (19195 . 19206)) nil (25579 33325 96616 523000) 0 nil])
([nil nil ((#("
        idxobj['i'] = idxobj['i'] + 1" 0 15 (part-side javascript) 15 16 (part-side javascript face (rainbow-delimiters-depth-5-face)) 16 17 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 17 18 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 18 19 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-5-face)) 20 29 (part-side javascript) 29 30 (part-side javascript face (rainbow-delimiters-depth-5-face)) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 33 34 (part-side javascript face (rainbow-delimiters-depth-5-face)) 34 38 (part-side javascript)) . 19042) (undo-tree-id179 . -38) (undo-tree-id180 . -1) (undo-tree-id181 . -38)) nil (25579 33325 96610 759000) 0 nil])
([nil nil ((19171 . 19180)) nil (25579 33325 96606 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19217 . 19218) (nil part-side javascript 19214 . 19218) (nil part-side javascript 19213 . 19214) (nil face (rainbow-delimiters-depth-5-face) 19213 . 19214) (nil part-side javascript 19212 . 19213) (nil part-token string 19212 . 19213) (nil syntax-table (15) 19212 . 19213) (nil font-lock-face web-mode-javascript-string-face 19212 . 19213) (nil part-side javascript 19211 . 19212) (nil part-token string 19211 . 19212) (nil font-lock-face web-mode-javascript-string-face 19211 . 19212) (nil part-side javascript 19210 . 19211) (nil part-token string 19210 . 19211) (nil syntax-table (15) 19210 . 19211) (nil font-lock-face web-mode-javascript-string-face 19210 . 19211) (nil part-side javascript 19209 . 19210) (nil face (rainbow-delimiters-depth-5-face) 19209 . 19210) (nil part-side javascript 19200 . 19209) (nil part-side javascript 19199 . 19200) (nil face (rainbow-delimiters-depth-5-face) 19199 . 19200) (nil part-side javascript 19198 . 19199) (nil part-token string 19198 . 19199) (nil syntax-table (15) 19198 . 19199) (nil font-lock-face web-mode-javascript-string-face 19198 . 19199) (nil part-side javascript 19197 . 19198) (nil part-token string 19197 . 19198) (nil font-lock-face web-mode-javascript-string-face 19197 . 19198) (nil part-side javascript 19196 . 19197) (nil part-token string 19196 . 19197) (nil syntax-table (15) 19196 . 19197) (nil font-lock-face web-mode-javascript-string-face 19196 . 19197) (nil part-side javascript 19195 . 19196) (nil face (rainbow-delimiters-depth-5-face) 19195 . 19196) (nil part-side javascript 19180 . 19195) (19180 . 19218)) nil (25579 33325 96603 128000) 0 nil])
([nil nil ((#("        const aggrindex = idxobj['i']" 0 8 (part-side javascript) 8 13 (part-side javascript face web-mode-keyword-face) 13 14 (part-side javascript) 14 23 (part-side javascript face web-mode-variable-name-face) 23 32 (part-side javascript) 32 33 (part-side javascript face (rainbow-delimiters-depth-5-face)) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 19005) (undo-tree-id176 . -37) (undo-tree-id177 . -37) (undo-tree-id178 . -37)) nil (25579 33325 96592 895000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -19004) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 19005) nil (25579 33325 96586 927000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript face whitespace-trailing)) . -19134) (undo-tree-id171 . -8) 19004) nil (25579 33325 96531 397000) 0 nil])
([nil nil ((#("V" 0 1 (part-side javascript face web-mode-variable-name-face)) . -18608) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 18609 (t 25579 33325 142514 653000)) nil (25579 33343 614899 551000) 0 nil])
([nil nil ((18608 . 18609)) nil (25579 33343 614895 491000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . -18608) (undo-tree-id196 . -1) 18609) nil (25579 33343 614893 938000) 0 nil])
([nil nil ((18608 . 18610)) nil (25579 33343 614890 670000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18609) (undo-tree-id195 . -1) 18610) nil (25579 33343 614887 703000) 0 nil])
([nil nil ((18608 . 18609)) nil (25579 33343 614872 770000) 0 nil])
([nil nil ((#("V" 0 1 (part-side javascript face web-mode-variable-name-face)) . -19027) (undo-tree-id249 . -1) 19028 (t 25579 33343 658297 42000)) nil (25579 33845 32401 911000) 0 nil])
([nil nil ((19027 . 19028)) nil (25579 33845 32339 951000) 0 nil])
([nil nil ((19027 . 19028)) nil (25579 33845 32339 27000) 0 nil])
([nil nil ((19114 . 19115) 19115) nil (25579 33845 32338 56000) 0 nil])
([nil nil ((#("|| filt['condition'] == 'sep'" 0 7 (part-side javascript) 7 8 (part-side javascript face (rainbow-delimiters-depth-6-face)) 8 9 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 9 18 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 18 19 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-6-face)) 20 24 (part-side javascript) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 16069) (undo-tree-id247 . -29) (undo-tree-id248 . -29)) nil (25579 33845 32336 635000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16068) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 16069) nil (25579 33845 32333 415000) 0 nil])
([nil nil ((18906 . 18913)) nil (25579 33845 32330 73000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19775 . 19776) (nil part-side javascript 19775 . 19776) (nil face (rainbow-delimiters-depth-4-face) 19775 . 19776) (nil part-side javascript 19768 . 19775) (nil part-side javascript 19767 . 19768) (nil face (rainbow-delimiters-depth-5-face) 19767 . 19768) (nil part-side javascript 19766 . 19767) (nil face (rainbow-delimiters-depth-6-face) 19766 . 19767) (nil part-side javascript 19765 . 19766) (nil part-side javascript 19759 . 19765) (nil face web-mode-variable-name-face 19759 . 19765) (nil part-side javascript 19757 . 19759) (nil part-side javascript 19752 . 19757) (nil face web-mode-variable-name-face 19752 . 19757) (nil part-side javascript 19750 . 19752) (nil part-side javascript 19749 . 19750) (nil part-token string 19749 . 19750) (nil syntax-table (15) 19749 . 19750) (nil font-lock-face web-mode-javascript-string-face 19749 . 19750) (nil part-side javascript 19748 . 19749) (nil part-token string 19748 . 19749) (nil font-lock-face web-mode-javascript-string-face 19748 . 19749) (nil part-side javascript 19747 . 19748) (nil part-token string 19747 . 19748) (nil syntax-table (15) 19747 . 19748) (nil font-lock-face web-mode-javascript-string-face 19747 . 19748) (nil part-side javascript 19745 . 19747) (nil part-side javascript 19740 . 19745) (nil face web-mode-variable-name-face 19740 . 19745) (nil part-side javascript 19739 . 19740) (nil part-side javascript 19738 . 19739) (nil face (rainbow-delimiters-depth-6-face) 19738 . 19739) (nil part-side javascript 19737 . 19738) (nil face (rainbow-delimiters-depth-5-face) 19737 . 19738) (nil part-side javascript 19733 . 19737) (nil face web-mode-function-call-face 19733 . 19737) (nil part-side javascript 19717 . 19733) (nil part-side javascript 19716 . 19717) (nil face (rainbow-delimiters-depth-5-face) 19716 . 19717) (nil part-side javascript 19707 . 19716) (nil part-side javascript 19706 . 19707) (nil face (rainbow-delimiters-depth-6-face) 19706 . 19707) (nil part-side javascript 19695 . 19706) (nil part-side javascript 19694 . 19695) (nil face (rainbow-delimiters-depth-7-face) 19694 . 19695) (nil part-side javascript 19675 . 19694) (nil part-side javascript 19674 . 19675) (nil face (rainbow-delimiters-depth-8-face) 19674 . 19675) (nil part-side javascript 19669 . 19674) (nil part-side javascript 19668 . 19669) (nil face (rainbow-delimiters-depth-8-face) 19668 . 19669) (nil part-side javascript 19667 . 19668) (nil face (rainbow-delimiters-depth-8-face) 19667 . 19668) (nil part-side javascript 19666 . 19667) (nil part-token string 19666 . 19667) (nil syntax-table (15) 19666 . 19667) (nil font-lock-face web-mode-javascript-string-face 19666 . 19667) (nil part-side javascript 19661 . 19666) (nil part-token string 19661 . 19666) (nil font-lock-face web-mode-javascript-string-face 19661 . 19666) (nil part-side javascript 19660 . 19661) (nil part-token string 19660 . 19661) (nil syntax-table (15) 19660 . 19661) (nil font-lock-face web-mode-javascript-string-face 19660 . 19661) (nil part-side javascript 19659 . 19660) (nil face (rainbow-delimiters-depth-8-face) 19659 . 19660) (nil part-side javascript 19655 . 19659) (nil part-side javascript 19654 . 19655) (nil face (rainbow-delimiters-depth-7-face) 19654 . 19655) (nil part-side javascript 19638 . 19654) (nil face web-mode-function-call-face 19638 . 19654) (nil part-side javascript 19637 . 19638) (nil part-side javascript 19633 . 19637) (nil face web-mode-constant-face 19633 . 19637) (nil part-side javascript 19620 . 19633) (nil part-side javascript 19619 . 19620) (nil face (rainbow-delimiters-depth-6-face) 19619 . 19620) (nil part-side javascript 19613 . 19619) (nil face web-mode-function-call-face 19613 . 19619) (nil part-side javascript 19586 . 19613) (nil part-side javascript 19585 . 19586) (nil face (rainbow-delimiters-depth-6-face) 19585 . 19586) (nil part-side javascript 19574 . 19585) (nil part-side javascript 19573 . 19574) (nil face (rainbow-delimiters-depth-7-face) 19573 . 19574) (nil part-side javascript 19560 . 19573) (nil part-side javascript 19559 . 19560) (nil face (rainbow-delimiters-depth-8-face) 19559 . 19560) (nil part-side javascript 19558 . 19559) (nil face (rainbow-delimiters-depth-9-face) 19558 . 19559) (nil part-side javascript 19557 . 19558) (nil part-side javascript 19551 . 19557) (nil face web-mode-variable-name-face 19551 . 19557) (nil part-side javascript 19549 . 19551) (nil part-side javascript 19544 . 19549) (nil face web-mode-variable-name-face 19544 . 19549) (nil part-side javascript 19542 . 19544) (nil part-side javascript 19541 . 19542) (nil part-token string 19541 . 19542) (nil syntax-table (15) 19541 . 19542) (nil font-lock-face web-mode-javascript-string-face 19541 . 19542) (nil part-side javascript 19538 . 19541) (nil part-token string 19538 . 19541) (nil font-lock-face web-mode-javascript-string-face 19538 . 19541) (nil part-side javascript 19537 . 19538) (nil part-token string 19537 . 19538) (nil syntax-table (15) 19537 . 19538) (nil font-lock-face web-mode-javascript-string-face 19537 . 19538) (nil part-side javascript 19535 . 19537) (nil part-side javascript 19530 . 19535) (nil face web-mode-variable-name-face 19530 . 19535) (nil part-side javascript 19529 . 19530) (nil part-side javascript 19528 . 19529) (nil face (rainbow-delimiters-depth-9-face) 19528 . 19529) (nil part-side javascript 19527 . 19528) (nil face (rainbow-delimiters-depth-8-face) 19527 . 19528) (nil part-side javascript 19523 . 19527) (nil face web-mode-function-call-face 19523 . 19527) (nil part-side javascript 19501 . 19523) (nil part-side javascript 19500 . 19501) (nil face (rainbow-delimiters-depth-7-face) 19500 . 19501) (nil part-side javascript 19499 . 19500) (nil part-side javascript 19495 . 19499) (nil face web-mode-keyword-face 19495 . 19499) (nil part-side javascript 19482 . 19495) (nil part-side javascript 19481 . 19482) (nil face (rainbow-delimiters-depth-7-face) 19481 . 19482) (nil part-side javascript 19468 . 19481) (nil part-side javascript 19467 . 19468) (nil face (rainbow-delimiters-depth-8-face) 19467 . 19468) (nil part-side javascript 19466 . 19467) (nil face (rainbow-delimiters-depth-9-face) 19466 . 19467) (nil part-side javascript 19465 . 19466) (nil part-side javascript 19459 . 19465) (nil face web-mode-variable-name-face 19459 . 19465) (nil part-side javascript 19457 . 19459) (nil part-side javascript 19452 . 19457) (nil face web-mode-variable-name-face 19452 . 19457) (nil part-side javascript 19450 . 19452) (nil part-side javascript 19449 . 19450) (nil part-token string 19449 . 19450) (nil syntax-table (15) 19449 . 19450) (nil font-lock-face web-mode-javascript-string-face 19449 . 19450) (nil part-side javascript 19447 . 19449) (nil part-token string 19447 . 19449) (nil font-lock-face web-mode-javascript-string-face 19447 . 19449) (nil part-side javascript 19446 . 19447) (nil part-token string 19446 . 19447) (nil syntax-table (15) 19446 . 19447) (nil font-lock-face web-mode-javascript-string-face 19446 . 19447) (nil part-side javascript 19444 . 19446) (nil part-side javascript 19439 . 19444) (nil face web-mode-variable-name-face 19439 . 19444) (nil part-side javascript 19438 . 19439) (nil part-side javascript 19437 . 19438) (nil face (rainbow-delimiters-depth-9-face) 19437 . 19438) (nil part-side javascript 19436 . 19437) (nil face (rainbow-delimiters-depth-8-face) 19436 . 19437) (nil part-side javascript 19432 . 19436) (nil face web-mode-function-call-face 19432 . 19436) (nil part-side javascript 19410 . 19432) (nil part-side javascript 19409 . 19410) (nil face (rainbow-delimiters-depth-7-face) 19409 . 19410) (nil part-side javascript 19408 . 19409) (nil part-side javascript 19407 . 19408) (nil face (rainbow-delimiters-depth-7-face) 19407 . 19408) (nil part-side javascript 19406 . 19407) (nil part-token string 19406 . 19407) (nil syntax-table (15) 19406 . 19407) (nil font-lock-face web-mode-javascript-string-face 19406 . 19407) (nil part-side javascript 19404 . 19406) (nil part-token string 19404 . 19406) (nil font-lock-face web-mode-javascript-string-face 19404 . 19406) (nil part-side javascript 19403 . 19404) (nil part-token string 19403 . 19404) (nil syntax-table (15) 19403 . 19404) (nil font-lock-face web-mode-javascript-string-face 19403 . 19404) (nil part-side javascript 19399 . 19403) (nil part-side javascript 19398 . 19399) (nil face (rainbow-delimiters-depth-8-face) 19398 . 19399) (nil part-side javascript 19397 . 19398) (nil part-token string 19397 . 19398) (nil syntax-table (15) 19397 . 19398) (nil font-lock-face web-mode-javascript-string-face 19397 . 19398) (nil part-side javascript 19388 . 19397) (nil part-token string 19388 . 19397) (nil font-lock-face web-mode-javascript-string-face 19388 . 19397) (nil part-side javascript 19387 . 19388) (nil part-token string 19387 . 19388) (nil syntax-table (15) 19387 . 19388) (nil font-lock-face web-mode-javascript-string-face 19387 . 19388) (nil part-side javascript 19386 . 19387) (nil face (rainbow-delimiters-depth-8-face) 19386 . 19387) (nil part-side javascript 19382 . 19386) (nil part-side javascript 19381 . 19382) (nil face (rainbow-delimiters-depth-7-face) 19381 . 19382) (nil part-side javascript 19380 . 19381) (nil part-side javascript 19378 . 19380) (nil face web-mode-keyword-face 19378 . 19380) (nil part-side javascript 19365 . 19378) (nil part-side javascript 19364 . 19365) (nil face (rainbow-delimiters-depth-6-face) 19364 . 19365) (nil part-side javascript 19363 . 19364) (nil part-side javascript 19359 . 19363) (nil face web-mode-keyword-face 19359 . 19363) (nil part-side javascript 19348 . 19359) (nil part-side javascript 19347 . 19348) (nil face (rainbow-delimiters-depth-6-face) 19347 . 19348) (nil part-side javascript 19336 . 19347) (nil part-side javascript 19331 . 19336) (nil face web-mode-constant-face 19331 . 19336) (nil part-side javascript 19307 . 19331) (nil part-side javascript 19306 . 19307) (nil face (rainbow-delimiters-depth-6-face) 19306 . 19307) (nil part-side javascript 19305 . 19306) (nil part-side javascript 19304 . 19305) (nil face (rainbow-delimiters-depth-6-face) 19304 . 19305) (nil part-side javascript 19296 . 19304) (nil part-side javascript 19295 . 19296) (nil face (rainbow-delimiters-depth-6-face) 19295 . 19296) (nil part-side javascript 19294 . 19295) (nil part-side javascript 19292 . 19294) (nil face web-mode-keyword-face 19292 . 19294) (nil part-side javascript 19281 . 19292) (nil part-side javascript 19280 . 19281) (nil face (rainbow-delimiters-depth-5-face) 19280 . 19281) (nil part-side javascript 19279 . 19280) (nil part-side javascript 19278 . 19279) (nil face (rainbow-delimiters-depth-5-face) 19278 . 19279) (nil part-side javascript 19262 . 19278) (nil part-side javascript 19261 . 19262) (nil face (rainbow-delimiters-depth-6-face) 19261 . 19262) (nil part-side javascript 19260 . 19261) (nil part-token string 19260 . 19261) (nil syntax-table (15) 19260 . 19261) (nil font-lock-face web-mode-javascript-string-face 19260 . 19261) (nil part-side javascript 19255 . 19260) (nil part-token string 19255 . 19260) (nil font-lock-face web-mode-javascript-string-face 19255 . 19260) (nil part-side javascript 19254 . 19255) (nil part-token string 19254 . 19255) (nil syntax-table (15) 19254 . 19255) (nil font-lock-face web-mode-javascript-string-face 19254 . 19255) (nil part-side javascript 19253 . 19254) (nil face (rainbow-delimiters-depth-6-face) 19253 . 19254) (nil part-side javascript 19235 . 19253) (nil part-side javascript 19230 . 19235) (nil face web-mode-variable-name-face 19230 . 19235) (nil part-side javascript 19229 . 19230) (nil part-side javascript 19226 . 19229) (nil face web-mode-keyword-face 19226 . 19229) (nil part-side javascript 19225 . 19226) (nil face (rainbow-delimiters-depth-5-face) 19225 . 19226) (nil part-side javascript 19224 . 19225) (nil part-side javascript 19221 . 19224) (nil face web-mode-keyword-face 19221 . 19224) (nil part-side javascript 19212 . 19221) (nil part-side javascript 19208 . 19212) (nil face web-mode-constant-face 19208 . 19212) (nil part-side javascript 19205 . 19208) (nil part-side javascript 19197 . 19205) (nil face web-mode-variable-name-face 19197 . 19205) (nil part-side javascript 19196 . 19197) (nil part-side javascript 19193 . 19196) (nil face web-mode-keyword-face 19193 . 19196) (nil part-side javascript 19184 . 19193) (nil part-side javascript 19183 . 19184) (nil face (rainbow-delimiters-depth-5-face) 19183 . 19184) (nil part-side javascript 19182 . 19183) (nil face (rainbow-delimiters-depth-6-face) 19182 . 19183) (nil part-side javascript 19181 . 19182) (nil part-side javascript 19175 . 19181) (nil face web-mode-variable-name-face 19175 . 19181) (nil part-side javascript 19173 . 19175) (nil part-side javascript 19168 . 19173) (nil face web-mode-variable-name-face 19168 . 19173) (nil part-side javascript 19166 . 19168) (nil part-side javascript 19165 . 19166) (nil part-token string 19165 . 19166) (nil syntax-table (15) 19165 . 19166) (nil font-lock-face web-mode-javascript-string-face 19165 . 19166) (nil part-side javascript 19164 . 19165) (nil part-token string 19164 . 19165) (nil font-lock-face web-mode-javascript-string-face 19164 . 19165) (nil part-side javascript 19163 . 19164) (nil part-token string 19163 . 19164) (nil syntax-table (15) 19163 . 19164) (nil font-lock-face web-mode-javascript-string-face 19163 . 19164) (nil part-side javascript 19161 . 19163) (nil part-side javascript 19156 . 19161) (nil face web-mode-variable-name-face 19156 . 19161) (nil part-side javascript 19155 . 19156) (nil part-side javascript 19154 . 19155) (nil face (rainbow-delimiters-depth-6-face) 19154 . 19155) (nil part-side javascript 19153 . 19154) (nil face (rainbow-delimiters-depth-5-face) 19153 . 19154) (nil part-side javascript 19149 . 19153) (nil face web-mode-function-call-face 19149 . 19153) (nil part-side javascript 19129 . 19149) (nil part-side javascript 19128 . 19129) (nil face (rainbow-delimiters-depth-5-face) 19128 . 19129) (nil part-side javascript 19127 . 19128) (nil part-token string 19127 . 19128) (nil syntax-table (15) 19127 . 19128) (nil font-lock-face web-mode-javascript-string-face 19127 . 19128) (nil part-side javascript 19126 . 19127) (nil part-token string 19126 . 19127) (nil font-lock-face web-mode-javascript-string-face 19126 . 19127) (nil part-side javascript 19125 . 19126) (nil part-token string 19125 . 19126) (nil syntax-table (15) 19125 . 19126) (nil font-lock-face web-mode-javascript-string-face 19125 . 19126) (nil part-side javascript 19124 . 19125) (nil face (rainbow-delimiters-depth-5-face) 19124 . 19125) (nil part-side javascript 19115 . 19124) (nil part-side javascript 19114 . 19115) (nil face (rainbow-delimiters-depth-5-face) 19114 . 19115) (nil part-side javascript 19113 . 19114) (nil part-token string 19113 . 19114) (nil syntax-table (15) 19113 . 19114) (nil font-lock-face web-mode-javascript-string-face 19113 . 19114) (nil part-side javascript 19112 . 19113) (nil part-token string 19112 . 19113) (nil font-lock-face web-mode-javascript-string-face 19112 . 19113) (nil part-side javascript 19111 . 19112) (nil part-token string 19111 . 19112) (nil syntax-table (15) 19111 . 19112) (nil font-lock-face web-mode-javascript-string-face 19111 . 19112) (nil part-side javascript 19110 . 19111) (nil face (rainbow-delimiters-depth-5-face) 19110 . 19111) (nil part-side javascript 19095 . 19110) (nil part-side javascript 19094 . 19095) (nil face (rainbow-delimiters-depth-5-face) 19094 . 19095) (nil part-side javascript 19093 . 19094) (nil part-token string 19093 . 19094) (nil syntax-table (15) 19093 . 19094) (nil font-lock-face web-mode-javascript-string-face 19093 . 19094) (nil part-side javascript 19092 . 19093) (nil part-token string 19092 . 19093) (nil font-lock-face web-mode-javascript-string-face 19092 . 19093) (nil part-side javascript 19091 . 19092) (nil part-token string 19091 . 19092) (nil syntax-table (15) 19091 . 19092) (nil font-lock-face web-mode-javascript-string-face 19091 . 19092) (nil part-side javascript 19090 . 19091) (nil face (rainbow-delimiters-depth-5-face) 19090 . 19091) (nil part-side javascript 19081 . 19090) (nil part-side javascript 19075 . 19081) (nil face web-mode-variable-name-face 19075 . 19081) (nil part-side javascript 19074 . 19075) (nil part-side javascript 19069 . 19074) (nil face web-mode-keyword-face 19069 . 19074) (nil part-side javascript 19060 . 19069) (nil part-side javascript 19059 . 19060) (nil face (rainbow-delimiters-depth-4-face) 19059 . 19060) (nil part-side javascript 19058 . 19059) (nil part-side javascript 19057 . 19058) (nil face (rainbow-delimiters-depth-4-face) 19057 . 19058) (nil part-side javascript 19050 . 19057) (nil part-side javascript 19049 . 19050) (nil face (rainbow-delimiters-depth-5-face) 19049 . 19050) (nil part-side javascript 19048 . 19049) (nil part-token string 19048 . 19049) (nil syntax-table (15) 19048 . 19049) (nil font-lock-face web-mode-javascript-string-face 19048 . 19049) (nil part-side javascript 19045 . 19048) (nil part-token string 19045 . 19048) (nil font-lock-face web-mode-javascript-string-face 19045 . 19048) (nil part-side javascript 19044 . 19045) (nil part-token string 19044 . 19045) (nil syntax-table (15) 19044 . 19045) (nil font-lock-face web-mode-javascript-string-face 19044 . 19045) (nil part-side javascript 19040 . 19044) (nil part-side javascript 19039 . 19040) (nil face (rainbow-delimiters-depth-6-face) 19039 . 19040) (nil part-side javascript 19038 . 19039) (nil part-token string 19038 . 19039) (nil syntax-table (15) 19038 . 19039) (nil font-lock-face web-mode-javascript-string-face 19038 . 19039) (nil part-side javascript 19029 . 19038) (nil part-token string 19029 . 19038) (nil font-lock-face web-mode-javascript-string-face 19029 . 19038) (nil part-side javascript 19028 . 19029) (nil part-token string 19028 . 19029) (nil syntax-table (15) 19028 . 19029) (nil font-lock-face web-mode-javascript-string-face 19028 . 19029) (nil part-side javascript 19027 . 19028) (nil face (rainbow-delimiters-depth-6-face) 19027 . 19028) (nil part-side javascript 19019 . 19027) (nil part-side javascript 19018 . 19019) (nil part-token string 19018 . 19019) (nil syntax-table (15) 19018 . 19019) (nil font-lock-face web-mode-javascript-string-face 19018 . 19019) (nil part-side javascript 19016 . 19018) (nil part-token string 19016 . 19018) (nil font-lock-face web-mode-javascript-string-face 19016 . 19018) (nil part-side javascript 19015 . 19016) (nil part-token string 19015 . 19016) (nil syntax-table (15) 19015 . 19016) (nil font-lock-face web-mode-javascript-string-face 19015 . 19016) (nil part-side javascript 19011 . 19015) (nil part-side javascript 19010 . 19011) (nil face (rainbow-delimiters-depth-6-face) 19010 . 19011) (nil part-side javascript 19009 . 19010) (nil part-token string 19009 . 19010) (nil syntax-table (15) 19009 . 19010) (nil font-lock-face web-mode-javascript-string-face 19009 . 19010) (nil part-side javascript 19000 . 19009) (nil part-token string 19000 . 19009) (nil font-lock-face web-mode-javascript-string-face 19000 . 19009) (nil part-side javascript 18999 . 19000) (nil part-token string 18999 . 19000) (nil syntax-table (15) 18999 . 19000) (nil font-lock-face web-mode-javascript-string-face 18999 . 19000) (nil part-side javascript 18998 . 18999) (nil face (rainbow-delimiters-depth-6-face) 18998 . 18999) (nil part-side javascript 18990 . 18998) (nil part-side javascript 18989 . 18990) (nil part-token string 18989 . 18990) (nil syntax-table (15) 18989 . 18990) (nil font-lock-face web-mode-javascript-string-face 18989 . 18990) (nil part-side javascript 18986 . 18989) (nil part-token string 18986 . 18989) (nil font-lock-face web-mode-javascript-string-face 18986 . 18989) (nil part-side javascript 18985 . 18986) (nil part-token string 18985 . 18986) (nil syntax-table (15) 18985 . 18986) (nil font-lock-face web-mode-javascript-string-face 18985 . 18986) (nil part-side javascript 18981 . 18985) (nil part-side javascript 18980 . 18981) (nil face (rainbow-delimiters-depth-6-face) 18980 . 18981) (nil part-side javascript 18979 . 18980) (nil part-token string 18979 . 18980) (nil syntax-table (15) 18979 . 18980) (nil font-lock-face web-mode-javascript-string-face 18979 . 18980) (nil part-side javascript 18970 . 18979) (nil part-token string 18970 . 18979) (nil font-lock-face web-mode-javascript-string-face 18970 . 18979) (nil part-side javascript 18969 . 18970) (nil part-token string 18969 . 18970) (nil syntax-table (15) 18969 . 18970) (nil font-lock-face web-mode-javascript-string-face 18969 . 18970) (nil part-side javascript 18968 . 18969) (nil face (rainbow-delimiters-depth-6-face) 18968 . 18969) (nil part-side javascript 18964 . 18968) (nil part-side javascript 18963 . 18964) (nil face (rainbow-delimiters-depth-5-face) 18963 . 18964) (nil part-side javascript 18946 . 18963) (nil part-side javascript 18944 . 18946) (nil face web-mode-keyword-face 18944 . 18946) (nil part-side javascript 18943 . 18944) (nil part-side javascript 18942 . 18943) (nil part-token string 18942 . 18943) (nil syntax-table (15) 18942 . 18943) (nil font-lock-face web-mode-javascript-string-face 18942 . 18943) (nil part-side javascript 18933 . 18942) (nil part-token string 18933 . 18942) (nil font-lock-face web-mode-javascript-string-face 18933 . 18942) (nil part-side javascript 18932 . 18933) (nil part-token string 18932 . 18933) (nil syntax-table (15) 18932 . 18933) (nil font-lock-face web-mode-javascript-string-face 18932 . 18933) (nil part-side javascript 18923 . 18932) (nil part-side javascript 18922 . 18923) (nil face (rainbow-delimiters-depth-4-face) 18922 . 18923) (nil part-side javascript 18921 . 18922) (nil part-side javascript 18919 . 18921) (nil face web-mode-keyword-face 18919 . 18921) (nil part-side javascript 18913 . 18919) (18913 . 19776)) nil (25579 33845 32306 355000) 0 nil])
([nil nil ((#("      " 0 6 (part-side javascript)) . -18913) 18907) nil (25579 33845 32203 824000) 0 nil])
([nil nil ((20134 . 20143)) nil (25579 33845 32202 690000) 0 nil])
([nil nil ((20148 . 20149) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 20148) (20147 . 20148) (20146 . 20148) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -20146) (20143 . 20147)) nil (25579 33845 32200 852000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -20148) (undo-tree-id244 . -1) 20149) nil (25579 33845 32198 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20172 . 20173) (nil part-side javascript 20172 . 20173) (nil part-token string 20172 . 20173) (nil syntax-table (15) 20172 . 20173) (nil font-lock-face web-mode-javascript-string-face 20172 . 20173) (nil part-side javascript 20169 . 20172) (nil part-token string 20169 . 20172) (nil font-lock-face web-mode-javascript-string-face 20169 . 20172) (nil part-side javascript 20168 . 20169) (nil part-token string 20168 . 20169) (nil syntax-table (15) 20168 . 20169) (nil font-lock-face web-mode-javascript-string-face 20168 . 20169) (nil part-side javascript 20164 . 20168) (nil part-side javascript 20163 . 20164) (nil face (rainbow-delimiters-depth-6-face) 20163 . 20164) (nil part-side javascript 20162 . 20163) (nil part-token string 20162 . 20163) (nil syntax-table (15) 20162 . 20163) (nil font-lock-face web-mode-javascript-string-face 20162 . 20163) (nil part-side javascript 20153 . 20162) (nil part-token string 20153 . 20162) (nil font-lock-face web-mode-javascript-string-face 20153 . 20162) (nil part-side javascript 20152 . 20153) (nil part-token string 20152 . 20153) (nil syntax-table (15) 20152 . 20153) (nil font-lock-face web-mode-javascript-string-face 20152 . 20153) (nil part-side javascript 20151 . 20152) (nil face (rainbow-delimiters-depth-6-face) 20151 . 20152) (nil part-side javascript 20147 . 20151) (20147 . 20173)) nil (25579 33845 32194 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20168 . 20169) (nil part-side javascript 20161 . 20169) (nil part-side javascript 20159 . 20161) (nil face web-mode-keyword-face 20159 . 20161) (nil part-side javascript 20158 . 20159) (nil part-side javascript 20157 . 20158) (nil part-token string 20157 . 20158) (nil syntax-table (15) 20157 . 20158) (nil font-lock-face web-mode-javascript-string-face 20157 . 20158) (nil part-side javascript 20148 . 20157) (nil part-token string 20148 . 20157) (nil font-lock-face web-mode-javascript-string-face 20148 . 20157) (nil part-side javascript 20147 . 20148) (nil part-token string 20147 . 20148) (nil syntax-table (15) 20147 . 20148) (nil font-lock-face web-mode-javascript-string-face 20147 . 20148) (20147 . 20169)) nil (25579 33845 32186 763000) 0 nil])
([nil nil ((20169 . 20170)) nil (25579 33845 32182 72000) 0 nil])
([nil nil ((20198 . 20200) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -20198) (20197 . 20199)) nil (25579 33845 32180 808000) 0 nil])
([nil nil ((20201 . 20209) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 20200) (undo-tree-id242 . -8) (undo-tree-id243 . 10) (20208 . 20210) (20199 . 20209)) nil (25579 33845 32178 941000) 0 nil])
([nil nil ((20210 . 20219)) nil (25579 33845 32174 521000) 0 nil])
([nil nil ((20224 . 20226) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -20224) (20219 . 20225)) nil (25579 33845 32173 188000) 0 nil])
([nil nil ((20227 . 20235) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 20226) (undo-tree-id240 . -8) (undo-tree-id241 . 10) (20234 . 20236) (20225 . 20235)) nil (25579 33845 32171 353000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 20238) (20228 . 20238) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 20227) (undo-tree-id239 . -8) (20237 . 20238) 20235) nil (25579 33845 32167 261000) 0 nil])
([nil nil ((#("        result.push({
" 0 15 (part-side javascript) 15 19 (part-side javascript face web-mode-function-call-face) 19 20 (part-side javascript face (rainbow-delimiters-depth-7-face)) 20 21 (part-side javascript face (rainbow-delimiters-depth-8-face)) 21 22 (part-side javascript)) . 20260) (20250 . 20260) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 20228) (undo-tree-id238 . -8) (20238 . 20260) 20236) nil (25579 33845 32158 251000) 0 nil])
([nil nil ((#("              value: filt['condition'].toUpperCase() + ' ' + filt['field'],
" 0 14 (part-side javascript) 14 19 (part-side javascript face web-mode-variable-name-face) 19 25 (part-side javascript) 25 26 (part-side javascript face (rainbow-delimiters-depth-7-face)) 26 27 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 27 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 38 (part-side javascript face (rainbow-delimiters-depth-7-face)) 38 39 (part-side javascript) 39 50 (part-side javascript face web-mode-function-call-face) 50 51 (part-side javascript face (rainbow-delimiters-depth-7-face)) 51 52 (part-side javascript face (rainbow-delimiters-depth-7-face)) 52 55 (part-side javascript) 55 56 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 56 57 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 57 58 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 58 65 (part-side javascript) 65 66 (part-side javascript face (rainbow-delimiters-depth-7-face)) 66 67 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 67 72 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 72 73 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 73 74 (part-side javascript face (rainbow-delimiters-depth-7-face)) 74 76 (part-side javascript)) . 20336) (20326 . 20336) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-7-face)) 9 10 (part-side javascript)) . 20250) (undo-tree-id237 . -8) (20260 . 20336) 20258) nil (25579 33845 32155 64000) 0 nil])
([nil nil ((#("              index: idxobj['i']
" 0 14 (part-side javascript) 14 19 (part-side javascript face web-mode-variable-name-face) 19 27 (part-side javascript) 27 28 (part-side javascript face (rainbow-delimiters-depth-7-face)) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript face (rainbow-delimiters-depth-7-face)) 32 33 (part-side javascript)) . 20369) (20359 . 20369) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-7-face)) 9 10 (part-side javascript)) . 20326) (undo-tree-id236 . -8) (20336 . 20369) 20334) nil (25579 33845 32151 790000) 0 nil])
([nil nil ((#("        })
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-4-face)) 9 10 (part-side javascript face (rainbow-delimiters-mismatched-face)) 10 11 (part-side javascript)) . 20380) (20370 . 20380) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-7-face)) 9 10 (part-side javascript)) . 20359) (undo-tree-id235 . -8) (20369 . 20380) 20367) nil (25579 33845 32148 238000) 0 nil])
([nil nil ((#("        idxobj['i'] = idxobj['i'] + 1
" 0 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 16 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 16 17 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 17 18 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-5-face)) 19 28 (part-side javascript) 28 29 (part-side javascript face (rainbow-delimiters-depth-5-face)) 29 30 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 32 33 (part-side javascript face (rainbow-delimiters-depth-5-face)) 33 38 (part-side javascript)) . 20418) (20408 . 20418) (#("        }
" 0 8 (part-side javascript) 8 9 (part-side javascript face (rainbow-delimiters-depth-5-face)) 9 10 (part-side javascript)) . 20370) (undo-tree-id234 . -8) (20380 . 20418) 20378) nil (25579 33845 32144 808000) 0 nil])
([nil nil ((20378 . 20380) (20365 . 20367) (#("  " 0 2 (part-side javascript)) . -20338) (#("  " 0 2 (part-side javascript)) . -20264) (20236 . 20238) 20211) nil (25579 33845 32141 141000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 20225) (undo-tree-id232 . -1) (#("
" 0 1 (part-side javascript)) . 20225) (undo-tree-id233 . -1)) nil (25579 33845 32138 744000) 0 nil])
([nil nil ((#("      if (
        'condition' in filt &&
        (filt['condition'] == 'and' || filt['condition'] == 'or' || filt['condition'] == 'sep')
      ) {
        const andidx = idxobj['i']
        idxobj['i'] = idxobj['i'] + 1
        result.push({ value: '(', index: andidx })
        let firstand = true
        for (let index = 0; index < filt['rules'].length; index++) {
          if (firstand) {
            firstand = false
          }
          else {
            if (filt['condition'] == 'or') {
              result.push({ value: 'OR', index: andidx })
            }
            else {
              result.push({ value: 'AND', index: andidx })
            }
          }
          result = result.concat(
            this.filtertotextlist(filt['rules'][index], idxobj, setcurfil)
          )
        }
        result.push({ value: ')', index: andidx })
      }" 0 6 (part-side javascript) 6 8 (part-side javascript face web-mode-keyword-face) 8 9 (part-side javascript) 9 10 (part-side javascript face (rainbow-delimiters-depth-4-face)) 10 19 (part-side javascript) 19 20 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 20 29 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript) 31 33 (part-side javascript face web-mode-keyword-face) 33 50 (part-side javascript) 50 51 (part-side javascript face (rainbow-delimiters-depth-5-face)) 51 55 (part-side javascript) 55 56 (part-side javascript face (rainbow-delimiters-depth-6-face)) 56 57 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 57 66 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 66 67 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 67 68 (part-side javascript face (rainbow-delimiters-depth-6-face)) 68 72 (part-side javascript) 72 73 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 73 76 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 76 77 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 77 85 (part-side javascript) 85 86 (part-side javascript face (rainbow-delimiters-depth-6-face)) 86 87 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 87 96 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 96 97 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 97 98 (part-side javascript face (rainbow-delimiters-depth-6-face)) 98 102 (part-side javascript) 102 103 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 103 105 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 105 106 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 106 114 (part-side javascript) 114 115 (part-side javascript face (rainbow-delimiters-depth-6-face)) 115 116 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 116 125 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 125 126 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 126 127 (part-side javascript face (rainbow-delimiters-depth-6-face)) 127 131 (part-side javascript) 131 132 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 132 135 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 135 136 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 136 137 (part-side javascript face (rainbow-delimiters-depth-5-face)) 137 138 (part-side javascript) 138 144 (part-side javascript) 144 145 (part-side javascript face (rainbow-delimiters-depth-4-face)) 145 146 (part-side javascript) 146 147 (part-side javascript face (rainbow-delimiters-depth-4-face)) 147 156 (part-side javascript) 156 161 (part-side javascript face web-mode-keyword-face) 161 162 (part-side javascript) 162 168 (part-side javascript face web-mode-variable-name-face) 168 177 (part-side javascript) 177 178 (part-side javascript face (rainbow-delimiters-depth-5-face)) 178 179 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 179 180 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 180 181 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 181 182 (part-side javascript face (rainbow-delimiters-depth-5-face)) 182 197 (part-side javascript) 197 198 (part-side javascript face (rainbow-delimiters-depth-5-face)) 198 199 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 199 200 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 200 201 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 201 202 (part-side javascript face (rainbow-delimiters-depth-5-face)) 202 211 (part-side javascript) 211 212 (part-side javascript face (rainbow-delimiters-depth-5-face)) 212 213 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 213 214 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 214 215 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 215 216 (part-side javascript face (rainbow-delimiters-depth-5-face)) 216 236 (part-side javascript) 236 240 (part-side javascript face web-mode-function-call-face) 240 241 (part-side javascript face (rainbow-delimiters-depth-5-face)) 241 242 (part-side javascript face (rainbow-delimiters-depth-6-face)) 242 243 (part-side javascript) 243 248 (part-side javascript face web-mode-variable-name-face) 248 250 (part-side javascript) 250 251 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 251 252 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 252 253 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 253 255 (part-side javascript) 255 260 (part-side javascript face web-mode-variable-name-face) 260 262 (part-side javascript) 262 268 (part-side javascript face web-mode-variable-name-face) 268 269 (part-side javascript) 269 270 (part-side javascript face (rainbow-delimiters-depth-6-face)) 270 271 (part-side javascript face (rainbow-delimiters-depth-5-face)) 271 280 (part-side javascript) 280 283 (part-side javascript face web-mode-keyword-face) 283 284 (part-side javascript) 284 292 (part-side javascript face web-mode-variable-name-face) 292 295 (part-side javascript) 295 299 (part-side javascript face web-mode-constant-face) 299 308 (part-side javascript) 308 311 (part-side javascript face web-mode-keyword-face) 311 312 (part-side javascript) 312 313 (part-side javascript face (rainbow-delimiters-depth-5-face)) 313 316 (part-side javascript face web-mode-keyword-face) 316 317 (part-side javascript) 317 322 (part-side javascript face web-mode-variable-name-face) 322 340 (part-side javascript) 340 341 (part-side javascript face (rainbow-delimiters-depth-6-face)) 341 342 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 342 347 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 347 348 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 348 349 (part-side javascript face (rainbow-delimiters-depth-6-face)) 349 365 (part-side javascript) 365 366 (part-side javascript face (rainbow-delimiters-depth-5-face)) 366 367 (part-side javascript) 367 368 (part-side javascript face (rainbow-delimiters-depth-5-face)) 368 379 (part-side javascript) 379 381 (part-side javascript face web-mode-keyword-face) 381 382 (part-side javascript) 382 383 (part-side javascript face (rainbow-delimiters-depth-6-face)) 383 391 (part-side javascript) 391 392 (part-side javascript face (rainbow-delimiters-depth-6-face)) 392 393 (part-side javascript) 393 394 (part-side javascript face (rainbow-delimiters-depth-6-face)) 394 418 (part-side javascript) 418 423 (part-side javascript face web-mode-constant-face) 423 434 (part-side javascript) 434 435 (part-side javascript face (rainbow-delimiters-depth-6-face)) 435 446 (part-side javascript) 446 450 (part-side javascript face web-mode-keyword-face) 450 451 (part-side javascript) 451 452 (part-side javascript face (rainbow-delimiters-depth-6-face)) 452 465 (part-side javascript) 465 467 (part-side javascript face web-mode-keyword-face) 467 468 (part-side javascript) 468 469 (part-side javascript face (rainbow-delimiters-depth-7-face)) 469 473 (part-side javascript) 473 474 (part-side javascript face (rainbow-delimiters-depth-8-face)) 474 475 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 475 484 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 484 485 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 485 486 (part-side javascript face (rainbow-delimiters-depth-8-face)) 486 490 (part-side javascript) 490 491 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 491 493 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 493 494 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 494 495 (part-side javascript face (rainbow-delimiters-depth-7-face)) 495 496 (part-side javascript) 496 497 (part-side javascript face (rainbow-delimiters-depth-7-face)) 497 519 (part-side javascript) 519 523 (part-side javascript face web-mode-function-call-face) 523 524 (part-side javascript face (rainbow-delimiters-depth-8-face)) 524 525 (part-side javascript face (rainbow-delimiters-depth-9-face)) 525 526 (part-side javascript) 526 531 (part-side javascript face web-mode-variable-name-face) 531 533 (part-side javascript) 533 534 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 534 536 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 536 537 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 537 539 (part-side javascript) 539 544 (part-side javascript face web-mode-variable-name-face) 544 546 (part-side javascript) 546 552 (part-side javascript face web-mode-variable-name-face) 552 553 (part-side javascript) 553 554 (part-side javascript face (rainbow-delimiters-depth-9-face)) 554 555 (part-side javascript face (rainbow-delimiters-depth-8-face)) 555 568 (part-side javascript) 568 569 (part-side javascript face (rainbow-delimiters-depth-7-face)) 569 582 (part-side javascript) 582 586 (part-side javascript face web-mode-keyword-face) 586 587 (part-side javascript) 587 588 (part-side javascript face (rainbow-delimiters-depth-7-face)) 588 610 (part-side javascript) 610 614 (part-side javascript face web-mode-function-call-face) 614 615 (part-side javascript face (rainbow-delimiters-depth-8-face)) 615 616 (part-side javascript face (rainbow-delimiters-depth-9-face)) 616 617 (part-side javascript) 617 622 (part-side javascript face web-mode-variable-name-face) 622 624 (part-side javascript) 624 625 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 625 628 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 628 629 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 629 631 (part-side javascript) 631 636 (part-side javascript face web-mode-variable-name-face) 636 638 (part-side javascript) 638 644 (part-side javascript face web-mode-variable-name-face) 644 645 (part-side javascript) 645 646 (part-side javascript face (rainbow-delimiters-depth-9-face)) 646 647 (part-side javascript face (rainbow-delimiters-depth-8-face)) 647 660 (part-side javascript) 660 661 (part-side javascript face (rainbow-delimiters-depth-7-face)) 661 672 (part-side javascript) 672 673 (part-side javascript face (rainbow-delimiters-depth-6-face)) 673 700 (part-side javascript) 700 706 (part-side javascript face web-mode-function-call-face) 706 707 (part-side javascript face (rainbow-delimiters-depth-6-face)) 707 720 (part-side javascript) 720 724 (part-side javascript face web-mode-constant-face) 724 725 (part-side javascript) 725 741 (part-side javascript face web-mode-function-call-face) 741 742 (part-side javascript face (rainbow-delimiters-depth-7-face)) 742 746 (part-side javascript) 746 747 (part-side javascript face (rainbow-delimiters-depth-8-face)) 747 748 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 748 753 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 753 754 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 754 755 (part-side javascript face (rainbow-delimiters-depth-8-face)) 755 756 (part-side javascript face (rainbow-delimiters-depth-8-face)) 756 761 (part-side javascript) 761 762 (part-side javascript face (rainbow-delimiters-depth-8-face)) 762 781 (part-side javascript) 781 782 (part-side javascript face (rainbow-delimiters-depth-7-face)) 782 793 (part-side javascript) 793 794 (part-side javascript face (rainbow-delimiters-depth-6-face)) 794 803 (part-side javascript) 803 804 (part-side javascript face (rainbow-delimiters-depth-5-face)) 804 805 (part-side javascript) 805 820 (part-side javascript) 820 824 (part-side javascript face web-mode-function-call-face) 824 825 (part-side javascript face (rainbow-delimiters-depth-5-face)) 825 826 (part-side javascript face (rainbow-delimiters-depth-6-face)) 826 827 (part-side javascript) 827 832 (part-side javascript face web-mode-variable-name-face) 832 834 (part-side javascript) 834 835 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 835 836 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 836 837 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 837 839 (part-side javascript) 839 844 (part-side javascript face web-mode-variable-name-face) 844 846 (part-side javascript) 846 852 (part-side javascript face web-mode-variable-name-face) 852 853 (part-side javascript) 853 854 (part-side javascript face (rainbow-delimiters-depth-6-face)) 854 855 (part-side javascript face (rainbow-delimiters-depth-5-face)) 855 856 (part-side javascript) 856 862 (part-side javascript) 862 863 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face))) . 18907) (undo-tree-id221 . -863) (undo-tree-id222 . -11) (undo-tree-id223 . -795) (undo-tree-id224 . -795) (undo-tree-id225 . -863) (undo-tree-id226 . -136) (undo-tree-id227 . -38) (undo-tree-id228 . -41) (undo-tree-id229 . -855) (undo-tree-id230 . -863) (undo-tree-id231 . -863)) nil (25579 33845 32134 995000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -18906) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) 18907) nil (25579 33845 32122 639000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20034 . 20035) (nil part-side javascript 20034 . 20035) (nil face (rainbow-delimiters-depth-6-face) 20034 . 20035) (nil part-side javascript 20033 . 20034) (nil face (rainbow-delimiters-depth-7-face) 20033 . 20034) (nil part-side javascript 20032 . 20033) (nil part-side javascript 20026 . 20032) (nil face web-mode-variable-name-face 20026 . 20032) (nil part-side javascript 20024 . 20026) (nil part-side javascript 20019 . 20024) (nil face web-mode-variable-name-face 20019 . 20024) (nil part-side javascript 20017 . 20019) (nil part-side javascript 20016 . 20017) (nil part-token string 20016 . 20017) (nil syntax-table (15) 20016 . 20017) (nil font-lock-face web-mode-javascript-string-face 20016 . 20017) (nil part-side javascript 20015 . 20016) (nil part-token string 20015 . 20016) (nil font-lock-face web-mode-javascript-string-face 20015 . 20016) (nil part-side javascript 20014 . 20015) (nil part-token string 20014 . 20015) (nil syntax-table (15) 20014 . 20015) (nil font-lock-face web-mode-javascript-string-face 20014 . 20015) (nil part-side javascript 20012 . 20014) (nil part-side javascript 20007 . 20012) (nil face web-mode-variable-name-face 20007 . 20012) (nil part-side javascript 20006 . 20007) (nil part-side javascript 20005 . 20006) (nil face (rainbow-delimiters-depth-7-face) 20005 . 20006) (nil part-side javascript 20004 . 20005) (nil face (rainbow-delimiters-depth-6-face) 20004 . 20005) (nil part-side javascript 20000 . 20004) (nil face web-mode-function-call-face 20000 . 20004) (nil part-side javascript 19985 . 20000) (nil part-side javascript 19984 . 19985) (nil part-side javascript 19983 . 19984) (nil face (rainbow-delimiters-depth-6-face) 19983 . 19984) (nil part-side javascript 19974 . 19983) (nil part-side javascript 19973 . 19974) (nil face (rainbow-delimiters-depth-7-face) 19973 . 19974) (nil part-side javascript 19962 . 19973) (nil part-side javascript 19961 . 19962) (nil face (rainbow-delimiters-depth-8-face) 19961 . 19962) (nil part-side javascript 19942 . 19961) (nil part-side javascript 19941 . 19942) (nil face (rainbow-delimiters-depth-9-face) 19941 . 19942) (nil part-side javascript 19936 . 19941) (nil part-side javascript 19935 . 19936) (nil face (rainbow-delimiters-depth-9-face) 19935 . 19936) (nil part-side javascript 19934 . 19935) (nil face (rainbow-delimiters-depth-9-face) 19934 . 19935) (nil part-side javascript 19933 . 19934) (nil part-token string 19933 . 19934) (nil syntax-table (15) 19933 . 19934) (nil font-lock-face web-mode-javascript-string-face 19933 . 19934) (nil part-side javascript 19928 . 19933) (nil part-token string 19928 . 19933) (nil font-lock-face web-mode-javascript-string-face 19928 . 19933) (nil part-side javascript 19927 . 19928) (nil part-token string 19927 . 19928) (nil syntax-table (15) 19927 . 19928) (nil font-lock-face web-mode-javascript-string-face 19927 . 19928) (nil part-side javascript 19926 . 19927) (nil face (rainbow-delimiters-depth-9-face) 19926 . 19927) (nil part-side javascript 19922 . 19926) (nil part-side javascript 19921 . 19922) (nil face (rainbow-delimiters-depth-8-face) 19921 . 19922) (nil part-side javascript 19905 . 19921) (nil face web-mode-function-call-face 19905 . 19921) (nil part-side javascript 19904 . 19905) (nil part-side javascript 19900 . 19904) (nil face web-mode-constant-face 19900 . 19904) (nil part-side javascript 19887 . 19900) (nil part-side javascript 19886 . 19887) (nil face (rainbow-delimiters-depth-7-face) 19886 . 19887) (nil part-side javascript 19880 . 19886) (nil face web-mode-function-call-face 19880 . 19886) (nil part-side javascript 19853 . 19880) (nil part-side javascript 19852 . 19853) (nil face (rainbow-delimiters-depth-7-face) 19852 . 19853) (nil part-side javascript 19841 . 19852) (nil part-side javascript 19840 . 19841) (nil face (rainbow-delimiters-depth-8-face) 19840 . 19841) (nil part-side javascript 19827 . 19840) (nil part-side javascript 19826 . 19827) (nil face (rainbow-delimiters-depth-9-face) 19826 . 19827) (nil part-side javascript 19825 . 19826) (nil face (rainbow-delimiters-depth-1-face) 19825 . 19826) (nil part-side javascript 19824 . 19825) (nil part-side javascript 19818 . 19824) (nil face web-mode-variable-name-face 19818 . 19824) (nil part-side javascript 19816 . 19818) (nil part-side javascript 19811 . 19816) (nil face web-mode-variable-name-face 19811 . 19816) (nil part-side javascript 19809 . 19811) (nil part-side javascript 19808 . 19809) (nil part-token string 19808 . 19809) (nil syntax-table (15) 19808 . 19809) (nil font-lock-face web-mode-javascript-string-face 19808 . 19809) (nil part-side javascript 19805 . 19808) (nil part-token string 19805 . 19808) (nil font-lock-face web-mode-javascript-string-face 19805 . 19808) (nil part-side javascript 19804 . 19805) (nil part-token string 19804 . 19805) (nil syntax-table (15) 19804 . 19805) (nil font-lock-face web-mode-javascript-string-face 19804 . 19805) (nil part-side javascript 19802 . 19804) (nil part-side javascript 19797 . 19802) (nil face web-mode-variable-name-face 19797 . 19802) (nil part-side javascript 19796 . 19797) (nil part-side javascript 19795 . 19796) (nil face (rainbow-delimiters-depth-1-face) 19795 . 19796) (nil part-side javascript 19794 . 19795) (nil face (rainbow-delimiters-depth-9-face) 19794 . 19795) (nil part-side javascript 19790 . 19794) (nil face web-mode-function-call-face 19790 . 19794) (nil part-side javascript 19768 . 19790) (nil part-side javascript 19767 . 19768) (nil face (rainbow-delimiters-depth-8-face) 19767 . 19768) (nil part-side javascript 19766 . 19767) (nil part-side javascript 19762 . 19766) (nil face web-mode-keyword-face 19762 . 19766) (nil part-side javascript 19749 . 19762) (nil part-side javascript 19748 . 19749) (nil face (rainbow-delimiters-depth-8-face) 19748 . 19749) (nil part-side javascript 19735 . 19748) (nil part-side javascript 19734 . 19735) (nil face (rainbow-delimiters-depth-9-face) 19734 . 19735) (nil part-side javascript 19733 . 19734) (nil face (rainbow-delimiters-depth-1-face) 19733 . 19734) (nil part-side javascript 19732 . 19733) (nil part-side javascript 19726 . 19732) (nil face web-mode-variable-name-face 19726 . 19732) (nil part-side javascript 19724 . 19726) (nil part-side javascript 19719 . 19724) (nil face web-mode-variable-name-face 19719 . 19724) (nil part-side javascript 19717 . 19719) (nil part-side javascript 19716 . 19717) (nil part-token string 19716 . 19717) (nil syntax-table (15) 19716 . 19717) (nil font-lock-face web-mode-javascript-string-face 19716 . 19717) (nil part-side javascript 19714 . 19716) (nil part-token string 19714 . 19716) (nil font-lock-face web-mode-javascript-string-face 19714 . 19716) (nil part-side javascript 19713 . 19714) (nil part-token string 19713 . 19714) (nil syntax-table (15) 19713 . 19714) (nil font-lock-face web-mode-javascript-string-face 19713 . 19714) (nil part-side javascript 19711 . 19713) (nil part-side javascript 19706 . 19711) (nil face web-mode-variable-name-face 19706 . 19711) (nil part-side javascript 19705 . 19706) (nil part-side javascript 19704 . 19705) (nil face (rainbow-delimiters-depth-1-face) 19704 . 19705) (nil part-side javascript 19703 . 19704) (nil face (rainbow-delimiters-depth-9-face) 19703 . 19704) (nil part-side javascript 19699 . 19703) (nil face web-mode-function-call-face 19699 . 19703) (nil part-side javascript 19677 . 19699) (nil part-side javascript 19676 . 19677) (nil face (rainbow-delimiters-depth-8-face) 19676 . 19677) (nil part-side javascript 19675 . 19676) (nil part-side javascript 19674 . 19675) (nil face (rainbow-delimiters-depth-8-face) 19674 . 19675) (nil part-side javascript 19673 . 19674) (nil part-token string 19673 . 19674) (nil syntax-table (15) 19673 . 19674) (nil font-lock-face web-mode-javascript-string-face 19673 . 19674) (nil part-side javascript 19671 . 19673) (nil part-token string 19671 . 19673) (nil font-lock-face web-mode-javascript-string-face 19671 . 19673) (nil part-side javascript 19670 . 19671) (nil part-token string 19670 . 19671) (nil syntax-table (15) 19670 . 19671) (nil font-lock-face web-mode-javascript-string-face 19670 . 19671) (nil part-side javascript 19666 . 19670) (nil part-side javascript 19665 . 19666) (nil face (rainbow-delimiters-depth-9-face) 19665 . 19666) (nil part-side javascript 19664 . 19665) (nil part-token string 19664 . 19665) (nil syntax-table (15) 19664 . 19665) (nil font-lock-face web-mode-javascript-string-face 19664 . 19665) (nil part-side javascript 19655 . 19664) (nil part-token string 19655 . 19664) (nil font-lock-face web-mode-javascript-string-face 19655 . 19664) (nil part-side javascript 19654 . 19655) (nil part-token string 19654 . 19655) (nil syntax-table (15) 19654 . 19655) (nil font-lock-face web-mode-javascript-string-face 19654 . 19655) (nil part-side javascript 19653 . 19654) (nil face (rainbow-delimiters-depth-9-face) 19653 . 19654) (nil part-side javascript 19649 . 19653) (nil part-side javascript 19648 . 19649) (nil face (rainbow-delimiters-depth-8-face) 19648 . 19649) (nil part-side javascript 19647 . 19648) (nil part-side javascript 19645 . 19647) (nil face web-mode-keyword-face 19645 . 19647) (nil part-side javascript 19632 . 19645) (nil part-side javascript 19631 . 19632) (nil face (rainbow-delimiters-depth-7-face) 19631 . 19632) (nil part-side javascript 19630 . 19631) (nil part-side javascript 19626 . 19630) (nil face web-mode-keyword-face 19626 . 19630) (nil part-side javascript 19615 . 19626) (nil part-side javascript 19614 . 19615) (nil face (rainbow-delimiters-depth-7-face) 19614 . 19615) (nil part-side javascript 19603 . 19614) (nil part-side javascript 19598 . 19603) (nil face web-mode-constant-face 19598 . 19603) (nil part-side javascript 19574 . 19598) (nil part-side javascript 19573 . 19574) (nil face (rainbow-delimiters-depth-7-face) 19573 . 19574) (nil part-side javascript 19572 . 19573) (nil part-side javascript 19571 . 19572) (nil face (rainbow-delimiters-depth-7-face) 19571 . 19572) (nil part-side javascript 19563 . 19571) (nil part-side javascript 19562 . 19563) (nil face (rainbow-delimiters-depth-7-face) 19562 . 19563) (nil part-side javascript 19561 . 19562) (nil part-side javascript 19559 . 19561) (nil face web-mode-keyword-face 19559 . 19561) (nil part-side javascript 19548 . 19559) (nil part-side javascript 19547 . 19548) (nil face (rainbow-delimiters-depth-6-face) 19547 . 19548) (nil part-side javascript 19546 . 19547) (nil part-side javascript 19545 . 19546) (nil face (rainbow-delimiters-depth-6-face) 19545 . 19546) (nil part-side javascript 19529 . 19545) (nil part-side javascript 19528 . 19529) (nil face (rainbow-delimiters-depth-7-face) 19528 . 19529) (nil part-side javascript 19527 . 19528) (nil part-token string 19527 . 19528) (nil syntax-table (15) 19527 . 19528) (nil font-lock-face web-mode-javascript-string-face 19527 . 19528) (nil part-side javascript 19522 . 19527) (nil part-token string 19522 . 19527) (nil font-lock-face web-mode-javascript-string-face 19522 . 19527) (nil part-side javascript 19521 . 19522) (nil part-token string 19521 . 19522) (nil syntax-table (15) 19521 . 19522) (nil font-lock-face web-mode-javascript-string-face 19521 . 19522) (nil part-side javascript 19520 . 19521) (nil face (rainbow-delimiters-depth-7-face) 19520 . 19521) (nil part-side javascript 19502 . 19520) (nil part-side javascript 19497 . 19502) (nil face web-mode-variable-name-face 19497 . 19502) (nil part-side javascript 19496 . 19497) (nil part-side javascript 19493 . 19496) (nil face web-mode-keyword-face 19493 . 19496) (nil part-side javascript 19492 . 19493) (nil face (rainbow-delimiters-depth-6-face) 19492 . 19493) (nil part-side javascript 19491 . 19492) (nil part-side javascript 19488 . 19491) (nil face web-mode-keyword-face 19488 . 19491) (nil part-side javascript 19479 . 19488) (nil part-side javascript 19475 . 19479) (nil face web-mode-constant-face 19475 . 19479) (nil part-side javascript 19472 . 19475) (nil part-side javascript 19464 . 19472) (nil face web-mode-variable-name-face 19464 . 19472) (nil part-side javascript 19463 . 19464) (nil part-side javascript 19460 . 19463) (nil face web-mode-keyword-face 19460 . 19463) (nil part-side javascript 19451 . 19460) (nil part-side javascript 19450 . 19451) (nil face (rainbow-delimiters-depth-6-face) 19450 . 19451) (nil part-side javascript 19449 . 19450) (nil face (rainbow-delimiters-depth-7-face) 19449 . 19450) (nil part-side javascript 19448 . 19449) (nil part-side javascript 19442 . 19448) (nil face web-mode-variable-name-face 19442 . 19448) (nil part-side javascript 19440 . 19442) (nil part-side javascript 19435 . 19440) (nil face web-mode-variable-name-face 19435 . 19440) (nil part-side javascript 19433 . 19435) (nil part-side javascript 19432 . 19433) (nil part-token string 19432 . 19433) (nil syntax-table (15) 19432 . 19433) (nil font-lock-face web-mode-javascript-string-face 19432 . 19433) (nil part-side javascript 19431 . 19432) (nil part-token string 19431 . 19432) (nil font-lock-face web-mode-javascript-string-face 19431 . 19432) (nil part-side javascript 19430 . 19431) (nil part-token string 19430 . 19431) (nil syntax-table (15) 19430 . 19431) (nil font-lock-face web-mode-javascript-string-face 19430 . 19431) (nil part-side javascript 19428 . 19430) (nil part-side javascript 19423 . 19428) (nil face web-mode-variable-name-face 19423 . 19428) (nil part-side javascript 19422 . 19423) (nil part-side javascript 19421 . 19422) (nil face (rainbow-delimiters-depth-7-face) 19421 . 19422) (nil part-side javascript 19420 . 19421) (nil face (rainbow-delimiters-depth-6-face) 19420 . 19421) (nil part-side javascript 19416 . 19420) (nil face web-mode-function-call-face 19416 . 19420) (nil part-side javascript 19396 . 19416) (nil part-side javascript 19395 . 19396) (nil face (rainbow-delimiters-depth-6-face) 19395 . 19396) (nil part-side javascript 19394 . 19395) (nil part-token string 19394 . 19395) (nil syntax-table (15) 19394 . 19395) (nil font-lock-face web-mode-javascript-string-face 19394 . 19395) (nil part-side javascript 19393 . 19394) (nil part-token string 19393 . 19394) (nil font-lock-face web-mode-javascript-string-face 19393 . 19394) (nil part-side javascript 19392 . 19393) (nil part-token string 19392 . 19393) (nil syntax-table (15) 19392 . 19393) (nil font-lock-face web-mode-javascript-string-face 19392 . 19393) (nil part-side javascript 19391 . 19392) (nil face (rainbow-delimiters-depth-6-face) 19391 . 19392) (nil part-side javascript 19382 . 19391) (nil part-side javascript 19381 . 19382) (nil face (rainbow-delimiters-depth-6-face) 19381 . 19382) (nil part-side javascript 19380 . 19381) (nil part-token string 19380 . 19381) (nil syntax-table (15) 19380 . 19381) (nil font-lock-face web-mode-javascript-string-face 19380 . 19381) (nil part-side javascript 19379 . 19380) (nil part-token string 19379 . 19380) (nil font-lock-face web-mode-javascript-string-face 19379 . 19380) (nil part-side javascript 19378 . 19379) (nil part-token string 19378 . 19379) (nil syntax-table (15) 19378 . 19379) (nil font-lock-face web-mode-javascript-string-face 19378 . 19379) (nil part-side javascript 19377 . 19378) (nil face (rainbow-delimiters-depth-6-face) 19377 . 19378) (nil part-side javascript 19362 . 19377) (nil part-side javascript 19361 . 19362) (nil face (rainbow-delimiters-depth-6-face) 19361 . 19362) (nil part-side javascript 19360 . 19361) (nil part-token string 19360 . 19361) (nil syntax-table (15) 19360 . 19361) (nil font-lock-face web-mode-javascript-string-face 19360 . 19361) (nil part-side javascript 19359 . 19360) (nil part-token string 19359 . 19360) (nil font-lock-face web-mode-javascript-string-face 19359 . 19360) (nil part-side javascript 19358 . 19359) (nil part-token string 19358 . 19359) (nil syntax-table (15) 19358 . 19359) (nil font-lock-face web-mode-javascript-string-face 19358 . 19359) (nil part-side javascript 19357 . 19358) (nil face (rainbow-delimiters-depth-6-face) 19357 . 19358) (nil part-side javascript 19348 . 19357) (nil part-side javascript 19342 . 19348) (nil face web-mode-variable-name-face 19342 . 19348) (nil part-side javascript 19341 . 19342) (nil part-side javascript 19336 . 19341) (nil face web-mode-keyword-face 19336 . 19341) (19336 . 20035)) nil (25579 33845 32092 887000) 0 nil])
([nil nil ((20041 . 20043) (20029 . 20031) (20017 . 20019) (19942 . 19944) (19904 . 19906) (19890 . 19892) (19876 . 19878) (19803 . 19819) (#("              " 0 14 (part-side javascript)) . 19803) (19794 . 19796) (19778 . 19780) (19706 . 19722) (#("              " 0 14 (part-side javascript)) . 19706) (19671 . 19673) (19650 . 19652) (19636 . 19638) (19607 . 19609) (19577 . 19579) (19504 . 19506) (19474 . 19476) (19421 . 19423) (19381 . 19383) (19336 . 19346)) nil (25579 33845 32015 3000) 0 nil])
([nil nil ((#("AND" 0 3 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 19841) (undo-tree-id208 . -3) (undo-tree-id209 . -3)) nil (25579 33845 32009 168000) 0 nil])
([nil nil ((19841 . 19842)) nil (25579 33845 32005 973000) 0 nil])
([nil nil ((#("              if (filt['condition'] == 'or') {
                result.push({ value: 'OR', index: andidx })
              }
              else {" 0 14 (part-side javascript) 14 16 (part-side javascript face web-mode-keyword-face) 16 17 (part-side javascript) 17 18 (part-side javascript face (rainbow-delimiters-depth-8-face)) 18 22 (part-side javascript) 22 23 (part-side javascript face (rainbow-delimiters-depth-9-face)) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 33 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 33 34 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript face (rainbow-delimiters-depth-9-face)) 35 39 (part-side javascript) 39 40 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 40 42 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 42 43 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 43 44 (part-side javascript face (rainbow-delimiters-depth-8-face)) 44 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-8-face)) 46 47 (part-side javascript) 47 63 (part-side javascript) 63 70 (part-side javascript) 70 74 (part-side javascript face web-mode-function-call-face) 74 75 (part-side javascript face (rainbow-delimiters-depth-9-face)) 75 76 (part-side javascript face (rainbow-delimiters-depth-1-face)) 76 77 (part-side javascript) 77 82 (part-side javascript face web-mode-variable-name-face) 82 84 (part-side javascript) 84 85 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 85 87 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 87 88 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 88 90 (part-side javascript) 90 95 (part-side javascript face web-mode-variable-name-face) 95 97 (part-side javascript) 97 103 (part-side javascript face web-mode-variable-name-face) 103 104 (part-side javascript) 104 105 (part-side javascript face (rainbow-delimiters-depth-1-face)) 105 106 (part-side javascript face (rainbow-delimiters-depth-9-face)) 106 107 (part-side javascript) 107 121 (part-side javascript) 121 122 (part-side javascript face (rainbow-delimiters-depth-8-face)) 122 123 (part-side javascript) 123 137 (part-side javascript) 137 141 (part-side javascript face web-mode-keyword-face) 141 142 (part-side javascript) 142 143 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 19659) (undo-tree-id205 . -143) (undo-tree-id206 . -47) (undo-tree-id207 . -143)) nil (25579 33845 32004 586000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -19658) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 19659) nil (25579 33845 32000 168000) 0 nil])
([nil nil ((#("
              }" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 16 (part-side javascript face (rainbow-delimiters-depth-8-face))) . 19717) (undo-tree-id199 . -16) (undo-tree-id200 . -1) (undo-tree-id201 . -16)) nil (25579 33845 31994 511000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -19673) 19717) nil (25579 33845 31975 369000) 0 nil])
([nil nil ((4232 . 4239) (t 25579 33845 76390 609000)) nil (25579 34364 916098 906000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 4252) (4251 . 4252) (4250 . 4252) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -4250) (4239 . 4251)) nil (25579 34364 916096 566000) 0 nil])
([nil nil ((4264 . 4265) (4263 . 4265) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -4263) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (4251 . 4264)) nil (25579 34364 916090 539000) 0 nil])
([nil nil ((6310 . 6316) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 6309) (6309 . 6315) (6309 . 6310) (t 25579 34364 958175 786000)) nil (25579 34399 903057 846000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6329) (6328 . 6329) (6327 . 6329) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6327) (6316 . 6328)) nil (25579 34399 903054 392000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6349 . 6350) (nil part-side javascript 6349 . 6350) (nil face (rainbow-delimiters-depth-5-face) 6349 . 6350) (nil part-side javascript 6348 . 6349) (nil face (rainbow-delimiters-depth-5-face) 6348 . 6349) (nil part-side javascript 6333 . 6348) (nil face web-mode-function-call-face 6333 . 6348) (nil part-side javascript 6332 . 6333) (nil part-side javascript 6328 . 6332) (nil face web-mode-constant-face 6328 . 6332) (6328 . 6350)) nil (25579 34399 903045 967000) 0 nil])
([nil nil ((#("this.filters[0] == {}" 0 4 (part-side javascript face web-mode-constant-face) 4 12 (part-side javascript) 12 13 (part-side javascript face (rainbow-delimiters-depth-5-face)) 13 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face)) 15 19 (part-side javascript) 19 20 (part-side javascript face (rainbow-delimiters-depth-5-face)) 20 21 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 4397) (undo-tree-id254 . -21) (undo-tree-id255 . -21) (t 25579 34399 953757 687000)) nil (25579 34501 321808 470000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4436 . 4437) (nil part-side javascript 4425 . 4437) (nil part-side javascript 4424 . 4425) (nil face (rainbow-delimiters-depth-5-face) 4424 . 4425) (nil part-side javascript 4409 . 4424) (nil part-side javascript 4408 . 4409) (nil face (rainbow-delimiters-depth-5-face) 4408 . 4409) (nil part-side javascript 4404 . 4408) (nil face web-mode-function-call-face 4404 . 4408) (nil part-side javascript 4397 . 4404) (4397 . 4437)) nil (25579 34501 321793 912000) 0 nil])
([nil nil ((#("cfilternoparent" 0 15 (part-side javascript)) . 4409) (undo-tree-id252 . -15) (undo-tree-id253 . -15)) nil (25579 34501 321781 185000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4423 . 4424) (nil part-side javascript 4423 . 4424) (nil face (rainbow-delimiters-depth-6-face) 4423 . 4424) (nil part-side javascript 4422 . 4423) (nil part-side javascript 4421 . 4422) (nil face (rainbow-delimiters-depth-6-face) 4421 . 4422) (nil part-side javascript 4413 . 4421) (nil part-side javascript 4409 . 4413) (nil face web-mode-constant-face 4409 . 4413) (4409 . 4424)) nil (25579 34501 321758 479000) 0 nil])
([nil nil ((4454 . 4455) (4453 . 4455) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -4453) (4437 . 4454) (t 25579 34501 364547 327000)) nil (25579 34510 805031 65000) 0 nil])
([nil nil ((4456 . 4463)) nil (25579 34510 805028 160000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4462) (undo-tree-id256 . -1) 4463) nil (25579 34510 805022 941000) 0 nil])
([nil nil ((19388 . 19392) (t 25579 34510 848434 222000)) nil (25579 34663 400317 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19401 . 19402) (nil part-side javascript 19392 . 19402) (19392 . 19402)) nil (25579 34663 400314 526000) 0 nil])
([nil nil ((19392 . 19393)) nil (25579 34663 400304 597000) 0 nil])
([nil nil ((19093 . 19094) (t 25579 34663 450615 810000)) nil (25579 34691 721727 572000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19107 . 19108) (nil rear-nonsticky t 19107 . 19108) (nil part-side javascript 19107 . 19108) (nil part-side javascript 19098 . 19107) (nil part-side javascript 19094 . 19098) (19094 . 19108)) nil (25579 34691 721719 372000) 0 nil])
([nil nil ((#("
      console.log(this.filters[0])" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 23 (part-side javascript face web-mode-constant-face) 23 31 (part-side javascript) 31 32 (part-side javascript face (rainbow-delimiters-depth-5-face)) 32 33 (part-side javascript) 33 34 (part-side javascript face (rainbow-delimiters-depth-5-face)) 34 35 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 4232) (undo-tree-id257 . -35) (undo-tree-id258 . -21) (undo-tree-id259 . -1) (undo-tree-id260 . -35) (t 25579 34691 778278 558000)) nil (25579 34832 209218 529000) 0 nil])
([nil nil ((#("
      console.log(this.checkFilterType())" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 23 (part-side javascript face web-mode-constant-face) 23 24 (part-side javascript) 24 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-5-face)) 40 41 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face)) 41 42 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 6318) (undo-tree-id261 . -42) (undo-tree-id262 . -1) (undo-tree-id263 . -19) (undo-tree-id264 . -42) (t 25579 34832 264607 182000)) nil (25579 34837 879840 910000) 0 nil])
([nil nil ((10687 . 10694) (t 25579 34837 932539 786000)) nil (25579 34855 656926 522000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 10707) (10706 . 10707) (10705 . 10707) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10705) (10694 . 10706)) nil (25579 34855 656924 779000) 0 nil])
([nil nil ((10719 . 10721) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -10719) (10719 . 10720) (10718 . 10720) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -10718) (10706 . 10719)) nil (25579 34855 656922 344000) 0 nil])
([nil nil ((#("}" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 10719) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 10719)) nil (25579 34855 656918 889000) 0 nil])
([nil nil ((10719 . 10720)) nil (25579 34855 656911 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7237 . 7238) (nil part-side javascript 7237 . 7238) (nil face (rainbow-delimiters-depth-6-face) 7237 . 7238) (nil part-side javascript 7236 . 7237) (nil part-token string 7236 . 7237) (nil syntax-table (15) 7236 . 7237) (nil font-lock-face web-mode-javascript-string-face 7236 . 7237) (nil part-side javascript 7223 . 7236) (nil part-token string 7223 . 7236) (nil font-lock-face web-mode-javascript-string-face 7223 . 7236) (nil part-side javascript 7222 . 7223) (nil part-token string 7222 . 7223) (nil syntax-table (15) 7222 . 7223) (nil font-lock-face web-mode-javascript-string-face 7222 . 7223) (nil part-side javascript 7220 . 7222) (nil part-side javascript 7219 . 7220) (nil part-token string 7219 . 7220) (nil syntax-table (15) 7219 . 7220) (nil font-lock-face web-mode-javascript-string-face 7219 . 7220) (nil part-side javascript 7205 . 7219) (nil part-token string 7205 . 7219) (nil font-lock-face web-mode-javascript-string-face 7205 . 7219) (nil part-side javascript 7204 . 7205) (nil part-token string 7204 . 7205) (nil syntax-table (15) 7204 . 7205) (nil font-lock-face web-mode-javascript-string-face 7204 . 7205) (nil part-side javascript 7203 . 7204) (nil face (rainbow-delimiters-depth-6-face) 7203 . 7204) (nil part-side javascript 7202 . 7203) (nil part-side javascript 7200 . 7202) (nil face web-mode-keyword-face 7200 . 7202) (nil part-side javascript 7177 . 7200) (nil part-side javascript 7173 . 7177) (nil face web-mode-constant-face 7173 . 7177) (nil part-side javascript 7153 . 7173) (7153 . 7238) (t 25579 34855 700328 511000)) nil (25579 35724 142293 785000) 0 nil])
([nil nil ((#("aggr" 0 4 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 7205) (undo-tree-id272 . -4) (undo-tree-id273 . -4)) nil (25579 35724 142285 217000) 0 nil])
([nil nil ((7205 . 7209)) nil (25579 35724 142282 46000) 0 nil])
([nil nil ((#("i" 0 1 (part-side javascript)) . -7200) (undo-tree-id268 . -1) (#("n" 0 1 (part-side javascript face web-mode-keyword-face)) . -7201) (undo-tree-id269 . -1) (#(" " 0 1 (part-side javascript)) . -7202) (undo-tree-id270 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7203) (undo-tree-id271 . -1) 7204) nil (25579 35724 142280 363000) 0 nil])
([nil nil ((7200 . 7203)) nil (25579 35724 142273 758000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7200) (undo-tree-id265 . -1) (#("=" 0 1 (part-side javascript)) . -7201) (undo-tree-id266 . -1) (#("=" 0 1 (part-side javascript)) . -7202) (undo-tree-id267 . -1) 7203) nil (25579 35724 142271 849000) 0 nil])
([nil nil ((7200 . 7203)) nil (25579 35724 142260 773000) 0 nil])
([nil nil ((#("]" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-mismatched-face))) . 7219) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7219) (#("n" 0 1 (part-side javascript)) . 7219) (#("o" 0 1 (part-side javascript)) . 7219) (#("i" 0 1 (part-side javascript)) . 7219) (#("s" 0 1 (part-side javascript)) . 7219) (#("s" 0 1 (part-side javascript)) . 7219) (#("e" 0 1 (part-side javascript)) . 7219) (#("r" 0 1 (part-side javascript)) . 7219) (#("p" 0 1 (part-side javascript)) . 7219) (#("x" 0 1 (part-side javascript)) . 7219) (#("E" 0 1 (part-side javascript)) . 7219) (#("p" 0 1 (part-side javascript)) . 7219) (#("e" 0 1 (part-side javascript)) . 7219) (#("s" 0 1 (part-side javascript)) . 7219) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 7219) (#(" " 0 1 (part-side javascript)) . 7219) (#("," 0 1 (part-side javascript)) . 7219)) nil (25579 35724 142250 847000) 0 nil])
([nil nil ((6354 . 6363) (t 25579 35724 186019 735000)) nil (25579 35754 574200 424000) 0 nil])
([nil nil ((6319 . 6325) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 6318) (6318 . 6324) (6318 . 6319)) nil (25579 35762 746099 59000) 0 nil] [nil nil ((6363 . 6372)) ((#("console.l" 0 9 (part-side javascript)) . 6363) (undo-tree-id274 . -4) (undo-tree-id275 . -6) (undo-tree-id276 . -9)) (25579 35754 573589 401000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6338) (6337 . 6338) (6336 . 6338) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6336) (6325 . 6337)) nil (25579 35762 746096 726000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6358 . 6359) (nil part-side javascript 6358 . 6359) (nil face (rainbow-delimiters-depth-5-face) 6358 . 6359) (nil part-side javascript 6357 . 6358) (nil face (rainbow-delimiters-depth-5-face) 6357 . 6358) (nil part-side javascript 6342 . 6357) (nil face web-mode-function-call-face 6342 . 6357) (nil part-side javascript 6341 . 6342) (nil part-side javascript 6337 . 6341) (nil face web-mode-constant-face 6337 . 6341) (6337 . 6359)) nil (25579 35762 746093 833000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript face whitespace-trailing)) . -6397) (undo-tree-id277 . -8) 6359) nil (25579 35762 746086 420000) 0 nil])
([nil nil ((#("this.currentsubfilte" 0 4 (part-side javascript face web-mode-constant-face) 4 20 (part-side javascript)) . 6781) (undo-tree-id278 . -20) (undo-tree-id279 . -20) (undo-tree-id280 . -20) (t 25579 35762 793561 917000)) nil (25579 35835 580578 396000) 0 nil])
([nil nil ((#("r" 0 1 (part-side javascript)) . 6781)) nil (25579 35835 580558 256000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6795 . 6796) (nil part-side javascript 6781 . 6796) (6781 . 6796)) nil (25579 35835 580547 977000) 0 nil])
([nil nil ((#("this.currentsubfilter" 0 4 (part-side javascript face web-mode-constant-face) 4 21 (part-side javascript)) . 7210) (undo-tree-id283 . -21) (undo-tree-id284 . -21) (t 25579 35835 624698 308000)) nil (25579 35868 161230 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7224 . 7225) (nil part-side javascript 7210 . 7225) (7210 . 7225)) nil (25579 35868 161226 127000) 0 nil])
([nil nil ((#("this.currentsubfilter" 0 4 (part-side javascript face web-mode-constant-face) 4 21 (part-side javascript)) . 7665) (undo-tree-id281 . -21) (undo-tree-id282 . -21)) nil (25579 35868 161223 477000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7679 . 7680) (nil part-side javascript 7665 . 7680) (7665 . 7680)) nil (25579 35868 161206 871000) 0 nil])
([nil nil ((6843 . 6854) (t 25579 35868 204311 982000)) nil (25579 35909 270108 46000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6867) (6866 . 6867) (6865 . 6867) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6865) (6854 . 6866)) nil (25579 35909 270106 234000) 0 nil])
([nil nil ((nil part-token string 6867 . 6868) (nil font-lock-face web-mode-javascript-string-face 6867 . 6868) (nil part-side javascript 6867 . 6868) (6866 . 6868) (#("\"" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6866) (6866 . 6867)) nil (25579 35909 270103 741000) 0 nil])
([nil nil ((6867 . 6872)) nil (25579 35909 270101 5000) 0 nil])
([nil nil ((#("I" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6871) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 6872) nil (25579 35909 270094 853000) 0 nil])
([nil nil ((6360 . 6367) (t 25579 35909 319824 497000)) nil (25579 35942 179606 233000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6380) (6379 . 6380) (6378 . 6380) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6378) (6367 . 6379)) nil (25579 35942 179604 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6388 . 6389) (nil part-side javascript 6379 . 6389) (6379 . 6389)) nil (25579 35942 179602 716000) 0 nil])
([nil nil ((6390 . 6397)) nil (25579 35942 179601 124000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6410) (6409 . 6410) (6408 . 6410) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6408) (6397 . 6409)) nil (25579 35942 179598 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6428 . 6429) (nil part-side javascript 6424 . 6429) (nil rear-nonsticky t 6423 . 6424) (nil part-side javascript 6423 . 6424) (nil part-side javascript 6409 . 6423) (6409 . 6429)) nil (25579 35942 179590 287000) 0 nil])
([nil nil ((6430 . 6437) (t 25579 35942 227434 336000)) nil (25579 35995 595188 366000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6450) (undo-tree-id309 . -1) (6449 . 6450) (6448 . 6450) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -6448) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (6437 . 6449)) nil (25579 35995 595185 457000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6599 . 6600) (nil part-side javascript 6599 . 6600) (nil face (rainbow-delimiters-depth-5-face) 6599 . 6600) (nil part-side javascript 6598 . 6599) (nil face (rainbow-delimiters-depth-6-face) 6598 . 6599) (nil part-side javascript 6597 . 6598) (nil part-token string 6597 . 6598) (nil syntax-table (15) 6597 . 6598) (nil font-lock-face web-mode-javascript-string-face 6597 . 6598) (nil part-side javascript 6584 . 6597) (nil part-token string 6584 . 6597) (nil font-lock-face web-mode-javascript-string-face 6584 . 6597) (nil part-side javascript 6583 . 6584) (nil part-token string 6583 . 6584) (nil syntax-table (15) 6583 . 6584) (nil font-lock-face web-mode-javascript-string-face 6583 . 6584) (nil part-side javascript 6581 . 6583) (nil part-side javascript 6580 . 6581) (nil part-token string 6580 . 6581) (nil syntax-table (15) 6580 . 6581) (nil font-lock-face web-mode-javascript-string-face 6580 . 6581) (nil part-side javascript 6566 . 6580) (nil part-token string 6566 . 6580) (nil font-lock-face web-mode-javascript-string-face 6566 . 6580) (nil part-side javascript 6565 . 6566) (nil part-token string 6565 . 6566) (nil syntax-table (15) 6565 . 6566) (nil font-lock-face web-mode-javascript-string-face 6565 . 6566) (nil part-side javascript 6564 . 6565) (nil face (rainbow-delimiters-depth-6-face) 6564 . 6565) (nil part-side javascript 6563 . 6564) (nil part-side javascript 6561 . 6563) (nil face web-mode-keyword-face 6561 . 6563) (nil part-side javascript 6555 . 6561) (nil rear-nonsticky t 6554 . 6555) (nil part-side javascript 6554 . 6555) (nil part-side javascript 6540 . 6554) (nil part-side javascript 6519 . 6540) (nil part-side javascript 6518 . 6519) (nil face (rainbow-delimiters-depth-6-face) 6518 . 6519) (nil part-side javascript 6517 . 6518) (nil part-token string 6517 . 6518) (nil syntax-table (15) 6517 . 6518) (nil font-lock-face web-mode-javascript-string-face 6517 . 6518) (nil part-side javascript 6513 . 6517) (nil part-token string 6513 . 6517) (nil font-lock-face web-mode-javascript-string-face 6513 . 6517) (nil part-side javascript 6512 . 6513) (nil part-token string 6512 . 6513) (nil syntax-table (15) 6512 . 6513) (nil font-lock-face web-mode-javascript-string-face 6512 . 6513) (nil part-side javascript 6510 . 6512) (nil part-side javascript 6509 . 6510) (nil part-token string 6509 . 6510) (nil syntax-table (15) 6509 . 6510) (nil font-lock-face web-mode-javascript-string-face 6509 . 6510) (nil part-side javascript 6506 . 6509) (nil part-token string 6506 . 6509) (nil font-lock-face web-mode-javascript-string-face 6506 . 6509) (nil part-side javascript 6505 . 6506) (nil part-token string 6505 . 6506) (nil syntax-table (15) 6505 . 6506) (nil font-lock-face web-mode-javascript-string-face 6505 . 6506) (nil part-side javascript 6503 . 6505) (nil part-side javascript 6502 . 6503) (nil part-token string 6502 . 6503) (nil syntax-table (15) 6502 . 6503) (nil font-lock-face web-mode-javascript-string-face 6502 . 6503) (nil part-side javascript 6499 . 6502) (nil part-token string 6499 . 6502) (nil font-lock-face web-mode-javascript-string-face 6499 . 6502) (nil part-side javascript 6498 . 6499) (nil part-token string 6498 . 6499) (nil syntax-table (15) 6498 . 6499) (nil font-lock-face web-mode-javascript-string-face 6498 . 6499) (nil part-side javascript 6496 . 6498) (nil part-side javascript 6495 . 6496) (nil part-token string 6495 . 6496) (nil syntax-table (15) 6495 . 6496) (nil font-lock-face web-mode-javascript-string-face 6495 . 6496) (nil part-side javascript 6492 . 6495) (nil part-token string 6492 . 6495) (nil font-lock-face web-mode-javascript-string-face 6492 . 6495) (nil part-side javascript 6491 . 6492) (nil part-token string 6491 . 6492) (nil syntax-table (15) 6491 . 6492) (nil font-lock-face web-mode-javascript-string-face 6491 . 6492) (nil part-side javascript 6489 . 6491) (nil part-side javascript 6488 . 6489) (nil part-token string 6488 . 6489) (nil syntax-table (15) 6488 . 6489) (nil font-lock-face web-mode-javascript-string-face 6488 . 6489) (nil part-side javascript 6483 . 6488) (nil part-token string 6483 . 6488) (nil font-lock-face web-mode-javascript-string-face 6483 . 6488) (nil part-side javascript 6482 . 6483) (nil part-token string 6482 . 6483) (nil syntax-table (15) 6482 . 6483) (nil font-lock-face web-mode-javascript-string-face 6482 . 6483) (nil part-side javascript 6480 . 6482) (nil part-side javascript 6479 . 6480) (nil part-token string 6479 . 6480) (nil syntax-table (15) 6479 . 6480) (nil font-lock-face web-mode-javascript-string-face 6479 . 6480) (nil part-side javascript 6476 . 6479) (nil part-token string 6476 . 6479) (nil font-lock-face web-mode-javascript-string-face 6476 . 6479) (nil part-side javascript 6475 . 6476) (nil part-token string 6475 . 6476) (nil syntax-table (15) 6475 . 6476) (nil font-lock-face web-mode-javascript-string-face 6475 . 6476) (nil part-side javascript 6473 . 6475) (nil part-side javascript 6472 . 6473) (nil part-token string 6472 . 6473) (nil syntax-table (15) 6472 . 6473) (nil font-lock-face web-mode-javascript-string-face 6472 . 6473) (nil part-side javascript 6466 . 6472) (nil part-token string 6466 . 6472) (nil font-lock-face web-mode-javascript-string-face 6466 . 6472) (nil part-side javascript 6465 . 6466) (nil part-token string 6465 . 6466) (nil syntax-table (15) 6465 . 6466) (nil font-lock-face web-mode-javascript-string-face 6465 . 6466) (nil part-side javascript 6464 . 6465) (nil face (rainbow-delimiters-depth-6-face) 6464 . 6465) (nil part-side javascript 6463 . 6464) (nil part-side javascript 6461 . 6463) (nil face web-mode-keyword-face 6461 . 6463) (nil part-side javascript 6450 . 6461) (nil part-side javascript 6449 . 6450) (nil face (rainbow-delimiters-depth-5-face) 6449 . 6450) (6449 . 6600)) nil (25579 35995 595160 142000) 0 nil])
([nil nil ((#(" &&
                 cfilternoparent.type in ['aggrExpression', 'sepExpression']" 0 42 (part-side javascript) 42 44 (part-side javascript face web-mode-keyword-face) 44 45 (part-side javascript) 45 46 (part-side javascript face (rainbow-delimiters-depth-6-face)) 46 47 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 47 61 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 61 62 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 62 64 (part-side javascript) 64 65 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 65 78 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 78 79 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 79 80 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6519) (undo-tree-id312 . -80) (undo-tree-id313 . -4) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -80) (undo-tree-id329 . -80) (t 25579 35995 642801 49000)) nil (25579 36048 394709 419000) 0 nil])
([nil nil ((#("filtertype" 0 10 (part-side javascript)) . 6852) (undo-tree-id331 . -10) (undo-tree-id332 . -10) (undo-tree-id333 . -10) (t 25579 36048 458141 201000)) nil (25579 36114 945434 518000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 6852) (undo-tree-id330 . -1) (#("n" 0 1 (part-side javascript)) . 6852) (#("i" 0 1 (part-side javascript face web-mode-keyword-face)) . 6852) (#(" " 0 1 (part-side javascript)) . 6852)) nil (25579 36114 945428 967000) 0 nil])
([nil nil ((6907 . 6908)) nil (25579 36114 945419 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6917 . 6918) (nil part-side javascript 6908 . 6918) (6908 . 6918)) nil (25579 36114 945418 444000) 0 nil])
([nil nil ((6916 . 6918) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6916) (6908 . 6917)) nil (25579 36114 945416 294000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6917)) nil (25579 36114 945414 31000) 0 nil])
([nil nil ((6927 . 6928)) nil (25579 36114 945412 919000) 0 nil])
([nil nil ((7008 . 7009)) nil (25579 36114 947314 206000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 7019) (7018 . 7019) (7017 . 7019) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7017) (7009 . 7018)) nil (25579 36141 939411 612000) 0 nil] [nil nil ((nil rear-nonsticky nil 7018 . 7019) (nil part-side javascript 7009 . 7019) (7009 . 7019)) ((#("filtertype" 0 9 (part-side javascript) 9 10 (rear-nonsticky nil part-side javascript)) . 7009) (undo-tree-id334 . -10) (nil rear-nonsticky t 7018 . 7019)) (25579 36114 945404 611000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7037 . 7038) (nil part-side javascript 7033 . 7038) (nil rear-nonsticky t 7032 . 7033) (nil part-side javascript 7032 . 7033) (nil part-side javascript 7018 . 7032) (7018 . 7038)) nil (25579 36141 939409 522000) 0 nil])
nil
([nil nil ((#("&
                 cfilternoparent.type in " 0 19 (part-side javascript) 19 33 (part-side javascript) 33 34 (rear-nonsticky t part-side javascript) 34 40 (part-side javascript) 40 42 (part-side javascript face web-mode-keyword-face) 42 43 (part-side javascript)) . 6930) (undo-tree-id335 . -43) (undo-tree-id336 . -2) (undo-tree-id337 . -39) (undo-tree-id338 . -39) (undo-tree-id339 . -43)) nil (25579 36141 939406 379000) 0 nil])
([nil nil ((6930 . 6931)) nil (25579 36141 939393 530000) 0 nil])
([nil nil ((6931 . 6932)) nil (25579 36141 939386 521000) 0 nil])
([nil nil ((7378 . 7379) (t 25579 36141 984947 933000)) nil (25579 36200 499114 214000) 0 nil])
([nil nil ((#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7374) (undo-tree-id346 . -1) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7375) (undo-tree-id347 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7376) (undo-tree-id348 . -1) 7377) nil (25579 36200 499111 923000) 0 nil])
([nil nil ((7374 . 7380)) nil (25579 36200 499106 220000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7379) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) 7380) nil (25579 36200 499100 625000) 0 nil])
([nil nil ((5122 . 5129) (t 25579 36200 548207 158000)) nil (25579 36705 676246 860000) 0 nil])
([nil nil ((5129 . 5148)) nil (25579 36705 676245 726000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -5147) (undo-tree-id378 . -1) 5148) nil (25579 36705 676244 605000) 0 nil])
([nil nil ((5147 . 5149)) nil (25579 36705 676242 408000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -5148) (undo-tree-id377 . -1) 5149) nil (25579 36705 676241 302000) 0 nil])
([nil nil ((#("false" 0 5 (part-side javascript face web-mode-constant-face)) . 5142) (undo-tree-id375 . -5) (undo-tree-id376 . -5)) nil (25579 36705 676238 882000) 0 nil])
([nil nil ((5142 . 5146)) nil (25579 36705 676235 725000) 0 nil])
([nil nil ((10940 . 10947)) nil (25579 36705 676234 884000) 0 nil])
([nil nil ((10947 . 10957)) nil (25579 36705 676234 8000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10956) (undo-tree-id374 . -1) 10957) nil (25579 36705 676232 889000) 0 nil])
([nil nil ((10956 . 10957)) nil (25579 36705 676230 849000) 0 nil])
([nil nil ((10950 . 10952) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10950) (10950 . 10951)) nil (25579 36705 676229 609000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 10951)) nil (25579 36705 676228 56000) 0 nil])
([nil nil ((10959 . 10961) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10959) (10958 . 10960)) nil (25579 36705 676226 888000) 0 nil])
([nil nil ((#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10959) (undo-tree-id373 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 10960)) nil (25579 36705 676225 370000) 0 nil])
([nil nil ((10959 . 10961) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10959) (10959 . 10960)) nil (25579 36705 676223 83000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 10960) (#(" " 0 1 (part-side javascript)) . 10960) (#(" " 0 1 (part-side javascript)) . 10960) (#(" " 0 1 (part-side javascript)) . 10960) (#(" " 0 1 (part-side javascript)) . 10960) (#("
" 0 1 (part-side javascript)) . 10960) (undo-tree-id372 . -1) (#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 10960)) nil (25579 36705 676220 776000) 0 nil])
([nil nil ((11008 . 11010)) nil (25579 36705 676217 390000) 0 nil])
([nil nil ((10473 . 10482)) nil (25579 36705 676216 554000) 0 nil])
([nil nil ((10482 . 10485)) nil (25579 36705 676215 681000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -10483) (undo-tree-id370 . -1) (#("e" 0 1 (part-side javascript)) . -10484) (undo-tree-id371 . -1) 10485) nil (25579 36705 676214 108000) 0 nil])
([nil nil ((10483 . 10487)) nil (25579 36705 676210 681000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10486) (undo-tree-id369 . -1) 10487) nil (25579 36705 676209 593000) 0 nil])
([nil nil ((10486 . 10488) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -10486) (10486 . 10487)) nil (25579 36705 676207 463000) 0 nil])
([nil nil ((10489 . 10497) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 10488) (undo-tree-id367 . -8) (undo-tree-id368 . 10) (10496 . 10498) (10487 . 10497)) nil (25579 36705 676205 775000) 0 nil])
([nil nil ((10488 . 10498)) nil (25579 36705 676201 227000) 0 nil])
([nil nil ((10498 . 10510)) nil (25579 36705 676200 330000) 0 nil])
([nil nil ((#("d" 0 1 (part-side javascript)) . -10508) (undo-tree-id365 . -1) (#("a" 0 1 (part-side javascript)) . -10509) (undo-tree-id366 . -1) 10510) nil (25579 36705 676198 971000) 0 nil])
([nil nil ((10508 . 10513)) nil (25579 36705 676195 475000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10512) (undo-tree-id364 . -1) 10513) nil (25579 36705 676194 340000) 0 nil])
([nil nil ((8723 . 8732)) nil (25579 36705 676191 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8779 . 8780) (nil part-side javascript 8779 . 8780) (nil face (rainbow-delimiters-depth-5-face) 8779 . 8780) (nil part-side javascript 8770 . 8779) (nil part-side javascript 8765 . 8770) (nil face web-mode-constant-face 8765 . 8770) (nil part-side javascript 8764 . 8765) (nil part-side javascript 8762 . 8764) (nil part-side javascript 8746 . 8762) (nil part-side javascript 8745 . 8746) (nil part-side javascript 8744 . 8745) (nil face (rainbow-delimiters-depth-5-face) 8744 . 8745) (nil part-side javascript 8740 . 8744) (nil face web-mode-keyword-face 8740 . 8744) (nil part-side javascript 8732 . 8740) (8732 . 8780)) nil (25579 36705 676189 664000) 0 nil])
([nil nil ((#("        " 0 8 (part-side javascript)) . -8732) 8743) nil (25579 36705 676184 546000) 0 nil])
([nil nil ((#(";" 0 1 (part-side javascript)) . -5146) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) 5147) nil (25579 36705 676178 763000) 0 nil])
([nil nil ((11037 . 11044) (t 25579 36705 729955 65000)) nil (25579 36743 955042 80000) 0 nil])
([nil nil ((11044 . 11049)) nil (25579 36743 955040 766000) 0 nil])
([nil nil ((#("p" 0 1 (part-side javascript)) . -11046) (undo-tree-id379 . -1) (#("n" 0 1 (part-side javascript)) . -11047) (undo-tree-id380 . -1) (#("s" 0 1 (part-side javascript)) . -11048) (undo-tree-id381 . -1) 11049) nil (25579 36743 955038 710000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 11057) (11056 . 11057) (11055 . 11057) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -11055) (11046 . 11056)) nil (25579 36743 955025 929000) 0 nil])
([nil nil ((11056 . 11062)) nil (25579 36743 955018 157000) 0 nil])
([nil nil ((#("
        else{
          update = false
        }" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 13 (part-side javascript face web-mode-keyword-face) 13 14 (part-side javascript face (rainbow-delimiters-depth-5-face)) 14 15 (part-side javascript) 15 31 (part-side javascript) 31 33 (part-side javascript) 33 34 (part-side javascript) 34 39 (part-side javascript face web-mode-constant-face) 39 48 (part-side javascript) 48 49 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 10521) (undo-tree-id399 . -49) (undo-tree-id400 . -1) (undo-tree-id401 . -39) (undo-tree-id402 . -49) (undo-tree-id403 . -49) (undo-tree-id404 . -49) (t 25579 36744 9488 132000)) nil (25579 36844 135949 20000) 0 nil])
([nil nil ((#("if (update) { " 0 2 (part-side javascript face web-mode-keyword-face) 2 3 (part-side javascript) 3 4 (part-side javascript face (rainbow-delimiters-depth-4-face)) 4 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-4-face)) 11 12 (part-side javascript) 12 13 (part-side javascript face (rainbow-delimiters-depth-4-face)) 13 14 (part-side javascript)) . 11021) (undo-tree-id397 . -14) (undo-tree-id398 . -14)) nil (25579 36844 135941 606000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -11068) (undo-tree-id395 . -1) (#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -11069) (undo-tree-id396 . -1) 11070) nil (25579 36844 135938 183000) 0 nil])
([nil nil ((#("        else{
          update = false
        }" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript face (rainbow-delimiters-depth-5-face)) 13 14 (part-side javascript) 14 33 (part-side javascript) 33 38 (part-side javascript face web-mode-constant-face) 38 47 (part-side javascript) 47 48 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face))) . 8723) (undo-tree-id391 . -48) (undo-tree-id392 . -14) (undo-tree-id393 . -8) (undo-tree-id394 . -48)) nil (25579 36844 135934 314000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -8722) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 8723) nil (25579 36844 135927 394000) 0 nil])
([nil nil ((#("
      let update = true" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 17 (part-side javascript face web-mode-variable-name-face) 17 19 (part-side javascript) 19 20 (part-side javascript) 20 24 (part-side javascript face web-mode-constant-face)) . 5122) (undo-tree-id382 . -24) (undo-tree-id383 . -1) (undo-tree-id384 . -20) (undo-tree-id385 . -24) (undo-tree-id386 . -24)) nil (25579 36844 135917 838000) 0 nil])
([nil nil ((#("
      console.log(update)" 0 1 (part-side javascript) 1 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 25 (part-side javascript) 25 26 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 10915) (undo-tree-id405 . -26) (undo-tree-id406 . -25) (undo-tree-id407 . -25) (undo-tree-id408 . -1) (undo-tree-id409 . -26) (undo-tree-id410 . -26) (t 25579 36844 184269 47000)) nil (25579 36856 982993 36000) 0 nil])
([nil nil ((6591 . 6595) (t 25579 36857 32112 972000)) nil (25579 37343 20910 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6616 . 6617) (nil part-side javascript 6616 . 6617) (nil face (rainbow-delimiters-depth-6-face) 6616 . 6617) (nil part-side javascript 6615 . 6616) (nil face (rainbow-delimiters-depth-6-face) 6615 . 6616) (nil part-side javascript 6600 . 6615) (nil face web-mode-function-call-face 6600 . 6615) (nil part-side javascript 6599 . 6600) (nil part-side javascript 6595 . 6599) (nil face web-mode-constant-face 6595 . 6599) (6595 . 6617)) nil (25579 37343 20908 407000) 0 nil])
([nil nil ((#("Object.keys(this.filters[0]).length == 0 || this.filters[0].empty" 0 7 (part-side javascript) 7 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 16 (part-side javascript face web-mode-constant-face) 16 24 (part-side javascript) 24 25 (part-side javascript face (rainbow-delimiters-depth-6-face)) 25 26 (part-side javascript) 26 27 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-6-face)) 27 28 (part-side javascript face (rainbow-delimiters-depth-5-face)) 28 39 (part-side javascript) 39 40 (rear-nonsticky t part-side javascript) 40 44 (part-side javascript) 44 48 (part-side javascript face web-mode-constant-face) 48 56 (part-side javascript) 56 57 (part-side javascript face (rainbow-delimiters-depth-5-face)) 57 58 (part-side javascript) 58 59 (part-side javascript face (rainbow-delimiters-depth-5-face)) 59 65 (part-side javascript)) . 4362) (undo-tree-id437 . -65) (undo-tree-id438 . -65)) nil (25579 37343 20904 347000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4358) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("|" 0 1 (part-side javascript)) . -4359) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (#("|" 0 1 (part-side javascript)) . -4360) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#(" " 0 1 (part-side javascript)) . -4361) (undo-tree-id435 . -1) (undo-tree-id436 . -1) 4362) nil (25579 37343 20895 569000) 0 nil])
([nil nil ((#("        if (filtertype == 'aggr' && this.checkFilterType()) {
          currentfilter['aggr'] = true
          currentfilter['query'] = {empty: true, parent: currentfilter, type: 'aggrExpression'}
          currentfilter['sort'] = {empty: true, parent: currentfilter, type: 'sortExpression'}
        }" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 26 (part-side javascript) 26 27 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 27 31 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 32 36 (part-side javascript) 36 40 (part-side javascript face web-mode-constant-face) 40 41 (part-side javascript) 41 56 (part-side javascript face web-mode-function-call-face) 56 57 (part-side javascript face (rainbow-delimiters-depth-6-face)) 57 58 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-6-face)) 58 59 (part-side javascript face (rainbow-delimiters-depth-5-face)) 59 60 (part-side javascript) 60 61 (part-side javascript face (rainbow-delimiters-depth-5-face)) 61 62 (part-side javascript) 62 85 (part-side javascript) 85 86 (part-side javascript face (rainbow-delimiters-depth-6-face)) 86 87 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 87 91 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 91 92 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 92 93 (part-side javascript face (rainbow-delimiters-depth-6-face)) 93 96 (part-side javascript) 96 100 (part-side javascript face web-mode-constant-face) 100 124 (part-side javascript) 124 125 (part-side javascript face (rainbow-delimiters-depth-6-face)) 125 126 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 126 131 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 131 132 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 132 133 (part-side javascript face (rainbow-delimiters-depth-6-face)) 133 136 (part-side javascript) 136 137 (part-side javascript face (rainbow-delimiters-depth-6-face)) 137 142 (part-side javascript face web-mode-variable-name-face) 142 144 (part-side javascript) 144 148 (part-side javascript face web-mode-constant-face) 148 150 (part-side javascript) 150 156 (part-side javascript face web-mode-variable-name-face) 156 173 (part-side javascript) 173 177 (part-side javascript face web-mode-keyword-face) 177 179 (part-side javascript) 179 180 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 180 194 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 194 195 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 195 196 (part-side javascript face (rainbow-delimiters-depth-6-face)) 196 197 (part-side javascript) 197 220 (part-side javascript) 220 221 (part-side javascript face (rainbow-delimiters-depth-6-face)) 221 222 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 222 226 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 226 227 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 227 228 (part-side javascript face (rainbow-delimiters-depth-6-face)) 228 231 (part-side javascript) 231 232 (part-side javascript face (rainbow-delimiters-depth-6-face)) 232 237 (part-side javascript face web-mode-variable-name-face) 237 239 (part-side javascript) 239 243 (part-side javascript face web-mode-constant-face) 243 245 (part-side javascript) 245 251 (part-side javascript face web-mode-variable-name-face) 251 268 (part-side javascript) 268 272 (part-side javascript face web-mode-keyword-face) 272 274 (part-side javascript) 274 275 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 275 289 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 289 290 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 290 291 (part-side javascript face (rainbow-delimiters-depth-6-face)) 291 300 (part-side javascript) 300 301 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 6490) (undo-tree-id456 . -301) (undo-tree-id457 . -61) (undo-tree-id458 . -62) (undo-tree-id459 . -36) (undo-tree-id460 . -301) (t 25579 37343 66240 704000)) nil (25579 37417 752424 495000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -6488) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("
" 0 1 (part-side javascript)) . -6489) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) 6490) nil (25579 37417 752379 293000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript face web-mode-function-call-face)) . -6497) (undo-tree-id441 . -1) (#("l" 0 1 (part-side javascript face web-mode-function-call-face)) . -6498) (undo-tree-id442 . -1) (#("s" 0 1 (part-side javascript face web-mode-function-call-face)) . -6499) (undo-tree-id443 . -1) (#("e" 0 1 (part-side javascript face web-mode-function-call-face)) . -6500) (undo-tree-id444 . -1) (#(" " 0 1 (part-side javascript)) . -6501) (undo-tree-id445 . -1) 6502) nil (25579 37417 752366 730000) 0 nil])
([nil nil ((6452 . 6459)) nil (25579 37417 752358 870000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6759 . 6760) (nil part-side javascript 6759 . 6760) (nil face (rainbow-delimiters-depth-4-face) 6759 . 6760) (nil part-side javascript 6750 . 6759) (nil part-side javascript 6749 . 6750) (nil face (rainbow-delimiters-depth-5-face) 6749 . 6750) (nil part-side javascript 6748 . 6749) (nil part-token string 6748 . 6749) (nil syntax-table (15) 6748 . 6749) (nil font-lock-face web-mode-javascript-string-face 6748 . 6749) (nil part-side javascript 6734 . 6748) (nil part-token string 6734 . 6748) (nil font-lock-face web-mode-javascript-string-face 6734 . 6748) (nil part-side javascript 6733 . 6734) (nil part-token string 6733 . 6734) (nil syntax-table (15) 6733 . 6734) (nil font-lock-face web-mode-javascript-string-face 6733 . 6734) (nil part-side javascript 6731 . 6733) (nil part-side javascript 6727 . 6731) (nil face web-mode-keyword-face 6727 . 6731) (nil part-side javascript 6710 . 6727) (nil part-side javascript 6704 . 6710) (nil face web-mode-variable-name-face 6704 . 6710) (nil part-side javascript 6702 . 6704) (nil part-side javascript 6698 . 6702) (nil face web-mode-constant-face 6698 . 6702) (nil part-side javascript 6696 . 6698) (nil part-side javascript 6691 . 6696) (nil face web-mode-variable-name-face 6691 . 6696) (nil part-side javascript 6690 . 6691) (nil face (rainbow-delimiters-depth-5-face) 6690 . 6691) (nil part-side javascript 6687 . 6690) (nil part-side javascript 6686 . 6687) (nil face (rainbow-delimiters-depth-5-face) 6686 . 6687) (nil part-side javascript 6685 . 6686) (nil part-token string 6685 . 6686) (nil syntax-table (15) 6685 . 6686) (nil font-lock-face web-mode-javascript-string-face 6685 . 6686) (nil part-side javascript 6681 . 6685) (nil part-token string 6681 . 6685) (nil font-lock-face web-mode-javascript-string-face 6681 . 6685) (nil part-side javascript 6680 . 6681) (nil part-token string 6680 . 6681) (nil syntax-table (15) 6680 . 6681) (nil font-lock-face web-mode-javascript-string-face 6680 . 6681) (nil part-side javascript 6679 . 6680) (nil face (rainbow-delimiters-depth-5-face) 6679 . 6680) (nil part-side javascript 6656 . 6679) (nil part-side javascript 6655 . 6656) (nil part-side javascript 6654 . 6655) (nil face (rainbow-delimiters-depth-5-face) 6654 . 6655) (nil part-side javascript 6653 . 6654) (nil part-token string 6653 . 6654) (nil syntax-table (15) 6653 . 6654) (nil font-lock-face web-mode-javascript-string-face 6653 . 6654) (nil part-side javascript 6639 . 6653) (nil part-token string 6639 . 6653) (nil font-lock-face web-mode-javascript-string-face 6639 . 6653) (nil part-side javascript 6638 . 6639) (nil part-token string 6638 . 6639) (nil syntax-table (15) 6638 . 6639) (nil font-lock-face web-mode-javascript-string-face 6638 . 6639) (nil part-side javascript 6636 . 6638) (nil part-side javascript 6632 . 6636) (nil face web-mode-keyword-face 6632 . 6636) (nil part-side javascript 6615 . 6632) (nil part-side javascript 6609 . 6615) (nil face web-mode-variable-name-face 6609 . 6615) (nil part-side javascript 6607 . 6609) (nil part-side javascript 6603 . 6607) (nil face web-mode-constant-face 6603 . 6607) (nil part-side javascript 6601 . 6603) (nil part-side javascript 6596 . 6601) (nil face web-mode-variable-name-face 6596 . 6601) (nil part-side javascript 6595 . 6596) (nil face (rainbow-delimiters-depth-5-face) 6595 . 6596) (nil part-side javascript 6592 . 6595) (nil part-side javascript 6591 . 6592) (nil face (rainbow-delimiters-depth-5-face) 6591 . 6592) (nil part-side javascript 6590 . 6591) (nil part-token string 6590 . 6591) (nil syntax-table (15) 6590 . 6591) (nil font-lock-face web-mode-javascript-string-face 6590 . 6591) (nil part-side javascript 6585 . 6590) (nil part-token string 6585 . 6590) (nil font-lock-face web-mode-javascript-string-face 6585 . 6590) (nil part-side javascript 6584 . 6585) (nil part-token string 6584 . 6585) (nil syntax-table (15) 6584 . 6585) (nil font-lock-face web-mode-javascript-string-face 6584 . 6585) (nil part-side javascript 6583 . 6584) (nil face (rainbow-delimiters-depth-5-face) 6583 . 6584) (nil part-side javascript 6559 . 6583) (nil part-side javascript 6555 . 6559) (nil face web-mode-constant-face 6555 . 6559) (nil part-side javascript 6552 . 6555) (nil part-side javascript 6551 . 6552) (nil face (rainbow-delimiters-depth-5-face) 6551 . 6552) (nil part-side javascript 6550 . 6551) (nil part-token string 6550 . 6551) (nil syntax-table (15) 6550 . 6551) (nil font-lock-face web-mode-javascript-string-face 6550 . 6551) (nil part-side javascript 6546 . 6550) (nil part-token string 6546 . 6550) (nil font-lock-face web-mode-javascript-string-face 6546 . 6550) (nil part-side javascript 6545 . 6546) (nil part-token string 6545 . 6546) (nil syntax-table (15) 6545 . 6546) (nil font-lock-face web-mode-javascript-string-face 6545 . 6546) (nil part-side javascript 6544 . 6545) (nil face (rainbow-delimiters-depth-5-face) 6544 . 6545) (nil part-side javascript 6521 . 6544) (nil part-side javascript 6520 . 6521) (nil part-side javascript 6519 . 6520) (nil face (rainbow-delimiters-depth-4-face) 6519 . 6520) (nil part-side javascript 6518 . 6519) (nil part-side javascript 6517 . 6518) (nil face (rainbow-delimiters-depth-4-face) 6517 . 6518) (nil rear-nonsticky t 6516 . 6517) (nil part-side javascript 6516 . 6517) (nil face (rainbow-delimiters-depth-5-face) 6516 . 6517) (nil part-side javascript 6515 . 6516) (nil face (rainbow-delimiters-depth-5-face) 6515 . 6516) (nil part-side javascript 6500 . 6515) (nil face web-mode-function-call-face 6500 . 6515) (nil part-side javascript 6499 . 6500) (nil part-side javascript 6495 . 6499) (nil face web-mode-constant-face 6495 . 6499) (nil part-side javascript 6491 . 6495) (nil part-side javascript 6490 . 6491) (nil part-token string 6490 . 6491) (nil syntax-table (15) 6490 . 6491) (nil font-lock-face web-mode-javascript-string-face 6490 . 6491) (nil part-side javascript 6486 . 6490) (nil part-token string 6486 . 6490) (nil font-lock-face web-mode-javascript-string-face 6486 . 6490) (nil part-side javascript 6485 . 6486) (nil part-token string 6485 . 6486) (nil syntax-table (15) 6485 . 6486) (nil font-lock-face web-mode-javascript-string-face 6485 . 6486) (nil part-side javascript 6471 . 6485) (nil part-side javascript 6470 . 6471) (nil face (rainbow-delimiters-depth-4-face) 6470 . 6471) (nil part-side javascript 6469 . 6470) (nil part-side javascript 6467 . 6469) (nil face web-mode-keyword-face 6467 . 6469) (nil part-side javascript 6459 . 6467) (6459 . 6760)) nil (25579 37417 752350 741000) 0 nil])
([nil nil ((#("  " 0 2 (part-side javascript)) . -6743) (#("  " 0 2 (part-side javascript)) . -6652) (#("  " 0 2 (part-side javascript)) . -6558) (#("  " 0 2 (part-side javascript)) . -6521) (#("        " 0 8 (part-side javascript)) . -6459) 6453) nil (25579 37417 752319 529000) 0 nil])
([nil nil ((6751 . 6756)) nil (25579 37417 752317 355000) 0 nil])
([nil nil ((#(" this.checkFilterType()" 0 1 (part-side javascript) 1 5 (part-side javascript face web-mode-constant-face) 5 6 (part-side javascript) 6 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-5-face)) 22 23 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 6486) (undo-tree-id439 . -23) (undo-tree-id440 . -23)) nil (25579 37417 802473 428000) 0 nil])
([nil nil ((6486 . 6491)) nil (25579 37486 386090 664000) 0 nil] [nil nil ((nil rear-nonsticky nil 6786 . 6787) (nil part-side javascript 6786 . 6787) (nil face (rainbow-delimiters-depth-5-face) 6786 . 6787) (nil part-side javascript 6777 . 6786) (nil part-side javascript 6776 . 6777) (nil face (rainbow-delimiters-depth-6-face) 6776 . 6777) (nil part-side javascript 6775 . 6776) (nil part-token string 6775 . 6776) (nil syntax-table (15) 6775 . 6776) (nil font-lock-face web-mode-javascript-string-face 6775 . 6776) (nil part-side javascript 6761 . 6775) (nil part-token string 6761 . 6775) (nil font-lock-face web-mode-javascript-string-face 6761 . 6775) (nil part-side javascript 6760 . 6761) (nil part-token string 6760 . 6761) (nil syntax-table (15) 6760 . 6761) (nil font-lock-face web-mode-javascript-string-face 6760 . 6761) (nil part-side javascript 6758 . 6760) (nil part-side javascript 6754 . 6758) (nil face web-mode-keyword-face 6754 . 6758) (nil part-side javascript 6737 . 6754) (nil part-side javascript 6731 . 6737) (nil face web-mode-variable-name-face 6731 . 6737) (nil part-side javascript 6729 . 6731) (nil part-side javascript 6725 . 6729) (nil face web-mode-constant-face 6725 . 6729) (nil part-side javascript 6723 . 6725) (nil part-side javascript 6718 . 6723) (nil face web-mode-variable-name-face 6718 . 6723) (nil part-side javascript 6717 . 6718) (nil face (rainbow-delimiters-depth-6-face) 6717 . 6718) (nil part-side javascript 6714 . 6717) (nil part-side javascript 6713 . 6714) (nil face (rainbow-delimiters-depth-6-face) 6713 . 6714) (nil part-side javascript 6712 . 6713) (nil part-token string 6712 . 6713) (nil syntax-table (15) 6712 . 6713) (nil font-lock-face web-mode-javascript-string-face 6712 . 6713) (nil part-side javascript 6708 . 6712) (nil part-token string 6708 . 6712) (nil font-lock-face web-mode-javascript-string-face 6708 . 6712) (nil part-side javascript 6707 . 6708) (nil part-token string 6707 . 6708) (nil syntax-table (15) 6707 . 6708) (nil font-lock-face web-mode-javascript-string-face 6707 . 6708) (nil part-side javascript 6706 . 6707) (nil face (rainbow-delimiters-depth-6-face) 6706 . 6707) (nil part-side javascript 6683 . 6706) (nil part-side javascript 6682 . 6683) (nil part-side javascript 6681 . 6682) (nil face (rainbow-delimiters-depth-6-face) 6681 . 6682) (nil part-side javascript 6680 . 6681) (nil part-token string 6680 . 6681) (nil syntax-table (15) 6680 . 6681) (nil font-lock-face web-mode-javascript-string-face 6680 . 6681) (nil part-side javascript 6666 . 6680) (nil part-token string 6666 . 6680) (nil font-lock-face web-mode-javascript-string-face 6666 . 6680) (nil part-side javascript 6665 . 6666) (nil part-token string 6665 . 6666) (nil syntax-table (15) 6665 . 6666) (nil font-lock-face web-mode-javascript-string-face 6665 . 6666) (nil part-side javascript 6663 . 6665) (nil part-side javascript 6659 . 6663) (nil face web-mode-keyword-face 6659 . 6663) (nil part-side javascript 6642 . 6659) (nil part-side javascript 6636 . 6642) (nil face web-mode-variable-name-face 6636 . 6642) (nil part-side javascript 6634 . 6636) (nil part-side javascript 6630 . 6634) (nil face web-mode-constant-face 6630 . 6634) (nil part-side javascript 6628 . 6630) (nil part-side javascript 6623 . 6628) (nil face web-mode-variable-name-face 6623 . 6628) (nil part-side javascript 6622 . 6623) (nil face (rainbow-delimiters-depth-6-face) 6622 . 6623) (nil part-side javascript 6619 . 6622) (nil part-side javascript 6618 . 6619) (nil face (rainbow-delimiters-depth-6-face) 6618 . 6619) (nil part-side javascript 6617 . 6618) (nil part-token string 6617 . 6618) (nil syntax-table (15) 6617 . 6618) (nil font-lock-face web-mode-javascript-string-face 6617 . 6618) (nil part-side javascript 6612 . 6617) (nil part-token string 6612 . 6617) (nil font-lock-face web-mode-javascript-string-face 6612 . 6617) (nil part-side javascript 6611 . 6612) (nil part-token string 6611 . 6612) (nil syntax-table (15) 6611 . 6612) (nil font-lock-face web-mode-javascript-string-face 6611 . 6612) (nil part-side javascript 6610 . 6611) (nil face (rainbow-delimiters-depth-6-face) 6610 . 6611) (nil part-side javascript 6586 . 6610) (nil part-side javascript 6582 . 6586) (nil face web-mode-constant-face 6582 . 6586) (nil part-side javascript 6579 . 6582) (nil part-side javascript 6578 . 6579) (nil face (rainbow-delimiters-depth-6-face) 6578 . 6579) (nil part-side javascript 6577 . 6578) (nil part-token string 6577 . 6578) (nil syntax-table (15) 6577 . 6578) (nil font-lock-face web-mode-javascript-string-face 6577 . 6578) (nil part-side javascript 6573 . 6577) (nil part-token string 6573 . 6577) (nil font-lock-face web-mode-javascript-string-face 6573 . 6577) (nil part-side javascript 6572 . 6573) (nil part-token string 6572 . 6573) (nil syntax-table (15) 6572 . 6573) (nil font-lock-face web-mode-javascript-string-face 6572 . 6573) (nil part-side javascript 6571 . 6572) (nil face (rainbow-delimiters-depth-6-face) 6571 . 6572) (nil part-side javascript 6548 . 6571) (nil part-side javascript 6547 . 6548) (nil part-side javascript 6546 . 6547) (nil face (rainbow-delimiters-depth-5-face) 6546 . 6547) (nil part-side javascript 6545 . 6546) (nil part-side javascript 6544 . 6545) (nil face (rainbow-delimiters-depth-5-face) 6544 . 6545) (nil rear-nonsticky t 6543 . 6544) (nil part-side javascript 6543 . 6544) (nil face (rainbow-delimiters-depth-6-face) 6543 . 6544) (nil part-side javascript 6542 . 6543) (nil face (rainbow-delimiters-depth-6-face) 6542 . 6543) (nil part-side javascript 6527 . 6542) (nil face web-mode-function-call-face 6527 . 6542) (nil part-side javascript 6526 . 6527) (nil part-side javascript 6522 . 6526) (nil face web-mode-constant-face 6522 . 6526) (nil part-side javascript 6518 . 6522) (nil part-side javascript 6517 . 6518) (nil part-token string 6517 . 6518) (nil syntax-table (15) 6517 . 6518) (nil font-lock-face web-mode-javascript-string-face 6517 . 6518) (nil part-side javascript 6513 . 6517) (nil part-token string 6513 . 6517) (nil font-lock-face web-mode-javascript-string-face 6513 . 6517) (nil part-side javascript 6512 . 6513) (nil part-token string 6512 . 6513) (nil syntax-table (15) 6512 . 6513) (nil font-lock-face web-mode-javascript-string-face 6512 . 6513) (nil part-side javascript 6498 . 6512) (nil part-side javascript 6497 . 6498) (nil face (rainbow-delimiters-depth-5-face) 6497 . 6498) (nil part-side javascript 6496 . 6497) (nil part-side javascript 6494 . 6496) (nil face web-mode-keyword-face 6494 . 6496) (nil part-side javascript 6486 . 6494) (6486 . 6787)) ((#("        if (filtertype == 'aggr' && this.checkFilterType()) {
          currentfilter['aggr'] = true
          currentfilter['query'] = {empty: true, parent: currentfilter, type: 'aggrExpression'}
          currentfilter['sort'] = {empty: true, parent: currentfilter, type: 'sortExpression'}
        }" 0 8 (part-side javascript) 8 10 (part-side javascript face web-mode-keyword-face) 10 11 (part-side javascript) 11 12 (part-side javascript face (rainbow-delimiters-depth-5-face)) 12 26 (part-side javascript) 26 27 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 27 31 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 31 32 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 32 36 (part-side javascript) 36 40 (part-side javascript face web-mode-constant-face) 40 41 (part-side javascript) 41 56 (part-side javascript face web-mode-function-call-face) 56 57 (part-side javascript face (rainbow-delimiters-depth-6-face)) 57 58 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-6-face)) 58 59 (part-side javascript face (rainbow-delimiters-depth-5-face)) 59 60 (part-side javascript) 60 61 (part-side javascript face (rainbow-delimiters-depth-5-face)) 61 62 (part-side javascript) 62 85 (part-side javascript) 85 86 (part-side javascript face (rainbow-delimiters-depth-6-face)) 86 87 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 87 91 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 91 92 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 92 93 (part-side javascript face (rainbow-delimiters-depth-6-face)) 93 96 (part-side javascript) 96 100 (part-side javascript face web-mode-constant-face) 100 124 (part-side javascript) 124 125 (part-side javascript face (rainbow-delimiters-depth-6-face)) 125 126 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 126 131 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 131 132 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 132 133 (part-side javascript face (rainbow-delimiters-depth-6-face)) 133 136 (part-side javascript) 136 137 (part-side javascript face (rainbow-delimiters-depth-6-face)) 137 142 (part-side javascript face web-mode-variable-name-face) 142 144 (part-side javascript) 144 148 (part-side javascript face web-mode-constant-face) 148 150 (part-side javascript) 150 156 (part-side javascript face web-mode-variable-name-face) 156 173 (part-side javascript) 173 177 (part-side javascript face web-mode-keyword-face) 177 179 (part-side javascript) 179 180 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 180 194 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 194 195 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 195 196 (part-side javascript face (rainbow-delimiters-depth-6-face)) 196 197 (part-side javascript) 197 220 (part-side javascript) 220 221 (part-side javascript face (rainbow-delimiters-depth-6-face)) 221 222 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 222 226 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 226 227 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 227 228 (part-side javascript face (rainbow-delimiters-depth-6-face)) 228 231 (part-side javascript) 231 232 (part-side javascript face (rainbow-delimiters-depth-6-face)) 232 237 (part-side javascript face web-mode-variable-name-face) 237 239 (part-side javascript) 239 243 (part-side javascript face web-mode-constant-face) 243 245 (part-side javascript) 245 251 (part-side javascript face web-mode-variable-name-face) 251 268 (part-side javascript) 268 272 (part-side javascript face web-mode-keyword-face) 272 274 (part-side javascript) 274 275 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 275 289 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 289 290 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 290 291 (part-side javascript face (rainbow-delimiters-depth-6-face)) 291 292 (part-side javascript) 292 300 (part-side javascript) 300 301 (rear-nonsticky nil part-side javascript face (rainbow-delimiters-depth-5-face))) . 6486) (undo-tree-id461 . -301) (undo-tree-id462 . -292) (nil face (rainbow-delimiters-depth-5-face) 6497 . 6498) (nil syntax-table (15) 6512 . 6513) (nil syntax-table (15) 6517 . 6518) (nil face (rainbow-delimiters-depth-6-face) 6542 . 6543) (nil face (rainbow-delimiters-depth-6-face) 6543 . 6544) (nil rear-nonsticky nil 6543 . 6544) (nil face (rainbow-delimiters-depth-5-face) 6544 . 6545) (nil face (rainbow-delimiters-depth-5-face) 6546 . 6547) (nil face (rainbow-delimiters-depth-6-face) 6571 . 6572) (nil syntax-table (15) 6572 . 6573) (nil syntax-table (15) 6577 . 6578) (nil face (rainbow-delimiters-depth-6-face) 6578 . 6579) (nil face (rainbow-delimiters-depth-6-face) 6610 . 6611) (nil syntax-table (15) 6611 . 6612) (nil syntax-table (15) 6617 . 6618) (nil face (rainbow-delimiters-depth-6-face) 6618 . 6619) (nil face (rainbow-delimiters-depth-6-face) 6622 . 6623) (nil syntax-table (15) 6665 . 6666) (nil syntax-table (15) 6680 . 6681) (nil face (rainbow-delimiters-depth-6-face) 6681 . 6682) (nil face (rainbow-delimiters-depth-6-face) 6706 . 6707) (nil syntax-table (15) 6707 . 6708) (nil syntax-table (15) 6712 . 6713) (nil face (rainbow-delimiters-depth-6-face) 6713 . 6714) (nil face (rainbow-delimiters-depth-6-face) 6717 . 6718) (nil syntax-table (15) 6760 . 6761) (nil syntax-table (15) 6775 . 6776) (nil face (rainbow-delimiters-depth-6-face) 6776 . 6777) (nil face (rainbow-delimiters-depth-5-face) 6786 . 6787) (nil rear-nonsticky t 6786 . 6787)) (25579 37417 752291 630000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -6490) (undo-tree-id469 . -1) 6491) nil (25579 37486 386089 520000) 0 nil])
nil
([nil nil ((6500 . 6501) (6499 . 6501) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6499) (6490 . 6500)) nil (25579 37486 386086 851000) 0 nil])
([nil nil ((6502 . 6503)) nil (25579 37486 386085 339000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6502) (undo-tree-id468 . -1) 6503) nil (25579 37486 386083 655000) 0 nil])
([nil nil ((6502 . 6523)) nil (25579 37486 386080 923000) 0 nil])
([nil nil ((6525 . 6526) (6524 . 6526) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6524) (6523 . 6525)) nil (25579 37486 386079 438000) 0 nil])
([nil nil ((#("this.filters[0]" 0 4 (part-side javascript face web-mode-constant-face) 4 12 (part-side javascript) 12 13 (part-side javascript face (rainbow-delimiters-depth-5-face)) 13 14 (part-side javascript) 14 15 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 6512) (undo-tree-id465 . -15) (undo-tree-id466 . -15) (undo-tree-id467 . -15)) nil (25579 37486 386077 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6551 . 6552) (nil part-side javascript 6540 . 6552) (nil part-side javascript 6539 . 6540) (nil face (rainbow-delimiters-depth-5-face) 6539 . 6540) (nil part-side javascript 6524 . 6539) (nil part-side javascript 6523 . 6524) (nil face (rainbow-delimiters-depth-5-face) 6523 . 6524) (nil part-side javascript 6519 . 6523) (nil face web-mode-function-call-face 6519 . 6523) (nil part-side javascript 6512 . 6519) (6512 . 6552)) nil (25579 37486 386072 476000) 0 nil])
([nil nil ((#("cfilternoparent" 0 15 (part-side javascript)) . 6524) (undo-tree-id463 . -15) (undo-tree-id464 . -15)) nil (25579 37486 386067 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6538 . 6539) (nil part-side javascript 6538 . 6539) (nil face (rainbow-delimiters-depth-6-face) 6538 . 6539) (nil part-side javascript 6537 . 6538) (nil part-side javascript 6536 . 6537) (nil face (rainbow-delimiters-depth-6-face) 6536 . 6537) (nil part-side javascript 6528 . 6536) (nil part-side javascript 6524 . 6528) (nil face web-mode-constant-face 6524 . 6528) (6524 . 6539)) nil (25579 37486 386052 465000) 0 nil])
([nil nil ((6487 . 6489) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -6487) (6487 . 6488) (t 25579 37486 432516 392000)) nil (25579 37536 461621 489000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 6488)) nil (25579 37536 461618 336000) 0 nil])
([nil nil ((6554 . 6555)) nil (25579 37536 461611 256000) 0 nil])
([nil nil ((5217 . 5224) (t 25579 37536 515914 552000)) nil (25579 38964 437994 605000) 0 nil])
([nil nil ((5224 . 5232)) nil (25579 38964 437993 564000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5230) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#("u" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5231) (undo-tree-id501 . -1) (undo-tree-id502 . -1) 5232) nil (25579 38964 437992 6000) 0 nil])
([nil nil ((5230 . 5234)) nil (25579 38964 437986 671000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5233) (undo-tree-id498 . -1) 5234) nil (25579 38964 437985 542000) 0 nil])
([nil nil ((5233 . 5238)) nil (25579 38964 437983 412000) 0 nil])
([nil nil ((5238 . 5245)) nil (25579 38964 437982 498000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5230) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("u" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5231) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("r" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5232) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("r" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5233) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("e" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5234) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (#("n" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5235) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5236) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("_" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5237) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("f" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5238) (undo-tree-id491 . -1) (#("i" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5239) (undo-tree-id492 . -1) (#("l" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5240) (undo-tree-id493 . -1) (#("t" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5241) (undo-tree-id494 . -1) (#("e" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5242) (undo-tree-id495 . -1) (#("r" 0 1 (part-side javascript face web-mode-variable-name-face)) . -5243) (undo-tree-id496 . -1) (#(" " 0 1 (part-side javascript)) . -5244) (undo-tree-id497 . -1) 5245) nil (25579 38964 437977 955000) 0 nil])
([nil nil ((5230 . 5240)) nil (25579 38964 437921 304000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5262 . 5263) (nil part-side javascript 5262 . 5263) (nil face (rainbow-delimiters-depth-4-face) 5262 . 5263) (nil part-side javascript 5256 . 5262) (nil part-side javascript 5255 . 5256) (nil face (rainbow-delimiters-depth-4-face) 5255 . 5256) (nil part-side javascript 5240 . 5255) (nil face web-mode-function-call-face 5240 . 5255) (5240 . 5263)) nil (25579 38964 437919 893000) 0 nil])
([nil nil ((#("filter" 0 6 (part-side javascript)) . 5256) (undo-tree-id471 . -6) (undo-tree-id472 . -6)) nil (25579 38964 437917 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5277 . 5278) (nil part-side javascript 5261 . 5278) (nil part-side javascript 5257 . 5261) (nil face web-mode-constant-face 5257 . 5261) (nil part-side javascript 5256 . 5257) (5256 . 5278)) nil (25579 38964 437913 330000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -5256) (undo-tree-id470 . -1) 5257) nil (25579 38964 437910 469000) 0 nil])
([nil nil ((10948 . 10950)) nil (25579 38964 437900 956000) 0 nil])
([nil nil ((10976 . 10978)) nil (25579 38964 437899 265000) 0 nil])
([nil nil ((11067 . 11069)) nil (25579 38964 437892 490000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -10948) (undo-tree-id503 . -1) (#("/" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -10949) (undo-tree-id504 . -1) 10950 (t 25579 38964 491286 342000)) nil (25579 38986 658904 102000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . 11065) (#("/" 0 1 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face)) . 11065)) nil (25579 38986 658888 190000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . 10974) (#("/" 0 1 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face)) . 10974) (t 25579 38986 707026 833000)) nil (25579 39433 893810 3000) 0 nil])
([nil nil ((#("
      const cf_copy = structuredClone(this.currentsubfilter)" 0 1 (part-side javascript) 1 7 (part-side javascript) 7 12 (part-side javascript face web-mode-keyword-face) 12 13 (part-side javascript) 13 20 (part-side javascript face web-mode-variable-name-face) 20 22 (part-side javascript) 22 23 (part-side javascript) 23 38 (part-side javascript face web-mode-function-call-face) 38 39 (part-side javascript face (rainbow-delimiters-depth-4-face)) 39 43 (part-side javascript face web-mode-constant-face) 43 59 (part-side javascript) 59 60 (rear-nonsticky t part-side javascript) 60 61 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-4-face))) . 5217) (undo-tree-id508 . -61) (undo-tree-id509 . -13) (undo-tree-id510 . -15) (undo-tree-id511 . -1) (undo-tree-id512 . -23) (undo-tree-id513 . -39) (undo-tree-id514 . -39) (undo-tree-id515 . -20) (undo-tree-id516 . -20) (undo-tree-id517 . -20) (undo-tree-id518 . -61)) nil (25579 39433 893808 0) 0 nil])
([nil nil ((#("
        /* else if (filtertype == 'subcountmin' || filtertype == 'subcountmax') {
         *   delete currentfilter.rules
         *   currentfilter['condition'] = filtertype
         *   currentfilter['active'] = 'true'
         *   currentfilter['subtype'] = 'dns.log'
         *   currentfilter['subcount'] = '2'
         *   currentfilter['matchfield'] = 'uid'
         *   currentfilter['submatchfield'] = 'uid'
         * } */" 0 1 (part-side javascript) 1 9 (part-side javascript) 9 10 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 10 12 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 12 16 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 16 17 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 17 19 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 19 96 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 96 102 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 102 216 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 216 220 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 220 433 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 10439) (undo-tree-id505 . -433) (undo-tree-id506 . -1) (undo-tree-id507 . -433)) nil (25579 39433 893795 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8592 . 8593) (nil part-side javascript 8592 . 8593) (nil part-token string 8592 . 8593) (nil syntax-table (15) 8592 . 8593) (nil font-lock-face web-mode-javascript-string-face 8592 . 8593) (nil part-side javascript 8578 . 8592) (nil part-token string 8578 . 8592) (nil font-lock-face web-mode-javascript-string-face 8578 . 8592) (nil part-side javascript 8577 . 8578) (nil part-token string 8577 . 8578) (nil syntax-table (15) 8577 . 8578) (nil font-lock-face web-mode-javascript-string-face 8577 . 8578) (nil part-side javascript 8575 . 8577) (nil part-side javascript 8571 . 8575) (nil face web-mode-keyword-face 8571 . 8575) (8571 . 8593)) nil (25579 39433 893782 210000) 0 nil])
([nil nil ((8593 . 8595)) nil (25579 39433 893772 386000) 0 nil])
([nil nil ((4366 . 4371) (t 25579 39433 937781 545000)) nil (25579 39718 619634 830000) 0 nil])
([nil nil ((4371 . 4376)) nil (25579 39718 619632 467000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -4371) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("l" 0 1 (part-side javascript)) . -4372) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#("e" 0 1 (part-side javascript)) . -4373) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("a" 0 1 (part-side javascript)) . -4374) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#("r" 0 1 (part-side javascript)) . -4375) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 4376) nil (25579 39718 619627 428000) 0 nil])
([nil nil ((4371 . 4380)) nil (25579 39718 619599 565000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -4371) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("i" 0 1 (part-side javascript)) . -4372) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#("l" 0 1 (part-side javascript)) . -4373) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#("t" 0 1 (part-side javascript)) . -4374) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("e" 0 1 (part-side javascript)) . -4375) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("r" 0 1 (part-side javascript)) . -4376) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("_" 0 1 (part-side javascript)) . -4377) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("c" 0 1 (part-side javascript)) . -4378) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("l" 0 1 (part-side javascript)) . -4379) (undo-tree-id580 . -1) 4380) nil (25579 39718 619596 68000) 0 nil])
([nil nil ((4371 . 4387)) nil (25579 39718 619567 362000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -4386) (undo-tree-id555 . -1) 4387) nil (25579 39718 619566 253000) 0 nil])
([nil nil ((4386 . 4388) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -4386) (4386 . 4387)) nil (25579 39718 619563 907000) 0 nil])
([nil nil ((4389 . 4391) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -4389) (4388 . 4390)) nil (25579 39718 619562 343000) 0 nil])
([nil nil ((4393 . 4397) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 4392) (undo-tree-id551 . -4) (undo-tree-id552 . 6) (4396 . 4398) (4392 . 4397) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 4391) (undo-tree-id553 . -4) (undo-tree-id554 . 6) (4395 . 4397) (4390 . 4396)) nil (25579 39718 619560 356000) 0 nil])
([nil nil ((4387 . 4393)) nil (25579 39718 619554 238000) 0 nil])
([nil nil ((#("      delete currentfilter.condition // type of filter (string)
      delete currentfilter.field // string field used in comparison filters (string)
      delete currentfilter.operator // operator used in comparison filters (string)
      delete currentfilter.value // value used in comparison filters (string or numeric)
      delete currentfilter.rule // child obj ref if filter type only has one (Object)
      delete currentfilter.rules // list of two children if AND or OR filter ([Object, Object])
      delete currentfilter.aggr // whether filter is an aggregation filter (bool)
      delete currentfilter.query // aggregation query (object)
      delete currentfilter.sort // aggregation sort query (object)
      delete currentfilter.asc // whether aggregation sort is asc or desc (bool)
      delete currentfilter.type // type of filter
      delete currentfilter.subtype
      delete currentfilter.subcount
      delete currentfilter.matchfield
      delete currentfilter.submatchfield
      delete currentfilter.empty" 0 6 (part-side javascript) 6 12 (part-side javascript face web-mode-keyword-face) 12 37 (part-side javascript) 37 38 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 38 40 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 40 44 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 44 45 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 45 47 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 47 48 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 48 54 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 54 63 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 63 64 (part-side javascript syntax-table (12)) 64 70 (part-side javascript) 70 76 (part-side javascript face web-mode-keyword-face) 76 97 (part-side javascript) 97 98 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 98 118 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 118 120 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 120 132 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 132 139 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 139 148 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 148 149 (part-side javascript syntax-table (12)) 149 155 (part-side javascript) 155 161 (part-side javascript face web-mode-keyword-face) 161 185 (part-side javascript) 185 186 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 186 202 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 202 204 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 204 216 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 216 223 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 223 232 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 232 233 (part-side javascript syntax-table (12)) 233 239 (part-side javascript) 239 245 (part-side javascript face web-mode-keyword-face) 245 266 (part-side javascript) 266 267 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 267 280 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 280 282 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 282 294 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 294 301 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 301 321 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 321 322 (part-side javascript syntax-table (12)) 322 328 (part-side javascript) 328 334 (part-side javascript face web-mode-keyword-face) 334 354 (part-side javascript) 354 355 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 355 371 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 371 373 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 373 381 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 381 385 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 385 395 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 395 398 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 398 407 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 407 408 (part-side javascript syntax-table (12)) 408 414 (part-side javascript) 414 420 (part-side javascript face web-mode-keyword-face) 420 441 (part-side javascript) 441 442 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 442 449 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 449 451 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 451 465 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 465 467 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 467 478 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 478 484 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 484 503 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 503 504 (part-side javascript syntax-table (12)) 504 510 (part-side javascript) 510 516 (part-side javascript face web-mode-keyword-face) 516 536 (part-side javascript) 536 537 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 537 572 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 572 578 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 578 585 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 585 586 (part-side javascript syntax-table (12)) 586 592 (part-side javascript) 592 598 (part-side javascript face web-mode-keyword-face) 598 619 (part-side javascript) 619 620 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 620 634 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 634 639 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 639 648 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 648 649 (part-side javascript syntax-table (12)) 649 655 (part-side javascript) 655 661 (part-side javascript face web-mode-keyword-face) 661 681 (part-side javascript) 681 682 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 682 701 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 701 706 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 706 715 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 715 716 (part-side javascript syntax-table (12)) 716 722 (part-side javascript) 722 728 (part-side javascript face web-mode-keyword-face) 728 747 (part-side javascript) 747 748 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 748 785 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 785 789 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 789 796 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 796 797 (part-side javascript syntax-table (12)) 797 803 (part-side javascript) 803 809 (part-side javascript face web-mode-keyword-face) 809 829 (part-side javascript) 829 830 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 830 832 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 832 836 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 836 837 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 837 839 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 839 846 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 846 847 (part-side javascript syntax-table (12)) 847 853 (part-side javascript) 853 859 (part-side javascript face web-mode-keyword-face) 859 888 (part-side javascript) 888 894 (part-side javascript face web-mode-keyword-face) 894 924 (part-side javascript) 924 930 (part-side javascript face web-mode-keyword-face) 930 962 (part-side javascript) 962 968 (part-side javascript face web-mode-keyword-face) 968 1003 (part-side javascript) 1003 1009 (part-side javascript face web-mode-keyword-face) 1009 1029 (part-side javascript)) . 5257) (undo-tree-id548 . -1029) (undo-tree-id549 . -64) (undo-tree-id550 . -1029)) nil (25579 39718 619552 946000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -5255) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("
" 0 1 (part-side javascript)) . -5256) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) 5257) nil (25579 39718 619548 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5425 . 5426) (nil part-side javascript 5406 . 5426) (nil part-side javascript 5400 . 5406) (nil face web-mode-keyword-face 5400 . 5406) (nil part-side javascript 5365 . 5400) (nil part-side javascript 5359 . 5365) (nil face web-mode-keyword-face 5359 . 5365) (nil part-side javascript 5327 . 5359) (nil part-side javascript 5321 . 5327) (nil face web-mode-keyword-face 5321 . 5327) (nil part-side javascript 5291 . 5321) (nil part-side javascript 5285 . 5291) (nil face web-mode-keyword-face 5285 . 5291) (nil part-side javascript 5256 . 5285) (nil part-side javascript 5250 . 5256) (nil face web-mode-keyword-face 5250 . 5256) (nil part-side javascript 5244 . 5250) (nil part-side javascript 5243 . 5244) (nil syntax-table (12) 5243 . 5244) (nil part-side javascript 5236 . 5243) (nil part-token comment 5236 . 5243) (nil font-lock-face web-mode-javascript-comment-face 5236 . 5243) (nil part-side javascript 5234 . 5236) (nil part-token comment 5234 . 5236) (nil font-lock-face web-mode-javascript-comment-face 5234 . 5236) (nil part-side javascript 5233 . 5234) (nil part-token comment 5233 . 5234) (nil font-lock-face web-mode-javascript-comment-face 5233 . 5234) (nil part-side javascript 5229 . 5233) (nil part-token comment 5229 . 5233) (nil font-lock-face web-mode-javascript-comment-face 5229 . 5233) (nil part-side javascript 5227 . 5229) (nil part-token comment 5227 . 5229) (nil font-lock-face web-mode-javascript-comment-face 5227 . 5229) (nil part-side javascript 5226 . 5227) (nil part-token comment 5226 . 5227) (nil syntax-table (11) 5226 . 5227) (nil font-lock-face web-mode-javascript-comment-face 5226 . 5227) (nil part-side javascript 5206 . 5226) (nil part-side javascript 5200 . 5206) (nil face web-mode-keyword-face 5200 . 5206) (nil part-side javascript 5194 . 5200) (nil part-side javascript 5193 . 5194) (nil syntax-table (12) 5193 . 5194) (nil part-side javascript 5186 . 5193) (nil part-token comment 5186 . 5193) (nil font-lock-face web-mode-javascript-comment-face 5186 . 5193) (nil part-side javascript 5182 . 5186) (nil part-token comment 5182 . 5186) (nil font-lock-face web-mode-javascript-comment-face 5182 . 5186) (nil part-side javascript 5145 . 5182) (nil part-token comment 5145 . 5182) (nil font-lock-face web-mode-javascript-comment-face 5145 . 5182) (nil part-side javascript 5144 . 5145) (nil part-token comment 5144 . 5145) (nil syntax-table (11) 5144 . 5145) (nil font-lock-face web-mode-javascript-comment-face 5144 . 5145) (nil part-side javascript 5125 . 5144) (nil part-side javascript 5119 . 5125) (nil face web-mode-keyword-face 5119 . 5125) (nil part-side javascript 5113 . 5119) (nil part-side javascript 5112 . 5113) (nil syntax-table (12) 5112 . 5113) (nil part-side javascript 5103 . 5112) (nil part-token comment 5103 . 5112) (nil font-lock-face web-mode-javascript-comment-face 5103 . 5112) (nil part-side javascript 5098 . 5103) (nil part-token comment 5098 . 5103) (nil font-lock-face web-mode-javascript-comment-face 5098 . 5103) (nil part-side javascript 5079 . 5098) (nil part-token comment 5079 . 5098) (nil font-lock-face web-mode-javascript-comment-face 5079 . 5098) (nil part-side javascript 5078 . 5079) (nil part-token comment 5078 . 5079) (nil syntax-table (11) 5078 . 5079) (nil font-lock-face web-mode-javascript-comment-face 5078 . 5079) (nil part-side javascript 5058 . 5078) (nil part-side javascript 5052 . 5058) (nil face web-mode-keyword-face 5052 . 5058) (nil part-side javascript 5046 . 5052) (nil part-side javascript 5045 . 5046) (nil syntax-table (12) 5045 . 5046) (nil part-side javascript 5036 . 5045) (nil part-token comment 5036 . 5045) (nil font-lock-face web-mode-javascript-comment-face 5036 . 5045) (nil part-side javascript 5031 . 5036) (nil part-token comment 5031 . 5036) (nil font-lock-face web-mode-javascript-comment-face 5031 . 5036) (nil part-side javascript 5017 . 5031) (nil part-token comment 5017 . 5031) (nil font-lock-face web-mode-javascript-comment-face 5017 . 5031) (nil part-side javascript 5016 . 5017) (nil part-token comment 5016 . 5017) (nil syntax-table (11) 5016 . 5017) (nil font-lock-face web-mode-javascript-comment-face 5016 . 5017) (nil part-side javascript 4995 . 5016) (nil part-side javascript 4989 . 4995) (nil face web-mode-keyword-face 4989 . 4995) (nil part-side javascript 4983 . 4989) (nil part-side javascript 4982 . 4983) (nil syntax-table (12) 4982 . 4983) (nil part-side javascript 4975 . 4982) (nil part-token comment 4975 . 4982) (nil font-lock-face web-mode-javascript-comment-face 4975 . 4982) (nil part-side javascript 4969 . 4975) (nil part-token comment 4969 . 4975) (nil font-lock-face web-mode-javascript-comment-face 4969 . 4975) (nil part-side javascript 4934 . 4969) (nil part-token comment 4934 . 4969) (nil font-lock-face web-mode-javascript-comment-face 4934 . 4969) (nil part-side javascript 4933 . 4934) (nil part-token comment 4933 . 4934) (nil syntax-table (11) 4933 . 4934) (nil font-lock-face web-mode-javascript-comment-face 4933 . 4934) (nil part-side javascript 4913 . 4933) (nil part-side javascript 4907 . 4913) (nil face web-mode-keyword-face 4907 . 4913) (nil part-side javascript 4901 . 4907) (nil part-side javascript 4900 . 4901) (nil syntax-table (12) 4900 . 4901) (nil part-side javascript 4881 . 4900) (nil part-token comment 4881 . 4900) (nil font-lock-face web-mode-javascript-comment-face 4881 . 4900) (nil part-side javascript 4875 . 4881) (nil part-token comment 4875 . 4881) (nil font-lock-face web-mode-javascript-comment-face 4875 . 4881) (nil part-side javascript 4864 . 4875) (nil part-token comment 4864 . 4875) (nil font-lock-face web-mode-javascript-comment-face 4864 . 4875) (nil part-side javascript 4862 . 4864) (nil part-token comment 4862 . 4864) (nil font-lock-face web-mode-javascript-comment-face 4862 . 4864) (nil part-side javascript 4848 . 4862) (nil part-token comment 4848 . 4862) (nil font-lock-face web-mode-javascript-comment-face 4848 . 4862) (nil part-side javascript 4846 . 4848) (nil part-token comment 4846 . 4848) (nil font-lock-face web-mode-javascript-comment-face 4846 . 4848) (nil part-side javascript 4839 . 4846) (nil part-token comment 4839 . 4846) (nil font-lock-face web-mode-javascript-comment-face 4839 . 4846) (nil part-side javascript 4838 . 4839) (nil part-token comment 4838 . 4839) (nil syntax-table (11) 4838 . 4839) (nil font-lock-face web-mode-javascript-comment-face 4838 . 4839) (nil part-side javascript 4817 . 4838) (nil part-side javascript 4811 . 4817) (nil face web-mode-keyword-face 4811 . 4817) (nil part-side javascript 4805 . 4811) (nil part-side javascript 4804 . 4805) (nil syntax-table (12) 4804 . 4805) (nil part-side javascript 4795 . 4804) (nil part-token comment 4795 . 4804) (nil font-lock-face web-mode-javascript-comment-face 4795 . 4804) (nil part-side javascript 4792 . 4795) (nil part-token comment 4792 . 4795) (nil font-lock-face web-mode-javascript-comment-face 4792 . 4795) (nil part-side javascript 4782 . 4792) (nil part-token comment 4782 . 4792) (nil font-lock-face web-mode-javascript-comment-face 4782 . 4792) (nil part-side javascript 4778 . 4782) (nil part-token comment 4778 . 4782) (nil font-lock-face web-mode-javascript-comment-face 4778 . 4782) (nil part-side javascript 4770 . 4778) (nil part-token comment 4770 . 4778) (nil font-lock-face web-mode-javascript-comment-face 4770 . 4778) (nil part-side javascript 4768 . 4770) (nil part-token comment 4768 . 4770) (nil font-lock-face web-mode-javascript-comment-face 4768 . 4770) (nil part-side javascript 4752 . 4768) (nil part-token comment 4752 . 4768) (nil font-lock-face web-mode-javascript-comment-face 4752 . 4768) (nil part-side javascript 4751 . 4752) (nil part-token comment 4751 . 4752) (nil syntax-table (11) 4751 . 4752) (nil font-lock-face web-mode-javascript-comment-face 4751 . 4752) (nil part-side javascript 4731 . 4751) (nil part-side javascript 4725 . 4731) (nil face web-mode-keyword-face 4725 . 4731) (nil part-side javascript 4719 . 4725) (nil part-side javascript 4718 . 4719) (nil syntax-table (12) 4718 . 4719) (nil part-side javascript 4698 . 4718) (nil part-token comment 4698 . 4718) (nil font-lock-face web-mode-javascript-comment-face 4698 . 4718) (nil part-side javascript 4691 . 4698) (nil part-token comment 4691 . 4698) (nil font-lock-face web-mode-javascript-comment-face 4691 . 4698) (nil part-side javascript 4679 . 4691) (nil part-token comment 4679 . 4691) (nil font-lock-face web-mode-javascript-comment-face 4679 . 4691) (nil part-side javascript 4677 . 4679) (nil part-token comment 4677 . 4679) (nil font-lock-face web-mode-javascript-comment-face 4677 . 4679) (nil part-side javascript 4664 . 4677) (nil part-token comment 4664 . 4677) (nil font-lock-face web-mode-javascript-comment-face 4664 . 4677) (nil part-side javascript 4663 . 4664) (nil part-token comment 4663 . 4664) (nil syntax-table (11) 4663 . 4664) (nil font-lock-face web-mode-javascript-comment-face 4663 . 4664) (nil part-side javascript 4642 . 4663) (nil part-side javascript 4636 . 4642) (nil face web-mode-keyword-face 4636 . 4642) (nil part-side javascript 4630 . 4636) (nil part-side javascript 4629 . 4630) (nil syntax-table (12) 4629 . 4630) (nil part-side javascript 4620 . 4629) (nil part-token comment 4620 . 4629) (nil font-lock-face web-mode-javascript-comment-face 4620 . 4629) (nil part-side javascript 4613 . 4620) (nil part-token comment 4613 . 4620) (nil font-lock-face web-mode-javascript-comment-face 4613 . 4620) (nil part-side javascript 4601 . 4613) (nil part-token comment 4601 . 4613) (nil font-lock-face web-mode-javascript-comment-face 4601 . 4613) (nil part-side javascript 4599 . 4601) (nil part-token comment 4599 . 4601) (nil font-lock-face web-mode-javascript-comment-face 4599 . 4601) (nil part-side javascript 4583 . 4599) (nil part-token comment 4583 . 4599) (nil font-lock-face web-mode-javascript-comment-face 4583 . 4599) (nil part-side javascript 4582 . 4583) (nil part-token comment 4582 . 4583) (nil syntax-table (11) 4582 . 4583) (nil font-lock-face web-mode-javascript-comment-face 4582 . 4583) (nil part-side javascript 4558 . 4582) (nil part-side javascript 4552 . 4558) (nil face web-mode-keyword-face 4552 . 4558) (nil part-side javascript 4546 . 4552) (nil part-side javascript 4545 . 4546) (nil syntax-table (12) 4545 . 4546) (nil part-side javascript 4536 . 4545) (nil part-token comment 4536 . 4545) (nil font-lock-face web-mode-javascript-comment-face 4536 . 4545) (nil part-side javascript 4529 . 4536) (nil part-token comment 4529 . 4536) (nil font-lock-face web-mode-javascript-comment-face 4529 . 4536) (nil part-side javascript 4517 . 4529) (nil part-token comment 4517 . 4529) (nil font-lock-face web-mode-javascript-comment-face 4517 . 4529) (nil part-side javascript 4515 . 4517) (nil part-token comment 4515 . 4517) (nil font-lock-face web-mode-javascript-comment-face 4515 . 4517) (nil part-side javascript 4495 . 4515) (nil part-token comment 4495 . 4515) (nil font-lock-face web-mode-javascript-comment-face 4495 . 4515) (nil part-side javascript 4494 . 4495) (nil part-token comment 4494 . 4495) (nil syntax-table (11) 4494 . 4495) (nil font-lock-face web-mode-javascript-comment-face 4494 . 4495) (nil part-side javascript 4473 . 4494) (nil part-side javascript 4467 . 4473) (nil face web-mode-keyword-face 4467 . 4473) (nil part-side javascript 4461 . 4467) (nil part-side javascript 4460 . 4461) (nil syntax-table (12) 4460 . 4461) (nil part-side javascript 4451 . 4460) (nil part-token comment 4451 . 4460) (nil font-lock-face web-mode-javascript-comment-face 4451 . 4460) (nil part-side javascript 4445 . 4451) (nil part-token comment 4445 . 4451) (nil font-lock-face web-mode-javascript-comment-face 4445 . 4451) (nil part-side javascript 4444 . 4445) (nil part-token comment 4444 . 4445) (nil font-lock-face web-mode-javascript-comment-face 4444 . 4445) (nil part-side javascript 4442 . 4444) (nil part-token comment 4442 . 4444) (nil font-lock-face web-mode-javascript-comment-face 4442 . 4444) (nil part-side javascript 4441 . 4442) (nil part-token comment 4441 . 4442) (nil font-lock-face web-mode-javascript-comment-face 4441 . 4442) (nil part-side javascript 4437 . 4441) (nil part-token comment 4437 . 4441) (nil font-lock-face web-mode-javascript-comment-face 4437 . 4441) (nil part-side javascript 4435 . 4437) (nil part-token comment 4435 . 4437) (nil font-lock-face web-mode-javascript-comment-face 4435 . 4437) (nil part-side javascript 4434 . 4435) (nil part-token comment 4434 . 4435) (nil syntax-table (11) 4434 . 4435) (nil font-lock-face web-mode-javascript-comment-face 4434 . 4435) (nil part-side javascript 4409 . 4434) (nil part-side javascript 4403 . 4409) (nil face web-mode-keyword-face 4403 . 4409) (nil part-side javascript 4397 . 4403) (4397 . 5426)) nil (25579 39718 619527 290000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 5426) (undo-tree-id541 . -1)) nil (25579 39718 619468 600000) 0 nil])
([nil nil ((5432 . 5433)) nil (25579 39718 619466 617000) 0 nil])
([nil nil ((4398 . 4404) (#("      " 0 6 (part-side javascript)) . 4397) (undo-tree-id540 . -6) (4396 . 4404)) nil (25579 39718 619465 424000) 0 nil])
([nil nil ((4398 . 4404) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 4397) (4397 . 4403) (4397 . 4398)) nil (25579 39718 619462 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4475 . 4476) (nil part-side javascript 4398 . 4476) (nil part-token comment 4398 . 4476) (nil font-lock-face web-mode-javascript-comment-face 4398 . 4476) (nil part-side javascript 4397 . 4398) (nil part-token comment 4397 . 4398) (nil syntax-table (11) 4397 . 4398) (nil font-lock-face web-mode-javascript-comment-face 4397 . 4398) (4397 . 4476)) nil (25579 39718 619460 932000) 0 nil])
([nil nil ((4397 . 4403) 4476) nil (25579 39718 619458 413000) 0 nil])
([nil nil ((#("hecks whether current temp filter is an aggregation or a ordinary filter" 0 72 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 4407) (undo-tree-id538 . -72) (undo-tree-id539 . -72)) nil (25579 39718 619456 966000) 0 nil])
([nil nil ((#("C" 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -4406) (undo-tree-id536 . -1) (undo-tree-id537 . -1) 4407) nil (25579 39718 619453 586000) 0 nil])
([nil nil ((4406 . 4425)) nil (25579 39718 619450 413000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . -4424) (undo-tree-id535 . -1) 4425) nil (25579 39718 619449 302000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 4434) (undo-tree-id533 . -1) (undo-tree-id534 . 1)) nil (25579 39718 619445 510000) 0 nil])
([nil nil ((2137 . 2143) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . 2136) (2136 . 2142) (2136 . 2137)) nil (25579 39718 619442 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2165 . 2166) (nil part-side javascript 2165 . 2166) (nil face (rainbow-delimiters-depth-4-face) 2165 . 2166) (nil part-side javascript 2159 . 2165) (nil part-side javascript 2158 . 2159) (nil face (rainbow-delimiters-depth-4-face) 2158 . 2159) (nil part-side javascript 2143 . 2158) (nil face web-mode-function-call-face 2143 . 2158) (2143 . 2166)) nil (25579 39718 619440 458000) 0 nil])
([nil nil ((#("filter" 0 6 (part-side javascript)) . 2159) (undo-tree-id531 . -6) (undo-tree-id532 . -6)) nil (25579 39718 619437 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2179 . 2180) (nil part-side javascript 2163 . 2180) (nil part-side javascript 2159 . 2163) (nil face web-mode-constant-face 2159 . 2163) (2159 . 2180)) nil (25579 39718 619434 555000) 0 nil])
([nil nil ((2790 . 2792)) nil (25579 39718 619432 710000) 0 nil])
([nil nil ((#("      const currentfilter = this.currentsubfilter
      delete currentfilter.condition
      delete currentfilter.rule
      delete currentfilter.field
      delete currentfilter.operator
      delete currentfilter.value
      // delete currentfilter.types
      delete currentfilter.subtype
      delete currentfilter.subcount
      delete currentfilter.matchfield
      delete currentfilter.submatchfield
      delete currentfilter.rules
      delete currentfilter.active
      delete currentfilter.rulepos
      delete currentfilter.empty" 0 6 (part-side javascript) 6 11 (part-side javascript face web-mode-keyword-face) 11 12 (part-side javascript) 12 25 (part-side javascript face web-mode-variable-name-face) 25 28 (part-side javascript) 28 32 (part-side javascript face web-mode-constant-face) 32 56 (part-side javascript) 56 62 (part-side javascript face web-mode-keyword-face) 62 93 (part-side javascript) 93 99 (part-side javascript face web-mode-keyword-face) 99 125 (part-side javascript) 125 131 (part-side javascript face web-mode-keyword-face) 131 158 (part-side javascript) 158 164 (part-side javascript face web-mode-keyword-face) 164 194 (part-side javascript) 194 200 (part-side javascript face web-mode-keyword-face) 200 227 (part-side javascript) 227 228 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 228 230 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 230 236 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 236 256 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 256 257 (part-side javascript syntax-table (12)) 257 263 (part-side javascript) 263 269 (part-side javascript face web-mode-keyword-face) 269 298 (part-side javascript) 298 304 (part-side javascript face web-mode-keyword-face) 304 334 (part-side javascript) 334 340 (part-side javascript face web-mode-keyword-face) 340 372 (part-side javascript) 372 378 (part-side javascript face web-mode-keyword-face) 378 413 (part-side javascript) 413 419 (part-side javascript face web-mode-keyword-face) 419 446 (part-side javascript) 446 452 (part-side javascript face web-mode-keyword-face) 452 480 (part-side javascript) 480 486 (part-side javascript face web-mode-keyword-face) 486 515 (part-side javascript) 515 521 (part-side javascript face web-mode-keyword-face) 521 541 (part-side javascript)) . 2182) (undo-tree-id526 . -541) (undo-tree-id527 . -152) (undo-tree-id528 . -49) (undo-tree-id529 . -50) (undo-tree-id530 . -541)) nil (25579 39718 619431 294000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -2181) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 2182) nil (25579 39718 619424 565000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 2181) (undo-tree-id519 . -1)) nil (25579 39718 619416 385000) 0 nil])
([nil nil ((2181 . 2188)) nil (25579 39718 619409 238000) 0 nil])
([nil nil ((2195 . 2200)) nil (25579 39718 619407 675000) 0 nil])
([nil nil ((#("            " 0 6 (part-side javascript face whitespace-trailing) 6 12 (part-side javascript face whitespace-trailing)) . -3938) (#("      " 0 6 (part-side javascript face whitespace-trailing)) . -2182) 2200) nil (25579 39718 619399 485000) 0 nil])
([nil nil ((6135 . 6144) (t 25579 39718 670429 96000)) nil (25579 39812 929350 850000) 0 nil])
([nil nil ((6144 . 6149)) nil (25579 39812 929348 868000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6171 . 6172) (nil part-side javascript 6171 . 6172) (nil face (rainbow-delimiters-depth-5-face) 6171 . 6172) (nil part-side javascript 6165 . 6171) (nil part-side javascript 6164 . 6165) (nil face (rainbow-delimiters-depth-5-face) 6164 . 6165) (nil part-side javascript 6149 . 6164) (nil face web-mode-function-call-face 6149 . 6164) (6149 . 6172)) nil (25579 39812 929346 442000) 0 nil])
([nil nil ((#("filter" 0 6 (part-side javascript)) . 6165) (undo-tree-id593 . -6) (undo-tree-id594 . -6)) nil (25579 39812 929340 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6177 . 6178) (nil part-side javascript 6165 . 6178) (6165 . 6178)) nil (25579 39812 929334 225000) 0 nil])
([nil nil ((#("console.log(\"HEYO\")" 0 8 (part-side javascript) 8 11 (part-side javascript face web-mode-function-call-face) 11 12 (part-side javascript face (rainbow-delimiters-depth-6-face)) 12 13 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 13 17 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 17 18 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6625) (undo-tree-id591 . -19) (undo-tree-id592 . -19)) nil (25579 39812 929329 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6659 . 6660) (nil rear-nonsticky t 6659 . 6660) (nil part-side javascript 6659 . 6660) (nil face (rainbow-delimiters-depth-6-face) 6659 . 6660) (nil rear-nonsticky t 6658 . 6659) (nil part-side javascript 6658 . 6659) (nil part-side javascript 6646 . 6658) (nil part-side javascript 6645 . 6646) (nil face (rainbow-delimiters-depth-6-face) 6645 . 6646) (nil part-side javascript 6630 . 6645) (nil face web-mode-function-call-face 6630 . 6645) (nil part-side javascript 6629 . 6630) (nil part-side javascript 6625 . 6629) (nil face web-mode-constant-face 6625 . 6629) (6625 . 6660)) nil (25579 39812 929303 723000) 0 nil])
([nil nil ((7073 . 7084)) nil (25579 39812 929293 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7118 . 7119) (nil rear-nonsticky t 7118 . 7119) (nil part-side javascript 7118 . 7119) (nil face (rainbow-delimiters-depth-6-face) 7118 . 7119) (nil rear-nonsticky t 7117 . 7118) (nil part-side javascript 7117 . 7118) (nil part-side javascript 7105 . 7117) (nil part-side javascript 7104 . 7105) (nil face (rainbow-delimiters-depth-6-face) 7104 . 7105) (nil part-side javascript 7089 . 7104) (nil face web-mode-function-call-face 7089 . 7104) (nil part-side javascript 7088 . 7089) (nil part-side javascript 7084 . 7088) (nil face web-mode-constant-face 7084 . 7088) (7084 . 7119)) nil (25579 39812 929290 959000) 0 nil])
([nil nil ((7605 . 7616)) nil (25579 39812 929282 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7650 . 7651) (nil rear-nonsticky t 7650 . 7651) (nil part-side javascript 7650 . 7651) (nil face (rainbow-delimiters-depth-6-face) 7650 . 7651) (nil rear-nonsticky t 7649 . 7650) (nil part-side javascript 7649 . 7650) (nil part-side javascript 7637 . 7649) (nil part-side javascript 7636 . 7637) (nil face (rainbow-delimiters-depth-6-face) 7636 . 7637) (nil part-side javascript 7621 . 7636) (nil face web-mode-function-call-face 7621 . 7636) (nil part-side javascript 7620 . 7621) (nil part-side javascript 7616 . 7620) (nil face web-mode-constant-face 7616 . 7620) (7616 . 7651)) nil (25579 39812 929167 175000) 0 nil])
([nil nil ((8553 . 8564)) nil (25579 39812 929162 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8598 . 8599) (nil rear-nonsticky t 8598 . 8599) (nil part-side javascript 8598 . 8599) (nil face (rainbow-delimiters-depth-6-face) 8598 . 8599) (nil rear-nonsticky t 8597 . 8598) (nil part-side javascript 8597 . 8598) (nil part-side javascript 8585 . 8597) (nil part-side javascript 8584 . 8585) (nil face (rainbow-delimiters-depth-6-face) 8584 . 8585) (nil part-side javascript 8569 . 8584) (nil face web-mode-function-call-face 8569 . 8584) (nil part-side javascript 8568 . 8569) (nil part-side javascript 8564 . 8568) (nil face web-mode-constant-face 8564 . 8568) (8564 . 8599)) nil (25579 39812 929159 921000) 0 nil])
([nil nil ((9059 . 9070)) nil (25579 39812 929154 458000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9104 . 9105) (nil rear-nonsticky t 9104 . 9105) (nil part-side javascript 9104 . 9105) (nil face (rainbow-delimiters-depth-6-face) 9104 . 9105) (nil rear-nonsticky t 9103 . 9104) (nil part-side javascript 9103 . 9104) (nil part-side javascript 9091 . 9103) (nil part-side javascript 9090 . 9091) (nil face (rainbow-delimiters-depth-6-face) 9090 . 9091) (nil part-side javascript 9075 . 9090) (nil face web-mode-function-call-face 9075 . 9090) (nil part-side javascript 9074 . 9075) (nil part-side javascript 9070 . 9074) (nil face web-mode-constant-face 9070 . 9074) (9070 . 9105)) nil (25579 39812 929142 198000) 0 nil])
([nil nil ((3897 . 3904) (t 25579 39812 985317 351000)) nil (25579 39844 407359 580000) 0 nil])
([nil nil ((2143 . 2148) (t 25579 39844 452946 314000)) nil (25579 39894 511375 777000) 0 nil])
([nil nil ((#("currentfilter" 0 13 (part-side javascript)) . 2199) (undo-tree-id619 . -13) (undo-tree-id620 . -13) (t 25579 39894 572355 256000)) nil (25579 39927 326397 648000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2219 . 2220) (nil rear-nonsticky t 2219 . 2220) (nil part-side javascript 2219 . 2220) (nil part-side javascript 2203 . 2219) (nil part-side javascript 2199 . 2203) (nil face web-mode-constant-face 2199 . 2203) (2199 . 2220)) nil (25579 39927 326391 721000) 0 nil])
([nil nil ((#("this." 0 4 (part-side javascript face web-mode-constant-face) 4 5 (part-side javascript)) . 2194) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -5) (undo-tree-id617 . -5) (undo-tree-id618 . -5)) nil (25579 39927 326384 113000) 0 nil])
([nil nil ((#(", asc = true" 0 8 (part-side javascript) 8 12 (part-side javascript face web-mode-constant-face)) . 5100) (undo-tree-id636 . -12) (undo-tree-id637 . -12) (t 25579 39927 379968 294000)) nil (25579 40104 298358 535000) 0 nil])
([nil nil ((7182 . 7183)) nil (25579 40104 298354 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7202 . 7203) (nil part-side javascript 7183 . 7203) (7183 . 7203)) nil (25579 40104 298352 246000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -7178) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("a" 0 1 (part-side javascript)) . -7179) (undo-tree-id633 . -1) (#("s" 0 1 (part-side javascript face web-mode-keyword-face)) . -7180) (undo-tree-id634 . -1) (#("c" 0 1 (part-side javascript)) . -7181) (undo-tree-id635 . -1) 7182) nil (25579 40104 298344 201000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6818) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (#("m" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6819) (undo-tree-id641 . -1) (undo-tree-id642 . -1) 6820 (t 25579 40104 353880 215000)) nil (25579 40151 385576 618000) 0 nil])
([nil nil ((6818 . 6819)) nil (25579 40151 385569 412000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6818) (undo-tree-id638 . -1) 6819) nil (25579 40151 385566 682000) 0 nil])
([nil nil ((6818 . 6821)) nil (25579 40151 385542 80000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10412) (undo-tree-id651 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 10413) (#("t" 0 1 (part-side javascript)) . -10413) (undo-tree-id652 . -1) (#("h" 0 1 (part-side javascript)) . -10414) (undo-tree-id653 . -1) (#("i" 0 1 (part-side javascript)) . -10415) (undo-tree-id654 . -1) (#("s" 0 1 (part-side javascript face web-mode-constant-face)) . -10416) (undo-tree-id655 . -1) (#("." 0 1 (part-side javascript)) . -10417) (undo-tree-id656 . -1) (#("f" 0 1 (part-side javascript)) . -10418) (undo-tree-id657 . -1) (#("i" 0 1 (part-side javascript)) . -10419) (undo-tree-id658 . -1) (#("l" 0 1 (part-side javascript)) . -10420) (undo-tree-id659 . -1) (#("t" 0 1 (part-side javascript)) . -10421) (undo-tree-id660 . -1) (#("e" 0 1 (part-side javascript)) . -10422) (undo-tree-id661 . -1) (#("r" 0 1 (part-side javascript)) . -10423) (undo-tree-id662 . -1) (#("s" 0 1 (part-side javascript)) . -10424) (undo-tree-id663 . -1) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -10425) (undo-tree-id664 . -1) (#("0" 0 1 (part-side javascript)) . -10426) (undo-tree-id665 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -10427) (undo-tree-id666 . -1) 10428 (t 25579 40151 437283 85000)) nil (25579 41344 376799 297000) 0 nil])
([nil nil ((10413 . 10428) (10412 . 10414) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -10412) (10412 . 10413)) nil (25579 41344 376775 655000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -10427) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) 10428) nil (25579 41344 376769 673000) 0 nil])
([nil nil ((7200 . 7205) (t 25579 41344 430637 317000)) nil (25579 43340 338702 879000) 0 nil])
([nil nil ((7204 . 7207)) nil (25579 43340 338701 387000) 0 nil])
([nil nil ((7208 . 7213)) nil (25579 43340 338700 112000) 0 nil])
([nil nil ((7212 . 7216)) nil (25579 43340 338698 787000) 0 nil])
([nil nil ((#("?" 0 1 (part-side javascript)) . -18859) (undo-tree-id667 . -1) 18860) nil (25579 43340 347649 312000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -18848) (undo-tree-id668 . -1) 18849) nil (25579 43364 556191 418000) 0 nil] [nil nil ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18859) (#("C" 0 1 (part-side javascript)) . 18859) (#("S" 0 1 (part-side javascript)) . 18859) (#("E" 0 1 (part-side javascript)) . 18859) (#("D" 0 1 (part-side javascript)) . 18859) (#(" " 0 1 (part-side javascript)) . 18859) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18859) (#(" " 0 1 (part-side javascript)) . 18859) (#(":" 0 1 (part-side javascript)) . 18859) (#(" " 0 1 (part-side javascript)) . 18859) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18859) (#("C" 0 1 (part-side javascript)) . 18859) (#("S" 0 1 (part-side javascript)) . 18859) (#("A" 0 1 (part-side javascript)) . 18859) (#(" " 0 1 (part-side javascript)) . 18859) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18859) (#(" " 0 1 (part-side javascript)) . 18859)) ((18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860) (18859 . 18860)) (25579 43340 338678 152000) 0 nil])
([nil nil ((18848 . 18852)) nil (25579 43364 556181 705000) 0 nil])
nil
([nil nil ((18851 . 18852)) nil (25579 43364 556179 835000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 18862) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18862) (#("C" 0 1 (part-side javascript)) . 18862) (#("S" 0 1 (part-side javascript)) . 18862) (#("E" 0 1 (part-side javascript)) . 18862) (#("D" 0 1 (part-side javascript)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862) (#(":" 0 1 (part-side javascript)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18862) (#("C" 0 1 (part-side javascript)) . 18862) (#("S" 0 1 (part-side javascript)) . 18862) (#("A" 0 1 (part-side javascript)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862) (#(" " 0 1 (part-side javascript)) . 18862)) nil (25579 43364 556158 473000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -2261) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2262) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 2263 (t 25579 43364 610769 196000)) nil (25580 39399 217185 24000) 0 nil])
([nil nil ((2294 . 2299) (t 25580 39399 312631 304000)) nil (25580 39555 365653 522000) 0 nil])
([nil nil ((2261 . 2264) (t 25580 39555 460465 885000)) nil (25580 40080 126850 498000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -2261) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2262) (undo-tree-id13 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2263) (undo-tree-id14 . -1) 2264) nil (25580 40082 334896 740000) 0 nil] [nil nil ((#("/" 0 1 (part-side javascript)) . -2261) (undo-tree-id4 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2262) (undo-tree-id5 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2263) (undo-tree-id6 . -1) 2264 (t 25580 39577 840452 266000)) ((2261 . 2264) (t 25580 40073 707793 25000)) (25580 40073 612865 698000) 0 nil])
([nil nil ((2261 . 2264) (t 25580 40082 431777 74000)) nil (25580 40103 367651 618000) 0 nil])
nil
([nil nil ((#("/" 0 1 (part-side javascript)) . -2261) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2262) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -2263) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 2264 (t 25580 40103 459738 215000)) nil (25580 40155 825066 738000) 0 nil])
([nil nil ((2137 . 2143) (#("      " 0 6 (part-side javascript)) . 2136) (undo-tree-id29 . -6) (2135 . 2143) (t 25580 40155 919638 761000)) nil (25580 58562 479156 945000) 0 nil])
([nil nil ((2143 . 2164)) nil (25580 58562 479153 761000) 0 nil])
([nil nil ((2155 . 2156)) nil (25580 58562 479152 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2185 . 2186) (nil part-side javascript 2169 . 2186) (nil part-side javascript 2165 . 2169) (nil face web-mode-constant-face 2165 . 2169) (2165 . 2186)) nil (25580 58562 479150 704000) 0 nil])
([nil nil ((#("this.currentsubfilter" 0 4 (part-side javascript face web-mode-constant-face) 4 21 (part-side javascript)) . 2215) (undo-tree-id24 . -21) (undo-tree-id25 . -21) (undo-tree-id26 . -21) (undo-tree-id27 . -21) (undo-tree-id28 . -21)) nil (25580 58562 479148 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2227 . 2228) (nil part-side javascript 2215 . 2228) (2215 . 2228)) nil (25580 58562 479140 164000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript)) . -2237) (undo-tree-id3 . -1) (#("h" 0 1 (part-side javascript)) . -2238) (undo-tree-id4 . -1) (#("i" 0 1 (part-side javascript)) . -2239) (undo-tree-id5 . -1) (#("s" 0 1 (part-side javascript face web-mode-constant-face)) . -2240) (undo-tree-id6 . -1) (#("." 0 1 (part-side javascript)) . -2241) (undo-tree-id7 . -1) (#("c" 0 1 (part-side javascript)) . -2242) (undo-tree-id8 . -1) (#("u" 0 1 (part-side javascript)) . -2243) (undo-tree-id9 . -1) (#("r" 0 1 (part-side javascript)) . -2244) (undo-tree-id10 . -1) (#("r" 0 1 (part-side javascript)) . -2245) (undo-tree-id11 . -1) (#("e" 0 1 (part-side javascript)) . -2246) (undo-tree-id12 . -1) (#("n" 0 1 (part-side javascript)) . -2247) (undo-tree-id13 . -1) (#("t" 0 1 (part-side javascript)) . -2248) (undo-tree-id14 . -1) (#("s" 0 1 (part-side javascript)) . -2249) (undo-tree-id15 . -1) (#("u" 0 1 (part-side javascript)) . -2250) (undo-tree-id16 . -1) (#("b" 0 1 (part-side javascript)) . -2251) (undo-tree-id17 . -1) (#("f" 0 1 (part-side javascript)) . -2252) (undo-tree-id18 . -1) (#("i" 0 1 (part-side javascript)) . -2253) (undo-tree-id19 . -1) (#("l" 0 1 (part-side javascript)) . -2254) (undo-tree-id20 . -1) (#("t" 0 1 (part-side javascript)) . -2255) (undo-tree-id21 . -1) (#("e" 0 1 (part-side javascript)) . -2256) (undo-tree-id22 . -1) (#("r" 0 1 (part-side javascript)) . -2257) (undo-tree-id23 . -1) 2258) nil (25580 58562 479134 654000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2249 . 2250) (nil part-side javascript 2237 . 2250) (2237 . 2250)) nil (25580 58562 479105 439000) 0 nil])
([nil nil ((#("this.currentfilter" 0 4 (part-side javascript face web-mode-constant-face) 4 18 (part-side javascript)) . 2329) (undo-tree-id0 . -18) (undo-tree-id1 . -18) (undo-tree-id2 . -18)) nil (25580 58562 479102 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2341 . 2342) (nil part-side javascript 2329 . 2342) (2329 . 2342)) nil (25580 58562 479078 257000) 0 nil])
([nil nil ((#("
      /* else if (
       *   'condition' in filt &&
       *   (filt['condition'] == 'subcountmin' ||
       *    filt['condition'] == 'subcountmax')
       * ) {
       *   const subcountidx = idxobj['i']
       *   let sctype = 'MIN'
       *   if (filt['condition'] == 'subcountmax') {
       *     sctype = 'MAX'
       *   }
       *   idxobj['i'] = idxobj['i'] + 1
       *   result.push({
       *     value:
       *     'SUBCOUNT' +
       *     sctype +
       *     '(' +
       *     filt['subtype'] +
       *     ',' +
       *     filt['subcount'] +
       *     ')',
       *     index: subcountidx
       *   })
       * } */" 0 7 (part-side javascript) 7 8 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 8 10 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 10 14 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 14 15 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 15 17 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 17 43 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 43 45 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 45 176 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 176 181 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 181 182 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 182 193 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 193 219 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 219 222 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 222 223 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 223 229 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 229 249 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 249 251 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 251 391 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 391 395 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 395 411 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 411 416 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 416 598 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 598 603 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 603 644 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face)) . 16998) (undo-tree-id30 . -644) (undo-tree-id31 . -1) (undo-tree-id32 . -644) (undo-tree-id33 . -644) (t 25580 58562 572769 94000)) nil (25580 58694 223483 451000) 0 nil])
([nil nil ((19125 . 19126)) nil (25580 58694 223459 417000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 19125) (t 25580 58694 324585 924000)) nil (25580 58705 249312 257000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 19123)) nil (25580 58705 249309 875000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 19097) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25580 58705 249304 268000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 18203) (t 25580 58705 348570 213000)) nil (25580 58730 115522 687000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18273)) nil (25580 58730 115520 100000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 18291)) nil (25580 58730 115512 488000) 0 nil])
([nil nil ((18291 . 18292) (t 25580 58730 208534 591000)) nil (25580 58738 606264 442000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18291) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 18292 (t 25580 58738 700522 363000)) nil (25580 58744 446098 339000) 0 nil])
([nil nil ((18292 . 18293)) nil (25580 58744 446069 810000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -18292) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 18293 (t 25580 58744 544513 931000)) nil (25580 58749 548856 190000) 0 nil])
([nil nil ((18291 . 18300) (t 25580 58749 644506 560000)) nil (25580 58759 907122 222000) 0 nil])
([nil nil ((18203 . 18214)) nil (25580 58759 907120 112000) 0 nil])
([nil nil ((#("           " 0 11 (part-side javascript)) . -18273)) nil (25580 58759 907112 916000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18303) (undo-tree-id68 . -1) (t 25580 58760 4491 558000)) nil (25580 58771 779272 881000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18341) (undo-tree-id67 . -1)) nil (25580 58771 779265 973000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 18088) (undo-tree-id69 . -1) (t 25580 58771 872474 319000)) nil (25580 58783 540190 62000) 0 nil])
([nil nil ((6355 . 6358) (t 25587 14077 764519 450000)) nil (25591 29611 582960 752000) 0 nil])
([nil nil ((7585 . 7594) (7538 . 7547) (7413 . 7422) (7364 . 7373) (7317 . 7326) (7269 . 7278) (7201 . 7210) (7169 . 7178) (7120 . 7129) (7056 . 7065) (7018 . 7510) (#("else if (filtertype == 'simple' &&
                 cfilternoparent.type == 'sortExpression') {
          this.filter_clearing(currentfilter)
          const nfilter = {}
          nfilter['asc'] = replacecurrentfilter ? 'ASC' : 'DESC'
          nfilter['type'] = 'sortExpression'
          nfilter['condition'] = filtertype
          nfilter['parent'] = this.filters[0]
          nfilter['field'] = opt_cursor ? this.mheader[currentindex][opt_cursor[0]] : this.mheader[currentindex][cursorX]
          this.filters[0]['sort'] = nfilter
        }" 0 4 (face web-mode-keyword-face part-side javascript) 4 5 (part-side javascript) 5 7 (face web-mode-keyword-face part-side javascript) 7 8 (part-side javascript) 8 9 (face (rainbow-delimiters-depth-5-face) part-side javascript) 9 23 (part-side javascript) 23 24 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 24 30 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 30 31 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 31 76 (part-side javascript) 76 77 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 77 91 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 91 92 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 92 93 (face (rainbow-delimiters-depth-5-face) part-side javascript) 93 94 (part-side javascript) 94 95 (face (rainbow-delimiters-depth-5-face) part-side javascript) 95 106 (part-side javascript) 106 110 (face web-mode-constant-face part-side javascript) 110 111 (part-side javascript) 111 126 (face web-mode-function-call-face part-side javascript) 126 127 (face (rainbow-delimiters-depth-6-face) part-side javascript) 127 140 (part-side javascript) 140 141 (face (rainbow-delimiters-depth-6-face) part-side javascript) 141 152 (part-side javascript) 152 157 (face web-mode-keyword-face part-side javascript) 157 158 (part-side javascript) 158 165 (face web-mode-variable-name-face part-side javascript) 165 168 (part-side javascript) 168 169 (face (rainbow-delimiters-depth-6-face) part-side javascript) 169 170 (face (rainbow-delimiters-depth-6-face) part-side javascript) 170 188 (part-side javascript) 188 189 (face (rainbow-delimiters-depth-6-face) part-side javascript) 189 190 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 190 193 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 193 194 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 194 195 (face (rainbow-delimiters-depth-6-face) part-side javascript) 195 221 (part-side javascript) 221 222 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 222 225 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 225 226 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 226 229 (part-side javascript) 229 230 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 230 235 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 235 236 (syntax-table (15) part-side javascript) 236 253 (part-side javascript) 253 254 (face (rainbow-delimiters-depth-6-face) part-side javascript) 254 255 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 255 259 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 259 260 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 260 261 (face (rainbow-delimiters-depth-6-face) part-side javascript) 261 264 (part-side javascript) 264 265 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 265 280 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 280 281 (syntax-table (15) part-side javascript) 281 298 (part-side javascript) 298 299 (face (rainbow-delimiters-depth-6-face) part-side javascript) 299 300 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 300 309 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 309 310 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 310 311 (face (rainbow-delimiters-depth-6-face) part-side javascript) 311 342 (part-side javascript) 342 343 (face (rainbow-delimiters-depth-6-face) part-side javascript) 343 344 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 344 350 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 350 351 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 351 352 (face (rainbow-delimiters-depth-6-face) part-side javascript) 352 355 (part-side javascript) 355 359 (face web-mode-constant-face part-side javascript) 359 367 (part-side javascript) 367 368 (face (rainbow-delimiters-depth-6-face) part-side javascript) 368 369 (part-side javascript) 369 370 (face (rainbow-delimiters-depth-6-face) part-side javascript) 370 388 (part-side javascript) 388 389 (face (rainbow-delimiters-depth-6-face) part-side javascript) 389 390 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 390 395 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 395 396 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 396 397 (face (rainbow-delimiters-depth-6-face) part-side javascript) 397 413 (part-side javascript) 413 417 (face web-mode-constant-face part-side javascript) 417 425 (part-side javascript) 425 426 (face (rainbow-delimiters-depth-6-face) part-side javascript) 426 438 (part-side javascript) 438 439 (face (rainbow-delimiters-depth-6-face) part-side javascript) 439 440 (face (rainbow-delimiters-depth-6-face) part-side javascript) 440 450 (part-side javascript) 450 451 (face (rainbow-delimiters-depth-7-face) part-side javascript) 451 452 (part-side javascript) 452 453 (face (rainbow-delimiters-depth-7-face) part-side javascript) 453 454 (face (rainbow-delimiters-depth-6-face) part-side javascript) 454 457 (part-side javascript) 457 461 (face web-mode-constant-face part-side javascript) 461 469 (part-side javascript) 469 470 (face (rainbow-delimiters-depth-6-face) part-side javascript) 470 482 (part-side javascript) 482 483 (face (rainbow-delimiters-depth-6-face) part-side javascript) 483 484 (face (rainbow-delimiters-depth-6-face) part-side javascript) 484 491 (part-side javascript) 491 492 (face (rainbow-delimiters-depth-6-face) part-side javascript) 492 503 (part-side javascript) 503 507 (face web-mode-constant-face part-side javascript) 507 515 (part-side javascript) 515 516 (face (rainbow-delimiters-depth-6-face) part-side javascript) 516 517 (part-side javascript) 517 518 (face (rainbow-delimiters-depth-6-face) part-side javascript) 518 519 (face (rainbow-delimiters-depth-6-face) part-side javascript) 519 520 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 520 524 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 524 525 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 525 526 (face (rainbow-delimiters-depth-6-face) part-side javascript) 526 545 (part-side javascript) 545 546 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 7018) (undo-tree-id4 . -35) (undo-tree-id5 . -546) (undo-tree-id6 . -546) (undo-tree-id7 . -546)) nil (25591 29611 582958 381000) 0 nil])
([nil nil ((17941 . 17944)) nil (25591 29611 582950 531000) 0 nil])
([nil nil ((17998 . 18001)) nil (25591 29611 582949 382000) 0 nil])
([nil nil ((18403 . 18410) (18362 . 18369) (18348 . 18355) (18316 . 18323) (18254 . 18261) (18229 . 18236) (18148 . 18374) (#("else if ('type' in filt && filt['type'] == 'sortExpression' && !filt.empty) {
        result.push({
          value: 'SORT ' + filt['field'] + ' ' + filt.asc,
          index: idxobj['i']
        })
        idxobj['i'] = idxobj['i'] + 1
      }" 0 4 (face web-mode-keyword-face part-side javascript) 4 5 (part-side javascript) 5 7 (face web-mode-keyword-face part-side javascript) 7 8 (part-side javascript) 8 9 (face (rainbow-delimiters-depth-4-face) part-side javascript) 9 10 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 10 14 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 14 15 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 15 16 (part-side javascript) 16 18 (face web-mode-keyword-face part-side javascript) 18 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-5-face) part-side javascript) 32 33 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 33 37 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 37 38 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 38 39 (face (rainbow-delimiters-depth-5-face) part-side javascript) 39 43 (part-side javascript) 43 44 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 44 58 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 58 59 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 59 74 (part-side javascript) 74 75 (face (rainbow-delimiters-depth-4-face) part-side javascript) 75 76 (part-side javascript) 76 77 (face (rainbow-delimiters-depth-4-face) part-side javascript) 77 93 (part-side javascript) 93 97 (face web-mode-function-call-face part-side javascript) 97 98 (face (rainbow-delimiters-depth-5-face) part-side javascript) 98 99 (face (rainbow-delimiters-depth-6-face) part-side javascript) 99 110 (part-side javascript) 110 115 (face web-mode-variable-name-face part-side javascript) 115 117 (part-side javascript) 117 118 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 118 123 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 123 124 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 124 131 (part-side javascript) 131 132 (face (rainbow-delimiters-depth-7-face) part-side javascript) 132 133 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 133 138 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 138 139 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 139 140 (face (rainbow-delimiters-depth-7-face) part-side javascript) 140 143 (part-side javascript) 143 144 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 144 145 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 145 146 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 146 169 (part-side javascript) 169 174 (face web-mode-variable-name-face part-side javascript) 174 182 (part-side javascript) 182 183 (face (rainbow-delimiters-depth-7-face) part-side javascript) 183 184 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 184 185 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 185 186 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 186 187 (face (rainbow-delimiters-depth-7-face) part-side javascript) 187 196 (part-side javascript) 196 197 (face (rainbow-delimiters-depth-6-face) part-side javascript) 197 198 (face (rainbow-delimiters-depth-5-face) part-side javascript) 198 213 (part-side javascript) 213 214 (face (rainbow-delimiters-depth-5-face) part-side javascript) 214 215 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 215 216 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 216 217 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 217 218 (face (rainbow-delimiters-depth-5-face) part-side javascript) 218 227 (part-side javascript) 227 228 (face (rainbow-delimiters-depth-5-face) part-side javascript) 228 229 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 229 230 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 230 231 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 231 232 (face (rainbow-delimiters-depth-5-face) part-side javascript) 232 243 (part-side javascript) 243 244 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 18148) (undo-tree-id0 . -78) (undo-tree-id1 . -244) (undo-tree-id2 . -244) (undo-tree-id3 . -244)) nil (25591 29611 582946 423000) 0 nil])
([nil nil ((4642 . 4645)) nil (25591 29611 582918 848000) 0 nil])
([nil nil ((7004 . 7014) (#("          " 0 10 (part-side javascript)) . 7003) (undo-tree-id32 . -10) (7002 . 7014) (t 25591 29611 642956 973000)) nil (25592 44196 618727 262000) 0 nil])
([nil nil ((7004 . 7014) (#("          " 0 10 (part-side javascript face whitespace-trailing)) . 7003) (7003 . 7013) (7003 . 7004)) nil (25592 44196 618724 436000) 0 nil])
([nil nil ((7014 . 7023)) nil (25592 44196 618722 386000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -7017) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("i" 0 1 (part-side javascript)) . -7018) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("l" 0 1 (part-side javascript)) . -7019) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (part-side javascript)) . -7020) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (part-side javascript)) . -7021) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("r" 0 1 (part-side javascript)) . -7022) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 7023) nil (25592 44196 618719 670000) 0 nil])
([nil nil ((7017 . 7019)) nil (25592 44196 618705 9000) 0 nil])
([nil nil ((7019 . 7022)) nil (25592 44196 618704 137000) 0 nil])
([nil nil ((7017 . 7037) (#("repla" 0 5 (part-side javascript)) . -7017) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -3) 7022) nil (25592 44196 618702 622000) 0 nil])
([nil nil ((7037 . 7038)) nil (25592 44196 618698 190000) 0 nil])
([nil nil ((7017 . 7019) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7017) (7017 . 7018)) nil (25592 44196 618696 927000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 7018)) nil (25592 44196 618695 357000) 0 nil])
([nil nil ((7040 . 7042) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -7040) (7039 . 7041)) nil (25592 44196 618694 207000) 0 nil])
([nil nil ((7043 . 7053) (#("            " 0 12 (part-side javascript face whitespace-trailing)) . 7042) (undo-tree-id15 . -10) (undo-tree-id16 . 12) (7052 . 7054) (7041 . 7053)) nil (25592 44196 618692 245000) 0 nil])
([nil nil ((7042 . 7054)) nil (25592 44196 618688 181000) 0 nil])
([nil nil ((7054 . 7064)) nil (25592 44196 618687 137000) 0 nil])
([nil nil ((7054 . 7067) (#("currentfil" 0 10 (part-side javascript)) . -7054) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -4) 7064) nil (25592 44196 618685 599000) 0 nil])
([nil nil ((7068 . 7070) (7067 . 7069) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -7067) (7067 . 7068)) nil (25592 44196 618680 390000) 0 nil])
([nil nil ((7069 . 7073)) nil (25592 44196 618678 204000) 0 nil])
([nil nil ((7075 . 7078)) nil (25592 44196 618677 167000) 0 nil])
([nil nil ((7078 . 7080)) nil (25592 44196 618675 808000) 0 nil])
([nil nil ((7079 . 7083)) nil (25592 44196 618674 453000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -7082) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 7083) nil (25592 44196 618671 261000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript face whitespace-trailing)) . -7096) 7082) nil (25592 44196 618636 553000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . 7095) (undo-tree-id64 . -1) (t 25592 44196 671888 16000)) nil (25592 44452 96686 110000) 0 nil])
([nil nil ((#("a" 0 1 (part-side javascript)) . -4733) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("s" 0 1 (part-side javascript)) . -4734) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("c" 0 1 (part-side javascript)) . -4735) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 4736) nil (25592 44452 96683 58000) 0 nil])
([nil nil ((4733 . 4737)) nil (25592 44452 96673 274000) 0 nil])
([nil nil ((19318 . 19329)) nil (25592 44452 96672 222000) 0 nil])
([nil nil ((19333 . 19337) (19332 . 19334) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19332) (19329 . 19333)) nil (25592 44452 96670 732000) 0 nil])
([nil nil ((#("f" 0 1 (part-side javascript)) . -19333) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("i" 0 1 (part-side javascript)) . -19334) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("l" 0 1 (part-side javascript)) . -19335) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("t" 0 1 (part-side javascript)) . -19336) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 19337) nil (25592 44452 96667 982000) 0 nil])
([nil nil ((19332 . 19336)) nil (25592 44452 96657 136000) 0 nil])
([nil nil ((19337 . 19339)) nil (25592 44452 96656 208000) 0 nil])
([nil nil ((19338 . 19342)) nil (25592 44452 96655 108000) 0 nil])
([nil nil ((19345 . 19347) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19345) (19344 . 19346)) nil (25592 44452 96653 976000) 0 nil])
([nil nil ((19348 . 19358) (#("            " 0 12 (part-side javascript face whitespace-trailing)) . 19347) (undo-tree-id48 . -10) (undo-tree-id49 . 12) (19357 . 19359) (19346 . 19358)) nil (25592 44452 96652 140000) 0 nil])
([nil nil ((19359 . 19370)) nil (25592 44452 96648 438000) 0 nil])
([nil nil ((19375 . 19377) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19375) (19370 . 19376)) nil (25592 44452 96647 306000) 0 nil])
([nil nil ((19376 . 19387)) nil (25592 44452 96645 847000) 0 nil])
([nil nil ((#("          result.push({
" 0 17 (part-side javascript) 17 21 (part-side javascript face web-mode-function-call-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-8-face)) 22 23 (part-side javascript face (rainbow-delimiters-depth-9-face)) 23 24 (part-side javascript)) . 19413) (undo-tree-id46 . -14) (19401 . 19413) (#("          }
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-6-face)) 11 12 (part-side javascript)) . 19377) (undo-tree-id47 . -10) (19389 . 19413) 19387) nil (25592 44452 96644 436000) 0 nil])
([nil nil ((#("            value: filt['condition'].toUpperCase() + ' ' + filt['field'],
" 0 12 (part-side javascript) 12 17 (part-side javascript face web-mode-variable-name-face) 17 23 (part-side javascript) 23 24 (part-side javascript face (rainbow-delimiters-depth-8-face)) 24 25 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 25 34 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 34 35 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 35 36 (part-side javascript face (rainbow-delimiters-depth-8-face)) 36 37 (part-side javascript) 37 48 (part-side javascript face web-mode-function-call-face) 48 49 (part-side javascript face (rainbow-delimiters-depth-8-face)) 49 50 (part-side javascript face (rainbow-delimiters-depth-8-face)) 50 53 (part-side javascript) 53 54 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 54 55 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 55 56 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 56 63 (part-side javascript) 63 64 (part-side javascript face (rainbow-delimiters-depth-8-face)) 64 65 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 65 70 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 70 71 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 71 72 (part-side javascript face (rainbow-delimiters-depth-8-face)) 72 74 (part-side javascript)) . 19487) (19475 . 19487) (#("          }
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-8-face)) 11 12 (part-side javascript)) . 19401) (undo-tree-id45 . -10) (19413 . 19487) 19411) nil (25592 44452 96640 214000) 0 nil])
([nil nil ((#("            index: idxobj['i']
" 0 12 (part-side javascript) 12 17 (part-side javascript face web-mode-variable-name-face) 17 25 (part-side javascript) 25 26 (part-side javascript face (rainbow-delimiters-depth-8-face)) 26 27 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 27 28 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 28 29 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 29 30 (part-side javascript face (rainbow-delimiters-depth-8-face)) 30 31 (part-side javascript)) . 19518) (19506 . 19518) (#("          }
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-8-face)) 11 12 (part-side javascript)) . 19475) (undo-tree-id44 . -10) (19487 . 19518) 19485) nil (25592 44452 96636 531000) 0 nil])
([nil nil ((#("          })
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-5-face)) 11 12 (part-side javascript face (rainbow-delimiters-mismatched-face)) 12 13 (part-side javascript)) . 19531) (19519 . 19531) (#("          }
" 0 10 (part-side javascript) 10 11 (part-side javascript face (rainbow-delimiters-depth-8-face)) 11 12 (part-side javascript)) . 19506) (undo-tree-id43 . -10) (19518 . 19531) 19516) nil (25592 44452 96632 862000) 0 nil])
([nil nil ((19347 . 19359)) nil (25592 44452 96629 549000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19499 . 19500) (nil part-side javascript 19499 . 19500) (nil face (rainbow-delimiters-depth-7-face) 19499 . 19500) (nil part-side javascript 19498 . 19499) (nil face (rainbow-delimiters-depth-8-face) 19498 . 19499) (nil part-side javascript 19488 . 19498) (nil part-side javascript 19487 . 19488) (nil part-side javascript 19486 . 19487) (nil face (rainbow-delimiters-depth-9-face) 19486 . 19487) (nil part-side javascript 19485 . 19486) (nil part-token string 19485 . 19486) (nil syntax-table (15) 19485 . 19486) (nil font-lock-face web-mode-javascript-string-face 19485 . 19486) (nil part-side javascript 19484 . 19485) (nil part-token string 19484 . 19485) (nil font-lock-face web-mode-javascript-string-face 19484 . 19485) (nil part-side javascript 19483 . 19484) (nil part-token string 19483 . 19484) (nil syntax-table (15) 19483 . 19484) (nil font-lock-face web-mode-javascript-string-face 19483 . 19484) (nil part-side javascript 19482 . 19483) (nil face (rainbow-delimiters-depth-9-face) 19482 . 19483) (nil part-side javascript 19474 . 19482) (nil part-side javascript 19469 . 19474) (nil face web-mode-variable-name-face 19469 . 19474) (nil part-side javascript 19457 . 19469) (nil part-side javascript 19455 . 19457) (nil part-side javascript 19454 . 19455) (nil face (rainbow-delimiters-depth-9-face) 19454 . 19455) (nil part-side javascript 19453 . 19454) (nil part-token string 19453 . 19454) (nil syntax-table (15) 19453 . 19454) (nil font-lock-face web-mode-javascript-string-face 19453 . 19454) (nil part-side javascript 19448 . 19453) (nil part-token string 19448 . 19453) (nil font-lock-face web-mode-javascript-string-face 19448 . 19453) (nil part-side javascript 19447 . 19448) (nil part-token string 19447 . 19448) (nil syntax-table (15) 19447 . 19448) (nil font-lock-face web-mode-javascript-string-face 19447 . 19448) (nil part-side javascript 19446 . 19447) (nil face (rainbow-delimiters-depth-9-face) 19446 . 19447) (nil part-side javascript 19439 . 19446) (nil part-side javascript 19438 . 19439) (nil part-token string 19438 . 19439) (nil syntax-table (15) 19438 . 19439) (nil font-lock-face web-mode-javascript-string-face 19438 . 19439) (nil part-side javascript 19437 . 19438) (nil part-token string 19437 . 19438) (nil font-lock-face web-mode-javascript-string-face 19437 . 19438) (nil part-side javascript 19436 . 19437) (nil part-token string 19436 . 19437) (nil syntax-table (15) 19436 . 19437) (nil font-lock-face web-mode-javascript-string-face 19436 . 19437) (nil part-side javascript 19433 . 19436) (nil part-side javascript 19432 . 19433) (nil face (rainbow-delimiters-depth-9-face) 19432 . 19433) (nil part-side javascript 19431 . 19432) (nil face (rainbow-delimiters-depth-9-face) 19431 . 19432) (nil part-side javascript 19420 . 19431) (nil face web-mode-function-call-face 19420 . 19431) (nil part-side javascript 19419 . 19420) (nil part-side javascript 19418 . 19419) (nil face (rainbow-delimiters-depth-9-face) 19418 . 19419) (nil part-side javascript 19417 . 19418) (nil part-token string 19417 . 19418) (nil syntax-table (15) 19417 . 19418) (nil font-lock-face web-mode-javascript-string-face 19417 . 19418) (nil part-side javascript 19408 . 19417) (nil part-token string 19408 . 19417) (nil font-lock-face web-mode-javascript-string-face 19408 . 19417) (nil part-side javascript 19407 . 19408) (nil part-token string 19407 . 19408) (nil syntax-table (15) 19407 . 19408) (nil font-lock-face web-mode-javascript-string-face 19407 . 19408) (nil part-side javascript 19406 . 19407) (nil face (rainbow-delimiters-depth-9-face) 19406 . 19407) (nil part-side javascript 19400 . 19406) (nil part-side javascript 19395 . 19400) (nil face web-mode-variable-name-face 19395 . 19400) (nil part-side javascript 19383 . 19395) (nil part-side javascript 19382 . 19383) (nil part-side javascript 19381 . 19382) (nil face (rainbow-delimiters-depth-8-face) 19381 . 19382) (nil part-side javascript 19380 . 19381) (nil face (rainbow-delimiters-depth-7-face) 19380 . 19381) (nil part-side javascript 19376 . 19380) (nil face web-mode-function-call-face 19376 . 19380) (nil part-side javascript 19359 . 19376) (19359 . 19500)) nil (25592 44452 96623 716000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript)) . -19359) 19382) nil (25592 44452 96603 176000) 0 nil])
([nil nil ((19385 . 19387) 19398) nil (25592 44452 96601 925000) 0 nil])
([nil nil ((19461 . 19463) 19476) nil (25592 44452 96600 748000) 0 nil])
([nil nil ((19492 . 19494) 19494) nil (25592 44452 96599 563000) 0 nil])
([nil nil ((19332 . 19334) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19332) (19332 . 19333)) nil (25592 44452 96597 921000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 19333)) nil (25592 44452 96596 453000) 0 nil])
([nil nil ((19345 . 19346)) nil (25592 44452 96595 520000) 0 nil])
([nil nil ((19333 . 19335)) nil (25592 44452 96594 495000) 0 nil])
([nil nil ((19334 . 19338)) nil (25592 44452 96593 586000) 0 nil])
([nil nil ((19339 . 19343)) nil (25592 44452 96592 668000) 0 nil])
([nil nil ((#("]" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 19347) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 19347) (#("t" 0 1 (part-side javascript)) . 19347) (#("r" 0 1 (part-side javascript)) . 19347) (#("o" 0 1 (part-side javascript)) . 19347) (undo-tree-id42 . -1) (#("s" 0 1 (part-side javascript)) . 19347) (#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . 19347) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . 19347)) nil (25592 44452 96590 551000) 0 nil])
([nil nil ((19451 . 19456)) nil (25592 44452 96586 833000) 0 nil])
([nil nil ((19455 . 19456)) nil (25592 44452 96585 835000) 0 nil])
([nil nil ((19457 . 19460)) nil (25592 44452 96584 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19490 . 19491) (nil part-side javascript 19490 . 19491) (nil face (rainbow-delimiters-depth-9-face) 19490 . 19491) (nil part-side javascript 19489 . 19490) (nil face (rainbow-delimiters-depth-9-face) 19489 . 19490) (nil part-side javascript 19478 . 19489) (nil face web-mode-function-call-face 19478 . 19489) (nil part-side javascript 19477 . 19478) (nil part-side javascript 19476 . 19477) (nil face (rainbow-delimiters-depth-9-face) 19476 . 19477) (nil part-side javascript 19475 . 19476) (nil part-token string 19475 . 19476) (nil syntax-table (15) 19475 . 19476) (nil font-lock-face web-mode-javascript-string-face 19475 . 19476) (nil part-side javascript 19466 . 19475) (nil part-token string 19466 . 19475) (nil font-lock-face web-mode-javascript-string-face 19466 . 19475) (nil part-side javascript 19465 . 19466) (nil part-token string 19465 . 19466) (nil syntax-table (15) 19465 . 19466) (nil font-lock-face web-mode-javascript-string-face 19465 . 19466) (nil part-side javascript 19464 . 19465) (nil face (rainbow-delimiters-depth-9-face) 19464 . 19465) (nil part-side javascript 19460 . 19464) (19460 . 19491)) nil (25592 44452 96582 404000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19466) (undo-tree-id33 . -1) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19467) (undo-tree-id34 . -1) (#("n" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19468) (undo-tree-id35 . -1) (#("d" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19469) (undo-tree-id36 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19470) (undo-tree-id37 . -1) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19471) (undo-tree-id38 . -1) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19472) (undo-tree-id39 . -1) (#("o" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19473) (undo-tree-id40 . -1) (#("n" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -19474) (undo-tree-id41 . -1) 19475) nil (25592 44452 96573 873000) 0 nil])
([nil nil ((19466 . 19470)) nil (25592 44452 96552 461000) 0 nil])
([nil nil ((19575 . 19577) 19576) nil (25592 44452 96551 255000) 0 nil])
([nil nil ((19603 . 19605) 19604) nil (25592 44452 96549 681000) 0 nil])
([nil nil ((19679 . 19681) 19682) nil (25592 44452 96547 634000) 0 nil])
([nil nil ((19710 . 19712) 19712) nil (25592 44452 96540 158000) 0 nil])
([nil nil ((6791 . 6802) (t 25592 44452 147317 327000)) nil (25592 45247 663510 376000) 0 nil])
([nil nil ((6802 . 6813)) nil (25592 45247 663508 739000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-mismatched-face))) . 6815) (6814 . 6815) (6813 . 6815) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -6813) (6813 . 6814)) nil (25592 45247 663506 607000) 0 nil])
([nil nil ((6814 . 6816)) nil (25592 45247 663504 52000) 0 nil])
([nil nil ((6815 . 6819)) nil (25592 45247 663502 765000) 0 nil])
([nil nil ((6819 . 6822)) nil (25592 45247 663501 189000) 0 nil])
([nil nil ((#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6821) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 6822) nil (25592 45247 663499 528000) 0 nil])
([nil nil ((6821 . 6829)) nil (25592 45247 663495 28000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . -6828) (undo-tree-id65 . -1) 6829) nil (25592 45247 663492 398000) 0 nil])
([nil nil ((6828 . 6829)) nil (25592 45247 663481 127000) 0 nil])
([nil nil ((6830 . 6842)) nil (25592 45247 663473 464000) 0 nil])
([nil nil ((6927 . 6938) (t 25592 45247 721667 733000)) nil (25592 45298 888320 399000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6989 . 6990) (nil part-side javascript 6989 . 6990) (nil face (rainbow-delimiters-depth-6-face) 6989 . 6990) (nil part-side javascript 6977 . 6989) (nil part-side javascript 6976 . 6977) (nil part-token string 6976 . 6977) (nil syntax-table (15) 6976 . 6977) (nil font-lock-face web-mode-javascript-string-face 6976 . 6977) (nil part-side javascript 6973 . 6976) (nil part-token string 6973 . 6976) (nil font-lock-face web-mode-javascript-string-face 6973 . 6976) (nil part-side javascript 6969 . 6973) (nil part-token string 6969 . 6973) (nil font-lock-face web-mode-javascript-string-face 6969 . 6973) (nil part-side javascript 6962 . 6969) (nil part-token string 6962 . 6969) (nil font-lock-face web-mode-javascript-string-face 6962 . 6969) (nil part-side javascript 6961 . 6962) (nil part-token string 6961 . 6962) (nil syntax-table (15) 6961 . 6962) (nil font-lock-face web-mode-javascript-string-face 6961 . 6962) (nil part-side javascript 6960 . 6961) (nil face (rainbow-delimiters-depth-6-face) 6960 . 6961) (nil part-side javascript 6957 . 6960) (nil face web-mode-function-call-face 6957 . 6960) (nil part-side javascript 6939 . 6957) (nil part-side javascript 6938 . 6939) (6938 . 6990)) nil (25592 45298 888317 720000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("p" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("y" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#(" " 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("r" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("e" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("t" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("l" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("i" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962) (#("f" 0 1 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face)) . 6962)) nil (25592 45298 888309 607000) 0 nil])
([nil nil ((6962 . 6971)) nil (25592 45298 888306 325000) 0 nil])
([nil nil ((#("filtertype" 0 10 (part-side javascript)) . 6977) (undo-tree-id69 . -10) (undo-tree-id70 . -10) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . -10) (undo-tree-id75 . -10) (undo-tree-id76 . -9) (undo-tree-id77 . -9) (undo-tree-id78 . -9) (undo-tree-id79 . -9) (undo-tree-id80 . -9) (undo-tree-id81 . -9) (undo-tree-id82 . -9) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -10) (undo-tree-id116 . -10)) nil (25592 45298 888301 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7002 . 7003) (nil part-side javascript 7002 . 7003) (nil face (rainbow-delimiters-depth-7-face) 7002 . 7003) (nil part-side javascript 7001 . 7002) (nil part-token string 7001 . 7002) (nil syntax-table (15) 7001 . 7002) (nil font-lock-face web-mode-javascript-string-face 7001 . 7002) (nil part-side javascript 6992 . 7001) (nil part-token string 6992 . 7001) (nil font-lock-face web-mode-javascript-string-face 6992 . 7001) (nil part-side javascript 6991 . 6992) (nil part-token string 6991 . 6992) (nil syntax-table (15) 6991 . 6992) (nil font-lock-face web-mode-javascript-string-face 6991 . 6992) (nil part-side javascript 6990 . 6991) (nil face (rainbow-delimiters-depth-7-face) 6990 . 6991) (nil part-side javascript 6977 . 6990) (6977 . 7003)) nil (25592 45298 888215 162000) 0 nil])
([nil nil ((#("          " 0 10 (part-side javascript face whitespace-trailing)) . -6928) (undo-tree-id68 . -10) 7003) nil (25592 45298 888206 11000) 0 nil])
([nil nil ((#("
      console.log(this.checkFilterType())
      console.log(filtertype)
      console.log(cfilternoparent.type)
      console.log((filtertype in ['simple', 'sum', 'count', 'avg', 'min', 'max', 'show']))" 0 15 (part-side javascript) 15 18 (part-side javascript face web-mode-function-call-face) 18 19 (part-side javascript face (rainbow-delimiters-depth-4-face)) 19 23 (part-side javascript face web-mode-constant-face) 23 24 (part-side javascript) 24 39 (part-side javascript face web-mode-function-call-face) 39 40 (part-side javascript face (rainbow-delimiters-depth-5-face)) 40 41 (part-side javascript face (rainbow-delimiters-depth-5-face)) 41 42 (part-side javascript face (rainbow-delimiters-depth-4-face)) 42 57 (part-side javascript) 57 60 (part-side javascript face web-mode-function-call-face) 60 61 (part-side javascript face (rainbow-delimiters-depth-4-face)) 61 71 (part-side javascript) 71 72 (part-side javascript face (rainbow-delimiters-depth-4-face)) 72 87 (part-side javascript) 87 90 (part-side javascript face web-mode-function-call-face) 90 91 (part-side javascript face (rainbow-delimiters-depth-4-face)) 91 111 (part-side javascript) 111 112 (part-side javascript face (rainbow-delimiters-depth-4-face)) 112 127 (part-side javascript) 127 130 (part-side javascript face web-mode-function-call-face) 130 131 (part-side javascript face (rainbow-delimiters-depth-4-face)) 131 132 (part-side javascript face (rainbow-delimiters-depth-5-face)) 132 143 (part-side javascript) 143 145 (part-side javascript face web-mode-keyword-face) 145 146 (part-side javascript) 146 147 (part-side javascript face (rainbow-delimiters-depth-6-face)) 147 148 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 148 154 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 154 155 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 155 157 (part-side javascript) 157 158 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 158 161 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 161 162 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 162 164 (part-side javascript) 164 165 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 165 170 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 170 171 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 171 173 (part-side javascript) 173 174 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 174 177 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 177 178 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 178 180 (part-side javascript) 180 181 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 181 184 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 184 185 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 185 187 (part-side javascript) 187 188 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 188 191 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 191 192 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 192 194 (part-side javascript) 194 195 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 195 199 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 199 200 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 200 201 (part-side javascript face (rainbow-delimiters-depth-6-face)) 201 202 (part-side javascript face (rainbow-delimiters-depth-5-face)) 202 203 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 5867) (undo-tree-id130 . -203) (undo-tree-id131 . -1) (undo-tree-id132 . -203) (t 25592 45298 945641 406000)) nil (25592 45560 359443 322000) 0 nil])
([nil nil ((#("
          console.log('condition!: ', currentfilter['condition'])" 0 19 (part-side javascript) 19 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-6-face)) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 36 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 36 37 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 37 39 (part-side javascript) 39 52 (part-side javascript) 52 53 (part-side javascript face (rainbow-delimiters-depth-7-face)) 53 54 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 54 63 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 63 64 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 64 65 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-7-face)) 65 66 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-6-face))) . 6725) (undo-tree-id123 . -66) (undo-tree-id124 . -33) (undo-tree-id125 . -1) (undo-tree-id126 . -39) (undo-tree-id127 . -39) (undo-tree-id128 . -66) (undo-tree-id129 . -66)) nil (25592 45560 361330 621000) 0 nil])
([nil nil ((#("
          console.log('filter type!: ', filtertype)" 0 1 (part-side javascript syntax-table (15)) 1 19 (part-side javascript) 19 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-6-face)) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 31 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 31 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 38 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 38 39 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 39 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6588) (undo-tree-id133 . -52) (undo-tree-id134 . -35) (undo-tree-id135 . -52) (undo-tree-id136 . -52) (undo-tree-id137 . -1) (undo-tree-id138 . -52) (undo-tree-id139 . -52) (undo-tree-id140 . -52) (undo-tree-id141 . -52) (undo-tree-id142 . -52) (undo-tree-id143 . -52) (undo-tree-id144 . -52) (undo-tree-id145 . -52) (undo-tree-id146 . -52) (undo-tree-id147 . -52) (undo-tree-id148 . -52) (undo-tree-id149 . -52)) nil (25592 45564 168407 118000) 0 nil] [nil nil ((#("
          console.log('filter type!: ', filtertype)" 0 1 (part-side javascript syntax-table (15)) 1 19 (part-side javascript) 19 22 (part-side javascript face web-mode-function-call-face) 22 23 (part-side javascript face (rainbow-delimiters-depth-6-face)) 23 24 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 24 31 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 31 35 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 35 38 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 38 39 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 39 51 (part-side javascript) 51 52 (part-side javascript face (rainbow-delimiters-depth-6-face))) . 6588) (undo-tree-id117 . -52) (undo-tree-id118 . -35) (undo-tree-id119 . -1) (undo-tree-id120 . -52) (undo-tree-id121 . -52) (undo-tree-id122 . -52)) ((6588 . 6640)) (25592 45560 359425 245000) 0 nil])
([nil nil ((#("
      console.log(this.checkEdit)" 0 15 (part-side javascript) 15 18 (face web-mode-function-call-face part-side javascript) 18 19 (face (rainbow-delimiters-depth-4-face) part-side javascript) 19 23 (face web-mode-constant-face part-side javascript) 23 33 (part-side javascript) 33 34 (face (rainbow-delimiters-depth-4-face) part-side javascript)) . 10378) (undo-tree-id0 . -1) (undo-tree-id1 . -34) (undo-tree-id2 . -34) (undo-tree-id3 . -34) (t 25597 54505 692103 341000)) nil (25600 49053 785363 419000) 0 nil])
nil
([nil nil ((#("filtertype == 'simple' ? 'show' :" 0 14 (part-side javascript) 14 15 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 15 21 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 21 22 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 22 25 (part-side javascript) 25 26 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 26 30 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 30 31 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 31 33 (part-side javascript)) . 6628) (undo-tree-id11 . -33) (undo-tree-id12 . -33) (undo-tree-id13 . -33) (t 25600 49053 905856 611000)) nil (25601 56468 473106 363000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -6627) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 6628) nil (25601 56468 473100 720000) 0 nil])
([nil nil ((#("simple', " 0 6 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 6 7 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 7 9 (part-side javascript)) . 6307) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9)) nil (25601 56468 473094 933000) 0 nil])
([nil current ((#("'" 0 1 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face)) . -6306) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 6307) nil (25601 56468 473085 88000) 0 nil])
nil
