(undo-tree-save-format-version . 1)
"9ccb57e3acd6bec301d103787942648b9fd171b6"
[nil nil nil nil (25498 63763 299316 478000) 0 nil]
([nil nil ((#("- reload button
- add reload shortcut description
- universal filter weird bug (Henrik investigates further)
- move shortcut button up
- add shortcut key to button description

- move table modifies button to the right
- number of pages instead of subset?
- desc of row field should be moved or redesigned?
- move table descriptions to bottom?
- troubleshooting (docs, faq)
- clear cache popup (when new update applied)
- docs universal filter" 0 1 (markdown-list-item ((1 16 0 2 "- " nil (1 3 1 1 1 2 2 3))) fontified t face markdown-list-face) 1 15 (markdown-list-item ((1 16 0 2 "- " nil (1 3 1 1 1 2 2 3))) fontified t) 15 16 (fontified t font-lock-multiline t) 16 17 (markdown-list-item ((17 50 0 2 "- " nil (17 19 17 17 17 18 18 19))) fontified t face markdown-list-face) 17 49 (markdown-list-item ((17 50 0 2 "- " nil (17 19 17 17 17 18 18 19))) fontified t) 49 50 (fontified t font-lock-multiline t) 50 51 (markdown-list-item ((51 109 0 2 "- " nil (51 53 51 51 51 52 52 53))) fontified t face markdown-list-face) 51 108 (markdown-list-item ((51 109 0 2 "- " nil (51 53 51 51 51 52 52 53))) fontified t) 108 109 (fontified t font-lock-multiline t) 109 110 (markdown-list-item ((110 135 0 2 "- " nil (110 112 110 110 110 111 111 112))) fontified t face markdown-list-face) 110 134 (markdown-list-item ((110 135 0 2 "- " nil (110 112 110 110 110 111 111 112))) fontified t) 134 135 (fontified t font-lock-multiline t) 135 136 (markdown-list-item ((136 176 0 2 "- " nil (136 138 136 136 136 137 137 138))) fontified t face markdown-list-face) 136 175 (markdown-list-item ((136 176 0 2 "- " nil (136 138 136 136 136 137 137 138))) fontified t) 175 176 (fontified t font-lock-multiline t) 176 177 (fontified t) 177 178 (markdown-list-item ((178 219 0 2 "- " nil (178 180 178 178 178 179 179 180))) fontified t face markdown-list-face) 178 218 (markdown-list-item ((178 219 0 2 "- " nil (178 180 178 178 178 179 179 180))) fontified t) 218 219 (fontified t font-lock-multiline t) 219 220 (markdown-list-item ((220 256 0 2 "- " nil (220 222 220 220 220 221 221 222))) fontified t face markdown-list-face) 220 255 (markdown-list-item ((220 256 0 2 "- " nil (220 222 220 220 220 221 221 222))) fontified t) 255 256 (fontified t font-lock-multiline t) 256 257 (markdown-list-item ((257 307 0 2 "- " nil (257 259 257 257 257 258 258 259))) fontified t face markdown-list-face) 257 306 (markdown-list-item ((257 307 0 2 "- " nil (257 259 257 257 257 258 258 259))) fontified t) 306 307 (fontified t font-lock-multiline t) 307 308 (markdown-list-item ((308 344 0 2 "- " nil (308 310 308 308 308 309 309 310))) fontified t face markdown-list-face) 308 343 (markdown-list-item ((308 344 0 2 "- " nil (308 310 308 308 308 309 309 310))) fontified t) 343 344 (fontified t font-lock-multiline t) 344 345 (markdown-list-item ((345 374 0 2 "- " nil (345 347 345 345 345 346 346 347))) fontified t face markdown-list-face) 345 373 (markdown-list-item ((345 374 0 2 "- " nil (345 347 345 345 345 346 346 347))) fontified t) 373 374 (fontified t font-lock-multiline t) 374 375 (markdown-list-item ((375 420 0 2 "- " nil (375 377 375 375 375 376 376 377))) fontified t face markdown-list-face) 375 419 (markdown-list-item ((375 420 0 2 "- " nil (375 377 375 375 375 376 376 377))) fontified t) 419 420 (fontified t font-lock-multiline t) 420 421 (markdown-list-item ((421 444 0 2 "- " nil (421 423 421 421 421 422 422 423))) fontified t face markdown-list-face) 421 443 (markdown-list-item ((421 444 0 2 "- " nil (421 423 421 421 421 422 422 423))) fontified t)) . 1) (undo-tree-id328 . -16) (undo-tree-id329 . -443) (undo-tree-id330 . -443) (undo-tree-id331 . -443) (undo-tree-id332 . -443) (t 25476 45091 956818 0)) nil (25498 63763 299313 145000) 0 nil])
([nil nil ((1 . 4)) nil (25498 63763 299301 11000) 0 nil])
([nil nil ((#("R" 0 1 (fontified defer face markdown-header-delimiter-face markdown-heading (1 4 nil nil nil nil nil nil 1 3 3 4 4 4 #<buffer review_2022_12_15.md>) markdown-heading-1-atx (1 4 nil nil nil nil nil nil 1 3 3 4 4 4 #<buffer review_2022_12_15.md>))) . -3) (undo-tree-id327 . -1) 4) nil (25498 63763 299298 673000) 0 nil])
([nil nil ((3 . 14)) nil (25498 63763 299291 526000) 0 nil])
([nil nil ((14 . 24)) nil (25498 63763 299289 601000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-heading (1 24 nil nil nil nil nil nil 1 3 3 23 23 24 #<buffer review_2022_12_15.md>) markdown-heading-1-atx (1 24 nil nil nil nil nil nil 1 3 3 23 23 24 #<buffer review_2022_12_15.md>) face markdown-header-delimiter-face)) . -23) (undo-tree-id326 . -1) 24) nil (25498 63763 299287 643000) 0 nil])
([nil nil ((23 . 24)) nil (25498 63763 299282 423000) 0 nil])
([nil nil ((25 . 27)) nil (25498 63763 299280 619000) 0 nil])
([nil nil ((27 . 33)) nil (25498 63763 299279 54000) 0 nil])
([nil nil ((#("I" 0 1 (fontified defer markdown-list-item ((25 28 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -27) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("n" 0 1 (fontified t markdown-list-item ((25 29 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -28) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("g" 0 1 (fontified t markdown-list-item ((25 30 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -29) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("e" 0 1 (fontified t markdown-list-item ((25 31 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -30) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("n" 0 1 (fontified t markdown-list-item ((25 32 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -31) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t markdown-list-item ((25 33 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -32) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 33) nil (25498 63763 299273 323000) 0 nil])
([nil nil ((27 . 45)) nil (25498 63763 299203 555000) 0 nil])
([nil nil ((#("K" 0 1 (fontified t markdown-list-item ((25 28 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -27) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("u" 0 1 (fontified t markdown-list-item ((25 29 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -28) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("n" 0 1 (fontified defer markdown-list-item ((25 30 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -29) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t markdown-list-item ((25 31 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -30) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("i" 0 1 (fontified defer markdown-list-item ((25 32 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -31) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(" " 0 1 (fontified defer markdown-list-item ((25 33 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -32) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("a" 0 1 (fontified defer markdown-list-item ((25 34 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -33) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("n" 0 1 (fontified defer markdown-list-item ((25 35 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -34) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("a" 0 1 (fontified nil markdown-list-item ((25 36 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -35) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("l" 0 1 (fontified defer markdown-list-item ((25 37 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -36) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("y" 0 1 (fontified defer markdown-list-item ((25 38 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -37) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("s" 0 1 (fontified defer markdown-list-item ((25 39 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -38) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("e" 0 1 (fontified defer markdown-list-item ((25 40 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -39) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("t" 0 1 (fontified defer markdown-list-item ((25 41 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -40) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("o" 0 1 (fontified defer markdown-list-item ((25 42 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -41) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("o" 0 1 (fontified defer markdown-list-item ((25 43 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -42) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("l" 0 1 (fontified t markdown-list-item ((25 44 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -43) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#(" " 0 1 (fontified t markdown-list-item ((25 45 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -44) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 45) nil (25498 63763 299190 467000) 0 nil])
([nil nil ((27 . 35)) nil (25498 63763 299048 842000) 0 nil])
([nil nil ((35 . 47)) nil (25498 63763 299046 745000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((25 47 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -46) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 47) nil (25498 63763 299044 243000) 0 nil])
([nil nil ((46 . 56)) nil (25498 63763 299035 439000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t markdown-list-item ((25 54 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -53) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("p" 0 1 (fontified t markdown-list-item ((25 55 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -54) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("l" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((25 56 0 2 "- " nil (25 27 25 25 25 26 26 27))))) . -55) (undo-tree-id249 . -1) (undo-tree-id250 . -1) 56) nil (25498 63763 299031 654000) 0 nil])
([nil nil ((53 . 72)) nil (25498 63763 299011 160000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((25 72 0 2 "- " nil (25 27 25 25 25 26 26 27))) font-lock-multiline t)) . -71) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 72) nil (25498 63763 299008 374000) 0 nil])
([nil nil ((71 . 72)) nil (25498 63763 298998 251000) 0 nil])
([nil nil ((72 . 74)) nil (25498 63763 298996 547000) 0 nil])
([nil nil ((74 . 95)) nil (25498 63763 298994 785000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((72 95 0 2 "- " nil (72 74 72 72 72 73 73 74))) font-lock-multiline t)) . -94) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 95) nil (25498 63763 298991 912000) 0 nil])
([nil nil ((94 . 95)) nil (25498 63763 298982 485000) 0 nil])
([nil nil ((95 . 97)) nil (25498 63763 298980 476000) 0 nil])
([nil nil ((97 . 101)) nil (25498 63763 298978 242000) 0 nil])
([nil nil ((#("i" 0 1 (fontified defer markdown-list-item ((95 98 0 2 "- " nil (95 97 95 95 95 96 96 97))))) . -97) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("k" 0 1 (fontified t markdown-list-item ((95 99 0 2 "- " nil (95 97 95 95 95 96 96 97))) font-lock-multiline t)) . -98) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("k" 0 1 (fontified t markdown-list-item ((95 100 0 2 "- " nil (95 97 95 95 95 96 96 97))) font-lock-multiline t)) . -99) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("e" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((95 101 0 2 "- " nil (95 97 95 95 95 96 96 97))))) . -100) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 101) nil (25498 63763 298973 575000) 0 nil])
([nil nil ((97 . 118)) nil (25498 63763 298946 268000) 0 nil])
([nil nil ((118 . 136)) nil (25498 63763 298944 376000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((95 136 0 2 "- " nil (95 97 95 95 95 96 96 97))) font-lock-multiline t)) . -135) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 136) nil (25498 63763 298942 314000) 0 nil])
([nil nil ((135 . 136)) nil (25498 63763 298932 385000) 0 nil])
([nil nil ((136 . 138)) nil (25498 63763 298930 691000) 0 nil])
([nil nil ((138 . 144)) nil (25498 63763 298929 129000) 0 nil])
([nil nil ((144 . 153)) nil (25498 63763 298927 229000) 0 nil])
([nil nil ((153 . 174)) nil (25498 63763 298925 229000) 0 nil])
([nil nil ((174 . 181)) nil (25498 63763 298923 193000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t markdown-list-item ((136 174 0 2 "- " nil (136 138 136 136 136 137 137 138))) font-lock-multiline t)) . -173) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("x" 0 1 (fontified defer markdown-list-item ((136 175 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -174) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("i" 0 1 (fontified defer markdown-list-item ((136 176 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -175) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("s" 0 1 (fontified defer markdown-list-item ((136 177 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -176) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("i" 0 1 (fontified defer markdown-list-item ((136 178 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -177) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("t" 0 1 (fontified defer markdown-list-item ((136 179 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -178) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("i" 0 1 (fontified t markdown-list-item ((136 180 0 2 "- " nil (136 138 136 136 136 137 137 138))) font-lock-multiline t)) . -179) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("n" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((136 181 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -180) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 181) nil (25498 63763 298914 60000) 0 nil])
([nil nil ((173 . 189)) nil (25498 63763 298860 554000) 0 nil])
([nil nil ((189 . 193)) nil (25498 63763 298859 507000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t markdown-list-item ((136 191 0 2 "- " nil (136 138 136 136 136 137 137 138))) font-lock-multiline t)) . -190) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("i" 0 1 (fontified t markdown-list-item ((136 192 0 2 "- " nil (136 138 136 136 136 137 137 138))) font-lock-multiline t)) . -191) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("l" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((136 193 0 2 "- " nil (136 138 136 136 136 137 137 138))))) . -192) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 193) nil (25498 63763 298857 190000) 0 nil])
([nil nil ((190 . 197)) nil (25498 63763 298846 128000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((136 197 0 2 "- " nil (136 138 136 136 136 137 137 138))) font-lock-multiline t)) . -196) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 197) nil (25498 63763 298844 628000) 0 nil])
([nil nil ((196 . 197)) nil (25498 63763 298840 74000) 0 nil])
([nil nil ((197 . 202)) nil (25498 63763 298838 950000) 0 nil])
([nil nil ((#("A" 0 1 (fontified defer markdown-list-item ((197 200 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -199) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("g" 0 1 (fontified t markdown-list-item ((197 201 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -200) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("g" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((197 202 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -201) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 202) nil (25498 63763 298836 624000) 0 nil])
([nil nil ((199 . 214)) nil (25498 63763 298822 319000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t markdown-list-item ((197 210 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -209) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("t" 0 1 (fontified defer markdown-list-item ((197 211 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -210) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("i" 0 1 (fontified t markdown-list-item ((197 212 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -211) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("o" 0 1 (fontified t markdown-list-item ((197 213 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -212) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("n" 0 1 (fontified defer font-lock-multiline t markdown-list-item ((197 214 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -213) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 214) nil (25498 63763 298818 881000) 0 nil])
([nil nil ((#("n" 0 1 (fontified defer markdown-list-item ((197 200 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -199) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("e" 0 1 (fontified t markdown-list-item ((197 201 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -200) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("w" 0 1 (fontified t markdown-list-item ((197 202 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -201) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t markdown-list-item ((197 203 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -202) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("a" 0 1 (fontified t markdown-list-item ((197 204 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -203) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("g" 0 1 (fontified nil markdown-list-item ((197 205 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -204) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("g" 0 1 (fontified nil markdown-list-item ((197 206 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -205) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("r" 0 1 (fontified nil markdown-list-item ((197 207 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -206) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("e" 0 1 (fontified defer markdown-list-item ((197 208 0 2 "- " nil (197 199 197 197 197 198 198 199))))) . -207) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("g" 0 1 (fontified t markdown-list-item ((197 209 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -208) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 209) nil (25498 63763 298780 17000) 0 nil])
([nil nil ((199 . 220)) nil (25498 63763 298726 74000) 0 nil])
([nil nil ((220 . 241)) nil (25498 63763 298725 173000) 0 nil])
([nil nil ((241 . 255)) nil (25498 63763 298724 332000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((197 255 0 2 "- " nil (197 199 197 197 197 198 198 199))) font-lock-multiline t)) . -254) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 255) nil (25498 63763 298723 30000) 0 nil])
([nil nil ((254 . 255)) nil (25498 63763 298718 365000) 0 nil])
([nil nil ((255 . 257)) nil (25498 63763 298717 331000) 0 nil])
([nil nil ((257 . 278)) nil (25498 63763 298716 331000) 0 nil])
([nil nil ((278 . 290)) nil (25498 63763 298715 274000) 0 nil])
([nil nil ((#("h" 0 1 (fontified nil markdown-list-item ((255 282 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -281) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("o" 0 1 (fontified nil markdown-list-item ((255 283 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -282) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("u" 0 1 (fontified t markdown-list-item ((255 284 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -283) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("l" 0 1 (fontified defer markdown-list-item ((255 285 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -284) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("d" 0 1 (fontified defer markdown-list-item ((255 286 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -285) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#(" " 0 1 (fontified defer markdown-list-item ((255 287 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -286) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("b" 0 1 (fontified t markdown-list-item ((255 288 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -287) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("e" 0 1 (fontified t markdown-list-item ((255 289 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -288) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t markdown-list-item ((255 290 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -289) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 290) nil (25498 63763 298710 157000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t markdown-list-item ((255 281 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -280) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 281) nil (25498 63763 298647 655000) 0 nil])
([nil nil ((280 . 301)) nil (25498 63763 298642 980000) 0 nil])
([nil nil ((301 . 302)) nil (25498 63763 298641 814000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((255 302 0 2 "- " nil (255 257 255 255 255 256 256 257))) font-lock-multiline t)) . -301) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 302) nil (25498 63763 298639 697000) 0 nil])
([nil nil ((301 . 302)) nil (25498 63763 298625 9000) 0 nil])
([nil nil ((302 . 305)) nil (25498 63763 298623 158000) 0 nil])
([nil nil ((#("." 0 1 (fontified defer markdown-list-item ((255 303 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -302) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("-" 0 1 (fontified t markdown-list-item ((255 304 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -303) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t markdown-list-item ((255 305 0 2 "- " nil (255 257 255 255 255 256 256 257))))) . -304) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 305) nil (25498 63763 298616 767000) 0 nil])
([nil nil ((302 . 304)) nil (25498 63763 298594 853000) 0 nil])
([nil nil ((304 . 325)) nil (25498 63763 298593 848000) 0 nil])
([nil nil ((325 . 346)) nil (25498 63763 298592 944000) 0 nil])
([nil nil ((346 . 354)) nil (25498 63763 298591 837000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t markdown-list-item ((302 349 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -348) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("l" 0 1 (fontified defer markdown-list-item ((302 350 0 2 "- " nil (302 304 302 302 302 303 303 304))))) . -349) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("e" 0 1 (fontified t markdown-list-item ((302 351 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -350) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("r" 0 1 (fontified t markdown-list-item ((302 352 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -351) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("s" 0 1 (fontified t markdown-list-item ((302 353 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -352) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t markdown-list-item ((302 354 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -353) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 354) nil (25498 63763 298588 403000) 0 nil])
([nil nil ((348 . 354)) nil (25498 63763 298564 25000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((302 354 0 2 "- " nil (302 304 302 302 302 303 303 304))) font-lock-multiline t)) . -353) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 354) nil (25498 63763 298562 345000) 0 nil])
([nil nil ((353 . 354)) nil (25498 63763 298557 191000) 0 nil])
([nil nil ((353 . 354)) nil (25498 63763 298555 893000) 0 nil])
([nil nil ((354 . 370)) nil (25498 63763 298554 710000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t markdown-list-item ((354 366 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -365) (undo-tree-id49 . -1) (#("o" 0 1 (fontified t markdown-list-item ((354 367 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -366) (undo-tree-id50 . -1) (#("r" 0 1 (fontified t markdown-list-item ((354 368 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -367) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t markdown-list-item ((354 369 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -368) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t markdown-list-item ((354 370 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -369) (undo-tree-id53 . -1) 370) nil (25498 63763 298552 377000) 0 nil])
([nil nil ((365 . 385)) nil (25498 63763 298543 397000) 0 nil])
([nil nil ((385 . 387)) nil (25498 63763 298542 425000) 0 nil])
([nil nil ((#("r" 0 1 (fontified defer markdown-list-item ((354 387 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -386) (undo-tree-id48 . -1) 387) nil (25498 63763 298541 232000) 0 nil])
([nil nil ((386 . 394)) nil (25498 63763 298539 22000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((354 394 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -393) (undo-tree-id47 . -1) 394) nil (25498 63763 298537 703000) 0 nil])
([nil nil ((393 . 399)) nil (25498 63763 298535 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((354 399 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -398) (undo-tree-id46 . -1) 399) nil (25498 63763 298534 283000) 0 nil])
([nil nil ((398 . 399)) nil (25498 63763 298532 59000) 0 nil])
([nil nil ((399 . 401)) nil (25498 63763 298531 198000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t markdown-list-item ((354 400 0 2 "- " nil (354 356 354 354 354 355 355 356))) font-lock-multiline t)) . -398) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("-" 0 1 (fontified t markdown-list-item ((354 400 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -399) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t markdown-list-item ((399 401 0 2 "- " nil (399 401 399 399 399 400 400 401))))) . -400) (undo-tree-id45 . -1) 401) nil (25498 63763 298529 337000) 0 nil])
([nil nil ((398 . 399)) nil (25498 63763 298500 801000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t markdown-list-item ((354 399 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -398) (undo-tree-id40 . -1) 399) nil (25498 63763 298499 671000) 0 nil])
([nil nil ((398 . 399)) nil (25498 63763 298497 287000) 0 nil])
([nil nil ((399 . 402)) nil (25498 63763 298496 311000) 0 nil])
([nil nil ((#("æ" 0 1 (fontified t markdown-list-item ((354 401 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -400) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t markdown-list-item ((354 402 0 2 "- " nil (354 356 354 354 354 355 355 356))))) . -401) (undo-tree-id39 . -1) 402) nil (25498 63763 298494 882000) 0 nil])
([nil nil ((400 . 401)) nil (25498 63763 298491 185000) 0 nil])
([nil nil ((401 . 418)) nil (25498 63763 298490 267000) 0 nil])
([nil nil ((#("s" 0 1 (fontified defer markdown-list-item ((399 417 0 2 "- " nil (399 401 399 399 399 400 400 401))))) . -416) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t markdown-list-item ((399 418 0 2 "- " nil (399 401 399 399 399 400 400 401))))) . -417) (undo-tree-id37 . -1) 418) nil (25498 63763 298488 757000) 0 nil])
([nil nil ((416 . 424)) nil (25498 63763 298484 867000) 0 nil])
([nil nil ((424 . 425)) nil (25498 63763 298483 929000) 0 nil])
([nil nil ((425 . 426)) nil (25498 63763 298482 910000) 0 nil])
([nil nil ((426 . 427)) nil (25498 63763 298481 604000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t markdown-list-item ((399 426 0 2 "- " nil (399 401 399 399 399 400 400 401))) font-lock-multiline t)) . -424) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("-" 0 1 (fontified t markdown-list-item ((399 426 0 2 "- " nil (399 401 399 399 399 400 400 401))))) . -425) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t markdown-list-item ((425 427 0 2 "- " nil (425 427 425 425 425 426 426 427))))) . -426) (undo-tree-id35 . -1) 427) nil (25498 63763 298478 799000) 0 nil])
([nil current ((#(" " 0 1 (fontified t markdown-list-item ((399 424 0 2 "- " nil (399 401 399 399 399 400 400 401))))) . -423) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 424) nil (25498 63763 298465 647000) 0 nil])
nil
