(undo-tree-save-format-version . 1)
"40a950cabdd94b1ce4b439115e3c379a011b40a9"
[nil current nil nil (25681 7292 347269 942000) 0 nil]
([nil nil ((#("class=\"elevation-1\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 18 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11986) (undo-tree-id0 . -19) (undo-tree-id2 . -19) (t 25642 38060 366165 411000)) ((11986 . 12005)) (25681 7291 816744 431000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12005 . 12006) (nil tag-attr t 12005 . 12006) (nil tag-attr-end 5 12005 . 12006) (nil tag-name "v-data-table" 12005 . 12006) (nil tag-type start 12005 . 12006) (nil font-lock-face web-mode-html-attr-value-face 12005 . 12006) (nil tag-attr t 11992 . 12005) (nil tag-name "v-data-table" 11992 . 12005) (nil tag-type start 11992 . 12005) (nil font-lock-face web-mode-html-attr-value-face 11992 . 12005) (nil tag-attr t 11991 . 11992) (nil tag-name "v-data-table" 11991 . 11992) (nil tag-type start 11991 . 11992) (nil font-lock-face web-mode-html-attr-equal-face 11991 . 11992) (nil tag-attr t 11987 . 11991) (nil tag-name "v-data-table" 11987 . 11991) (nil tag-type start 11987 . 11991) (nil font-lock-face web-mode-html-attr-name-face 11987 . 11991) (nil tag-attr-beg 0 11986 . 11987) (nil tag-attr t 11986 . 11987) (nil tag-name "v-data-table" 11986 . 11987) (nil tag-type start 11986 . 11987) (nil font-lock-face web-mode-html-attr-name-face 11986 . 11987) (11986 . 12006)) ((#("class=\"zebrastripes\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 19 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (rear-nonsticky nil tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11986) (nil tag-name "v-data-table" 11986 . 11987) (nil tag-name "v-data-table" 11987 . 11991) (nil tag-name "v-data-table" 11991 . 11992) (nil tag-name "v-data-table" 11992 . 12005) (nil tag-name "v-data-table" 12005 . 12006) (nil rear-nonsticky t 12005 . 12006)) (25681 7290 130300 309000) 0 nil])
([nil nil ((#("
                class=\"zebrastripes\"" 0 17 (tag-name "v-data-table" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 18 22 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 36 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11969) (undo-tree-id3 . -37) (undo-tree-id4 . -1) (undo-tree-id6 . -17) (undo-tree-id8 . -37) (undo-tree-id10 . -37) (undo-tree-id12 . -37) (undo-tree-id14 . -37) (undo-tree-id16 . -37) (undo-tree-id18 . -17) (undo-tree-id19 . -37) (t 25681 6537 772260 801000)) ((11969 . 12006)) (25681 7289 229522 252000) 0 nil])
([nil nil ((11969 . 11986)) ((#("
                " 0 1 (tag-name "v-data-table" tag-type start) 1 17 (tag-name "v-data-table" tag-type start)) . 11969) (undo-tree-id762 . -17) (undo-tree-id763 . -17) (undo-tree-id764 . -17) (undo-tree-id765 . -17) (undo-tree-id766 . -17) (undo-tree-id767 . -1) (undo-tree-id768 . -17) (undo-tree-id769 . -17) (undo-tree-id770 . -17) (undo-tree-id771 . -17) (undo-tree-id772 . -17) (undo-tree-id773 . -17) (undo-tree-id774 . -17) (undo-tree-id775 . -17) (undo-tree-id776 . -17) (undo-tree-id777 . -17) (undo-tree-id778 . -17) (undo-tree-id779 . -17) (undo-tree-id780 . -17) (undo-tree-id781 . -17) (undo-tree-id782 . -17) (undo-tree-id783 . -17) (undo-tree-id784 . -17) (undo-tree-id785 . -17) (undo-tree-id786 . -17) (undo-tree-id787 . -17) (undo-tree-id788 . -17) (undo-tree-id789 . -17) (undo-tree-id790 . -17) (undo-tree-id791 . -17) (undo-tree-id792 . -17) (undo-tree-id793 . -17) (undo-tree-id794 . -17) (undo-tree-id795 . -17) (undo-tree-id796 . -17) (undo-tree-id797 . -17) (undo-tree-id798 . -17) (undo-tree-id799 . -17) (undo-tree-id800 . -17) (undo-tree-id801 . -17) (undo-tree-id802 . -17) (undo-tree-id803 . -17) (undo-tree-id804 . -17) (undo-tree-id805 . -17) (undo-tree-id806 . -17) (undo-tree-id807 . -17) (undo-tree-id808 . -17) (undo-tree-id809 . -17) (undo-tree-id810 . -17) (undo-tree-id811 . -17) (undo-tree-id812 . -17) (undo-tree-id813 . -17) (undo-tree-id814 . -17) (undo-tree-id815 . -17) (undo-tree-id816 . -17) (undo-tree-id817 . -1) (undo-tree-id818 . -17) (undo-tree-id819 . -17) (undo-tree-id820 . -17) (undo-tree-id821 . -17) (undo-tree-id822 . -17) (undo-tree-id823 . -17) (undo-tree-id824 . -17) (undo-tree-id825 . -17) (undo-tree-id826 . -17) (undo-tree-id827 . -17) (undo-tree-id828 . -17) (undo-tree-id829 . -17) (undo-tree-id830 . -17) (undo-tree-id831 . -17) (undo-tree-id832 . -17) (undo-tree-id833 . -17) (undo-tree-id834 . -17) (undo-tree-id835 . -17) (undo-tree-id836 . -17)) (25681 7288 655174 180000) 0 nil] [nil nil ((#("class=\"v-data-table__divider\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 28 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12473) (undo-tree-id24 . -29) (undo-tree-id25 . -29) (undo-tree-id26 . -29) (undo-tree-id27 . -29) (t 25681 6653 716097 651000)) ((12473 . 12502)) (25681 6887 114489 996000) 0 nil])
([nil nil ((11993 . 12008) (11986 . 11994)) ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11986) (undo-tree-id657 . -7) (undo-tree-id658 . -8) (undo-tree-id659 . -8) (undo-tree-id660 . -7) (undo-tree-id661 . -7) (undo-tree-id662 . -8) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -7) (undo-tree-id666 . -7) (undo-tree-id667 . -7) (undo-tree-id668 . -7) (undo-tree-id669 . -7) (undo-tree-id670 . -7) (undo-tree-id671 . -7) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -7) (undo-tree-id675 . -7) (undo-tree-id676 . -7) (undo-tree-id677 . -7) (undo-tree-id678 . -7) (undo-tree-id679 . -7) (undo-tree-id680 . -7) (undo-tree-id681 . -7) (undo-tree-id682 . -7) (undo-tree-id683 . -7) (undo-tree-id684 . -7) (undo-tree-id685 . -7) (undo-tree-id686 . -7) (undo-tree-id687 . -7) (undo-tree-id688 . -7) (undo-tree-id689 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (undo-tree-id692 . -7) (undo-tree-id693 . -7) (undo-tree-id694 . -7) (undo-tree-id695 . -7) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (undo-tree-id698 . -7) (undo-tree-id699 . -7) (undo-tree-id700 . -7) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (undo-tree-id703 . -7) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -7) (undo-tree-id710 . -7) (#("background-colo" 0 15 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11993) (undo-tree-id711 . -15) (undo-tree-id712 . -15) (undo-tree-id713 . -15) (undo-tree-id714 . -15) (undo-tree-id715 . -15) (undo-tree-id716 . -15) (undo-tree-id717 . -15) (undo-tree-id718 . -15) (undo-tree-id719 . -15) (undo-tree-id720 . -15) (undo-tree-id721 . -15) (undo-tree-id722 . -15) (undo-tree-id723 . -15) (undo-tree-id724 . -15) (undo-tree-id725 . -15) (undo-tree-id726 . -15) (undo-tree-id727 . -15) (undo-tree-id728 . -15) (undo-tree-id729 . -15) (undo-tree-id730 . -15) (undo-tree-id731 . -15) (undo-tree-id732 . -15) (undo-tree-id733 . -15) (undo-tree-id734 . -15) (undo-tree-id735 . -15) (undo-tree-id736 . -15) (undo-tree-id737 . -15) (undo-tree-id738 . -15) (undo-tree-id739 . -15) (undo-tree-id740 . -15) (undo-tree-id741 . -15) (undo-tree-id742 . -15) (undo-tree-id743 . -15) (undo-tree-id744 . -15) (undo-tree-id745 . -15) (undo-tree-id746 . -15) (undo-tree-id747 . -15) (undo-tree-id748 . -15) (undo-tree-id749 . -15) (undo-tree-id750 . -15) (undo-tree-id751 . -15) (undo-tree-id752 . -15) (undo-tree-id753 . -15) (undo-tree-id754 . -15) (undo-tree-id755 . -15) (undo-tree-id756 . -15) (undo-tree-id757 . -15) (undo-tree-id758 . -15) (undo-tree-id759 . -15) (undo-tree-id760 . -15) (undo-tree-id761 . -15)) (25681 7288 439995 20000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "td" tag-type start)) . -12472) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 12473) ((12472 . 12473) (t 25681 6833 155849 135000)) (25681 6833 149492 694000) 0 nil])
([nil nil ((12008 . 12018)) ((#("r: white ," 0 3 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 3 8 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12008) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -10) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -8) (undo-tree-id623 . -8) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -8) (undo-tree-id627 . -8) (undo-tree-id628 . -8) (undo-tree-id629 . -8) (undo-tree-id630 . -8) (undo-tree-id631 . -8) (undo-tree-id632 . -9) (undo-tree-id633 . -9) (undo-tree-id634 . -9) (undo-tree-id635 . -9) (undo-tree-id636 . -9) (undo-tree-id637 . -9) (undo-tree-id638 . -9) (undo-tree-id639 . -9) (undo-tree-id640 . -9) (undo-tree-id641 . -9) (undo-tree-id642 . -9) (undo-tree-id643 . -9) (undo-tree-id644 . -9) (undo-tree-id645 . -9) (undo-tree-id646 . -10) (undo-tree-id647 . -10) (undo-tree-id648 . -10) (undo-tree-id649 . -10) (undo-tree-id650 . -10) (undo-tree-id651 . -10) (undo-tree-id652 . -10) (undo-tree-id653 . -10) (undo-tree-id654 . -10) (undo-tree-id655 . -10) (undo-tree-id656 . -10)) (25681 7288 196747 343000) 0 nil])
nil
([nil nil ((#("," 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12017) (undo-tree-id39 . -1) 12018) ((12017 . 12018)) (25681 7287 928307 289000) 0 nil])
([nil nil ((12017 . 12019)) ((#("; " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12017) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2)) (25681 7287 637275 260000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12016) (undo-tree-id36 . -1) (#(";" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12017) (undo-tree-id37 . -1) (#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12018) (undo-tree-id38 . -1) 12019) ((12016 . 12019)) (25681 7287 320492 706000) 0 nil])
([nil nil ((12016 . 12018)) ((#("; " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12016) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2)) (25681 7286 999177 999000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12017) (undo-tree-id28 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (undo-tree-id34 . -1) 12018) ((12017 . 12018)) (25681 7286 686327 970000) 0 nil])
([nil nil ((#("white" 0 5 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12011) (undo-tree-id40 . -5) (undo-tree-id42 . -5) (t 25681 6907 163747 744000)) ((12011 . 12016)) (25681 7286 361480 554000) 0 nil])
([nil nil ((12011 . 12014)) ((#("red" 0 3 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12011) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3)) (25681 7286 43850 774000) 0 nil])
([nil nil ((12015 . 12016) (12014 . 12016) (t 25681 7043 467562 351000)) ((#(" \"" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12014) (undo-tree-id508 . -2) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (#("\\" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12015)) (25681 7285 798297 776000) 0 nil])
([nil nil ((#("\\" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12015) (undo-tree-id73 . -1) (#("\"" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12016) (undo-tree-id74 . -1) 12017) ((12015 . 12017)) (25681 7285 589592 28000) 0 nil])
([nil nil ((12015 . 12017)) ((#("! " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12015) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2)) (25681 7285 458724 672000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12014) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (undo-tree-id65 . -1) (#("!" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12015) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12016) (undo-tree-id72 . -1) 12017) ((12014 . 12017)) (25681 7285 241150 558000) 0 nil])
([nil nil ((12014 . 12016)) ((#("! " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 12014) (undo-tree-id471 . -2) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2)) (25681 7284 961612 233000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12015) (undo-tree-id43 . -1) (undo-tree-id45 . -1) (undo-tree-id47 . -1) (undo-tree-id49 . -1) (undo-tree-id51 . -1) (undo-tree-id53 . -1) 12016) ((12015 . 12016)) (25681 7283 915292 348000) 0 nil])
([nil nil ((#("!" 0 1 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -12014) (undo-tree-id102 . -1) 12015 (t 25681 7051 995550 799000)) ((12014 . 12015)) (25681 7283 515452 542000) 0 nil])
([nil nil ((26352 . 26354) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26351) (undo-tree-id101 . -2) (26351 . 26354) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26351) (26351 . 26353) (26350 . 26352)) ((#("

" 0 1 (part-side css) 1 2 (part-side css)) . 26350) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26351) (26351 . 26353) (#("  
" 0 2 (part-side css face whitespace-trailing) 2 3 (part-side css)) . 26351) (undo-tree-id467 . -3) (undo-tree-id468 . -2) (undo-tree-id469 . -3) (26351 . 26353) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26352) (undo-tree-id470 . -2)) (25681 7283 197629 27000) 0 nil])
([nil nil ((26351 . 26353)) ((#("  " 0 2 (part-side css)) . 26351) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2)) (25681 7282 856936 469000) 0 nil])
([nil nil ((26353 . 26358)) ((#("class" 0 1 (part-side css) 1 2 (part-side css) 2 3 (part-side css) 3 4 (part-side css) 4 5 (part-side css)) . 26353) (undo-tree-id320 . -3) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5)) (25681 7282 545231 154000) 0 nil])
([nil nil ((#("c" 0 1 (part-side css)) . -26353) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("l" 0 1 (part-side css)) . -26354) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("a" 0 1 (part-side css)) . -26355) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("s" 0 1 (part-side css)) . -26356) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("s" 0 1 (part-side css)) . -26357) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 26358) ((26353 . 26358)) (25681 7282 282752 154000) 0 nil])
([nil nil ((26360 . 26362) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -26360) (26353 . 26361)) ((#(".stuff {" 0 6 (part-side css face web-mode-css-selector-class-face) 6 7 (part-side css) 7 8 (part-side css face (rainbow-delimiters-depth-1-face))) . 26353) (undo-tree-id252 . -3) (undo-tree-id253 . -7) (undo-tree-id254 . -7) (undo-tree-id255 . -7) (undo-tree-id256 . -6) (undo-tree-id257 . -7) (undo-tree-id258 . -7) (undo-tree-id259 . -7) (undo-tree-id260 . -7) (undo-tree-id261 . -7) (undo-tree-id262 . -7) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (undo-tree-id267 . -7) (undo-tree-id268 . -7) (undo-tree-id269 . -7) (undo-tree-id270 . -7) (undo-tree-id271 . -7) (undo-tree-id272 . -7) (undo-tree-id273 . -7) (undo-tree-id274 . -7) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -7) (26360 . 26361) (#("{}" 0 1 (part-side css face (rainbow-delimiters-depth-1-face)) 1 2 (part-side css face (rainbow-delimiters-depth-1-face))) . 26360) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1)) (25681 7281 915271 701000) 0 nil])
([nil nil ((26363 . 26365) (#("    " 0 4 (part-side css face whitespace-trailing)) . 26362) (undo-tree-id86 . -2) (undo-tree-id87 . 4) (26364 . 26366) (26361 . 26365)) ((#("
  
" 0 1 (part-side css) 1 3 (part-side css face whitespace-trailing) 3 4 (part-side css)) . 26361) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -3) (undo-tree-id232 . -1) (undo-tree-id233 . -4) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26364) (26362 . 26366) (#("  " 0 2 (part-side css)) . 26363)) (25681 7281 709238 736000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26398 . 26399) (nil part-side css 26398 . 26399) (nil part-side css 26388 . 26398) (nil face web-mode-css-priority-face 26388 . 26398) (nil part-side css 26387 . 26388) (nil part-side css 26380 . 26387) (nil face web-mode-css-color-face 26380 . 26387) (nil part-side css 26379 . 26380) (nil part-side css 26362 . 26379) (nil face web-mode-css-property-name-face 26362 . 26379) (26362 . 26399)) ((#("background-color: #ECEFF1 !important;" 0 17 (part-side css face web-mode-css-property-name-face) 17 18 (part-side css) 18 19 (part-side css face web-mode-css-color-face) 19 25 (part-side css face web-mode-css-color-face) 25 26 (part-side css) 26 36 (part-side css face web-mode-css-priority-face) 36 37 (rear-nonsticky nil part-side css)) . 26362) (undo-tree-id215 . -18) (undo-tree-id216 . -37) (undo-tree-id217 . -19) (undo-tree-id218 . -19) (undo-tree-id219 . -19) (undo-tree-id220 . -19) (undo-tree-id221 . -37) (undo-tree-id222 . -37) (undo-tree-id223 . -37) (undo-tree-id224 . -37) (undo-tree-id225 . -37) (undo-tree-id226 . -37) (undo-tree-id227 . -37) (nil rear-nonsticky t 26398 . 26399)) (25681 7281 541934 397000) 0 nil])
([nil nil ((26362 . 26366) 26399) ((#("    " 0 4 (part-side css)) . 26362)) (25681 7281 341411 510000) 0 nil])
([nil nil ((#("ECEFF1" 0 6 (part-side css face web-mode-css-color-face)) . 26385) (undo-tree-id84 . -6) (undo-tree-id85 . -6)) ((26385 . 26391)) (25681 7281 39318 735000) 0 nil])
([nil nil ((#("#" 0 1 (part-side css)) . -26384) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 26385) ((26384 . 26385)) (25681 7277 681877 340000) 0 nil])
([nil nil ((26384 . 26387)) ((#("red" 0 3 (part-side css)) . 26384)) (25681 7277 479061 980000) 0 nil])
([nil nil ((#("
                style=\"background-color: red;\"" 0 1 (tag-name "v-data-table" tag-type start) 1 17 (tag-name "v-data-table" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 45 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11969) (undo-tree-id75 . -47) (undo-tree-id76 . -42) (undo-tree-id77 . -47) (undo-tree-id78 . -1) (undo-tree-id79 . -47) (undo-tree-id80 . -45) (undo-tree-id81 . -47)) ((11969 . 12016)) (25681 7277 112639 473000) 0 nil])
([nil nil ((11969 . 11986)) ((#("
                " 0 1 (tag-name "v-data-table" tag-type start) 1 17 (tag-name "v-data-table" tag-type start)) . 11969) (undo-tree-id157 . -17) (undo-tree-id158 . -17) (undo-tree-id159 . -17) (undo-tree-id160 . -1) (undo-tree-id161 . -17) (undo-tree-id162 . -17) (undo-tree-id163 . -17) (undo-tree-id164 . -17) (undo-tree-id165 . -17) (undo-tree-id166 . -17) (undo-tree-id167 . -17) (undo-tree-id168 . -17) (undo-tree-id169 . -17) (undo-tree-id170 . -17) (undo-tree-id171 . -17) (undo-tree-id172 . -17) (undo-tree-id173 . -17) (undo-tree-id174 . -17) (undo-tree-id175 . -17) (undo-tree-id176 . -17) (undo-tree-id177 . -17) (undo-tree-id178 . -17) (undo-tree-id179 . -17) (undo-tree-id180 . -17) (undo-tree-id181 . -17) (undo-tree-id182 . -17) (undo-tree-id183 . -17) (undo-tree-id184 . -17) (undo-tree-id185 . -17) (undo-tree-id186 . -17) (undo-tree-id187 . -17) (undo-tree-id188 . -17) (undo-tree-id189 . -17) (undo-tree-id190 . -17) (undo-tree-id191 . -17) (undo-tree-id192 . -17) (undo-tree-id193 . -17) (undo-tree-id194 . -17) (undo-tree-id195 . -17) (undo-tree-id196 . -17) (undo-tree-id197 . -17) (undo-tree-id198 . -17) (undo-tree-id199 . -17) (undo-tree-id200 . -17) (undo-tree-id201 . -17) (undo-tree-id202 . -17) (undo-tree-id203 . -1) (undo-tree-id204 . -17) (undo-tree-id205 . -17) (undo-tree-id206 . -17) (undo-tree-id207 . -17) (undo-tree-id208 . -17) (undo-tree-id209 . -17) (undo-tree-id210 . -17) (undo-tree-id211 . -17) (undo-tree-id212 . -17) (undo-tree-id213 . -17) (undo-tree-id214 . -17)) (25681 7276 724008 289000) 0 nil])
([nil nil ((11986 . 11994)) ((#("class=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11986) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7)) (25681 7276 375198 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11997 . 11998) (nil tag-attr t 11993 . 11998) (nil tag-name "v-data-table" 11993 . 11998) (nil tag-type start 11993 . 11998) (nil font-lock-face web-mode-html-attr-value-face 11993 . 11998) (11993 . 11998)) ((#("stuff" 0 4 (tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (rear-nonsticky nil tag-attr t tag-name "v-data-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11993) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (nil tag-name "v-data-table" 11997 . 11998) (nil tag-name "v-data-table" 11993 . 11997) (nil rear-nonsticky t 11997 . 11998)) (25681 7276 41278 113000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -26387) 11998) ((26387 . 26389) (t 25681 7107 607486 26000)) (25681 7107 600389 40000) 0 nil])
nil
