(undo-tree-save-format-version . 1)
"8b6e1bf196859e91c6c0241d60ec8e50fda9e8dd"
[nil nil nil nil (25669 40411 928567 920000) 0 nil]
([nil nil ((418 . 419) (t 25669 33215 395490 39000)) nil (25669 40411 928566 270000) 0 nil])
([nil nil (("z" . -418) (undo-tree-id35 . -1) 419) nil (25669 40411 928564 685000) 0 nil])
([nil nil ((289 . 298)) nil (25669 40411 928562 115000) 0 nil])
([nil nil ((nil rear-nonsticky nil 379 . 380) (nil tag-name "a" 379 . 380) (nil tag-type start 379 . 380) (nil tag-end t 379 . 380) (nil font-lock-face web-mode-html-tag-bracket-face 379 . 380) (nil tag-attr t 378 . 379) (nil tag-attr-end 5 378 . 379) (nil tag-name "a" 378 . 379) (nil tag-type start 378 . 379) (nil font-lock-face web-mode-html-attr-value-face 378 . 379) (nil tag-attr t 374 . 378) (nil tag-name "a" 374 . 378) (nil tag-type start 374 . 378) (nil font-lock-face web-mode-html-attr-value-face 374 . 378) (nil tag-attr t 373 . 374) (nil tag-name "a" 373 . 374) (nil tag-type start 373 . 374) (nil font-lock-face web-mode-html-attr-equal-face 373 . 374) (nil tag-attr t 369 . 373) (nil tag-name "a" 369 . 373) (nil tag-type start 369 . 373) (nil font-lock-face web-mode-html-attr-name-face 369 . 373) (nil tag-attr-beg 0 368 . 369) (nil tag-attr t 368 . 369) (nil tag-name "a" 368 . 369) (nil tag-type start 368 . 369) (nil font-lock-face web-mode-html-attr-name-face 368 . 369) (nil tag-name "a" 367 . 368) (nil tag-type start 367 . 368) (nil tag-attr t 366 . 367) (nil tag-attr-end 4 366 . 367) (nil tag-name "a" 366 . 367) (nil tag-type start 366 . 367) (nil font-lock-face web-mode-html-attr-value-face 366 . 367) (nil block-side t 365 . 366) (nil block-end t 365 . 366) (nil block-token delimiter-end 365 . 366) (nil tag-attr t 365 . 366) (nil tag-name "a" 365 . 366) (nil tag-type start 365 . 366) (nil font-lock-face web-mode-block-delimiter-face 365 . 366) (nil block-side t 364 . 365) (nil block-token delimiter-end 364 . 365) (nil tag-attr t 364 . 365) (nil tag-name "a" 364 . 365) (nil tag-type start 364 . 365) (nil font-lock-face web-mode-block-delimiter-face 364 . 365) (nil block-side t 363 . 364) (nil tag-attr t 363 . 364) (nil tag-name "a" 363 . 364) (nil tag-type start 363 . 364) (nil block-side t 360 . 363) (nil block-token string 360 . 363) (nil tag-attr t 360 . 363) (nil tag-name "a" 360 . 363) (nil tag-type start 360 . 363) (nil font-lock-face web-mode-block-string-face 360 . 363) (nil block-side t 358 . 360) (nil tag-attr t 358 . 360) (nil tag-name "a" 358 . 360) (nil tag-type start 358 . 360) (nil block-side t 354 . 358) (nil block-token string 354 . 358) (nil tag-attr t 354 . 358) (nil tag-name "a" 354 . 358) (nil tag-type start 354 . 358) (nil font-lock-face web-mode-block-string-face 354 . 358) (nil block-side t 352 . 354) (nil tag-attr t 352 . 354) (nil tag-name "a" 352 . 354) (nil tag-type start 352 . 354) (nil block-side t 345 . 352) (nil tag-attr t 345 . 352) (nil tag-name "a" 345 . 352) (nil tag-type start 345 . 352) (nil face web-mode-filter-face 345 . 352) (nil block-side t 342 . 345) (nil tag-attr t 342 . 345) (nil tag-name "a" 342 . 345) (nil tag-type start 342 . 345) (nil block-side t 335 . 342) (nil tag-attr t 335 . 342) (nil tag-name "a" 335 . 342) (nil tag-type start 335 . 342) (nil face web-mode-variable-name-face 335 . 342) (nil block-side t 334 . 335) (nil tag-attr t 334 . 335) (nil tag-name "a" 334 . 335) (nil tag-type start 334 . 335) (nil block-side t 330 . 334) (nil tag-attr t 330 . 334) (nil tag-name "a" 330 . 334) (nil tag-type start 330 . 334) (nil face web-mode-variable-name-face 330 . 334) (nil block-side t 328 . 330) (nil tag-attr t 328 . 330) (nil tag-name "a" 328 . 330) (nil tag-type start 328 . 330) (nil block-side t 321 . 328) (nil tag-attr t 321 . 328) (nil tag-name "a" 321 . 328) (nil tag-type start 321 . 328) (nil face web-mode-filter-face 321 . 328) (nil block-side t 318 . 321) (nil tag-attr t 318 . 321) (nil tag-name "a" 318 . 321) (nil tag-type start 318 . 321) (nil block-side t 315 . 318) (nil tag-attr t 315 . 318) (nil tag-name "a" 315 . 318) (nil tag-type start 315 . 318) (nil face web-mode-variable-name-face 315 . 318) (nil block-side t 314 . 315) (nil tag-attr t 314 . 315) (nil tag-name "a" 314 . 315) (nil tag-type start 314 . 315) (nil block-side t 310 . 314) (nil tag-attr t 310 . 314) (nil tag-name "a" 310 . 314) (nil tag-type start 310 . 314) (nil face web-mode-variable-name-face 310 . 314) (nil block-side t 309 . 310) (nil tag-attr t 309 . 310) (nil tag-name "a" 309 . 310) (nil tag-type start 309 . 310) (nil block-side t 308 . 309) (nil block-token delimiter-beg 308 . 309) (nil tag-attr t 308 . 309) (nil tag-name "a" 308 . 309) (nil tag-type start 308 . 309) (nil font-lock-face web-mode-block-delimiter-face 308 . 309) (nil block-beg 0 307 . 308) (nil block-controls 0 307 . 308) (nil block-side t 307 . 308) (nil block-token delimiter-beg 307 . 308) (nil tag-attr t 307 . 308) (nil tag-name "a" 307 . 308) (nil tag-type start 307 . 308) (nil font-lock-face web-mode-block-delimiter-face 307 . 308) (nil tag-attr t 306 . 307) (nil tag-name "a" 306 . 307) (nil tag-type start 306 . 307) (nil font-lock-face web-mode-html-attr-value-face 306 . 307) (nil tag-attr t 305 . 306) (nil tag-name "a" 305 . 306) (nil tag-type start 305 . 306) (nil font-lock-face web-mode-html-attr-equal-face 305 . 306) (nil tag-attr t 302 . 305) (nil tag-name "a" 302 . 305) (nil tag-type start 302 . 305) (nil font-lock-face web-mode-html-attr-name-face 302 . 305) (nil tag-attr-beg 0 301 . 302) (nil tag-attr t 301 . 302) (nil tag-name "a" 301 . 302) (nil tag-type start 301 . 302) (nil font-lock-face web-mode-html-attr-name-face 301 . 302) (nil tag-name "a" 300 . 301) (nil tag-type start 300 . 301) (nil tag-name "a" 299 . 300) (nil tag-type start 299 . 300) (nil font-lock-face web-mode-html-tag-face 299 . 300) (nil tag-name "a" 298 . 299) (nil tag-type start 298 . 299) (nil tag-beg 17 298 . 299) (nil font-lock-face web-mode-html-tag-bracket-face 298 . 299) (298 . 380)) nil (25669 40411 928552 945000) 0 nil])
([nil nil ((711 . 720)) nil (25669 40411 928512 281000) 0 nil])
([nil nil ((720 . 724)) nil (25669 40411 928511 18000) 0 nil])
([nil nil ((717 . 719) (611 . 613) (592 . 594) (528 . 530) (483 . 485) (423 . 425) (389 . 391) 101) nil (25669 40411 928509 342000) 0 nil])
([nil nil ((#("class=\"btn\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 10 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 368) (undo-tree-id31 . -11) (undo-tree-id32 . -1) (undo-tree-id33 . -11) (undo-tree-id34 . -11)) nil (25669 40411 928505 650000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "a" tag-type start)) . -367) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 368) nil (25669 40411 928494 472000) 0 nil])
([nil nil ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 369) (undo-tree-id39 . -77) (undo-tree-id40 . -78) (undo-tree-id41 . -79) (undo-tree-id42 . -8) (undo-tree-id43 . -77) (undo-tree-id44 . -78) (286 . 369) (#("      <div class=\"card\" style=\"background-image: url({{ post.cover | escape }});\">
" 6 7 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-name "div" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 53 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t tag-attr t tag-name "div" tag-type start) 56 60 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "div" tag-type start) 61 66 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 66 69 (block-side t tag-attr t tag-name "div" tag-type start) 69 75 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 75 76 (block-side t tag-attr t tag-name "div" tag-type start) 76 77 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 78 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 207) (undo-tree-id45 . -82) (290 . 369) 368 (t 25669 40411 931752 951000)) nil (25669 40500 67250 612000) 0 nil])
([nil nil ((#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 740) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (727 . 740) (#("        </a>
" 8 9 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 714) (undo-tree-id38 . -12) (727 . 740) 726) nil (25669 40500 67238 988000) 0 nil])
([nil nil (("  " . -735) (714 . 722) ("      " . 714) (284 . 292) ("      " . 284) ("  " . -213) 207) nil (25669 40500 67217 879000) 0 nil])
([nil nil ((290 . 298) (282 . 291) (t 25669 40500 71620 652000)) nil (25669 40585 421604 135000) 0 nil])
([nil nil ((#("u" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -297) (undo-tree-id50 . -1) 298) nil (25669 40585 421600 910000) 0 nil])
([nil nil ((297 . 306)) nil (25669 40585 421594 971000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -305) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 306) nil (25669 40585 421587 514000) 0 nil])
([nil nil ((#("        <div class=\"card\" style=\"background-image: url({{ post.cover | escape }});\">
" 8 9 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 12 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "div" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 27 31 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 55 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 55 56 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t tag-attr t tag-name "div" tag-type start) 58 62 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "div" tag-type start) 63 68 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 68 71 (block-side t tag-attr t tag-name "div" tag-type start) 71 77 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 77 78 (block-side t tag-attr t tag-name "div" tag-type start) 78 79 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 80 82 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 83 84 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 393) (undo-tree-id56 . -85) (undo-tree-id57 . -85) (292 . 393) (#("      <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" style=\"display: block;\">
" 6 7 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "a" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 10 13 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t tag-attr t tag-name "a" tag-type start) 18 22 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "a" tag-type start) 23 26 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 26 29 (block-side t tag-attr t tag-name "a" tag-type start) 29 36 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 36 38 (block-side t tag-attr t tag-name "a" tag-type start) 38 42 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 42 43 (block-side t tag-attr t tag-name "a" tag-type start) 43 50 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 50 53 (block-side t tag-attr t tag-name "a" tag-type start) 53 60 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 60 62 (block-side t tag-attr t tag-name "a" tag-type start) 62 66 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 66 68 (block-side t tag-attr t tag-name "a" tag-type start) 68 71 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 71 72 (block-side t tag-attr t tag-name "a" tag-type start) 72 73 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 73 74 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 74 75 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 75 76 (tag-name "a" tag-type start) 76 77 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 77 78 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 78 79 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 82 98 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 98 99 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 99 100 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 207) (undo-tree-id58 . -96) (undo-tree-id59 . -36) (308 . 393) 243 (t 25669 40585 427493 640000)) nil (25669 40679 666261 461000) 0 nil])
([nil nil ((#("      </a>
" 6 7 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 9 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 764) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (749 . 764) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 738) (753 . 764) 763) nil (25669 40679 666253 116000) 0 nil])
([nil nil (("  " . -757) (738 . 746) ("      " . 738) (290 . 298) ("      " . 290) ("  " . -213) 207) nil (25669 40679 666230 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 404 . 405) (nil tag-attr t 375 . 405) (nil tag-name "a" 375 . 405) (nil tag-type start 375 . 405) (nil font-lock-face web-mode-html-attr-value-face 375 . 405) (375 . 405) (t 25669 40679 707354 419000)) nil (25669 40719 245699 59000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 388) (#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 388) (#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 388) (#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 388) (#("
" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 388) (undo-tree-id60 . -1)) nil (25669 40719 245691 829000) 0 nil])
([nil nil ((nil rear-nonsticky nil 436 . 437) (nil tag-attr t 415 . 437) (nil tag-name "a" 415 . 437) (nil tag-type start 415 . 437) (nil font-lock-face web-mode-html-attr-value-face 415 . 437) (415 . 437) (t 25669 40719 291296 253000)) nil (25669 40745 127382 186000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -408) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 409 (t 25669 40745 175258 304000)) nil (25669 40771 604915 662000) 0 nil])
([nil nil ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" style=\"height: 100%;width: 100%;display:block;text-decoration: none;\">
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 109 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 109 110 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 110 124 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 124 145 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 145 146 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 146 147 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 147 148 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 439) (undo-tree-id87 . -124) (undo-tree-id88 . -18) (undo-tree-id89 . -149) (undo-tree-id90 . -149) (undo-tree-id91 . -149) (undo-tree-id92 . -85) (356 . 439) (#("      <div class=\"card\" style=\"background-image: url({{ post.cover | escape }});\">
" 6 7 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-name "div" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 53 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t tag-attr t tag-name "div" tag-type start) 56 60 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "div" tag-type start) 61 66 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 66 69 (block-side t tag-attr t tag-name "div" tag-type start) 69 75 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 75 76 (block-side t tag-attr t tag-name "div" tag-type start) 76 77 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 78 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 207) (290 . 439) 308 (t 25669 40771 643219 562000)) nil (25669 40800 213589 218000) 0 nil])
([nil nil ((#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 810) (undo-tree-id83 . -13) (undo-tree-id84 . -13) (undo-tree-id85 . -12) (797 . 810) (#("        </a>
" 8 9 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 784) (undo-tree-id86 . -12) (797 . 810) 796) nil (25669 40800 213578 649000) 0 nil])
([nil nil (("  " . -805) (784 . 792) ("      " . 784) (354 . 362) ("      " . 354) ("  " . -213) 207) nil (25669 40968 741008 213000) 0 nil])
([nil nil ((#("        <div class=\"card\" style=\"background-image: url({{ post.cover | escape }});\">
" 8 9 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 12 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "div" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 27 31 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 55 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 55 56 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t tag-attr t tag-name "div" tag-type start) 58 62 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "div" tag-type start) 63 68 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 68 71 (block-side t tag-attr t tag-name "div" tag-type start) 71 77 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 77 78 (block-side t tag-attr t tag-name "div" tag-type start) 78 79 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 80 82 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 83 84 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 439) (undo-tree-id140 . -85) (undo-tree-id141 . -85) (undo-tree-id142 . -85) (undo-tree-id143 . -85) (undo-tree-id144 . -25) (292 . 439) (#("      <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" style=\"height: 100%;width: 100%;display:block;text-decoration: none;\">
" 6 7 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "a" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 10 13 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t tag-attr t tag-name "a" tag-type start) 18 19 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 19 22 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "a" tag-type start) 23 25 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 26 29 (block-side t tag-attr t tag-name "a" tag-type start) 29 30 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 30 36 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 36 37 (block-side t tag-attr t tag-name "a" tag-type start) 37 38 (block-side t tag-attr t tag-name "a" tag-type start) 38 39 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 39 42 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 42 43 (block-side t tag-attr t tag-name "a" tag-type start) 43 49 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 49 50 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 50 53 (block-side t tag-attr t tag-name "a" tag-type start) 53 54 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 54 60 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 60 61 (block-side t tag-attr t tag-name "a" tag-type start) 61 62 (block-side t tag-attr t tag-name "a" tag-type start) 62 66 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 66 68 (block-side t tag-attr t tag-name "a" tag-type start) 68 71 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 71 72 (block-side t tag-attr t tag-name "a" tag-type start) 72 73 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 73 74 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 74 75 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 75 76 (tag-name "a" tag-type start) 76 77 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 77 78 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 78 79 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 83 107 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 107 108 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 108 122 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 122 143 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 143 144 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 144 145 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 145 146 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 207) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (354 . 439) 216 (t 25669 40969 978931 38000)) nil (25669 40986 183138 472000) 0 nil] [nil nil ((nil rear-nonsticky nil 227 . 228) (nil tag-attr t 227 . 228) (nil tag-attr-end 5 227 . 228) (nil tag-name "a" 227 . 228) (nil tag-type start 227 . 228) (nil font-lock-face web-mode-html-attr-value-face 227 . 228) (nil tag-attr t 222 . 227) (nil tag-name "a" 222 . 227) (nil tag-type start 222 . 227) (nil font-lock-face web-mode-html-attr-value-face 222 . 227) (nil tag-attr t 221 . 222) (nil tag-name "a" 221 . 222) (nil tag-type start 221 . 222) (nil font-lock-face web-mode-html-attr-equal-face 221 . 222) (nil tag-attr t 217 . 221) (nil tag-name "a" 217 . 221) (nil tag-type start 217 . 221) (nil font-lock-face web-mode-html-attr-name-face 217 . 221) (nil tag-attr-beg 0 216 . 217) (nil tag-attr t 216 . 217) (nil tag-name "a" 216 . 217) (nil tag-type start 216 . 217) (nil font-lock-face web-mode-html-attr-name-face 216 . 217) (216 . 228) (t 25669 40800 259177 745000)) ((#("class=\"card\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 11 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (rear-nonsticky nil tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 216) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (undo-tree-id132 . -12) (undo-tree-id133 . -12) (nil tag-name "a" 216 . 217) (nil tag-name "a" 217 . 221) (nil tag-name "a" 221 . 222) (nil tag-name "a" 222 . 227) (nil tag-name "a" 227 . 228) (nil rear-nonsticky t 227 . 228)) (25669 40968 419093 611000) 0 nil])
([nil nil ((#("      </a>
" 6 7 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 9 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 810) (undo-tree-id134 . -10) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -10) (795 . 810) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 784) (799 . 810) 809) nil (25669 40986 183127 687000) 0 nil])
([nil nil ((228 . 229)) ((#(" " 0 1 (tag-name "a" tag-type start)) . 228) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (t 25669 40952 666956 110000)) (25669 40952 665253 706000) 0 nil])
([nil nil (("  " . -803) (784 . 792) ("      " . 784) (290 . 298) ("      " . 290) ("  " . -213) 207) nil (25669 41156 437414 780000) 0 nil])
nil
([nil nil ((#("tyle=\"height: 100%;width: 100%;display:block;text-decoration: none;\"" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 6 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 6 30 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 31 45 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 45 66 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 67 68 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . 369) (undo-tree-id221 . -68) (undo-tree-id222 . -68) (undo-tree-id223 . -68) (t 25669 41171 694640 46000)) nil (25669 41470 615556 987000) 0 nil] [nil nil ((#("
            <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"btn\">Read more</a>" 13 14 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 15 16 (tag-name "a" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 17 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 29 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "a" tag-type start) 30 33 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 33 36 (block-side t tag-attr t tag-name "a" tag-type start) 36 43 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 43 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 49 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 49 50 (block-side t tag-attr t tag-name "a" tag-type start) 50 57 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 57 60 (block-side t tag-attr t tag-name "a" tag-type start) 60 67 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 67 69 (block-side t tag-attr t tag-name "a" tag-type start) 69 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 75 (block-side t tag-attr t tag-name "a" tag-type start) 75 78 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 78 79 (block-side t tag-attr t tag-name "a" tag-type start) 79 80 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 81 82 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-name "a" tag-type start) 83 84 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 84 88 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 88 89 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 89 93 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 94 95 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 104 105 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 105 106 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 106 107 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 107 108 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 658) (undo-tree-id185 . -108) (undo-tree-id186 . -1) (undo-tree-id187 . -80) (undo-tree-id189 . -80) (undo-tree-id190 . -95) (undo-tree-id192 . -108) (undo-tree-id194 . -108) (undo-tree-id196 . -108) (undo-tree-id198 . -108) (t 25669 40986 186907 578000)) ((658 . 766)) (25669 41156 67242 331000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face)) . -368) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) 369) nil (25669 41470 615552 49000) 0 nil])
([nil nil ((658 . 671)) (("
            " . 658) (undo-tree-id199 . -13) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -13) (undo-tree-id203 . -13) (undo-tree-id204 . -13) (undo-tree-id205 . -13) (undo-tree-id206 . -13) (undo-tree-id207 . -13) (undo-tree-id208 . -13) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (undo-tree-id211 . -13) (undo-tree-id212 . -13)) (25669 41155 703937 63000) 0 nil])
([nil nil ((368 . 371)) nil (25669 41470 615547 413000) 0 nil])
([nil nil (("            " . -659) (undo-tree-id147 . -12) (undo-tree-id149 . -12) (undo-tree-id151 . -12) (undo-tree-id153 . -12) (undo-tree-id155 . -12) (undo-tree-id157 . -12) (undo-tree-id159 . -12) (undo-tree-id161 . -12) (undo-tree-id163 . -12) (undo-tree-id165 . -12) (undo-tree-id167 . -12) (undo-tree-id169 . -12) (undo-tree-id171 . -12) (undo-tree-id173 . -12) (undo-tree-id175 . -12) (undo-tree-id177 . -12) (undo-tree-id179 . -12) (undo-tree-id181 . -12) (undo-tree-id183 . -12) 671) ((659 . 671) (t 25669 41028 870845 861000)) (25669 41028 864002 87000) 0 nil])
([nil nil ((#("æ" 0 1 (tag-attr t tag-attr-end 0 tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face)) . -370) (undo-tree-id217 . -1) 371) nil (25669 41470 615546 177000) 0 nil])
nil
([nil nil ((370 . 376)) nil (25669 41470 615543 628000) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified t 375 . 383) (nil tag-attr t 375 . 383) (nil tag-name "a" 375 . 383) (nil tag-type start 375 . 383) (nil font-lock-face web-mode-html-attr-value-face 375 . 383) (375 . 383)) nil (25669 41470 615542 166000) 0 nil])
([nil nil ((#("." 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -375) (undo-tree-id216 . -1) 376) nil (25669 41470 615539 244000) 0 nil])
([nil nil ((#("
        </a>" 9 10 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 12 13 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 729) (undo-tree-id213 . -13) (undo-tree-id214 . -1) (undo-tree-id215 . -13)) nil (25669 41470 615534 804000) 0 nil])
([nil nil ((384 . 388)) nil (25669 41916 896522 871000) 0 nil])
([nil nil ((608 . 621) (t 25669 41943 830256 754000)) nil (25669 42095 66726 852000) 0 nil] [nil nil ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 21 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 21 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 27 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 32 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 39 (block-side t tag-attr t tag-name "a" tag-type start) 39 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 41 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 41 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 56 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 63 (block-side t tag-attr t tag-name "a" tag-type start) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 94 95 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 95 96 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 97 98 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 290) (undo-tree-id251 . -98) (undo-tree-id252 . -24) (undo-tree-id253 . -78) (undo-tree-id254 . -24) (undo-tree-id255 . -78) (undo-tree-id256 . -85) (undo-tree-id257 . -98) (undo-tree-id258 . -98) (t 25669 41470 626463 711000)) ((290 . 388)) (25669 41916 492002 149000) 0 nil])
([nil nil ((621 . 622)) nil (25669 42107 84811 576000) 0 nil] [nil nil ((621 . 631)) ((#("div></div>" 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 621) (undo-tree-id259 . -10)) (25669 42095 65856 468000) 0 nil])
([nil nil (("
" . -289) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id240 . -1) (undo-tree-id242 . -1) (undo-tree-id244 . -1) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) 290) ((289 . 290) (t 25669 41803 670347 696000)) (25669 41803 662971 422000) 0 nil])
([nil nil ((622 . 632)) nil (25669 42107 84810 570000) 0 nil])
nil
nil
([nil nil ((627 . 641) (628 . 640) (#("              " 0 14 (face whitespace-trailing)) . 627) (627 . 641) (627 . 628) ("            " . 627) (626 . 639)) nil (25669 42107 84808 968000) 0 nil])
([nil nil ((#("            <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"btn\">Read more</a>
" 12 13 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "a" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 16 19 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 20 21 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t tag-attr t tag-name "a" tag-type start) 24 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "a" tag-type start) 29 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 32 35 (block-side t tag-attr t tag-name "a" tag-type start) 35 42 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 42 44 (block-side t tag-attr t tag-name "a" tag-type start) 44 48 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 48 49 (block-side t tag-attr t tag-name "a" tag-type start) 49 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 56 59 (block-side t tag-attr t tag-name "a" tag-type start) 59 66 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 66 68 (block-side t tag-attr t tag-name "a" tag-type start) 68 72 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 72 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 77 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 77 78 (block-side t tag-attr t tag-name "a" tag-type start) 78 79 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 79 80 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 80 81 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "a" tag-type start) 82 83 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 87 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 87 88 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 88 92 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 103 104 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 104 105 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 105 106 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 106 107 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 769) (undo-tree-id276 . -79) (undo-tree-id277 . -107) (undo-tree-id278 . -48) (750 . 769) (#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 642) (undo-tree-id279 . -14) (661 . 769) 656) nil (25669 42107 84806 90000) 0 nil])
([nil nil ((625 . 627)) nil (25669 42107 84800 54000) 0 nil])
([nil nil ((#("c" 0 1 (tag-name "divc" tag-type start font-lock-face web-mode-html-tag-face)) . -625) (undo-tree-id274 . -1) (#(" " 0 1 (tag-name "divc" tag-type start)) . -626) (undo-tree-id275 . -1) 627) nil (25669 42107 84798 489000) 0 nil])
([nil nil ((633 . 640) (625 . 634)) nil (25669 42107 84794 971000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -638) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("w" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -639) (undo-tree-id273 . -1) 640) nil (25669 42107 84793 49000) 0 nil])
([nil nil ((638 . 643)) nil (25669 42107 84786 74000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -642) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 643) nil (25669 42107 84783 205000) 0 nil])
([nil nil ((#("              " 0 14 (face whitespace-trailing)) . -645) 642) nil (25669 42107 84756 321000) 0 nil])
([nil nil ((658 . 660) 670 (t 25669 42107 90130 298000)) nil (25669 42188 112892 369000) 0 nil])
([nil nil (("
" . 645) (undo-tree-id280 . -1)) nil (25669 42369 536419 780000) 0 nil])
([nil nil ((#("          <div class=\"content\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 421) (undo-tree-id458 . -31) (322 . 421) (#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 21 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 21 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 27 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 32 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 39 (block-side t tag-attr t tag-name "a" tag-type start) 39 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 41 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 41 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 56 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 63 (block-side t tag-attr t tag-name "a" tag-type start) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 94 95 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 95 96 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 97 98 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 290) (undo-tree-id459 . -98) (undo-tree-id460 . -18) (undo-tree-id461 . -24) (undo-tree-id462 . -78) (undo-tree-id463 . -24) (undo-tree-id464 . -78) (undo-tree-id465 . -85) (undo-tree-id466 . -98) (undo-tree-id467 . -98) (undo-tree-id468 . -98) (undo-tree-id469 . -98) (undo-tree-id470 . -94) (undo-tree-id471 . -18) (undo-tree-id472 . -18) (undo-tree-id473 . -18) (undo-tree-id474 . -18) (undo-tree-id475 . -18) (undo-tree-id476 . -18) (undo-tree-id477 . -18) (389 . 421) 308) nil (25669 42374 971026 845000) 0 nil] [nil nil ((#("
              <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"btn\">Read more</a>" 15 16 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "a" tag-type start) 18 19 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 19 22 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 24 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 25 26 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 26 27 (block-side t tag-attr t tag-name "a" tag-type start) 27 31 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "a" tag-type start) 32 35 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 35 38 (block-side t tag-attr t tag-name "a" tag-type start) 38 45 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 45 47 (block-side t tag-attr t tag-name "a" tag-type start) 47 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start) 52 59 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 59 62 (block-side t tag-attr t tag-name "a" tag-type start) 62 69 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 69 71 (block-side t tag-attr t tag-name "a" tag-type start) 71 75 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 75 77 (block-side t tag-attr t tag-name "a" tag-type start) 77 80 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 80 81 (block-side t tag-attr t tag-name "a" tag-type start) 81 82 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 82 83 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 83 84 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 84 85 (tag-name "a" tag-type start) 85 86 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 86 90 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 90 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 91 95 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 95 96 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 96 97 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 106 107 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 107 108 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 108 109 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 109 110 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 644) (undo-tree-id281 . -110) (undo-tree-id282 . -1) (undo-tree-id283 . -110) (undo-tree-id284 . -1) (undo-tree-id285 . -110) (t 25669 42188 118061 187000)) ((644 . 754)) (25669 42369 122389 404000) 0 nil])
([nil nil ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>
" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 21 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 21 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 27 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 32 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 39 (block-side t tag-attr t tag-name "a" tag-type start) 39 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 41 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 41 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 56 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 63 (block-side t tag-attr t tag-name "a" tag-type start) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 94 95 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 95 96 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 97 98 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 421) (undo-tree-id478 . -18) (undo-tree-id479 . -33) (undo-tree-id480 . -99) (undo-tree-id481 . -33) (undo-tree-id482 . -99) (undo-tree-id483 . -33) (389 . 421) (#("          <div class=\"content\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 290) (322 . 421) 355 (t 25669 42374 973889 639000)) nil (25669 42434 320298 651000) 0 nil])
([nil nil ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 21 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 21 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 27 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 32 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 39 (block-side t tag-attr t tag-name "a" tag-type start) 39 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 41 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 41 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 56 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 63 (block-side t tag-attr t tag-name "a" tag-type start) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 94 95 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 95 96 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 97 98 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 290) (undo-tree-id399 . -98) (undo-tree-id400 . -24) (undo-tree-id401 . -78) (undo-tree-id402 . -24) (undo-tree-id403 . -78) (undo-tree-id404 . -85) (undo-tree-id405 . -98) (undo-tree-id406 . -98) (undo-tree-id407 . -98) (undo-tree-id408 . -98) (undo-tree-id409 . -94) (undo-tree-id410 . -98)) ((290 . 388)) (25669 42368 821767 97000) 0 nil] [nil nil ((#("</a>" 0 1 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 384) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (t 25669 42255 818000 822000)) ((384 . 388)) (25669 42349 655378 417000) 0 nil])
([nil nil ((#("<div class=\"book_wrapper\">
  <div class=\"page-content\">" 0 1 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 4 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "div" tag-type start) 5 6 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 11 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 29 30 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 30 33 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 33 34 (tag-name "div" tag-type start) 34 35 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 35 39 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 40 53 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 54 55 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 101) (undo-tree-id668 . -55) (undo-tree-id669 . -55) (undo-tree-id670 . -27) (undo-tree-id671 . -55) (t 25669 42434 325832 269000)) nil (25669 45328 897691 155000) 0 nil])
([nil nil (("
" . -289) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 290) ((289 . 290)) (25669 42368 453365 341000) 0 nil])
([nil nil ((676 . 687)) (("
          " . 676) (undo-tree-id381 . -11) (undo-tree-id382 . -11) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -11)) (25669 42349 284959 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 152 . 153) (nil tag-name "div" 152 . 153) (nil tag-type start 152 . 153) (nil tag-end t 152 . 153) (nil font-lock-face web-mode-html-tag-bracket-face 152 . 153) (nil tag-attr t 151 . 152) (nil tag-attr-end 5 151 . 152) (nil tag-name "div" 151 . 152) (nil tag-type start 151 . 152) (nil font-lock-face web-mode-html-attr-value-face 151 . 152) (nil tag-attr t 136 . 151) (nil tag-name "div" 136 . 151) (nil tag-type start 136 . 151) (nil font-lock-face web-mode-html-attr-value-face 136 . 151) (nil tag-attr t 135 . 136) (nil tag-name "div" 135 . 136) (nil tag-type start 135 . 136) (nil font-lock-face web-mode-html-attr-equal-face 135 . 136) (nil tag-attr t 131 . 135) (nil tag-name "div" 131 . 135) (nil tag-type start 131 . 135) (nil font-lock-face web-mode-html-attr-name-face 131 . 135) (nil tag-attr-beg 0 130 . 131) (nil tag-attr t 130 . 131) (nil tag-name "div" 130 . 131) (nil tag-type start 130 . 131) (nil font-lock-face web-mode-html-attr-name-face 130 . 131) (nil tag-name "div" 129 . 130) (nil tag-type start 129 . 130) (nil tag-name "div" 126 . 129) (nil tag-type start 126 . 129) (nil font-lock-face web-mode-html-tag-face 126 . 129) (nil tag-name "div" 125 . 126) (nil tag-type start 125 . 126) (nil tag-beg 17 125 . 126) (nil font-lock-face web-mode-html-tag-bracket-face 125 . 126) (nil face whitespace-tab 124 . 125) (nil tag-name "section" 122 . 123) (nil tag-type start 122 . 123) (nil tag-end t 122 . 123) (nil font-lock-face web-mode-html-tag-bracket-face 122 . 123) (nil tag-attr t 121 . 122) (nil tag-attr-end 5 121 . 122) (nil tag-name "section" 121 . 122) (nil tag-type start 121 . 122) (nil font-lock-face web-mode-html-attr-value-face 121 . 122) (nil tag-attr t 116 . 121) (nil tag-name "section" 116 . 121) (nil tag-type start 116 . 121) (nil font-lock-face web-mode-html-attr-value-face 116 . 121) (nil tag-attr t 115 . 116) (nil tag-name "section" 115 . 116) (nil tag-type start 115 . 116) (nil font-lock-face web-mode-html-attr-equal-face 115 . 116) (nil tag-attr t 111 . 115) (nil tag-name "section" 111 . 115) (nil tag-type start 111 . 115) (nil font-lock-face web-mode-html-attr-name-face 111 . 115) (nil tag-attr-beg 0 110 . 111) (nil tag-attr t 110 . 111) (nil tag-name "section" 110 . 111) (nil tag-type start 110 . 111) (nil font-lock-face web-mode-html-attr-name-face 110 . 111) (nil tag-name "section" 109 . 110) (nil tag-type start 109 . 110) (nil tag-name "section" 102 . 109) (nil tag-type start 102 . 109) (nil font-lock-face web-mode-html-tag-face 102 . 109) (nil tag-name "section" 101 . 102) (nil tag-type start 101 . 102) (nil tag-beg 17 101 . 102) (nil font-lock-face web-mode-html-tag-bracket-face 101 . 102) (101 . 153)) nil (25669 45328 897680 962000) 0 nil])
([nil nil ((320 . 330) ("  " . -298) (321 . 322)) (("
" . 321) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (298 . 300) ("          " . 320) (undo-tree-id440 . -10) (undo-tree-id441 . -10) (undo-tree-id442 . -10) (undo-tree-id443 . -10) (undo-tree-id444 . -10) (undo-tree-id445 . -10) (undo-tree-id446 . -10) (undo-tree-id447 . -10) (undo-tree-id448 . -10) (undo-tree-id449 . -10) (undo-tree-id450 . -10) (undo-tree-id451 . -10) (undo-tree-id452 . -10) (undo-tree-id453 . -10) (undo-tree-id454 . -10) (undo-tree-id455 . -10) (undo-tree-id456 . -10) (undo-tree-id457 . -10)) (25669 42368 313399 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 690 . 691) (nil tag-name "a" 690 . 691) (nil tag-type end 690 . 691) (nil tag-end t 690 . 691) (nil font-lock-face web-mode-html-tag-bracket-face 690 . 691) (nil tag-name "a" 689 . 690) (nil tag-type end 689 . 690) (nil font-lock-face web-mode-html-tag-face 689 . 690) (nil tag-name "a" 688 . 689) (nil tag-type end 688 . 689) (nil font-lock-face web-mode-html-tag-bracket-face 688 . 689) (nil tag-name "a" 687 . 688) (nil tag-type end 687 . 688) (nil tag-beg 20 687 . 688) (nil font-lock-face web-mode-html-tag-bracket-face 687 . 688) (687 . 691)) ((#("</a>" 0 1 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (rear-nonsticky nil tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 687) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (nil tag-name "a" 687 . 688) (nil tag-name "a" 688 . 689) (nil tag-name "a" 689 . 690) (nil tag-name "a" 690 . 691) (nil rear-nonsticky t 690 . 691)) (25669 42348 814900 652000) 0 nil])
([nil nil ((#("  </div>
</div>" 2 3 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 4 7 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 7 8 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 818) (undo-tree-id665 . -15) (undo-tree-id666 . -9) (undo-tree-id667 . -15)) nil (25669 45328 897664 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 427 . 428) (nil tag-name "a" 427 . 428) (nil tag-type end 427 . 428) (nil tag-end t 427 . 428) (nil font-lock-face web-mode-html-tag-bracket-face 427 . 428) (nil tag-name "a" 426 . 427) (nil tag-type end 426 . 427) (nil font-lock-face web-mode-html-tag-face 426 . 427) (nil tag-name "a" 425 . 426) (nil tag-type end 425 . 426) (nil font-lock-face web-mode-html-tag-bracket-face 425 . 426) (nil tag-name "a" 424 . 425) (nil tag-type end 424 . 425) (nil tag-beg 20 424 . 425) (nil font-lock-face web-mode-html-tag-bracket-face 424 . 425) (nil rear-nonsticky t 423 . 424) (nil tag-name "a" 423 . 424) (nil tag-type start 423 . 424) (nil tag-end t 423 . 424) (nil font-lock-face web-mode-html-tag-bracket-face 423 . 424) (nil tag-attr t 422 . 423) (nil tag-attr-end 5 422 . 423) (nil tag-name "a" 422 . 423) (nil tag-type start 422 . 423) (nil font-lock-face web-mode-html-attr-value-face 422 . 423) (nil rear-nonsticky t 421 . 422) (nil tag-attr t 421 . 422) (nil tag-name "a" 421 . 422) (nil tag-type start 421 . 422) (nil font-lock-face web-mode-html-attr-value-face 421 . 422) (nil tag-attr t 415 . 421) (nil tag-name "a" 415 . 421) (nil tag-type start 415 . 421) (nil font-lock-face web-mode-html-attr-value-face 415 . 421) (nil tag-attr t 414 . 415) (nil tag-name "a" 414 . 415) (nil tag-type start 414 . 415) (nil font-lock-face web-mode-html-attr-value-face 414 . 415) (nil tag-attr t 413 . 414) (nil tag-name "a" 413 . 414) (nil tag-type start 413 . 414) (nil font-lock-face web-mode-html-attr-equal-face 413 . 414) (nil tag-attr t 412 . 413) (nil tag-name "a" 412 . 413) (nil tag-type start 412 . 413) (nil font-lock-face web-mode-html-attr-name-face 412 . 413) (nil tag-attr t 411 . 412) (nil tag-name "a" 411 . 412) (nil tag-type start 411 . 412) (nil font-lock-face web-mode-html-attr-name-face 411 . 412) (nil tag-attr t 410 . 411) (nil tag-name "a" 410 . 411) (nil tag-type start 410 . 411) (nil font-lock-face web-mode-html-attr-name-face 410 . 411) (nil tag-attr t 409 . 410) (nil tag-name "a" 409 . 410) (nil tag-type start 409 . 410) (nil font-lock-face web-mode-html-attr-name-face 409 . 410) (nil tag-attr-beg 0 408 . 409) (nil tag-attr t 408 . 409) (nil tag-name "a" 408 . 409) (nil tag-type start 408 . 409) (nil font-lock-face web-mode-html-attr-name-face 408 . 409) (nil tag-name "a" 407 . 408) (nil tag-type start 407 . 408) (nil tag-attr t 406 . 407) (nil tag-attr-end 4 406 . 407) (nil tag-name "a" 406 . 407) (nil tag-type start 406 . 407) (nil font-lock-face web-mode-html-attr-value-face 406 . 407) (nil block-side t 405 . 406) (nil block-end t 405 . 406) (nil block-token delimiter-end 405 . 406) (nil tag-attr t 405 . 406) (nil tag-name "a" 405 . 406) (nil tag-type start 405 . 406) (nil font-lock-face web-mode-block-delimiter-face 405 . 406) (nil block-side t 404 . 405) (nil block-token delimiter-end 404 . 405) (nil tag-attr t 404 . 405) (nil tag-name "a" 404 . 405) (nil tag-type start 404 . 405) (nil font-lock-face web-mode-block-delimiter-face 404 . 405) (nil block-side t 403 . 404) (nil tag-attr t 403 . 404) (nil tag-name "a" 403 . 404) (nil tag-type start 403 . 404) (nil block-side t 400 . 403) (nil block-token string 400 . 403) (nil tag-attr t 400 . 403) (nil tag-name "a" 400 . 403) (nil tag-type start 400 . 403) (nil font-lock-face web-mode-block-string-face 400 . 403) (nil block-side t 398 . 400) (nil tag-attr t 398 . 400) (nil tag-name "a" 398 . 400) (nil tag-type start 398 . 400) (nil block-side t 394 . 398) (nil block-token string 394 . 398) (nil tag-attr t 394 . 398) (nil tag-name "a" 394 . 398) (nil tag-type start 394 . 398) (nil font-lock-face web-mode-block-string-face 394 . 398) (nil block-side t 393 . 394) (nil tag-attr t 393 . 394) (nil tag-name "a" 393 . 394) (nil tag-type start 393 . 394) (nil block-side t 392 . 393) (nil tag-attr t 392 . 393) (nil tag-name "a" 392 . 393) (nil tag-type start 392 . 393) (nil block-side t 386 . 392) (nil tag-attr t 386 . 392) (nil tag-name "a" 386 . 392) (nil tag-type start 386 . 392) (nil face web-mode-filter-face 386 . 392) (nil block-side t 385 . 386) (nil tag-attr t 385 . 386) (nil tag-name "a" 385 . 386) (nil tag-type start 385 . 386) (nil face web-mode-filter-face 385 . 386) (nil block-side t 382 . 385) (nil tag-attr t 382 . 385) (nil tag-name "a" 382 . 385) (nil tag-type start 382 . 385) (nil block-side t 381 . 382) (nil tag-attr t 381 . 382) (nil tag-name "a" 381 . 382) (nil tag-type start 381 . 382) (nil face web-mode-variable-name-face 381 . 382) (nil block-side t 375 . 381) (nil tag-attr t 375 . 381) (nil tag-name "a" 375 . 381) (nil tag-type start 375 . 381) (nil face web-mode-variable-name-face 375 . 381) (nil block-side t 374 . 375) (nil tag-attr t 374 . 375) (nil tag-name "a" 374 . 375) (nil tag-type start 374 . 375) (nil block-side t 371 . 374) (nil tag-attr t 371 . 374) (nil tag-name "a" 371 . 374) (nil tag-type start 371 . 374) (nil face web-mode-variable-name-face 371 . 374) (nil block-side t 370 . 371) (nil tag-attr t 370 . 371) (nil tag-name "a" 370 . 371) (nil tag-type start 370 . 371) (nil face web-mode-variable-name-face 370 . 371) (nil block-side t 369 . 370) (nil tag-attr t 369 . 370) (nil tag-name "a" 369 . 370) (nil tag-type start 369 . 370) (nil block-side t 368 . 369) (nil tag-attr t 368 . 369) (nil tag-name "a" 368 . 369) (nil tag-type start 368 . 369) (nil block-side t 362 . 368) (nil tag-attr t 362 . 368) (nil tag-name "a" 362 . 368) (nil tag-type start 362 . 368) (nil face web-mode-filter-face 362 . 368) (nil block-side t 361 . 362) (nil tag-attr t 361 . 362) (nil tag-name "a" 361 . 362) (nil tag-type start 361 . 362) (nil face web-mode-filter-face 361 . 362) (nil block-side t 358 . 361) (nil tag-attr t 358 . 361) (nil tag-name "a" 358 . 361) (nil tag-type start 358 . 361) (nil block-side t 357 . 358) (nil tag-attr t 357 . 358) (nil tag-name "a" 357 . 358) (nil tag-type start 357 . 358) (nil face web-mode-variable-name-face 357 . 358) (nil block-side t 355 . 357) (nil tag-attr t 355 . 357) (nil tag-name "a" 355 . 357) (nil tag-type start 355 . 357) (nil face web-mode-variable-name-face 355 . 357) (nil block-side t 354 . 355) (nil tag-attr t 354 . 355) (nil tag-name "a" 354 . 355) (nil tag-type start 354 . 355) (nil block-side t 351 . 354) (nil tag-attr t 351 . 354) (nil tag-name "a" 351 . 354) (nil tag-type start 351 . 354) (nil face web-mode-variable-name-face 351 . 354) (nil block-side t 350 . 351) (nil tag-attr t 350 . 351) (nil tag-name "a" 350 . 351) (nil tag-type start 350 . 351) (nil face web-mode-variable-name-face 350 . 351) (nil block-side t 349 . 350) (nil tag-attr t 349 . 350) (nil tag-name "a" 349 . 350) (nil tag-type start 349 . 350) (nil block-side t 348 . 349) (nil block-token delimiter-beg 348 . 349) (nil tag-attr t 348 . 349) (nil tag-name "a" 348 . 349) (nil tag-type start 348 . 349) (nil font-lock-face web-mode-block-delimiter-face 348 . 349) (nil block-beg 0 347 . 348) (nil block-controls 0 347 . 348) (nil block-side t 347 . 348) (nil block-token delimiter-beg 347 . 348) (nil tag-attr t 347 . 348) (nil tag-name "a" 347 . 348) (nil tag-type start 347 . 348) (nil font-lock-face web-mode-block-delimiter-face 347 . 348) (nil tag-attr t 346 . 347) (nil tag-name "a" 346 . 347) (nil tag-type start 346 . 347) (nil font-lock-face web-mode-html-attr-value-face 346 . 347) (nil tag-attr t 345 . 346) (nil tag-name "a" 345 . 346) (nil tag-type start 345 . 346) (nil font-lock-face web-mode-html-attr-equal-face 345 . 346) (nil tag-attr t 342 . 345) (nil tag-name "a" 342 . 345) (nil tag-type start 342 . 345) (nil font-lock-face web-mode-html-attr-name-face 342 . 345) (nil tag-attr-beg 0 341 . 342) (nil tag-attr t 341 . 342) (nil tag-name "a" 341 . 342) (nil tag-type start 341 . 342) (nil font-lock-face web-mode-html-attr-name-face 341 . 342) (nil tag-name "a" 340 . 341) (nil tag-type start 340 . 341) (nil tag-name "a" 339 . 340) (nil tag-type start 339 . 340) (nil font-lock-face web-mode-html-tag-face 339 . 340) (nil tag-name "a" 338 . 339) (nil tag-type start 338 . 339) (nil tag-beg 17 338 . 339) (nil font-lock-face web-mode-html-tag-bracket-face 338 . 339) (330 . 428)) ((#("        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>" 8 9 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "a" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 12 15 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 17 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "a" tag-type start) 20 21 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 21 24 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "a" tag-type start) 25 27 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 28 31 (block-side t tag-attr t tag-name "a" tag-type start) 31 32 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 32 38 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 38 39 (block-side t tag-attr t tag-name "a" tag-type start) 39 40 (block-side t tag-attr t tag-name "a" tag-type start) 40 41 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 41 44 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 44 45 (block-side t tag-attr t tag-name "a" tag-type start) 45 51 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 52 55 (block-side t tag-attr t tag-name "a" tag-type start) 55 56 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 56 62 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 62 63 (block-side t tag-attr t tag-name "a" tag-type start) 63 64 (block-side t tag-attr t tag-name "a" tag-type start) 64 68 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 68 70 (block-side t tag-attr t tag-name "a" tag-type start) 70 73 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 73 74 (block-side t tag-attr t tag-name "a" tag-type start) 74 75 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 75 76 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 76 77 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-name "a" tag-type start) 78 79 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 79 80 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 81 82 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 82 83 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 83 84 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 84 85 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 85 91 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 91 92 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 92 93 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 94 95 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 95 96 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 96 97 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 97 98 (rear-nonsticky nil tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 330) (undo-tree-id411 . -98) (undo-tree-id412 . -98) (undo-tree-id413 . -98) (undo-tree-id414 . -98) (undo-tree-id415 . -98) (undo-tree-id416 . -98) (undo-tree-id417 . -98) (undo-tree-id418 . -98) (undo-tree-id419 . -98) (undo-tree-id420 . -98) (nil tag-name "a" 338 . 339) (nil tag-name "a" 339 . 340) (nil tag-name "a" 340 . 341) (nil tag-name "a" 341 . 342) (nil tag-name "a" 342 . 345) (nil tag-name "a" 345 . 346) (nil tag-name "a" 346 . 347) (nil tag-name "a" 347 . 348) (nil tag-name "a" 348 . 349) (nil tag-name "a" 349 . 350) (nil tag-name "a" 350 . 351) (nil tag-name "a" 351 . 354) (nil tag-name "a" 354 . 355) (nil tag-name "a" 355 . 357) (nil tag-name "a" 357 . 358) (nil tag-name "a" 358 . 361) (nil tag-name "a" 361 . 362) (nil tag-name "a" 362 . 368) (nil tag-name "a" 368 . 369) (nil tag-name "a" 369 . 370) (nil tag-name "a" 370 . 371) (nil tag-name "a" 371 . 374) (nil tag-name "a" 374 . 375) (nil tag-name "a" 375 . 381) (nil tag-name "a" 381 . 382) (nil tag-name "a" 382 . 385) (nil tag-name "a" 385 . 386) (nil tag-name "a" 386 . 392) (nil tag-name "a" 392 . 393) (nil tag-name "a" 393 . 394) (nil tag-name "a" 394 . 398) (nil tag-name "a" 398 . 400) (nil tag-name "a" 400 . 403) (nil tag-name "a" 403 . 404) (nil tag-name "a" 404 . 405) (nil tag-name "a" 405 . 406) (nil tag-name "a" 406 . 407) (nil tag-name "a" 407 . 408) (nil tag-name "a" 408 . 409) (nil tag-name "a" 409 . 410) (nil tag-name "a" 410 . 411) (nil tag-name "a" 411 . 412) (nil tag-name "a" 412 . 413) (nil tag-name "a" 413 . 414) (nil tag-name "a" 414 . 415) (nil tag-name "a" 415 . 421) (nil tag-name "a" 421 . 422) (nil rear-nonsticky nil 421 . 422) (nil tag-name "a" 422 . 423) (nil tag-name "a" 423 . 424) (nil rear-nonsticky nil 423 . 424) (nil tag-name "a" 424 . 425) (nil tag-name "a" 425 . 426) (nil tag-name "a" 426 . 427) (nil tag-name "a" 427 . 428) (nil rear-nonsticky t 427 . 428)) (25669 42368 49264 389000) 0 nil])
([nil nil (("  " . -685) (undo-tree-id286 . -2) (undo-tree-id288 . -2) (undo-tree-id290 . -2) (undo-tree-id292 . -2) 691) ((685 . 687) (t 25669 42336 233926 424000)) (25669 42336 228930 272000) 0 nil])
([nil nil ((818 . 826) (818 . 824)) nil (25669 45328 897659 108000) 0 nil])
([nil nil (("        " . -330) 428) ((330 . 338)) (25669 42367 703476 768000) 0 nil])
nil
([nil nil ((832 . 841)) nil (25669 45328 897657 883000) 0 nil])
([nil nil (("  " . -660) ("  " . -645) ("  " . -611) ("  " . -594) ("  " . -532) ("  " . -489) ("  " . -431) 207) ((431 . 433) (489 . 491) (532 . 534) (594 . 596) (611 . 613) (645 . 647) (660 . 662)) (25669 42367 701109 691000) 0 nil])
([nil nil (("        " . -833) (841 . 851)) nil (25669 45328 897651 170000) 0 nil])
nil
([nil nil (("      " . -803) ("  " . -764) ("  " . -749) ("  " . -643) ("  " . -607) ("  " . -590) ("  " . -528) ("  " . -485) ("  " . -427) ("  " . -395) ("      " . -126) (126 . 132) (#("	" 0 1 (face whitespace-tab)) . 126) (124 . 126) 77) nil (25669 45328 897647 720000) 0 nil])
([nil nil ((204 . 211)) nil (25669 45328 897643 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1451 . 1452) (nil tag-name "article" 1451 . 1452) (nil tag-type end 1451 . 1452) (nil tag-end t 1451 . 1452) (nil font-lock-face web-mode-html-tag-bracket-face 1451 . 1452) (nil tag-name "article" 1444 . 1451) (nil tag-type end 1444 . 1451) (nil font-lock-face web-mode-html-tag-face 1444 . 1451) (nil tag-name "article" 1443 . 1444) (nil tag-type end 1443 . 1444) (nil font-lock-face web-mode-html-tag-bracket-face 1443 . 1444) (nil tag-name "article" 1442 . 1443) (nil tag-type end 1442 . 1443) (nil tag-beg 20 1442 . 1443) (nil font-lock-face web-mode-html-tag-bracket-face 1442 . 1443) (nil face whitespace-tab 1440 . 1442) (nil tag-name "div" 1438 . 1439) (nil tag-type end 1438 . 1439) (nil tag-end t 1438 . 1439) (nil font-lock-face web-mode-html-tag-bracket-face 1438 . 1439) (nil tag-name "div" 1435 . 1438) (nil tag-type end 1435 . 1438) (nil font-lock-face web-mode-html-tag-face 1435 . 1438) (nil tag-name "div" 1434 . 1435) (nil tag-type end 1434 . 1435) (nil font-lock-face web-mode-html-tag-bracket-face 1434 . 1435) (nil tag-name "div" 1433 . 1434) (nil tag-type end 1433 . 1434) (nil tag-beg 20 1433 . 1434) (nil font-lock-face web-mode-html-tag-bracket-face 1433 . 1434) (nil face whitespace-tab 1430 . 1433) (nil tag-name "ul" 1428 . 1429) (nil tag-type end 1428 . 1429) (nil tag-end t 1428 . 1429) (nil font-lock-face web-mode-html-tag-bracket-face 1428 . 1429) (nil tag-name "ul" 1426 . 1428) (nil tag-type end 1426 . 1428) (nil font-lock-face web-mode-html-tag-face 1426 . 1428) (nil tag-name "ul" 1425 . 1426) (nil tag-type end 1425 . 1426) (nil font-lock-face web-mode-html-tag-bracket-face 1425 . 1426) (nil tag-name "ul" 1424 . 1425) (nil tag-type end 1424 . 1425) (nil tag-beg 20 1424 . 1425) (nil font-lock-face web-mode-html-tag-bracket-face 1424 . 1425) (nil face whitespace-tab 1420 . 1424) (nil tag-name "li" 1418 . 1419) (nil tag-type end 1418 . 1419) (nil tag-end t 1418 . 1419) (nil font-lock-face web-mode-html-tag-bracket-face 1418 . 1419) (nil tag-name "li" 1416 . 1418) (nil tag-type end 1416 . 1418) (nil font-lock-face web-mode-html-tag-face 1416 . 1418) (nil tag-name "li" 1415 . 1416) (nil tag-type end 1415 . 1416) (nil font-lock-face web-mode-html-tag-bracket-face 1415 . 1416) (nil tag-name "li" 1414 . 1415) (nil tag-type end 1414 . 1415) (nil tag-beg 20 1414 . 1415) (nil font-lock-face web-mode-html-tag-bracket-face 1414 . 1415) (nil face whitespace-tab 1409 . 1414) (nil tag-name "a" 1407 . 1408) (nil tag-type end 1407 . 1408) (nil tag-end t 1407 . 1408) (nil font-lock-face web-mode-html-tag-bracket-face 1407 . 1408) (nil tag-name "a" 1406 . 1407) (nil tag-type end 1406 . 1407) (nil font-lock-face web-mode-html-tag-face 1406 . 1407) (nil tag-name "a" 1405 . 1406) (nil tag-type end 1405 . 1406) (nil font-lock-face web-mode-html-tag-bracket-face 1405 . 1406) (nil tag-name "a" 1404 . 1405) (nil tag-type end 1404 . 1405) (nil tag-beg 20 1404 . 1405) (nil font-lock-face web-mode-html-tag-bracket-face 1404 . 1405) (nil tag-name "i" 1391 . 1392) (nil tag-type end 1391 . 1392) (nil tag-end t 1391 . 1392) (nil font-lock-face web-mode-html-tag-bracket-face 1391 . 1392) (nil tag-name "i" 1390 . 1391) (nil tag-type end 1390 . 1391) (nil font-lock-face web-mode-html-tag-face 1390 . 1391) (nil tag-name "i" 1389 . 1390) (nil tag-type end 1389 . 1390) (nil font-lock-face web-mode-html-tag-bracket-face 1389 . 1390) (nil tag-name "i" 1388 . 1389) (nil tag-type end 1388 . 1389) (nil tag-beg 20 1388 . 1389) (nil font-lock-face web-mode-html-tag-bracket-face 1388 . 1389) (nil tag-name "i" 1387 . 1388) (nil tag-type start 1387 . 1388) (nil tag-end t 1387 . 1388) (nil font-lock-face web-mode-html-tag-bracket-face 1387 . 1388) (nil tag-attr t 1386 . 1387) (nil tag-attr-end 5 1386 . 1387) (nil tag-name "i" 1386 . 1387) (nil tag-type start 1386 . 1387) (nil font-lock-face web-mode-html-attr-value-face 1386 . 1387) (nil tag-attr t 1369 . 1386) (nil tag-name "i" 1369 . 1386) (nil tag-type start 1369 . 1386) (nil font-lock-face web-mode-html-attr-value-face 1369 . 1386) (nil tag-attr t 1368 . 1369) (nil tag-name "i" 1368 . 1369) (nil tag-type start 1368 . 1369) (nil font-lock-face web-mode-html-attr-equal-face 1368 . 1369) (nil tag-attr t 1364 . 1368) (nil tag-name "i" 1364 . 1368) (nil tag-type start 1364 . 1368) (nil font-lock-face web-mode-html-attr-name-face 1364 . 1368) (nil tag-attr-beg 0 1363 . 1364) (nil tag-attr t 1363 . 1364) (nil tag-name "i" 1363 . 1364) (nil tag-type start 1363 . 1364) (nil font-lock-face web-mode-html-attr-name-face 1363 . 1364) (nil tag-name "i" 1362 . 1363) (nil tag-type start 1362 . 1363) (nil tag-name "i" 1361 . 1362) (nil tag-type start 1361 . 1362) (nil font-lock-face web-mode-html-tag-face 1361 . 1362) (nil tag-name "i" 1360 . 1361) (nil tag-type start 1360 . 1361) (nil tag-beg 17 1360 . 1361) (nil font-lock-face web-mode-html-tag-bracket-face 1360 . 1361) (nil tag-name "a" 1359 . 1360) (nil tag-type start 1359 . 1360) (nil tag-end t 1359 . 1360) (nil font-lock-face web-mode-html-tag-bracket-face 1359 . 1360) (nil tag-attr t 1358 . 1359) (nil tag-attr-end 4 1358 . 1359) (nil tag-name "a" 1358 . 1359) (nil tag-type start 1358 . 1359) (nil font-lock-face web-mode-html-attr-value-face 1358 . 1359) (nil tag-attr t 1356 . 1358) (nil tag-name "a" 1356 . 1358) (nil tag-type start 1356 . 1358) (nil font-lock-face web-mode-html-attr-value-face 1356 . 1358) (nil tag-attr t 1355 . 1356) (nil tag-name "a" 1355 . 1356) (nil tag-type start 1355 . 1356) (nil font-lock-face web-mode-html-attr-equal-face 1355 . 1356) (nil tag-attr t 1352 . 1355) (nil tag-name "a" 1352 . 1355) (nil tag-type start 1352 . 1355) (nil font-lock-face web-mode-html-attr-name-face 1352 . 1355) (nil tag-attr-beg 0 1351 . 1352) (nil tag-attr t 1351 . 1352) (nil tag-name "a" 1351 . 1352) (nil tag-type start 1351 . 1352) (nil font-lock-face web-mode-html-attr-name-face 1351 . 1352) (nil tag-name "a" 1350 . 1351) (nil tag-type start 1350 . 1351) (nil tag-name "a" 1349 . 1350) (nil tag-type start 1349 . 1350) (nil font-lock-face web-mode-html-tag-face 1349 . 1350) (nil tag-name "a" 1348 . 1349) (nil tag-type start 1348 . 1349) (nil tag-beg 17 1348 . 1349) (nil font-lock-face web-mode-html-tag-bracket-face 1348 . 1349) (nil face whitespace-tab 1342 . 1348) (nil tag-name "li" 1340 . 1341) (nil tag-type start 1340 . 1341) (nil tag-end t 1340 . 1341) (nil font-lock-face web-mode-html-tag-bracket-face 1340 . 1341) (nil tag-attr t 1339 . 1340) (nil tag-attr-end 5 1339 . 1340) (nil tag-name "li" 1339 . 1340) (nil tag-type start 1339 . 1340) (nil font-lock-face web-mode-html-attr-value-face 1339 . 1340) (nil tag-attr t 1319 . 1339) (nil tag-name "li" 1319 . 1339) (nil tag-type start 1319 . 1339) (nil font-lock-face web-mode-html-attr-value-face 1319 . 1339) (nil tag-attr t 1318 . 1319) (nil tag-name "li" 1318 . 1319) (nil tag-type start 1318 . 1319) (nil font-lock-face web-mode-html-attr-equal-face 1318 . 1319) (nil tag-attr t 1314 . 1318) (nil tag-name "li" 1314 . 1318) (nil tag-type start 1314 . 1318) (nil font-lock-face web-mode-html-attr-name-face 1314 . 1318) (nil tag-attr-beg 0 1313 . 1314) (nil tag-attr t 1313 . 1314) (nil tag-name "li" 1313 . 1314) (nil tag-type start 1313 . 1314) (nil font-lock-face web-mode-html-attr-name-face 1313 . 1314) (nil tag-name "li" 1312 . 1313) (nil tag-type start 1312 . 1313) (nil tag-name "li" 1310 . 1312) (nil tag-type start 1310 . 1312) (nil font-lock-face web-mode-html-tag-face 1310 . 1312) (nil tag-name "li" 1309 . 1310) (nil tag-type start 1309 . 1310) (nil tag-beg 17 1309 . 1310) (nil font-lock-face web-mode-html-tag-bracket-face 1309 . 1310) (nil face whitespace-tab 1304 . 1309) (nil tag-name "li" 1302 . 1303) (nil tag-type end 1302 . 1303) (nil tag-end t 1302 . 1303) (nil font-lock-face web-mode-html-tag-bracket-face 1302 . 1303) (nil tag-name "li" 1300 . 1302) (nil tag-type end 1300 . 1302) (nil font-lock-face web-mode-html-tag-face 1300 . 1302) (nil tag-name "li" 1299 . 1300) (nil tag-type end 1299 . 1300) (nil font-lock-face web-mode-html-tag-bracket-face 1299 . 1300) (nil tag-name "li" 1298 . 1299) (nil tag-type end 1298 . 1299) (nil tag-beg 20 1298 . 1299) (nil font-lock-face web-mode-html-tag-bracket-face 1298 . 1299) (nil tag-name "i" 1289 . 1290) (nil tag-type end 1289 . 1290) (nil tag-end t 1289 . 1290) (nil font-lock-face web-mode-html-tag-bracket-face 1289 . 1290) (nil tag-name "i" 1288 . 1289) (nil tag-type end 1288 . 1289) (nil font-lock-face web-mode-html-tag-face 1288 . 1289) (nil tag-name "i" 1287 . 1288) (nil tag-type end 1287 . 1288) (nil font-lock-face web-mode-html-tag-bracket-face 1287 . 1288) (nil tag-name "i" 1286 . 1287) (nil tag-type end 1286 . 1287) (nil tag-beg 20 1286 . 1287) (nil font-lock-face web-mode-html-tag-bracket-face 1286 . 1287) (nil tag-name "i" 1285 . 1286) (nil tag-type start 1285 . 1286) (nil tag-end t 1285 . 1286) (nil font-lock-face web-mode-html-tag-bracket-face 1285 . 1286) (nil tag-attr t 1284 . 1285) (nil tag-attr-end 5 1284 . 1285) (nil tag-name "i" 1284 . 1285) (nil tag-type start 1284 . 1285) (nil font-lock-face web-mode-html-attr-value-face 1284 . 1285) (nil tag-attr t 1266 . 1284) (nil tag-name "i" 1266 . 1284) (nil tag-type start 1266 . 1284) (nil font-lock-face web-mode-html-attr-value-face 1266 . 1284) (nil tag-attr t 1265 . 1266) (nil tag-name "i" 1265 . 1266) (nil tag-type start 1265 . 1266) (nil font-lock-face web-mode-html-attr-equal-face 1265 . 1266) (nil tag-attr t 1261 . 1265) (nil tag-name "i" 1261 . 1265) (nil tag-type start 1261 . 1265) (nil font-lock-face web-mode-html-attr-name-face 1261 . 1265) (nil tag-attr-beg 0 1260 . 1261) (nil tag-attr t 1260 . 1261) (nil tag-name "i" 1260 . 1261) (nil tag-type start 1260 . 1261) (nil font-lock-face web-mode-html-attr-name-face 1260 . 1261) (nil tag-name "i" 1259 . 1260) (nil tag-type start 1259 . 1260) (nil tag-name "i" 1258 . 1259) (nil tag-type start 1258 . 1259) (nil font-lock-face web-mode-html-tag-face 1258 . 1259) (nil tag-name "i" 1257 . 1258) (nil tag-type start 1257 . 1258) (nil tag-beg 17 1257 . 1258) (nil font-lock-face web-mode-html-tag-bracket-face 1257 . 1258) (nil tag-name "li" 1256 . 1257) (nil tag-type start 1256 . 1257) (nil tag-end t 1256 . 1257) (nil font-lock-face web-mode-html-tag-bracket-face 1256 . 1257) (nil tag-attr t 1255 . 1256) (nil tag-attr-end 5 1255 . 1256) (nil tag-name "li" 1255 . 1256) (nil tag-type start 1255 . 1256) (nil font-lock-face web-mode-html-attr-value-face 1255 . 1256) (nil tag-attr t 1245 . 1255) (nil tag-name "li" 1245 . 1255) (nil tag-type start 1245 . 1255) (nil font-lock-face web-mode-html-attr-value-face 1245 . 1255) (nil tag-attr t 1244 . 1245) (nil tag-name "li" 1244 . 1245) (nil tag-type start 1244 . 1245) (nil font-lock-face web-mode-html-attr-equal-face 1244 . 1245) (nil tag-attr t 1240 . 1244) (nil tag-name "li" 1240 . 1244) (nil tag-type start 1240 . 1244) (nil font-lock-face web-mode-html-attr-name-face 1240 . 1244) (nil tag-attr-beg 0 1239 . 1240) (nil tag-attr t 1239 . 1240) (nil tag-name "li" 1239 . 1240) (nil tag-type start 1239 . 1240) (nil font-lock-face web-mode-html-attr-name-face 1239 . 1240) (nil tag-name "li" 1238 . 1239) (nil tag-type start 1238 . 1239) (nil tag-name "li" 1236 . 1238) (nil tag-type start 1236 . 1238) (nil font-lock-face web-mode-html-tag-face 1236 . 1238) (nil tag-name "li" 1235 . 1236) (nil tag-type start 1235 . 1236) (nil tag-beg 17 1235 . 1236) (nil font-lock-face web-mode-html-tag-bracket-face 1235 . 1236) (nil face whitespace-tab 1230 . 1235) (nil tag-name "li" 1228 . 1229) (nil tag-type end 1228 . 1229) (nil tag-end t 1228 . 1229) (nil font-lock-face web-mode-html-tag-bracket-face 1228 . 1229) (nil tag-name "li" 1226 . 1228) (nil tag-type end 1226 . 1228) (nil font-lock-face web-mode-html-tag-face 1226 . 1228) (nil tag-name "li" 1225 . 1226) (nil tag-type end 1225 . 1226) (nil font-lock-face web-mode-html-tag-bracket-face 1225 . 1226) (nil tag-name "li" 1224 . 1225) (nil tag-type end 1224 . 1225) (nil tag-beg 20 1224 . 1225) (nil font-lock-face web-mode-html-tag-bracket-face 1224 . 1225) (nil tag-name "i" 1216 . 1217) (nil tag-type end 1216 . 1217) (nil tag-end t 1216 . 1217) (nil font-lock-face web-mode-html-tag-bracket-face 1216 . 1217) (nil tag-name "i" 1215 . 1216) (nil tag-type end 1215 . 1216) (nil font-lock-face web-mode-html-tag-face 1215 . 1216) (nil tag-name "i" 1214 . 1215) (nil tag-type end 1214 . 1215) (nil font-lock-face web-mode-html-tag-bracket-face 1214 . 1215) (nil tag-name "i" 1213 . 1214) (nil tag-type end 1213 . 1214) (nil tag-beg 20 1213 . 1214) (nil font-lock-face web-mode-html-tag-bracket-face 1213 . 1214) (nil tag-name "i" 1212 . 1213) (nil tag-type start 1212 . 1213) (nil tag-end t 1212 . 1213) (nil font-lock-face web-mode-html-tag-bracket-face 1212 . 1213) (nil tag-attr t 1211 . 1212) (nil tag-attr-end 5 1211 . 1212) (nil tag-name "i" 1211 . 1212) (nil tag-type start 1211 . 1212) (nil font-lock-face web-mode-html-attr-value-face 1211 . 1212) (nil tag-attr t 1195 . 1211) (nil tag-name "i" 1195 . 1211) (nil tag-type start 1195 . 1211) (nil font-lock-face web-mode-html-attr-value-face 1195 . 1211) (nil tag-attr t 1194 . 1195) (nil tag-name "i" 1194 . 1195) (nil tag-type start 1194 . 1195) (nil font-lock-face web-mode-html-attr-equal-face 1194 . 1195) (nil tag-attr t 1190 . 1194) (nil tag-name "i" 1190 . 1194) (nil tag-type start 1190 . 1194) (nil font-lock-face web-mode-html-attr-name-face 1190 . 1194) (nil tag-attr-beg 0 1189 . 1190) (nil tag-attr t 1189 . 1190) (nil tag-name "i" 1189 . 1190) (nil tag-type start 1189 . 1190) (nil font-lock-face web-mode-html-attr-name-face 1189 . 1190) (nil tag-name "i" 1188 . 1189) (nil tag-type start 1188 . 1189) (nil tag-name "i" 1187 . 1188) (nil tag-type start 1187 . 1188) (nil font-lock-face web-mode-html-tag-face 1187 . 1188) (nil tag-name "i" 1186 . 1187) (nil tag-type start 1186 . 1187) (nil tag-beg 17 1186 . 1187) (nil font-lock-face web-mode-html-tag-bracket-face 1186 . 1187) (nil tag-name "li" 1185 . 1186) (nil tag-type start 1185 . 1186) (nil tag-end t 1185 . 1186) (nil font-lock-face web-mode-html-tag-bracket-face 1185 . 1186) (nil tag-attr t 1184 . 1185) (nil tag-attr-end 5 1184 . 1185) (nil tag-name "li" 1184 . 1185) (nil tag-type start 1184 . 1185) (nil font-lock-face web-mode-html-attr-value-face 1184 . 1185) (nil tag-attr t 1174 . 1184) (nil tag-name "li" 1174 . 1184) (nil tag-type start 1174 . 1184) (nil font-lock-face web-mode-html-attr-value-face 1174 . 1184) (nil tag-attr t 1173 . 1174) (nil tag-name "li" 1173 . 1174) (nil tag-type start 1173 . 1174) (nil font-lock-face web-mode-html-attr-equal-face 1173 . 1174) (nil tag-attr t 1169 . 1173) (nil tag-name "li" 1169 . 1173) (nil tag-type start 1169 . 1173) (nil font-lock-face web-mode-html-attr-name-face 1169 . 1173) (nil tag-attr-beg 0 1168 . 1169) (nil tag-attr t 1168 . 1169) (nil tag-name "li" 1168 . 1169) (nil tag-type start 1168 . 1169) (nil font-lock-face web-mode-html-attr-name-face 1168 . 1169) (nil tag-name "li" 1167 . 1168) (nil tag-type start 1167 . 1168) (nil tag-name "li" 1165 . 1167) (nil tag-type start 1165 . 1167) (nil font-lock-face web-mode-html-tag-face 1165 . 1167) (nil tag-name "li" 1164 . 1165) (nil tag-type start 1164 . 1165) (nil tag-beg 17 1164 . 1165) (nil font-lock-face web-mode-html-tag-bracket-face 1164 . 1165) (nil face whitespace-tab 1159 . 1164) (nil tag-name "ul" 1157 . 1158) (nil tag-type start 1157 . 1158) (nil tag-end t 1157 . 1158) (nil font-lock-face web-mode-html-tag-bracket-face 1157 . 1158) (nil tag-attr t 1156 . 1157) (nil tag-attr-end 5 1156 . 1157) (nil tag-name "ul" 1156 . 1157) (nil tag-type start 1156 . 1157) (nil font-lock-face web-mode-html-attr-value-face 1156 . 1157) (nil tag-attr t 1139 . 1156) (nil tag-name "ul" 1139 . 1156) (nil tag-type start 1139 . 1156) (nil font-lock-face web-mode-html-attr-value-face 1139 . 1156) (nil tag-attr t 1138 . 1139) (nil tag-name "ul" 1138 . 1139) (nil tag-type start 1138 . 1139) (nil font-lock-face web-mode-html-attr-equal-face 1138 . 1139) (nil tag-attr t 1134 . 1138) (nil tag-name "ul" 1134 . 1138) (nil tag-type start 1134 . 1138) (nil font-lock-face web-mode-html-attr-name-face 1134 . 1138) (nil tag-attr-beg 0 1133 . 1134) (nil tag-attr t 1133 . 1134) (nil tag-name "ul" 1133 . 1134) (nil tag-type start 1133 . 1134) (nil font-lock-face web-mode-html-attr-name-face 1133 . 1134) (nil tag-name "ul" 1132 . 1133) (nil tag-type start 1132 . 1133) (nil tag-name "ul" 1130 . 1132) (nil tag-type start 1130 . 1132) (nil font-lock-face web-mode-html-tag-face 1130 . 1132) (nil tag-name "ul" 1129 . 1130) (nil tag-type start 1129 . 1130) (nil tag-beg 17 1129 . 1130) (nil font-lock-face web-mode-html-tag-bracket-face 1129 . 1130) (nil face whitespace-tab 1125 . 1129) (nil tag-name "div" 1123 . 1124) (nil tag-type end 1123 . 1124) (nil tag-end t 1123 . 1124) (nil font-lock-face web-mode-html-tag-bracket-face 1123 . 1124) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1123 . 1124) (nil tag-name "div" 1120 . 1123) (nil tag-type end 1120 . 1123) (nil font-lock-face web-mode-html-tag-face 1120 . 1123) (nil face (whitespace-line web-mode-html-tag-face) 1120 . 1123) (nil tag-name "div" 1119 . 1120) (nil tag-type end 1119 . 1120) (nil font-lock-face web-mode-html-tag-bracket-face 1119 . 1120) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1119 . 1120) (nil tag-name "div" 1118 . 1119) (nil tag-type end 1118 . 1119) (nil tag-beg 20 1118 . 1119) (nil font-lock-face web-mode-html-tag-bracket-face 1118 . 1119) (nil face (whitespace-line web-mode-html-tag-bracket-face) 1118 . 1119) (nil face (whitespace-line) 828 . 1118) (nil tag-name "div" 744 . 745) (nil tag-type start 744 . 745) (nil tag-end t 744 . 745) (nil font-lock-face web-mode-html-tag-bracket-face 744 . 745) (nil tag-attr t 743 . 744) (nil tag-attr-end 5 743 . 744) (nil tag-name "div" 743 . 744) (nil tag-type start 743 . 744) (nil font-lock-face web-mode-html-attr-value-face 743 . 744) (nil tag-attr t 721 . 743) (nil tag-name "div" 721 . 743) (nil tag-type start 721 . 743) (nil font-lock-face web-mode-html-attr-value-face 721 . 743) (nil tag-attr t 720 . 721) (nil tag-name "div" 720 . 721) (nil tag-type start 720 . 721) (nil font-lock-face web-mode-html-attr-equal-face 720 . 721) (nil tag-attr t 716 . 720) (nil tag-name "div" 716 . 720) (nil tag-type start 716 . 720) (nil font-lock-face web-mode-html-attr-name-face 716 . 720) (nil tag-attr-beg 0 715 . 716) (nil tag-attr t 715 . 716) (nil tag-name "div" 715 . 716) (nil tag-type start 715 . 716) (nil font-lock-face web-mode-html-attr-name-face 715 . 716) (nil tag-name "div" 714 . 715) (nil tag-type start 714 . 715) (nil tag-name "div" 711 . 714) (nil tag-type start 711 . 714) (nil font-lock-face web-mode-html-tag-face 711 . 714) (nil tag-name "div" 710 . 711) (nil tag-type start 710 . 711) (nil tag-beg 17 710 . 711) (nil font-lock-face web-mode-html-tag-bracket-face 710 . 711) (nil face whitespace-tab 706 . 710) (nil tag-name "div" 704 . 705) (nil tag-type end 704 . 705) (nil tag-end t 704 . 705) (nil font-lock-face web-mode-html-tag-bracket-face 704 . 705) (nil tag-name "div" 701 . 704) (nil tag-type end 701 . 704) (nil font-lock-face web-mode-html-tag-face 701 . 704) (nil tag-name "div" 700 . 701) (nil tag-type end 700 . 701) (nil font-lock-face web-mode-html-tag-bracket-face 700 . 701) (nil tag-name "div" 699 . 700) (nil tag-type end 699 . 700) (nil tag-beg 20 699 . 700) (nil font-lock-face web-mode-html-tag-bracket-face 699 . 700) (nil tag-name "div" 698 . 699) (nil tag-type start 698 . 699) (nil tag-end t 698 . 699) (nil font-lock-face web-mode-html-tag-bracket-face 698 . 699) (nil tag-attr t 697 . 698) (nil tag-attr-end 5 697 . 698) (nil tag-name "div" 697 . 698) (nil tag-type start 697 . 698) (nil font-lock-face web-mode-html-attr-value-face 697 . 698) (nil tag-attr t 683 . 697) (nil tag-name "div" 683 . 697) (nil tag-type start 683 . 697) (nil font-lock-face web-mode-html-attr-value-face 683 . 697) (nil tag-attr t 682 . 683) (nil tag-name "div" 682 . 683) (nil tag-type start 682 . 683) (nil font-lock-face web-mode-html-attr-equal-face 682 . 683) (nil tag-attr t 678 . 682) (nil tag-name "div" 678 . 682) (nil tag-type start 678 . 682) (nil font-lock-face web-mode-html-attr-name-face 678 . 682) (nil tag-attr-beg 0 677 . 678) (nil tag-attr t 677 . 678) (nil tag-name "div" 677 . 678) (nil tag-type start 677 . 678) (nil font-lock-face web-mode-html-attr-name-face 677 . 678) (nil tag-name "div" 676 . 677) (nil tag-type start 676 . 677) (nil tag-name "div" 673 . 676) (nil tag-type start 673 . 676) (nil font-lock-face web-mode-html-tag-face 673 . 676) (nil tag-name "div" 672 . 673) (nil tag-type start 672 . 673) (nil tag-beg 17 672 . 673) (nil font-lock-face web-mode-html-tag-bracket-face 672 . 673) (nil face whitespace-tab 668 . 672) (nil tag-name "div" 666 . 667) (nil tag-type end 666 . 667) (nil tag-end t 666 . 667) (nil font-lock-face web-mode-html-tag-bracket-face 666 . 667) (nil tag-name "div" 663 . 666) (nil tag-type end 663 . 666) (nil font-lock-face web-mode-html-tag-face 663 . 666) (nil tag-name "div" 662 . 663) (nil tag-type end 662 . 663) (nil font-lock-face web-mode-html-tag-bracket-face 662 . 663) (nil tag-name "div" 661 . 662) (nil tag-type end 661 . 662) (nil tag-beg 20 661 . 662) (nil font-lock-face web-mode-html-tag-bracket-face 661 . 662) (nil face whitespace-tab 657 . 661) (nil tag-name "time" 655 . 656) (nil tag-type end 655 . 656) (nil tag-end t 655 . 656) (nil font-lock-face web-mode-html-tag-bracket-face 655 . 656) (nil tag-name "time" 651 . 655) (nil tag-type end 651 . 655) (nil font-lock-face web-mode-html-tag-face 651 . 655) (nil tag-name "time" 650 . 651) (nil tag-type end 650 . 651) (nil font-lock-face web-mode-html-tag-bracket-face 650 . 651) (nil tag-name "time" 649 . 650) (nil tag-type end 649 . 650) (nil tag-beg 20 649 . 650) (nil font-lock-face web-mode-html-tag-bracket-face 649 . 650) (nil face whitespace-tab 644 . 649) (nil tag-name "i" 624 . 625) (nil tag-type end 624 . 625) (nil tag-end t 624 . 625) (nil font-lock-face web-mode-html-tag-bracket-face 624 . 625) (nil tag-name "i" 623 . 624) (nil tag-type end 623 . 624) (nil font-lock-face web-mode-html-tag-face 623 . 624) (nil tag-name "i" 622 . 623) (nil tag-type end 622 . 623) (nil font-lock-face web-mode-html-tag-bracket-face 622 . 623) (nil tag-name "i" 621 . 622) (nil tag-type end 621 . 622) (nil tag-beg 20 621 . 622) (nil font-lock-face web-mode-html-tag-bracket-face 621 . 622) (nil tag-name "i" 620 . 621) (nil tag-type start 620 . 621) (nil tag-end t 620 . 621) (nil font-lock-face web-mode-html-tag-bracket-face 620 . 621) (nil tag-attr t 619 . 620) (nil tag-attr-end 5 619 . 620) (nil tag-name "i" 619 . 620) (nil tag-type start 619 . 620) (nil font-lock-face web-mode-html-attr-value-face 619 . 620) (nil tag-attr t 594 . 619) (nil tag-name "i" 594 . 619) (nil tag-type start 594 . 619) (nil font-lock-face web-mode-html-attr-value-face 594 . 619) (nil tag-attr t 593 . 594) (nil tag-name "i" 593 . 594) (nil tag-type start 593 . 594) (nil font-lock-face web-mode-html-attr-equal-face 593 . 594) (nil tag-attr t 589 . 593) (nil tag-name "i" 589 . 593) (nil tag-type start 589 . 593) (nil font-lock-face web-mode-html-attr-name-face 589 . 593) (nil tag-attr-beg 0 588 . 589) (nil tag-attr t 588 . 589) (nil tag-name "i" 588 . 589) (nil tag-type start 588 . 589) (nil font-lock-face web-mode-html-attr-name-face 588 . 589) (nil tag-name "i" 587 . 588) (nil tag-type start 587 . 588) (nil tag-name "i" 586 . 587) (nil tag-type start 586 . 587) (nil font-lock-face web-mode-html-tag-face 586 . 587) (nil tag-name "i" 585 . 586) (nil tag-type start 585 . 586) (nil tag-beg 17 585 . 586) (nil font-lock-face web-mode-html-tag-bracket-face 585 . 586) (nil face whitespace-tab 579 . 585) (nil tag-name "time" 577 . 578) (nil tag-type start 577 . 578) (nil tag-end t 577 . 578) (nil font-lock-face web-mode-html-tag-bracket-face 577 . 578) (nil tag-attr t 576 . 577) (nil tag-attr-end 8 576 . 577) (nil tag-name "time" 576 . 577) (nil tag-type start 576 . 577) (nil font-lock-face web-mode-html-attr-value-face 576 . 577) (nil tag-attr t 556 . 576) (nil tag-name "time" 556 . 576) (nil tag-type start 556 . 576) (nil font-lock-face web-mode-html-attr-value-face 556 . 576) (nil tag-attr t 555 . 556) (nil tag-name "time" 555 . 556) (nil tag-type start 555 . 556) (nil font-lock-face web-mode-html-attr-equal-face 555 . 556) (nil tag-attr t 548 . 555) (nil tag-name "time" 548 . 555) (nil tag-type start 548 . 555) (nil font-lock-face web-mode-html-attr-name-face 548 . 555) (nil tag-attr-beg 0 547 . 548) (nil tag-attr t 547 . 548) (nil tag-name "time" 547 . 548) (nil tag-type start 547 . 548) (nil font-lock-face web-mode-html-attr-name-face 547 . 548) (nil tag-name "time" 546 . 547) (nil tag-type start 546 . 547) (nil tag-name "time" 542 . 546) (nil tag-type start 542 . 546) (nil font-lock-face web-mode-html-tag-face 542 . 546) (nil tag-name "time" 541 . 542) (nil tag-type start 541 . 542) (nil tag-beg 17 541 . 542) (nil font-lock-face web-mode-html-tag-bracket-face 541 . 542) (nil face whitespace-tab 536 . 541) (nil tag-name "div" 534 . 535) (nil tag-type start 534 . 535) (nil tag-end t 534 . 535) (nil font-lock-face web-mode-html-tag-bracket-face 534 . 535) (nil tag-attr t 533 . 534) (nil tag-attr-end 5 533 . 534) (nil tag-name "div" 533 . 534) (nil tag-type start 533 . 534) (nil font-lock-face web-mode-html-attr-value-face 533 . 534) (nil tag-attr t 508 . 533) (nil tag-name "div" 508 . 533) (nil tag-type start 508 . 533) (nil font-lock-face web-mode-html-attr-value-face 508 . 533) (nil tag-attr t 507 . 508) (nil tag-name "div" 507 . 508) (nil tag-type start 507 . 508) (nil font-lock-face web-mode-html-attr-equal-face 507 . 508) (nil tag-attr t 503 . 507) (nil tag-name "div" 503 . 507) (nil tag-type start 503 . 507) (nil font-lock-face web-mode-html-attr-name-face 503 . 507) (nil tag-attr-beg 0 502 . 503) (nil tag-attr t 502 . 503) (nil tag-name "div" 502 . 503) (nil tag-type start 502 . 503) (nil font-lock-face web-mode-html-attr-name-face 502 . 503) (nil tag-name "div" 501 . 502) (nil tag-type start 501 . 502) (nil tag-name "div" 498 . 501) (nil tag-type start 498 . 501) (nil font-lock-face web-mode-html-tag-face 498 . 501) (nil tag-name "div" 497 . 498) (nil tag-type start 497 . 498) (nil tag-beg 17 497 . 498) (nil font-lock-face web-mode-html-tag-bracket-face 497 . 498) (nil face whitespace-tab 493 . 497) (nil tag-name "h1" 491 . 492) (nil tag-type end 491 . 492) (nil tag-end t 491 . 492) (nil font-lock-face web-mode-html-tag-bracket-face 491 . 492) (nil tag-name "h1" 489 . 491) (nil tag-type end 489 . 491) (nil font-lock-face web-mode-html-tag-face 489 . 491) (nil tag-name "h1" 488 . 489) (nil tag-type end 488 . 489) (nil font-lock-face web-mode-html-tag-bracket-face 488 . 489) (nil tag-name "h1" 487 . 488) (nil tag-type end 487 . 488) (nil tag-beg 20 487 . 488) (nil font-lock-face web-mode-html-tag-bracket-face 487 . 488) (nil tag-name "a" 486 . 487) (nil tag-type end 486 . 487) (nil tag-end t 486 . 487) (nil font-lock-face web-mode-html-tag-bracket-face 486 . 487) (nil tag-name "a" 485 . 486) (nil tag-type end 485 . 486) (nil font-lock-face web-mode-html-tag-face 485 . 486) (nil tag-name "a" 484 . 485) (nil tag-type end 484 . 485) (nil font-lock-face web-mode-html-tag-bracket-face 484 . 485) (nil tag-name "a" 483 . 484) (nil tag-type end 483 . 484) (nil tag-beg 20 483 . 484) (nil font-lock-face web-mode-html-tag-bracket-face 483 . 484) (nil tag-name "a" 469 . 470) (nil tag-type start 469 . 470) (nil tag-end t 469 . 470) (nil font-lock-face web-mode-html-tag-bracket-face 469 . 470) (nil tag-attr t 468 . 469) (nil tag-attr-end 4 468 . 469) (nil tag-name "a" 468 . 469) (nil tag-type start 468 . 469) (nil font-lock-face web-mode-html-attr-value-face 468 . 469) (nil tag-attr t 466 . 468) (nil tag-name "a" 466 . 468) (nil tag-type start 466 . 468) (nil font-lock-face web-mode-html-attr-value-face 466 . 468) (nil tag-attr t 465 . 466) (nil tag-name "a" 465 . 466) (nil tag-type start 465 . 466) (nil font-lock-face web-mode-html-attr-equal-face 465 . 466) (nil tag-attr t 462 . 465) (nil tag-name "a" 462 . 465) (nil tag-type start 462 . 465) (nil font-lock-face web-mode-html-attr-name-face 462 . 465) (nil tag-attr-beg 0 461 . 462) (nil tag-attr t 461 . 462) (nil tag-name "a" 461 . 462) (nil tag-type start 461 . 462) (nil font-lock-face web-mode-html-attr-name-face 461 . 462) (nil tag-name "a" 460 . 461) (nil tag-type start 460 . 461) (nil tag-name "a" 459 . 460) (nil tag-type start 459 . 460) (nil font-lock-face web-mode-html-tag-face 459 . 460) (nil tag-name "a" 458 . 459) (nil tag-type start 458 . 459) (nil tag-beg 17 458 . 459) (nil font-lock-face web-mode-html-tag-bracket-face 458 . 459) (nil tag-name "h1" 457 . 458) (nil tag-type start 457 . 458) (nil tag-end t 457 . 458) (nil font-lock-face web-mode-html-tag-bracket-face 457 . 458) (nil tag-attr t 456 . 457) (nil tag-attr-end 5 456 . 457) (nil tag-name "h1" 456 . 457) (nil tag-type start 456 . 457) (nil font-lock-face web-mode-html-attr-value-face 456 . 457) (nil tag-attr t 435 . 456) (nil tag-name "h1" 435 . 456) (nil tag-type start 435 . 456) (nil font-lock-face web-mode-html-attr-value-face 435 . 456) (nil tag-attr t 434 . 435) (nil tag-name "h1" 434 . 435) (nil tag-type start 434 . 435) (nil font-lock-face web-mode-html-attr-equal-face 434 . 435) (nil tag-attr t 430 . 434) (nil tag-name "h1" 430 . 434) (nil tag-type start 430 . 434) (nil font-lock-face web-mode-html-attr-name-face 430 . 434) (nil tag-attr-beg 0 429 . 430) (nil tag-attr t 429 . 430) (nil tag-name "h1" 429 . 430) (nil tag-type start 429 . 430) (nil font-lock-face web-mode-html-attr-name-face 429 . 430) (nil tag-name "h1" 428 . 429) (nil tag-type start 428 . 429) (nil tag-name "h1" 426 . 428) (nil tag-type start 426 . 428) (nil font-lock-face web-mode-html-tag-face 426 . 428) (nil tag-name "h1" 425 . 426) (nil tag-type start 425 . 426) (nil tag-beg 17 425 . 426) (nil font-lock-face web-mode-html-tag-bracket-face 425 . 426) (nil face whitespace-tab 421 . 425) (nil tag-name "div" 419 . 420) (nil tag-type start 419 . 420) (nil tag-end t 419 . 420) (nil font-lock-face web-mode-html-tag-bracket-face 419 . 420) (nil tag-attr t 418 . 419) (nil tag-attr-end 5 418 . 419) (nil tag-name "div" 418 . 419) (nil tag-type start 418 . 419) (nil font-lock-face web-mode-html-attr-value-face 418 . 419) (nil tag-attr t 403 . 418) (nil tag-name "div" 403 . 418) (nil tag-type start 403 . 418) (nil font-lock-face web-mode-html-attr-value-face 403 . 418) (nil tag-attr t 402 . 403) (nil tag-name "div" 402 . 403) (nil tag-type start 402 . 403) (nil font-lock-face web-mode-html-attr-equal-face 402 . 403) (nil tag-attr t 398 . 402) (nil tag-name "div" 398 . 402) (nil tag-type start 398 . 402) (nil font-lock-face web-mode-html-attr-name-face 398 . 402) (nil tag-attr-beg 0 397 . 398) (nil tag-attr t 397 . 398) (nil tag-name "div" 397 . 398) (nil tag-type start 397 . 398) (nil font-lock-face web-mode-html-attr-name-face 397 . 398) (nil tag-name "div" 396 . 397) (nil tag-type start 396 . 397) (nil tag-name "div" 393 . 396) (nil tag-type start 393 . 396) (nil font-lock-face web-mode-html-tag-face 393 . 396) (nil tag-name "div" 392 . 393) (nil tag-type start 392 . 393) (nil tag-beg 17 392 . 393) (nil font-lock-face web-mode-html-tag-bracket-face 392 . 393) (nil face whitespace-tab 389 . 392) (nil tag-name "a" 387 . 388) (nil tag-type end 387 . 388) (nil tag-end t 387 . 388) (nil font-lock-face web-mode-html-tag-bracket-face 387 . 388) (nil tag-name "a" 386 . 387) (nil tag-type end 386 . 387) (nil font-lock-face web-mode-html-tag-face 386 . 387) (nil tag-name "a" 385 . 386) (nil tag-type end 385 . 386) (nil font-lock-face web-mode-html-tag-bracket-face 385 . 386) (nil tag-name "a" 384 . 385) (nil tag-type end 384 . 385) (nil tag-beg 20 384 . 385) (nil font-lock-face web-mode-html-tag-bracket-face 384 . 385) (nil face whitespace-tab 381 . 384) (nil tag-name "img" 379 . 380) (nil tag-type void 379 . 380) (nil tag-end t 379 . 380) (nil font-lock-face web-mode-html-tag-bracket-face 379 . 380) (nil tag-name "img" 378 . 379) (nil tag-type void 378 . 379) (nil font-lock-face web-mode-html-tag-bracket-face 378 . 379) (nil tag-name "img" 377 . 378) (nil tag-type void 377 . 378) (nil tag-attr t 376 . 377) (nil tag-attr-end 3 376 . 377) (nil tag-name "img" 376 . 377) (nil tag-type void 376 . 377) (nil font-lock-face web-mode-html-attr-value-face 376 . 377) (nil tag-attr t 364 . 376) (nil tag-name "img" 364 . 376) (nil tag-type void 364 . 376) (nil font-lock-face web-mode-html-attr-value-face 364 . 376) (nil tag-attr t 363 . 364) (nil tag-name "img" 363 . 364) (nil tag-type void 363 . 364) (nil font-lock-face web-mode-html-attr-equal-face 363 . 364) (nil tag-attr t 361 . 363) (nil tag-name "img" 361 . 363) (nil tag-type void 361 . 363) (nil font-lock-face web-mode-html-attr-name-face 361 . 363) (nil tag-attr-beg 0 360 . 361) (nil tag-attr t 360 . 361) (nil tag-name "img" 360 . 361) (nil tag-type void 360 . 361) (nil font-lock-face web-mode-html-attr-name-face 360 . 361) (nil tag-name "img" 359 . 360) (nil tag-type void 359 . 360) (nil tag-attr t 358 . 359) (nil tag-attr-end 3 358 . 359) (nil tag-name "img" 358 . 359) (nil tag-type void 358 . 359) (nil font-lock-face web-mode-html-attr-value-face 358 . 359) (nil tag-attr t 326 . 358) (nil tag-name "img" 326 . 358) (nil tag-type void 326 . 358) (nil font-lock-face web-mode-html-attr-value-face 326 . 358) (nil tag-attr t 325 . 326) (nil tag-name "img" 325 . 326) (nil tag-type void 325 . 326) (nil font-lock-face web-mode-html-attr-equal-face 325 . 326) (nil tag-attr t 323 . 325) (nil tag-name "img" 323 . 325) (nil tag-type void 323 . 325) (nil font-lock-face web-mode-html-attr-name-face 323 . 325) (nil tag-attr-beg 0 322 . 323) (nil tag-attr t 322 . 323) (nil tag-name "img" 322 . 323) (nil tag-type void 322 . 323) (nil font-lock-face web-mode-html-attr-name-face 322 . 323) (nil tag-name "img" 321 . 322) (nil tag-type void 321 . 322) (nil tag-attr t 320 . 321) (nil tag-attr-end 5 320 . 321) (nil tag-name "img" 320 . 321) (nil tag-type void 320 . 321) (nil font-lock-face web-mode-html-attr-value-face 320 . 321) (nil tag-attr t 306 . 320) (nil tag-name "img" 306 . 320) (nil tag-type void 306 . 320) (nil font-lock-face web-mode-html-attr-value-face 306 . 320) (nil tag-attr t 305 . 306) (nil tag-name "img" 305 . 306) (nil tag-type void 305 . 306) (nil font-lock-face web-mode-html-attr-equal-face 305 . 306) (nil tag-attr t 301 . 305) (nil tag-name "img" 301 . 305) (nil tag-type void 301 . 305) (nil font-lock-face web-mode-html-attr-name-face 301 . 305) (nil tag-attr-beg 0 300 . 301) (nil tag-attr t 300 . 301) (nil tag-name "img" 300 . 301) (nil tag-type void 300 . 301) (nil font-lock-face web-mode-html-attr-name-face 300 . 301) (nil tag-name "img" 299 . 300) (nil tag-type void 299 . 300) (nil tag-name "img" 296 . 299) (nil tag-type void 296 . 299) (nil font-lock-face web-mode-html-tag-face 296 . 299) (nil tag-name "img" 295 . 296) (nil tag-type void 295 . 296) (nil tag-beg 25 295 . 296) (nil font-lock-face web-mode-html-tag-bracket-face 295 . 296) (nil face whitespace-tab 291 . 295) (nil tag-name "a" 289 . 290) (nil tag-type start 289 . 290) (nil tag-end t 289 . 290) (nil font-lock-face web-mode-html-tag-bracket-face 289 . 290) (nil tag-attr t 288 . 289) (nil tag-attr-end 4 288 . 289) (nil tag-name "a" 288 . 289) (nil tag-type start 288 . 289) (nil font-lock-face web-mode-html-attr-value-face 288 . 289) (nil tag-attr t 286 . 288) (nil tag-name "a" 286 . 288) (nil tag-type start 286 . 288) (nil font-lock-face web-mode-html-attr-value-face 286 . 288) (nil tag-attr t 285 . 286) (nil tag-name "a" 285 . 286) (nil tag-type start 285 . 286) (nil font-lock-face web-mode-html-attr-equal-face 285 . 286) (nil tag-attr t 282 . 285) (nil tag-name "a" 282 . 285) (nil tag-type start 282 . 285) (nil font-lock-face web-mode-html-attr-name-face 282 . 285) (nil tag-attr-beg 0 281 . 282) (nil tag-attr t 281 . 282) (nil tag-name "a" 281 . 282) (nil tag-type start 281 . 282) (nil font-lock-face web-mode-html-attr-name-face 281 . 282) (nil tag-name "a" 280 . 281) (nil tag-type start 280 . 281) (nil tag-attr t 279 . 280) (nil tag-attr-end 5 279 . 280) (nil tag-name "a" 279 . 280) (nil tag-type start 279 . 280) (nil font-lock-face web-mode-html-attr-value-face 279 . 280) (nil tag-attr t 260 . 279) (nil tag-name "a" 260 . 279) (nil tag-type start 260 . 279) (nil font-lock-face web-mode-html-attr-value-face 260 . 279) (nil tag-attr t 259 . 260) (nil tag-name "a" 259 . 260) (nil tag-type start 259 . 260) (nil font-lock-face web-mode-html-attr-equal-face 259 . 260) (nil tag-attr t 255 . 259) (nil tag-name "a" 255 . 259) (nil tag-type start 255 . 259) (nil font-lock-face web-mode-html-attr-name-face 255 . 259) (nil tag-attr-beg 0 254 . 255) (nil tag-attr t 254 . 255) (nil tag-name "a" 254 . 255) (nil tag-type start 254 . 255) (nil font-lock-face web-mode-html-attr-name-face 254 . 255) (nil tag-name "a" 253 . 254) (nil tag-type start 253 . 254) (nil tag-name "a" 252 . 253) (nil tag-type start 252 . 253) (nil font-lock-face web-mode-html-tag-face 252 . 253) (nil tag-name "a" 251 . 252) (nil tag-type start 251 . 252) (nil tag-beg 17 251 . 252) (nil font-lock-face web-mode-html-tag-bracket-face 251 . 252) (nil face whitespace-tab 248 . 251) (nil tag-name "article" 246 . 247) (nil tag-type start 246 . 247) (nil tag-end t 246 . 247) (nil font-lock-face web-mode-html-tag-bracket-face 246 . 247) (nil tag-attr t 245 . 246) (nil tag-attr-end 5 245 . 246) (nil tag-name "article" 245 . 246) (nil tag-type start 245 . 246) (nil font-lock-face web-mode-html-attr-value-face 245 . 246) (nil tag-attr t 226 . 245) (nil tag-name "article" 226 . 245) (nil tag-type start 226 . 245) (nil font-lock-face web-mode-html-attr-value-face 226 . 245) (nil tag-attr t 225 . 226) (nil tag-name "article" 225 . 226) (nil tag-type start 225 . 226) (nil font-lock-face web-mode-html-attr-equal-face 225 . 226) (nil tag-attr t 221 . 225) (nil tag-name "article" 221 . 225) (nil tag-type start 221 . 225) (nil font-lock-face web-mode-html-attr-name-face 221 . 225) (nil tag-attr-beg 0 220 . 221) (nil tag-attr t 220 . 221) (nil tag-name "article" 220 . 221) (nil tag-type start 220 . 221) (nil font-lock-face web-mode-html-attr-name-face 220 . 221) (nil tag-name "article" 219 . 220) (nil tag-type start 219 . 220) (nil tag-name "article" 212 . 219) (nil tag-type start 212 . 219) (nil font-lock-face web-mode-html-tag-face 212 . 219) (nil tag-name "article" 211 . 212) (nil tag-type start 211 . 212) (nil tag-beg 17 211 . 212) (nil font-lock-face web-mode-html-tag-bracket-face 211 . 212) (211 . 1452)) nil (25669 45328 897590 692000) 0 nil])
([nil nil ((1457 . 1463) (#("  	" 2 3 (face whitespace-tab)) . -1446) (1446 . 1448) (#("	" 0 1 (face whitespace-tab)) . 1446) (1440 . 1446) (1452 . 1453)) nil (25669 45328 897373 899000) 0 nil])
([nil nil ((#("		" 0 2 (face whitespace-tab)) . -1419) (#("      		" 6 8 (face whitespace-tab)) . -1412) (1412 . 1418) (#("	" 0 1 (face whitespace-tab)) . 1412) (1410 . 1412) (#("    			" 4 7 (face whitespace-tab)) . -1403) (1403 . 1407) (#("	" 0 1 (face whitespace-tab)) . 1403) (1399 . 1403) (#("  				" 2 6 (face whitespace-tab)) . -1337) (1337 . 1339) (#("	" 0 1 (face whitespace-tab)) . 1337) (1331 . 1337) (#("    			" 4 7 (face whitespace-tab)) . -1297) (1297 . 1301) (#("	" 0 1 (face whitespace-tab)) . 1297) (1293 . 1297) (#("    			" 4 7 (face whitespace-tab)) . -1223) (1223 . 1227) (#("	" 0 1 (face whitespace-tab)) . 1223) (1219 . 1223) (#("    			" 4 7 (face whitespace-tab)) . -1152) (1152 . 1156) (#("	" 0 1 (face whitespace-tab)) . 1152) (1148 . 1152) (#("      		" 6 8 (face whitespace-tab)) . -1117) (1117 . 1123) (#("	" 0 1 (face whitespace-tab)) . 1117) (1115 . 1117) (#("      		" 6 8 (face whitespace-tab)) . -699) (699 . 705) (#("	" 0 1 (face whitespace-tab)) . 699) (697 . 699) (#("      		" 6 8 (face whitespace-tab)) . -662) (662 . 668) (#("	" 0 1 (face whitespace-tab)) . 662) (660 . 662) (#("      		" 6 8 (face whitespace-tab)) . -652) (652 . 658) (#("	" 0 1 (face whitespace-tab)) . 652) (650 . 652) (#("    			" 4 7 (face whitespace-tab)) . -641) (641 . 645) (#("	" 0 1 (face whitespace-tab)) . 641) (637 . 641) (#("  				" 2 6 (face whitespace-tab)) . -577) (577 . 579) (#("	" 0 1 (face whitespace-tab)) . 577) (571 . 577) (#("    			" 4 7 (face whitespace-tab)) . -532) (532 . 536) (#("	" 0 1 (face whitespace-tab)) . 532) (528 . 532) (#("      		" 6 8 (face whitespace-tab)) . -488) (488 . 494) (#("	" 0 1 (face whitespace-tab)) . 488) (486 . 488) (#("      		" 6 8 (face whitespace-tab)) . -417) (417 . 423) (#("	" 0 1 (face whitespace-tab)) . 417) (415 . 417) (#("		" 0 2 (face whitespace-tab)) . -385) (#("		" 0 2 (face whitespace-tab)) . -379) (#("      		" 6 8 (face whitespace-tab)) . -292) (292 . 298) (#("	" 0 1 (face whitespace-tab)) . 292) (290 . 292) (#("		" 0 2 (face whitespace-tab)) . -249) 211) nil (25669 45328 897365 78000) 0 nil])
([nil nil (("Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, fugiat asperiores inventore beatae accusamus odit minima enim, commodi quia, doloribus eius! Ducimus nemo accusantium maiores velit corrupti tempora reiciendis molestiae repellat vero. Eveniet ipsam adipisci illo iusto quibusdam, sunt neque nulla unde ipsum dolores nobis enim quidem excepturi, illum quos!" . 734) (undo-tree-id663 . -373) (undo-tree-id664 . -373)) nil (25669 45328 897350 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 764 . 765) (nil block-side t 764 . 765) (nil block-end t 764 . 765) (nil block-token delimiter-end 764 . 765) (nil font-lock-face web-mode-block-delimiter-face 764 . 765) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 764 . 765) (nil block-side t 763 . 764) (nil block-token delimiter-end 763 . 764) (nil font-lock-face web-mode-block-delimiter-face 763 . 764) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 763 . 764) (nil block-side t 762 . 763) (nil block-side t 756 . 762) (nil face web-mode-filter-face 756 . 762) (nil block-side t 753 . 756) (nil block-side t 742 . 753) (nil face web-mode-variable-name-face 742 . 753) (nil block-side t 741 . 742) (nil block-side t 737 . 741) (nil face web-mode-variable-name-face 737 . 741) (nil block-side t 736 . 737) (nil block-side t 735 . 736) (nil block-token delimiter-beg 735 . 736) (nil font-lock-face web-mode-block-delimiter-face 735 . 736) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 735 . 736) (nil block-beg 0 734 . 735) (nil block-controls 0 734 . 735) (nil block-side t 734 . 735) (nil block-token delimiter-beg 734 . 735) (nil font-lock-face web-mode-block-delimiter-face 734 . 735) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 734 . 735) (734 . 765)) nil (25669 45328 897345 498000) 0 nil])
([nil nil (("Podcast Title" . 462) (undo-tree-id661 . -13) (undo-tree-id662 . -13)) nil (25669 45328 897338 142000) 0 nil])
([nil nil ((nil rear-nonsticky nil 485 . 486) (nil block-side t 485 . 486) (nil block-end t 485 . 486) (nil block-token delimiter-end 485 . 486) (nil font-lock-face web-mode-block-delimiter-face 485 . 486) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 485 . 486) (nil block-side t 484 . 485) (nil block-token delimiter-end 484 . 485) (nil font-lock-face web-mode-block-delimiter-face 484 . 485) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 484 . 485) (nil block-side t 483 . 484) (nil block-side t 477 . 483) (nil face web-mode-filter-face 477 . 483) (nil block-side t 474 . 477) (nil block-side t 470 . 474) (nil face web-mode-variable-name-face 470 . 474) (nil block-side t 469 . 470) (nil block-side t 465 . 469) (nil face web-mode-variable-name-face 465 . 469) (nil block-side t 464 . 465) (nil block-side t 463 . 464) (nil block-token delimiter-beg 463 . 464) (nil font-lock-face web-mode-block-delimiter-face 463 . 464) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 463 . 464) (nil block-beg 0 462 . 463) (nil block-controls 0 462 . 463) (nil block-side t 462 . 463) (nil block-token delimiter-beg 462 . 463) (nil font-lock-face web-mode-block-delimiter-face 462 . 463) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 462 . 463) (462 . 486)) nil (25669 45328 897332 745000) 0 nil])
([nil nil ((#("#" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -1015) (undo-tree-id660 . -1) 1016) nil (25669 45328 897324 425000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1073 . 1074) (nil block-side t 1073 . 1074) (nil block-end t 1073 . 1074) (nil block-token delimiter-end 1073 . 1074) (nil tag-attr t 1073 . 1074) (nil tag-name "a" 1073 . 1074) (nil tag-type start 1073 . 1074) (nil font-lock-face web-mode-block-delimiter-face 1073 . 1074) (nil block-side t 1072 . 1073) (nil block-token delimiter-end 1072 . 1073) (nil tag-attr t 1072 . 1073) (nil tag-name "a" 1072 . 1073) (nil tag-type start 1072 . 1073) (nil font-lock-face web-mode-block-delimiter-face 1072 . 1073) (nil block-side t 1071 . 1072) (nil tag-attr t 1071 . 1072) (nil tag-name "a" 1071 . 1072) (nil tag-type start 1071 . 1072) (nil block-side t 1068 . 1071) (nil block-token string 1068 . 1071) (nil tag-attr t 1068 . 1071) (nil tag-name "a" 1068 . 1071) (nil tag-type start 1068 . 1071) (nil font-lock-face web-mode-block-string-face 1068 . 1071) (nil block-side t 1066 . 1068) (nil tag-attr t 1066 . 1068) (nil tag-name "a" 1066 . 1068) (nil tag-type start 1066 . 1068) (nil block-side t 1062 . 1066) (nil block-token string 1062 . 1066) (nil tag-attr t 1062 . 1066) (nil tag-name "a" 1062 . 1066) (nil tag-type start 1062 . 1066) (nil font-lock-face web-mode-block-string-face 1062 . 1066) (nil block-side t 1060 . 1062) (nil tag-attr t 1060 . 1062) (nil tag-name "a" 1060 . 1062) (nil tag-type start 1060 . 1062) (nil block-side t 1053 . 1060) (nil tag-attr t 1053 . 1060) (nil tag-name "a" 1053 . 1060) (nil tag-type start 1053 . 1060) (nil face web-mode-filter-face 1053 . 1060) (nil block-side t 1050 . 1053) (nil tag-attr t 1050 . 1053) (nil tag-name "a" 1050 . 1053) (nil tag-type start 1050 . 1053) (nil block-side t 1043 . 1050) (nil tag-attr t 1043 . 1050) (nil tag-name "a" 1043 . 1050) (nil tag-type start 1043 . 1050) (nil face web-mode-variable-name-face 1043 . 1050) (nil block-side t 1042 . 1043) (nil tag-attr t 1042 . 1043) (nil tag-name "a" 1042 . 1043) (nil tag-type start 1042 . 1043) (nil block-side t 1038 . 1042) (nil tag-attr t 1038 . 1042) (nil tag-name "a" 1038 . 1042) (nil tag-type start 1038 . 1042) (nil face web-mode-variable-name-face 1038 . 1042) (nil block-side t 1036 . 1038) (nil tag-attr t 1036 . 1038) (nil tag-name "a" 1036 . 1038) (nil tag-type start 1036 . 1038) (nil block-side t 1029 . 1036) (nil tag-attr t 1029 . 1036) (nil tag-name "a" 1029 . 1036) (nil tag-type start 1029 . 1036) (nil face web-mode-filter-face 1029 . 1036) (nil block-side t 1026 . 1029) (nil tag-attr t 1026 . 1029) (nil tag-name "a" 1026 . 1029) (nil tag-type start 1026 . 1029) (nil block-side t 1023 . 1026) (nil tag-attr t 1023 . 1026) (nil tag-name "a" 1023 . 1026) (nil tag-type start 1023 . 1026) (nil face web-mode-variable-name-face 1023 . 1026) (nil block-side t 1022 . 1023) (nil tag-attr t 1022 . 1023) (nil tag-name "a" 1022 . 1023) (nil tag-type start 1022 . 1023) (nil block-side t 1018 . 1022) (nil tag-attr t 1018 . 1022) (nil tag-name "a" 1018 . 1022) (nil tag-type start 1018 . 1022) (nil face web-mode-variable-name-face 1018 . 1022) (nil block-side t 1017 . 1018) (nil tag-attr t 1017 . 1018) (nil tag-name "a" 1017 . 1018) (nil tag-type start 1017 . 1018) (nil block-side t 1016 . 1017) (nil block-token delimiter-beg 1016 . 1017) (nil tag-attr t 1016 . 1017) (nil tag-name "a" 1016 . 1017) (nil tag-type start 1016 . 1017) (nil font-lock-face web-mode-block-delimiter-face 1016 . 1017) (nil block-beg 0 1015 . 1016) (nil block-controls 0 1015 . 1016) (nil block-side t 1015 . 1016) (nil block-token delimiter-beg 1015 . 1016) (nil tag-attr t 1015 . 1016) (nil tag-name "a" 1015 . 1016) (nil tag-type start 1015 . 1016) (nil font-lock-face web-mode-block-delimiter-face 1015 . 1016) (1015 . 1074)) nil (25669 45328 897315 937000) 0 nil])
([nil nil ((#("#" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -285) (undo-tree-id659 . -1) 286) nil (25669 45328 897292 442000) 0 nil])
([nil nil ((nil rear-nonsticky nil 343 . 344) (nil block-side t 343 . 344) (nil block-end t 343 . 344) (nil block-token delimiter-end 343 . 344) (nil tag-attr t 343 . 344) (nil tag-name "a" 343 . 344) (nil tag-type start 343 . 344) (nil font-lock-face web-mode-block-delimiter-face 343 . 344) (nil block-side t 342 . 343) (nil block-token delimiter-end 342 . 343) (nil tag-attr t 342 . 343) (nil tag-name "a" 342 . 343) (nil tag-type start 342 . 343) (nil font-lock-face web-mode-block-delimiter-face 342 . 343) (nil block-side t 341 . 342) (nil tag-attr t 341 . 342) (nil tag-name "a" 341 . 342) (nil tag-type start 341 . 342) (nil block-side t 338 . 341) (nil block-token string 338 . 341) (nil tag-attr t 338 . 341) (nil tag-name "a" 338 . 341) (nil tag-type start 338 . 341) (nil font-lock-face web-mode-block-string-face 338 . 341) (nil block-side t 336 . 338) (nil tag-attr t 336 . 338) (nil tag-name "a" 336 . 338) (nil tag-type start 336 . 338) (nil block-side t 332 . 336) (nil block-token string 332 . 336) (nil tag-attr t 332 . 336) (nil tag-name "a" 332 . 336) (nil tag-type start 332 . 336) (nil font-lock-face web-mode-block-string-face 332 . 336) (nil block-side t 330 . 332) (nil tag-attr t 330 . 332) (nil tag-name "a" 330 . 332) (nil tag-type start 330 . 332) (nil block-side t 323 . 330) (nil tag-attr t 323 . 330) (nil tag-name "a" 323 . 330) (nil tag-type start 323 . 330) (nil face web-mode-filter-face 323 . 330) (nil block-side t 320 . 323) (nil tag-attr t 320 . 323) (nil tag-name "a" 320 . 323) (nil tag-type start 320 . 323) (nil block-side t 313 . 320) (nil tag-attr t 313 . 320) (nil tag-name "a" 313 . 320) (nil tag-type start 313 . 320) (nil face web-mode-variable-name-face 313 . 320) (nil block-side t 312 . 313) (nil tag-attr t 312 . 313) (nil tag-name "a" 312 . 313) (nil tag-type start 312 . 313) (nil block-side t 308 . 312) (nil tag-attr t 308 . 312) (nil tag-name "a" 308 . 312) (nil tag-type start 308 . 312) (nil face web-mode-variable-name-face 308 . 312) (nil block-side t 306 . 308) (nil tag-attr t 306 . 308) (nil tag-name "a" 306 . 308) (nil tag-type start 306 . 308) (nil block-side t 299 . 306) (nil tag-attr t 299 . 306) (nil tag-name "a" 299 . 306) (nil tag-type start 299 . 306) (nil face web-mode-filter-face 299 . 306) (nil block-side t 296 . 299) (nil tag-attr t 296 . 299) (nil tag-name "a" 296 . 299) (nil tag-type start 296 . 299) (nil block-side t 293 . 296) (nil tag-attr t 293 . 296) (nil tag-name "a" 293 . 296) (nil tag-type start 293 . 296) (nil face web-mode-variable-name-face 293 . 296) (nil block-side t 292 . 293) (nil tag-attr t 292 . 293) (nil tag-name "a" 292 . 293) (nil tag-type start 292 . 293) (nil block-side t 288 . 292) (nil tag-attr t 288 . 292) (nil tag-name "a" 288 . 292) (nil tag-type start 288 . 292) (nil face web-mode-variable-name-face 288 . 292) (nil block-side t 287 . 288) (nil tag-attr t 287 . 288) (nil tag-name "a" 287 . 288) (nil tag-type start 287 . 288) (nil block-side t 286 . 287) (nil block-token delimiter-beg 286 . 287) (nil tag-attr t 286 . 287) (nil tag-name "a" 286 . 287) (nil tag-type start 286 . 287) (nil font-lock-face web-mode-block-delimiter-face 286 . 287) (nil block-beg 0 285 . 286) (nil block-controls 0 285 . 286) (nil block-side t 285 . 286) (nil block-token delimiter-beg 285 . 286) (nil tag-attr t 285 . 286) (nil tag-name "a" 285 . 286) (nil tag-type start 285 . 286) (nil font-lock-face web-mode-block-delimiter-face 285 . 286) (285 . 344)) nil (25669 45328 897284 544000) 0 nil])
([nil nil ((#("#" 0 1 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face)) . -517) (undo-tree-id658 . -1) 518) nil (25669 45328 897259 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 575 . 576) (nil block-side t 575 . 576) (nil block-end t 575 . 576) (nil block-token delimiter-end 575 . 576) (nil tag-attr t 575 . 576) (nil tag-name "a" 575 . 576) (nil tag-type start 575 . 576) (nil font-lock-face web-mode-block-delimiter-face 575 . 576) (nil block-side t 574 . 575) (nil block-token delimiter-end 574 . 575) (nil tag-attr t 574 . 575) (nil tag-name "a" 574 . 575) (nil tag-type start 574 . 575) (nil font-lock-face web-mode-block-delimiter-face 574 . 575) (nil block-side t 573 . 574) (nil tag-attr t 573 . 574) (nil tag-name "a" 573 . 574) (nil tag-type start 573 . 574) (nil block-side t 570 . 573) (nil block-token string 570 . 573) (nil tag-attr t 570 . 573) (nil tag-name "a" 570 . 573) (nil tag-type start 570 . 573) (nil font-lock-face web-mode-block-string-face 570 . 573) (nil block-side t 568 . 570) (nil tag-attr t 568 . 570) (nil tag-name "a" 568 . 570) (nil tag-type start 568 . 570) (nil block-side t 564 . 568) (nil block-token string 564 . 568) (nil tag-attr t 564 . 568) (nil tag-name "a" 564 . 568) (nil tag-type start 564 . 568) (nil font-lock-face web-mode-block-string-face 564 . 568) (nil block-side t 562 . 564) (nil tag-attr t 562 . 564) (nil tag-name "a" 562 . 564) (nil tag-type start 562 . 564) (nil block-side t 555 . 562) (nil tag-attr t 555 . 562) (nil tag-name "a" 555 . 562) (nil tag-type start 555 . 562) (nil face web-mode-filter-face 555 . 562) (nil block-side t 552 . 555) (nil tag-attr t 552 . 555) (nil tag-name "a" 552 . 555) (nil tag-type start 552 . 555) (nil block-side t 545 . 552) (nil tag-attr t 545 . 552) (nil tag-name "a" 545 . 552) (nil tag-type start 545 . 552) (nil face web-mode-variable-name-face 545 . 552) (nil block-side t 544 . 545) (nil tag-attr t 544 . 545) (nil tag-name "a" 544 . 545) (nil tag-type start 544 . 545) (nil block-side t 540 . 544) (nil tag-attr t 540 . 544) (nil tag-name "a" 540 . 544) (nil tag-type start 540 . 544) (nil face web-mode-variable-name-face 540 . 544) (nil block-side t 538 . 540) (nil tag-attr t 538 . 540) (nil tag-name "a" 538 . 540) (nil tag-type start 538 . 540) (nil block-side t 531 . 538) (nil tag-attr t 531 . 538) (nil tag-name "a" 531 . 538) (nil tag-type start 531 . 538) (nil face web-mode-filter-face 531 . 538) (nil block-side t 528 . 531) (nil tag-attr t 528 . 531) (nil tag-name "a" 528 . 531) (nil tag-type start 528 . 531) (nil block-side t 525 . 528) (nil tag-attr t 525 . 528) (nil tag-name "a" 525 . 528) (nil tag-type start 525 . 528) (nil face web-mode-variable-name-face 525 . 528) (nil block-side t 524 . 525) (nil tag-attr t 524 . 525) (nil tag-name "a" 524 . 525) (nil tag-type start 524 . 525) (nil block-side t 520 . 524) (nil tag-attr t 520 . 524) (nil tag-name "a" 520 . 524) (nil tag-type start 520 . 524) (nil face web-mode-variable-name-face 520 . 524) (nil block-side t 519 . 520) (nil tag-attr t 519 . 520) (nil tag-name "a" 519 . 520) (nil tag-type start 519 . 520) (nil block-side t 518 . 519) (nil block-token delimiter-beg 518 . 519) (nil tag-attr t 518 . 519) (nil tag-name "a" 518 . 519) (nil tag-type start 518 . 519) (nil font-lock-face web-mode-block-delimiter-face 518 . 519) (nil block-beg 0 517 . 518) (nil block-controls 0 517 . 518) (nil block-side t 517 . 518) (nil block-token delimiter-beg 517 . 518) (nil tag-attr t 517 . 518) (nil tag-name "a" 517 . 518) (nil tag-type start 517 . 518) (nil font-lock-face web-mode-block-delimiter-face 517 . 518) (517 . 576)) nil (25669 45328 897251 827000) 0 nil])
([nil nil ((#("https://picsum.photos/1000/1000" 0 31 (tag-attr t tag-name "img" tag-type void font-lock-face web-mode-html-attr-value-face)) . 382) (undo-tree-id656 . -31) (undo-tree-id657 . -31)) nil (25669 45328 897228 368000) 0 nil])
([nil nil ((nil rear-nonsticky nil 406 . 407) (nil block-side t 406 . 407) (nil block-end t 406 . 407) (nil block-token delimiter-end 406 . 407) (nil tag-attr t 406 . 407) (nil tag-name "img" 406 . 407) (nil tag-type void 406 . 407) (nil font-lock-face web-mode-block-delimiter-face 406 . 407) (nil block-side t 405 . 406) (nil block-token delimiter-end 405 . 406) (nil tag-attr t 405 . 406) (nil tag-name "img" 405 . 406) (nil tag-type void 405 . 406) (nil font-lock-face web-mode-block-delimiter-face 405 . 406) (nil block-side t 404 . 405) (nil tag-attr t 404 . 405) (nil tag-name "img" 404 . 405) (nil tag-type void 404 . 405) (nil block-side t 398 . 404) (nil tag-attr t 398 . 404) (nil tag-name "img" 398 . 404) (nil tag-type void 398 . 404) (nil face web-mode-filter-face 398 . 404) (nil block-side t 395 . 398) (nil tag-attr t 395 . 398) (nil tag-name "img" 395 . 398) (nil tag-type void 395 . 398) (nil block-side t 390 . 395) (nil tag-attr t 390 . 395) (nil tag-name "img" 390 . 395) (nil tag-type void 390 . 395) (nil face web-mode-variable-name-face 390 . 395) (nil block-side t 389 . 390) (nil tag-attr t 389 . 390) (nil tag-name "img" 389 . 390) (nil tag-type void 389 . 390) (nil block-side t 385 . 389) (nil tag-attr t 385 . 389) (nil tag-name "img" 385 . 389) (nil tag-type void 385 . 389) (nil face web-mode-variable-name-face 385 . 389) (nil block-side t 384 . 385) (nil tag-attr t 384 . 385) (nil tag-name "img" 384 . 385) (nil tag-type void 384 . 385) (nil block-side t 383 . 384) (nil block-token delimiter-beg 383 . 384) (nil tag-attr t 383 . 384) (nil tag-name "img" 383 . 384) (nil tag-type void 383 . 384) (nil font-lock-face web-mode-block-delimiter-face 383 . 384) (nil block-beg 0 382 . 383) (nil block-controls 0 382 . 383) (nil block-side t 382 . 383) (nil block-token delimiter-beg 382 . 383) (nil tag-attr t 382 . 383) (nil tag-name "img" 382 . 383) (nil tag-type void 382 . 383) (nil font-lock-face web-mode-block-delimiter-face 382 . 383) (382 . 407)) nil (25669 45328 897221 950000) 0 nil])
([nil nil ((#("      <div class=\"card\" style=\"background-image: url({{ post.cover | escape }});\">
        <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"overlay\"></a>
        <div class=\"content\">
          <h2 class=\"title\">{{ post.name | escape }}</h2>
          <div class=\"wrap_description\">
            <p class=\"copy\">{{ post.description | escape }}</p>
          </div>
          <div class=\"link_wrap\">
            <a href=\"{{ post.url | prepend: site.baseurl | replace: '//', '/' }}\" class=\"btn\">Read more</a>
          </div>
        </div>
      </div>" 6 7 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-name "div" tag-type start) 24 25 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 25 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 30 53 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t tag-attr t tag-name "div" tag-type start) 56 60 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "div" tag-type start) 61 66 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-variable-name-face) 66 69 (block-side t tag-attr t tag-name "div" tag-type start) 69 75 (block-side t tag-attr t tag-name "div" tag-type start face web-mode-filter-face) 75 76 (block-side t tag-attr t tag-name "div" tag-type start) 76 77 (block-side t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 77 78 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "div" tag-type start font-lock-face web-mode-block-delimiter-face) 78 80 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 91 92 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 92 93 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 93 94 (tag-name "a" tag-type start) 94 95 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 95 98 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 98 99 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 99 100 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 100 101 (block-beg 0 block-controls nil block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 101 102 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 102 103 (block-side t tag-attr t tag-name "a" tag-type start) 103 104 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 104 107 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 107 108 (block-side t tag-attr t tag-name "a" tag-type start) 108 110 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 110 111 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 111 114 (block-side t tag-attr t tag-name "a" tag-type start) 114 115 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 115 121 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 121 122 (block-side t tag-attr t tag-name "a" tag-type start) 122 123 (block-side t tag-attr t tag-name "a" tag-type start) 123 124 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 124 127 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 127 128 (block-side t tag-attr t tag-name "a" tag-type start) 128 134 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 134 135 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 135 138 (block-side t tag-attr t tag-name "a" tag-type start) 138 139 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 139 145 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 145 146 (block-side t tag-attr t tag-name "a" tag-type start) 146 147 (block-side t tag-attr t tag-name "a" tag-type start) 147 151 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 151 153 (block-side t tag-attr t tag-name "a" tag-type start) 153 156 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 156 157 (block-side t tag-attr t tag-name "a" tag-type start) 157 158 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 158 159 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 159 160 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 160 161 (tag-name "a" tag-type start) 161 162 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 162 163 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 163 164 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 164 165 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 165 166 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 166 167 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 167 168 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 168 174 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 174 175 (rear-nonsticky t tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 175 176 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 176 177 (rear-nonsticky t tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 177 178 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 178 179 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 179 180 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 180 181 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 190 191 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 191 194 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 194 195 (tag-name "div" tag-type start) 195 196 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 196 200 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 200 201 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 201 209 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 209 210 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 210 211 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 222 223 (tag-name "h2" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 223 225 (tag-name "h2" tag-type start font-lock-face web-mode-html-tag-face) 225 226 (tag-name "h2" tag-type start) 226 227 (tag-attr-beg 0 tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-name-face) 227 231 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-name-face) 231 232 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-equal-face) 232 238 (tag-attr t tag-name "h2" tag-type start font-lock-face web-mode-html-attr-value-face) 238 239 (tag-attr t tag-attr-end 5 tag-name "h2" tag-type start font-lock-face web-mode-html-attr-value-face) 239 240 (tag-name "h2" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 240 241 (block-beg 0 block-controls nil block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 241 242 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 242 243 (block-side t) 243 247 (block-side t face web-mode-variable-name-face) 247 248 (block-side t) 248 252 (block-side t face web-mode-variable-name-face) 252 255 (block-side t) 255 261 (block-side t face web-mode-filter-face) 261 262 (block-side t) 262 263 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 263 264 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 264 265 (tag-name "h2" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 265 266 (tag-name "h2" tag-type end font-lock-face web-mode-html-tag-bracket-face) 266 268 (tag-name "h2" tag-type end font-lock-face web-mode-html-tag-face) 268 269 (tag-name "h2" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 280 281 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 281 284 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 284 285 (tag-name "div" tag-type start) 285 286 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 286 290 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 290 291 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 291 308 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 308 309 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 309 310 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 323 324 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 324 325 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 325 326 (tag-name "p" tag-type start) 326 327 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 327 331 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 331 332 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 332 337 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 337 338 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 338 339 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 339 340 (block-beg 0 block-controls nil block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 340 341 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 341 342 (block-side t) 342 346 (block-side t face web-mode-variable-name-face) 346 347 (block-side t) 347 358 (block-side t face web-mode-variable-name-face) 358 361 (block-side t) 361 367 (block-side t face web-mode-filter-face) 367 368 (block-side t) 368 369 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 369 370 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 370 371 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 371 372 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 372 373 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 373 374 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 385 386 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 386 387 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 387 390 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 390 391 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 402 403 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 403 406 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 406 407 (tag-name "div" tag-type start) 407 408 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 408 409 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 409 410 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 410 411 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 411 412 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 412 413 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 413 423 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 423 424 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 424 425 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 438 439 (tag-name "a" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 439 440 (tag-name "a" tag-type start font-lock-face web-mode-html-tag-face) 440 441 (tag-name "a" tag-type start) 441 442 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 442 445 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 445 446 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 446 447 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 447 448 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 448 449 (block-side t block-token delimiter-beg tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 449 450 (block-side t tag-attr t tag-name "a" tag-type start) 450 454 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 454 455 (block-side t tag-attr t tag-name "a" tag-type start) 455 458 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 458 461 (block-side t tag-attr t tag-name "a" tag-type start) 461 468 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 468 470 (block-side t tag-attr t tag-name "a" tag-type start) 470 474 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 474 475 (block-side t tag-attr t tag-name "a" tag-type start) 475 482 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-variable-name-face) 482 485 (block-side t tag-attr t tag-name "a" tag-type start) 485 492 (block-side t tag-attr t tag-name "a" tag-type start face web-mode-filter-face) 492 494 (block-side t tag-attr t tag-name "a" tag-type start) 494 498 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 498 500 (block-side t tag-attr t tag-name "a" tag-type start) 500 503 (block-side t block-token string tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-string-face) 503 504 (block-side t tag-attr t tag-name "a" tag-type start) 504 505 (block-side t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 505 506 (block-side t block-end t block-token delimiter-end tag-attr t tag-name "a" tag-type start font-lock-face web-mode-block-delimiter-face) 506 507 (tag-attr t tag-attr-end 4 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 507 508 (tag-name "a" tag-type start) 508 509 (tag-attr-beg 0 tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 509 513 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-name-face) 513 514 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-equal-face) 514 518 (tag-attr t tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 518 519 (tag-attr t tag-attr-end 5 tag-name "a" tag-type start font-lock-face web-mode-html-attr-value-face) 519 520 (tag-name "a" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 529 530 (tag-name "a" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 530 531 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-bracket-face) 531 532 (tag-name "a" tag-type end font-lock-face web-mode-html-tag-face) 532 533 (tag-name "a" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 544 545 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 545 546 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 546 549 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 549 550 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 559 560 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 560 561 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 561 564 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 564 565 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 572 573 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 573 574 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 574 577 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 577 578 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1287) (undo-tree-id637 . -578) (undo-tree-id638 . -310) (undo-tree-id639 . -310) (undo-tree-id640 . -551) (undo-tree-id641 . -336) (undo-tree-id642 . -533) (undo-tree-id643 . -83) (undo-tree-id644 . -212) (undo-tree-id645 . -425) (undo-tree-id646 . -391) (undo-tree-id647 . -391) (undo-tree-id648 . -425) (undo-tree-id649 . -83) (undo-tree-id650 . -264) (undo-tree-id651 . -506) (undo-tree-id652 . -79) (undo-tree-id653 . -78) (undo-tree-id654 . -578) (undo-tree-id655 . -578)) nil (25669 45328 897205 850000) 0 nil])
([nil nil (("
" . -1279) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (" " . -1280) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (" " . -1281) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (" " . -1282) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (" " . -1283) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (" " . -1284) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (" " . -1285) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) ("
" . -1286) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 1287) nil (25669 45328 897171 819000) 0 nil])
([nil nil ((121 . 122) (t 25669 45328 910142 119000)) nil (25669 45500 32615 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 134 . 135) (nil fontified t 122 . 135) (nil tag-attr t 122 . 135) (nil tag-name "section" 122 . 135) (nil tag-type start 122 . 135) (nil font-lock-face web-mode-html-attr-value-face 122 . 135) (122 . 135)) nil (25669 45500 32607 331000) 0 nil])
([nil nil (("page" . 13) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (t 25669 45500 41801 41000)) nil (25669 45714 751090 570000) 0 nil])
([nil nil ((13 . 26)) nil (25669 45714 751073 162000) 0 nil])
([nil nil ((#("ark" 0 3 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . 127) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (t 25669 45714 765380 240000)) nil (25669 45947 216018 466000) 0 nil])
([nil nil ((#("d" 0 1 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . -126) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 127) nil (25669 45947 216012 583000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "section" tag-type start font-lock-face web-mode-html-attr-value-face)) . 126) (undo-tree-id674 . -1)) nil (25669 45947 216002 709000) 0 nil])
([nil nil (("55 mins." . 1075) (undo-tree-id693 . -8) (undo-tree-id694 . -8) (t 25669 45947 228930 793000)) nil (25669 46412 78247 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1192 . 1193) (nil block-side t 1192 . 1193) (nil block-end t 1192 . 1193) (nil block-token delimiter-end 1192 . 1193) (nil font-lock-face web-mode-block-delimiter-face 1192 . 1193) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1192 . 1193) (nil block-side t 1191 . 1192) (nil block-token delimiter-end 1191 . 1192) (nil font-lock-face web-mode-block-delimiter-face 1191 . 1192) (nil block-side t 1190 . 1191) (nil block-side t 1178 . 1190) (nil face web-mode-variable-name-face 1178 . 1190) (nil block-side t 1177 . 1178) (nil block-side t 1170 . 1177) (nil face web-mode-variable-name-face 1170 . 1177) (nil block-side t 1109 . 1170) (nil block-side t 1095 . 1109) (nil face web-mode-variable-name-face 1095 . 1109) (nil block-side t 1094 . 1095) (nil block-side t 1087 . 1094) (nil face web-mode-block-control-face 1087 . 1094) (nil block-side t 1086 . 1087) (nil block-side t 1085 . 1086) (nil block-token delimiter-beg 1085 . 1086) (nil font-lock-face web-mode-block-delimiter-face 1085 . 1086) (nil block-beg 0 1084 . 1085) (nil block-controls 0 1084 . 1085) (nil block-side t 1084 . 1085) (nil block-token delimiter-beg 1084 . 1085) (nil font-lock-face web-mode-block-delimiter-face 1084 . 1085) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1084 . 1085) (nil font-lock-face (web-mode-html-entity-face) 1075 . 1083) (1075 . 1193)) nil (25669 46412 78242 177000) 0 nil])
([nil nil ((#("middot;" 0 7 (font-lock-face (web-mode-html-entity-face))) . 1076) (undo-tree-id691 . -7) (undo-tree-id692 . -7)) nil (25669 46412 78233 552000) 0 nil])
([nil nil (("&" . -1075) (undo-tree-id689 . -1) (undo-tree-id690 . -1) 1076) nil (25669 46412 78230 46000) 0 nil])
([nil nil ((" " . 1075)) nil (25669 46412 78226 443000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#("
" 0 1 (block-side t)) . 1100) (undo-tree-id688 . -1)) nil (25669 46412 78222 794000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100)) nil (25669 46412 78213 785000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100)) nil (25669 46412 78207 820000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100) (#(" " 0 1 (block-side t)) . 1100)) nil (25669 46412 78204 274000) 0 nil])
([nil nil ((#("a" 0 1 (block-side t face web-mode-variable-name-face)) . -1110) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (#("g" 0 1 (block-side t face web-mode-variable-name-face)) . -1111) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("e" 0 1 (block-side t face web-mode-variable-name-face)) . -1112) (undo-tree-id687 . -1) 1113) nil (25669 46412 78198 619000) 0 nil])
([nil nil ((1110 . 1113)) nil (25669 46412 78174 726000) 0 nil])
([nil nil (("Play Episode" . 1277) (undo-tree-id696 . -12) (undo-tree-id697 . -12) (undo-tree-id698 . -12) (t 25669 46412 92042 680000)) nil (25669 46564 315968 442000) 0 nil])
([nil nil ((1277 . 1288)) nil (25669 46564 315954 736000) 0 nil])
([nil nil ((" " . -1287) (undo-tree-id695 . -1) 1288) nil (25669 46564 315948 140000) 0 nil])
([nil nil (("Podcast" . 1002) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (t 25669 46564 327753 610000)) nil (25669 46650 967639 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1032 . 1033) (nil rear-nonsticky t 1032 . 1033) (nil block-side t 1032 . 1033) (nil block-end t 1032 . 1033) (nil block-token delimiter-end 1032 . 1033) (nil font-lock-face web-mode-block-delimiter-face 1032 . 1033) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1032 . 1033) (nil block-side t 1031 . 1032) (nil block-token delimiter-end 1031 . 1032) (nil font-lock-face web-mode-block-delimiter-face 1031 . 1032) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1031 . 1032) (nil block-side t 1030 . 1031) (nil block-side t 1024 . 1030) (nil face web-mode-filter-face 1024 . 1030) (nil block-side t 1021 . 1024) (nil block-side t 1010 . 1021) (nil face web-mode-variable-name-face 1010 . 1021) (nil block-side t 1009 . 1010) (nil block-side t 1005 . 1009) (nil face web-mode-variable-name-face 1005 . 1009) (nil block-side t 1004 . 1005) (nil block-side t 1003 . 1004) (nil block-token delimiter-beg 1003 . 1004) (nil font-lock-face web-mode-block-delimiter-face 1003 . 1004) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 1003 . 1004) (nil block-beg 0 1002 . 1003) (nil block-controls 0 1002 . 1003) (nil block-side t 1002 . 1003) (nil block-token delimiter-beg 1002 . 1003) (nil font-lock-face web-mode-block-delimiter-face 1002 . 1003) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 1002 . 1003) (1002 . 1033)) nil (25669 46650 967633 679000) 0 nil])
([nil nil ((#("description" 0 11 (block-side t face web-mode-variable-name-face)) . 1010) (undo-tree-id699 . -11) (undo-tree-id700 . -11)) nil (25669 46650 967624 899000) 0 nil])
([nil nil ((1010 . 1014)) nil (25669 46650 967609 102000) 0 nil])
([nil nil ((#("| escape" 0 2 (block-side t) 2 8 (block-side t face web-mode-filter-face)) . 1015) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (t 25669 46650 983589 305000)) nil (25669 46784 345628 925000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -1014) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) 1015) nil (25669 46784 345617 413000) 0 nil])
([nil nil ((1014 . 1022) (t 25669 46784 359336 692000)) nil (25669 46813 721727 813000) 0 nil])
([nil nil ((#("strip" 0 5 (block-side t face web-mode-filter-face)) . 1017) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (t 25669 46813 735281 89000)) nil (25669 46848 940136 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1027 . 1028) (nil block-side t 1025 . 1028) (nil block-token string 1025 . 1028) (nil font-lock-face web-mode-block-string-face 1025 . 1028) (nil block-side t 1023 . 1025) (nil block-side t 1019 . 1023) (nil face web-mode-filter-face 1019 . 1023) (nil block-side t 1017 . 1019) (1017 . 1028)) nil (25669 46848 940126 653000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . 1017) (#("|" 0 1 (block-side t)) . 1017)) nil (25669 46848 940122 534000) 0 nil])
([nil nil ((1024 . 1025)) nil (25669 46848 940115 508000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t block-token string font-lock-face web-mode-block-string-face)) . 1024) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (t 25669 46848 955214 440000)) nil (25669 46855 134346 860000) 0 nil])
([nil nil ((1025 . 1026)) nil (25669 46855 134315 20000) 0 nil])
([nil nil ((#("play" 0 4 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1283) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (t 25669 46855 147202 724000)) nil (25669 46930 241783 491000) 0 nil])
([nil current ((1283 . 1287)) nil (25669 46930 241767 35000) 0 nil])
nil
