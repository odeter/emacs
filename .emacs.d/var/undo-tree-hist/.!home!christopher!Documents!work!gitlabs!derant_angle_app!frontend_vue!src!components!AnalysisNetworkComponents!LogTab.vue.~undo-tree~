(undo-tree-save-format-version . 1)
"86c8688f9820e6bf3ed86bd088de3a88ea69e855"
[nil nil nil nil (25450 27644 668576 124000) 0 nil]
([nil nil ((209 . 222) (t 25431 50906 360378 785000)) nil (25450 27644 668574 269000) 0 nil])
([nil nil ((222 . 233)) nil (25450 27644 668573 133000) 0 nil])
([nil nil ((228 . 242) (229 . 241) (#("              " 0 14 (face whitespace-trailing)) . 228) (228 . 242) (228 . 229) ("            " . 228) (227 . 240)) nil (25450 27644 668571 701000) 0 nil])
([nil nil ((#("            </div>" 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 14 17 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 243) (undo-tree-id55 . -18) (undo-tree-id56 . -18) (undo-tree-id57 . -18)) nil (25450 27644 668569 220000) 0 nil])
([nil nil (("
" . -227) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (" " . -228) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (" " . -229) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (" " . -230) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (" " . -231) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (" " . -232) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (" " . -233) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (" " . -234) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (" " . -235) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (" " . -236) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (" " . -237) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (" " . -238) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (" " . -239) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (" " . -240) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (" " . -241) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) ("
" . -242) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 243) nil (25450 27644 668560 228000) 0 nil])
([nil nil ((2809 . 2822)) nil (25450 27644 668501 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2839 . 2840) (nil tag-name "div" 2839 . 2840) (nil tag-type end 2839 . 2840) (nil tag-end t 2839 . 2840) (nil font-lock-face web-mode-html-tag-bracket-face 2839 . 2840) (nil tag-name "div" 2836 . 2839) (nil tag-type end 2836 . 2839) (nil font-lock-face web-mode-html-tag-face 2836 . 2839) (nil tag-name "div" 2835 . 2836) (nil tag-type end 2835 . 2836) (nil font-lock-face web-mode-html-tag-bracket-face 2835 . 2836) (nil tag-name "div" 2834 . 2835) (nil tag-type end 2834 . 2835) (nil tag-beg 20 2834 . 2835) (nil font-lock-face web-mode-html-tag-bracket-face 2834 . 2835) (2822 . 2840)) nil (25450 27644 668499 433000) 0 nil])
([nil nil (("            " . -2822) 2840) nil (25450 27644 668494 876000) 0 nil])
([nil nil ((234 . 240) (226 . 235)) nil (25450 27644 668493 497000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -239) (undo-tree-id4 . -1) 240) nil (25450 27644 668491 804000) 0 nil])
([nil nil ((239 . 248)) nil (25450 27644 668489 395000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -247) (undo-tree-id3 . -1) 248) nil (25450 27644 668488 203000) 0 nil])
([nil nil ((247 . 250)) nil (25450 27644 668485 738000) 0 nil])
([nil nil ((250 . 257)) nil (25450 27644 668484 757000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -255) (undo-tree-id1 . -1) (#(";" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -256) (undo-tree-id2 . -1) 257) nil (25450 27644 668482 987000) 0 nil])
([nil nil ((255 . 257)) nil (25450 27644 668477 457000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -256) (undo-tree-id0 . -1) 257) nil (25450 27644 668472 27000) 0 nil])
([nil nil ((234 . 248) (t 25450 27644 672331 135000)) nil (25450 27661 565659 13000) 0 nil])
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -247) (undo-tree-id58 . -1) 248) nil (25450 27661 565655 883000) 0 nil])
([nil nil ((247 . 252)) nil (25450 27661 565639 464000) 0 nil])
([nil nil ((252 . 267) (t 25450 27661 572362 518000)) nil (25450 27700 743155 186000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -266) (undo-tree-id80 . -1) 267) nil (25450 27700 743153 508000) 0 nil])
([nil nil ((266 . 268)) nil (25450 27700 743151 348000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -267) (undo-tree-id79 . -1) 268) nil (25450 27700 743149 580000) 0 nil])
([nil nil ((267 . 271)) nil (25450 27700 743146 985000) 0 nil])
([nil nil ((#("4" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -247) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 248) nil (25450 27700 743142 762000) 0 nil])
([nil nil ((247 . 248)) nil (25450 27700 743103 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 281 . 282) (nil tag-attr t 252 . 282) (nil tag-name "div" 252 . 282) (nil tag-type start 252 . 282) (nil font-lock-face web-mode-html-attr-value-face 252 . 282) (252 . 282) (t 25450 27700 748435 177000)) nil (25450 27805 151496 497000) 0 nil])
([nil nil ((282 . 283)) nil (25450 27805 151487 253000) 0 nil])
([nil nil ((25420 . 25422) (#("  " 0 2 (part-side css)) . 25419) (undo-tree-id126 . -2) (25418 . 25422) (t 25450 27805 156482 909000)) nil (25450 27881 946575 942000) 0 nil])
([nil nil ((25419 . 25421)) nil (25450 27881 946573 480000) 0 nil])
([nil nil ((25420 . 25422) (#("  " 0 2 (part-side css)) . 25419) (undo-tree-id125 . -2) (25421 . 25422)) nil (25450 27881 946572 383000) 0 nil])
([nil nil ((25422 . 25433)) nil (25450 27881 946570 183000) 0 nil])
([nil nil ((#("l" 0 1 (part-side css)) . -25430) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("e" 0 1 (part-side css)) . -25431) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("-" 0 1 (part-side css)) . -25432) (undo-tree-id124 . -1) 25433) nil (25450 27881 946568 481000) 0 nil])
([nil nil ((25430 . 25431)) nil (25450 27881 946561 645000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . -25430) (undo-tree-id119 . -1) 25431) nil (25450 27881 946560 494000) 0 nil])
([nil nil ((25430 . 25437)) nil (25450 27881 946558 475000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25436) (undo-tree-id118 . -1) 25437) nil (25450 27881 946556 894000) 0 nil])
([nil nil ((25436 . 25437)) nil (25450 27881 946554 758000) 0 nil])
([nil nil ((25437 . 25439) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -25437) (25437 . 25438)) nil (25450 27881 946553 649000) 0 nil])
([nil nil ((25440 . 25442) (#("    " 0 4 (face whitespace-trailing part-side css)) . 25439) (undo-tree-id116 . -2) (undo-tree-id117 . 4) (25441 . 25443) (25438 . 25442)) nil (25450 27881 946551 582000) 0 nil])
([nil nil ((25439 . 25443)) nil (25450 27881 946495 603000) 0 nil])
([nil nil ((#("padding-top: 5px; border-top-right-radius: 25px; padding-left: 5px; background-color: red;" 0 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 18 47 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 47 48 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t) 48 49 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 49 90 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 234) (undo-tree-id111 . -49) (undo-tree-id112 . -90) (undo-tree-id113 . -49) (undo-tree-id114 . -18) (undo-tree-id115 . -90)) nil (25450 27881 946494 356000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25442 . 25443) (nil part-side css 25438 . 25443) (nil part-side css 25421 . 25438) (nil face web-mode-css-property-name-face 25421 . 25438) (nil part-side css 25415 . 25421) (nil part-side css 25402 . 25415) (nil face web-mode-css-property-name-face 25402 . 25415) (nil part-side css 25401 . 25402) (nil rear-nonsticky t 25400 . 25401) (nil part-side css 25400 . 25401) (nil part-side css 25395 . 25400) (nil part-side css 25371 . 25395) (nil face web-mode-css-property-name-face 25371 . 25395) (nil part-side css 25365 . 25371) (nil part-side css 25353 . 25365) (nil face web-mode-css-property-name-face 25353 . 25365) (25353 . 25443)) nil (25450 27881 946487 662000) 0 nil])
([nil nil ((25371 . 25375) (#(" " 0 1 (part-side css)) . 25370) (undo-tree-id110 . -1) (25371 . 25372)) nil (25450 27881 946483 433000) 0 nil])
([nil nil ((25406 . 25410) (#(" " 0 1 (part-side css)) . 25405) (undo-tree-id109 . -1) (25406 . 25407)) nil (25450 27881 946480 855000) 0 nil])
([nil nil ((25429 . 25433) (#(" " 0 1 (part-side css)) . 25428) (undo-tree-id108 . -1) (25429 . 25430)) nil (25450 27881 946478 281000) 0 nil])
([nil nil ((#("style=\"\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t)) . 227) (undo-tree-id102 . -7) (undo-tree-id103 . -8) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -8)) nil (25450 27881 946475 316000) 0 nil])
([nil nil ((227 . 235)) nil (25450 27881 946467 437000) 0 nil])
([nil nil ((234 . 241)) nil (25450 27881 946466 524000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -234) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -235) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -236) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -237) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -238) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -239) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -240) (undo-tree-id101 . -1) 241) nil (25450 27881 946463 630000) 0 nil])
([nil nil ((234 . 248)) nil (25450 27881 946445 153000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -247) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 248) nil (25450 27881 946442 771000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing part-side css)) . -25473) 247) nil (25450 27881 946422 240000) 0 nil])
([nil nil ((#("            <div class=\"datatable-bar\">
" 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 13 16 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 16 17 (tag-type start tag-name "div") 17 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 18 19 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 19 20 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 21 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 23 37 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 37 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 38 39 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . 250) (undo-tree-id136 . -33) (undo-tree-id137 . -39) (undo-tree-id138 . -40) (undo-tree-id139 . -17) (undo-tree-id140 . -39) (undo-tree-id141 . -39) (undo-tree-id142 . -24) (undo-tree-id143 . -17) (undo-tree-id144 . -17) (214 . 250) (#("          <v-col class=\"text-left\">
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 19 tag-type start tag-name "v-col") 11 16 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-col") 16 17 (tag-type start tag-name "v-col") 17 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t tag-attr-beg 0) 18 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-col" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-col" tag-attr t) 23 33 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t) 33 34 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr-end 5 tag-attr t) 34 35 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "v-col")) . 174) (undo-tree-id145 . -35) (undo-tree-id146 . -35) (undo-tree-id147 . -35) (210 . 250) 249 (t 25450 27881 952524 385000)) nil (25450 27901 907736 18000) 0 nil])
([nil nil ((#("          </v-col>
" 10 11 (font-lock-face web-mode-html-tag-bracket-face tag-beg 22 tag-type end tag-name "v-col") 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "v-col") 12 17 (font-lock-face web-mode-html-tag-custom-face tag-type end tag-name "v-col") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "v-col")) . 2870) (undo-tree-id127 . -18) (undo-tree-id128 . -18) (undo-tree-id129 . -18) (2851 . 2870) (#("            </div>
" 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 13 14 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 14 17 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div" rear-nonsticky t)) . 2832) (undo-tree-id130 . -18) (undo-tree-id131 . -12) (undo-tree-id132 . -18) (undo-tree-id133 . -18) (undo-tree-id134 . -18) (undo-tree-id135 . -18) (2851 . 2870) 2850) nil (25450 27901 907716 54000) 0 nil])
([nil nil ((#("padding" 0 7 (face web-mode-css-property-name-face part-side css)) . 25423) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (t 25450 27901 912537 160000)) nil (25450 27926 231461 219000) 0 nil])
([nil nil ((25423 . 25429)) nil (25450 27926 231443 322000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -25436) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 25437 (t 25450 27926 232553 749000)) nil (25450 27935 521158 928000) 0 nil])
([nil nil ((25436 . 25438)) nil (25450 27935 521136 596000) 0 nil])
([nil nil ((25418 . 25423) (t 25450 27935 524560 381000)) nil (25450 27951 667362 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25452 . 25453) (nil part-side css 25447 . 25453) (nil part-side css 25423 . 25447) (nil face web-mode-css-property-name-face 25423 . 25447) (25423 . 25453)) nil (25450 27951 667360 935000) 0 nil])
([nil nil ((#("r" 0 1 (face web-mode-css-property-name-face part-side css)) . -25434) (undo-tree-id158 . -1) (#("i" 0 1 (face web-mode-css-property-name-face part-side css)) . -25435) (undo-tree-id159 . -1) (#("g" 0 1 (face web-mode-css-property-name-face part-side css)) . -25436) (undo-tree-id160 . -1) (#("h" 0 1 (face web-mode-css-property-name-face part-side css)) . -25437) (undo-tree-id161 . -1) (#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -25438) (undo-tree-id162 . -1) 25439) nil (25450 27951 667356 651000) 0 nil])
([nil nil ((25434 . 25438)) nil (25450 27951 667334 65000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25447) (undo-tree-id164 . -1) 25448 (t 25450 27951 668572 265000)) nil (25450 27958 62910 784000) 0 nil])
([nil nil ((25447 . 25448)) nil (25450 27958 62907 573000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25413) (undo-tree-id163 . -1) 25414) nil (25450 27958 62905 58000) 0 nil])
([nil nil ((25413 . 25414)) nil (25450 27958 62889 265000) 0 nil])
([nil nil ((#("
    padding-top: 5px;" 0 1 (part-side css) 1 5 (part-side css) 5 17 (face web-mode-css-property-name-face part-side css) 17 22 (part-side css)) . 25361) (undo-tree-id165 . -1) (undo-tree-id166 . -22) (undo-tree-id167 . -5) (undo-tree-id168 . -22) (t 25450 27958 64577 90000)) nil (25450 27964 939657 280000) 0 nil])
([nil nil ((247 . 257) (t 25450 27964 940582 353000)) nil (25450 27979 257419 788000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -251) (undo-tree-id170 . -1) 252 (t 25450 27979 260593 570000)) nil (25450 27991 439225 985000) 0 nil])
([nil nil ((251 . 252)) nil (25450 27991 439222 839000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -256) (undo-tree-id169 . -1) 257) nil (25450 27991 439220 217000) 0 nil])
([nil nil ((256 . 257)) nil (25450 27991 439206 571000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -256) (undo-tree-id171 . -1) 257 (t 25450 27991 444603 387000)) nil (25450 27995 720965 15000) 0 nil])
([nil nil ((256 . 257)) nil (25450 28017 155669 119000) 0 nil])
([nil nil ((155 . 165) (148 . 157) (t 25450 28017 944625 557000)) nil (25450 28027 439663 886000) 0 nil] [nil nil ((180 . 189) (172 . 181) (t 25450 27995 724606 892000)) ((#(" class=\"\"" 0 1 (tag-type start tag-name "v-row") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t)) . 172) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -3) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (#("pa-0 ma-0" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 180) (undo-tree-id183 . -7) (undo-tree-id184 . -9) (undo-tree-id185 . -9) (undo-tree-id186 . -9) (undo-tree-id187 . -9) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (undo-tree-id190 . -9) (undo-tree-id191 . -9) (undo-tree-id192 . -9) (t 25450 28008 636617 645000)) (25450 28008 633781 689000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -164) (undo-tree-id193 . -1) 165) nil (25450 28027 439657 762000) 0 nil])
nil
([nil nil ((25481 . 25486) (t 25450 28027 448633 774000)) nil (25450 28118 22080 782000) 0 nil])
([nil nil ((25486 . 25493)) nil (25450 28118 22079 612000) 0 nil])
([nil nil ((25493 . 25497)) nil (25450 28118 22078 741000) 0 nil])
([nil nil ((#("e" 0 1 (part-side css)) . -25496) (undo-tree-id209 . -1) 25497) nil (25450 28118 22077 658000) 0 nil])
([nil nil ((25496 . 25507)) nil (25450 28118 22075 643000) 0 nil])
([nil nil ((#(";" 0 1 (part-side css)) . -25505) (undo-tree-id207 . -1) (#(" " 0 1 (part-side css)) . -25506) (undo-tree-id208 . -1) 25507) nil (25450 28118 22074 16000) 0 nil])
([nil nil ((25505 . 25507)) nil (25450 28118 22070 890000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -25505) (undo-tree-id205 . -1) (#(" " 0 1 (part-side css)) . -25506) (undo-tree-id206 . -1) 25507) nil (25450 28118 22069 600000) 0 nil])
([nil nil ((25505 . 25506)) nil (25450 28118 22066 331000) 0 nil])
([nil nil ((25506 . 25511)) nil (25450 28118 22065 429000) 0 nil])
([nil nil ((25511 . 25515)) nil (25450 28118 22064 526000) 0 nil])
([nil nil ((#("v" 0 1 (part-side css)) . -25511) (undo-tree-id201 . -1) (#("o" 0 1 (part-side css)) . -25512) (undo-tree-id202 . -1) (#("r" 0 1 (part-side css)) . -25513) (undo-tree-id203 . -1) (#("d" 0 1 (part-side css)) . -25514) (undo-tree-id204 . -1) 25515) nil (25450 28118 22062 712000) 0 nil])
([nil nil ((25511 . 25523)) nil (25450 28118 22055 708000) 0 nil])
([nil nil ((#("h" 0 1 (part-side css)) . -25521) (undo-tree-id199 . -1) (#(":" 0 1 (face web-mode-css-property-name-face part-side css)) . -25522) (undo-tree-id200 . -1) 25523) nil (25450 28118 22054 336000) 0 nil])
([nil nil ((25521 . 25524)) nil (25450 28118 22050 824000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css)) . -25520) (undo-tree-id195 . -1) (#("d" 0 1 (part-side css)) . -25521) (undo-tree-id196 . -1) (#("t" 0 1 (part-side css)) . -25522) (undo-tree-id197 . -1) (#("h" 0 1 (part-side css)) . -25523) (undo-tree-id198 . -1) 25524) nil (25450 28118 22048 805000) 0 nil])
([nil nil ((25520 . 25528)) nil (25450 28118 22041 688000) 0 nil])
([nil nil ((25528 . 25530)) nil (25450 28118 22040 55000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25529) (undo-tree-id194 . -1) 25530) nil (25450 28118 22034 708000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25525) (undo-tree-id210 . -1) 25526 (t 25450 28118 24718 449000)) nil (25450 28125 333994 612000) 0 nil])
([nil nil ((25525 . 25526)) nil (25450 28125 333977 990000) 0 nil])
([nil nil ((25534 . 25537) (t 25450 28125 336725 763000)) nil (25450 28146 493667 809000) 0 nil])
([nil nil ((#("/" 0 1 (part-side css)) . -25534) (undo-tree-id228 . -1) (#("/" 0 1 (part-side css)) . -25535) (undo-tree-id229 . -1) (#(" " 0 1 (part-side css)) . -25536) (undo-tree-id230 . -1) 25537) nil (25450 28146 493666 89000) 0 nil])
([nil nil ((25534 . 25537)) nil (25450 28146 493661 714000) 0 nil])
([nil nil ((#(";" 0 1 (part-side css)) . -25534) (undo-tree-id225 . -1) (#(";" 0 1 (part-side css)) . -25535) (undo-tree-id226 . -1) (#(" " 0 1 (part-side css)) . -25536) (undo-tree-id227 . -1) 25537) nil (25450 28146 493659 808000) 0 nil])
([nil nil ((25534 . 25536)) nil (25450 28146 493655 336000) 0 nil])
([nil nil ((#("#" 0 1 (face web-mode-css-color-face part-side css)) . -25534) (undo-tree-id223 . -1) (#(" " 0 1 (part-side css)) . -25535) (undo-tree-id224 . -1) 25536) nil (25450 28146 493654 51000) 0 nil])
([nil nil ((25534 . 25537)) nil (25450 28146 493650 455000) 0 nil])
([nil nil ((#("/" 0 1 (part-side css)) . -25534) (undo-tree-id220 . -1) (#("/" 0 1 (part-side css)) . -25535) (undo-tree-id221 . -1) (#(" " 0 1 (part-side css)) . -25536) (undo-tree-id222 . -1) 25537) nil (25450 28146 493648 905000) 0 nil])
([nil nil ((25534 . 25539)) nil (25450 28146 493643 447000) 0 nil])
([nil nil ((#("<" 0 1 (part-side css)) . -25534) (undo-tree-id215 . -1) (#("_" 0 1 (part-side css)) . -25535) (undo-tree-id216 . -1) (#("!" 0 1 (part-side css)) . -25536) (undo-tree-id217 . -1) (#("!" 0 1 (part-side css)) . -25537) (undo-tree-id218 . -1) (#(" " 0 1 (part-side css)) . -25538) (undo-tree-id219 . -1) 25539) nil (25450 28146 493640 225000) 0 nil])
([nil nil ((25534 . 25562) (#("background-color: red;" 0 6 (face web-mode-css-property-name-face part-side css) 6 17 (face web-mode-css-property-name-face part-side css) 17 21 (part-side css) 21 22 (part-side css rear-nonsticky t)) . 25534) (undo-tree-id211 . -22) (undo-tree-id212 . -22) (undo-tree-id213 . -22) (undo-tree-id214 . -22)) nil (25450 28146 493572 691000) 0 nil])
([nil nil ((25493 . 25497) (t 25450 28146 496747 302000)) nil (25450 28165 184516 861000) 0 nil])
([nil nil ((25510 . 25515) (t 25450 28165 188766 769000)) nil (25450 28187 267830 594000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25538 . 25539) (nil part-side css 25532 . 25539) (nil part-side css 25515 . 25532) (nil face web-mode-css-property-name-face 25515 . 25532) (25515 . 25539)) nil (25450 28187 267829 201000) 0 nil])
([nil nil ((25539 . 25544)) nil (25450 28187 267827 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25567 . 25568) (nil part-side css 25561 . 25568) (nil part-side css 25544 . 25561) (nil face web-mode-css-property-name-face 25544 . 25561) (25544 . 25568)) nil (25450 28187 267825 889000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -25522) (undo-tree-id231 . -1) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -25523) (undo-tree-id232 . -1) (#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -25524) (undo-tree-id233 . -1) 25525) nil (25450 28187 267821 965000) 0 nil])
([nil nil ((25522 . 25526)) nil (25450 28187 267803 253000) 0 nil])
([nil nil ((#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . 25552) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . 25552) (#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . 25552) (t 25450 28187 272790 272000)) nil (25450 28198 126402 92000) 0 nil])
([nil nil ((25552 . 25557)) nil (25450 28198 126393 921000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -269) (undo-tree-id234 . -1) 270 (t 25450 28198 132802 28000)) nil (25450 28213 247621 431000) 0 nil])
([nil nil ((269 . 270)) nil (25450 28213 247606 979000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -267) (undo-tree-id244 . -1) 268 (t 25450 28213 252818 591000)) nil (25450 28223 240955 518000) 0 nil])
([nil nil ((267 . 268)) nil (25450 28223 240952 556000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -269) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 270) nil (25450 28223 240949 335000) 0 nil])
([nil nil ((269 . 270)) nil (25450 28223 240922 828000) 0 nil])
([nil nil ((#("2" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -269) (undo-tree-id245 . -1) 270 (t 25450 28223 248829 672000)) nil (25450 28229 246100 37000) 0 nil])
([nil nil ((269 . 270)) nil (25450 28229 246083 368000) 0 nil])
([nil nil ((#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -267) (undo-tree-id246 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -268) (undo-tree-id247 . -1) (#("0" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-col" tag-attr t)) . -269) (undo-tree-id248 . -1) 270 (t 25450 28229 252836 377000)) nil (25450 28237 181093 884000) 0 nil])
([nil nil ((267 . 270)) nil (25450 28237 181077 83000) 0 nil])
([nil nil ((25389 . 25394) (t 25450 28237 184845 290000)) nil (25450 28247 423422 651000) 0 nil])
([nil nil ((25394 . 25405)) nil (25450 28247 423421 77000) 0 nil])
([nil nil ((25405 . 25412)) nil (25450 28247 423419 393000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25411) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 25412) nil (25450 28247 423414 63000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25407) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) 25408 (t 25450 28247 424856 891000)) nil (25450 28252 916869 216000) 0 nil])
([nil nil ((25407 . 25408)) nil (25450 28252 916846 848000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -25407) (undo-tree-id264 . -1) 25408 (t 25450 28252 924863 159000)) nil (25450 28262 135368 377000) 0 nil])
([nil nil ((25407 . 25408)) nil (25450 28262 135351 319000) 0 nil])
([nil nil ((25411 . 25416) (t 25450 28262 136873 731000)) nil (25450 28279 943329 432000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25432 . 25433) (nil part-side css 25428 . 25433) (nil part-side css 25416 . 25428) (nil face web-mode-css-property-name-face 25416 . 25428) (25416 . 25433)) nil (25450 28279 943328 41000) 0 nil])
([nil nil ((25433 . 25438)) nil (25450 28279 943326 302000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25454 . 25455) (nil part-side css 25450 . 25455) (nil part-side css 25438 . 25450) (nil face web-mode-css-property-name-face 25438 . 25450) (25438 . 25455)) nil (25450 28279 943325 61000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -25424) (undo-tree-id268 . -1) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -25425) (undo-tree-id269 . -1) (#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -25426) (undo-tree-id270 . -1) 25427) nil (25450 28279 943322 512000) 0 nil])
([nil nil ((25424 . 25429)) nil (25450 28279 943317 565000) 0 nil])
([nil nil ((#("t" 0 1 (face web-mode-css-property-name-face part-side css)) . -25448) (undo-tree-id265 . -1) (#("o" 0 1 (face web-mode-css-property-name-face part-side css)) . -25449) (undo-tree-id266 . -1) (#("p" 0 1 (face web-mode-css-property-name-face part-side css)) . -25450) (undo-tree-id267 . -1) 25451) nil (25450 28279 943314 760000) 0 nil])
([nil nil ((25448 . 25452)) nil (25450 28279 943296 371000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25693) (undo-tree-id295 . -1) (#("*" 0 1 (part-side css)) . -25694) (undo-tree-id296 . -1) (#("/" 0 1 (font-lock-face web-mode-css-comment-face part-token comment part-side css)) . -25695) (undo-tree-id297 . -1) 25696 (t 25450 28279 948894 405000)) nil (25450 28295 958016 424000) 0 nil])
([nil nil ((#("/" 0 1 (part-side css)) . -25668) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("*" 0 1 (part-side css)) . -25669) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#(" " 0 1 (part-side css)) . -25670) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 25671) nil (25450 28315 949529 652000) 0 nil])
([nil nil ((4097 . 4099) (4089 . 4098)) nil (25450 28344 460627 94000) 0 nil] [nil nil ((198 . 212) (190 . 199) (t 25450 28295 960913 242000)) ((#(" style=\"\"" 0 1 (tag-type start tag-name "v-row") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 6 7 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t)) . 190) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (#("background-col" 0 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 198) (undo-tree-id331 . -3) (undo-tree-id332 . -14) (undo-tree-id333 . -14) (undo-tree-id334 . -14) (undo-tree-id335 . -14) (undo-tree-id336 . -14) (undo-tree-id337 . -14) (undo-tree-id338 . -14) (undo-tree-id339 . -14) (undo-tree-id340 . -14) (undo-tree-id341 . -14) (undo-tree-id342 . -14) (undo-tree-id343 . -14) (undo-tree-id344 . -14) (undo-tree-id345 . -14) (undo-tree-id346 . -14) (undo-tree-id347 . -14) (undo-tree-id348 . -14) (undo-tree-id349 . -14) (undo-tree-id350 . -14) (undo-tree-id351 . -14) (undo-tree-id352 . -14) (undo-tree-id353 . -14)) (25450 28315 569508 257000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4097) (undo-tree-id354 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4098) (undo-tree-id355 . -1) 4099) nil (25450 28344 460624 35000) 0 nil])
([nil nil ((212 . 221)) ((#("or: blue;" 0 9 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . 212) (undo-tree-id298 . -7) (undo-tree-id299 . -9) (undo-tree-id300 . -9) (undo-tree-id301 . -9) (undo-tree-id302 . -9) (undo-tree-id303 . -9) (undo-tree-id304 . -9) (undo-tree-id305 . -9) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (t 25450 28312 744933 228000)) (25450 28312 741895 784000) 0 nil])
([nil nil ((4097 . 4106)) nil (25450 28344 460605 546000) 0 nil])
nil
([nil nil ((4115 . 4125) (4107 . 4116) (t 25450 28344 464971 652000)) nil (25450 28361 529784 320000) 0 nil])
([nil nil ((#("k" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4117) (undo-tree-id365 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4118) (undo-tree-id366 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4119) (undo-tree-id367 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4120) (undo-tree-id368 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4121) (undo-tree-id369 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4122) (undo-tree-id370 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4123) (undo-tree-id371 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4124) (undo-tree-id372 . -1) 4125) nil (25450 28361 529781 165000) 0 nil])
([nil nil ((4117 . 4137)) nil (25450 28361 529768 445000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4136) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) 4137) nil (25450 28361 529766 850000) 0 nil])
([nil nil ((4136 . 4138)) nil (25450 28361 529760 525000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -4137) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) 4138) nil (25450 28361 529755 244000) 0 nil])
([nil nil ((#("style=\"background-color:blue;\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 6 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t)) . 4108) (undo-tree-id381 . -30) (undo-tree-id382 . -21) (undo-tree-id383 . -27) (undo-tree-id384 . -30) (t 25450 28361 532992 662000)) nil (25450 28403 955673 263000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -4107) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 4108) nil (25450 28403 955667 720000) 0 nil])
([nil nil ((4107 . 4108)) nil (25450 28403 955662 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4137 . 4138) (nil tag-attr t 4137 . 4138) (nil tag-attr-end 5 4137 . 4138) (nil tag-name "v-row" 4137 . 4138) (nil tag-type start 4137 . 4138) (nil font-lock-face web-mode-html-attr-value-face 4137 . 4138) (nil tag-attr t 4114 . 4137) (nil tag-name "v-row" 4114 . 4137) (nil tag-type start 4114 . 4137) (nil font-lock-face web-mode-html-attr-value-face 4114 . 4137) (nil tag-attr t 4113 . 4114) (nil tag-name "v-row" 4113 . 4114) (nil tag-type start 4113 . 4114) (nil font-lock-face web-mode-html-attr-equal-face 4113 . 4114) (nil tag-attr t 4112 . 4113) (nil tag-name "v-row" 4112 . 4113) (nil tag-type start 4112 . 4113) (nil font-lock-face web-mode-html-attr-name-face 4112 . 4113) (nil tag-attr t 4111 . 4112) (nil tag-name "v-row" 4111 . 4112) (nil tag-type start 4111 . 4112) (nil font-lock-face web-mode-html-attr-name-face 4111 . 4112) (nil tag-attr t 4110 . 4111) (nil tag-name "v-row" 4110 . 4111) (nil tag-type start 4110 . 4111) (nil font-lock-face web-mode-html-attr-name-face 4110 . 4111) (nil tag-attr t 4109 . 4110) (nil tag-name "v-row" 4109 . 4110) (nil tag-type start 4109 . 4110) (nil font-lock-face web-mode-html-attr-name-face 4109 . 4110) (nil tag-attr-beg 0 4108 . 4109) (nil tag-attr t 4108 . 4109) (nil tag-name "v-row" 4108 . 4109) (nil tag-type start 4108 . 4109) (nil font-lock-face web-mode-html-attr-name-face 4108 . 4109) (4108 . 4138)) nil (25450 28403 955659 291000) 0 nil])
([nil nil ((nil rear-nonsticky nil 141 . 142) (nil tag-attr t 141 . 142) (nil tag-attr-end 5 141 . 142) (nil tag-name "v-row" 141 . 142) (nil tag-type start 141 . 142) (nil font-lock-face web-mode-html-attr-value-face 141 . 142) (nil tag-attr t 118 . 141) (nil tag-name "v-row" 118 . 141) (nil tag-type start 118 . 141) (nil font-lock-face web-mode-html-attr-value-face 118 . 141) (nil tag-attr t 117 . 118) (nil tag-name "v-row" 117 . 118) (nil tag-type start 117 . 118) (nil font-lock-face web-mode-html-attr-equal-face 117 . 118) (nil tag-attr t 116 . 117) (nil tag-name "v-row" 116 . 117) (nil tag-type start 116 . 117) (nil font-lock-face web-mode-html-attr-name-face 116 . 117) (nil tag-attr t 115 . 116) (nil tag-name "v-row" 115 . 116) (nil tag-type start 115 . 116) (nil font-lock-face web-mode-html-attr-name-face 115 . 116) (nil tag-attr t 114 . 115) (nil tag-name "v-row" 114 . 115) (nil tag-type start 114 . 115) (nil font-lock-face web-mode-html-attr-name-face 114 . 115) (nil tag-attr t 113 . 114) (nil tag-name "v-row" 113 . 114) (nil tag-type start 113 . 114) (nil font-lock-face web-mode-html-attr-name-face 113 . 114) (nil tag-attr-beg 0 112 . 113) (nil tag-attr t 112 . 113) (nil tag-name "v-row" 112 . 113) (nil tag-type start 112 . 113) (nil font-lock-face web-mode-html-attr-name-face 112 . 113) (112 . 142)) nil (25450 28403 955648 992000) 0 nil])
([nil nil ((142 . 143)) nil (25450 28403 955640 595000) 0 nil])
([nil nil ((#("b" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -136) (undo-tree-id373 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -137) (undo-tree-id374 . -1) (#("u" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -138) (undo-tree-id375 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t)) . -139) (undo-tree-id376 . -1) 140) nil (25450 28403 955637 568000) 0 nil])
([nil nil ((136 . 141)) nil (25450 28434 957986 92000) 0 nil])
([nil nil ((#("wrap fluid" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t) 4 5 (tag-type start tag-name "v-row") 5 6 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 6 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t)) . 144) (undo-tree-id392 . -10) (undo-tree-id393 . -10)) nil (25450 28441 211402 10000) 0 nil] [nil nil ((#("class=\"pa-0 ma-0\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 6 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t)) . 94) (undo-tree-id387 . -17) (undo-tree-id388 . -17) (t 25450 28403 965045 854000)) ((94 . 111)) (25450 28434 436560 966000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -143) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 144) nil (25450 28452 466973 659000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -93) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 94) ((93 . 94) (t 25450 28417 645063 278000)) (25450 28417 639326 40000) 0 nil])
([nil nil ((211 . 214) (t 25450 28453 341109 350000)) nil (25450 28575 591879 627000) 0 nil] [nil nil ((#(" no-gutters" 0 1 (tag-type start tag-name "v-row") 1 2 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 2 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t)) . 143) (undo-tree-id394 . -11) (undo-tree-id395 . -11) (t 25450 28441 221093 609000)) ((143 . 154) (t 25450 28448 993103 691000)) (25450 28448 987397 572000) 0 nil])
nil
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-rows")) . -211) (undo-tree-id400 . -1) (#("t" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-rowst")) . -212) (undo-tree-id401 . -1) (#("y" 0 1 (font-lock-face web-mode-html-tag-custom-face tag-type start tag-name "v-rowsty")) . -213) (undo-tree-id402 . -1) 214) nil (25450 28575 591877 638000) 0 nil])
nil
([nil nil ((211 . 214)) nil (25450 28575 591872 109000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -212) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr-end 0 tag-attr t)) . -213) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 214) nil (25450 28575 591869 148000) 0 nil])
([nil nil ((219 . 228) (212 . 220)) nil (25450 28575 591849 217000) 0 nil])
([nil nil ((#("style=\"background-color:green;\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 6 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 30 31 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t rear-nonsticky t)) . 112) (undo-tree-id419 . -31) (undo-tree-id420 . -31) (undo-tree-id421 . -31) (t 25450 28575 601273 132000)) nil (25450 28592 681638 375000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -111) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 112) nil (25450 28592 681629 268000) 0 nil])
([nil nil ((#("
    margin-left: 10px;" 0 5 (part-side css) 5 11 (face web-mode-css-property-name-face part-side css) 11 17 (face web-mode-css-property-name-face part-side css) 17 23 (part-side css)) . 25583) (undo-tree-id422 . -1) (undo-tree-id423 . -23) (undo-tree-id424 . -23) (t 25450 28592 689296 673000)) nil (25450 28604 651594 398000) 0 nil])
([nil nil ((25701 . 25729) (#("background-color: red;" 0 17 (face web-mode-css-property-name-face part-side css) 17 22 (part-side css)) . 25701) (undo-tree-id425 . -22) (undo-tree-id426 . -22) (undo-tree-id427 . -22) (t 25450 28604 657313 251000)) nil (25450 28649 38571 351000) 0 nil])
([nil nil ((25693 . 25695) (t 25450 28649 41375 313000)) nil (25450 28660 242289 448000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -25692) (undo-tree-id428 . -1) (#("." 0 1 (part-side css)) . -25693) (undo-tree-id429 . -1) (#("5" 0 1 (part-side css)) . -25694) (undo-tree-id430 . -1) 25695 (t 25450 28660 249391 123000)) nil (25450 28666 658770 200000) 0 nil])
([nil nil ((25692 . 25693)) nil (25450 28666 658751 141000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25692) (undo-tree-id431 . -1) 25693 (t 25450 28666 669400 207000)) nil (25450 28671 619425 124000) 0 nil])
([nil nil ((25692 . 25695)) nil (25450 28671 619409 460000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -25693) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("2" 0 1 (part-side css)) . -25694) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) 25695 (t 25450 28671 621407 223000)) nil (25450 28675 37715 847000) 0 nil])
([nil nil ((25693 . 25695)) nil (25450 28675 37673 503000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -25694) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) 25695 (t 25450 28675 45412 80000)) nil (25450 28678 937878 727000) 0 nil])
([nil nil ((25694 . 25695)) nil (25450 28678 937854 399000) 0 nil])
([nil nil ((25698 . 25703) (t 25450 28678 945417 621000)) nil (25450 28695 942854 125000) 0 nil])
([nil nil ((25703 . 25719)) nil (25450 28695 942852 883000) 0 nil])
([nil nil ((#("w" 0 1 (part-side css)) . -25710) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("i" 0 1 (part-side css)) . -25711) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("d" 0 1 (part-side css)) . -25712) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("t" 0 1 (part-side css)) . -25713) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("h" 0 1 (part-side css)) . -25714) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (#(":" 0 1 (face web-mode-css-property-name-face part-side css)) . -25715) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#(" " 0 1 (part-side css)) . -25716) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("c" 0 1 (part-side css)) . -25717) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#("o" 0 1 (part-side css)) . -25718) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 25719) nil (25450 28695 942849 283000) 0 nil])
([nil nil ((25710 . 25722)) nil (25450 28695 942824 330000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25721) (undo-tree-id468 . -1) 25722) nil (25450 28695 942822 485000) 0 nil])
([nil nil ((25721 . 25723)) nil (25450 28695 942818 660000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25722) (undo-tree-id467 . -1) 25723) nil (25450 28695 942812 678000) 0 nil])
([nil nil ((249 . 253) 284 (t 25450 28695 949441 845000)) nil (25450 28738 639887 452000) 0 nil])
([nil nil (("  " . -209) 238) nil (25450 28738 639885 352000) 0 nil])
([nil nil (("  " . -249) 281) nil (25450 28738 639883 485000) 0 nil])
([nil nil ((#("style=\"background-color:blue;\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "v-row" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "v-row" tag-attr t) 6 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr t) 29 30 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "v-row" tag-attr-end 5 tag-attr t rear-nonsticky t)) . 4115) (undo-tree-id492 . -30) (undo-tree-id493 . -30)) nil (25450 28738 639881 95000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "v-row")) . -4114) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 4115) nil (25451 26835 460184 928000) 0 nil])
([nil nil ((2903 . 2913) ("  " . -2896) (2904 . 2905) (t 25451 26836 863122 428000)) nil (25451 26855 245792 458000) 0 nil] [nil nil ((#("            <v-col class=\"text-left pa-0 ma-0\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 45 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 285) (247 . 285) (#("          <div class=\"datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 35 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 199) (undo-tree-id5 . -37) (undo-tree-id6 . -37) (undo-tree-id7 . -37) (237 . 285) 236 (t 25450 28738 645503 173000)) ((#("            <v-col class=\"text-left pa-0 ma-0\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 45 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 237) (undo-tree-id37 . -48) (undo-tree-id38 . -47) (199 . 237) (#("          <div class=\"datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 35 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 247) (undo-tree-id39 . -35) (285 . 333)) (25451 26834 363407 254000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2987 . 2988) (nil tag-name "v-col" 2987 . 2988) (nil tag-type start 2987 . 2988) (nil tag-end t 2987 . 2988) (nil font-lock-face web-mode-html-tag-bracket-face 2987 . 2988) (nil tag-attr t 2986 . 2987) (nil tag-attr-end 5 2986 . 2987) (nil tag-name "v-col" 2986 . 2987) (nil tag-type start 2986 . 2987) (nil font-lock-face web-mode-html-attr-value-face 2986 . 2987) (nil tag-attr t 2966 . 2986) (nil tag-name "v-col" 2966 . 2986) (nil tag-type start 2966 . 2986) (nil font-lock-face web-mode-html-attr-value-face 2966 . 2986) (nil tag-attr t 2965 . 2966) (nil tag-name "v-col" 2965 . 2966) (nil tag-type start 2965 . 2966) (nil font-lock-face web-mode-html-attr-equal-face 2965 . 2966) (nil tag-attr t 2961 . 2965) (nil tag-name "v-col" 2961 . 2965) (nil tag-type start 2961 . 2965) (nil font-lock-face web-mode-html-attr-name-face 2961 . 2965) (nil tag-attr-beg 0 2960 . 2961) (nil tag-attr t 2960 . 2961) (nil tag-name "v-col" 2960 . 2961) (nil tag-type start 2960 . 2961) (nil font-lock-face web-mode-html-attr-name-face 2960 . 2961) (nil tag-name "v-col" 2959 . 2960) (nil tag-type start 2959 . 2960) (nil tag-name "v-col" 2954 . 2959) (nil tag-type start 2954 . 2959) (nil font-lock-face web-mode-html-tag-custom-face 2954 . 2959) (nil tag-name "v-col" 2953 . 2954) (nil tag-type start 2953 . 2954) (nil tag-beg 19 2953 . 2954) (nil font-lock-face web-mode-html-tag-bracket-face 2953 . 2954) (nil tag-name "div" 2939 . 2940) (nil tag-type start 2939 . 2940) (nil tag-end t 2939 . 2940) (nil font-lock-face web-mode-html-tag-bracket-face 2939 . 2940) (nil tag-attr t 2938 . 2939) (nil tag-attr-end 5 2938 . 2939) (nil tag-name "div" 2938 . 2939) (nil tag-type start 2938 . 2939) (nil font-lock-face web-mode-html-attr-value-face 2938 . 2939) (nil tag-attr t 2924 . 2938) (nil tag-name "div" 2924 . 2938) (nil tag-type start 2924 . 2938) (nil font-lock-face web-mode-html-attr-value-face 2924 . 2938) (nil tag-attr t 2923 . 2924) (nil tag-name "div" 2923 . 2924) (nil tag-type start 2923 . 2924) (nil font-lock-face web-mode-html-attr-equal-face 2923 . 2924) (nil tag-attr t 2919 . 2923) (nil tag-name "div" 2919 . 2923) (nil tag-type start 2919 . 2923) (nil font-lock-face web-mode-html-attr-name-face 2919 . 2923) (nil tag-attr-beg 0 2918 . 2919) (nil tag-attr t 2918 . 2919) (nil tag-name "div" 2918 . 2919) (nil tag-type start 2918 . 2919) (nil font-lock-face web-mode-html-attr-name-face 2918 . 2919) (nil tag-name "div" 2917 . 2918) (nil tag-type start 2917 . 2918) (nil tag-name "div" 2914 . 2917) (nil tag-type start 2914 . 2917) (nil font-lock-face web-mode-html-tag-face 2914 . 2917) (nil tag-name "div" 2913 . 2914) (nil tag-type start 2913 . 2914) (nil tag-beg 17 2913 . 2914) (nil font-lock-face web-mode-html-tag-bracket-face 2913 . 2914) (2913 . 2988)) nil (25451 26855 245787 237000) 0 nil])
([nil nil ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2905) (undo-tree-id0 . -18) (undo-tree-id1 . -19) (undo-tree-id2 . -18) (2886 . 2905) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2867) (undo-tree-id4 . -18) (2886 . 2905) 2904) ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2886) (2867 . 2886) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2886) (2905 . 2924)) (25451 26833 566600 883000) 0 nil])
([nil nil ((2988 . 3003)) nil (25451 26855 245771 438000) 0 nil])
([nil nil (("  " . -209) 246 (t 25451 26767 430502 393000)) ((209 . 211)) (25451 26833 256607 547000) 0 nil])
([nil nil (("  " . -3001) (3003 . 3011)) nil (25451 26855 245770 361000) 0 nil])
([nil nil ((280 . 290)) ((#(" text-left" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 280) (undo-tree-id27 . -9) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (t 25451 26810 522899 16000)) (25451 26832 946044 539000) 0 nil])
([nil nil ((3009 . 3022)) nil (25451 26855 245769 70000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -280) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -281) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -282) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("x" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -283) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -284) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -285) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("l" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -286) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -287) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("f" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -288) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -289) (undo-tree-id26 . -1) 290 (t 25451 26810 522899 16000)) ((280 . 290)) (25451 26832 941509 56000) 0 nil])
([nil nil (("  " . -3020) (3022 . 3028)) nil (25451 26855 245767 793000) 0 nil])
nil
([nil nil ((3026 . 3037)) nil (25451 26855 245765 881000) 0 nil])
([nil nil (("
" . -3026) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (" " . -3027) (undo-tree-id42 . -1) (" " . -3028) (undo-tree-id43 . -1) (" " . -3029) (undo-tree-id44 . -1) (" " . -3030) (undo-tree-id45 . -1) (" " . -3031) (undo-tree-id46 . -1) (" " . -3032) (undo-tree-id47 . -1) (" " . -3033) (undo-tree-id48 . -1) (" " . -3034) (undo-tree-id49 . -1) (" " . -3035) (undo-tree-id50 . -1) (" " . -3036) (undo-tree-id51 . -1) 3037) nil (25451 26855 245758 881000) 0 nil])
([nil nil ((2925 . 2930) (t 25451 26855 255273 105000)) nil (25451 26877 385549 853000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2925) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 2926 (t 25451 26877 395591 888000)) nil (25451 26881 999375 582000) 0 nil])
([nil nil ((2925 . 2926)) nil (25451 26881 999357 596000) 0 nil])
([nil nil ((2993 . 3008) (t 25451 26882 7678 34000)) nil (25451 26974 420052 157000) 0 nil])
([nil nil ((3008 . 3014)) nil (25451 26974 420050 941000) 0 nil])
([nil nil (("-" . -3009) (undo-tree-id56 . -1) ("v" . -3010) (undo-tree-id57 . -1) ("i" . -3011) (undo-tree-id58 . -1) ("c" . -3012) (undo-tree-id59 . -1) ("o" . -3013) (undo-tree-id60 . -1) 3014) nil (25451 26974 420048 932000) 0 nil])
([nil nil ((3009 . 3025)) nil (25451 26974 420041 337000) 0 nil])
([nil nil ((3025 . 3026)) nil (25451 26974 420040 385000) 0 nil])
([nil nil ((3027 . 3029) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -3027) (3027 . 3028) (3026 . 3028) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -3026) (3026 . 3027)) nil (25451 26974 420038 557000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3038 . 3039) (nil block-side t 3038 . 3039) (nil face (rainbow-delimiters-depth-3-face) 3038 . 3039) (nil block-side t 3036 . 3038) (nil block-side t 3035 . 3036) (nil face web-mode-variable-name-face 3035 . 3036) (nil block-side t 3034 . 3035) (nil face web-mode-variable-name-face 3034 . 3035) (nil block-side t 3033 . 3034) (nil face web-mode-variable-name-face 3033 . 3034) (nil block-side t 3032 . 3033) (nil face web-mode-variable-name-face 3032 . 3033) (nil block-side t 3031 . 3032) (nil face web-mode-variable-name-face 3031 . 3032) (nil block-side t 3030 . 3031) (nil face web-mode-variable-name-face 3030 . 3031) (nil block-side t 3029 . 3030) (nil face web-mode-variable-name-face 3029 . 3030) (nil block-side t 3028 . 3029) (nil face (rainbow-delimiters-depth-3-face) 3028 . 3029) (3028 . 3039)) nil (25451 26974 420035 488000) 0 nil])
([nil nil ((3041 . 3056)) nil (25451 26974 420030 454000) 0 nil])
([nil nil ((3016 . 3028)) nil (25451 26974 420029 541000) 0 nil])
([nil nil ((3053 . 3068)) nil (25451 26974 420028 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3112 . 3113) (nil block-side t 3112 . 3113) (nil block-end t 3112 . 3113) (nil block-token delimiter-end 3112 . 3113) (nil font-lock-face web-mode-block-delimiter-face 3112 . 3113) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3112 . 3113) (nil block-side t 3111 . 3112) (nil block-token delimiter-end 3111 . 3112) (nil font-lock-face web-mode-block-delimiter-face 3111 . 3112) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3111 . 3112) (nil rear-nonsticky t 3110 . 3111) (nil block-side t 3110 . 3111) (nil face (rainbow-delimiters-depth-3-face) 3110 . 3111) (nil block-side t 3108 . 3110) (nil block-side t 3107 . 3108) (nil face web-mode-variable-name-face 3107 . 3108) (nil block-side t 3106 . 3107) (nil face web-mode-variable-name-face 3106 . 3107) (nil block-side t 3105 . 3106) (nil face web-mode-variable-name-face 3105 . 3106) (nil block-side t 3104 . 3105) (nil face web-mode-variable-name-face 3104 . 3105) (nil block-side t 3103 . 3104) (nil face web-mode-variable-name-face 3103 . 3104) (nil block-side t 3102 . 3103) (nil face web-mode-variable-name-face 3102 . 3103) (nil block-side t 3101 . 3102) (nil face web-mode-variable-name-face 3101 . 3102) (nil block-side t 3100 . 3101) (nil face (rainbow-delimiters-depth-3-face) 3100 . 3101) (nil block-side t 3099 . 3100) (nil block-token delimiter-beg 3099 . 3100) (nil font-lock-face web-mode-block-delimiter-face 3099 . 3100) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3099 . 3100) (nil block-beg 0 3098 . 3099) (nil block-controls 0 3098 . 3099) (nil block-side t 3098 . 3099) (nil block-token delimiter-beg 3098 . 3099) (nil font-lock-face web-mode-block-delimiter-face 3098 . 3099) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3098 . 3099) (nil tag-name "v-icon" 3096 . 3097) (nil tag-type end 3096 . 3097) (nil tag-end t 3096 . 3097) (nil font-lock-face web-mode-html-tag-bracket-face 3096 . 3097) (nil tag-name "v-icon" 3090 . 3096) (nil tag-type end 3090 . 3096) (nil font-lock-face web-mode-html-tag-custom-face 3090 . 3096) (nil tag-name "v-icon" 3089 . 3090) (nil tag-type end 3089 . 3090) (nil font-lock-face web-mode-html-tag-bracket-face 3089 . 3090) (nil tag-name "v-icon" 3088 . 3089) (nil tag-type end 3088 . 3089) (nil tag-beg 22 3088 . 3089) (nil font-lock-face web-mode-html-tag-bracket-face 3088 . 3089) (nil tag-name "v-icon" 3075 . 3076) (nil tag-type start 3075 . 3076) (nil tag-end t 3075 . 3076) (nil font-lock-face web-mode-html-tag-bracket-face 3075 . 3076) (nil tag-name "v-icon" 3069 . 3075) (nil tag-type start 3069 . 3075) (nil font-lock-face web-mode-html-tag-custom-face 3069 . 3075) (nil tag-name "v-icon" 3068 . 3069) (nil tag-type start 3068 . 3069) (nil tag-beg 18 3068 . 3069) (nil font-lock-face web-mode-html-tag-bracket-face 3068 . 3069) (3068 . 3113)) nil (25451 26974 420024 210000) 0 nil])
([nil nil ((#("X" 0 1 (block-side t face web-mode-variable-name-face)) . -3107) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 3108) nil (25451 26974 420008 587000) 0 nil])
([nil nil ((3107 . 3108)) nil (25451 26974 419997 324000) 0 nil])
([nil nil ((#("              " 0 14 (face whitespace-trailing)) . -3114) 3108) nil (25451 26974 419990 81000) 0 nil])
([nil nil ((3075 . 3078) (t 25451 26974 441131 447000)) nil (25451 27010 42887 817000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-icon" tag-type start)) . -3075) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3076) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3077) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 3078) nil (25451 27010 42885 493000) 0 nil])
([nil nil ((3023 . 3025) (3015 . 3024)) nil (25451 27023 190623 87000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3023) (undo-tree-id125 . -1) (#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id126 . -1) 3025) nil (25451 27028 107007 372000) 0 nil] [nil nil ((#("l" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id61 . -1) 3025) ((3024 . 3025)) (25451 27022 642116 192000) 0 nil])
([nil nil ((3023 . 3027)) nil (25451 27028 106989 945000) 0 nil])
([nil nil ((3024 . 3027)) ((#("b-1" 0 2 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3024) (undo-tree-id94 . -3) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3)) (25451 27022 308238 758000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id127 . -1) 3025 (t 25451 27028 113812 321000)) nil (25451 27034 250589 939000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3026) (undo-tree-id68 . -1) (undo-tree-id70 . -1) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (undo-tree-id78 . -1) (undo-tree-id80 . -1) 3027 (t 25451 27010 53592 550000)) ((3026 . 3027)) (25451 27021 931770 599000) 0 nil])
([nil nil ((3024 . 3025)) nil (25451 27034 250572 969000) 0 nil])
([nil nil ((3026 . 3027)) ((#("3" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3026) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (t 25451 27016 549672 569000)) (25451 27016 546295 347000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3023) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("b" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("-" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3025) (undo-tree-id143 . -1) (#("2" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3026) (undo-tree-id144 . -1) 3027 (t 25451 27034 257885 247000)) nil (25451 27040 664607 175000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3033 . 3034) (nil tag-attr t 3023 . 3034) (nil tag-name "v-icon" 3023 . 3034) (nil tag-type start 3023 . 3034) (nil font-lock-face web-mode-html-attr-value-face 3023 . 3034) (3023 . 3034) (t 25451 27040 669960 439000)) nil (25451 27058 452979 871000) 0 nil])
([nil nil ((25664 . 25666) (#("  " 0 2 (part-side css)) . 25663) (undo-tree-id164 . -2) (25662 . 25666) (t 25451 27058 458164 475000)) nil (25451 27247 144142 240000) 0 nil])
([nil nil ((25666 . 25678)) nil (25451 27247 144139 320000) 0 nil])
([nil nil ((25678 . 25680) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -25678) (25678 . 25679)) nil (25451 27247 144137 702000) 0 nil])
([nil nil ((25681 . 25683) (#("    " 0 4 (part-side css face whitespace-trailing)) . 25680) (undo-tree-id162 . -2) (undo-tree-id163 . 4) (25682 . 25684) (25679 . 25683)) nil (25451 27247 144135 986000) 0 nil])
([nil nil ((25680 . 25684)) nil (25451 27247 144132 208000) 0 nil])
([nil nil ((25684 . 25694)) nil (25451 27247 144131 119000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25693) (undo-tree-id161 . -1) 25694) nil (25451 27247 144129 999000) 0 nil])
([nil nil ((25693 . 25695)) nil (25451 27247 144127 797000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -25694) (undo-tree-id160 . -1) 25695) nil (25451 27247 144126 395000) 0 nil])
([nil nil ((#("databuttons" 0 10 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3023) (undo-tree-id145 . -11) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -11) (undo-tree-id159 . -11)) nil (25451 27247 144121 888000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3032 . 3033) (nil tag-attr t 3023 . 3033) (nil tag-name "v-icon" 3023 . 3033) (nil tag-type start 3023 . 3033) (nil font-lock-face web-mode-html-attr-value-face 3023 . 3033) (3023 . 3033)) nil (25451 27247 144090 160000) 0 nil])
([nil nil ((3094 . 3095) (t 25451 27247 152078 193000)) nil (25451 27263 197504 851000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3112 . 3113) (nil tag-attr t 3112 . 3113) (nil tag-attr-end 5 3112 . 3113) (nil tag-name "v-icon" 3112 . 3113) (nil tag-type start 3112 . 3113) (nil font-lock-face web-mode-html-attr-value-face 3112 . 3113) (nil rear-nonsticky t 3111 . 3112) (nil tag-attr t 3111 . 3112) (nil tag-name "v-icon" 3111 . 3112) (nil tag-type start 3111 . 3112) (nil font-lock-face web-mode-html-attr-value-face 3111 . 3112) (nil tag-attr t 3102 . 3111) (nil tag-name "v-icon" 3102 . 3111) (nil tag-type start 3102 . 3111) (nil font-lock-face web-mode-html-attr-value-face 3102 . 3111) (nil tag-attr t 3101 . 3102) (nil tag-name "v-icon" 3101 . 3102) (nil tag-type start 3101 . 3102) (nil font-lock-face web-mode-html-attr-value-face 3101 . 3102) (nil tag-attr t 3100 . 3101) (nil tag-name "v-icon" 3100 . 3101) (nil tag-type start 3100 . 3101) (nil font-lock-face web-mode-html-attr-equal-face 3100 . 3101) (nil tag-attr t 3099 . 3100) (nil tag-name "v-icon" 3099 . 3100) (nil tag-type start 3099 . 3100) (nil font-lock-face web-mode-html-attr-name-face 3099 . 3100) (nil tag-attr t 3098 . 3099) (nil tag-name "v-icon" 3098 . 3099) (nil tag-type start 3098 . 3099) (nil font-lock-face web-mode-html-attr-name-face 3098 . 3099) (nil tag-attr t 3097 . 3098) (nil tag-name "v-icon" 3097 . 3098) (nil tag-type start 3097 . 3098) (nil font-lock-face web-mode-html-attr-name-face 3097 . 3098) (nil tag-attr t 3096 . 3097) (nil tag-name "v-icon" 3096 . 3097) (nil tag-type start 3096 . 3097) (nil font-lock-face web-mode-html-attr-name-face 3096 . 3097) (nil tag-attr-beg 0 3095 . 3096) (nil tag-attr t 3095 . 3096) (nil tag-name "v-icon" 3095 . 3096) (nil tag-type start 3095 . 3096) (nil font-lock-face web-mode-html-attr-name-face 3095 . 3096) (3095 . 3113)) nil (25451 27263 197496 71000) 0 nil])
([nil nil (("mdi-keyboard" . 3035) (undo-tree-id167 . -12) (undo-tree-id168 . -12) (t 25451 27263 208229 117000)) nil (25451 27319 211472 591000) 0 nil])
([nil nil ((3035 . 3051)) nil (25451 27319 211468 311000) 0 nil])
([nil nil (("mdi-keyboard" . 3118) (undo-tree-id165 . -12) (undo-tree-id166 . -12)) nil (25451 27319 211465 522000) 0 nil])
([nil nil ((3118 . 3131)) nil (25451 27319 211448 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3151 . 3152) (nil block-side t 3150 . 3152) (nil block-side t 3149 . 3150) (nil face web-mode-variable-name-face 3149 . 3150) (nil block-side t 3148 . 3149) (nil face web-mode-variable-name-face 3148 . 3149) (nil block-side t 3147 . 3148) (nil face web-mode-variable-name-face 3147 . 3148) (nil block-side t 3146 . 3147) (nil face web-mode-variable-name-face 3146 . 3147) (nil block-side t 3145 . 3146) (nil face web-mode-variable-name-face 3145 . 3146) (nil block-side t 3144 . 3145) (nil face web-mode-variable-name-face 3144 . 3145) (3144 . 3152) (t 25451 27319 220748 674000)) nil (25451 27606 230080 666000) 0 nil])
([nil nil ((3152 . 3153)) nil (25451 27606 230076 340000) 0 nil])
([nil nil ((3076 . 3079)) nil (25451 27606 230075 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3102 . 3103) (nil rear-nonsticky t 3102 . 3103) (nil block-side t 3102 . 3103) (nil block-end t 3102 . 3103) (nil block-token delimiter-end 3102 . 3103) (nil font-lock-face web-mode-block-delimiter-face 3102 . 3103) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3102 . 3103) (nil block-side t 3101 . 3102) (nil block-token delimiter-end 3101 . 3102) (nil font-lock-face web-mode-block-delimiter-face 3101 . 3102) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3101 . 3102) (nil block-side t 3100 . 3101) (nil face (rainbow-delimiters-depth-3-face) 3100 . 3101) (nil block-side t 3098 . 3100) (nil block-side t 3097 . 3098) (nil face web-mode-variable-name-face 3097 . 3098) (nil block-side t 3096 . 3097) (nil face web-mode-variable-name-face 3096 . 3097) (nil block-side t 3095 . 3096) (nil face web-mode-variable-name-face 3095 . 3096) (nil block-side t 3094 . 3095) (nil face web-mode-variable-name-face 3094 . 3095) (nil block-side t 3093 . 3094) (nil face web-mode-variable-name-face 3093 . 3094) (nil block-side t 3092 . 3093) (nil face web-mode-variable-name-face 3092 . 3093) (nil block-side t 3091 . 3092) (nil face web-mode-variable-name-face 3091 . 3092) (nil block-side t 3090 . 3091) (nil rear-nonsticky t 3089 . 3090) (nil block-side t 3089 . 3090) (nil block-side t 3088 . 3089) (nil block-side t 3087 . 3088) (nil face web-mode-variable-name-face 3087 . 3088) (nil block-side t 3086 . 3087) (nil face web-mode-variable-name-face 3086 . 3087) (nil block-side t 3085 . 3086) (nil face web-mode-variable-name-face 3085 . 3086) (nil block-side t 3084 . 3085) (nil face web-mode-variable-name-face 3084 . 3085) (nil block-side t 3083 . 3084) (nil face web-mode-variable-name-face 3083 . 3084) (nil block-side t 3082 . 3083) (nil face web-mode-variable-name-face 3082 . 3083) (nil block-side t 3081 . 3082) (nil face (rainbow-delimiters-depth-3-face) 3081 . 3082) (nil block-side t 3080 . 3081) (nil block-token delimiter-beg 3080 . 3081) (nil font-lock-face web-mode-block-delimiter-face 3080 . 3081) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3080 . 3081) (nil block-beg 0 3079 . 3080) (nil block-controls 0 3079 . 3080) (nil block-side t 3079 . 3080) (nil block-token delimiter-beg 3079 . 3080) (nil font-lock-face web-mode-block-delimiter-face 3079 . 3080) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3079 . 3080) (3079 . 3103)) nil (25451 27606 230070 788000) 0 nil])
([nil nil ((#("
              <v-icon class=\"tablestats\">mdi-table-row</v-icon> {{(startP + cursorY+1)}}" 15 16 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 16 22 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-icon" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 65 66 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 66 67 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 67 68 (block-side t face (rainbow-delimiters-depth-3-face)) 68 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t) 75 76 (rear-nonsticky t block-side t) 76 77 (block-side t) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face web-mode-variable-name-face) 79 80 (block-side t face web-mode-variable-name-face) 80 81 (block-side t face web-mode-variable-name-face) 81 82 (block-side t face web-mode-variable-name-face) 82 83 (block-side t face web-mode-variable-name-face) 83 84 (block-side t face web-mode-variable-name-face) 84 86 (block-side t) 86 87 (block-side t face (rainbow-delimiters-depth-3-face)) 87 88 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 88 89 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3103) (undo-tree-id169 . -89) (undo-tree-id170 . -1) (undo-tree-id171 . -23) (undo-tree-id172 . -42) (undo-tree-id173 . -42) (undo-tree-id174 . -68) (undo-tree-id175 . -89) (undo-tree-id176 . -89)) nil (25451 27606 230053 69000) 0 nil])
([nil nil (("/" . -3077) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 3078 (t 25451 27606 241464 374000)) nil (25451 27627 259230 562000) 0 nil])
([nil nil ((3077 . 3078)) nil (25451 27627 259212 883000) 0 nil])
([nil nil (("-" . -3077) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 3078 (t 25451 27627 265780 901000)) nil (25451 27633 152385 524000) 0 nil])
([nil nil ((3077 . 3078)) nil (25451 27633 152339 649000) 0 nil])
([nil nil ((3103 . 3118) (t 25451 27633 157868 180000)) nil (25451 27646 344518 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3212 . 3213) (nil rear-nonsticky t 3212 . 3213) (nil block-side t 3212 . 3213) (nil block-end t 3212 . 3213) (nil block-token delimiter-end 3212 . 3213) (nil font-lock-face web-mode-block-delimiter-face 3212 . 3213) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3212 . 3213) (nil block-side t 3211 . 3212) (nil block-token delimiter-end 3211 . 3212) (nil font-lock-face web-mode-block-delimiter-face 3211 . 3212) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3211 . 3212) (nil block-side t 3210 . 3211) (nil face (rainbow-delimiters-depth-3-face) 3210 . 3211) (nil block-side t 3208 . 3210) (nil block-side t 3207 . 3208) (nil face web-mode-variable-name-face 3207 . 3208) (nil block-side t 3206 . 3207) (nil face web-mode-variable-name-face 3206 . 3207) (nil block-side t 3205 . 3206) (nil face web-mode-variable-name-face 3205 . 3206) (nil block-side t 3204 . 3205) (nil face web-mode-variable-name-face 3204 . 3205) (nil block-side t 3203 . 3204) (nil face web-mode-variable-name-face 3203 . 3204) (nil block-side t 3202 . 3203) (nil face web-mode-variable-name-face 3202 . 3203) (nil block-side t 3201 . 3202) (nil face web-mode-variable-name-face 3201 . 3202) (nil block-side t 3198 . 3201) (nil block-side t 3197 . 3198) (nil face web-mode-variable-name-face 3197 . 3198) (nil block-side t 3196 . 3197) (nil face web-mode-variable-name-face 3196 . 3197) (nil block-side t 3195 . 3196) (nil face web-mode-variable-name-face 3195 . 3196) (nil block-side t 3194 . 3195) (nil face web-mode-variable-name-face 3194 . 3195) (nil block-side t 3193 . 3194) (nil face web-mode-variable-name-face 3193 . 3194) (nil block-side t 3192 . 3193) (nil face web-mode-variable-name-face 3192 . 3193) (nil block-side t 3191 . 3192) (nil face (rainbow-delimiters-depth-3-face) 3191 . 3192) (nil block-side t 3190 . 3191) (nil block-token delimiter-beg 3190 . 3191) (nil font-lock-face web-mode-block-delimiter-face 3190 . 3191) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3190 . 3191) (nil block-beg 0 3189 . 3190) (nil block-controls 0 3189 . 3190) (nil block-side t 3189 . 3190) (nil block-token delimiter-beg 3189 . 3190) (nil font-lock-face web-mode-block-delimiter-face 3189 . 3190) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3189 . 3190) (nil block-side t 3185 . 3186) (nil block-end t 3185 . 3186) (nil block-token delimiter-end 3185 . 3186) (nil font-lock-face web-mode-block-delimiter-face 3185 . 3186) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3185 . 3186) (nil block-side t 3184 . 3185) (nil block-token delimiter-end 3184 . 3185) (nil font-lock-face web-mode-block-delimiter-face 3184 . 3185) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3184 . 3185) (nil rear-nonsticky t 3183 . 3184) (nil block-side t 3183 . 3184) (nil face (rainbow-delimiters-depth-3-face) 3183 . 3184) (nil block-side t 3181 . 3183) (nil block-side t 3180 . 3181) (nil face web-mode-variable-name-face 3180 . 3181) (nil block-side t 3179 . 3180) (nil face web-mode-variable-name-face 3179 . 3180) (nil block-side t 3178 . 3179) (nil face web-mode-variable-name-face 3178 . 3179) (nil block-side t 3177 . 3178) (nil face web-mode-variable-name-face 3177 . 3178) (nil block-side t 3176 . 3177) (nil face web-mode-variable-name-face 3176 . 3177) (nil block-side t 3175 . 3176) (nil face web-mode-variable-name-face 3175 . 3176) (nil block-side t 3174 . 3175) (nil face web-mode-variable-name-face 3174 . 3175) (nil block-side t 3173 . 3174) (nil face (rainbow-delimiters-depth-3-face) 3173 . 3174) (nil block-side t 3172 . 3173) (nil block-token delimiter-beg 3172 . 3173) (nil font-lock-face web-mode-block-delimiter-face 3172 . 3173) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3172 . 3173) (nil block-beg 0 3171 . 3172) (nil block-controls 0 3171 . 3172) (nil block-side t 3171 . 3172) (nil block-token delimiter-beg 3171 . 3172) (nil font-lock-face web-mode-block-delimiter-face 3171 . 3172) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3171 . 3172) (nil tag-name "v-icon" 3169 . 3170) (nil tag-type end 3169 . 3170) (nil tag-end t 3169 . 3170) (nil font-lock-face web-mode-html-tag-bracket-face 3169 . 3170) (nil tag-name "v-icon" 3163 . 3169) (nil tag-type end 3163 . 3169) (nil font-lock-face web-mode-html-tag-custom-face 3163 . 3169) (nil tag-name "v-icon" 3162 . 3163) (nil tag-type end 3162 . 3163) (nil font-lock-face web-mode-html-tag-bracket-face 3162 . 3163) (nil tag-name "v-icon" 3161 . 3162) (nil tag-type end 3161 . 3162) (nil tag-beg 22 3161 . 3162) (nil font-lock-face web-mode-html-tag-bracket-face 3161 . 3162) (nil tag-name "v-icon" 3144 . 3145) (nil tag-type start 3144 . 3145) (nil tag-end t 3144 . 3145) (nil font-lock-face web-mode-html-tag-bracket-face 3144 . 3145) (nil tag-attr t 3143 . 3144) (nil tag-attr-end 5 3143 . 3144) (nil tag-name "v-icon" 3143 . 3144) (nil tag-type start 3143 . 3144) (nil font-lock-face web-mode-html-attr-value-face 3143 . 3144) (nil rear-nonsticky t 3142 . 3143) (nil tag-attr t 3142 . 3143) (nil tag-name "v-icon" 3142 . 3143) (nil tag-type start 3142 . 3143) (nil font-lock-face web-mode-html-attr-value-face 3142 . 3143) (nil tag-attr t 3133 . 3142) (nil tag-name "v-icon" 3133 . 3142) (nil tag-type start 3133 . 3142) (nil font-lock-face web-mode-html-attr-value-face 3133 . 3142) (nil tag-attr t 3132 . 3133) (nil tag-name "v-icon" 3132 . 3133) (nil tag-type start 3132 . 3133) (nil font-lock-face web-mode-html-attr-value-face 3132 . 3133) (nil tag-attr t 3131 . 3132) (nil tag-name "v-icon" 3131 . 3132) (nil tag-type start 3131 . 3132) (nil font-lock-face web-mode-html-attr-equal-face 3131 . 3132) (nil tag-attr t 3130 . 3131) (nil tag-name "v-icon" 3130 . 3131) (nil tag-type start 3130 . 3131) (nil font-lock-face web-mode-html-attr-name-face 3130 . 3131) (nil tag-attr t 3129 . 3130) (nil tag-name "v-icon" 3129 . 3130) (nil tag-type start 3129 . 3130) (nil font-lock-face web-mode-html-attr-name-face 3129 . 3130) (nil tag-attr t 3128 . 3129) (nil tag-name "v-icon" 3128 . 3129) (nil tag-type start 3128 . 3129) (nil font-lock-face web-mode-html-attr-name-face 3128 . 3129) (nil tag-attr t 3127 . 3128) (nil tag-name "v-icon" 3127 . 3128) (nil tag-type start 3127 . 3128) (nil font-lock-face web-mode-html-attr-name-face 3127 . 3128) (nil tag-attr-beg 0 3126 . 3127) (nil tag-attr t 3126 . 3127) (nil tag-name "v-icon" 3126 . 3127) (nil tag-type start 3126 . 3127) (nil font-lock-face web-mode-html-attr-name-face 3126 . 3127) (nil tag-name "v-icon" 3125 . 3126) (nil tag-type start 3125 . 3126) (nil tag-name "v-icon" 3119 . 3125) (nil tag-type start 3119 . 3125) (nil font-lock-face web-mode-html-tag-custom-face 3119 . 3125) (nil tag-name "v-icon" 3118 . 3119) (nil tag-type start 3118 . 3119) (nil tag-beg 19 3118 . 3119) (nil font-lock-face web-mode-html-tag-bracket-face 3118 . 3119) (3118 . 3213)) nil (25451 27646 344503 423000) 0 nil])
([nil nil ((#("cols=\"2\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 7 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 155) (undo-tree-id210 . -8) (undo-tree-id211 . -8) (t 25451 27646 354061 526000)) nil (25451 27661 829130 339000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -154) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 155) nil (25451 27661 829122 740000) 0 nil])
([nil nil ((188 . 189) (t 25451 27661 838284 779000)) nil (25451 27719 956775 507000) 0 nil])
([nil nil ((nil rear-nonsticky nil 198 . 199) (nil tag-attr t 198 . 199) (nil tag-attr-end 0 198 . 199) (nil tag-name "v-row" 198 . 199) (nil tag-type start 198 . 199) (nil font-lock-face web-mode-html-attr-name-face 198 . 199) (nil tag-attr t 190 . 198) (nil tag-name "v-row" 190 . 198) (nil tag-type start 190 . 198) (nil font-lock-face web-mode-html-attr-name-face 190 . 198) (nil tag-attr-beg 0 189 . 190) (nil tag-attr t 189 . 190) (nil tag-name "v-row" 189 . 190) (nil tag-type start 189 . 190) (nil font-lock-face web-mode-html-attr-name-face 189 . 190) (189 . 199)) nil (25451 27719 956773 520000) 0 nil])
([nil nil ((#("    <v-row class=\"pa-0 ma-0\" no-gutters>
      <v-col class=\"pa-0 ma-0\">" 4 5 (tag-name "v-row" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 5 10 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 10 11 (tag-name "v-row" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 27 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "v-row" tag-type start) 29 30 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 30 38 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 38 39 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 39 40 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 48 53 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 53 54 (tag-name "v-col" tag-type start) 54 55 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 55 59 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 59 60 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 60 70 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 83) (undo-tree-id254 . -72) (undo-tree-id255 . -41) (undo-tree-id256 . -71) (undo-tree-id257 . -39) (undo-tree-id258 . -72)) nil (25451 27719 956768 757000) 0 nil])
([nil nil (("
" . -82) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 83) nil (25451 27719 956761 975000) 0 nil])
([nil nil ((3220 . 3232) (3199 . 3211) ("      " . 3199) (3213 . 3214)) nil (25451 27719 956755 387000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3303 . 3304) (nil tag-name "v-col" 3303 . 3304) (nil tag-type start 3303 . 3304) (nil tag-end t 3303 . 3304) (nil font-lock-face web-mode-html-tag-bracket-face 3303 . 3304) (nil tag-attr t 3302 . 3303) (nil tag-attr-end 5 3302 . 3303) (nil tag-name "v-col" 3302 . 3303) (nil tag-type start 3302 . 3303) (nil font-lock-face web-mode-html-attr-value-face 3302 . 3303) (nil tag-attr t 3292 . 3302) (nil tag-name "v-col" 3292 . 3302) (nil tag-type start 3292 . 3302) (nil font-lock-face web-mode-html-attr-value-face 3292 . 3302) (nil tag-attr t 3291 . 3292) (nil tag-name "v-col" 3291 . 3292) (nil tag-type start 3291 . 3292) (nil font-lock-face web-mode-html-attr-equal-face 3291 . 3292) (nil tag-attr t 3287 . 3291) (nil tag-name "v-col" 3287 . 3291) (nil tag-type start 3287 . 3291) (nil font-lock-face web-mode-html-attr-name-face 3287 . 3291) (nil tag-attr-beg 0 3286 . 3287) (nil tag-attr t 3286 . 3287) (nil tag-name "v-col" 3286 . 3287) (nil tag-type start 3286 . 3287) (nil font-lock-face web-mode-html-attr-name-face 3286 . 3287) (nil tag-name "v-col" 3285 . 3286) (nil tag-type start 3285 . 3286) (nil tag-name "v-col" 3280 . 3285) (nil tag-type start 3280 . 3285) (nil font-lock-face web-mode-html-tag-custom-face 3280 . 3285) (nil tag-name "v-col" 3279 . 3280) (nil tag-type start 3279 . 3280) (nil tag-beg 19 3279 . 3280) (nil font-lock-face web-mode-html-tag-bracket-face 3279 . 3280) (nil tag-name "v-row" 3271 . 3272) (nil tag-type start 3271 . 3272) (nil tag-end t 3271 . 3272) (nil font-lock-face web-mode-html-tag-bracket-face 3271 . 3272) (nil tag-attr t 3270 . 3271) (nil tag-attr-end 0 3270 . 3271) (nil tag-name "v-row" 3270 . 3271) (nil tag-type start 3270 . 3271) (nil font-lock-face web-mode-html-attr-name-face 3270 . 3271) (nil tag-attr t 3262 . 3270) (nil tag-name "v-row" 3262 . 3270) (nil tag-type start 3262 . 3270) (nil font-lock-face web-mode-html-attr-name-face 3262 . 3270) (nil tag-attr-beg 0 3261 . 3262) (nil tag-attr t 3261 . 3262) (nil tag-name "v-row" 3261 . 3262) (nil tag-type start 3261 . 3262) (nil font-lock-face web-mode-html-attr-name-face 3261 . 3262) (nil tag-name "v-row" 3260 . 3261) (nil tag-type start 3260 . 3261) (nil tag-attr t 3259 . 3260) (nil tag-attr-end 5 3259 . 3260) (nil tag-name "v-row" 3259 . 3260) (nil tag-type start 3259 . 3260) (nil font-lock-face web-mode-html-attr-value-face 3259 . 3260) (nil tag-attr t 3249 . 3259) (nil tag-name "v-row" 3249 . 3259) (nil tag-type start 3249 . 3259) (nil font-lock-face web-mode-html-attr-value-face 3249 . 3259) (nil tag-attr t 3248 . 3249) (nil tag-name "v-row" 3248 . 3249) (nil tag-type start 3248 . 3249) (nil font-lock-face web-mode-html-attr-equal-face 3248 . 3249) (nil tag-attr t 3244 . 3248) (nil tag-name "v-row" 3244 . 3248) (nil tag-type start 3244 . 3248) (nil font-lock-face web-mode-html-attr-name-face 3244 . 3248) (nil tag-attr-beg 0 3243 . 3244) (nil tag-attr t 3243 . 3244) (nil tag-name "v-row" 3243 . 3244) (nil tag-type start 3243 . 3244) (nil font-lock-face web-mode-html-attr-name-face 3243 . 3244) (nil tag-name "v-row" 3242 . 3243) (nil tag-type start 3242 . 3243) (nil tag-name "v-row" 3237 . 3242) (nil tag-type start 3237 . 3242) (nil font-lock-face web-mode-html-tag-custom-face 3237 . 3242) (nil tag-name "v-row" 3236 . 3237) (nil tag-type start 3236 . 3237) (nil tag-beg 19 3236 . 3237) (nil font-lock-face web-mode-html-tag-bracket-face 3236 . 3237) (3232 . 3304)) nil (25451 27719 956749 348000) 0 nil])
([nil nil ((#("
            </v-col>" 13 14 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 20 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 20 21 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3198) (undo-tree-id246 . -21) (undo-tree-id247 . -1) (undo-tree-id248 . -21)) nil (25451 27719 956729 555000) 0 nil])
([nil nil (("        " . -3207) (undo-tree-id244 . -8) (undo-tree-id245 . -4) 3215) nil (25451 27719 956725 224000) 0 nil])
([nil nil ((3244 . 3254) ("      " . 3244) 3252) nil (25451 27719 956721 206000) 0 nil])
([nil nil ((#("          <v-col class=\"pa-0 ma-0\">" 10 11 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 11 16 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "v-col" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 18 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 33 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3244) (undo-tree-id241 . -35) (undo-tree-id242 . -35) (undo-tree-id243 . -35)) nil (25451 27719 956718 646000) 0 nil])
([nil nil (("
" . -3243) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 3244) nil (25451 27719 956709 300000) 0 nil])
([nil nil ((#("{{(cursorX+1)}} / {{(startP + cursorY+1)}}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2 3 (block-side t face (rainbow-delimiters-depth-3-face)) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 12 (block-side t) 12 13 (block-side t face (rainbow-delimiters-depth-3-face)) 13 14 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 14 15 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t face (rainbow-delimiters-depth-3-face)) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 30 (block-side t) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 39 (block-side t) 39 40 (block-side t face (rainbow-delimiters-depth-3-face)) 40 41 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 41 42 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3100) (undo-tree-id259 . -42) (undo-tree-id260 . -42) (t 25451 27719 967091 773000)) nil (25451 27757 202484 45000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3122 . 3123) (nil block-side t 3122 . 3123) (nil block-end t 3122 . 3123) (nil block-token delimiter-end 3122 . 3123) (nil font-lock-face web-mode-block-delimiter-face 3122 . 3123) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3122 . 3123) (nil block-side t 3121 . 3122) (nil block-token delimiter-end 3121 . 3122) (nil font-lock-face web-mode-block-delimiter-face 3121 . 3122) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3121 . 3122) (nil block-side t 3120 . 3121) (nil face (rainbow-delimiters-depth-3-face) 3120 . 3121) (nil block-side t 3119 . 3120) (nil face (rainbow-delimiters-depth-3-face) 3119 . 3120) (nil block-side t 3108 . 3119) (nil face web-mode-function-call-face 3108 . 3119) (nil block-side t 3102 . 3108) (nil block-side t 3101 . 3102) (nil block-token delimiter-beg 3101 . 3102) (nil font-lock-face web-mode-block-delimiter-face 3101 . 3102) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3101 . 3102) (nil block-beg 0 3100 . 3101) (nil block-controls 0 3100 . 3101) (nil block-side t 3100 . 3101) (nil block-token delimiter-beg 3100 . 3101) (nil font-lock-face web-mode-block-delimiter-face 3100 . 3101) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3100 . 3101) (3100 . 3123)) nil (25451 27757 202465 20000) 0 nil])
([nil nil ((#("{{\" \" + getDataDiff()}}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2 8 (block-side t) 8 19 (block-side t face web-mode-function-call-face) 19 20 (block-side t face (rainbow-delimiters-depth-3-face)) 20 21 (block-side t face (rainbow-delimiters-depth-3-face)) 21 22 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3100) (undo-tree-id267 . -23) (undo-tree-id268 . -23) (t 25451 27757 211586 465000)) nil (25451 27789 958728 612000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3763 . 3764) (nil tag-name "v-tooltip" 3763 . 3764) (nil tag-type end 3763 . 3764) (nil tag-end t 3763 . 3764) (nil font-lock-face web-mode-html-tag-bracket-face 3763 . 3764) (nil tag-name "v-tooltip" 3754 . 3763) (nil tag-type end 3754 . 3763) (nil font-lock-face web-mode-html-tag-custom-face 3754 . 3763) (nil tag-name "v-tooltip" 3753 . 3754) (nil tag-type end 3753 . 3754) (nil font-lock-face web-mode-html-tag-bracket-face 3753 . 3754) (nil tag-name "v-tooltip" 3752 . 3753) (nil tag-type end 3752 . 3753) (nil tag-beg 22 3752 . 3753) (nil font-lock-face web-mode-html-tag-bracket-face 3752 . 3753) (nil tag-name "span" 3742 . 3743) (nil tag-type end 3742 . 3743) (nil tag-end t 3742 . 3743) (nil font-lock-face web-mode-html-tag-bracket-face 3742 . 3743) (nil tag-name "span" 3738 . 3742) (nil tag-type end 3738 . 3742) (nil font-lock-face web-mode-html-tag-face 3738 . 3742) (nil tag-name "span" 3737 . 3738) (nil tag-type end 3737 . 3738) (nil font-lock-face web-mode-html-tag-bracket-face 3737 . 3738) (nil tag-name "span" 3736 . 3737) (nil tag-type end 3736 . 3737) (nil tag-beg 20 3736 . 3737) (nil font-lock-face web-mode-html-tag-bracket-face 3736 . 3737) (nil block-side t 3735 . 3736) (nil block-end t 3735 . 3736) (nil block-token delimiter-end 3735 . 3736) (nil font-lock-face web-mode-block-delimiter-face 3735 . 3736) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3735 . 3736) (nil block-side t 3734 . 3735) (nil block-token delimiter-end 3734 . 3735) (nil font-lock-face web-mode-block-delimiter-face 3734 . 3735) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3734 . 3735) (nil block-side t 3733 . 3734) (nil face (rainbow-delimiters-depth-3-face) 3733 . 3734) (nil block-side t 3732 . 3733) (nil block-side t 3731 . 3732) (nil face web-mode-variable-name-face 3731 . 3732) (nil block-side t 3730 . 3731) (nil face web-mode-variable-name-face 3730 . 3731) (nil block-side t 3729 . 3730) (nil face web-mode-variable-name-face 3729 . 3730) (nil block-side t 3728 . 3729) (nil face web-mode-variable-name-face 3728 . 3729) (nil block-side t 3727 . 3728) (nil face web-mode-variable-name-face 3727 . 3728) (nil block-side t 3726 . 3727) (nil face web-mode-variable-name-face 3726 . 3727) (nil block-side t 3725 . 3726) (nil face web-mode-variable-name-face 3725 . 3726) (nil block-side t 3724 . 3725) (nil face web-mode-variable-name-face 3724 . 3725) (nil block-side t 3723 . 3724) (nil block-side t 3722 . 3723) (nil face web-mode-variable-name-face 3722 . 3723) (nil block-side t 3721 . 3722) (nil face web-mode-variable-name-face 3721 . 3722) (nil block-side t 3720 . 3721) (nil face web-mode-variable-name-face 3720 . 3721) (nil block-side t 3719 . 3720) (nil face web-mode-variable-name-face 3719 . 3720) (nil block-side t 3718 . 3719) (nil face web-mode-variable-name-face 3718 . 3719) (nil block-side t 3717 . 3718) (nil face web-mode-variable-name-face 3717 . 3718) (nil block-side t 3716 . 3717) (nil face web-mode-variable-name-face 3716 . 3717) (nil block-side t 3715 . 3716) (nil face web-mode-variable-name-face 3715 . 3716) (nil block-side t 3714 . 3715) (nil face web-mode-variable-name-face 3714 . 3715) (nil block-side t 3713 . 3714) (nil face web-mode-variable-name-face 3713 . 3714) (nil block-side t 3712 . 3713) (nil face web-mode-variable-name-face 3712 . 3713) (nil block-side t 3711 . 3712) (nil face web-mode-variable-name-face 3711 . 3712) (nil block-side t 3710 . 3711) (nil face web-mode-variable-name-face 3710 . 3711) (nil block-side t 3709 . 3710) (nil face web-mode-variable-name-face 3709 . 3710) (nil block-side t 3708 . 3709) (nil face web-mode-variable-name-face 3708 . 3709) (nil block-side t 3707 . 3708) (nil block-side t 3706 . 3707) (nil face (rainbow-delimiters-depth-3-face) 3706 . 3707) (nil block-side t 3705 . 3706) (nil face web-mode-variable-name-face 3705 . 3706) (nil block-side t 3704 . 3705) (nil block-side t 3703 . 3704) (nil block-token delimiter-beg 3703 . 3704) (nil font-lock-face web-mode-block-delimiter-face 3703 . 3704) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3703 . 3704) (nil block-beg 0 3702 . 3703) (nil block-controls 0 3702 . 3703) (nil block-side t 3702 . 3703) (nil block-token delimiter-beg 3702 . 3703) (nil font-lock-face web-mode-block-delimiter-face 3702 . 3703) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3702 . 3703) (nil tag-name "span" 3700 . 3701) (nil tag-type start 3700 . 3701) (nil tag-end t 3700 . 3701) (nil font-lock-face web-mode-html-tag-bracket-face 3700 . 3701) (nil tag-name "span" 3696 . 3700) (nil tag-type start 3696 . 3700) (nil font-lock-face web-mode-html-tag-face 3696 . 3700) (nil tag-name "span" 3695 . 3696) (nil tag-type start 3695 . 3696) (nil tag-beg 16 3695 . 3696) (nil font-lock-face web-mode-html-tag-bracket-face 3695 . 3696) (nil tag-name "template" 3683 . 3684) (nil tag-type end 3683 . 3684) (nil tag-end t 3683 . 3684) (nil font-lock-face web-mode-html-tag-bracket-face 3683 . 3684) (nil tag-name "template" 3675 . 3683) (nil tag-type end 3675 . 3683) (nil font-lock-face web-mode-html-tag-face 3675 . 3683) (nil tag-name "template" 3674 . 3675) (nil tag-type end 3674 . 3675) (nil font-lock-face web-mode-html-tag-bracket-face 3674 . 3675) (nil tag-name "template" 3673 . 3674) (nil tag-type end 3673 . 3674) (nil tag-beg 20 3673 . 3674) (nil font-lock-face web-mode-html-tag-bracket-face 3673 . 3674) (nil tag-name "p" 3661 . 3662) (nil tag-type end 3661 . 3662) (nil tag-end t 3661 . 3662) (nil font-lock-face web-mode-html-tag-bracket-face 3661 . 3662) (nil tag-name "p" 3660 . 3661) (nil tag-type end 3660 . 3661) (nil font-lock-face web-mode-html-tag-face 3660 . 3661) (nil tag-name "p" 3659 . 3660) (nil tag-type end 3659 . 3660) (nil font-lock-face web-mode-html-tag-bracket-face 3659 . 3660) (nil tag-name "p" 3658 . 3659) (nil tag-type end 3658 . 3659) (nil tag-beg 20 3658 . 3659) (nil font-lock-face web-mode-html-tag-bracket-face 3658 . 3659) (nil tag-name "span" 3644 . 3645) (nil tag-type end 3644 . 3645) (nil tag-end t 3644 . 3645) (nil font-lock-face web-mode-html-tag-bracket-face 3644 . 3645) (nil tag-name "span" 3640 . 3644) (nil tag-type end 3640 . 3644) (nil font-lock-face web-mode-html-tag-face 3640 . 3644) (nil tag-name "span" 3639 . 3640) (nil tag-type end 3639 . 3640) (nil font-lock-face web-mode-html-tag-bracket-face 3639 . 3640) (nil tag-name "span" 3638 . 3639) (nil tag-type end 3638 . 3639) (nil tag-beg 20 3638 . 3639) (nil font-lock-face web-mode-html-tag-bracket-face 3638 . 3639) (nil face (rainbow-delimiters-depth-1-face) 3622 . 3623) (nil tag-name "v-icon" 3604 . 3605) (nil tag-type end 3604 . 3605) (nil tag-end t 3604 . 3605) (nil font-lock-face web-mode-html-tag-bracket-face 3604 . 3605) (nil tag-name "v-icon" 3598 . 3604) (nil tag-type end 3598 . 3604) (nil font-lock-face web-mode-html-tag-custom-face 3598 . 3604) (nil tag-name "v-icon" 3597 . 3598) (nil tag-type end 3597 . 3598) (nil font-lock-face web-mode-html-tag-bracket-face 3597 . 3598) (nil tag-name "v-icon" 3596 . 3597) (nil tag-type end 3596 . 3597) (nil tag-beg 22 3596 . 3597) (nil font-lock-face web-mode-html-tag-bracket-face 3596 . 3597) (nil tag-name "v-icon" 3544 . 3545) (nil tag-type start 3544 . 3545) (nil tag-end t 3544 . 3545) (nil font-lock-face web-mode-html-tag-bracket-face 3544 . 3545) (nil tag-name "v-icon" 3527 . 3544) (nil tag-type start 3527 . 3544) (nil tag-attr t 3526 . 3527) (nil tag-attr-end 0 3526 . 3527) (nil tag-name "v-icon" 3526 . 3527) (nil tag-type start 3526 . 3527) (nil font-lock-face web-mode-html-attr-name-face 3526 . 3527) (nil tag-attr t 3523 . 3526) (nil tag-name "v-icon" 3523 . 3526) (nil tag-type start 3523 . 3526) (nil font-lock-face web-mode-html-attr-name-face 3523 . 3526) (nil tag-attr-beg 0 3522 . 3523) (nil tag-attr t 3522 . 3523) (nil tag-name "v-icon" 3522 . 3523) (nil tag-type start 3522 . 3523) (nil font-lock-face web-mode-html-attr-name-face 3522 . 3523) (nil tag-name "v-icon" 3503 . 3522) (nil tag-type start 3503 . 3522) (nil tag-attr t 3502 . 3503) (nil tag-attr-end 0 3502 . 3503) (nil tag-name "v-icon" 3502 . 3503) (nil tag-type start 3502 . 3503) (nil font-lock-face web-mode-html-attr-name-face 3502 . 3503) (nil tag-attr t 3499 . 3502) (nil tag-name "v-icon" 3499 . 3502) (nil tag-type start 3499 . 3502) (nil font-lock-face web-mode-html-attr-name-face 3499 . 3502) (nil tag-attr-beg 0 3498 . 3499) (nil tag-attr t 3498 . 3499) (nil tag-name "v-icon" 3498 . 3499) (nil tag-type start 3498 . 3499) (nil font-lock-face web-mode-html-attr-name-face 3498 . 3499) (nil tag-name "v-icon" 3479 . 3498) (nil tag-type start 3479 . 3498) (nil tag-name "v-icon" 3473 . 3479) (nil tag-type start 3473 . 3479) (nil font-lock-face web-mode-html-tag-custom-face 3473 . 3479) (nil tag-name "v-icon" 3472 . 3473) (nil tag-type start 3472 . 3473) (nil tag-beg 19 3472 . 3473) (nil font-lock-face web-mode-html-tag-bracket-face 3472 . 3473) (nil block-side t 3454 . 3455) (nil block-end t 3454 . 3455) (nil block-token delimiter-end 3454 . 3455) (nil font-lock-face web-mode-block-delimiter-face 3454 . 3455) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3454 . 3455) (nil block-side t 3453 . 3454) (nil block-token delimiter-end 3453 . 3454) (nil font-lock-face web-mode-block-delimiter-face 3453 . 3454) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 3453 . 3454) (nil block-side t 3452 . 3453) (nil face (rainbow-delimiters-depth-4-face) 3452 . 3453) (nil block-side t 3451 . 3452) (nil face (rainbow-delimiters-depth-4-face) 3451 . 3452) (nil block-side t 3440 . 3451) (nil face web-mode-function-call-face 3440 . 3451) (nil block-side t 3434 . 3440) (nil block-side t 3433 . 3434) (nil block-token delimiter-beg 3433 . 3434) (nil font-lock-face web-mode-block-delimiter-face 3433 . 3434) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 3433 . 3434) (nil block-beg 0 3432 . 3433) (nil block-controls 0 3432 . 3433) (nil block-side t 3432 . 3433) (nil block-token delimiter-beg 3432 . 3433) (nil font-lock-face web-mode-block-delimiter-face 3432 . 3433) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3432 . 3433) (nil face (rainbow-delimiters-depth-1-face) 3414 . 3415) (nil tag-name "span" 3413 . 3414) (nil tag-type start 3413 . 3414) (nil tag-end t 3413 . 3414) (nil font-lock-face web-mode-html-tag-bracket-face 3413 . 3414) (nil tag-name "span" 3398 . 3413) (nil tag-type start 3398 . 3413) (nil tag-attr t 3397 . 3398) (nil tag-attr-end 4 3397 . 3398) (nil tag-name "span" 3397 . 3398) (nil tag-type start 3397 . 3398) (nil font-lock-face web-mode-html-attr-value-face 3397 . 3398) (nil tag-attr t 3394 . 3397) (nil tag-name "span" 3394 . 3397) (nil tag-type start 3394 . 3397) (nil font-lock-face web-mode-html-attr-value-face 3394 . 3397) (nil tag-attr t 3393 . 3394) (nil tag-name "span" 3393 . 3394) (nil tag-type start 3393 . 3394) (nil font-lock-face web-mode-html-attr-equal-face 3393 . 3394) (nil tag-attr t 3390 . 3393) (nil tag-name "span" 3390 . 3393) (nil tag-type start 3390 . 3393) (nil font-lock-face web-mode-html-attr-engine-face 3390 . 3393) (nil tag-attr-beg 2 3389 . 3390) (nil tag-attr t 3389 . 3390) (nil tag-name "span" 3389 . 3390) (nil tag-type start 3389 . 3390) (nil font-lock-face web-mode-html-attr-engine-face 3389 . 3390) (nil tag-name "span" 3372 . 3389) (nil tag-type start 3372 . 3389) (nil tag-attr t 3371 . 3372) (nil tag-attr-end 6 3371 . 3372) (nil tag-name "span" 3371 . 3372) (nil tag-type start 3371 . 3372) (nil font-lock-face web-mode-html-attr-value-face 3371 . 3372) (nil tag-attr t 3365 . 3371) (nil tag-name "span" 3365 . 3371) (nil tag-type start 3365 . 3371) (nil font-lock-face web-mode-html-attr-value-face 3365 . 3371) (nil tag-attr t 3364 . 3365) (nil tag-name "span" 3364 . 3365) (nil tag-type start 3364 . 3365) (nil font-lock-face web-mode-html-attr-equal-face 3364 . 3365) (nil tag-attr t 3359 . 3364) (nil tag-name "span" 3359 . 3364) (nil tag-type start 3359 . 3364) (nil font-lock-face web-mode-html-attr-engine-face 3359 . 3364) (nil tag-attr-beg 2 3358 . 3359) (nil tag-attr t 3358 . 3359) (nil tag-name "span" 3358 . 3359) (nil tag-type start 3358 . 3359) (nil font-lock-face web-mode-html-attr-engine-face 3358 . 3359) (nil tag-name "span" 3341 . 3358) (nil tag-type start 3341 . 3358) (nil tag-attr t 3340 . 3341) (nil tag-attr-end 5 3340 . 3341) (nil tag-name "span" 3340 . 3341) (nil tag-type start 3340 . 3341) (nil font-lock-face web-mode-html-attr-value-face 3340 . 3341) (nil tag-attr t 3322 . 3340) (nil tag-name "span" 3322 . 3340) (nil tag-type start 3322 . 3340) (nil font-lock-face web-mode-html-attr-value-face 3322 . 3340) (nil tag-attr t 3321 . 3322) (nil tag-name "span" 3321 . 3322) (nil tag-type start 3321 . 3322) (nil font-lock-face web-mode-html-attr-equal-face 3321 . 3322) (nil tag-attr t 3317 . 3321) (nil tag-name "span" 3317 . 3321) (nil tag-type start 3317 . 3321) (nil font-lock-face web-mode-html-attr-name-face 3317 . 3321) (nil tag-attr-beg 0 3316 . 3317) (nil tag-attr t 3316 . 3317) (nil tag-name "span" 3316 . 3317) (nil tag-type start 3316 . 3317) (nil font-lock-face web-mode-html-attr-name-face 3316 . 3317) (nil tag-name "span" 3299 . 3316) (nil tag-type start 3299 . 3316) (nil tag-name "span" 3295 . 3299) (nil tag-type start 3295 . 3299) (nil font-lock-face web-mode-html-tag-face 3295 . 3299) (nil tag-name "span" 3294 . 3295) (nil tag-type start 3294 . 3295) (nil tag-beg 17 3294 . 3295) (nil font-lock-face web-mode-html-tag-bracket-face 3294 . 3295) (nil block-side t 3278 . 3279) (nil block-end t 3278 . 3279) (nil block-token delimiter-end 3278 . 3279) (nil font-lock-face web-mode-block-delimiter-face 3278 . 3279) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3278 . 3279) (nil block-side t 3277 . 3278) (nil block-token delimiter-end 3277 . 3278) (nil font-lock-face web-mode-block-delimiter-face 3277 . 3278) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3277 . 3278) (nil block-side t 3276 . 3277) (nil block-side t 3275 . 3276) (nil face (rainbow-delimiters-depth-3-face) 3275 . 3276) (nil block-side t 3274 . 3275) (nil face (rainbow-delimiters-depth-4-face) 3274 . 3275) (nil block-side t 3273 . 3274) (nil face web-mode-variable-name-face 3273 . 3274) (nil block-side t 3272 . 3273) (nil face web-mode-variable-name-face 3272 . 3273) (nil block-side t 3271 . 3272) (nil face web-mode-variable-name-face 3271 . 3272) (nil block-side t 3270 . 3271) (nil face web-mode-variable-name-face 3270 . 3271) (nil block-side t 3269 . 3270) (nil face web-mode-variable-name-face 3269 . 3270) (nil block-side t 3268 . 3269) (nil face web-mode-variable-name-face 3268 . 3269) (nil block-side t 3267 . 3268) (nil face web-mode-variable-name-face 3267 . 3268) (nil block-side t 3266 . 3267) (nil face web-mode-variable-name-face 3266 . 3267) (nil block-side t 3265 . 3266) (nil face web-mode-variable-name-face 3265 . 3266) (nil block-side t 3263 . 3265) (nil block-side t 3262 . 3263) (nil face web-mode-variable-name-face 3262 . 3263) (nil block-side t 3261 . 3262) (nil face web-mode-variable-name-face 3261 . 3262) (nil block-side t 3260 . 3261) (nil face web-mode-variable-name-face 3260 . 3261) (nil block-side t 3259 . 3260) (nil face web-mode-variable-name-face 3259 . 3260) (nil block-side t 3258 . 3259) (nil face (rainbow-delimiters-depth-4-face) 3258 . 3259) (nil block-side t 3255 . 3258) (nil block-side t 3254 . 3255) (nil face web-mode-variable-name-face 3254 . 3255) (nil block-side t 3253 . 3254) (nil face web-mode-variable-name-face 3253 . 3254) (nil block-side t 3252 . 3253) (nil face web-mode-variable-name-face 3252 . 3253) (nil block-side t 3251 . 3252) (nil face web-mode-variable-name-face 3251 . 3252) (nil block-side t 3250 . 3251) (nil face web-mode-variable-name-face 3250 . 3251) (nil block-side t 3249 . 3250) (nil face web-mode-variable-name-face 3249 . 3250) (nil block-side t 3248 . 3249) (nil face web-mode-variable-name-face 3248 . 3249) (nil block-side t 3247 . 3248) (nil face web-mode-variable-name-face 3247 . 3248) (nil block-side t 3246 . 3247) (nil face web-mode-variable-name-face 3246 . 3247) (nil block-side t 3245 . 3246) (nil block-side t 3244 . 3245) (nil face web-mode-variable-name-face 3244 . 3245) (nil block-side t 3243 . 3244) (nil face web-mode-variable-name-face 3243 . 3244) (nil block-side t 3242 . 3243) (nil face web-mode-variable-name-face 3242 . 3243) (nil block-side t 3241 . 3242) (nil face web-mode-variable-name-face 3241 . 3242) (nil block-side t 3240 . 3241) (nil face web-mode-variable-name-face 3240 . 3241) (nil block-side t 3239 . 3240) (nil face web-mode-variable-name-face 3239 . 3240) (nil block-side t 3238 . 3239) (nil face web-mode-variable-name-face 3238 . 3239) (nil block-side t 3237 . 3238) (nil face web-mode-variable-name-face 3237 . 3238) (nil block-side t 3236 . 3237) (nil face web-mode-variable-name-face 3236 . 3237) (nil block-side t 3235 . 3236) (nil face web-mode-variable-name-face 3235 . 3236) (nil block-side t 3234 . 3235) (nil face web-mode-variable-name-face 3234 . 3235) (nil block-side t 3233 . 3234) (nil face web-mode-variable-name-face 3233 . 3234) (nil block-side t 3232 . 3233) (nil face web-mode-variable-name-face 3232 . 3233) (nil block-side t 3231 . 3232) (nil face web-mode-variable-name-face 3231 . 3232) (nil block-side t 3230 . 3231) (nil face web-mode-variable-name-face 3230 . 3231) (nil block-side t 3229 . 3230) (nil block-side t 3228 . 3229) (nil face (rainbow-delimiters-depth-3-face) 3228 . 3229) (nil block-side t 3227 . 3228) (nil face web-mode-variable-name-face 3227 . 3228) (nil block-side t 3226 . 3227) (nil block-side t 3225 . 3226) (nil block-token delimiter-beg 3225 . 3226) (nil font-lock-face web-mode-block-delimiter-face 3225 . 3226) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3225 . 3226) (nil block-beg 0 3224 . 3225) (nil block-controls 0 3224 . 3225) (nil block-side t 3224 . 3225) (nil block-token delimiter-beg 3224 . 3225) (nil font-lock-face web-mode-block-delimiter-face 3224 . 3225) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3224 . 3225) (nil tag-name "p" 3208 . 3209) (nil tag-type start 3208 . 3209) (nil tag-end t 3208 . 3209) (nil font-lock-face web-mode-html-tag-bracket-face 3208 . 3209) (nil tag-attr t 3207 . 3208) (nil tag-attr-end 5 3207 . 3208) (nil tag-name "p" 3207 . 3208) (nil tag-type start 3207 . 3208) (nil font-lock-face web-mode-html-attr-value-face 3207 . 3208) (nil tag-attr t 3199 . 3207) (nil tag-name "p" 3199 . 3207) (nil tag-type start 3199 . 3207) (nil font-lock-face web-mode-html-attr-value-face 3199 . 3207) (nil tag-attr t 3198 . 3199) (nil tag-name "p" 3198 . 3199) (nil tag-type start 3198 . 3199) (nil font-lock-face web-mode-html-attr-equal-face 3198 . 3199) (nil tag-attr t 3194 . 3198) (nil tag-name "p" 3194 . 3198) (nil tag-type start 3194 . 3198) (nil font-lock-face web-mode-html-attr-name-face 3194 . 3198) (nil tag-attr-beg 0 3193 . 3194) (nil tag-attr t 3193 . 3194) (nil tag-name "p" 3193 . 3194) (nil tag-type start 3193 . 3194) (nil font-lock-face web-mode-html-attr-name-face 3193 . 3194) (nil tag-name "p" 3192 . 3193) (nil tag-type start 3192 . 3193) (nil tag-name "p" 3191 . 3192) (nil tag-type start 3191 . 3192) (nil font-lock-face web-mode-html-tag-face 3191 . 3192) (nil tag-name "p" 3190 . 3191) (nil tag-type start 3190 . 3191) (nil tag-beg 17 3190 . 3191) (nil font-lock-face web-mode-html-tag-bracket-face 3190 . 3191) (nil tag-name "template" 3176 . 3177) (nil tag-type start 3176 . 3177) (nil tag-end t 3176 . 3177) (nil font-lock-face web-mode-html-tag-bracket-face 3176 . 3177) (nil block-side t 3175 . 3176) (nil block-end t 3175 . 3176) (nil block-token delimiter-end 3175 . 3176) (nil tag-attr t 3175 . 3176) (nil tag-attr-end 16 3175 . 3176) (nil tag-name "template" 3175 . 3176) (nil tag-type start 3175 . 3176) (nil font-lock-face web-mode-block-delimiter-face 3175 . 3176) (nil block-side t 3173 . 3175) (nil tag-attr t 3173 . 3175) (nil tag-name "template" 3173 . 3175) (nil tag-type start 3173 . 3175) (nil block-side t 3172 . 3173) (nil tag-attr t 3172 . 3173) (nil tag-name "template" 3172 . 3173) (nil tag-type start 3172 . 3173) (nil face web-mode-variable-name-face 3172 . 3173) (nil block-side t 3171 . 3172) (nil tag-attr t 3171 . 3172) (nil tag-name "template" 3171 . 3172) (nil tag-type start 3171 . 3172) (nil face web-mode-variable-name-face 3171 . 3172) (nil block-side t 3170 . 3171) (nil tag-attr t 3170 . 3171) (nil tag-name "template" 3170 . 3171) (nil tag-type start 3170 . 3171) (nil face web-mode-variable-name-face 3170 . 3171) (nil block-side t 3169 . 3170) (nil tag-attr t 3169 . 3170) (nil tag-name "template" 3169 . 3170) (nil tag-type start 3169 . 3170) (nil face web-mode-variable-name-face 3169 . 3170) (nil block-side t 3168 . 3169) (nil tag-attr t 3168 . 3169) (nil tag-name "template" 3168 . 3169) (nil tag-type start 3168 . 3169) (nil face web-mode-variable-name-face 3168 . 3169) (nil block-side t 3166 . 3168) (nil tag-attr t 3166 . 3168) (nil tag-name "template" 3166 . 3168) (nil tag-type start 3166 . 3168) (nil block-side t 3165 . 3166) (nil tag-attr t 3165 . 3166) (nil tag-name "template" 3165 . 3166) (nil tag-type start 3165 . 3166) (nil face web-mode-variable-name-face 3165 . 3166) (nil block-side t 3164 . 3165) (nil tag-attr t 3164 . 3165) (nil tag-name "template" 3164 . 3165) (nil tag-type start 3164 . 3165) (nil face web-mode-variable-name-face 3164 . 3165) (nil block-side t 3162 . 3164) (nil tag-attr t 3162 . 3164) (nil tag-name "template" 3162 . 3164) (nil tag-type start 3162 . 3164) (nil block-side t 3161 . 3162) (nil block-token delimiter-beg 3161 . 3162) (nil tag-attr t 3161 . 3162) (nil tag-name "template" 3161 . 3162) (nil tag-type start 3161 . 3162) (nil font-lock-face web-mode-block-delimiter-face 3161 . 3162) (nil block-side t 3160 . 3161) (nil block-token delimiter-beg 3160 . 3161) (nil tag-attr t 3160 . 3161) (nil tag-name "template" 3160 . 3161) (nil tag-type start 3160 . 3161) (nil font-lock-face web-mode-block-delimiter-face 3160 . 3161) (nil block-side t 3159 . 3160) (nil block-token delimiter-beg 3159 . 3160) (nil tag-attr t 3159 . 3160) (nil tag-name "template" 3159 . 3160) (nil tag-type start 3159 . 3160) (nil font-lock-face web-mode-block-delimiter-face 3159 . 3160) (nil block-side t 3158 . 3159) (nil block-token delimiter-beg 3158 . 3159) (nil tag-attr t 3158 . 3159) (nil tag-name "template" 3158 . 3159) (nil tag-type start 3158 . 3159) (nil font-lock-face web-mode-block-delimiter-face 3158 . 3159) (nil block-side t 3157 . 3158) (nil block-token delimiter-beg 3157 . 3158) (nil tag-attr t 3157 . 3158) (nil tag-name "template" 3157 . 3158) (nil tag-type start 3157 . 3158) (nil font-lock-face web-mode-block-delimiter-face 3157 . 3158) (nil block-side t 3156 . 3157) (nil block-token delimiter-beg 3156 . 3157) (nil tag-attr t 3156 . 3157) (nil tag-name "template" 3156 . 3157) (nil tag-type start 3156 . 3157) (nil font-lock-face web-mode-block-delimiter-face 3156 . 3157) (nil block-side t 3155 . 3156) (nil block-token delimiter-beg 3155 . 3156) (nil tag-attr t 3155 . 3156) (nil tag-name "template" 3155 . 3156) (nil tag-type start 3155 . 3156) (nil font-lock-face web-mode-block-delimiter-face 3155 . 3156) (nil block-side t 3154 . 3155) (nil block-token delimiter-beg 3154 . 3155) (nil tag-attr t 3154 . 3155) (nil tag-name "template" 3154 . 3155) (nil tag-type start 3154 . 3155) (nil font-lock-face web-mode-block-delimiter-face 3154 . 3155) (nil block-side t 3153 . 3154) (nil block-token delimiter-beg 3153 . 3154) (nil tag-attr t 3153 . 3154) (nil tag-name "template" 3153 . 3154) (nil tag-type start 3153 . 3154) (nil font-lock-face web-mode-block-delimiter-face 3153 . 3154) (nil block-side t 3152 . 3153) (nil block-token delimiter-beg 3152 . 3153) (nil tag-attr t 3152 . 3153) (nil tag-name "template" 3152 . 3153) (nil tag-type start 3152 . 3153) (nil font-lock-face web-mode-block-delimiter-face 3152 . 3153) (nil block-side t 3151 . 3152) (nil block-token delimiter-beg 3151 . 3152) (nil tag-attr t 3151 . 3152) (nil tag-name "template" 3151 . 3152) (nil tag-type start 3151 . 3152) (nil font-lock-face web-mode-block-delimiter-face 3151 . 3152) (nil block-beg 0 3150 . 3151) (nil block-controls 0 3150 . 3151) (nil block-side t 3150 . 3151) (nil block-token delimiter-beg 3150 . 3151) (nil tag-attr t 3150 . 3151) (nil tag-name "template" 3150 . 3151) (nil tag-type start 3150 . 3151) (nil font-lock-face web-mode-block-delimiter-face 3150 . 3151) (nil tag-attr t 3145 . 3150) (nil tag-name "template" 3145 . 3150) (nil tag-type start 3145 . 3150) (nil font-lock-face web-mode-html-attr-engine-face 3145 . 3150) (nil tag-attr-beg 2 3144 . 3145) (nil tag-attr t 3144 . 3145) (nil tag-name "template" 3144 . 3145) (nil tag-type start 3144 . 3145) (nil font-lock-face web-mode-html-attr-engine-face 3144 . 3145) (nil tag-name "template" 3143 . 3144) (nil tag-type start 3143 . 3144) (nil tag-name "template" 3135 . 3143) (nil tag-type start 3135 . 3143) (nil font-lock-face web-mode-html-tag-face 3135 . 3143) (nil tag-name "template" 3134 . 3135) (nil tag-type start 3134 . 3135) (nil tag-beg 17 3134 . 3135) (nil font-lock-face web-mode-html-tag-bracket-face 3134 . 3135) (nil tag-name "v-tooltip" 3122 . 3123) (nil tag-type start 3122 . 3123) (nil tag-end t 3122 . 3123) (nil font-lock-face web-mode-html-tag-bracket-face 3122 . 3123) (nil tag-attr t 3121 . 3122) (nil tag-attr-end 0 3121 . 3122) (nil tag-name "v-tooltip" 3121 . 3122) (nil tag-type start 3121 . 3122) (nil font-lock-face web-mode-html-attr-name-face 3121 . 3122) (nil tag-attr t 3120 . 3121) (nil tag-name "v-tooltip" 3120 . 3121) (nil tag-type start 3120 . 3121) (nil font-lock-face web-mode-html-attr-name-face 3120 . 3121) (nil tag-attr-beg 0 3119 . 3120) (nil tag-attr t 3119 . 3120) (nil tag-name "v-tooltip" 3119 . 3120) (nil tag-type start 3119 . 3120) (nil font-lock-face web-mode-html-attr-name-face 3119 . 3120) (nil tag-name "v-tooltip" 3118 . 3119) (nil tag-type start 3118 . 3119) (nil tag-name "v-tooltip" 3109 . 3118) (nil tag-type start 3109 . 3118) (nil font-lock-face web-mode-html-tag-custom-face 3109 . 3118) (nil tag-name "v-tooltip" 3108 . 3109) (nil tag-type start 3108 . 3109) (nil tag-beg 19 3108 . 3109) (nil font-lock-face web-mode-html-tag-bracket-face 3108 . 3109) (3100 . 3764)) nil (25451 27789 958693 259000) 0 nil])
([nil nil ((3872 . 3878) (3799 . 3815) ("          " . 3799) (3771 . 3787) ("          " . 3771) (3748 . 3766) ("            " . 3748) (3720 . 3740) ("              " . 3720) (3712 . 3718) (3680 . 3686) (3624 . 3648) ("                  " . 3624) (3616 . 3622) (3570 . 3594) (#("                  " 0 18 (tag-name "v-icon" tag-type start)) . 3570) (3540 . 3564) (#("                  " 0 18 (tag-name "v-icon" tag-type start)) . 3540) (3526 . 3532) (3480 . 3486) (3441 . 3461) (#("              " 0 14 (tag-name "span" tag-type start)) . 3441) (3425 . 3431) (3388 . 3394) (3340 . 3346) (3298 . 3318) ("              " . 3298) (3222 . 3242) ("              " . 3222) (3184 . 3202) ("            " . 3184) (3124 . 3140) ("          " . 3124) 3033) nil (25451 27789 958556 445000) 0 nil])
([nil nil ((3100 . 3114) ("  " . 3100) ("       " . 3099) (undo-tree-id261 . -7) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -7) (3106 . 3107)) nil (25451 27789 958544 454000) 0 nil])
([nil nil ((3998 . 4008) ("      " . 3998) 4020 (t 25451 27789 972009 384000)) nil (25451 27845 954901 536000) 0 nil])
([nil nil ((#("$t('AnalysisNetwork.mDataSize', {size: dataTSize})" 0 1 (block-side t) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face (rainbow-delimiters-depth-3-face)) 3 4 (block-side t) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t face web-mode-variable-name-face) 15 16 (block-side t face web-mode-variable-name-face) 16 17 (block-side t face web-mode-variable-name-face) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 32 (block-side t) 32 33 (block-side t face (rainbow-delimiters-depth-4-face)) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 39 (block-side t) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face (rainbow-delimiters-depth-4-face)) 49 50 (block-side t face (rainbow-delimiters-depth-3-face))) . 3250) (undo-tree-id269 . -50) (undo-tree-id270 . -48) (undo-tree-id271 . -50) (t 25451 27845 968709 795000)) nil (25451 27903 677365 168000) 0 nil])
([nil nil ((3250 . 3251)) nil (25451 27903 677351 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3259 . 3260) (nil block-side t 3259 . 3260) (nil face web-mode-variable-name-face 3259 . 3260) (nil block-side t 3258 . 3259) (nil face web-mode-variable-name-face 3258 . 3259) (nil block-side t 3257 . 3258) (nil face web-mode-variable-name-face 3257 . 3258) (nil block-side t 3256 . 3257) (nil face web-mode-variable-name-face 3256 . 3257) (nil block-side t 3255 . 3256) (nil face web-mode-variable-name-face 3255 . 3256) (nil block-side t 3254 . 3255) (nil face web-mode-variable-name-face 3254 . 3255) (nil block-side t 3253 . 3254) (nil face web-mode-variable-name-face 3253 . 3254) (nil block-side t 3252 . 3253) (nil face web-mode-variable-name-face 3252 . 3253) (nil block-side t 3251 . 3252) (nil face web-mode-variable-name-face 3251 . 3252) (3251 . 3260)) nil (25451 27903 677343 353000) 0 nil])
([nil nil ((" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) (" " . 3099) ("
" . 3099) (undo-tree-id272 . -1) (t 25451 27903 693407 288000)) nil (25451 27916 113577 74000) 0 nil])
([nil nil ((3100 . 3114) (" " . 3100) (3099 . 3100) (t 25451 27916 125554 745000)) nil (25451 27938 303790 794000) 0 nil])
([nil nil ((#("                  <p class=\"caption\">" 18 19 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "p" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 27 35 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3190) (undo-tree-id448 . -37) (undo-tree-id449 . -37)) nil (25451 27960 353650 383000) 0 nil] [nil nil ((3032 . 3047)) (("
              " . 3032) (undo-tree-id411 . -15) (undo-tree-id412 . -15) (undo-tree-id413 . -1) (undo-tree-id414 . -15) (undo-tree-id415 . -15) (undo-tree-id416 . -15) (undo-tree-id417 . -15) (undo-tree-id418 . -15) (undo-tree-id419 . -15) (undo-tree-id420 . -15) (undo-tree-id421 . -1) (undo-tree-id422 . -15) (undo-tree-id423 . -15) (undo-tree-id424 . -15) (undo-tree-id425 . -15) (undo-tree-id426 . -15) (undo-tree-id427 . -15) (undo-tree-id428 . -15) (undo-tree-id429 . -15) (undo-tree-id430 . -15) (undo-tree-id431 . -15) (undo-tree-id432 . -15) (undo-tree-id433 . -15) (undo-tree-id434 . -15) (undo-tree-id435 . -15) (undo-tree-id436 . -15) (undo-tree-id437 . -15) (undo-tree-id438 . -15) (undo-tree-id439 . -15) (undo-tree-id440 . -15) (undo-tree-id441 . -15)) (25451 27937 695902 0) 0 nil])
([nil nil (("
" . -3189) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 3190) nil (25451 27960 353645 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3141 . 3142) (nil rear-nonsticky t 3141 . 3142) (nil block-side t 3141 . 3142) (nil block-end t 3141 . 3142) (nil block-token delimiter-end 3141 . 3142) (nil font-lock-face web-mode-block-delimiter-face 3141 . 3142) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3141 . 3142) (nil block-side t 3140 . 3141) (nil block-token delimiter-end 3140 . 3141) (nil font-lock-face web-mode-block-delimiter-face 3140 . 3141) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3140 . 3141) (nil block-side t 3139 . 3140) (nil face (rainbow-delimiters-depth-3-face) 3139 . 3140) (nil block-side t 3137 . 3139) (nil block-side t 3136 . 3137) (nil face web-mode-variable-name-face 3136 . 3137) (nil block-side t 3135 . 3136) (nil face web-mode-variable-name-face 3135 . 3136) (nil block-side t 3134 . 3135) (nil face web-mode-variable-name-face 3134 . 3135) (nil block-side t 3133 . 3134) (nil face web-mode-variable-name-face 3133 . 3134) (nil block-side t 3132 . 3133) (nil face web-mode-variable-name-face 3132 . 3133) (nil block-side t 3131 . 3132) (nil face web-mode-variable-name-face 3131 . 3132) (nil block-side t 3130 . 3131) (nil face web-mode-variable-name-face 3130 . 3131) (nil block-side t 3127 . 3130) (nil block-side t 3126 . 3127) (nil face web-mode-variable-name-face 3126 . 3127) (nil block-side t 3125 . 3126) (nil face web-mode-variable-name-face 3125 . 3126) (nil block-side t 3124 . 3125) (nil face web-mode-variable-name-face 3124 . 3125) (nil block-side t 3123 . 3124) (nil face web-mode-variable-name-face 3123 . 3124) (nil block-side t 3122 . 3123) (nil face web-mode-variable-name-face 3122 . 3123) (nil block-side t 3121 . 3122) (nil face web-mode-variable-name-face 3121 . 3122) (nil block-side t 3120 . 3121) (nil face (rainbow-delimiters-depth-3-face) 3120 . 3121) (nil block-side t 3119 . 3120) (nil block-token delimiter-beg 3119 . 3120) (nil font-lock-face web-mode-block-delimiter-face 3119 . 3120) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3119 . 3120) (nil block-beg 0 3118 . 3119) (nil block-controls 0 3118 . 3119) (nil block-side t 3118 . 3119) (nil block-token delimiter-beg 3118 . 3119) (nil font-lock-face web-mode-block-delimiter-face 3118 . 3119) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3118 . 3119) (nil block-side t 3114 . 3115) (nil block-end t 3114 . 3115) (nil block-token delimiter-end 3114 . 3115) (nil font-lock-face web-mode-block-delimiter-face 3114 . 3115) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3114 . 3115) (nil block-side t 3113 . 3114) (nil block-token delimiter-end 3113 . 3114) (nil font-lock-face web-mode-block-delimiter-face 3113 . 3114) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3113 . 3114) (nil rear-nonsticky t 3112 . 3113) (nil block-side t 3112 . 3113) (nil face (rainbow-delimiters-depth-3-face) 3112 . 3113) (nil block-side t 3110 . 3112) (nil block-side t 3109 . 3110) (nil face web-mode-variable-name-face 3109 . 3110) (nil block-side t 3108 . 3109) (nil face web-mode-variable-name-face 3108 . 3109) (nil block-side t 3107 . 3108) (nil face web-mode-variable-name-face 3107 . 3108) (nil block-side t 3106 . 3107) (nil face web-mode-variable-name-face 3106 . 3107) (nil block-side t 3105 . 3106) (nil face web-mode-variable-name-face 3105 . 3106) (nil block-side t 3104 . 3105) (nil face web-mode-variable-name-face 3104 . 3105) (nil block-side t 3103 . 3104) (nil face web-mode-variable-name-face 3103 . 3104) (nil block-side t 3102 . 3103) (nil face (rainbow-delimiters-depth-3-face) 3102 . 3103) (nil block-side t 3101 . 3102) (nil block-token delimiter-beg 3101 . 3102) (nil font-lock-face web-mode-block-delimiter-face 3101 . 3102) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3101 . 3102) (nil block-beg 0 3100 . 3101) (nil block-controls 0 3100 . 3101) (nil block-side t 3100 . 3101) (nil block-token delimiter-beg 3100 . 3101) (nil font-lock-face web-mode-block-delimiter-face 3100 . 3101) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3100 . 3101) (nil tag-name "v-icon" 3098 . 3099) (nil tag-type end 3098 . 3099) (nil tag-end t 3098 . 3099) (nil font-lock-face web-mode-html-tag-bracket-face 3098 . 3099) (nil tag-name "v-icon" 3092 . 3098) (nil tag-type end 3092 . 3098) (nil font-lock-face web-mode-html-tag-custom-face 3092 . 3098) (nil tag-name "v-icon" 3091 . 3092) (nil tag-type end 3091 . 3092) (nil font-lock-face web-mode-html-tag-bracket-face 3091 . 3092) (nil tag-name "v-icon" 3090 . 3091) (nil tag-type end 3090 . 3091) (nil tag-beg 22 3090 . 3091) (nil font-lock-face web-mode-html-tag-bracket-face 3090 . 3091) (nil tag-name "v-icon" 3073 . 3074) (nil tag-type start 3073 . 3074) (nil tag-end t 3073 . 3074) (nil font-lock-face web-mode-html-tag-bracket-face 3073 . 3074) (nil tag-attr t 3072 . 3073) (nil tag-attr-end 5 3072 . 3073) (nil tag-name "v-icon" 3072 . 3073) (nil tag-type start 3072 . 3073) (nil font-lock-face web-mode-html-attr-value-face 3072 . 3073) (nil rear-nonsticky t 3071 . 3072) (nil tag-attr t 3071 . 3072) (nil tag-name "v-icon" 3071 . 3072) (nil tag-type start 3071 . 3072) (nil font-lock-face web-mode-html-attr-value-face 3071 . 3072) (nil tag-attr t 3062 . 3071) (nil tag-name "v-icon" 3062 . 3071) (nil tag-type start 3062 . 3071) (nil font-lock-face web-mode-html-attr-value-face 3062 . 3071) (nil tag-attr t 3061 . 3062) (nil tag-name "v-icon" 3061 . 3062) (nil tag-type start 3061 . 3062) (nil font-lock-face web-mode-html-attr-value-face 3061 . 3062) (nil tag-attr t 3060 . 3061) (nil tag-name "v-icon" 3060 . 3061) (nil tag-type start 3060 . 3061) (nil font-lock-face web-mode-html-attr-equal-face 3060 . 3061) (nil tag-attr t 3059 . 3060) (nil tag-name "v-icon" 3059 . 3060) (nil tag-type start 3059 . 3060) (nil font-lock-face web-mode-html-attr-name-face 3059 . 3060) (nil tag-attr t 3058 . 3059) (nil tag-name "v-icon" 3058 . 3059) (nil tag-type start 3058 . 3059) (nil font-lock-face web-mode-html-attr-name-face 3058 . 3059) (nil tag-attr t 3057 . 3058) (nil tag-name "v-icon" 3057 . 3058) (nil tag-type start 3057 . 3058) (nil font-lock-face web-mode-html-attr-name-face 3057 . 3058) (nil tag-attr t 3056 . 3057) (nil tag-name "v-icon" 3056 . 3057) (nil tag-type start 3056 . 3057) (nil font-lock-face web-mode-html-attr-name-face 3056 . 3057) (nil tag-attr-beg 0 3055 . 3056) (nil tag-attr t 3055 . 3056) (nil tag-name "v-icon" 3055 . 3056) (nil tag-type start 3055 . 3056) (nil font-lock-face web-mode-html-attr-name-face 3055 . 3056) (nil tag-name "v-icon" 3054 . 3055) (nil tag-type start 3054 . 3055) (nil tag-name "v-icon" 3048 . 3054) (nil tag-type start 3048 . 3054) (nil font-lock-face web-mode-html-tag-custom-face 3048 . 3054) (nil tag-name "v-icon" 3047 . 3048) (nil tag-type start 3047 . 3048) (nil tag-beg 19 3047 . 3048) (nil font-lock-face web-mode-html-tag-bracket-face 3047 . 3048) (3047 . 3142)) ((#("<v-icon class=\"tablestats\">mdi-table-column</v-icon> {{(cursorX+1)}} / {{(startP + cursorY+1)}}" 0 1 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1 7 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 7 8 (tag-name "v-icon" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 15 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 15 24 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 45 51 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 51 52 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 54 55 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (block-side t face (rainbow-delimiters-depth-3-face)) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 65 (block-side t) 65 66 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 66 67 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 67 68 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 71 72 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 72 73 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 73 74 (block-side t face (rainbow-delimiters-depth-3-face)) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t face web-mode-variable-name-face) 76 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face web-mode-variable-name-face) 79 80 (block-side t face web-mode-variable-name-face) 80 83 (block-side t) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 88 (block-side t face web-mode-variable-name-face) 88 89 (block-side t face web-mode-variable-name-face) 89 90 (block-side t face web-mode-variable-name-face) 90 92 (block-side t) 92 93 (block-side t face (rainbow-delimiters-depth-3-face)) 93 94 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 94 95 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3047) (undo-tree-id403 . -95) (undo-tree-id404 . -95) (undo-tree-id405 . -95) (undo-tree-id406 . -95) (undo-tree-id407 . -95) (undo-tree-id408 . -95) (undo-tree-id409 . -95) (undo-tree-id410 . -95) (nil tag-name "v-icon" 3047 . 3048) (nil tag-name "v-icon" 3048 . 3054) (nil tag-name "v-icon" 3054 . 3055) (nil tag-name "v-icon" 3055 . 3056) (nil tag-name "v-icon" 3056 . 3057) (nil tag-name "v-icon" 3057 . 3058) (nil tag-name "v-icon" 3058 . 3059) (nil tag-name "v-icon" 3059 . 3060) (nil tag-name "v-icon" 3060 . 3061) (nil tag-name "v-icon" 3061 . 3062) (nil tag-name "v-icon" 3062 . 3071) (nil tag-name "v-icon" 3071 . 3072) (nil rear-nonsticky nil 3071 . 3072) (nil tag-name "v-icon" 3072 . 3073) (nil tag-name "v-icon" 3073 . 3074) (nil tag-name "v-icon" 3090 . 3091) (nil tag-name "v-icon" 3091 . 3092) (nil tag-name "v-icon" 3092 . 3098) (nil tag-name "v-icon" 3098 . 3099) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3100 . 3101) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3101 . 3102) (nil face (rainbow-delimiters-depth-3-face) 3102 . 3103) (nil face (rainbow-delimiters-depth-3-face) 3112 . 3113) (nil rear-nonsticky nil 3112 . 3113) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3113 . 3114) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3114 . 3115) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3118 . 3119) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3119 . 3120) (nil face (rainbow-delimiters-depth-3-face) 3120 . 3121) (nil face (rainbow-delimiters-depth-3-face) 3139 . 3140) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3140 . 3141) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3141 . 3142) (nil rear-nonsticky nil 3141 . 3142) (nil rear-nonsticky t 3141 . 3142)) (25451 27937 435477 42000) 0 nil])
([nil nil ((#("
                  </p>" 19 20 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 22 23 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3675) (undo-tree-id442 . -23) (undo-tree-id443 . -1) (undo-tree-id444 . -23)) nil (25451 27960 353636 279000) 0 nil])
([nil nil ((3142 . 3157)) (("
              " . 3142) (undo-tree-id361 . -15) (undo-tree-id362 . -15) (undo-tree-id363 . -1) (undo-tree-id364 . -15) (undo-tree-id365 . -15) (undo-tree-id366 . -15) (undo-tree-id367 . -15) (undo-tree-id368 . -15) (undo-tree-id369 . -15) (undo-tree-id370 . -15) (undo-tree-id371 . -15) (undo-tree-id372 . -15) (undo-tree-id373 . -15) (undo-tree-id374 . -15) (undo-tree-id375 . -15) (undo-tree-id376 . -15) (undo-tree-id377 . -15) (undo-tree-id378 . -15) (undo-tree-id379 . -15) (undo-tree-id380 . -15) (undo-tree-id381 . -15) (undo-tree-id382 . -15) (undo-tree-id383 . -15) (undo-tree-id384 . -15) (undo-tree-id385 . -15) (undo-tree-id386 . -15) (undo-tree-id387 . -15) (undo-tree-id388 . -15) (undo-tree-id389 . -15) (undo-tree-id390 . -15) (undo-tree-id391 . -15) (undo-tree-id392 . -15) (undo-tree-id393 . -15) (undo-tree-id394 . -15) (undo-tree-id395 . -15) (undo-tree-id396 . -15) (undo-tree-id397 . -15) (undo-tree-id398 . -15) (undo-tree-id399 . -1) (undo-tree-id400 . -15) (undo-tree-id401 . -15) (undo-tree-id402 . -15)) (25451 27937 332944 235000) 0 nil])
([nil nil ((#("{{ dataTSize }}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2 3 (block-side t) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (rear-nonsticky t block-side t face web-mode-variable-name-face) 12 13 (block-side t) 13 14 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 14 15 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3210) (undo-tree-id556 . -15) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -3) (undo-tree-id560 . -15) (t 25451 27960 362072 624000)) nil (25451 27993 756132 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3251 . 3252) (nil rear-nonsticky t 3251 . 3252) (nil block-side t 3251 . 3252) (nil block-end t 3251 . 3252) (nil block-token delimiter-end 3251 . 3252) (nil font-lock-face web-mode-block-delimiter-face 3251 . 3252) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3251 . 3252) (nil block-side t 3250 . 3251) (nil block-token delimiter-end 3250 . 3251) (nil font-lock-face web-mode-block-delimiter-face 3250 . 3251) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3250 . 3251) (nil block-side t 3249 . 3250) (nil face (rainbow-delimiters-depth-3-face) 3249 . 3250) (nil block-side t 3247 . 3249) (nil block-side t 3246 . 3247) (nil face web-mode-variable-name-face 3246 . 3247) (nil block-side t 3245 . 3246) (nil face web-mode-variable-name-face 3245 . 3246) (nil block-side t 3244 . 3245) (nil face web-mode-variable-name-face 3244 . 3245) (nil block-side t 3243 . 3244) (nil face web-mode-variable-name-face 3243 . 3244) (nil block-side t 3242 . 3243) (nil face web-mode-variable-name-face 3242 . 3243) (nil block-side t 3241 . 3242) (nil face web-mode-variable-name-face 3241 . 3242) (nil block-side t 3240 . 3241) (nil face web-mode-variable-name-face 3240 . 3241) (nil block-side t 3237 . 3240) (nil block-side t 3236 . 3237) (nil face web-mode-variable-name-face 3236 . 3237) (nil block-side t 3235 . 3236) (nil face web-mode-variable-name-face 3235 . 3236) (nil block-side t 3234 . 3235) (nil face web-mode-variable-name-face 3234 . 3235) (nil block-side t 3233 . 3234) (nil face web-mode-variable-name-face 3233 . 3234) (nil block-side t 3232 . 3233) (nil face web-mode-variable-name-face 3232 . 3233) (nil block-side t 3231 . 3232) (nil face web-mode-variable-name-face 3231 . 3232) (nil block-side t 3230 . 3231) (nil face (rainbow-delimiters-depth-3-face) 3230 . 3231) (nil block-side t 3229 . 3230) (nil block-token delimiter-beg 3229 . 3230) (nil font-lock-face web-mode-block-delimiter-face 3229 . 3230) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3229 . 3230) (nil block-beg 0 3228 . 3229) (nil block-controls 0 3228 . 3229) (nil block-side t 3228 . 3229) (nil block-token delimiter-beg 3228 . 3229) (nil font-lock-face web-mode-block-delimiter-face 3228 . 3229) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3228 . 3229) (nil block-side t 3224 . 3225) (nil block-end t 3224 . 3225) (nil block-token delimiter-end 3224 . 3225) (nil font-lock-face web-mode-block-delimiter-face 3224 . 3225) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3224 . 3225) (nil block-side t 3223 . 3224) (nil block-token delimiter-end 3223 . 3224) (nil font-lock-face web-mode-block-delimiter-face 3223 . 3224) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3223 . 3224) (nil rear-nonsticky t 3222 . 3223) (nil block-side t 3222 . 3223) (nil face (rainbow-delimiters-depth-3-face) 3222 . 3223) (nil block-side t 3220 . 3222) (nil block-side t 3219 . 3220) (nil face web-mode-variable-name-face 3219 . 3220) (nil block-side t 3218 . 3219) (nil face web-mode-variable-name-face 3218 . 3219) (nil block-side t 3217 . 3218) (nil face web-mode-variable-name-face 3217 . 3218) (nil block-side t 3216 . 3217) (nil face web-mode-variable-name-face 3216 . 3217) (nil block-side t 3215 . 3216) (nil face web-mode-variable-name-face 3215 . 3216) (nil block-side t 3214 . 3215) (nil face web-mode-variable-name-face 3214 . 3215) (nil block-side t 3213 . 3214) (nil face web-mode-variable-name-face 3213 . 3214) (nil block-side t 3212 . 3213) (nil face (rainbow-delimiters-depth-3-face) 3212 . 3213) (nil block-side t 3211 . 3212) (nil block-token delimiter-beg 3211 . 3212) (nil font-lock-face web-mode-block-delimiter-face 3211 . 3212) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3211 . 3212) (nil block-beg 0 3210 . 3211) (nil block-controls 0 3210 . 3211) (nil block-side t 3210 . 3211) (nil block-token delimiter-beg 3210 . 3211) (nil font-lock-face web-mode-block-delimiter-face 3210 . 3211) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3210 . 3211) (nil tag-name "v-icon" 3208 . 3209) (nil tag-type end 3208 . 3209) (nil tag-end t 3208 . 3209) (nil font-lock-face web-mode-html-tag-bracket-face 3208 . 3209) (nil tag-name "v-icon" 3202 . 3208) (nil tag-type end 3202 . 3208) (nil font-lock-face web-mode-html-tag-custom-face 3202 . 3208) (nil tag-name "v-icon" 3201 . 3202) (nil tag-type end 3201 . 3202) (nil font-lock-face web-mode-html-tag-bracket-face 3201 . 3202) (nil tag-name "v-icon" 3200 . 3201) (nil tag-type end 3200 . 3201) (nil tag-beg 22 3200 . 3201) (nil font-lock-face web-mode-html-tag-bracket-face 3200 . 3201) (nil tag-name "v-icon" 3183 . 3184) (nil tag-type start 3183 . 3184) (nil tag-end t 3183 . 3184) (nil font-lock-face web-mode-html-tag-bracket-face 3183 . 3184) (nil tag-attr t 3182 . 3183) (nil tag-attr-end 5 3182 . 3183) (nil tag-name "v-icon" 3182 . 3183) (nil tag-type start 3182 . 3183) (nil font-lock-face web-mode-html-attr-value-face 3182 . 3183) (nil rear-nonsticky t 3181 . 3182) (nil tag-attr t 3181 . 3182) (nil tag-name "v-icon" 3181 . 3182) (nil tag-type start 3181 . 3182) (nil font-lock-face web-mode-html-attr-value-face 3181 . 3182) (nil tag-attr t 3172 . 3181) (nil tag-name "v-icon" 3172 . 3181) (nil tag-type start 3172 . 3181) (nil font-lock-face web-mode-html-attr-value-face 3172 . 3181) (nil tag-attr t 3171 . 3172) (nil tag-name "v-icon" 3171 . 3172) (nil tag-type start 3171 . 3172) (nil font-lock-face web-mode-html-attr-value-face 3171 . 3172) (nil tag-attr t 3170 . 3171) (nil tag-name "v-icon" 3170 . 3171) (nil tag-type start 3170 . 3171) (nil font-lock-face web-mode-html-attr-equal-face 3170 . 3171) (nil tag-attr t 3169 . 3170) (nil tag-name "v-icon" 3169 . 3170) (nil tag-type start 3169 . 3170) (nil font-lock-face web-mode-html-attr-name-face 3169 . 3170) (nil tag-attr t 3168 . 3169) (nil tag-name "v-icon" 3168 . 3169) (nil tag-type start 3168 . 3169) (nil font-lock-face web-mode-html-attr-name-face 3168 . 3169) (nil tag-attr t 3167 . 3168) (nil tag-name "v-icon" 3167 . 3168) (nil tag-type start 3167 . 3168) (nil font-lock-face web-mode-html-attr-name-face 3167 . 3168) (nil tag-attr t 3166 . 3167) (nil tag-name "v-icon" 3166 . 3167) (nil tag-type start 3166 . 3167) (nil font-lock-face web-mode-html-attr-name-face 3166 . 3167) (nil tag-attr-beg 0 3165 . 3166) (nil tag-attr t 3165 . 3166) (nil tag-name "v-icon" 3165 . 3166) (nil tag-type start 3165 . 3166) (nil font-lock-face web-mode-html-attr-name-face 3165 . 3166) (nil tag-name "v-icon" 3164 . 3165) (nil tag-type start 3164 . 3165) (nil tag-name "v-icon" 3158 . 3164) (nil tag-type start 3158 . 3164) (nil font-lock-face web-mode-html-tag-custom-face 3158 . 3164) (nil tag-name "v-icon" 3157 . 3158) (nil tag-type start 3157 . 3158) (nil tag-beg 19 3157 . 3158) (nil font-lock-face web-mode-html-tag-bracket-face 3157 . 3158) (3157 . 3252)) ((#("<v-icon class=\"tablestats\">mdi-table-column</v-icon> {{(cursorX+1)}} / {{(startP + cursorY+1)}}" 0 1 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1 7 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 7 8 (tag-name "v-icon" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 15 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 15 24 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 45 51 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 51 52 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 54 55 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (block-side t face (rainbow-delimiters-depth-3-face)) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 65 (block-side t) 65 66 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 66 67 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 67 68 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 71 72 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 72 73 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 73 74 (block-side t face (rainbow-delimiters-depth-3-face)) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t face web-mode-variable-name-face) 76 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face web-mode-variable-name-face) 79 80 (block-side t face web-mode-variable-name-face) 80 83 (block-side t) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 88 (block-side t face web-mode-variable-name-face) 88 89 (block-side t face web-mode-variable-name-face) 89 90 (block-side t face web-mode-variable-name-face) 90 92 (block-side t) 92 93 (block-side t face (rainbow-delimiters-depth-3-face)) 93 94 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 94 95 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3157) (undo-tree-id325 . -95) (undo-tree-id326 . -95) (undo-tree-id327 . -95) (undo-tree-id328 . -95) (undo-tree-id329 . -95) (undo-tree-id330 . -95) (undo-tree-id331 . -95) (undo-tree-id332 . -95) (undo-tree-id333 . -95) (undo-tree-id334 . -95) (undo-tree-id335 . -95) (undo-tree-id336 . -95) (undo-tree-id337 . -95) (undo-tree-id338 . -95) (undo-tree-id339 . -95) (undo-tree-id340 . -95) (undo-tree-id341 . -95) (undo-tree-id342 . -95) (undo-tree-id343 . -95) (undo-tree-id344 . -95) (undo-tree-id345 . -95) (undo-tree-id346 . -95) (undo-tree-id347 . -95) (undo-tree-id348 . -95) (undo-tree-id349 . -95) (undo-tree-id350 . -95) (undo-tree-id351 . -95) (undo-tree-id352 . -95) (undo-tree-id353 . -95) (undo-tree-id354 . -95) (undo-tree-id355 . -95) (undo-tree-id356 . -95) (undo-tree-id357 . -95) (undo-tree-id358 . -95) (undo-tree-id359 . -95) (undo-tree-id360 . -95) (nil tag-name "v-icon" 3157 . 3158) (nil tag-name "v-icon" 3158 . 3164) (nil tag-name "v-icon" 3164 . 3165) (nil tag-name "v-icon" 3165 . 3166) (nil tag-name "v-icon" 3166 . 3167) (nil tag-name "v-icon" 3167 . 3168) (nil tag-name "v-icon" 3168 . 3169) (nil tag-name "v-icon" 3169 . 3170) (nil tag-name "v-icon" 3170 . 3171) (nil tag-name "v-icon" 3171 . 3172) (nil tag-name "v-icon" 3172 . 3181) (nil tag-name "v-icon" 3181 . 3182) (nil rear-nonsticky nil 3181 . 3182) (nil tag-name "v-icon" 3182 . 3183) (nil tag-name "v-icon" 3183 . 3184) (nil tag-name "v-icon" 3200 . 3201) (nil tag-name "v-icon" 3201 . 3202) (nil tag-name "v-icon" 3202 . 3208) (nil tag-name "v-icon" 3208 . 3209) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3210 . 3211) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3211 . 3212) (nil face (rainbow-delimiters-depth-3-face) 3212 . 3213) (nil face (rainbow-delimiters-depth-3-face) 3222 . 3223) (nil rear-nonsticky nil 3222 . 3223) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3223 . 3224) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3224 . 3225) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3228 . 3229) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3229 . 3230) (nil face (rainbow-delimiters-depth-3-face) 3230 . 3231) (nil face (rainbow-delimiters-depth-3-face) 3249 . 3250) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3250 . 3251) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3251 . 3252) (nil rear-nonsticky nil 3251 . 3252) (nil rear-nonsticky t 3251 . 3252)) (25451 27937 106242 255000) 0 nil])
([nil nil (("
" . -3189) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (" " . -3190) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (" " . -3191) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (" " . -3192) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (" " . -3193) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (" " . -3194) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (" " . -3195) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (" " . -3196) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (" " . -3197) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (" " . -3198) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (" " . -3199) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (" " . -3200) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (" " . -3201) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (" " . -3202) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (" " . -3203) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (" " . -3204) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (" " . -3205) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (" " . -3206) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (" " . -3207) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (" " . -3208) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (" " . -3209) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) 3210) nil (25451 27993 756116 276000) 0 nil])
([nil nil ((3252 . 3267)) (("
              " . 3252) (undo-tree-id294 . -15) (undo-tree-id295 . -15) (undo-tree-id296 . -1) (undo-tree-id297 . -15) (undo-tree-id298 . -15) (undo-tree-id299 . -15) (undo-tree-id300 . -15) (undo-tree-id301 . -15) (undo-tree-id302 . -15) (undo-tree-id303 . -15) (undo-tree-id304 . -15) (undo-tree-id305 . -15) (undo-tree-id306 . -15) (undo-tree-id307 . -15) (undo-tree-id308 . -15) (undo-tree-id309 . -15) (undo-tree-id310 . -15) (undo-tree-id311 . -15) (undo-tree-id312 . -15) (undo-tree-id313 . -15) (undo-tree-id314 . -15) (undo-tree-id315 . -15) (undo-tree-id316 . -15) (undo-tree-id317 . -1) (undo-tree-id318 . -15) (undo-tree-id319 . -15) (undo-tree-id320 . -15) (undo-tree-id321 . -15) (undo-tree-id322 . -15) (undo-tree-id323 . -15) (undo-tree-id324 . -15)) (25451 27936 931626 381000) 0 nil])
([nil nil ((3099 . 3100)) nil (25451 27993 755976 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3361 . 3362) (nil rear-nonsticky t 3361 . 3362) (nil block-side t 3361 . 3362) (nil block-end t 3361 . 3362) (nil block-token delimiter-end 3361 . 3362) (nil font-lock-face web-mode-block-delimiter-face 3361 . 3362) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3361 . 3362) (nil block-side t 3360 . 3361) (nil block-token delimiter-end 3360 . 3361) (nil font-lock-face web-mode-block-delimiter-face 3360 . 3361) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3360 . 3361) (nil block-side t 3359 . 3360) (nil face (rainbow-delimiters-depth-3-face) 3359 . 3360) (nil block-side t 3357 . 3359) (nil block-side t 3356 . 3357) (nil face web-mode-variable-name-face 3356 . 3357) (nil block-side t 3355 . 3356) (nil face web-mode-variable-name-face 3355 . 3356) (nil block-side t 3354 . 3355) (nil face web-mode-variable-name-face 3354 . 3355) (nil block-side t 3353 . 3354) (nil face web-mode-variable-name-face 3353 . 3354) (nil block-side t 3352 . 3353) (nil face web-mode-variable-name-face 3352 . 3353) (nil block-side t 3351 . 3352) (nil face web-mode-variable-name-face 3351 . 3352) (nil block-side t 3350 . 3351) (nil face web-mode-variable-name-face 3350 . 3351) (nil block-side t 3347 . 3350) (nil block-side t 3346 . 3347) (nil face web-mode-variable-name-face 3346 . 3347) (nil block-side t 3345 . 3346) (nil face web-mode-variable-name-face 3345 . 3346) (nil block-side t 3344 . 3345) (nil face web-mode-variable-name-face 3344 . 3345) (nil block-side t 3343 . 3344) (nil face web-mode-variable-name-face 3343 . 3344) (nil block-side t 3342 . 3343) (nil face web-mode-variable-name-face 3342 . 3343) (nil block-side t 3341 . 3342) (nil face web-mode-variable-name-face 3341 . 3342) (nil block-side t 3340 . 3341) (nil face (rainbow-delimiters-depth-3-face) 3340 . 3341) (nil block-side t 3339 . 3340) (nil block-token delimiter-beg 3339 . 3340) (nil font-lock-face web-mode-block-delimiter-face 3339 . 3340) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3339 . 3340) (nil block-beg 0 3338 . 3339) (nil block-controls 0 3338 . 3339) (nil block-side t 3338 . 3339) (nil block-token delimiter-beg 3338 . 3339) (nil font-lock-face web-mode-block-delimiter-face 3338 . 3339) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3338 . 3339) (nil block-side t 3334 . 3335) (nil block-end t 3334 . 3335) (nil block-token delimiter-end 3334 . 3335) (nil font-lock-face web-mode-block-delimiter-face 3334 . 3335) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3334 . 3335) (nil block-side t 3333 . 3334) (nil block-token delimiter-end 3333 . 3334) (nil font-lock-face web-mode-block-delimiter-face 3333 . 3334) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3333 . 3334) (nil rear-nonsticky t 3332 . 3333) (nil block-side t 3332 . 3333) (nil face (rainbow-delimiters-depth-3-face) 3332 . 3333) (nil block-side t 3330 . 3332) (nil block-side t 3329 . 3330) (nil face web-mode-variable-name-face 3329 . 3330) (nil block-side t 3328 . 3329) (nil face web-mode-variable-name-face 3328 . 3329) (nil block-side t 3327 . 3328) (nil face web-mode-variable-name-face 3327 . 3328) (nil block-side t 3326 . 3327) (nil face web-mode-variable-name-face 3326 . 3327) (nil block-side t 3325 . 3326) (nil face web-mode-variable-name-face 3325 . 3326) (nil block-side t 3324 . 3325) (nil face web-mode-variable-name-face 3324 . 3325) (nil block-side t 3323 . 3324) (nil face web-mode-variable-name-face 3323 . 3324) (nil block-side t 3322 . 3323) (nil face (rainbow-delimiters-depth-3-face) 3322 . 3323) (nil block-side t 3321 . 3322) (nil block-token delimiter-beg 3321 . 3322) (nil font-lock-face web-mode-block-delimiter-face 3321 . 3322) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3321 . 3322) (nil block-beg 0 3320 . 3321) (nil block-controls 0 3320 . 3321) (nil block-side t 3320 . 3321) (nil block-token delimiter-beg 3320 . 3321) (nil font-lock-face web-mode-block-delimiter-face 3320 . 3321) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3320 . 3321) (nil tag-name "v-icon" 3318 . 3319) (nil tag-type end 3318 . 3319) (nil tag-end t 3318 . 3319) (nil font-lock-face web-mode-html-tag-bracket-face 3318 . 3319) (nil tag-name "v-icon" 3312 . 3318) (nil tag-type end 3312 . 3318) (nil font-lock-face web-mode-html-tag-custom-face 3312 . 3318) (nil tag-name "v-icon" 3311 . 3312) (nil tag-type end 3311 . 3312) (nil font-lock-face web-mode-html-tag-bracket-face 3311 . 3312) (nil tag-name "v-icon" 3310 . 3311) (nil tag-type end 3310 . 3311) (nil tag-beg 22 3310 . 3311) (nil font-lock-face web-mode-html-tag-bracket-face 3310 . 3311) (nil tag-name "v-icon" 3293 . 3294) (nil tag-type start 3293 . 3294) (nil tag-end t 3293 . 3294) (nil font-lock-face web-mode-html-tag-bracket-face 3293 . 3294) (nil tag-attr t 3292 . 3293) (nil tag-attr-end 5 3292 . 3293) (nil tag-name "v-icon" 3292 . 3293) (nil tag-type start 3292 . 3293) (nil font-lock-face web-mode-html-attr-value-face 3292 . 3293) (nil rear-nonsticky t 3291 . 3292) (nil tag-attr t 3291 . 3292) (nil tag-name "v-icon" 3291 . 3292) (nil tag-type start 3291 . 3292) (nil font-lock-face web-mode-html-attr-value-face 3291 . 3292) (nil tag-attr t 3282 . 3291) (nil tag-name "v-icon" 3282 . 3291) (nil tag-type start 3282 . 3291) (nil font-lock-face web-mode-html-attr-value-face 3282 . 3291) (nil tag-attr t 3281 . 3282) (nil tag-name "v-icon" 3281 . 3282) (nil tag-type start 3281 . 3282) (nil font-lock-face web-mode-html-attr-value-face 3281 . 3282) (nil tag-attr t 3280 . 3281) (nil tag-name "v-icon" 3280 . 3281) (nil tag-type start 3280 . 3281) (nil font-lock-face web-mode-html-attr-equal-face 3280 . 3281) (nil tag-attr t 3279 . 3280) (nil tag-name "v-icon" 3279 . 3280) (nil tag-type start 3279 . 3280) (nil font-lock-face web-mode-html-attr-name-face 3279 . 3280) (nil tag-attr t 3278 . 3279) (nil tag-name "v-icon" 3278 . 3279) (nil tag-type start 3278 . 3279) (nil font-lock-face web-mode-html-attr-name-face 3278 . 3279) (nil tag-attr t 3277 . 3278) (nil tag-name "v-icon" 3277 . 3278) (nil tag-type start 3277 . 3278) (nil font-lock-face web-mode-html-attr-name-face 3277 . 3278) (nil tag-attr t 3276 . 3277) (nil tag-name "v-icon" 3276 . 3277) (nil tag-type start 3276 . 3277) (nil font-lock-face web-mode-html-attr-name-face 3276 . 3277) (nil tag-attr-beg 0 3275 . 3276) (nil tag-attr t 3275 . 3276) (nil tag-name "v-icon" 3275 . 3276) (nil tag-type start 3275 . 3276) (nil font-lock-face web-mode-html-attr-name-face 3275 . 3276) (nil tag-name "v-icon" 3274 . 3275) (nil tag-type start 3274 . 3275) (nil tag-name "v-icon" 3268 . 3274) (nil tag-type start 3268 . 3274) (nil font-lock-face web-mode-html-tag-custom-face 3268 . 3274) (nil tag-name "v-icon" 3267 . 3268) (nil tag-type start 3267 . 3268) (nil tag-beg 19 3267 . 3268) (nil font-lock-face web-mode-html-tag-bracket-face 3267 . 3268) (3267 . 3362)) ((#("<v-icon class=\"tablestats\">mdi-table-column</v-icon> {{(cursorX+1)}} / {{(startP + cursorY+1)}}" 0 1 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1 7 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 7 8 (tag-name "v-icon" tag-type start) 8 9 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 14 15 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 15 24 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 43 44 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 45 51 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 51 52 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 53 54 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 54 55 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (block-side t face (rainbow-delimiters-depth-3-face)) 56 57 (block-side t face web-mode-variable-name-face) 57 58 (block-side t face web-mode-variable-name-face) 58 59 (block-side t face web-mode-variable-name-face) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 65 (block-side t) 65 66 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 66 67 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 67 68 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 71 72 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 72 73 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 73 74 (block-side t face (rainbow-delimiters-depth-3-face)) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t face web-mode-variable-name-face) 76 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t face web-mode-variable-name-face) 79 80 (block-side t face web-mode-variable-name-face) 80 83 (block-side t) 83 84 (block-side t face web-mode-variable-name-face) 84 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t face web-mode-variable-name-face) 86 87 (block-side t face web-mode-variable-name-face) 87 88 (block-side t face web-mode-variable-name-face) 88 89 (block-side t face web-mode-variable-name-face) 89 90 (block-side t face web-mode-variable-name-face) 90 92 (block-side t) 92 93 (block-side t face (rainbow-delimiters-depth-3-face)) 93 94 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 94 95 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3267) (undo-tree-id273 . -95) (undo-tree-id274 . -95) (undo-tree-id275 . -95) (undo-tree-id276 . -95) (undo-tree-id277 . -95) (undo-tree-id278 . -95) (undo-tree-id279 . -95) (undo-tree-id280 . -95) (undo-tree-id281 . -95) (undo-tree-id282 . -95) (undo-tree-id283 . -95) (undo-tree-id284 . -95) (undo-tree-id285 . -95) (undo-tree-id286 . -95) (undo-tree-id287 . -95) (undo-tree-id288 . -95) (undo-tree-id289 . -95) (undo-tree-id290 . -95) (undo-tree-id291 . -95) (undo-tree-id292 . -95) (undo-tree-id293 . -95) (nil tag-name "v-icon" 3267 . 3268) (nil tag-name "v-icon" 3268 . 3274) (nil tag-name "v-icon" 3274 . 3275) (nil tag-name "v-icon" 3275 . 3276) (nil tag-name "v-icon" 3276 . 3277) (nil tag-name "v-icon" 3277 . 3278) (nil tag-name "v-icon" 3278 . 3279) (nil tag-name "v-icon" 3279 . 3280) (nil tag-name "v-icon" 3280 . 3281) (nil tag-name "v-icon" 3281 . 3282) (nil tag-name "v-icon" 3282 . 3291) (nil tag-name "v-icon" 3291 . 3292) (nil rear-nonsticky nil 3291 . 3292) (nil tag-name "v-icon" 3292 . 3293) (nil tag-name "v-icon" 3293 . 3294) (nil tag-name "v-icon" 3310 . 3311) (nil tag-name "v-icon" 3311 . 3312) (nil tag-name "v-icon" 3312 . 3318) (nil tag-name "v-icon" 3318 . 3319) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3320 . 3321) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3321 . 3322) (nil face (rainbow-delimiters-depth-3-face) 3322 . 3323) (nil face (rainbow-delimiters-depth-3-face) 3332 . 3333) (nil rear-nonsticky nil 3332 . 3333) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3333 . 3334) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3334 . 3335) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3338 . 3339) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3339 . 3340) (nil face (rainbow-delimiters-depth-3-face) 3340 . 3341) (nil face (rainbow-delimiters-depth-3-face) 3359 . 3360) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3360 . 3361) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3361 . 3362) (nil rear-nonsticky nil 3361 . 3362) (nil rear-nonsticky t 3361 . 3362) (t 25451 27931 433735 118000)) (25451 27931 423230 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3114 . 3115) (nil block-side t 3114 . 3115) (nil block-end t 3114 . 3115) (nil block-token delimiter-end 3114 . 3115) (nil font-lock-face web-mode-block-delimiter-face 3114 . 3115) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3114 . 3115) (nil block-side t 3113 . 3114) (nil block-token delimiter-end 3113 . 3114) (nil font-lock-face web-mode-block-delimiter-face 3113 . 3114) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3113 . 3114) (nil block-side t 3112 . 3113) (nil rear-nonsticky t 3111 . 3112) (nil block-side t 3111 . 3112) (nil face web-mode-variable-name-face 3111 . 3112) (nil block-side t 3110 . 3111) (nil face web-mode-variable-name-face 3110 . 3111) (nil block-side t 3109 . 3110) (nil face web-mode-variable-name-face 3109 . 3110) (nil block-side t 3108 . 3109) (nil face web-mode-variable-name-face 3108 . 3109) (nil block-side t 3107 . 3108) (nil face web-mode-variable-name-face 3107 . 3108) (nil block-side t 3106 . 3107) (nil face web-mode-variable-name-face 3106 . 3107) (nil block-side t 3105 . 3106) (nil face web-mode-variable-name-face 3105 . 3106) (nil block-side t 3104 . 3105) (nil face web-mode-variable-name-face 3104 . 3105) (nil block-side t 3103 . 3104) (nil face web-mode-variable-name-face 3103 . 3104) (nil block-side t 3102 . 3103) (nil block-side t 3101 . 3102) (nil block-token delimiter-beg 3101 . 3102) (nil font-lock-face web-mode-block-delimiter-face 3101 . 3102) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3101 . 3102) (nil block-beg 0 3100 . 3101) (nil block-controls 0 3100 . 3101) (nil block-side t 3100 . 3101) (nil block-token delimiter-beg 3100 . 3101) (nil font-lock-face web-mode-block-delimiter-face 3100 . 3101) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3100 . 3101) (3100 . 3115)) nil (25451 27993 755967 745000) 0 nil])
nil
([nil nil ((3477 . 3502) (t 25451 27993 770457 432000)) nil (25451 28011 836979 393000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3519 . 3520) (nil tag-attr t 3519 . 3520) (nil tag-attr-end 5 3519 . 3520) (nil tag-name "v-icon" 3519 . 3520) (nil tag-type start 3519 . 3520) (nil font-lock-face web-mode-html-attr-value-face 3519 . 3520) (nil rear-nonsticky t 3518 . 3519) (nil tag-attr t 3518 . 3519) (nil tag-name "v-icon" 3518 . 3519) (nil tag-type start 3518 . 3519) (nil font-lock-face web-mode-html-attr-value-face 3518 . 3519) (nil tag-attr t 3509 . 3518) (nil tag-name "v-icon" 3509 . 3518) (nil tag-type start 3509 . 3518) (nil font-lock-face web-mode-html-attr-value-face 3509 . 3518) (nil tag-attr t 3508 . 3509) (nil tag-name "v-icon" 3508 . 3509) (nil tag-type start 3508 . 3509) (nil font-lock-face web-mode-html-attr-value-face 3508 . 3509) (nil tag-attr t 3507 . 3508) (nil tag-name "v-icon" 3507 . 3508) (nil tag-type start 3507 . 3508) (nil font-lock-face web-mode-html-attr-equal-face 3507 . 3508) (nil tag-attr t 3506 . 3507) (nil tag-name "v-icon" 3506 . 3507) (nil tag-type start 3506 . 3507) (nil font-lock-face web-mode-html-attr-name-face 3506 . 3507) (nil tag-attr t 3505 . 3506) (nil tag-name "v-icon" 3505 . 3506) (nil tag-type start 3505 . 3506) (nil font-lock-face web-mode-html-attr-name-face 3505 . 3506) (nil tag-attr t 3504 . 3505) (nil tag-name "v-icon" 3504 . 3505) (nil tag-type start 3504 . 3505) (nil font-lock-face web-mode-html-attr-name-face 3504 . 3505) (nil tag-attr t 3503 . 3504) (nil tag-name "v-icon" 3503 . 3504) (nil tag-type start 3503 . 3504) (nil font-lock-face web-mode-html-attr-name-face 3503 . 3504) (nil tag-attr-beg 0 3502 . 3503) (nil tag-attr t 3502 . 3503) (nil tag-name "v-icon" 3502 . 3503) (nil tag-type start 3502 . 3503) (nil font-lock-face web-mode-html-attr-name-face 3502 . 3503) (3502 . 3520)) nil (25451 28011 836970 70000) 0 nil])
([nil nil ((3818 . 3833) (t 25451 28011 850663 688000)) nil (25451 28110 393907 851000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3900 . 3901) (nil rear-nonsticky t 3900 . 3901) (nil block-side t 3900 . 3901) (nil block-end t 3900 . 3901) (nil block-token delimiter-end 3900 . 3901) (nil font-lock-face web-mode-block-delimiter-face 3900 . 3901) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3900 . 3901) (nil block-side t 3899 . 3900) (nil block-token delimiter-end 3899 . 3900) (nil font-lock-face web-mode-block-delimiter-face 3899 . 3900) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3899 . 3900) (nil block-side t 3898 . 3899) (nil block-side t 3897 . 3898) (nil face web-mode-variable-name-face 3897 . 3898) (nil block-side t 3896 . 3897) (nil face web-mode-variable-name-face 3896 . 3897) (nil block-side t 3895 . 3896) (nil face web-mode-variable-name-face 3895 . 3896) (nil block-side t 3894 . 3895) (nil face web-mode-variable-name-face 3894 . 3895) (nil block-side t 3893 . 3894) (nil face web-mode-variable-name-face 3893 . 3894) (nil block-side t 3892 . 3893) (nil face web-mode-variable-name-face 3892 . 3893) (nil block-side t 3891 . 3892) (nil face web-mode-variable-name-face 3891 . 3892) (nil block-side t 3890 . 3891) (nil face web-mode-variable-name-face 3890 . 3891) (nil block-side t 3889 . 3890) (nil face web-mode-variable-name-face 3889 . 3890) (nil block-side t 3888 . 3889) (nil block-side t 3887 . 3888) (nil block-token delimiter-beg 3887 . 3888) (nil font-lock-face web-mode-block-delimiter-face 3887 . 3888) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3887 . 3888) (nil block-beg 0 3886 . 3887) (nil block-controls 0 3886 . 3887) (nil block-side t 3886 . 3887) (nil block-token delimiter-beg 3886 . 3887) (nil font-lock-face web-mode-block-delimiter-face 3886 . 3887) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3886 . 3887) (nil tag-name "v-icon" 3884 . 3885) (nil tag-type end 3884 . 3885) (nil tag-end t 3884 . 3885) (nil font-lock-face web-mode-html-tag-bracket-face 3884 . 3885) (nil tag-name "v-icon" 3878 . 3884) (nil tag-type end 3878 . 3884) (nil font-lock-face web-mode-html-tag-custom-face 3878 . 3884) (nil tag-name "v-icon" 3877 . 3878) (nil tag-type end 3877 . 3878) (nil font-lock-face web-mode-html-tag-bracket-face 3877 . 3878) (nil tag-name "v-icon" 3876 . 3877) (nil tag-type end 3876 . 3877) (nil tag-beg 22 3876 . 3877) (nil font-lock-face web-mode-html-tag-bracket-face 3876 . 3877) (nil tag-name "v-icon" 3859 . 3860) (nil tag-type start 3859 . 3860) (nil tag-end t 3859 . 3860) (nil font-lock-face web-mode-html-tag-bracket-face 3859 . 3860) (nil tag-attr t 3858 . 3859) (nil tag-attr-end 5 3858 . 3859) (nil tag-name "v-icon" 3858 . 3859) (nil tag-type start 3858 . 3859) (nil font-lock-face web-mode-html-attr-value-face 3858 . 3859) (nil tag-attr t 3847 . 3858) (nil tag-name "v-icon" 3847 . 3858) (nil tag-type start 3847 . 3858) (nil font-lock-face web-mode-html-attr-value-face 3847 . 3858) (nil tag-attr t 3846 . 3847) (nil tag-name "v-icon" 3846 . 3847) (nil tag-type start 3846 . 3847) (nil font-lock-face web-mode-html-attr-equal-face 3846 . 3847) (nil tag-attr t 3842 . 3846) (nil tag-name "v-icon" 3842 . 3846) (nil tag-type start 3842 . 3846) (nil font-lock-face web-mode-html-attr-name-face 3842 . 3846) (nil tag-attr-beg 0 3841 . 3842) (nil tag-attr t 3841 . 3842) (nil tag-name "v-icon" 3841 . 3842) (nil tag-type start 3841 . 3842) (nil font-lock-face web-mode-html-attr-name-face 3841 . 3842) (nil tag-name "v-icon" 3840 . 3841) (nil tag-type start 3840 . 3841) (nil tag-name "v-icon" 3834 . 3840) (nil tag-type start 3834 . 3840) (nil font-lock-face web-mode-html-tag-custom-face 3834 . 3840) (nil tag-name "v-icon" 3833 . 3834) (nil tag-type start 3833 . 3834) (nil tag-beg 19 3833 . 3834) (nil font-lock-face web-mode-html-tag-bracket-face 3833 . 3834) (3833 . 3901)) nil (25451 28110 393902 411000) 0 nil])
([nil nil ((3903 . 3904) (3887 . 3888) (#("{" 0 1 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . -3887) (3887 . 3888) (3902 . 3903) (#("{" 0 1 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . 3887) (3886 . 3887) (3886 . 3887)) nil (25451 28110 393882 832000) 0 nil])
([nil nil ((#("}" 0 1 (rear-nonsticky t block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . 3888) (undo-tree-id567 . -1) (#("}" 0 1 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . 3888) (#(" " 0 1 (block-side t)) . 3888) (#("e" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("z" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("i" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("S" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("T" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("a" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("a" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#("d" 0 1 (block-side t face web-mode-variable-name-face)) . 3888) (#(" " 0 1 (block-side t)) . 3888) (#("{" 0 1 (block-side t face (rainbow-delimiters-depth-3-face))) . 3888) (#("{" 0 1 (block-side t face (rainbow-delimiters-depth-3-face))) . 3888)) nil (25451 28110 393878 489000) 0 nil])
([nil nil ((3888 . 3892)) nil (25451 28110 393873 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3918 . 3919) (nil block-side t 3918 . 3919) (nil face (rainbow-delimiters-depth-3-face) 3918 . 3919) (nil block-side t 3917 . 3918) (nil face (rainbow-delimiters-depth-3-face) 3917 . 3918) (nil block-side t 3911 . 3917) (nil face web-mode-function-call-face 3911 . 3917) (nil block-side t 3910 . 3911) (nil block-side t 3909 . 3910) (nil face web-mode-variable-name-face 3909 . 3910) (nil block-side t 3908 . 3909) (nil face web-mode-variable-name-face 3908 . 3909) (nil block-side t 3907 . 3908) (nil face web-mode-variable-name-face 3907 . 3908) (nil block-side t 3906 . 3907) (nil face web-mode-variable-name-face 3906 . 3907) (nil block-side t 3895 . 3906) (nil block-side t 3894 . 3895) (nil face web-mode-variable-name-face 3894 . 3895) (nil block-side t 3893 . 3894) (nil face web-mode-variable-name-face 3893 . 3894) (nil block-side t 3892 . 3893) (nil face web-mode-variable-name-face 3892 . 3893) (nil block-side t 3891 . 3892) (nil face web-mode-variable-name-face 3891 . 3892) (nil block-side t 3890 . 3891) (nil face web-mode-variable-name-face 3890 . 3891) (nil block-side t 3889 . 3890) (nil face web-mode-variable-name-face 3889 . 3890) (3889 . 3919)) nil (25451 28110 393870 944000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 3922) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face))) . 3922)) nil (25451 28110 393863 900000) 0 nil])
([nil nil ((#("t" 0 1 (block-side t face web-mode-function-call-face)) . -3906) (undo-tree-id562 . -1) (#("h" 0 1 (block-side t face web-mode-function-call-face)) . -3907) (undo-tree-id563 . -1) (#("i" 0 1 (block-side t face web-mode-function-call-face)) . -3908) (undo-tree-id564 . -1) (#("s" 0 1 (block-side t face web-mode-function-call-face)) . -3909) (undo-tree-id565 . -1) (#("." 0 1 (block-side t)) . -3910) (undo-tree-id566 . -1) 3911) nil (25451 28110 393860 930000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -3905) (undo-tree-id561 . -1) 3906) nil (25451 28110 393848 502000) 0 nil])
([nil nil ((3916 . 3931) (t 25451 28110 407767 784000)) nil (25451 28157 664748 883000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4013 . 4014) (nil block-side t 4013 . 4014) (nil block-end t 4013 . 4014) (nil block-token delimiter-end 4013 . 4014) (nil font-lock-face web-mode-block-delimiter-face 4013 . 4014) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4013 . 4014) (nil block-side t 4012 . 4013) (nil block-token delimiter-end 4012 . 4013) (nil font-lock-face web-mode-block-delimiter-face 4012 . 4013) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4012 . 4013) (nil block-side t 4011 . 4012) (nil rear-nonsticky t 4010 . 4011) (nil block-side t 4010 . 4011) (nil face (rainbow-delimiters-depth-3-face) 4010 . 4011) (nil block-side t 4009 . 4010) (nil face (rainbow-delimiters-depth-3-face) 4009 . 4010) (nil block-side t 4003 . 4009) (nil face web-mode-function-call-face 4003 . 4009) (nil block-side t 3993 . 4003) (nil block-side t 3992 . 3993) (nil face web-mode-variable-name-face 3992 . 3993) (nil block-side t 3991 . 3992) (nil face web-mode-variable-name-face 3991 . 3992) (nil block-side t 3990 . 3991) (nil face web-mode-variable-name-face 3990 . 3991) (nil block-side t 3989 . 3990) (nil face web-mode-variable-name-face 3989 . 3990) (nil block-side t 3988 . 3989) (nil face web-mode-variable-name-face 3988 . 3989) (nil block-side t 3987 . 3988) (nil face web-mode-variable-name-face 3987 . 3988) (nil block-side t 3986 . 3987) (nil block-side t 3985 . 3986) (nil block-token delimiter-beg 3985 . 3986) (nil font-lock-face web-mode-block-delimiter-face 3985 . 3986) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3985 . 3986) (nil block-beg 0 3984 . 3985) (nil block-controls 0 3984 . 3985) (nil block-side t 3984 . 3985) (nil block-token delimiter-beg 3984 . 3985) (nil font-lock-face web-mode-block-delimiter-face 3984 . 3985) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3984 . 3985) (nil tag-name "v-icon" 3982 . 3983) (nil tag-type end 3982 . 3983) (nil tag-end t 3982 . 3983) (nil font-lock-face web-mode-html-tag-bracket-face 3982 . 3983) (nil tag-name "v-icon" 3976 . 3982) (nil tag-type end 3976 . 3982) (nil font-lock-face web-mode-html-tag-custom-face 3976 . 3982) (nil tag-name "v-icon" 3975 . 3976) (nil tag-type end 3975 . 3976) (nil font-lock-face web-mode-html-tag-bracket-face 3975 . 3976) (nil tag-name "v-icon" 3974 . 3975) (nil tag-type end 3974 . 3975) (nil tag-beg 22 3974 . 3975) (nil font-lock-face web-mode-html-tag-bracket-face 3974 . 3975) (nil tag-name "v-icon" 3957 . 3958) (nil tag-type start 3957 . 3958) (nil tag-end t 3957 . 3958) (nil font-lock-face web-mode-html-tag-bracket-face 3957 . 3958) (nil tag-attr t 3956 . 3957) (nil tag-attr-end 5 3956 . 3957) (nil tag-name "v-icon" 3956 . 3957) (nil tag-type start 3956 . 3957) (nil font-lock-face web-mode-html-attr-value-face 3956 . 3957) (nil tag-attr t 3945 . 3956) (nil tag-name "v-icon" 3945 . 3956) (nil tag-type start 3945 . 3956) (nil font-lock-face web-mode-html-attr-value-face 3945 . 3956) (nil tag-attr t 3944 . 3945) (nil tag-name "v-icon" 3944 . 3945) (nil tag-type start 3944 . 3945) (nil font-lock-face web-mode-html-attr-equal-face 3944 . 3945) (nil tag-attr t 3940 . 3944) (nil tag-name "v-icon" 3940 . 3944) (nil tag-type start 3940 . 3944) (nil font-lock-face web-mode-html-attr-name-face 3940 . 3944) (nil tag-attr-beg 0 3939 . 3940) (nil tag-attr t 3939 . 3940) (nil tag-name "v-icon" 3939 . 3940) (nil tag-type start 3939 . 3940) (nil font-lock-face web-mode-html-attr-name-face 3939 . 3940) (nil tag-name "v-icon" 3938 . 3939) (nil tag-type start 3938 . 3939) (nil tag-name "v-icon" 3932 . 3938) (nil tag-type start 3932 . 3938) (nil font-lock-face web-mode-html-tag-custom-face 3932 . 3938) (nil tag-name "v-icon" 3931 . 3932) (nil tag-type start 3931 . 3932) (nil tag-beg 19 3931 . 3932) (nil font-lock-face web-mode-html-tag-bracket-face 3931 . 3932) (3931 . 4014)) nil (25451 28157 664743 300000) 0 nil])
([nil nil ((#("a" 0 1 (block-side t face web-mode-function-call-face)) . 3987) (#("M" 0 1 (block-side t face web-mode-function-call-face)) . 3987) (#("t" 0 1 (block-side t face web-mode-function-call-face)) . 3987) (#("e" 0 1 (block-side t face web-mode-function-call-face)) . 3987) (#("g" 0 1 (block-side t face web-mode-function-call-face)) . 3987) (#(" " 0 1 (block-side t)) . 3987) (#("+" 0 1 (block-side t)) . 3987) (#(" " 0 1 (block-side t)) . 3987) (#("\"" 0 1 (block-side t)) . 3987) (#("-" 0 1 (block-side t)) . 3987) (#("\"" 0 1 (block-side t)) . 3987) (#(" " 0 1 (block-side t)) . 3987) (#("+" 0 1 (block-side t)) . 3987) (#(" " 0 1 (block-side t)) . 3987) (#(" " 0 1 (block-side t)) . 3987) (#("P" 0 1 (block-side t face web-mode-variable-name-face)) . 3987) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . 3987) (#("r" 0 1 (block-side t face web-mode-variable-name-face)) . 3987) (#("a" 0 1 (block-side t face web-mode-variable-name-face)) . 3987) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . 3987) (#("s" 0 1 (block-side t face web-mode-variable-name-face)) . 3987)) nil (25451 28157 664721 67000) 0 nil])
([nil nil ((#(")" 0 1 (block-side t face (rainbow-delimiters-mismatched-face))) . 3987) (#("(" 0 1 (block-side t face (rainbow-delimiters-depth-3-face))) . 3987) (#("x" 0 1 (block-side t face web-mode-function-call-face)) . 3987)) nil (25451 28157 664714 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3997 . 3998) (nil block-side t 3997 . 3998) (nil face web-mode-variable-name-face 3997 . 3998) (nil block-side t 3996 . 3997) (nil face web-mode-variable-name-face 3996 . 3997) (nil block-side t 3995 . 3996) (nil face web-mode-variable-name-face 3995 . 3996) (nil block-side t 3994 . 3995) (nil face web-mode-variable-name-face 3994 . 3995) (nil block-side t 3993 . 3994) (nil face web-mode-variable-name-face 3993 . 3994) (nil block-side t 3992 . 3993) (nil face web-mode-variable-name-face 3992 . 3993) (nil block-side t 3991 . 3992) (nil face web-mode-variable-name-face 3991 . 3992) (nil block-side t 3990 . 3991) (nil face web-mode-variable-name-face 3990 . 3991) (nil block-side t 3989 . 3990) (nil face web-mode-variable-name-face 3989 . 3990) (nil block-side t 3988 . 3989) (nil face web-mode-variable-name-face 3988 . 3989) (nil block-side t 3987 . 3988) (nil face web-mode-variable-name-face 3987 . 3988) (3987 . 3998)) nil (25451 28157 664706 340000) 0 nil])
([nil nil ((5293 . 5306) (#("    " 0 4 (tag-type comment font-lock-face web-mode-comment-face)) . 5293) (5271 . 5284) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 5271) (5183 . 5188) (5145 . 5158) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 5145) (5123 . 5136) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 5123) (5011 . 5016) (4973 . 4986) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 4973) (4951 . 4964) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 4951) (4933 . 4938) (4873 . 4876) (4848 . 4851) (4832 . 4833) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -4812) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4797) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4774) (#("     " 0 5 (tag-type comment font-lock-face web-mode-comment-face)) . -4745) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4730) (#("     " 0 5 (tag-type comment font-lock-face web-mode-comment-face)) . -4711) (#("     " 0 5 (tag-type comment font-lock-face web-mode-comment-face)) . -4692) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4671) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4634) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -4618) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4595) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4567) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -4528) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -4509) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -4440) (4406 . 4407) (4347 . 4350) (4316 . 4321) (4278 . 4291) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 4278) (4256 . 4269) (#("      " 0 6 (tag-type comment font-lock-face web-mode-comment-face)) . 4256) (4146 . 4151) (4118 . 4121) (4066 . 5264) (#("<v-row class=\"pa-0 ma-0\" no-gutters>
          <v-col cols=\"1\">
        <p class=\"caption\">{{$t('AnalysisNetwork.yx', {valueX: (cursorX+1), valueY: (startP + cursorY+1)})}}</p>
      </v-col>
      <v-col cols=\"2\">
        <v-tooltip top>
          <template v-slot:activator=\"{ on, attrs }\">
            <p class=\"caption\">
              {{$t('AnalysisNetwork.mDataSize', {size: dataTSize}) }}
              <span
                class=\"font-weight-light\"
                v-bind=\"attrs\"
                v-on=\"on\"
              >(
                {{\" \" + getDataDiff()}}
                <v-icon
                  small
                  dense
                >
                  mdi-information
                </v-icon>
                )
              </span>
            </p>
          </template>
          <span> {{$t('AnalysisNetwork.dataDiff')}}</span>
        </v-tooltip>
      </v-col>
      <v-col cols=\"2\">
        <p class=\"caption\">{{$t('AnalysisNetwork.currentSubset', {value: + startP  + \"-\" +  this.getMax() })}}</p>
      </v-col>
      <v-col cols=\"5\">
        <p class=\"caption\">{{$t('AnalysisNetwork.cursorValue', {value: cursorvalue})}}</p>
      </v-col>
    </v-row>" 0 1 (tag-name "v-row" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1 6 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 6 7 (tag-name "v-row" tag-type start) 7 8 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 8 12 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 13 23 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-name "v-row" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 26 34 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 34 35 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 35 36 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 47 48 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 48 53 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 53 54 (tag-name "v-col" tag-type start) 54 55 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 55 58 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 58 59 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 59 61 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 61 62 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 62 63 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 73 74 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 74 75 (tag-name "p" tag-type start) 75 76 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 76 80 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 80 81 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 81 89 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 89 90 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 90 91 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 91 92 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 92 93 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 93 94 (block-side t) 94 95 (block-side t face web-mode-variable-name-face) 95 96 (block-side t face (rainbow-delimiters-depth-3-face)) 96 97 (block-side t) 97 98 (block-side t face web-mode-variable-name-face) 98 99 (block-side t face web-mode-variable-name-face) 99 100 (block-side t face web-mode-variable-name-face) 100 101 (block-side t face web-mode-variable-name-face) 101 102 (block-side t face web-mode-variable-name-face) 102 103 (block-side t face web-mode-variable-name-face) 103 104 (block-side t face web-mode-variable-name-face) 104 105 (block-side t face web-mode-variable-name-face) 105 106 (block-side t face web-mode-variable-name-face) 106 107 (block-side t face web-mode-variable-name-face) 107 108 (block-side t face web-mode-variable-name-face) 108 109 (block-side t face web-mode-variable-name-face) 109 110 (block-side t face web-mode-variable-name-face) 110 111 (block-side t face web-mode-variable-name-face) 111 112 (block-side t face web-mode-variable-name-face) 112 113 (block-side t) 113 114 (block-side t face web-mode-variable-name-face) 114 115 (block-side t face web-mode-variable-name-face) 115 118 (block-side t) 118 119 (block-side t face (rainbow-delimiters-depth-4-face)) 119 120 (block-side t face web-mode-variable-name-face) 120 121 (block-side t face web-mode-variable-name-face) 121 122 (block-side t face web-mode-variable-name-face) 122 123 (block-side t face web-mode-variable-name-face) 123 124 (block-side t face web-mode-variable-name-face) 124 125 (block-side t face web-mode-variable-name-face) 125 127 (block-side t) 127 128 (block-side t face (rainbow-delimiters-depth-5-face)) 128 129 (block-side t face web-mode-variable-name-face) 129 130 (block-side t face web-mode-variable-name-face) 130 131 (block-side t face web-mode-variable-name-face) 131 132 (block-side t face web-mode-variable-name-face) 132 133 (block-side t face web-mode-variable-name-face) 133 134 (block-side t face web-mode-variable-name-face) 134 135 (block-side t face web-mode-variable-name-face) 135 137 (block-side t) 137 138 (block-side t face (rainbow-delimiters-depth-5-face)) 138 140 (block-side t) 140 141 (block-side t face web-mode-variable-name-face) 141 142 (block-side t face web-mode-variable-name-face) 142 143 (block-side t face web-mode-variable-name-face) 143 144 (block-side t face web-mode-variable-name-face) 144 145 (block-side t face web-mode-variable-name-face) 145 146 (block-side t face web-mode-variable-name-face) 146 148 (block-side t) 148 149 (block-side t face (rainbow-delimiters-depth-5-face)) 149 150 (block-side t face web-mode-variable-name-face) 150 151 (block-side t face web-mode-variable-name-face) 151 152 (block-side t face web-mode-variable-name-face) 152 153 (block-side t face web-mode-variable-name-face) 153 154 (block-side t face web-mode-variable-name-face) 154 155 (block-side t face web-mode-variable-name-face) 155 158 (block-side t) 158 159 (block-side t face web-mode-variable-name-face) 159 160 (block-side t face web-mode-variable-name-face) 160 161 (block-side t face web-mode-variable-name-face) 161 162 (block-side t face web-mode-variable-name-face) 162 163 (block-side t face web-mode-variable-name-face) 163 164 (block-side t face web-mode-variable-name-face) 164 165 (block-side t face web-mode-variable-name-face) 165 167 (block-side t) 167 168 (block-side t face (rainbow-delimiters-depth-5-face)) 168 169 (block-side t face (rainbow-delimiters-depth-4-face)) 169 170 (block-side t face (rainbow-delimiters-depth-3-face)) 170 171 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 171 172 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 172 173 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 173 174 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 174 175 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 175 176 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 183 184 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 184 185 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 185 190 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 190 191 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 198 199 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 199 204 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 204 205 (tag-name "v-col" tag-type start) 205 206 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 206 209 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 209 210 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 210 212 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 212 213 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 213 214 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 223 224 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 224 233 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 233 234 (tag-name "v-tooltip" tag-type start) 234 235 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 235 236 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 236 237 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 237 238 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 249 250 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 250 258 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 258 259 (tag-name "template" tag-type start) 259 260 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 260 265 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 265 266 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 266 267 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 267 268 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 268 269 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 269 270 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 270 271 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 271 272 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 272 273 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 273 274 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 274 275 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 275 276 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 276 277 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 277 279 (block-side t tag-attr t tag-name "template" tag-type start) 279 280 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 280 281 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 281 283 (block-side t tag-attr t tag-name "template" tag-type start) 283 284 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 284 285 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 285 286 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 286 287 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 287 288 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 288 290 (block-side t tag-attr t tag-name "template" tag-type start) 290 291 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 291 292 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 305 306 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 306 307 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 307 308 (tag-name "p" tag-type start) 308 309 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 309 313 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 313 314 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 314 322 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 322 323 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 323 324 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 339 340 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 340 341 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 341 342 (block-side t) 342 343 (block-side t face web-mode-variable-name-face) 343 344 (block-side t face (rainbow-delimiters-depth-3-face)) 344 345 (block-side t) 345 346 (block-side t face web-mode-variable-name-face) 346 347 (block-side t face web-mode-variable-name-face) 347 348 (block-side t face web-mode-variable-name-face) 348 349 (block-side t face web-mode-variable-name-face) 349 350 (block-side t face web-mode-variable-name-face) 350 351 (block-side t face web-mode-variable-name-face) 351 352 (block-side t face web-mode-variable-name-face) 352 353 (block-side t face web-mode-variable-name-face) 353 354 (block-side t face web-mode-variable-name-face) 354 355 (block-side t face web-mode-variable-name-face) 355 356 (block-side t face web-mode-variable-name-face) 356 357 (block-side t face web-mode-variable-name-face) 357 358 (block-side t face web-mode-variable-name-face) 358 359 (block-side t face web-mode-variable-name-face) 359 360 (block-side t face web-mode-variable-name-face) 360 361 (block-side t) 361 362 (block-side t face web-mode-variable-name-face) 362 363 (block-side t face web-mode-variable-name-face) 363 364 (block-side t face web-mode-variable-name-face) 364 365 (block-side t face web-mode-variable-name-face) 365 366 (block-side t face web-mode-variable-name-face) 366 367 (block-side t face web-mode-variable-name-face) 367 368 (block-side t face web-mode-variable-name-face) 368 369 (block-side t face web-mode-variable-name-face) 369 370 (block-side t face web-mode-variable-name-face) 370 373 (block-side t) 373 374 (block-side t face (rainbow-delimiters-depth-4-face)) 374 375 (block-side t face web-mode-variable-name-face) 375 376 (block-side t face web-mode-variable-name-face) 376 377 (block-side t face web-mode-variable-name-face) 377 378 (block-side t face web-mode-variable-name-face) 378 380 (block-side t) 380 381 (block-side t face web-mode-variable-name-face) 381 382 (block-side t face web-mode-variable-name-face) 382 383 (block-side t face web-mode-variable-name-face) 383 384 (block-side t face web-mode-variable-name-face) 384 385 (block-side t face web-mode-variable-name-face) 385 386 (block-side t face web-mode-variable-name-face) 386 387 (block-side t face web-mode-variable-name-face) 387 388 (block-side t face web-mode-variable-name-face) 388 389 (block-side t face web-mode-variable-name-face) 389 390 (block-side t face (rainbow-delimiters-depth-4-face)) 390 391 (block-side t face (rainbow-delimiters-depth-3-face)) 391 392 (block-side t) 392 393 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 393 394 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 409 410 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 410 414 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 414 431 (tag-name "span" tag-type start) 431 432 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 432 436 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 436 437 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 437 455 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 455 456 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 456 473 (tag-name "span" tag-type start) 473 474 (tag-attr-beg 2 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 474 479 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 479 480 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 480 486 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 486 487 (tag-attr t tag-attr-end 6 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 487 504 (tag-name "span" tag-type start) 504 505 (tag-attr-beg 2 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 505 508 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 508 509 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 509 512 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 512 513 (tag-attr t tag-attr-end 4 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 513 528 (tag-name "span" tag-type start) 528 529 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 529 530 (face (rainbow-delimiters-depth-1-face)) 547 548 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 548 549 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face)) 549 555 (block-side t) 555 566 (block-side t face web-mode-function-call-face) 566 567 (block-side t face (rainbow-delimiters-depth-4-face)) 567 568 (block-side t face (rainbow-delimiters-depth-4-face)) 568 569 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face)) 569 570 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 587 588 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 588 594 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 594 613 (tag-name "v-icon" tag-type start) 613 614 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 614 617 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 617 618 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 618 637 (tag-name "v-icon" tag-type start) 637 638 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 638 641 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 641 642 (tag-attr t tag-attr-end 0 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 642 659 (tag-name "v-icon" tag-type start) 659 660 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 711 712 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 712 713 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 713 719 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 719 720 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 737 738 (face (rainbow-delimiters-depth-1-face)) 753 754 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 754 755 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 755 759 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 759 760 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 773 774 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 774 775 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 775 776 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 776 777 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 788 789 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 789 790 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 790 798 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 798 799 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 810 811 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 811 815 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 815 816 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 817 818 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 818 819 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 819 820 (block-side t) 820 821 (block-side t face web-mode-variable-name-face) 821 822 (block-side t face (rainbow-delimiters-depth-3-face)) 822 823 (block-side t) 823 824 (block-side t face web-mode-variable-name-face) 824 825 (block-side t face web-mode-variable-name-face) 825 826 (block-side t face web-mode-variable-name-face) 826 827 (block-side t face web-mode-variable-name-face) 827 828 (block-side t face web-mode-variable-name-face) 828 829 (block-side t face web-mode-variable-name-face) 829 830 (block-side t face web-mode-variable-name-face) 830 831 (block-side t face web-mode-variable-name-face) 831 832 (block-side t face web-mode-variable-name-face) 832 833 (block-side t face web-mode-variable-name-face) 833 834 (block-side t face web-mode-variable-name-face) 834 835 (block-side t face web-mode-variable-name-face) 835 836 (block-side t face web-mode-variable-name-face) 836 837 (block-side t face web-mode-variable-name-face) 837 838 (block-side t face web-mode-variable-name-face) 838 839 (block-side t) 839 840 (block-side t face web-mode-variable-name-face) 840 841 (block-side t face web-mode-variable-name-face) 841 842 (block-side t face web-mode-variable-name-face) 842 843 (block-side t face web-mode-variable-name-face) 843 844 (block-side t face web-mode-variable-name-face) 844 845 (block-side t face web-mode-variable-name-face) 845 846 (block-side t face web-mode-variable-name-face) 846 847 (block-side t face web-mode-variable-name-face) 847 848 (block-side t) 848 849 (block-side t face (rainbow-delimiters-depth-3-face)) 849 850 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 850 851 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 851 852 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 852 853 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 853 857 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 857 858 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 867 868 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 868 869 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 869 878 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 878 879 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 886 887 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 887 888 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 888 893 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 893 894 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 901 902 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 902 907 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 907 908 (tag-name "v-col" tag-type start) 908 909 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 909 912 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 912 913 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 913 915 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 915 916 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 916 917 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 926 927 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 927 928 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 928 929 (tag-name "p" tag-type start) 929 930 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 930 934 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 934 935 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 935 943 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 943 944 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 944 945 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 945 946 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 946 947 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 947 948 (block-side t) 948 949 (block-side t face web-mode-variable-name-face) 949 950 (block-side t face (rainbow-delimiters-depth-3-face)) 950 951 (block-side t) 951 952 (block-side t face web-mode-variable-name-face) 952 953 (block-side t face web-mode-variable-name-face) 953 954 (block-side t face web-mode-variable-name-face) 954 955 (block-side t face web-mode-variable-name-face) 955 956 (block-side t face web-mode-variable-name-face) 956 957 (block-side t face web-mode-variable-name-face) 957 958 (block-side t face web-mode-variable-name-face) 958 959 (block-side t face web-mode-variable-name-face) 959 960 (block-side t face web-mode-variable-name-face) 960 961 (block-side t face web-mode-variable-name-face) 961 962 (block-side t face web-mode-variable-name-face) 962 963 (block-side t face web-mode-variable-name-face) 963 964 (block-side t face web-mode-variable-name-face) 964 965 (block-side t face web-mode-variable-name-face) 965 966 (block-side t face web-mode-variable-name-face) 966 967 (block-side t) 967 968 (block-side t face web-mode-variable-name-face) 968 969 (block-side t face web-mode-variable-name-face) 969 970 (block-side t face web-mode-variable-name-face) 970 971 (block-side t face web-mode-variable-name-face) 971 972 (block-side t face web-mode-variable-name-face) 972 973 (block-side t face web-mode-variable-name-face) 973 974 (block-side t face web-mode-variable-name-face) 974 975 (block-side t face web-mode-variable-name-face) 975 976 (block-side t face web-mode-variable-name-face) 976 977 (block-side t face web-mode-variable-name-face) 977 978 (block-side t face web-mode-variable-name-face) 978 979 (block-side t face web-mode-variable-name-face) 979 980 (block-side t face web-mode-variable-name-face) 980 983 (block-side t) 983 984 (block-side t face (rainbow-delimiters-depth-4-face)) 984 985 (block-side t face web-mode-variable-name-face) 985 986 (block-side t face web-mode-variable-name-face) 986 987 (block-side t face web-mode-variable-name-face) 987 988 (block-side t face web-mode-variable-name-face) 988 989 (block-side t face web-mode-variable-name-face) 989 993 (block-side t) 993 994 (block-side t face web-mode-variable-name-face) 994 995 (block-side t face web-mode-variable-name-face) 995 996 (block-side t face web-mode-variable-name-face) 996 997 (block-side t face web-mode-variable-name-face) 997 998 (block-side t face web-mode-variable-name-face) 998 999 (block-side t face web-mode-variable-name-face) 999 1010 (block-side t) 1010 1011 (block-side t face web-mode-variable-name-face) 1011 1012 (block-side t face web-mode-variable-name-face) 1012 1013 (block-side t face web-mode-variable-name-face) 1013 1014 (block-side t face web-mode-variable-name-face) 1014 1015 (block-side t) 1015 1021 (block-side t face web-mode-function-call-face) 1021 1022 (block-side t face (rainbow-delimiters-depth-5-face)) 1022 1023 (block-side t face (rainbow-delimiters-depth-5-face)) 1023 1024 (block-side t) 1024 1025 (block-side t face (rainbow-delimiters-depth-4-face)) 1025 1026 (block-side t face (rainbow-delimiters-depth-3-face)) 1026 1027 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1027 1028 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1028 1029 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1029 1030 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1030 1031 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 1031 1032 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1039 1040 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1040 1041 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1041 1046 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 1046 1047 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1054 1055 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1055 1060 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 1060 1061 (tag-name "v-col" tag-type start) 1061 1062 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1062 1065 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1065 1066 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 1066 1068 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1068 1069 (tag-attr t tag-attr-end 4 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1069 1070 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1079 1080 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1080 1081 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 1081 1082 (tag-name "p" tag-type start) 1082 1083 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1083 1087 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1087 1088 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 1088 1096 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 1096 1097 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 1097 1098 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1098 1099 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1099 1100 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1100 1101 (block-side t) 1101 1102 (block-side t face web-mode-variable-name-face) 1102 1103 (block-side t face (rainbow-delimiters-depth-3-face)) 1103 1104 (block-side t) 1104 1105 (block-side t face web-mode-variable-name-face) 1105 1106 (block-side t face web-mode-variable-name-face) 1106 1107 (block-side t face web-mode-variable-name-face) 1107 1108 (block-side t face web-mode-variable-name-face) 1108 1109 (block-side t face web-mode-variable-name-face) 1109 1110 (block-side t face web-mode-variable-name-face) 1110 1111 (block-side t face web-mode-variable-name-face) 1111 1112 (block-side t face web-mode-variable-name-face) 1112 1113 (block-side t face web-mode-variable-name-face) 1113 1114 (block-side t face web-mode-variable-name-face) 1114 1115 (block-side t face web-mode-variable-name-face) 1115 1116 (block-side t face web-mode-variable-name-face) 1116 1117 (block-side t face web-mode-variable-name-face) 1117 1118 (block-side t face web-mode-variable-name-face) 1118 1119 (block-side t face web-mode-variable-name-face) 1119 1120 (block-side t) 1120 1121 (block-side t face web-mode-variable-name-face) 1121 1122 (block-side t face web-mode-variable-name-face) 1122 1123 (block-side t face web-mode-variable-name-face) 1123 1124 (block-side t face web-mode-variable-name-face) 1124 1125 (block-side t face web-mode-variable-name-face) 1125 1126 (block-side t face web-mode-variable-name-face) 1126 1127 (block-side t face web-mode-variable-name-face) 1127 1128 (block-side t face web-mode-variable-name-face) 1128 1129 (block-side t face web-mode-variable-name-face) 1129 1130 (block-side t face web-mode-variable-name-face) 1130 1131 (block-side t face web-mode-variable-name-face) 1131 1134 (block-side t) 1134 1135 (block-side t face (rainbow-delimiters-depth-4-face)) 1135 1136 (block-side t face web-mode-variable-name-face) 1136 1137 (block-side t face web-mode-variable-name-face) 1137 1138 (block-side t face web-mode-variable-name-face) 1138 1139 (block-side t face web-mode-variable-name-face) 1139 1140 (block-side t face web-mode-variable-name-face) 1140 1142 (block-side t) 1142 1143 (block-side t face web-mode-variable-name-face) 1143 1144 (block-side t face web-mode-variable-name-face) 1144 1145 (block-side t face web-mode-variable-name-face) 1145 1146 (block-side t face web-mode-variable-name-face) 1146 1147 (block-side t face web-mode-variable-name-face) 1147 1148 (block-side t face web-mode-variable-name-face) 1148 1149 (block-side t face web-mode-variable-name-face) 1149 1150 (block-side t face web-mode-variable-name-face) 1150 1151 (block-side t face web-mode-variable-name-face) 1151 1152 (block-side t face web-mode-variable-name-face) 1152 1153 (block-side t face web-mode-variable-name-face) 1153 1154 (block-side t face (rainbow-delimiters-depth-4-face)) 1154 1155 (block-side t face (rainbow-delimiters-depth-3-face)) 1155 1156 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1156 1157 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1157 1158 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1158 1159 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1159 1160 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 1160 1161 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1168 1169 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1169 1170 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1170 1175 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 1175 1176 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1181 1182 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1182 1183 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1183 1188 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 1188 1189 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4066) (undo-tree-id568 . -1189) (undo-tree-id569 . -37) (undo-tree-id570 . -851) (undo-tree-id571 . -983) (undo-tree-id572 . -993) (undo-tree-id573 . -1153) (undo-tree-id574 . -1189) (t 25451 28157 680287 515000)) nil (25451 28210 646670 134000) 0 nil])
([nil nil ((2990 . 2997) (t 25451 28210 660864 178000)) nil (25451 28235 761559 332000) 0 nil])
([nil nil ((2990 . 3004) (" " . 2989) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (2990 . 2991)) nil (25451 28235 761557 102000) 0 nil])
([nil nil ((3008 . 3024) (3009 . 3023) (#("                " 0 16 (face whitespace-trailing)) . 3008) (3008 . 3024) (3008 . 3009) ("              " . 3008) (3007 . 3022)) nil (25451 28235 761550 951000) 0 nil])
([nil nil ((#("              </p>{{(cursorX+1)}} / {{(startP + cursorY+1)}}
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t face (rainbow-delimiters-depth-3-face)) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 30 (block-side t) 30 31 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 31 32 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 32 33 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 36 37 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 37 38 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 38 39 (block-side t face (rainbow-delimiters-depth-3-face)) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 48 (block-side t) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 57 (block-side t) 57 58 (block-side t face (rainbow-delimiters-depth-3-face)) 58 59 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 59 60 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3086) (undo-tree-id586 . -61) (undo-tree-id587 . -18) (3069 . 3086) (#("                
" 0 16 (face whitespace-trailing)) . 3008) (3025 . 3086) 3043) nil (25451 28235 761546 194000) 0 nil])
([nil nil ((3026 . 3041)) nil (25451 28235 761539 837000) 0 nil])
([nil nil ((#("              {{(cursorX+1)}} / {{(startP + cursorY+1)}}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t face (rainbow-delimiters-depth-3-face)) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 26 (block-side t) 26 27 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 27 28 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 29 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 33 34 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 34 35 (block-side t face (rainbow-delimiters-depth-3-face)) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 44 (block-side t) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 53 (block-side t) 53 54 (block-side t face (rainbow-delimiters-depth-3-face)) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3084) (undo-tree-id584 . -57) (undo-tree-id585 . -14) (3065 . 3084) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3008) (3027 . 3084) 3041) nil (25451 28235 761535 545000) 0 nil])
([nil nil (("
" . 3083) (undo-tree-id583 . -1)) nil (25451 28235 761520 8000) 0 nil])
([nil nil ((#("                " 0 16 (face whitespace-trailing)) . -3083) (undo-tree-id575 . -14) (undo-tree-id576 . -14) (undo-tree-id577 . -14) (undo-tree-id578 . -14) (undo-tree-id579 . -14) (undo-tree-id580 . -14) (undo-tree-id581 . -14) (undo-tree-id582 . -14)) nil (25451 28235 761505 477000) 0 nil])
([nil nil ((#("p" 0 1 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face)) . -3005) (undo-tree-id591 . -1) 3006 (t 25451 28235 777135 728000)) nil (25451 28246 401360 706000) 0 nil])
([nil nil ((3005 . 3009)) nil (25451 28246 401357 306000) 0 nil])
([nil nil ((#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face)) . -3084) (undo-tree-id590 . -1) 3085) nil (25451 28246 401354 781000) 0 nil])
([nil nil ((3084 . 3088)) nil (25451 28246 401338 419000) 0 nil])
([nil nil ((3009 . 3018) (t 25451 28246 421250 495000)) nil (25451 28321 716474 630000) 0 nil])
([nil nil ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3010) (undo-tree-id592 . -8) (undo-tree-id593 . -4) (undo-tree-id594 . -1) (undo-tree-id595 . -8) (undo-tree-id596 . -8)) nil (25451 28469 262822 592000) 0 nil])
([nil nil ((3017 . 3027) (3010 . 3018)) nil (25451 28519 651949 815000) 0 nil] [nil nil ((nil rear-nonsticky nil 3034 . 3035) (nil tag-attr t 3034 . 3035) (nil tag-attr-end 5 3034 . 3035) (nil tag-name "span" 3034 . 3035) (nil tag-type start 3034 . 3035) (nil font-lock-face web-mode-html-attr-value-face 3034 . 3035) (nil tag-attr t 3016 . 3034) (nil tag-name "span" 3016 . 3034) (nil tag-type start 3016 . 3034) (nil font-lock-face web-mode-html-attr-value-face 3016 . 3034) (nil tag-attr t 3015 . 3016) (nil tag-name "span" 3015 . 3016) (nil tag-type start 3015 . 3016) (nil font-lock-face web-mode-html-attr-equal-face 3015 . 3016) (nil tag-attr t 3011 . 3015) (nil tag-name "span" 3011 . 3015) (nil tag-type start 3011 . 3015) (nil font-lock-face web-mode-html-attr-name-face 3011 . 3015) (nil tag-attr-beg 0 3010 . 3011) (nil tag-attr t 3010 . 3011) (nil tag-name "span" 3010 . 3011) (nil tag-type start 3010 . 3011) (nil font-lock-face web-mode-html-attr-name-face 3010 . 3011) (3010 . 3035)) ((#("class=\"font-weight-light\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 8 24 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky nil tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3010) (undo-tree-id628 . -7) (undo-tree-id629 . -7) (nil tag-name "span" 3010 . 3011) (nil tag-name "span" 3011 . 3015) (nil tag-name "span" 3015 . 3016) (nil tag-name "span" 3018 . 3034) (nil tag-name "span" 3017 . 3018) (nil tag-name "span" 3016 . 3017) (nil tag-name "span" 3034 . 3035) (nil rear-nonsticky t 3034 . 3035)) (25451 28468 896271 703000) 0 nil])
([nil nil ((3027 . 3033)) nil (25451 28519 651948 653000) 0 nil])
([nil nil ((#("span" 0 4 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face)) . 3005) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (t 25451 28321 730057 825000)) ((3005 . 3009)) (25451 28468 553898 100000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3032) (undo-tree-id635 . -1) 3033) nil (25451 28519 651947 497000) 0 nil])
([nil nil ((3005 . 3006)) ((#("p" 0 1 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face)) . 3005)) (25451 28468 27313 549000) 0 nil])
([nil nil ((26746 . 26748) (#("  " 0 2 (part-side css)) . 26745) (undo-tree-id634 . -2) (26744 . 26748)) nil (25451 28519 651944 672000) 0 nil])
([nil nil ((#("n" 0 1 (tag-name "n" tag-type end font-lock-face web-mode-html-tag-face)) . 3107) (#("a" 0 1 (tag-name "an" tag-type end font-lock-face web-mode-html-tag-face)) . 3107) (#("p" 0 1 (tag-name "pan" tag-type end font-lock-face web-mode-html-tag-face)) . 3107) (#("s" 0 1 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face)) . 3107)) ((3107 . 3108) (3107 . 3108) (3107 . 3108) (3107 . 3108)) (25451 28467 581712 386000) 0 nil])
([nil nil ((26748 . 26755)) nil (25451 28519 651942 68000) 0 nil])
([nil nil ((3107 . 3108)) ((#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face)) . 3107)) (25451 28467 214123 219000) 0 nil])
([nil nil ((26755 . 26765)) nil (25451 28519 651941 190000) 0 nil])
([nil nil ((3014 . 3015)) ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3014)) (25451 28466 763510 611000) 0 nil] [nil nil ((nil rear-nonsticky nil 3033 . 3034) (nil tag-name "p" 3021 . 3034) (nil tag-type start 3021 . 3034) (nil tag-attr t 3020 . 3021) (nil tag-attr-end 5 3020 . 3021) (nil tag-name "p" 3020 . 3021) (nil tag-type start 3020 . 3021) (nil font-lock-face web-mode-html-attr-value-face 3020 . 3021) (nil tag-attr t 3014 . 3020) (nil tag-name "p" 3014 . 3020) (nil tag-type start 3014 . 3020) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3020) (3014 . 3034)) ((#("class=\"text-justify\"" 0 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 7 19 (tag-name "p" tag-type start) 19 20 (rear-nonsticky nil tag-name "p" tag-type start)) . 3014) (undo-tree-id599 . -20) (nil tag-name "p" 3014 . 3020) (nil tag-name "p" 3020 . 3021) (nil tag-name "p" 3033 . 3034) (nil tag-name "p" 3021 . 3033) (nil rear-nonsticky t 3033 . 3034)) (25451 28427 959204 567000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -26764) (undo-tree-id633 . -1) 26765) nil (25451 28519 651939 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3033 . 3034) (nil tag-name "p" 3021 . 3034) (nil tag-type start 3021 . 3034) (nil tag-attr t 3020 . 3021) (nil tag-attr-end 5 3020 . 3021) (nil tag-name "p" 3020 . 3021) (nil tag-type start 3020 . 3021) (nil font-lock-face web-mode-html-attr-value-face 3020 . 3021) (nil tag-attr t 3014 . 3020) (nil tag-name "p" 3014 . 3020) (nil tag-type start 3014 . 3020) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3020) (3014 . 3034)) ((#("class=\"text-justify\"" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 7 19 (tag-name "p" tag-type start) 19 20 (rear-nonsticky nil tag-name "p" tag-type start)) . 3014) (undo-tree-id609 . -20) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) (undo-tree-id613 . -7) (undo-tree-id614 . -7) (undo-tree-id615 . -7) (undo-tree-id616 . -7) (undo-tree-id617 . -20) (undo-tree-id618 . -20) (undo-tree-id619 . -20) (undo-tree-id620 . -20) (undo-tree-id621 . -20) (undo-tree-id622 . -20) (undo-tree-id623 . -20) (undo-tree-id624 . -20) (undo-tree-id625 . -20) (undo-tree-id626 . -20) (undo-tree-id627 . -20) (nil tag-name "p" 3019 . 3020) (nil tag-name "p" 3018 . 3019) (nil tag-name "p" 3017 . 3018) (nil tag-name "p" 3016 . 3017) (nil tag-name "p" 3015 . 3016) (nil tag-name "p" 3014 . 3015) (nil tag-name "p" 3020 . 3021) (nil tag-name "p" 3033 . 3034) (nil tag-name "p" 3021 . 3033) (nil rear-nonsticky t 3033 . 3034)) (25451 28466 432118 842000) 0 nil])
nil
([nil nil ((26765 . 26767) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -26765) (26764 . 26766)) nil (25451 28519 651937 76000) 0 nil])
([nil nil ((#("\"" 0 1 (rear-nonsticky t tag-name "p" tag-type start)) . -3033) (undo-tree-id608 . -1) 3034) ((3033 . 3034)) (25451 28466 119535 742000) 0 nil])
([nil nil ((26768 . 26770) (#("    " 0 4 (part-side css face whitespace-trailing)) . 26767) (undo-tree-id631 . -2) (undo-tree-id632 . 4) (26769 . 26771) (26766 . 26770)) nil (25451 28519 651935 166000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3014) (undo-tree-id600 . -1) (#("l" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3015) (undo-tree-id602 . -1) (#("a" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3016) (undo-tree-id603 . -1) (#("s" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3017) (undo-tree-id604 . -1) (#("s" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3018) (undo-tree-id605 . -1) (#("=" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3019) (undo-tree-id606 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3020) (undo-tree-id607 . -1) 3021) ((3014 . 3021) (t 25451 28434 671622 650000)) (25451 28434 656272 320000) 0 nil])
([nil nil ((26767 . 26771)) nil (25451 28519 651930 283000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 26787 . 26788) (nil part-side css 26783 . 26788) (nil part-side css 26771 . 26783) (nil face web-mode-css-property-name-face 26771 . 26783) (26771 . 26788)) nil (25451 28519 651928 841000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -26784) (undo-tree-id630 . -1) 26785) nil (25451 28519 651925 262000) 0 nil])
([nil nil ((26784 . 26785)) nil (25451 28519 651907 752000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -26784) (undo-tree-id636 . -1) (undo-tree-id637 . -1) 26785 (t 25451 28519 669378 913000)) nil (25451 28545 222162 158000) 0 nil])
([nil nil ((26784 . 26785)) nil (25451 28545 222139 517000) 0 nil])
([nil nil ((26788 . 26793) (t 25451 28545 237883 468000)) nil (25451 28564 240687 631000) 0 nil])
([nil nil ((26793 . 26807)) nil (25451 28564 240685 671000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -26806) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) 26807) nil (25451 28564 240680 563000) 0 nil])
([nil nil ((26805 . 26807) (t 25451 28564 254252 180000)) nil (25451 28571 136265 273000) 0 nil])
([nil nil ((26805 . 26806) (t 25451 28571 150384 556000)) nil (25451 28576 720479 766000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -26804) (undo-tree-id647 . -1) 26805 (t 25451 28576 734491 238000)) nil (25451 28580 956110 96000) 0 nil])
([nil nil ((26804 . 26805)) nil (25451 28580 956093 879000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -26805) (undo-tree-id648 . -1) 26806 (t 25451 28580 970571 864000)) nil (25451 28585 763653 633000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28585 763637 106000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -26805) (undo-tree-id651 . -1) 26806 (t 25451 28585 778663 68000)) nil (25451 28592 192044 691000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28592 192041 949000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -26805) (undo-tree-id650 . -1) 26806) nil (25451 28592 192040 730000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28592 192037 465000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -26805) (undo-tree-id649 . -1) 26806) nil (25451 28592 192034 976000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28592 192018 881000) 0 nil])
([nil nil ((#("6" 0 1 (part-side css)) . -26805) (undo-tree-id652 . -1) 26806 (t 25451 28592 202784 415000)) nil (25451 28598 380518 73000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28598 380501 238000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -26805) (undo-tree-id653 . -1) 26806 (t 25451 28598 394900 831000)) nil (25451 28604 766209 311000) 0 nil])
([nil nil ((26805 . 26807)) nil (25451 28604 766192 849000) 0 nil])
([nil nil ((#("x" 0 1 (part-side css)) . -26806) (undo-tree-id655 . -1) 26807 (t 25451 28604 779020 301000)) nil (25451 28659 917403 524000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -26784) (undo-tree-id654 . -1) 26785) nil (25451 28659 917399 625000) 0 nil])
([nil nil ((26784 . 26785)) nil (25451 28659 917389 86000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . 26785)) nil (25451 28659 917381 532000) 0 nil])
([nil nil ((#("7" 0 1 (part-side css)) . -26804) (undo-tree-id660 . -1) 26805 (t 25451 28659 936030 2000)) nil (25451 28670 599357 36000) 0 nil])
([nil nil ((26804 . 26805)) nil (25451 28670 599354 155000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -26784) (undo-tree-id659 . -1) 26785) nil (25451 28670 599352 906000) 0 nil])
([nil nil ((26784 . 26785)) nil (25451 28670 599350 625000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -26784) (undo-tree-id658 . -1) 26785) nil (25451 28670 599349 396000) 0 nil])
([nil nil ((26784 . 26786)) nil (25451 28670 599346 481000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -26784) (undo-tree-id656 . -1) (#("1" 0 1 (part-side css)) . -26785) (undo-tree-id657 . -1) 26786) nil (25451 28670 599343 693000) 0 nil])
([nil nil ((26784 . 26786)) nil (25451 28670 599326 594000) 0 nil])
([nil nil ((#("6" 0 1 (part-side css)) . -26805) (undo-tree-id661 . -1) 26806 (t 25451 28670 612220 993000)) nil (25451 28677 101948 463000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28677 101931 97000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -26805) (undo-tree-id662 . -1) 26806 (t 25451 28677 120336 746000)) nil (25451 28682 886136 907000) 0 nil])
([nil nil ((26805 . 26806)) nil (25451 28682 886120 388000) 0 nil])
([nil nil ((#("
    font-weight: 100;" 0 1 (part-side css) 1 5 (part-side css) 5 17 (part-side css face web-mode-css-property-name-face) 17 21 (part-side css) 21 22 (rear-nonsticky t part-side css)) . 26766) (undo-tree-id672 . -22) (undo-tree-id673 . -1) (undo-tree-id674 . -5) (undo-tree-id675 . -22) (t 25451 28682 900439 131000)) nil (25451 28711 562434 215000) 0 nil])
([nil nil ((3181 . 3195) (" " . 3180) (undo-tree-id671 . -1) (3181 . 3182)) nil (25451 28711 562427 175000) 0 nil])
([nil nil ((3195 . 3208)) nil (25451 28711 562424 799000) 0 nil])
([nil nil ((3202 . 3218) (3203 . 3217) (#("                " 0 16 (face whitespace-trailing)) . 3202) (3202 . 3218) (3202 . 3203) ("              " . 3202) (3201 . 3216)) nil (25451 28711 562423 452000) 0 nil])
([nil nil ((3240 . 3255)) nil (25451 28711 562421 387000) 0 nil])
([nil nil ((#("              {{ dataTSize }}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t) 27 28 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 29 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3271) (undo-tree-id669 . -14) (undo-tree-id670 . -30) (3249 . 3271) (#("              </span>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3219) (3241 . 3271) 3255) nil (25451 28711 562420 83000) 0 nil])
([nil nil ((#("              {{ dataTSize }}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t) 27 28 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 29 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3249) (undo-tree-id667 . -14) (undo-tree-id668 . -30) (3232 . 3249) (#("                
" 0 16 (face whitespace-trailing)) . 3202) (3219 . 3249) 3233) nil (25451 28711 562415 697000) 0 nil])
([nil nil ((3202 . 3218) ("              " . 3202) (undo-tree-id666 . -14) 3216) nil (25451 28711 562411 331000) 0 nil])
([nil nil (("
" . 3250) (undo-tree-id664 . -1) (undo-tree-id665 . 1)) nil (25451 28711 562408 562000) 0 nil])
([nil nil (("                " . -3248) (undo-tree-id663 . -2) 3250) nil (25451 28711 562403 810000) 0 nil])
([nil nil ((3200 . 3201)) nil (25451 28711 562392 221000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3223 . 3224) (nil tag-attr t 3223 . 3224) (nil tag-attr-end 5 3223 . 3224) (nil tag-name "span" 3223 . 3224) (nil tag-type start 3223 . 3224) (nil font-lock-face web-mode-html-attr-value-face 3223 . 3224) (nil tag-attr t 3207 . 3223) (nil tag-name "span" 3207 . 3223) (nil tag-type start 3207 . 3223) (nil font-lock-face web-mode-html-attr-value-face 3207 . 3223) (nil tag-attr t 3206 . 3207) (nil tag-name "span" 3206 . 3207) (nil tag-type start 3206 . 3207) (nil font-lock-face web-mode-html-attr-equal-face 3206 . 3207) (nil tag-attr t 3205 . 3206) (nil tag-name "span" 3205 . 3206) (nil tag-type start 3205 . 3206) (nil font-lock-face web-mode-html-attr-name-face 3205 . 3206) (nil tag-attr t 3204 . 3205) (nil tag-name "span" 3204 . 3205) (nil tag-type start 3204 . 3205) (nil font-lock-face web-mode-html-attr-name-face 3204 . 3205) (nil tag-attr t 3203 . 3204) (nil tag-name "span" 3203 . 3204) (nil tag-type start 3203 . 3204) (nil font-lock-face web-mode-html-attr-name-face 3203 . 3204) (nil tag-attr t 3202 . 3203) (nil tag-name "span" 3202 . 3203) (nil tag-type start 3202 . 3203) (nil font-lock-face web-mode-html-attr-name-face 3202 . 3203) (nil tag-attr-beg 0 3201 . 3202) (nil tag-attr t 3201 . 3202) (nil tag-name "span" 3201 . 3202) (nil tag-type start 3201 . 3202) (nil font-lock-face web-mode-html-attr-name-face 3201 . 3202) (3201 . 3224)) nil (25451 28988 886403 579000) 0 nil])
([nil nil ((#("span class=\"tablestats-text\"" 0 4 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 4 5 (tag-name "span" tag-type start) 5 6 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 8 9 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 11 27 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3005) (undo-tree-id1122 . -28) (undo-tree-id1123 . -26) (undo-tree-id1124 . -28) (undo-tree-id1125 . -28) (t 25451 28990 233414 249000)) nil (25451 29052 42403 442000) 0 nil] [nil nil ((2989 . 3004) (t 25451 28711 576941 368000)) (("
              " . 2989) (undo-tree-id1077 . -1) (undo-tree-id1078 . -15) (undo-tree-id1079 . -1) (undo-tree-id1080 . -15) (undo-tree-id1081 . -15) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -15) (undo-tree-id1085 . -15) (undo-tree-id1086 . -15) (undo-tree-id1087 . -15) (undo-tree-id1088 . -15) (undo-tree-id1089 . -15) (undo-tree-id1090 . -15) (undo-tree-id1091 . -15) (undo-tree-id1092 . -15) (undo-tree-id1093 . -15) (undo-tree-id1094 . -15) (undo-tree-id1095 . -15) (undo-tree-id1096 . -15) (undo-tree-id1097 . -15) (undo-tree-id1098 . -15) (undo-tree-id1099 . -15) (undo-tree-id1100 . -15) (undo-tree-id1101 . -1) (undo-tree-id1102 . -15) (undo-tree-id1103 . -15) (undo-tree-id1104 . -15) (undo-tree-id1105 . -15) (undo-tree-id1106 . -15) (undo-tree-id1107 . -15) (undo-tree-id1108 . -15) (undo-tree-id1109 . -15) (undo-tree-id1110 . -15) (undo-tree-id1111 . -15) (undo-tree-id1112 . -15) (undo-tree-id1113 . -15) (undo-tree-id1114 . -15) (undo-tree-id1115 . -15) (undo-tree-id1116 . -15) (undo-tree-id1117 . -15) (undo-tree-id1118 . -15) (undo-tree-id1119 . -15) (undo-tree-id1120 . -15) (undo-tree-id1121 . -15)) (25451 28988 324534 378000) 0 nil])
([nil nil ((3005 . 3006)) nil (25451 29052 42378 648000) 0 nil])
([nil nil ((3004 . 3011)) ((#("<p></p>" 0 1 (tag-name "p" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 2 3 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 3 4 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 6 7 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3004) (undo-tree-id1057 . -3) (undo-tree-id1058 . -2) (undo-tree-id1059 . -2) (undo-tree-id1060 . -5) (undo-tree-id1061 . -5) (undo-tree-id1062 . -5) (undo-tree-id1063 . -5) (undo-tree-id1064 . -5) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3)) (25451 28987 924214 457000) 0 nil])
([nil nil ((#("n" 0 1 (tag-name "n" tag-type end font-lock-face web-mode-html-tag-face)) . 3081) (#("a" 0 1 (tag-name "an" tag-type end font-lock-face web-mode-html-tag-face)) . 3081) (#("p" 0 1 (tag-name "pan" tag-type end font-lock-face web-mode-html-tag-face)) . 3081) (#("s" 0 1 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face)) . 3081)) nil (25451 29052 42373 436000) 0 nil])
([nil nil ((3008 . 3024) (3009 . 3023) (#("                " 0 16 (face whitespace-trailing)) . 3008) (3008 . 3024) (3008 . 3009) ("              " . 3008) (3007 . 3022)) (("
              " . 3007) (undo-tree-id1055 . -1) (3008 . 3022) ("
" . 3008) (undo-tree-id1056 . -1) (#("                " 0 16 (face whitespace-trailing)) . 3008) (3008 . 3024) ("              " . 3009) (#("                " 0 16 (face whitespace-trailing)) . 3008)) (25451 28987 629744 213000) 0 nil])
([nil nil ((3081 . 3082)) nil (25451 29052 42368 618000) 0 nil])
([nil nil ((#("              <span class=\"tablestats-text\">
" 14 15 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 15 19 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 19 20 (tag-name "span" tag-type start) 20 21 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 26 42 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3089) (undo-tree-id678 . -41) (undo-tree-id680 . -20) (undo-tree-id682 . -20) (undo-tree-id683 . -20) (undo-tree-id684 . -43) (3070 . 3089) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3025) (undo-tree-id685 . -16) (3044 . 3089) 3041) ((#("              <span class=\"tablestats-text\">
" 14 15 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 15 19 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 19 20 (tag-name "span" tag-type start) 20 21 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 26 27 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 27 42 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3044) (undo-tree-id1013 . -33) (undo-tree-id1014 . -45) (undo-tree-id1015 . -45) (undo-tree-id1016 . -45) (undo-tree-id1017 . -45) (undo-tree-id1018 . -27) (undo-tree-id1019 . -27) (undo-tree-id1020 . -45) (undo-tree-id1021 . -45) (undo-tree-id1022 . -45) (undo-tree-id1023 . -45) (undo-tree-id1024 . -45) (undo-tree-id1025 . -45) (undo-tree-id1026 . -45) (undo-tree-id1027 . -45) (undo-tree-id1028 . -45) (undo-tree-id1029 . -45) (undo-tree-id1030 . -45) (undo-tree-id1031 . -45) (undo-tree-id1032 . -45) (undo-tree-id1033 . -45) (undo-tree-id1034 . -45) (undo-tree-id1035 . -45) (3025 . 3044) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3070) (undo-tree-id1036 . -16) (undo-tree-id1037 . -19) (undo-tree-id1038 . -19) (undo-tree-id1039 . -19) (undo-tree-id1040 . -19) (undo-tree-id1041 . -19) (undo-tree-id1042 . -19) (undo-tree-id1043 . -19) (undo-tree-id1044 . -19) (undo-tree-id1045 . -19) (undo-tree-id1046 . -19) (undo-tree-id1047 . -16) (undo-tree-id1048 . -16) (undo-tree-id1049 . -16) (undo-tree-id1050 . -16) (undo-tree-id1051 . -16) (undo-tree-id1052 . -16) (undo-tree-id1053 . -16) (undo-tree-id1054 . -16) (3089 . 3134)) (25451 28987 390725 100000) 0 nil])
([nil nil ((3006 . 3015)) nil (25451 29052 42365 928000) 0 nil])
([nil nil ((#("              {{(cursorX+1)}} / {{(startP + cursorY+1)}}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t face (rainbow-delimiters-depth-3-face)) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 26 (block-side t) 26 27 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 27 28 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 29 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 33 34 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 34 35 (block-side t face (rainbow-delimiters-depth-3-face)) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 44 (block-side t) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 53 (block-side t) 53 54 (block-side t face (rainbow-delimiters-depth-3-face)) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3146) (3127 . 3146) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3070) (undo-tree-id677 . -16) (3089 . 3146) 3086) ((#("              {{(cursorX+1)}} / {{(startP + cursorY+1)}}
" 14 15 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t face (rainbow-delimiters-depth-3-face)) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 26 (block-side t) 26 27 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 27 28 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 28 29 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 33 34 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 34 35 (block-side t face (rainbow-delimiters-depth-3-face)) 35 36 (block-side t face web-mode-variable-name-face) 36 37 (block-side t face web-mode-variable-name-face) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 44 (block-side t) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t face web-mode-variable-name-face) 49 50 (block-side t face web-mode-variable-name-face) 50 51 (block-side t face web-mode-variable-name-face) 51 53 (block-side t) 53 54 (block-side t face (rainbow-delimiters-depth-3-face)) 54 55 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 55 56 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3089) (undo-tree-id987 . -57) (undo-tree-id988 . -57) (undo-tree-id989 . -57) (undo-tree-id990 . -57) (undo-tree-id991 . -57) (undo-tree-id992 . -57) (undo-tree-id993 . -57) (undo-tree-id994 . -57) (undo-tree-id995 . -57) (undo-tree-id996 . -57) (undo-tree-id997 . -57) (undo-tree-id998 . -57) (undo-tree-id999 . -57) (undo-tree-id1000 . -57) (undo-tree-id1001 . -57) (3070 . 3089) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3127) (undo-tree-id1002 . -16) (undo-tree-id1003 . -19) (undo-tree-id1004 . -19) (undo-tree-id1005 . -16) (undo-tree-id1006 . -16) (undo-tree-id1007 . -16) (undo-tree-id1008 . -16) (undo-tree-id1009 . -16) (undo-tree-id1010 . -16) (undo-tree-id1011 . -16) (undo-tree-id1012 . -16) (3146 . 3203)) (25451 28987 198464 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3029 . 3030) (nil tag-attr t 3014 . 3030) (nil tag-name "p" 3014 . 3030) (nil tag-type start 3014 . 3030) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3030) (3014 . 3030)) nil (25451 29052 42353 464000) 0 nil])
([nil nil ((#("              </span>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3168) (3149 . 3168) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3127) (undo-tree-id676 . -16) (3146 . 3168) 3143) ((#("              </span>
" 14 15 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 20 21 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3146) (undo-tree-id986 . -21) (3127 . 3146) (#("              </p>
" 14 15 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3149) (3168 . 3190)) (25451 28986 986177 320000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3031 . 3032) (nil tag-attr t 3031 . 3032) (nil tag-attr-end 5 3031 . 3032) (nil tag-name "p" 3031 . 3032) (nil tag-type start 3031 . 3032) (nil font-lock-face web-mode-html-attr-value-face 3031 . 3032) (nil tag-attr t 3013 . 3031) (nil tag-name "p" 3013 . 3031) (nil tag-type start 3013 . 3031) (nil font-lock-face web-mode-html-attr-value-face 3013 . 3031) (nil tag-attr t 3012 . 3013) (nil tag-name "p" 3012 . 3013) (nil tag-type start 3012 . 3013) (nil font-lock-face web-mode-html-attr-equal-face 3012 . 3013) (nil tag-attr t 3008 . 3012) (nil tag-name "p" 3008 . 3012) (nil tag-type start 3008 . 3012) (nil font-lock-face web-mode-html-attr-name-face 3008 . 3012) (nil tag-attr-beg 0 3007 . 3008) (nil tag-attr t 3007 . 3008) (nil tag-name "p" 3007 . 3008) (nil tag-type start 3007 . 3008) (nil font-lock-face web-mode-html-attr-name-face 3007 . 3008) (3007 . 3032) (t 25451 29052 70327 948000)) nil (25451 29073 777679 596000) 0 nil])
([nil nil ((3006 . 3007)) ((#(" " 0 1 (tag-name "p" tag-type start)) . 3006) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1)) (25451 28986 778565 877000) 0 nil])
([nil nil ((3032 . 3033)) nil (25451 29073 777668 59000) 0 nil])
([nil nil ((3007 . 3015)) ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3007) (undo-tree-id967 . -7) (undo-tree-id968 . -7) (undo-tree-id969 . -7) (undo-tree-id970 . -7) (undo-tree-id971 . -7)) (25451 28986 445046 754000) 0 nil] [nil nil ((nil rear-nonsticky nil 3020 . 3021) (nil tag-attr t 3020 . 3021) (nil tag-attr-end 0 3020 . 3021) (nil tag-name "p" 3020 . 3021) (nil tag-type start 3020 . 3021) (nil font-lock-face web-mode-html-attr-name-face 3020 . 3021) (nil tag-attr t 3017 . 3020) (nil tag-name "p" 3017 . 3020) (nil tag-type start 3017 . 3020) (nil font-lock-face web-mode-html-attr-name-face 3017 . 3020) (nil tag-attr-beg 0 3016 . 3017) (nil tag-attr t 3016 . 3017) (nil tag-name "p" 3016 . 3017) (nil tag-type start 3016 . 3017) (nil font-lock-face web-mode-html-attr-name-face 3016 . 3017) (nil tag-name "p" 3015 . 3016) (nil tag-type start 3015 . 3016) (nil tag-attr t 3014 . 3015) (nil tag-attr-end 0 3014 . 3015) (nil tag-name "p" 3014 . 3015) (nil tag-type start 3014 . 3015) (nil font-lock-face web-mode-html-attr-name-face 3014 . 3015) (nil tag-attr t 3008 . 3014) (nil tag-name "p" 3008 . 3014) (nil tag-type start 3008 . 3014) (nil font-lock-face web-mode-html-attr-name-face 3008 . 3014) (nil tag-attr-beg 0 3007 . 3008) (nil tag-attr t 3007 . 3008) (nil tag-name "p" 3007 . 3008) (nil tag-type start 3007 . 3008) (nil font-lock-face web-mode-html-attr-name-face 3007 . 3008) (3007 . 3021)) ((#("display: flex;" 0 1 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-attr-end 0 tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 8 9 (tag-name "p" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 10 13 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (rear-nonsticky nil tag-attr t tag-attr-end 0 tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . 3007) (undo-tree-id686 . -14) (nil tag-name "p" 3007 . 3008) (nil tag-name "p" 3008 . 3014) (nil tag-name "p" 3014 . 3015) (nil tag-name "p" 3015 . 3016) (nil tag-name "p" 3016 . 3017) (nil tag-name "p" 3017 . 3020) (nil tag-name "p" 3020 . 3021) (nil rear-nonsticky t 3020 . 3021)) (25451 28787 480033 642000) 0 nil])
([nil nil ((#("f" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3014) (undo-tree-id1126 . -1) (#("o" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3015) (undo-tree-id1127 . -1) (#("n" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3016) (undo-tree-id1128 . -1) (#("t" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3017) (undo-tree-id1129 . -1) (#("-" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3018) (undo-tree-id1130 . -1) (#("w" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3019) (undo-tree-id1131 . -1) (#("e" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3020) (undo-tree-id1132 . -1) (#("i" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3021) (undo-tree-id1133 . -1) (#("g" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3022) (undo-tree-id1134 . -1) (#("h" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3023) (undo-tree-id1135 . -1) (#("t" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id1136 . -1) (#("-" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3025) (undo-tree-id1137 . -1) (#("l" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3026) (undo-tree-id1138 . -1) (#("i" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3027) (undo-tree-id1139 . -1) (#("g" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3028) (undo-tree-id1140 . -1) (#("h" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3029) (undo-tree-id1141 . -1) (#("t" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3030) (undo-tree-id1142 . -1) 3031 (t 25451 29073 794643 623000)) nil (25451 29135 566824 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3027 . 3028) (nil tag-attr t 3014 . 3028) (nil tag-name "p" 3014 . 3028) (nil tag-type start 3014 . 3028) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3028) (3014 . 3028)) ((#("display: flex;" 0 13 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (rear-nonsticky nil tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3014) (undo-tree-id954 . -14) (undo-tree-id955 . -14) (undo-tree-id956 . -14) (undo-tree-id957 . -14) (undo-tree-id958 . -14) (undo-tree-id959 . -14) (undo-tree-id960 . -14) (undo-tree-id961 . -14) (undo-tree-id962 . -14) (undo-tree-id963 . -14) (undo-tree-id964 . -14) (undo-tree-id965 . -14) (undo-tree-id966 . -14) (nil tag-name "p" 3027 . 3028) (nil tag-name "p" 3014 . 3027) (nil rear-nonsticky t 3027 . 3028)) (25451 28985 988714 608000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3029 . 3030) (nil tag-attr t 3014 . 3030) (nil tag-name "p" 3014 . 3030) (nil tag-type start 3014 . 3030) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3030) (3014 . 3030)) nil (25451 29135 566736 691000) 0 nil])
([nil nil ((#("                " 0 16 (face whitespace-trailing)) . -3031) 3028) ((3031 . 3047)) (25451 28985 159777 264000) 0 nil])
([nil nil ((3057 . 3062) (t 25451 29135 583527 731000)) nil (25451 29150 787096 582000) 0 nil])
([nil nil ((#("
              </p>" 15 16 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3155) (undo-tree-id693 . -19) (undo-tree-id694 . -1) (undo-tree-id695 . -19) (t 25451 28789 870267 521000)) ((3155 . 3174)) (25451 28984 511968 640000) 0 nil])
([nil nil ((#("font-weight-thin" 0 15 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3014) (undo-tree-id1143 . -16) (undo-tree-id1144 . -16) (t 25451 29150 803742 581000)) nil (25451 29204 314909 409000) 0 nil])
([nil nil ((#("              <p style=\"display: flex;\">
" 14 15 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 16 17 (tag-name "p" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 24 37 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3031) (undo-tree-id688 . -21) (undo-tree-id689 . -40) (undo-tree-id690 . -41) (undo-tree-id691 . -17) (undo-tree-id692 . -24) (2964 . 3031) (#("              <v-icon class=\"tablestats\">mdi-table-column</v-icon>
" 14 15 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 21 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-icon" tag-type start) 22 23 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 29 38 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 57 58 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 58 59 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 59 65 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 65 66 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2923) (2990 . 3031) 3030) ((#("              <p style=\"display: flex;\">
" 14 15 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 16 17 (tag-name "p" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 23 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 24 31 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 34 37 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2990) (undo-tree-id951 . -40) (undo-tree-id952 . -17) (undo-tree-id953 . -40) (2923 . 2990) (#("              <v-icon class=\"tablestats\">mdi-table-column</v-icon>
" 14 15 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 21 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-icon" tag-type start) 22 23 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 29 38 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 57 58 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 58 59 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 59 65 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 65 66 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2964) (3031 . 3072)) (25451 28984 187860 729000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3030 . 3031) (nil tag-attr t 3014 . 3031) (nil tag-name "p" 3014 . 3031) (nil tag-type start 3014 . 3031) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3031) (3014 . 3031)) nil (25451 29204 314891 549000) 0 nil])
([nil nil ((4208 . 4209)) (("z" . 4208) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1)) (25451 28983 801748 418000) 0 nil])
([nil nil ((26819 . 26821) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26818) (26818 . 26820) (26818 . 26819) (t 25451 29204 332489 754000)) nil (25451 29271 378557 62000) 0 nil])
([nil nil (("z" . -4208) (undo-tree-id687 . -1) 4209) ((4208 . 4209)) (25451 28981 376485 382000) 0 nil])
([nil nil ((26819 . 26821) (#("  " 0 2 (part-side css face whitespace-trailing)) . 26818) (26818 . 26820) (26818 . 26819)) nil (25451 29271 378554 712000) 0 nil])
([nil nil ((4208 . 4222) (4208 . 4212)) ((#("</p>" 0 1 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4208) ("              " . 4208)) (25451 28980 831954 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26858 . 26859) (nil part-side css 26858 . 26859) (nil face (rainbow-delimiters-depth-1-face) 26858 . 26859) (nil part-side css 26845 . 26858) (nil part-side css 26822 . 26845) (nil face web-mode-css-property-name-face 26822 . 26845) (nil part-side css 26821 . 26822) (nil face (rainbow-delimiters-depth-1-face) 26821 . 26822) (26821 . 26859)) nil (25451 29271 378551 994000) 0 nil])
([nil nil ((2947 . 2948) (2940 . 2949) (t 25451 28830 586933 532000)) ((#("class=\"\" " 0 1 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-name "p" tag-type start)) . 2940) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -7) (undo-tree-id909 . -7) (undo-tree-id910 . -7) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (undo-tree-id918 . -7) (undo-tree-id919 . -7) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) (#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2947) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1)) (25451 28980 432302 59000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -26860) 26859) nil (25451 29271 378542 856000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2947) (undo-tree-id696 . -1) 2948) ((2947 . 2948)) (25451 28979 511427 116000) 0 nil])
([nil nil ((#("font-weight-black" 0 16 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3014) (undo-tree-id1145 . -17) (undo-tree-id1146 . -17) (t 25451 29271 397408 875000)) nil (25451 29294 850129 553000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2955 . 2956) (nil tag-attr t 2947 . 2956) (nil tag-name "p" 2947 . 2956) (nil tag-type start 2947 . 2956) (nil font-lock-face web-mode-html-attr-value-face 2947 . 2956) (2947 . 2956)) ((#("pa-0 ma-0" 0 8 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (rear-nonsticky nil tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2947) (nil tag-name "p" 2955 . 2956) (nil tag-name "p" 2947 . 2955) (nil rear-nonsticky t 2955 . 2956)) (25451 28978 900535 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3030 . 3031) (nil tag-attr t 3014 . 3031) (nil tag-name "p" 3014 . 3031) (nil tag-type start 3014 . 3031) (nil font-lock-face web-mode-html-attr-value-face 3014 . 3031) (3014 . 3031)) nil (25451 29294 850114 639000) 0 nil])
([nil nil ((26948 . 26953) (t 25451 28854 51310 638000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 26948) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5) (undo-tree-id839 . -1) (undo-tree-id840 . -5) (undo-tree-id841 . -5) (undo-tree-id842 . -5) (undo-tree-id843 . -5) (undo-tree-id844 . -5) (undo-tree-id845 . -5) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -5) (undo-tree-id874 . -5) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -1) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -5) (undo-tree-id901 . -5) (undo-tree-id902 . -5)) (25451 28978 680430 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3086 . 3087) (nil tag-name "p" 3086 . 3087) (nil tag-type start 3086 . 3087) (nil tag-attr t 3085 . 3086) (nil tag-attr-end 0 3085 . 3086) (nil tag-name "p" 3085 . 3086) (nil tag-type start 3085 . 3086) (nil font-lock-face web-mode-html-attr-name-face 3085 . 3086) (nil tag-attr t 3076 . 3085) (nil tag-name "p" 3076 . 3085) (nil tag-type start 3076 . 3085) (nil font-lock-face web-mode-html-attr-name-face 3076 . 3085) (nil tag-attr-beg 0 3075 . 3076) (nil tag-attr t 3075 . 3076) (nil tag-name "p" 3075 . 3076) (nil tag-type start 3075 . 3076) (nil font-lock-face web-mode-html-attr-name-face 3075 . 3076) (nil tag-name "p" 3074 . 3075) (nil tag-type start 3074 . 3075) (nil tag-attr t 3073 . 3074) (nil tag-attr-end 0 3073 . 3074) (nil tag-name "p" 3073 . 3074) (nil tag-type start 3073 . 3074) (nil font-lock-face web-mode-html-attr-name-face 3073 . 3074) (nil tag-attr t 3069 . 3073) (nil tag-name "p" 3069 . 3073) (nil tag-type start 3069 . 3073) (nil font-lock-face web-mode-html-attr-name-face 3069 . 3073) (nil tag-attr-beg 0 3068 . 3069) (nil tag-attr t 3068 . 3069) (nil tag-name "p" 3068 . 3069) (nil tag-type start 3068 . 3069) (nil font-lock-face web-mode-html-attr-name-face 3068 . 3069) (nil tag-name "p" 3067 . 3068) (nil tag-type start 3067 . 3068) (nil tag-attr t 3066 . 3067) (nil tag-attr-end 0 3066 . 3067) (nil tag-name "p" 3066 . 3067) (nil tag-type start 3066 . 3067) (nil font-lock-face web-mode-html-attr-name-face 3066 . 3067) (nil tag-attr t 3061 . 3066) (nil tag-name "p" 3061 . 3066) (nil tag-type start 3061 . 3066) (nil font-lock-face web-mode-html-attr-name-face 3061 . 3066) (nil tag-attr-beg 0 3060 . 3061) (nil tag-attr t 3060 . 3061) (nil tag-name "p" 3060 . 3061) (nil tag-type start 3060 . 3061) (nil font-lock-face web-mode-html-attr-name-face 3060 . 3061) (nil tag-name "p" 3054 . 3060) (nil tag-type start 3054 . 3060) (nil tag-attr t 3053 . 3054) (nil tag-attr-end 5 3053 . 3054) (nil tag-name "p" 3053 . 3054) (nil tag-type start 3053 . 3054) (nil font-lock-face web-mode-html-attr-value-face 3053 . 3054) (nil tag-attr t 3040 . 3053) (nil tag-name "p" 3040 . 3053) (nil tag-type start 3040 . 3053) (nil font-lock-face web-mode-html-attr-value-face 3040 . 3053) (3040 . 3087) (t 25451 29294 865726 441000)) nil (25451 29399 750588 166000) 0 nil])
([nil nil ((26953 . 26956)) ((#("fop" 0 2 (part-side css) 2 3 (part-side css)) . 26953) (undo-tree-id783 . -3) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -3) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -3) (undo-tree-id831 . -3) (undo-tree-id832 . -3) (undo-tree-id833 . -3) (undo-tree-id834 . -2) (undo-tree-id835 . -2)) (25451 28978 295789 378000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3065) (undo-tree-id1148 . -1) 3066) nil (25451 29399 750573 810000) 0 nil])
([nil nil ((#("p" 0 1 (part-side css)) . -26955) (undo-tree-id703 . -1) 26956) ((26955 . 26956)) (25451 28977 969421 439000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3053) (undo-tree-id1147 . -1) 3054) nil (25451 29399 750566 572000) 0 nil])
([nil nil ((26955 . 26961)) ((#("nt-wie" 0 4 (part-side css) 4 5 (part-side css) 5 6 (part-side css)) . 26955) (undo-tree-id744 . -6) (undo-tree-id745 . -3) (undo-tree-id746 . -3) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -6) (undo-tree-id766 . -6) (undo-tree-id767 . -6) (undo-tree-id768 . -6) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -6) (undo-tree-id772 . -6) (undo-tree-id773 . -6) (undo-tree-id774 . -6) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -6) (undo-tree-id778 . -6) (undo-tree-id779 . -6) (undo-tree-id780 . -6) (undo-tree-id781 . -3) (undo-tree-id782 . -3)) (25451 28977 662177 156000) 0 nil])
([nil nil (("heyo" . 3104) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (t 25451 29399 767123 268000)) nil (25451 29974 118692 179000) 0 nil])
([nil nil ((#("i" 0 1 (part-side css)) . -26959) (undo-tree-id701 . -1) (#("e" 0 1 (part-side css)) . -26960) (undo-tree-id702 . -1) 26961) ((26959 . 26961)) (25451 28977 230103 866000) 0 nil])
([nil nil ((" " . -3103) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) 3104) nil (25451 29974 118687 961000) 0 nil])
([nil nil ((26959 . 26970)) ((#("eight: 200 " 0 6 (part-side css face web-mode-css-property-name-face) 6 10 (part-side css) 10 11 (part-side css)) . 26959) (undo-tree-id742 . -11) (undo-tree-id743 . -10)) (25451 28976 864600 415000) 0 nil])
([nil nil ((#("font-family: Arial Black, Arial, sans-serif; " 0 13 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 13 19 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 20 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 27 31 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 34 43 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3040) (undo-tree-id1149 . -45) (undo-tree-id1150 . -45)) nil (25451 29974 118683 113000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -26969) (undo-tree-id700 . -1) 26970) ((26969 . 26970)) (25451 28976 589742 387000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3040)) nil (25451 29974 118664 856000) 0 nil])
([nil nil ((26969 . 26972)) ((#("px " 0 2 (part-side css) 2 3 (part-side css)) . 26969) (undo-tree-id716 . -3) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3)) (25451 28976 255990 324000) 0 nil])
([nil nil ((#("=" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -3012) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#("\"" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3013) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (#("f" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3014) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("o" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3015) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("n" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3016) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (#("t" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3017) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (#("-" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3018) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("w" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3019) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (#("e" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3020) (undo-tree-id1598 . -1) (#("i" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3021) (undo-tree-id1599 . -1) (#("g" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3022) (undo-tree-id1600 . -1) (#("h" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3023) (undo-tree-id1601 . -1) (#("t" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3024) (undo-tree-id1602 . -1) (#("-" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3025) (undo-tree-id1603 . -1) (#("l" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3026) (undo-tree-id1604 . -1) (#("i" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3027) (undo-tree-id1605 . -1) (#("g" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3028) (undo-tree-id1606 . -1) (#("h" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3029) (undo-tree-id1607 . -1) (#("t" 0 1 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3030) (undo-tree-id1608 . -1) (#("\"" 0 1 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3031) (undo-tree-id1609 . -1) (#(" " 0 1 (tag-name "p" tag-type start)) . -3032) (undo-tree-id1610 . -1) 3033 (t 25451 29974 138339 3000)) nil (25451 30023 91150 490000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -26971) (undo-tree-id699 . -1) 26972) ((26971 . 26972)) (25451 28976 29638 395000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3007) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (#("l" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3008) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (#("a" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3009) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#("s" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3010) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (#("s" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face)) . -3011) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 3012) nil (25451 30023 90939 236000) 0 nil])
([nil nil ((26971 . 26973)) ((#(" ;" 0 1 (part-side css) 1 2 (part-side css)) . 26971) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2)) (25451 28975 794945 589000) 0 nil])
([nil nil ((3363 . 3382) (t 25451 30023 106933 177000)) nil (25451 30044 431936 453000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -26971) (undo-tree-id697 . -1) (#(";" 0 1 (part-side css)) . -26972) (undo-tree-id698 . -1) 26973) ((26971 . 26973)) (25451 28975 401892 433000) 0 nil])
([nil nil ((3382 . 3389)) nil (25451 30044 431931 12000) 0 nil])
([nil nil ((26971 . 26972)) ((#(";" 0 1 (part-side css)) . 26971)) (25451 28974 181515 188000) 0 nil])
([nil nil ((3386 . 3406) (3387 . 3405) (#("                    " 0 20 (face whitespace-trailing)) . 3386) (3386 . 3406) (3386 . 3387) ("                  " . 3386) (3385 . 3404)) nil (25451 30044 431923 953000) 0 nil])
([nil nil ((#("
    font-weight: 200px;" 0 1 (part-side css) 1 5 (part-side css) 5 17 (part-side css face web-mode-css-property-name-face) 17 24 (part-side css)) . 26948) (undo-tree-id707 . -24) (undo-tree-id708 . -10) (undo-tree-id709 . -1) (undo-tree-id710 . -24) (t 25451 28889 383869 833000)) ((26948 . 26972)) (25451 28973 903377 154000) 0 nil])
([nil nil ((#("                    <span
" 20 21 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 21 25 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 25 26 (tag-name "span" tag-type start)) . 3456) (3433 . 3456) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3407) (undo-tree-id1627 . -22) (3430 . 3456) 3429) nil (25451 30044 431910 752000) 0 nil])
([nil nil ((#("tablestats-text" 0 15 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3077) (undo-tree-id704 . -15) (undo-tree-id705 . -6) (undo-tree-id706 . -15)) ((3077 . 3092)) (25451 28973 567431 802000) 0 nil])
([nil nil (("                      class=\"font-weight-light\"
" . 3504) (undo-tree-id1623 . -46) (undo-tree-id1624 . -47) (undo-tree-id1625 . -46) (3481 . 3504) (#("                  </p>
" 0 17 (tag-name "span" tag-type start) 17 18 (tag-name "span" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3433) (undo-tree-id1626 . -22) (3456 . 3504) 3455) nil (25451 30044 431892 551000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3093 . 3094) (nil tag-attr t 3077 . 3094) (nil tag-name "span" 3077 . 3094) (nil tag-type start 3077 . 3094) (nil font-lock-face web-mode-html-attr-value-face 3077 . 3094) (3077 . 3094)) ((#("font-weight-light" 0 16 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (rear-nonsticky nil tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3077) (nil tag-name "span" 3093 . 3094) (nil tag-name "span" 3077 . 3093) (nil rear-nonsticky t 3093 . 3094) (t 25451 28954 520875 535000)) (25451 28954 495974 346000) 0 nil])
([nil nil (("                      v-bind=\"attrs\"
" . 3541) (3518 . 3541) (#("                  </p>
" 0 17 (tag-name "span" tag-type start) 17 18 (tag-name "span" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3481) (undo-tree-id1622 . -22) (3504 . 3541) 3503) nil (25451 30044 431861 103000) 0 nil])
nil
([nil nil (("                      v-on=\"on\"
" . 3573) (3550 . 3573) (#("                  </p>
" 0 17 (tag-name "span" tag-type start) 17 18 (tag-name "span" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3518) (undo-tree-id1621 . -22) (3541 . 3573) 3540) nil (25451 30044 431845 228000) 0 nil])
([nil nil ((#("                    >(
" 21 22 (face (rainbow-delimiters-depth-2-face))) . 3596) (3573 . 3596) (#("                  </p>
" 0 17 (tag-name "span" tag-type start) 17 18 (tag-name "span" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3550) (3573 . 3596) 3572) nil (25451 30044 431828 630000) 0 nil])
([nil nil ((#("                      {{\" \" + getDataDiff()}}
" 22 23 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 23 24 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face)) 24 30 (block-side t) 30 41 (block-side t face web-mode-function-call-face) 41 42 (block-side t face (rainbow-delimiters-depth-4-face)) 42 43 (block-side t face (rainbow-delimiters-depth-4-face)) 43 44 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face)) 44 45 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face))) . 3642) (3619 . 3642) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3573) (undo-tree-id1620 . -22) (3596 . 3642) 3595) nil (25451 30044 431817 574000) 0 nil])
([nil nil ((#("                      <v-icon
" 22 23 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 23 29 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 29 30 (tag-name "v-icon" tag-type start)) . 3672) (3649 . 3672) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3619) (undo-tree-id1619 . -22) (3642 . 3672) 3641) nil (25451 30044 431801 90000) 0 nil])
([nil nil (("                        small
" . 3702) (3679 . 3702) (#("                  </p>
" 0 17 (tag-name "v-icon" tag-type start) 17 18 (tag-name "v-icon" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3649) (undo-tree-id1618 . -22) (3672 . 3702) 3671) nil (25451 30044 431784 257000) 0 nil])
([nil nil ((#("                        class=\"tablestats\"
" 41 42 (rear-nonsticky t)) . 3745) (3722 . 3745) (#("                  </p>
" 0 17 (tag-name "v-icon" tag-type start) 17 18 (tag-name "v-icon" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3679) (undo-tree-id1617 . -22) (3702 . 3745) 3701) nil (25451 30044 431767 566000) 0 nil])
([nil nil (("                        dense
" . 3775) (3752 . 3775) (#("                  </p>
" 0 17 (tag-name "v-icon" tag-type start) 17 18 (tag-name "v-icon" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3722) (undo-tree-id1616 . -22) (3745 . 3775) 3744) nil (25451 30044 431751 612000) 0 nil])
([nil nil (("                      >
" . 3799) (3776 . 3799) (#("                  </p>
" 0 17 (tag-name "v-icon" tag-type start) 17 18 (tag-name "v-icon" tag-type start tag-end t) 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3752) (undo-tree-id1615 . -22) (3775 . 3799) 3774) nil (25451 30044 431735 907000) 0 nil])
([nil nil (("                        mdi-information
" . 3839) (3816 . 3839) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3776) (undo-tree-id1614 . -22) (3799 . 3839) 3798) nil (25451 30044 431719 402000) 0 nil])
([nil nil ((#("                      </v-icon>
" 22 23 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 23 24 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 24 30 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 30 31 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3871) (3848 . 3871) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3816) (undo-tree-id1613 . -22) (3839 . 3871) 3838) nil (25451 30044 431701 411000) 0 nil])
([nil nil ((#("                      )
" 22 23 (face (rainbow-delimiters-unmatched-face))) . 3895) (3872 . 3895) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3848) (undo-tree-id1612 . -22) (3871 . 3895) 3870) nil (25451 30044 431632 801000) 0 nil])
([nil nil ((#("                    </span>
" 20 21 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 22 26 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 26 27 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3923) (3900 . 3923) (#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3872) (undo-tree-id1611 . -22) (3895 . 3923) 3894) nil (25451 30044 440447 426000) 0 nil])
([nil nil ((#("<p>" 0 1 (tag-name "p" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 2 3 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3382) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3)) nil (25451 30056 175673 70000) 0 nil] [nil nil ((nil rear-nonsticky nil 3432 . 3433) (nil tag-name "p" 3432 . 3433) (nil tag-type start 3432 . 3433) (nil tag-end t 3432 . 3433) (nil font-lock-face web-mode-html-tag-bracket-face 3432 . 3433) (nil tag-attr t 3431 . 3432) (nil tag-attr-end 5 3431 . 3432) (nil tag-name "p" 3431 . 3432) (nil tag-type start 3431 . 3432) (nil font-lock-face web-mode-html-attr-value-face 3431 . 3432) (nil rear-nonsticky t 3430 . 3431) (nil tag-attr t 3430 . 3431) (nil tag-name "p" 3430 . 3431) (nil tag-type start 3430 . 3431) (nil font-lock-face web-mode-html-attr-value-face 3430 . 3431) (nil tag-attr t 3417 . 3430) (nil tag-name "p" 3417 . 3430) (nil tag-type start 3417 . 3430) (nil font-lock-face web-mode-html-attr-value-face 3417 . 3430) (nil tag-attr t 3416 . 3417) (nil tag-name "p" 3416 . 3417) (nil tag-type start 3416 . 3417) (nil font-lock-face web-mode-html-attr-value-face 3416 . 3417) (nil tag-attr t 3415 . 3416) (nil tag-name "p" 3415 . 3416) (nil tag-type start 3415 . 3416) (nil font-lock-face web-mode-html-attr-value-face 3415 . 3416) (nil tag-attr t 3414 . 3415) (nil tag-name "p" 3414 . 3415) (nil tag-type start 3414 . 3415) (nil font-lock-face web-mode-html-attr-equal-face 3414 . 3415) (nil tag-attr t 3413 . 3414) (nil tag-name "p" 3413 . 3414) (nil tag-type start 3413 . 3414) (nil font-lock-face web-mode-html-attr-name-face 3413 . 3414) (nil tag-attr t 3412 . 3413) (nil tag-name "p" 3412 . 3413) (nil tag-type start 3412 . 3413) (nil font-lock-face web-mode-html-attr-name-face 3412 . 3413) (nil tag-attr t 3411 . 3412) (nil tag-name "p" 3411 . 3412) (nil tag-type start 3411 . 3412) (nil font-lock-face web-mode-html-attr-name-face 3411 . 3412) (nil tag-attr t 3410 . 3411) (nil tag-name "p" 3410 . 3411) (nil tag-type start 3410 . 3411) (nil font-lock-face web-mode-html-attr-name-face 3410 . 3411) (nil tag-attr-beg 0 3409 . 3410) (nil tag-attr t 3409 . 3410) (nil tag-name "p" 3409 . 3410) (nil tag-type start 3409 . 3410) (nil font-lock-face web-mode-html-attr-name-face 3409 . 3410) (nil tag-name "p" 3408 . 3409) (nil tag-type start 3408 . 3409) (nil tag-name "p" 3407 . 3408) (nil tag-type start 3407 . 3408) (nil font-lock-face web-mode-html-tag-face 3407 . 3408) (nil tag-name "p" 3406 . 3407) (nil tag-type start 3406 . 3407) (nil tag-beg 17 3406 . 3407) (nil font-lock-face web-mode-html-tag-bracket-face 3406 . 3407) (3406 . 3433)) ((#("<p style=\"display:inline;\">" 0 1 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 2 3 (tag-name "p" tag-type start) 3 4 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 7 8 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 8 9 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 9 10 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 11 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (rear-nonsticky nil tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3406) (undo-tree-id1628 . -27) (nil tag-name "p" 3406 . 3407) (nil tag-name "p" 3407 . 3408) (nil tag-name "p" 3408 . 3409) (nil tag-name "p" 3409 . 3410) (nil tag-name "p" 3410 . 3411) (nil tag-name "p" 3411 . 3412) (nil tag-name "p" 3412 . 3413) (nil tag-name "p" 3413 . 3414) (nil tag-name "p" 3414 . 3415) (nil tag-name "p" 3415 . 3416) (nil tag-name "p" 3416 . 3417) (nil tag-name "p" 3417 . 3430) (nil tag-name "p" 3430 . 3431) (nil rear-nonsticky nil 3430 . 3431) (nil tag-name "p" 3431 . 3432) (nil tag-name "p" 3432 . 3433) (nil rear-nonsticky t 3432 . 3433)) (25451 30044 431560 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3408 . 3409) (nil tag-name "p" 3408 . 3409) (nil tag-type start 3408 . 3409) (nil tag-end t 3408 . 3409) (nil font-lock-face web-mode-html-tag-bracket-face 3408 . 3409) (nil tag-attr t 3407 . 3408) (nil tag-attr-end 5 3407 . 3408) (nil tag-name "p" 3407 . 3408) (nil tag-type start 3407 . 3408) (nil font-lock-face web-mode-html-attr-value-face 3407 . 3408) (nil rear-nonsticky t 3406 . 3407) (nil tag-attr t 3406 . 3407) (nil tag-name "p" 3406 . 3407) (nil tag-type start 3406 . 3407) (nil font-lock-face web-mode-html-attr-value-face 3406 . 3407) (nil tag-attr t 3393 . 3406) (nil tag-name "p" 3393 . 3406) (nil tag-type start 3393 . 3406) (nil font-lock-face web-mode-html-attr-value-face 3393 . 3406) (nil tag-attr t 3392 . 3393) (nil tag-name "p" 3392 . 3393) (nil tag-type start 3392 . 3393) (nil font-lock-face web-mode-html-attr-value-face 3392 . 3393) (nil tag-attr t 3391 . 3392) (nil tag-name "p" 3391 . 3392) (nil tag-type start 3391 . 3392) (nil font-lock-face web-mode-html-attr-value-face 3391 . 3392) (nil tag-attr t 3390 . 3391) (nil tag-name "p" 3390 . 3391) (nil tag-type start 3390 . 3391) (nil font-lock-face web-mode-html-attr-equal-face 3390 . 3391) (nil tag-attr t 3389 . 3390) (nil tag-name "p" 3389 . 3390) (nil tag-type start 3389 . 3390) (nil font-lock-face web-mode-html-attr-name-face 3389 . 3390) (nil tag-attr t 3388 . 3389) (nil tag-name "p" 3388 . 3389) (nil tag-type start 3388 . 3389) (nil font-lock-face web-mode-html-attr-name-face 3388 . 3389) (nil tag-attr t 3387 . 3388) (nil tag-name "p" 3387 . 3388) (nil tag-type start 3387 . 3388) (nil font-lock-face web-mode-html-attr-name-face 3387 . 3388) (nil tag-attr t 3386 . 3387) (nil tag-name "p" 3386 . 3387) (nil tag-type start 3386 . 3387) (nil font-lock-face web-mode-html-attr-name-face 3386 . 3387) (nil tag-attr-beg 0 3385 . 3386) (nil tag-attr t 3385 . 3386) (nil tag-name "p" 3385 . 3386) (nil tag-type start 3385 . 3386) (nil font-lock-face web-mode-html-attr-name-face 3385 . 3386) (nil tag-name "p" 3384 . 3385) (nil tag-type start 3384 . 3385) (nil tag-name "p" 3383 . 3384) (nil tag-type start 3383 . 3384) (nil font-lock-face web-mode-html-tag-face 3383 . 3384) (nil tag-name "p" 3382 . 3383) (nil tag-type start 3382 . 3383) (nil tag-beg 17 3382 . 3383) (nil font-lock-face web-mode-html-tag-bracket-face 3382 . 3383) (3382 . 3409)) nil (25451 30056 175666 857000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3444 . 3445) (nil rear-nonsticky t 3444 . 3445) (nil block-side t 3444 . 3445) (nil block-end t 3444 . 3445) (nil block-token delimiter-end 3444 . 3445) (nil font-lock-face web-mode-block-delimiter-face 3444 . 3445) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3444 . 3445) (nil block-side t 3443 . 3444) (nil block-token delimiter-end 3443 . 3444) (nil font-lock-face web-mode-block-delimiter-face 3443 . 3444) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3443 . 3444) (nil block-side t 3442 . 3443) (nil block-side t 3441 . 3442) (nil face web-mode-variable-name-face 3441 . 3442) (nil block-side t 3440 . 3441) (nil face web-mode-variable-name-face 3440 . 3441) (nil block-side t 3439 . 3440) (nil face web-mode-variable-name-face 3439 . 3440) (nil block-side t 3438 . 3439) (nil face web-mode-variable-name-face 3438 . 3439) (nil block-side t 3437 . 3438) (nil face web-mode-variable-name-face 3437 . 3438) (nil block-side t 3436 . 3437) (nil face web-mode-variable-name-face 3436 . 3437) (nil block-side t 3435 . 3436) (nil face web-mode-variable-name-face 3435 . 3436) (nil block-side t 3434 . 3435) (nil face web-mode-variable-name-face 3434 . 3435) (nil block-side t 3433 . 3434) (nil face web-mode-variable-name-face 3433 . 3434) (nil block-side t 3432 . 3433) (nil block-side t 3431 . 3432) (nil block-token delimiter-beg 3431 . 3432) (nil font-lock-face web-mode-block-delimiter-face 3431 . 3432) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3431 . 3432) (nil block-beg 0 3430 . 3431) (nil block-controls 0 3430 . 3431) (nil block-side t 3430 . 3431) (nil block-token delimiter-beg 3430 . 3431) (nil font-lock-face web-mode-block-delimiter-face 3430 . 3431) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3430 . 3431) (3430 . 3445)) nil (25451 30056 175651 606000) 0 nil])
([nil nil ((#("         <span class=\"tablestats-text\">
                {{ dataTSize }}
              </span>" 9 10 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 37 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 56 57 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 57 58 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 58 59 (block-side t) 59 60 (block-side t face web-mode-variable-name-face) 60 61 (block-side t face web-mode-variable-name-face) 61 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t face web-mode-variable-name-face) 63 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t face web-mode-variable-name-face) 65 66 (block-side t face web-mode-variable-name-face) 66 67 (block-side t face web-mode-variable-name-face) 67 68 (block-side t face web-mode-variable-name-face) 68 69 (block-side t) 69 70 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 70 71 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 86 87 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 87 88 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 88 92 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 92 93 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3180) (undo-tree-id1648 . -93) (undo-tree-id1649 . -40) (undo-tree-id1650 . -71) (undo-tree-id1651 . -93)) nil (25451 30056 175641 582000) 0 nil])
([nil nil (("
" . -3174) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (" " . -3175) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (" " . -3176) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (" " . -3177) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (" " . -3178) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (" " . -3179) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) 3180) nil (25451 30056 175631 64000) 0 nil])
([nil nil ((4050 . 4064) (" " . 4050) (4049 . 4050) (t 25451 30056 195333 472000)) nil (25451 30216 917368 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4090 . 4091) (nil tag-name "p" 4090 . 4091) (nil tag-type start 4090 . 4091) (nil tag-end t 4090 . 4091) (nil font-lock-face web-mode-html-tag-bracket-face 4090 . 4091) (nil tag-attr t 4089 . 4090) (nil tag-attr-end 5 4089 . 4090) (nil tag-name "p" 4089 . 4090) (nil tag-type start 4089 . 4090) (nil font-lock-face web-mode-html-attr-value-face 4089 . 4090) (nil rear-nonsticky t 4088 . 4089) (nil tag-attr t 4088 . 4089) (nil tag-name "p" 4088 . 4089) (nil tag-type start 4088 . 4089) (nil font-lock-face web-mode-html-attr-value-face 4088 . 4089) (nil tag-attr t 4075 . 4088) (nil tag-name "p" 4075 . 4088) (nil tag-type start 4075 . 4088) (nil font-lock-face web-mode-html-attr-value-face 4075 . 4088) (nil tag-attr t 4074 . 4075) (nil tag-name "p" 4074 . 4075) (nil tag-type start 4074 . 4075) (nil font-lock-face web-mode-html-attr-value-face 4074 . 4075) (nil tag-attr t 4073 . 4074) (nil tag-name "p" 4073 . 4074) (nil tag-type start 4073 . 4074) (nil font-lock-face web-mode-html-attr-value-face 4073 . 4074) (nil tag-attr t 4072 . 4073) (nil tag-name "p" 4072 . 4073) (nil tag-type start 4072 . 4073) (nil font-lock-face web-mode-html-attr-equal-face 4072 . 4073) (nil tag-attr t 4071 . 4072) (nil tag-name "p" 4071 . 4072) (nil tag-type start 4071 . 4072) (nil font-lock-face web-mode-html-attr-name-face 4071 . 4072) (nil tag-attr t 4070 . 4071) (nil tag-name "p" 4070 . 4071) (nil tag-type start 4070 . 4071) (nil font-lock-face web-mode-html-attr-name-face 4070 . 4071) (nil tag-attr t 4069 . 4070) (nil tag-name "p" 4069 . 4070) (nil tag-type start 4069 . 4070) (nil font-lock-face web-mode-html-attr-name-face 4069 . 4070) (nil tag-attr t 4068 . 4069) (nil tag-name "p" 4068 . 4069) (nil tag-type start 4068 . 4069) (nil font-lock-face web-mode-html-attr-name-face 4068 . 4069) (nil tag-attr-beg 0 4067 . 4068) (nil tag-attr t 4067 . 4068) (nil tag-name "p" 4067 . 4068) (nil tag-type start 4067 . 4068) (nil font-lock-face web-mode-html-attr-name-face 4067 . 4068) (nil tag-name "p" 4066 . 4067) (nil tag-type start 4066 . 4067) (nil tag-name "p" 4065 . 4066) (nil tag-type start 4065 . 4066) (nil font-lock-face web-mode-html-tag-face 4065 . 4066) (nil tag-name "p" 4064 . 4065) (nil tag-type start 4064 . 4065) (nil tag-beg 17 4064 . 4065) (nil font-lock-face web-mode-html-tag-bracket-face 4064 . 4065) (4064 . 4091)) nil (25451 30216 917363 493000) 0 nil])
([nil nil ((4091 . 4108)) nil (25451 30216 917349 981000) 0 nil])
([nil nil ((4138 . 4155)) nil (25451 30216 917348 810000) 0 nil])
([nil nil (("  " . -4153) (4155 . 4159)) nil (25451 30216 917347 612000) 0 nil])
([nil nil ((4225 . 4239) (" " . 4224) (undo-tree-id1654 . -1) (4225 . 4226)) nil (25451 30216 917345 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4265 . 4266) (nil tag-name "p" 4265 . 4266) (nil tag-type start 4265 . 4266) (nil tag-end t 4265 . 4266) (nil font-lock-face web-mode-html-tag-bracket-face 4265 . 4266) (nil tag-attr t 4264 . 4265) (nil tag-attr-end 5 4264 . 4265) (nil tag-name "p" 4264 . 4265) (nil tag-type start 4264 . 4265) (nil font-lock-face web-mode-html-attr-value-face 4264 . 4265) (nil rear-nonsticky t 4263 . 4264) (nil tag-attr t 4263 . 4264) (nil tag-name "p" 4263 . 4264) (nil tag-type start 4263 . 4264) (nil font-lock-face web-mode-html-attr-value-face 4263 . 4264) (nil tag-attr t 4250 . 4263) (nil tag-name "p" 4250 . 4263) (nil tag-type start 4250 . 4263) (nil font-lock-face web-mode-html-attr-value-face 4250 . 4263) (nil tag-attr t 4249 . 4250) (nil tag-name "p" 4249 . 4250) (nil tag-type start 4249 . 4250) (nil font-lock-face web-mode-html-attr-value-face 4249 . 4250) (nil tag-attr t 4248 . 4249) (nil tag-name "p" 4248 . 4249) (nil tag-type start 4248 . 4249) (nil font-lock-face web-mode-html-attr-value-face 4248 . 4249) (nil tag-attr t 4247 . 4248) (nil tag-name "p" 4247 . 4248) (nil tag-type start 4247 . 4248) (nil font-lock-face web-mode-html-attr-equal-face 4247 . 4248) (nil tag-attr t 4246 . 4247) (nil tag-name "p" 4246 . 4247) (nil tag-type start 4246 . 4247) (nil font-lock-face web-mode-html-attr-name-face 4246 . 4247) (nil tag-attr t 4245 . 4246) (nil tag-name "p" 4245 . 4246) (nil tag-type start 4245 . 4246) (nil font-lock-face web-mode-html-attr-name-face 4245 . 4246) (nil tag-attr t 4244 . 4245) (nil tag-name "p" 4244 . 4245) (nil tag-type start 4244 . 4245) (nil font-lock-face web-mode-html-attr-name-face 4244 . 4245) (nil tag-attr t 4243 . 4244) (nil tag-name "p" 4243 . 4244) (nil tag-type start 4243 . 4244) (nil font-lock-face web-mode-html-attr-name-face 4243 . 4244) (nil tag-attr-beg 0 4242 . 4243) (nil tag-attr t 4242 . 4243) (nil tag-name "p" 4242 . 4243) (nil tag-type start 4242 . 4243) (nil font-lock-face web-mode-html-attr-name-face 4242 . 4243) (nil tag-name "p" 4241 . 4242) (nil tag-type start 4241 . 4242) (nil tag-name "p" 4240 . 4241) (nil tag-type start 4240 . 4241) (nil font-lock-face web-mode-html-tag-face 4240 . 4241) (nil tag-name "p" 4239 . 4240) (nil tag-type start 4239 . 4240) (nil tag-beg 17 4239 . 4240) (nil font-lock-face web-mode-html-tag-bracket-face 4239 . 4240) (4239 . 4266)) nil (25451 30216 917333 471000) 0 nil])
([nil nil ((4266 . 4283)) nil (25451 30216 917320 164000) 0 nil])
([nil nil ((4300 . 4317)) nil (25451 30216 917319 128000) 0 nil])
([nil nil ((4317 . 4318)) nil (25451 30216 917317 650000) 0 nil])
([nil nil (("  " . -4315) (4318 . 4321)) nil (25451 30216 917309 846000) 0 nil])
([nil nil (("mdi-table-column" . 2964) (undo-tree-id1655 . -16) (undo-tree-id1656 . -16) (t 25451 30216 941266 624000)) nil (25451 30317 449623 499000) 0 nil])
([nil nil ((2964 . 2980)) nil (25451 30317 449605 618000) 0 nil])
([nil nil (("mdi-table-column" . 4024) (undo-tree-id1657 . -16) (undo-tree-id1658 . -16) (t 25451 30317 466467 504000)) nil (25451 30363 40703 14000) 0 nil])
([nil nil ((4024 . 4043)) nil (25451 30363 40685 371000) 0 nil])
([nil nil (("mdi-table-column" . 3149) (undo-tree-id1659 . -16) (undo-tree-id1660 . -16) (t 25451 30363 59010 479000)) nil (25451 30457 220261 383000) 0 nil])
([nil nil ((3149 . 3160)) nil (25451 30457 220244 80000) 0 nil])
([nil nil (("mdi-table-column" . 4197) (undo-tree-id1661 . -16) (undo-tree-id1662 . -16) (undo-tree-id1663 . -16) (undo-tree-id1664 . -16) (t 25451 30457 244253 532000)) nil (25451 30604 374606 713000) 0 nil])
([nil nil ((4197 . 4211)) nil (25451 30604 374586 908000) 0 nil])
([nil nil ((#("class=\"font-weight-light\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 24 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3390) (undo-tree-id1678 . -25) (undo-tree-id1679 . -25) (t 25451 30604 396192 5000)) nil (25451 30859 766239 203000) 0 nil])
([nil nil ((3390 . 3398)) nil (25451 30859 766235 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3412 . 3413) (nil tag-attr t 3407 . 3413) (nil tag-name "span" 3407 . 3413) (nil tag-type start 3407 . 3413) (nil font-lock-face web-mode-html-attr-value-face 3407 . 3413) (nil tag-attr t 3397 . 3407) (nil tag-name "span" 3397 . 3407) (nil tag-type start 3397 . 3407) (nil font-lock-face web-mode-html-attr-value-face 3397 . 3407) (3397 . 3413)) nil (25451 30859 766233 981000) 0 nil])
([nil nil ((#("6" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3409) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) 3410) nil (25451 30859 766228 948000) 0 nil])
([nil nil ((3409 . 3410)) nil (25451 30859 766198 887000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3409) (undo-tree-id1680 . -1) 3410 (t 25451 30859 785948 975000)) nil (25451 30871 604592 702000) 0 nil])
([nil nil ((3409 . 3410)) nil (25451 30871 604577 920000) 0 nil])
([nil nil ((3107 . 3108) (t 25451 30871 622190 597000)) nil (25451 30891 163730 391000) 0 nil])
([nil nil (("|" . -3107) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) 3108 (t 25451 30891 182585 880000)) nil (25451 30895 974400 275000) 0 nil])
([nil nil ((4237 . 4246) (t 25451 30895 994682 375000)) nil (25451 31342 235369 788000) 0 nil])
([nil nil ((4244 . 4260) (t 25451 31348 130758 193000)) nil (25451 31378 799306 751000) 0 nil] [nil nil ((nil rear-nonsticky nil 4256 . 4257) (nil tag-attr t 4244 . 4257) (nil tag-name "p" 4244 . 4257) (nil tag-type start 4244 . 4257) (nil font-lock-face web-mode-html-attr-value-face 4244 . 4257) (4244 . 4257)) ((#("text-truncate" 0 12 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (rear-nonsticky nil tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4244) (nil tag-name "p" 4256 . 4257) (nil tag-name "p" 4244 . 4256) (nil rear-nonsticky t 4256 . 4257)) (25451 31341 601719 613000) 0 nil])
([nil nil ((4260 . 4264)) nil (25451 31378 799304 641000) 0 nil])
([nil nil ((202 . 208) (t 25451 30946 687681 724000)) ((#("col-2 " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 202) (undo-tree-id1938 . -6) (undo-tree-id1939 . -6) (undo-tree-id1940 . -6) (undo-tree-id1941 . -6) (undo-tree-id1942 . -6) (undo-tree-id1943 . -6) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (undo-tree-id1958 . -6)) (25451 31340 914456 663000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4263) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) 4264) nil (25451 31378 799298 810000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -202) (undo-tree-id1694 . -1) (#("o" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -203) (undo-tree-id1695 . -1) (#("l" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -204) (undo-tree-id1696 . -1) (#("-" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -205) (undo-tree-id1697 . -1) (#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -206) (undo-tree-id1698 . -1) (#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -207) (undo-tree-id1699 . -1) 208 (t 25451 31083 154234 143000)) ((202 . 208)) (25451 31340 155584 685000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4262) (undo-tree-id1968 . -1) 4263 (t 25451 31378 819254 474000)) nil (25451 31391 354663 193000) 0 nil])
([nil nil ((202 . 208) (t 25451 31091 826390 371000)) ((#("col-4 " 0 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 202) (undo-tree-id1937 . -5)) (25451 31339 845556 632000) 0 nil])
([nil nil ((4262 . 4263)) nil (25451 31420 393902 834000) 0 nil])
([nil nil ((2926 . 2927)) ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2926) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1)) (25451 31339 488403 532000) 0 nil])
([nil nil ((4289 . 4306)) nil (25451 31460 203095 992000) 0 nil] [nil nil ((4286 . 4293) (t 25451 31391 375456 184000)) ((#("-block " 0 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4286) (undo-tree-id1970 . -5) (undo-tree-id1971 . -7) (undo-tree-id1972 . -6) (undo-tree-id1973 . -6) (undo-tree-id1974 . -6) (undo-tree-id1975 . -6) (undo-tree-id1976 . -6) (undo-tree-id1977 . -6) (undo-tree-id1978 . -6) (undo-tree-id1979 . -6) (undo-tree-id1980 . -7) (undo-tree-id1981 . -7) (undo-tree-id1982 . -7) (undo-tree-id1983 . -7) (undo-tree-id1984 . -7) (undo-tree-id1985 . -7) (undo-tree-id1986 . -7) (undo-tree-id1987 . -7) (undo-tree-id1988 . -7) (undo-tree-id1989 . -7) (undo-tree-id1990 . -7) (undo-tree-id1991 . -7)) (25451 31419 986209 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2931 . 2932) (nil tag-attr t 2927 . 2932) (nil tag-name "v-col" 2927 . 2932) (nil tag-type start 2927 . 2932) (nil font-lock-face web-mode-html-attr-value-face 2927 . 2932) (2927 . 2932)) ((#("col-4" 0 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (rear-nonsticky nil tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2927) (undo-tree-id1909 . -5) (undo-tree-id1910 . -5) (undo-tree-id1911 . -5) (undo-tree-id1912 . -5) (undo-tree-id1913 . -5) (undo-tree-id1914 . -5) (undo-tree-id1915 . -5) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (nil tag-name "v-col" 2931 . 2932) (nil tag-name "v-col" 2927 . 2931) (nil rear-nonsticky t 2931 . 2932)) (25451 31339 211267 467000) 0 nil])
([nil nil ((4306 . 4308)) nil (25451 31492 829310 310000) 0 nil] [nil nil ((#("p" 0 1 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face)) . -4235) (undo-tree-id2010 . -1) 4236) ((4235 . 4236)) (25451 31459 905355 342000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4292) (undo-tree-id1969 . -1) 4293) ((4292 . 4293) (t 25451 31411 647780 277000)) (25451 31411 629515 332000) 0 nil])
([nil nil ((#("4" 0 1 (rear-nonsticky t tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2931) (undo-tree-id1700 . -1) (undo-tree-id1702 . -1) (undo-tree-id1704 . -1) 2932 (t 25451 31118 718870 778000)) ((2931 . 2932)) (25451 31338 813330 641000) 0 nil])
([nil nil ((#("p" 0 1 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -4307) (undo-tree-id2091 . -1) 4308) nil (25451 31492 829309 240000) 0 nil])
([nil nil ((4235 . 4238)) ((#("div" 0 1 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 1 2 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 2 3 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face)) . 4235) (undo-tree-id2054 . -3) (undo-tree-id2055 . -3) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) (undo-tree-id2062 . -3) (undo-tree-id2063 . -3) (undo-tree-id2064 . -3) (undo-tree-id2065 . -3) (undo-tree-id2066 . -3) (undo-tree-id2067 . -3) (undo-tree-id2068 . -3) (undo-tree-id2069 . -3) (undo-tree-id2070 . -3) (undo-tree-id2071 . -3) (undo-tree-id2072 . -3) (undo-tree-id2073 . -3) (undo-tree-id2074 . -3)) (25451 31459 342430 970000) 0 nil])
nil
([nil nil ((2931 . 2932)) ((#("8" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2931) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1)) (25451 31337 581997 839000) 0 nil])
([nil nil ((4307 . 4310)) nil (25451 31492 829306 992000) 0 nil])
([nil nil ((#("d" 0 1 (tag-name "d" tag-type start font-lock-face web-mode-html-tag-face)) . -4235) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (#("i" 0 1 (tag-name "di" tag-type start font-lock-face web-mode-html-tag-face)) . -4236) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (#("v" 0 1 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face)) . -4237) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) 4238) ((4235 . 4238)) (25451 31458 821722 609000) 0 nil])
([nil nil ((#("            <v-col class=\"text-left pa-0 ma-0 col-8\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 46 51 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2935) (undo-tree-id1713 . -46) (undo-tree-id1714 . -53) (undo-tree-id1715 . -51) (undo-tree-id1716 . -54) (2892 . 2935) (#("          <div class=\"ml-4 datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 40 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2838) (2881 . 2935) 2932 (t 25451 31132 123108 11000)) ((#("            <v-col class=\"text-left pa-0 ma-0 col-8\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 45 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 46 51 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2881) (undo-tree-id1876 . -53) (undo-tree-id1877 . -54) (undo-tree-id1878 . -45) (2838 . 2881) (#("          <div class=\"ml-4 datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 40 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2892) (undo-tree-id1879 . -43) (2935 . 2989)) (25451 31336 746690 579000) 0 nil])
([nil nil ((#("b" 0 1 (tag-name "dib" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -4309) (undo-tree-id2090 . -1) 4310) nil (25451 31492 829305 762000) 0 nil])
([nil nil ((4235 . 4239)) ((#("span" 0 4 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face)) . 4235)) (25451 31458 507568 500000) 0 nil])
([nil nil ((#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2838) (2819 . 2838) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2802) (undo-tree-id1712 . -18) (2821 . 2838) 2820) ((#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2821) (2802 . 2821) (#("          </v-col>
" 10 11 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2819) (2838 . 2855)) (25451 31336 207220 105000) 0 nil])
([nil nil ((4309 . 4317)) nil (25451 31492 829303 612000) 0 nil])
([nil nil ((4361 . 4362)) ((#("s" 0 1 (tag-name "ps" tag-type end font-lock-face web-mode-html-tag-face)) . 4361) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1)) (25451 31458 164347 178000) 0 nil])
([nil nil ((#("            <v-col class=\"text-left col-4 pa-0 ma-0\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 51 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 220) (undo-tree-id1708 . -53) (undo-tree-id1709 . -54) (undo-tree-id1710 . -41) (182 . 220) (#("          <div class=\"datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 35 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 128) (undo-tree-id1711 . -37) (166 . 220) 219) ((#("            <v-col class=\"text-left col-4 pa-0 ma-0\">
" 12 13 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type start) 19 20 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 20 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 25 35 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 42 51 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 166) (undo-tree-id1875 . -53) (128 . 166) (#("          <div class=\"datatable-bar\">
" 10 11 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 14 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 14 15 (tag-name "div" tag-type start) 15 16 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 21 35 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 182) (220 . 274)) (25451 31336 17748 212000) 0 nil])
([nil nil ((4312 . 4330) (4313 . 4329) (#("                  " 0 18 (face whitespace-trailing)) . 4312) (4312 . 4330) (4312 . 4313) ("                " . 4312) (4311 . 4328)) nil (25451 31492 829302 190000) 0 nil])
([nil nil ((#("p" 0 1 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face)) . -4360) (undo-tree-id2002 . -1) (#("s" 0 1 (tag-name "ps" tag-type end font-lock-face web-mode-html-tag-face)) . -4361) (undo-tree-id2003 . -1) 4362) ((4360 . 4362)) (25451 31457 539813 582000) 0 nil])
([nil nil ((#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4388) (4367 . 4388) (#("            </v-col>
" 12 13 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4350) (undo-tree-id1706 . -20) (4371 . 4388) 4370) ((#("          </div>
" 10 11 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 15 16 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4371) (4350 . 4371) (#("            </v-col>
" 12 13 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 19 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 19 20 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4367) (4388 . 4405)) (25451 31335 813150 870000) 0 nil])
([nil nil ((#("                {{ cursorvalue }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (rear-nonsticky t block-side t face web-mode-variable-name-face) 30 31 (block-side t) 31 32 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 32 33 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 4388) (undo-tree-id2088 . -18) (undo-tree-id2089 . -34) (4365 . 4388) (#("                </div>
" 16 17 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 17 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4331) (4354 . 4388) 4372) nil (25451 31492 829299 498000) 0 nil])
([nil nil ((4360 . 4364)) ((#("span" 0 4 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face)) . 4360)) (25451 31456 959931 606000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -168) (undo-tree-id1717 . -1) 169 (t 25451 31151 247444 35000)) ((168 . 169)) (25451 31335 568948 65000) 0 nil])
([nil nil ((#("                {{ cursorvalue }}
" 16 17 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 18 19 (block-side t) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (rear-nonsticky t block-side t face web-mode-variable-name-face) 30 31 (block-side t) 31 32 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 32 33 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 4365) (undo-tree-id2086 . -18) (undo-tree-id2087 . -34) (4346 . 4365) (#("                  
" 0 18 (face whitespace-trailing)) . 4312) (4331 . 4365) 4349) nil (25451 31492 829295 63000) 0 nil])
([nil nil ((4289 . 4296)) ((#("-block " 0 6 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4289) (undo-tree-id2011 . -5) (undo-tree-id2012 . -7) (undo-tree-id2013 . -6) (undo-tree-id2014 . -6) (undo-tree-id2015 . -6) (undo-tree-id2016 . -6) (undo-tree-id2017 . -6) (undo-tree-id2018 . -6) (undo-tree-id2019 . -6) (undo-tree-id2020 . -6) (undo-tree-id2021 . -6) (undo-tree-id2022 . -6) (undo-tree-id2023 . -6) (undo-tree-id2024 . -6) (undo-tree-id2025 . -6) (undo-tree-id2026 . -6) (undo-tree-id2027 . -6) (undo-tree-id2028 . -6) (undo-tree-id2029 . -7) (undo-tree-id2030 . -7) (undo-tree-id2031 . -7) (undo-tree-id2032 . -7) (undo-tree-id2033 . -7) (undo-tree-id2034 . -7) (undo-tree-id2035 . -7) (undo-tree-id2036 . -7) (undo-tree-id2037 . -7) (undo-tree-id2038 . -7) (undo-tree-id2039 . -7) (undo-tree-id2040 . -7)) (25451 31456 595169 984000) 0 nil])
([nil nil ((168 . 169)) ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 168) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1)) (25451 31334 854503 11000) 0 nil])
([nil nil (("
" . 4364) (undo-tree-id2084 . -1) (undo-tree-id2085 . 1)) nil (25451 31492 829290 932000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4295) (undo-tree-id1993 . -1) (undo-tree-id1995 . -1) (undo-tree-id1997 . -1) (undo-tree-id1999 . -1) (undo-tree-id2001 . -1) 4296) ((4295 . 4296)) (25451 31456 29030 141000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -163) (undo-tree-id1718 . -1) (undo-tree-id1720 . -1) (undo-tree-id1722 . -1) (undo-tree-id1724 . -1) (undo-tree-id1726 . -1) (undo-tree-id1728 . -1) (undo-tree-id1730 . -1) (undo-tree-id1732 . -1) (#("c" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -164) (undo-tree-id1733 . -1) (undo-tree-id1735 . -1) (#("o" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -165) (undo-tree-id1736 . -1) (#("l" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -166) (undo-tree-id1738 . -1) (#("-" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -167) (undo-tree-id1740 . -1) (#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -168) (undo-tree-id1742 . -1) 169 (t 25451 31173 507831 648000)) ((163 . 169)) (25451 31334 658715 605000) 0 nil])
([nil nil (("                  " . -4362) (undo-tree-id2083 . -2) 4364) nil (25451 31492 829287 353000) 0 nil])
([nil nil ((#("                " 0 16 (face whitespace-trailing)) . -4299) (undo-tree-id1992 . -16) 4295) ((4299 . 4315) (t 25451 31444 340298 981000)) (25451 31444 315958 828000) 0 nil])
([nil nil ((#(" col-8" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2877) (undo-tree-id1743 . -6) (undo-tree-id1745 . -1) (undo-tree-id1747 . -1) (undo-tree-id1749 . -6) (t 25451 31178 339915 305000)) ((2877 . 2883)) (25451 31334 355366 203000) 0 nil])
([nil nil ((4310 . 4319)) nil (25451 31492 829284 878000) 0 nil])
nil
([nil nil ((164 . 170) (t 25451 31189 284104 159000)) ((#("col-2 " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 164) (undo-tree-id1821 . -6) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4) (undo-tree-id1831 . -4) (undo-tree-id1832 . -4) (undo-tree-id1833 . -4) (undo-tree-id1834 . -4) (undo-tree-id1835 . -4) (undo-tree-id1836 . -4) (undo-tree-id1837 . -4) (undo-tree-id1838 . -4) (undo-tree-id1839 . -4) (undo-tree-id1840 . -4) (undo-tree-id1841 . -4) (undo-tree-id1842 . -6) (undo-tree-id1843 . -6) (undo-tree-id1844 . -6) (undo-tree-id1845 . -6) (undo-tree-id1846 . -6) (undo-tree-id1847 . -6) (undo-tree-id1848 . -6) (undo-tree-id1849 . -6)) (25451 31334 206883 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4332 . 4333) (nil tag-attr t 4332 . 4333) (nil tag-name "div" 4332 . 4333) (nil tag-type start 4332 . 4333) (nil font-lock-face web-mode-html-attr-value-face 4332 . 4333) (nil tag-attr t 4318 . 4332) (nil tag-name "div" 4318 . 4332) (nil tag-type start 4318 . 4332) (nil font-lock-face web-mode-html-attr-value-face 4318 . 4332) (4318 . 4333)) nil (25451 31492 829283 407000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -168) (undo-tree-id1750 . -1) (#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -169) (undo-tree-id1751 . -1) 170 (t 25451 31223 864695 387000)) ((168 . 170)) (25451 31334 37351 0) 0 nil])
([nil nil ((4332 . 4338)) nil (25451 31492 829280 120000) 0 nil])
([nil nil ((168 . 170)) ((#("1 " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 168) (undo-tree-id1808 . -2) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -2) (undo-tree-id1818 . -2) (undo-tree-id1819 . -2) (undo-tree-id1820 . -2)) (25451 31333 909249 579000) 0 nil])
([nil nil ((#("class=\"text-truncate col-5\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4237) (undo-tree-id2079 . -27) (undo-tree-id2080 . -7) (undo-tree-id2081 . -20) (undo-tree-id2082 . -27)) nil (25451 31492 829278 829000) 0 nil])
([nil nil (("  " . -138) 170) ((138 . 140)) (25451 31333 760683 892000) 0 nil] [nil nil ((#("c" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -164) (undo-tree-id1756 . -1) (#("o" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -165) (undo-tree-id1757 . -1) (#("l" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -166) (undo-tree-id1758 . -1) (#("-" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -167) (undo-tree-id1759 . -1) (#("1" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -168) (undo-tree-id1760 . -1) (#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -169) (undo-tree-id1761 . -1) 170 (t 25451 31229 128784 678000)) ((164 . 170)) (25451 31308 310840 918000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "p" tag-type start)) . -4236) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) 4237) nil (25451 31492 829271 902000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -166) (undo-tree-id1762 . -1) (undo-tree-id1764 . -1) (undo-tree-id1766 . -1) (undo-tree-id1768 . -1) (undo-tree-id1770 . -1) 167 (t 25451 31312 534176 401000)) ((166 . 167)) (25451 31333 511771 663000) 0 nil])
([nil nil (("  " . -138) 164) ((138 . 140)) (25451 31307 111665 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4309 . 4310) (nil tag-attr t 4309 . 4310) (nil tag-attr-end 5 4309 . 4310) (nil tag-name "div" 4309 . 4310) (nil tag-type start 4309 . 4310) (nil font-lock-face web-mode-html-attr-value-face 4309 . 4310) (nil tag-attr t 4289 . 4309) (nil tag-name "div" 4289 . 4309) (nil tag-type start 4289 . 4309) (nil font-lock-face web-mode-html-attr-value-face 4289 . 4309) (nil tag-attr t 4288 . 4289) (nil tag-name "div" 4288 . 4289) (nil tag-type start 4288 . 4289) (nil font-lock-face web-mode-html-attr-equal-face 4288 . 4289) (nil tag-attr t 4284 . 4288) (nil tag-name "div" 4284 . 4288) (nil tag-type start 4284 . 4288) (nil font-lock-face web-mode-html-attr-name-face 4284 . 4288) (nil tag-attr-beg 0 4283 . 4284) (nil tag-attr t 4283 . 4284) (nil tag-name "div" 4283 . 4284) (nil tag-type start 4283 . 4284) (nil font-lock-face web-mode-html-attr-name-face 4283 . 4284) (4283 . 4310)) nil (25451 31492 829258 868000) 0 nil])
([nil nil ((166 . 167)) ((#("2" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 166) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (t 25451 31318 858280 266000)) (25451 31318 840164 992000) 0 nil])
([nil nil ((#("
          </v-col>
            <v-col class=\"text-left pa-0 ma-0\">" 11 12 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 12 13 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 13 18 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 18 19 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 33 38 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 38 39 (tag-name "v-col" tag-type start) 39 40 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 40 44 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 44 45 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 45 65 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 65 66 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2810) (undo-tree-id1752 . -67) (undo-tree-id1753 . -1) (undo-tree-id1754 . -65) (undo-tree-id1755 . -67)) ((2810 . 2877) (t 25451 31247 673097 801000)) (25451 31247 649528 496000) 0 nil])
([nil nil ((4310 . 4311)) nil (25451 31492 829246 609000) 0 nil])
nil
nil
([nil nil ((#("5" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4308) (undo-tree-id2092 . -1) 4309 (t 25451 31492 857060 374000)) nil (25451 31498 956589 400000) 0 nil])
([nil nil ((4308 . 4309)) nil (25451 31498 956573 136000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4303) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (#("c" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4304) (undo-tree-id2101 . -1) (#("o" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4305) (undo-tree-id2102 . -1) (#("l" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4306) (undo-tree-id2103 . -1) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4307) (undo-tree-id2104 . -1) (#("3" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4308) (undo-tree-id2105 . -1) 4309 (t 25451 31498 981155 808000)) nil (25451 31510 765688 596000) 0 nil])
([nil nil ((27164 . 27166) (#("  " 0 2 (part-side css)) . 27163) (undo-tree-id2355 . -2) (27162 . 27166) (t 25451 31510 789339 410000)) nil (25451 31598 383215 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27264 . 27265) (nil part-side css 27264 . 27265) (nil face (rainbow-delimiters-depth-1-face) 27264 . 27265) (nil part-side css 27253 . 27264) (nil part-side css 27239 . 27253) (nil face web-mode-css-property-name-face 27239 . 27253) (nil part-side css 27228 . 27239) (nil part-side css 27219 . 27228) (nil face web-mode-css-property-name-face 27219 . 27228) (nil part-side css 27208 . 27219) (nil part-side css 27196 . 27208) (nil face web-mode-css-property-name-face 27196 . 27208) (nil part-side css 27186 . 27196) (nil part-side css 27180 . 27186) (nil face web-mode-css-property-name-face 27180 . 27186) (nil part-side css 27177 . 27180) (nil part-side css 27176 . 27177) (nil face (rainbow-delimiters-depth-1-face) 27176 . 27177) (nil part-side css 27175 . 27176) (nil part-side css 27166 . 27175) (nil face web-mode-css-selector-class-face 27166 . 27175) (27166 . 27265)) nil (25451 31598 383212 106000) 0 nil])
([nil nil ((27264 . 27266) 27265) nil (25451 31598 383206 347000) 0 nil])
([nil nil ((27180 . 27182) 27181) nil (25451 31598 383205 214000) 0 nil])
([nil nil ((27198 . 27200) 27201) nil (25451 31598 383203 888000) 0 nil])
([nil nil ((27223 . 27225) 27228) nil (25451 31598 383202 715000) 0 nil])
([nil nil ((27245 . 27247) 27252) nil (25451 31598 383201 408000) 0 nil])
([nil nil ((4244 . 4245) (4237 . 4246)) nil (25451 31598 383200 102000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4244) (undo-tree-id2354 . -1) 4245) nil (25451 31598 383198 607000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4251 . 4252) (nil tag-attr t 4244 . 4252) (nil tag-name "p" 4244 . 4252) (nil tag-type start 4244 . 4252) (nil font-lock-face web-mode-html-attr-value-face 4244 . 4252) (4244 . 4252)) nil (25451 31598 383195 929000) 0 nil])
([nil nil ((#("
                <div class=\"text-truncate\" style=\"display:inline-block;\">" 17 18 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 18 21 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 21 22 (tag-name "div" tag-type start) 22 23 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 23 27 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 28 42 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-name "div" tag-type start) 44 45 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 45 46 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 46 47 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 47 48 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 48 49 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 49 50 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 50 51 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 51 71 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4278) (undo-tree-id2346 . -74) (undo-tree-id2347 . -21) (undo-tree-id2348 . -42) (undo-tree-id2349 . -1) (undo-tree-id2350 . -51) (undo-tree-id2351 . -22) (undo-tree-id2352 . -42) (undo-tree-id2353 . -74)) nil (25451 31598 383192 957000) 0 nil])
([nil nil (("<" . -4329) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) ("/" . -4330) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (#("d" 0 1 (tag-name "d" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -4331) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (#("i" 0 1 (tag-name "di" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -4332) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (#("v" 0 1 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-unclosed-face)) . -4333) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (#(">" 0 1 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -4334) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) 4335) nil (25451 31598 383172 674000) 0 nil])
([nil nil (("                " . -4313) (undo-tree-id2106 . -16) (undo-tree-id2107 . -16) (undo-tree-id2108 . -16) (undo-tree-id2109 . -16) (undo-tree-id2110 . -16) (undo-tree-id2111 . -16) (undo-tree-id2112 . -16) (undo-tree-id2113 . -16) (undo-tree-id2114 . -16) (undo-tree-id2115 . -16) (undo-tree-id2116 . -16) (undo-tree-id2117 . -16) (undo-tree-id2118 . -16) (undo-tree-id2119 . -16) (undo-tree-id2120 . -16) (undo-tree-id2121 . -16) (undo-tree-id2122 . -16) (undo-tree-id2123 . -16) (undo-tree-id2124 . -16) (undo-tree-id2125 . -16) (undo-tree-id2126 . -16) (undo-tree-id2127 . -16) (undo-tree-id2128 . -16) (undo-tree-id2129 . -16) (undo-tree-id2130 . -16) (undo-tree-id2131 . -16) (undo-tree-id2132 . -16) (undo-tree-id2133 . -16) (undo-tree-id2134 . -16) (undo-tree-id2135 . -16) (undo-tree-id2136 . -16) (undo-tree-id2137 . -16) (undo-tree-id2138 . -16) (undo-tree-id2139 . -16) (undo-tree-id2140 . -16) (undo-tree-id2141 . -16) (undo-tree-id2142 . -16) (undo-tree-id2143 . -16) (undo-tree-id2144 . -16) (undo-tree-id2145 . -16) (undo-tree-id2146 . -16) (undo-tree-id2147 . -16) (undo-tree-id2148 . -16) (undo-tree-id2149 . -16) (undo-tree-id2150 . -16) (undo-tree-id2151 . -16) (undo-tree-id2152 . -16) (undo-tree-id2153 . -16) (undo-tree-id2154 . -16) (undo-tree-id2155 . -16) (undo-tree-id2156 . -16) (undo-tree-id2157 . -16) (undo-tree-id2158 . -16) (undo-tree-id2159 . -16) (undo-tree-id2160 . -16) (undo-tree-id2161 . -16) (undo-tree-id2162 . -16) (undo-tree-id2163 . -16) 4329) nil (25451 31598 382949 949000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -27110) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) 27111 (t 25451 31598 406686 89000)) nil (25451 31619 133165 234000) 0 nil])
([nil nil ((27110 . 27111)) nil (25451 31619 133136 222000) 0 nil])
([nil nil ((4275 . 4282) (t 25451 31619 151001 187000)) nil (25451 31661 469213 842000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4281) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) 4282) nil (25451 31661 469208 353000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -27116) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) 27117 (t 25451 31661 491640 297000)) nil (25451 31683 353769 186000) 0 nil])
([nil nil ((27116 . 27117)) nil (25451 31740 393136 174000) 0 nil])
([nil nil ((27198 . 27203) (t 25451 31741 340832 173000)) nil (25451 31760 164260 120000) 0 nil] [nil nil ((#("  .truncate {
    width: 250px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }" 0 2 (part-side css) 2 11 (part-side css face web-mode-css-selector-class-face) 11 12 (part-side css) 12 13 (part-side css face (rainbow-delimiters-depth-1-face)) 13 18 (part-side css) 18 24 (part-side css face web-mode-css-property-name-face) 24 36 (part-side css) 36 48 (part-side css face web-mode-css-property-name-face) 48 61 (part-side css) 61 70 (part-side css face web-mode-css-property-name-face) 70 83 (part-side css) 83 97 (part-side css face web-mode-css-property-name-face) 97 110 (part-side css) 110 111 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face))) . 27091) (undo-tree-id2424 . -111) (undo-tree-id2425 . -25) (undo-tree-id2426 . -14) (undo-tree-id2427 . -2) (undo-tree-id2428 . -11) (undo-tree-id2429 . -111) (undo-tree-id2430 . -111) (t 25451 31683 375968 626000)) ((27091 . 27202)) (25451 31739 870173 617000) 0 nil] [nil nil ((#("  .truncate {
    width: 250px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }" 0 2 (part-side css) 2 11 (part-side css face web-mode-css-selector-class-face) 11 12 (part-side css) 12 13 (part-side css face (rainbow-delimiters-depth-1-face)) 13 18 (part-side css) 18 24 (part-side css face web-mode-css-property-name-face) 24 36 (part-side css) 36 48 (part-side css face web-mode-css-property-name-face) 48 61 (part-side css) 61 70 (part-side css face web-mode-css-property-name-face) 70 83 (part-side css) 83 97 (part-side css face web-mode-css-property-name-face) 97 110 (part-side css) 110 111 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face))) . 27091) (undo-tree-id2404 . -111) (undo-tree-id2405 . -25) (undo-tree-id2406 . -14) (undo-tree-id2407 . -2) (undo-tree-id2408 . -11) (undo-tree-id2409 . -111) (t 25451 31683 375968 626000)) ((27091 . 27202)) (25451 31694 780018 798000) 0 nil])
([nil nil ((27203 . 27210)) nil (25451 31760 164255 952000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -27089) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (#("
" 0 1 (part-side css)) . -27090) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) 27091) ((27089 . 27091)) (25451 31738 163133 493000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -27089) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (#("
" 0 1 (part-side css)) . -27090) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) 27091) ((27089 . 27091)) (25451 31694 774018 391000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . -27209) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) 27210) nil (25451 31760 164251 535000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4263 . 4264) (nil tag-attr t 4263 . 4264) (nil tag-attr-end 5 4263 . 4264) (nil tag-name "p" 4263 . 4264) (nil tag-type start 4263 . 4264) (nil font-lock-face web-mode-html-attr-value-face 4263 . 4264) (nil tag-attr t 4244 . 4263) (nil tag-name "p" 4244 . 4263) (nil tag-type start 4244 . 4263) (nil font-lock-face web-mode-html-attr-value-face 4244 . 4263) (4244 . 4264)) ((#("col-2 text-truncate\"" 0 4 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 5 19 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (rear-nonsticky nil tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4244) (undo-tree-id2466 . -4) (undo-tree-id2467 . -20) (undo-tree-id2468 . -20) (undo-tree-id2469 . -20) (undo-tree-id2470 . -20) (undo-tree-id2471 . -20) (undo-tree-id2472 . -20) (undo-tree-id2473 . -20) (undo-tree-id2474 . -20) (undo-tree-id2475 . -20) (undo-tree-id2476 . -20) (undo-tree-id2477 . -20) (undo-tree-id2478 . -20) (undo-tree-id2479 . -20) (nil tag-name "p" 4249 . 4263) (nil tag-name "p" 4248 . 4249) (nil tag-name "p" 4244 . 4248) (nil tag-name "p" 4263 . 4264) (nil rear-nonsticky t 4263 . 4264)) (25451 31737 809238 372000) 0 nil])
nil
([nil nil ((27209 . 27211)) nil (25451 31760 164241 217000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-name "p" tag-type start)) . 4264) (#("e" 0 1 (rear-nonsticky t tag-name "p" tag-type start)) . 4264) (#("t" 0 1 (tag-name "p" tag-type start)) . 4264) (#("a" 0 1 (tag-name "p" tag-type start)) . 4264) (#("c" 0 1 (tag-name "p" tag-type start)) . 4264) (#("n" 0 1 (tag-name "p" tag-type start)) . 4264) (#("u" 0 1 (tag-name "p" tag-type start)) . 4264) (#("r" 0 1 (tag-name "p" tag-type start)) . 4264) (#("t" 0 1 (tag-name "p" tag-type start)) . 4264)) ((4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265) (4264 . 4265)) (25451 31737 574860 144000) 0 nil])
([nil nil ((27211 . 27215)) nil (25451 31760 164237 914000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -4248) (undo-tree-id2431 . -1) 4249 (t 25451 31715 76441 951000)) ((4248 . 4249)) (25451 31737 307158 759000) 0 nil])
([nil nil ((#("x" 0 1 (part-side css)) . -27212) (undo-tree-id2495 . -1) (#("p" 0 1 (part-side css)) . -27213) (undo-tree-id2496 . -1) (#(";" 0 1 (part-side css)) . -27214) (undo-tree-id2497 . -1) 27215) nil (25451 31760 164232 339000) 0 nil])
([nil nil ((4248 . 4250)) ((#("10" 0 2 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 4248) (undo-tree-id2432 . -2) (undo-tree-id2433 . -2) (undo-tree-id2434 . -2) (undo-tree-id2435 . -2) (undo-tree-id2436 . -2) (undo-tree-id2437 . -2) (undo-tree-id2438 . -2) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2) (undo-tree-id2446 . -2) (undo-tree-id2447 . -2) (undo-tree-id2448 . -2) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (undo-tree-id2451 . -2) (undo-tree-id2452 . -2) (undo-tree-id2453 . -2) (undo-tree-id2454 . -2) (undo-tree-id2455 . -2) (undo-tree-id2456 . -2) (undo-tree-id2457 . -2) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (t 25451 31729 296653 438000)) (25451 31729 277444 656000) 0 nil])
([nil nil ((27212 . 27215)) nil (25451 31760 164217 211000) 0 nil])
nil
([nil nil ((27215 . 27220)) nil (25451 31760 164213 918000) 0 nil])
([nil nil ((27220 . 27234)) nil (25451 31760 164210 618000) 0 nil])
([nil nil ((#("p" 0 1 (part-side css)) . -27231) (undo-tree-id2492 . -1) (#(";" 0 1 (part-side css)) . -27232) (undo-tree-id2493 . -1) (#(" " 0 1 (part-side css)) . -27233) (undo-tree-id2494 . -1) 27234) nil (25451 31760 164204 962000) 0 nil])
([nil nil ((27231 . 27232)) nil (25451 31760 164189 808000) 0 nil])
([nil nil ((#("x" 0 1 (part-side css)) . -27230) (undo-tree-id2490 . -1) (#("p" 0 1 (part-side css)) . -27231) (undo-tree-id2491 . -1) 27232) nil (25451 31760 164184 879000) 0 nil])
([nil nil ((27230 . 27233)) nil (25451 31760 164173 558000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27232) (undo-tree-id2489 . -1) 27233) nil (25451 31760 164169 316000) 0 nil])
([nil nil ((27232 . 27234)) nil (25451 31760 164161 444000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27233) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) 27234) nil (25451 31760 164151 706000) 0 nil])
([nil nil ((27233 . 27238) (t 25451 31760 185111 127000)) nil (25451 31787 993376 332000) 0 nil])
([nil nil ((27238 . 27258)) nil (25451 31787 993374 851000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -27257) (undo-tree-id2501 . -1) 27258) nil (25451 31787 993373 234000) 0 nil])
([nil nil ((27257 . 27259)) nil (25451 31787 993369 87000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27258) (undo-tree-id2500 . -1) 27259) nil (25451 31787 993363 914000) 0 nil])
([nil nil ((#("4" 0 1 (part-side css)) . -27254) (undo-tree-id2502 . -1) 27255 (t 25451 31788 17521 619000)) nil (25451 31801 604833 432000) 0 nil])
([nil nil ((27254 . 27255)) nil (25451 31801 604816 310000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -27254) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) 27255 (t 25451 31801 625721 697000)) nil (25451 31818 115633 90000) 0 nil])
([nil nil ((27254 . 27255)) nil (25451 31818 115598 352000) 0 nil])
([nil nil ((#("4" 0 1 (part-side css)) . -27254) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) 27255 (t 25451 31818 137963 938000)) nil (25451 31821 891302 96000) 0 nil])
([nil nil ((27254 . 27255)) nil (25451 31860 117936 492000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -27116) (undo-tree-id2578 . -1) 27117 (t 25451 31860 934589 202000)) nil (25451 31870 223370 69000) 0 nil] [nil nil ((#("m" 0 1 (part-side css face web-mode-css-property-name-face)) . -27238) (undo-tree-id2533 . -1) (undo-tree-id2535 . -1) (undo-tree-id2537 . -1) (undo-tree-id2539 . -1) (undo-tree-id2541 . -1) (undo-tree-id2543 . -1) (undo-tree-id2545 . -1) (undo-tree-id2547 . -1) (undo-tree-id2549 . -1) (#("a" 0 1 (part-side css face web-mode-css-property-name-face)) . -27239) (undo-tree-id2551 . -1) (undo-tree-id2553 . -1) (undo-tree-id2555 . -1) (undo-tree-id2557 . -1) (undo-tree-id2559 . -1) (#("r" 0 1 (part-side css face web-mode-css-property-name-face)) . -27240) (undo-tree-id2561 . -1) (undo-tree-id2563 . -1) (undo-tree-id2565 . -1) (#("g" 0 1 (part-side css face web-mode-css-property-name-face)) . -27241) (undo-tree-id2567 . -1) (#("i" 0 1 (part-side css face web-mode-css-property-name-face)) . -27242) (undo-tree-id2568 . -1) (#("n" 0 1 (part-side css face web-mode-css-property-name-face)) . -27243) (undo-tree-id2569 . -1) (#("-" 0 1 (part-side css face web-mode-css-property-name-face)) . -27244) (undo-tree-id2570 . -1) 27245 (t 25451 31821 914019 252000)) ((27238 . 27245)) (25451 31859 754283 61000) 0 nil])
([nil nil ((27116 . 27117)) nil (25451 31870 223355 857000) 0 nil])
([nil nil ((#("6" 0 1 (part-side css)) . -27247) (undo-tree-id2571 . -1) 27248 (t 25451 31846 622380 495000)) ((27247 . 27248)) (25451 31859 450455 663000) 0 nil])
([nil nil ((#("6" 0 1 (part-side css)) . -27116) (undo-tree-id2579 . -1) 27117 (t 25451 31870 246724 786000)) nil (25451 32175 438662 211000) 0 nil])
([nil nil ((27247 . 27249)) ((#("10" 0 2 (part-side css)) . 27247) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) (undo-tree-id2577 . -2) (t 25451 31853 794485 131000)) (25451 31853 775247 584000) 0 nil])
([nil nil ((27116 . 27117)) nil (25451 32175 438650 551000) 0 nil])
nil
([nil nil ((27109 . 27113)) nil (25451 32175 438643 779000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -27120) (undo-tree-id2580 . -1) (#("5" 0 1 (part-side css)) . -27121) (undo-tree-id2581 . -1) 27122 (t 25451 32175 463093 832000)) nil (25451 32184 801314 948000) 0 nil])
([nil nil ((27120 . 27123)) nil (25451 32184 801295 972000) 0 nil])
([nil nil ((4219 . 4234) (t 25451 32184 823225 962000)) nil (25451 32357 477782 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4308 . 4309) (nil tag-name "template" 4308 . 4309) (nil tag-type start 4308 . 4309) (nil tag-end t 4308 . 4309) (nil font-lock-face web-mode-html-tag-bracket-face 4308 . 4309) (nil block-side t 4307 . 4308) (nil block-end t 4307 . 4308) (nil block-token delimiter-end 4307 . 4308) (nil tag-attr t 4307 . 4308) (nil tag-attr-end 16 4307 . 4308) (nil tag-name "template" 4307 . 4308) (nil tag-type start 4307 . 4308) (nil font-lock-face web-mode-block-delimiter-face 4307 . 4308) (nil block-side t 4305 . 4307) (nil tag-attr t 4305 . 4307) (nil tag-name "template" 4305 . 4307) (nil tag-type start 4305 . 4307) (nil block-side t 4304 . 4305) (nil tag-attr t 4304 . 4305) (nil tag-name "template" 4304 . 4305) (nil tag-type start 4304 . 4305) (nil face web-mode-variable-name-face 4304 . 4305) (nil block-side t 4303 . 4304) (nil tag-attr t 4303 . 4304) (nil tag-name "template" 4303 . 4304) (nil tag-type start 4303 . 4304) (nil face web-mode-variable-name-face 4303 . 4304) (nil block-side t 4302 . 4303) (nil tag-attr t 4302 . 4303) (nil tag-name "template" 4302 . 4303) (nil tag-type start 4302 . 4303) (nil face web-mode-variable-name-face 4302 . 4303) (nil block-side t 4301 . 4302) (nil tag-attr t 4301 . 4302) (nil tag-name "template" 4301 . 4302) (nil tag-type start 4301 . 4302) (nil face web-mode-variable-name-face 4301 . 4302) (nil block-side t 4300 . 4301) (nil tag-attr t 4300 . 4301) (nil tag-name "template" 4300 . 4301) (nil tag-type start 4300 . 4301) (nil face web-mode-variable-name-face 4300 . 4301) (nil block-side t 4298 . 4300) (nil tag-attr t 4298 . 4300) (nil tag-name "template" 4298 . 4300) (nil tag-type start 4298 . 4300) (nil block-side t 4297 . 4298) (nil tag-attr t 4297 . 4298) (nil tag-name "template" 4297 . 4298) (nil tag-type start 4297 . 4298) (nil face web-mode-variable-name-face 4297 . 4298) (nil block-side t 4296 . 4297) (nil tag-attr t 4296 . 4297) (nil tag-name "template" 4296 . 4297) (nil tag-type start 4296 . 4297) (nil face web-mode-variable-name-face 4296 . 4297) (nil block-side t 4294 . 4296) (nil tag-attr t 4294 . 4296) (nil tag-name "template" 4294 . 4296) (nil tag-type start 4294 . 4296) (nil block-side t 4293 . 4294) (nil block-token delimiter-beg 4293 . 4294) (nil tag-attr t 4293 . 4294) (nil tag-name "template" 4293 . 4294) (nil tag-type start 4293 . 4294) (nil font-lock-face web-mode-block-delimiter-face 4293 . 4294) (nil block-side t 4292 . 4293) (nil block-token delimiter-beg 4292 . 4293) (nil tag-attr t 4292 . 4293) (nil tag-name "template" 4292 . 4293) (nil tag-type start 4292 . 4293) (nil font-lock-face web-mode-block-delimiter-face 4292 . 4293) (nil block-side t 4291 . 4292) (nil block-token delimiter-beg 4291 . 4292) (nil tag-attr t 4291 . 4292) (nil tag-name "template" 4291 . 4292) (nil tag-type start 4291 . 4292) (nil font-lock-face web-mode-block-delimiter-face 4291 . 4292) (nil block-side t 4290 . 4291) (nil block-token delimiter-beg 4290 . 4291) (nil tag-attr t 4290 . 4291) (nil tag-name "template" 4290 . 4291) (nil tag-type start 4290 . 4291) (nil font-lock-face web-mode-block-delimiter-face 4290 . 4291) (nil block-side t 4289 . 4290) (nil block-token delimiter-beg 4289 . 4290) (nil tag-attr t 4289 . 4290) (nil tag-name "template" 4289 . 4290) (nil tag-type start 4289 . 4290) (nil font-lock-face web-mode-block-delimiter-face 4289 . 4290) (nil block-side t 4288 . 4289) (nil block-token delimiter-beg 4288 . 4289) (nil tag-attr t 4288 . 4289) (nil tag-name "template" 4288 . 4289) (nil tag-type start 4288 . 4289) (nil font-lock-face web-mode-block-delimiter-face 4288 . 4289) (nil block-side t 4287 . 4288) (nil block-token delimiter-beg 4287 . 4288) (nil tag-attr t 4287 . 4288) (nil tag-name "template" 4287 . 4288) (nil tag-type start 4287 . 4288) (nil font-lock-face web-mode-block-delimiter-face 4287 . 4288) (nil block-side t 4286 . 4287) (nil block-token delimiter-beg 4286 . 4287) (nil tag-attr t 4286 . 4287) (nil tag-name "template" 4286 . 4287) (nil tag-type start 4286 . 4287) (nil font-lock-face web-mode-block-delimiter-face 4286 . 4287) (nil block-side t 4285 . 4286) (nil block-token delimiter-beg 4285 . 4286) (nil tag-attr t 4285 . 4286) (nil tag-name "template" 4285 . 4286) (nil tag-type start 4285 . 4286) (nil font-lock-face web-mode-block-delimiter-face 4285 . 4286) (nil block-side t 4284 . 4285) (nil block-token delimiter-beg 4284 . 4285) (nil tag-attr t 4284 . 4285) (nil tag-name "template" 4284 . 4285) (nil tag-type start 4284 . 4285) (nil font-lock-face web-mode-block-delimiter-face 4284 . 4285) (nil block-side t 4283 . 4284) (nil block-token delimiter-beg 4283 . 4284) (nil tag-attr t 4283 . 4284) (nil tag-name "template" 4283 . 4284) (nil tag-type start 4283 . 4284) (nil font-lock-face web-mode-block-delimiter-face 4283 . 4284) (nil block-beg 0 4282 . 4283) (nil block-controls 0 4282 . 4283) (nil block-side t 4282 . 4283) (nil block-token delimiter-beg 4282 . 4283) (nil tag-attr t 4282 . 4283) (nil tag-name "template" 4282 . 4283) (nil tag-type start 4282 . 4283) (nil font-lock-face web-mode-block-delimiter-face 4282 . 4283) (nil tag-attr t 4277 . 4282) (nil tag-name "template" 4277 . 4282) (nil tag-type start 4277 . 4282) (nil font-lock-face web-mode-html-attr-engine-face 4277 . 4282) (nil tag-attr-beg 2 4276 . 4277) (nil tag-attr t 4276 . 4277) (nil tag-name "template" 4276 . 4277) (nil tag-type start 4276 . 4277) (nil font-lock-face web-mode-html-attr-engine-face 4276 . 4277) (nil tag-name "template" 4275 . 4276) (nil tag-type start 4275 . 4276) (nil tag-name "template" 4267 . 4275) (nil tag-type start 4267 . 4275) (nil font-lock-face web-mode-html-tag-face 4267 . 4275) (nil tag-name "template" 4266 . 4267) (nil tag-type start 4266 . 4267) (nil tag-beg 17 4266 . 4267) (nil font-lock-face web-mode-html-tag-bracket-face 4266 . 4267) (nil tag-name "v-tooltip" 4248 . 4249) (nil tag-type start 4248 . 4249) (nil tag-end t 4248 . 4249) (nil font-lock-face web-mode-html-tag-bracket-face 4248 . 4249) (nil tag-attr t 4247 . 4248) (nil tag-attr-end 0 4247 . 4248) (nil tag-name "v-tooltip" 4247 . 4248) (nil tag-type start 4247 . 4248) (nil font-lock-face web-mode-html-attr-name-face 4247 . 4248) (nil tag-attr t 4246 . 4247) (nil tag-name "v-tooltip" 4246 . 4247) (nil tag-type start 4246 . 4247) (nil font-lock-face web-mode-html-attr-name-face 4246 . 4247) (nil tag-attr-beg 0 4245 . 4246) (nil tag-attr t 4245 . 4246) (nil tag-name "v-tooltip" 4245 . 4246) (nil tag-type start 4245 . 4246) (nil font-lock-face web-mode-html-attr-name-face 4245 . 4246) (nil tag-name "v-tooltip" 4244 . 4245) (nil tag-type start 4244 . 4245) (nil tag-name "v-tooltip" 4235 . 4244) (nil tag-type start 4235 . 4244) (nil font-lock-face web-mode-html-tag-custom-face 4235 . 4244) (nil tag-name "v-tooltip" 4234 . 4235) (nil tag-type start 4234 . 4235) (nil tag-beg 19 4234 . 4235) (nil font-lock-face web-mode-html-tag-bracket-face 4234 . 4235) (4234 . 4309)) nil (25451 32357 477764 741000) 0 nil])
([nil nil ((4428 . 4443)) nil (25451 32357 477710 851000) 0 nil])
([nil nil ((4429 . 4445) ("              " . 4429) (4443 . 4454)) nil (25451 32357 477709 644000) 0 nil])
([nil nil ((4456 . 4473)) nil (25451 32357 477708 359000) 0 nil])
([nil nil (("  " . -4471) (4473 . 4485)) nil (25451 32357 477707 336000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4389 . 4390) (nil tag-attr t 4389 . 4390) (nil tag-attr-end 4 4389 . 4390) (nil tag-name "p" 4389 . 4390) (nil tag-type start 4389 . 4390) (nil font-lock-face web-mode-html-attr-value-face 4389 . 4390) (nil tag-attr t 4386 . 4389) (nil tag-name "p" 4386 . 4389) (nil tag-type start 4386 . 4389) (nil font-lock-face web-mode-html-attr-value-face 4386 . 4389) (nil tag-attr t 4385 . 4386) (nil tag-name "p" 4385 . 4386) (nil tag-type start 4385 . 4386) (nil font-lock-face web-mode-html-attr-equal-face 4385 . 4386) (nil tag-attr t 4382 . 4385) (nil tag-name "p" 4382 . 4385) (nil tag-type start 4382 . 4385) (nil font-lock-face web-mode-html-attr-engine-face 4382 . 4385) (nil tag-attr-beg 2 4381 . 4382) (nil tag-attr t 4381 . 4382) (nil tag-name "p" 4381 . 4382) (nil tag-type start 4381 . 4382) (nil font-lock-face web-mode-html-attr-engine-face 4381 . 4382) (nil tag-name "p" 4359 . 4381) (nil tag-type start 4359 . 4381) (nil tag-name "p" 4358 . 4359) (nil tag-type start 4358 . 4359) (nil tag-attr t 4357 . 4358) (nil tag-attr-end 6 4357 . 4358) (nil tag-name "p" 4357 . 4358) (nil tag-type start 4357 . 4358) (nil font-lock-face web-mode-html-attr-value-face 4357 . 4358) (nil tag-attr t 4351 . 4357) (nil tag-name "p" 4351 . 4357) (nil tag-type start 4351 . 4357) (nil font-lock-face web-mode-html-attr-value-face 4351 . 4357) (nil tag-attr t 4350 . 4351) (nil tag-name "p" 4350 . 4351) (nil tag-type start 4350 . 4351) (nil font-lock-face web-mode-html-attr-equal-face 4350 . 4351) (nil tag-attr t 4345 . 4350) (nil tag-name "p" 4345 . 4350) (nil tag-type start 4345 . 4350) (nil font-lock-face web-mode-html-attr-engine-face 4345 . 4350) (nil tag-attr-beg 2 4344 . 4345) (nil tag-attr t 4344 . 4345) (nil tag-name "p" 4344 . 4345) (nil tag-type start 4344 . 4345) (nil font-lock-face web-mode-html-attr-engine-face 4344 . 4345) (4344 . 4390)) nil (25451 32357 477703 716000) 0 nil])
([nil nil ((4390 . 4391)) nil (25451 32357 477692 476000) 0 nil])
([nil nil ((4464 . 4482) ("              " . 4464) (4441 . 4445) (#(" " 0 1 (tag-name "p" tag-type start)) . -4384) (4310 . 4328) ("              " . 4310) 4221) nil (25451 32357 477690 738000) 0 nil])
([nil nil ((4541 . 4556)) nil (25451 32357 477688 432000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4603 . 4604) (nil tag-name "span" 4603 . 4604) (nil tag-type end 4603 . 4604) (nil tag-end t 4603 . 4604) (nil font-lock-face web-mode-html-tag-bracket-face 4603 . 4604) (nil tag-name "span" 4599 . 4603) (nil tag-type end 4599 . 4603) (nil font-lock-face web-mode-html-tag-face 4599 . 4603) (nil tag-name "span" 4598 . 4599) (nil tag-type end 4598 . 4599) (nil font-lock-face web-mode-html-tag-bracket-face 4598 . 4599) (nil tag-name "span" 4597 . 4598) (nil tag-type end 4597 . 4598) (nil tag-beg 20 4597 . 4598) (nil font-lock-face web-mode-html-tag-bracket-face 4597 . 4598) (nil block-side t 4596 . 4597) (nil block-end t 4596 . 4597) (nil block-token delimiter-end 4596 . 4597) (nil font-lock-face web-mode-block-delimiter-face 4596 . 4597) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4596 . 4597) (nil block-side t 4595 . 4596) (nil block-token delimiter-end 4595 . 4596) (nil font-lock-face web-mode-block-delimiter-face 4595 . 4596) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4595 . 4596) (nil block-side t 4594 . 4595) (nil face (rainbow-delimiters-depth-3-face) 4594 . 4595) (nil block-side t 4593 . 4594) (nil block-side t 4592 . 4593) (nil face web-mode-variable-name-face 4592 . 4593) (nil block-side t 4591 . 4592) (nil face web-mode-variable-name-face 4591 . 4592) (nil block-side t 4590 . 4591) (nil face web-mode-variable-name-face 4590 . 4591) (nil block-side t 4589 . 4590) (nil face web-mode-variable-name-face 4589 . 4590) (nil block-side t 4588 . 4589) (nil face web-mode-variable-name-face 4588 . 4589) (nil block-side t 4587 . 4588) (nil face web-mode-variable-name-face 4587 . 4588) (nil block-side t 4586 . 4587) (nil face web-mode-variable-name-face 4586 . 4587) (nil block-side t 4585 . 4586) (nil face web-mode-variable-name-face 4585 . 4586) (nil block-side t 4584 . 4585) (nil block-side t 4583 . 4584) (nil face web-mode-variable-name-face 4583 . 4584) (nil block-side t 4582 . 4583) (nil face web-mode-variable-name-face 4582 . 4583) (nil block-side t 4581 . 4582) (nil face web-mode-variable-name-face 4581 . 4582) (nil block-side t 4580 . 4581) (nil face web-mode-variable-name-face 4580 . 4581) (nil block-side t 4579 . 4580) (nil face web-mode-variable-name-face 4579 . 4580) (nil block-side t 4578 . 4579) (nil face web-mode-variable-name-face 4578 . 4579) (nil block-side t 4577 . 4578) (nil face web-mode-variable-name-face 4577 . 4578) (nil block-side t 4576 . 4577) (nil face web-mode-variable-name-face 4576 . 4577) (nil block-side t 4575 . 4576) (nil face web-mode-variable-name-face 4575 . 4576) (nil block-side t 4574 . 4575) (nil face web-mode-variable-name-face 4574 . 4575) (nil block-side t 4573 . 4574) (nil face web-mode-variable-name-face 4573 . 4574) (nil block-side t 4572 . 4573) (nil face web-mode-variable-name-face 4572 . 4573) (nil block-side t 4571 . 4572) (nil face web-mode-variable-name-face 4571 . 4572) (nil block-side t 4570 . 4571) (nil face web-mode-variable-name-face 4570 . 4571) (nil block-side t 4569 . 4570) (nil face web-mode-variable-name-face 4569 . 4570) (nil block-side t 4568 . 4569) (nil block-side t 4567 . 4568) (nil face (rainbow-delimiters-depth-3-face) 4567 . 4568) (nil block-side t 4566 . 4567) (nil face web-mode-variable-name-face 4566 . 4567) (nil block-side t 4565 . 4566) (nil block-side t 4564 . 4565) (nil block-token delimiter-beg 4564 . 4565) (nil font-lock-face web-mode-block-delimiter-face 4564 . 4565) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4564 . 4565) (nil block-beg 0 4563 . 4564) (nil block-controls 0 4563 . 4564) (nil block-side t 4563 . 4564) (nil block-token delimiter-beg 4563 . 4564) (nil font-lock-face web-mode-block-delimiter-face 4563 . 4564) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4563 . 4564) (nil tag-name "span" 4561 . 4562) (nil tag-type start 4561 . 4562) (nil tag-end t 4561 . 4562) (nil font-lock-face web-mode-html-tag-bracket-face 4561 . 4562) (nil tag-name "span" 4557 . 4561) (nil tag-type start 4557 . 4561) (nil font-lock-face web-mode-html-tag-face 4557 . 4561) (nil tag-name "span" 4556 . 4557) (nil tag-type start 4556 . 4557) (nil tag-beg 16 4556 . 4557) (nil font-lock-face web-mode-html-tag-bracket-face 4556 . 4557) (4556 . 4604)) nil (25451 32357 477682 51000) 0 nil])
([nil nil ((#("{{$t('AnalysisNetwork.dataDiff')}}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2 3 (block-side t) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face (rainbow-delimiters-depth-3-face)) 5 6 (block-side t) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t face web-mode-variable-name-face) 15 16 (block-side t face web-mode-variable-name-face) 16 17 (block-side t face web-mode-variable-name-face) 17 18 (block-side t face web-mode-variable-name-face) 18 19 (block-side t face web-mode-variable-name-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t) 31 32 (block-side t face (rainbow-delimiters-depth-3-face)) 32 33 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 33 34 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 4563) (undo-tree-id2582 . -34) (undo-tree-id2583 . -34) (undo-tree-id2584 . -34)) nil (25451 32357 477639 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4579 . 4580) (nil rear-nonsticky t 4579 . 4580) (nil block-side t 4579 . 4580) (nil block-end t 4579 . 4580) (nil block-token delimiter-end 4579 . 4580) (nil font-lock-face web-mode-block-delimiter-face 4579 . 4580) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4579 . 4580) (nil block-side t 4578 . 4579) (nil block-token delimiter-end 4578 . 4579) (nil font-lock-face web-mode-block-delimiter-face 4578 . 4579) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4578 . 4579) (nil block-side t 4577 . 4578) (nil rear-nonsticky t 4576 . 4577) (nil block-side t 4576 . 4577) (nil face web-mode-variable-name-face 4576 . 4577) (nil block-side t 4575 . 4576) (nil face web-mode-variable-name-face 4575 . 4576) (nil block-side t 4574 . 4575) (nil face web-mode-variable-name-face 4574 . 4575) (nil block-side t 4573 . 4574) (nil face web-mode-variable-name-face 4573 . 4574) (nil block-side t 4572 . 4573) (nil face web-mode-variable-name-face 4572 . 4573) (nil block-side t 4571 . 4572) (nil face web-mode-variable-name-face 4571 . 4572) (nil block-side t 4570 . 4571) (nil face web-mode-variable-name-face 4570 . 4571) (nil block-side t 4569 . 4570) (nil face web-mode-variable-name-face 4569 . 4570) (nil block-side t 4568 . 4569) (nil face web-mode-variable-name-face 4568 . 4569) (nil block-side t 4567 . 4568) (nil face web-mode-variable-name-face 4567 . 4568) (nil block-side t 4566 . 4567) (nil face web-mode-variable-name-face 4566 . 4567) (nil block-side t 4565 . 4566) (nil block-side t 4564 . 4565) (nil block-token delimiter-beg 4564 . 4565) (nil font-lock-face web-mode-block-delimiter-face 4564 . 4565) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4564 . 4565) (nil block-beg 0 4563 . 4564) (nil block-controls 0 4563 . 4564) (nil block-side t 4563 . 4564) (nil block-token delimiter-beg 4563 . 4564) (nil font-lock-face web-mode-block-delimiter-face 4563 . 4564) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4563 . 4564) (4563 . 4580)) nil (25451 32357 477611 526000) 0 nil])
([nil nil ((4348 . 4369) (#(" " 0 1 (tag-name "p" tag-type start)) . 4347) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (4348 . 4349) (t 25451 32357 505649 270000)) nil (25451 32375 566871 178000) 0 nil])
([nil nil ((4415 . 4436) (#(" " 0 1 (tag-name "p" tag-type start)) . 4414) (undo-tree-id2585 . -1) (4415 . 4416)) nil (25451 32375 566861 584000) 0 nil])
([nil nil ((#("              <span> {{ cursorvalue }}</span>
" 14 15 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 15 19 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 19 20 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 21 22 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 22 23 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 23 24 (block-side t) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t) 36 37 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 37 38 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 38 39 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 39 40 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 40 44 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 44 45 (rear-nonsticky t tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4630) (undo-tree-id2588 . -21) (undo-tree-id2589 . -22) (undo-tree-id2590 . -46) (undo-tree-id2591 . -14) (undo-tree-id2592 . -21) (4603 . 4630) (#("              </v-tooltip>
" 14 15 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 16 25 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4557) (undo-tree-id2593 . -26) (undo-tree-id2594 . -26) (4584 . 4630) 4606 (t 25451 32375 585901 621000)) nil (25451 32396 167607 736000) 0 nil])
([nil nil ((4557 . 4573) ("              " . 4557) 4579) nil (25451 32396 167585 629000) 0 nil])
([nil nil ((2922 . 2937) (t 25451 32396 186188 873000)) nil (25451 32482 582897 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3011 . 3012) (nil rear-nonsticky t 3011 . 3012) (nil tag-name "template" 3011 . 3012) (nil tag-type start 3011 . 3012) (nil tag-end t 3011 . 3012) (nil font-lock-face web-mode-html-tag-bracket-face 3011 . 3012) (nil block-side t 3010 . 3011) (nil block-end t 3010 . 3011) (nil block-token delimiter-end 3010 . 3011) (nil tag-attr t 3010 . 3011) (nil tag-attr-end 16 3010 . 3011) (nil tag-name "template" 3010 . 3011) (nil tag-type start 3010 . 3011) (nil font-lock-face web-mode-block-delimiter-face 3010 . 3011) (nil block-side t 3008 . 3010) (nil tag-attr t 3008 . 3010) (nil tag-name "template" 3008 . 3010) (nil tag-type start 3008 . 3010) (nil block-side t 3007 . 3008) (nil tag-attr t 3007 . 3008) (nil tag-name "template" 3007 . 3008) (nil tag-type start 3007 . 3008) (nil face web-mode-variable-name-face 3007 . 3008) (nil block-side t 3006 . 3007) (nil tag-attr t 3006 . 3007) (nil tag-name "template" 3006 . 3007) (nil tag-type start 3006 . 3007) (nil face web-mode-variable-name-face 3006 . 3007) (nil block-side t 3005 . 3006) (nil tag-attr t 3005 . 3006) (nil tag-name "template" 3005 . 3006) (nil tag-type start 3005 . 3006) (nil face web-mode-variable-name-face 3005 . 3006) (nil block-side t 3004 . 3005) (nil tag-attr t 3004 . 3005) (nil tag-name "template" 3004 . 3005) (nil tag-type start 3004 . 3005) (nil face web-mode-variable-name-face 3004 . 3005) (nil block-side t 3003 . 3004) (nil tag-attr t 3003 . 3004) (nil tag-name "template" 3003 . 3004) (nil tag-type start 3003 . 3004) (nil face web-mode-variable-name-face 3003 . 3004) (nil block-side t 3001 . 3003) (nil tag-attr t 3001 . 3003) (nil tag-name "template" 3001 . 3003) (nil tag-type start 3001 . 3003) (nil block-side t 3000 . 3001) (nil tag-attr t 3000 . 3001) (nil tag-name "template" 3000 . 3001) (nil tag-type start 3000 . 3001) (nil face web-mode-variable-name-face 3000 . 3001) (nil block-side t 2999 . 3000) (nil tag-attr t 2999 . 3000) (nil tag-name "template" 2999 . 3000) (nil tag-type start 2999 . 3000) (nil face web-mode-variable-name-face 2999 . 3000) (nil block-side t 2997 . 2999) (nil tag-attr t 2997 . 2999) (nil tag-name "template" 2997 . 2999) (nil tag-type start 2997 . 2999) (nil block-side t 2996 . 2997) (nil block-token delimiter-beg 2996 . 2997) (nil tag-attr t 2996 . 2997) (nil tag-name "template" 2996 . 2997) (nil tag-type start 2996 . 2997) (nil font-lock-face web-mode-block-delimiter-face 2996 . 2997) (nil block-side t 2995 . 2996) (nil block-token delimiter-beg 2995 . 2996) (nil tag-attr t 2995 . 2996) (nil tag-name "template" 2995 . 2996) (nil tag-type start 2995 . 2996) (nil font-lock-face web-mode-block-delimiter-face 2995 . 2996) (nil block-side t 2994 . 2995) (nil block-token delimiter-beg 2994 . 2995) (nil tag-attr t 2994 . 2995) (nil tag-name "template" 2994 . 2995) (nil tag-type start 2994 . 2995) (nil font-lock-face web-mode-block-delimiter-face 2994 . 2995) (nil block-side t 2993 . 2994) (nil block-token delimiter-beg 2993 . 2994) (nil tag-attr t 2993 . 2994) (nil tag-name "template" 2993 . 2994) (nil tag-type start 2993 . 2994) (nil font-lock-face web-mode-block-delimiter-face 2993 . 2994) (nil block-side t 2992 . 2993) (nil block-token delimiter-beg 2992 . 2993) (nil tag-attr t 2992 . 2993) (nil tag-name "template" 2992 . 2993) (nil tag-type start 2992 . 2993) (nil font-lock-face web-mode-block-delimiter-face 2992 . 2993) (nil block-side t 2991 . 2992) (nil block-token delimiter-beg 2991 . 2992) (nil tag-attr t 2991 . 2992) (nil tag-name "template" 2991 . 2992) (nil tag-type start 2991 . 2992) (nil font-lock-face web-mode-block-delimiter-face 2991 . 2992) (nil block-side t 2990 . 2991) (nil block-token delimiter-beg 2990 . 2991) (nil tag-attr t 2990 . 2991) (nil tag-name "template" 2990 . 2991) (nil tag-type start 2990 . 2991) (nil font-lock-face web-mode-block-delimiter-face 2990 . 2991) (nil block-side t 2989 . 2990) (nil block-token delimiter-beg 2989 . 2990) (nil tag-attr t 2989 . 2990) (nil tag-name "template" 2989 . 2990) (nil tag-type start 2989 . 2990) (nil font-lock-face web-mode-block-delimiter-face 2989 . 2990) (nil block-side t 2988 . 2989) (nil block-token delimiter-beg 2988 . 2989) (nil tag-attr t 2988 . 2989) (nil tag-name "template" 2988 . 2989) (nil tag-type start 2988 . 2989) (nil font-lock-face web-mode-block-delimiter-face 2988 . 2989) (nil block-side t 2987 . 2988) (nil block-token delimiter-beg 2987 . 2988) (nil tag-attr t 2987 . 2988) (nil tag-name "template" 2987 . 2988) (nil tag-type start 2987 . 2988) (nil font-lock-face web-mode-block-delimiter-face 2987 . 2988) (nil block-side t 2986 . 2987) (nil block-token delimiter-beg 2986 . 2987) (nil tag-attr t 2986 . 2987) (nil tag-name "template" 2986 . 2987) (nil tag-type start 2986 . 2987) (nil font-lock-face web-mode-block-delimiter-face 2986 . 2987) (nil block-beg 0 2985 . 2986) (nil block-controls 0 2985 . 2986) (nil block-side t 2985 . 2986) (nil block-token delimiter-beg 2985 . 2986) (nil tag-attr t 2985 . 2986) (nil tag-name "template" 2985 . 2986) (nil tag-type start 2985 . 2986) (nil font-lock-face web-mode-block-delimiter-face 2985 . 2986) (nil tag-attr t 2980 . 2985) (nil tag-name "template" 2980 . 2985) (nil tag-type start 2980 . 2985) (nil font-lock-face web-mode-html-attr-engine-face 2980 . 2985) (nil tag-attr-beg 2 2979 . 2980) (nil tag-attr t 2979 . 2980) (nil tag-name "template" 2979 . 2980) (nil tag-type start 2979 . 2980) (nil font-lock-face web-mode-html-attr-engine-face 2979 . 2980) (nil tag-name "template" 2978 . 2979) (nil tag-type start 2978 . 2979) (nil tag-name "template" 2970 . 2978) (nil tag-type start 2970 . 2978) (nil font-lock-face web-mode-html-tag-face 2970 . 2978) (nil tag-name "template" 2969 . 2970) (nil tag-type start 2969 . 2970) (nil tag-beg 17 2969 . 2970) (nil font-lock-face web-mode-html-tag-bracket-face 2969 . 2970) (nil tag-name "v-tooltip" 2951 . 2952) (nil tag-type start 2951 . 2952) (nil tag-end t 2951 . 2952) (nil font-lock-face web-mode-html-tag-bracket-face 2951 . 2952) (nil tag-attr t 2950 . 2951) (nil tag-attr-end 0 2950 . 2951) (nil tag-name "v-tooltip" 2950 . 2951) (nil tag-type start 2950 . 2951) (nil font-lock-face web-mode-html-attr-name-face 2950 . 2951) (nil tag-attr t 2949 . 2950) (nil tag-name "v-tooltip" 2949 . 2950) (nil tag-type start 2949 . 2950) (nil font-lock-face web-mode-html-attr-name-face 2949 . 2950) (nil tag-attr-beg 0 2948 . 2949) (nil tag-attr t 2948 . 2949) (nil tag-name "v-tooltip" 2948 . 2949) (nil tag-type start 2948 . 2949) (nil font-lock-face web-mode-html-attr-name-face 2948 . 2949) (nil tag-name "v-tooltip" 2947 . 2948) (nil tag-type start 2947 . 2948) (nil tag-name "v-tooltip" 2938 . 2947) (nil tag-type start 2938 . 2947) (nil font-lock-face web-mode-html-tag-custom-face 2938 . 2947) (nil tag-name "v-tooltip" 2937 . 2938) (nil tag-type start 2937 . 2938) (nil tag-beg 19 2937 . 2938) (nil font-lock-face web-mode-html-tag-bracket-face 2937 . 2938) (2937 . 3012)) nil (25451 32482 582887 817000) 0 nil])
([nil nil ((3193 . 3211) ("              " . 3193) (3130 . 3150) ("              " . 3130) (3084 . 3102) ("              " . 3084) (3013 . 3031) ("              " . 3013)) nil (25451 32482 582848 973000) 0 nil])
([nil nil ((3012 . 3031)) nil (25451 32482 582846 514000) 0 nil])
([nil nil ((3031 . 3033)) nil (25451 32482 582845 494000) 0 nil])
([nil nil ((#("p" 0 1 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -3032) (undo-tree-id2634 . -1) 3033) nil (25451 32482 582844 338000) 0 nil])
([nil nil ((3032 . 3041)) nil (25451 32482 582842 101000) 0 nil])
([nil nil (("<" . -3034) (undo-tree-id2631 . -1) (#("n" 0 1 (tag-name "n" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -3035) (undo-tree-id2632 . -1) (#(">" 0 1 (tag-name "n" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -3036) (undo-tree-id2633 . -1) 3037) nil (25451 32482 582840 697000) 0 nil])
([nil nil ((#(">" 0 1 (tag-name "sp" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3034) (#("n" 0 1 (tag-name "spn" tag-type start font-lock-face web-mode-html-tag-face)) . 3034) (#("/" 0 1 (tag-name "sp" tag-type start)) . 3034) (#("<" 0 1 (tag-name "n" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face)) . 3034)) nil (25451 32482 582835 66000) 0 nil])
([nil nil ((3034 . 3044)) nil (25451 32482 582833 396000) 0 nil])
([nil nil ((3038 . 3058) (3039 . 3057) (#("                    " 0 20 (face whitespace-trailing)) . 3038) (3038 . 3058) (3038 . 3039) ("                  " . 3038) (3037 . 3056)) nil (25451 32482 582831 815000) 0 nil])
([nil nil ((#("                  <v-icon class=\"tablestats\">mdi-table-search</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 33 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 33 42 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (rear-nonsticky t tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 61 62 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 62 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 63 69 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 69 70 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3156) (3130 . 3156) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3059) (undo-tree-id2630 . -20) (3085 . 3156) 3079) nil (25451 32482 582829 276000) 0 nil])
([nil nil ((#("                  <p style=\"display:inline;\">
" 18 19 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "p" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 23 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 27 28 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 29 42 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3202) (3176 . 3202) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3130) (undo-tree-id2629 . -20) (3156 . 3202) 3150) nil (25451 32482 582824 471000) 0 nil])
([nil nil ((#("                    {{(cursorX+1)}} / {{(startP + cursorY+1)}}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t face (rainbow-delimiters-depth-3-face)) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 32 (block-side t) 32 33 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 33 34 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 34 35 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 38 39 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 39 40 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 40 41 (block-side t face (rainbow-delimiters-depth-3-face)) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t face web-mode-variable-name-face) 43 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t face web-mode-variable-name-face) 45 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t face web-mode-variable-name-face) 47 50 (block-side t) 50 51 (block-side t face web-mode-variable-name-face) 51 52 (block-side t face web-mode-variable-name-face) 52 53 (block-side t face web-mode-variable-name-face) 53 54 (block-side t face web-mode-variable-name-face) 54 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t face web-mode-variable-name-face) 56 57 (block-side t face web-mode-variable-name-face) 57 59 (block-side t) 59 60 (block-side t face (rainbow-delimiters-depth-3-face)) 60 61 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 61 62 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3265) (3239 . 3265) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3176) (undo-tree-id2628 . -20) (3202 . 3265) 3196) nil (25451 32482 582821 338000) 0 nil])
([nil nil ((#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3288) (undo-tree-id2626 . -22) (3262 . 3288) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3239) (undo-tree-id2627 . -20) (3265 . 3288) 3259) nil (25451 32482 582817 931000) 0 nil])
([nil nil ((3287 . 3306)) nil (25451 32482 582813 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3407 . 3408) (nil tag-name "v-tooltip" 3407 . 3408) (nil tag-type end 3407 . 3408) (nil tag-end t 3407 . 3408) (nil font-lock-face web-mode-html-tag-bracket-face 3407 . 3408) (nil tag-name "v-tooltip" 3398 . 3407) (nil tag-type end 3398 . 3407) (nil font-lock-face web-mode-html-tag-custom-face 3398 . 3407) (nil tag-name "v-tooltip" 3397 . 3398) (nil tag-type end 3397 . 3398) (nil font-lock-face web-mode-html-tag-bracket-face 3397 . 3398) (nil tag-name "v-tooltip" 3396 . 3397) (nil tag-type end 3396 . 3397) (nil tag-beg 22 3396 . 3397) (nil font-lock-face web-mode-html-tag-bracket-face 3396 . 3397) (nil rear-nonsticky t 3380 . 3381) (nil tag-name "span" 3380 . 3381) (nil tag-type end 3380 . 3381) (nil tag-end t 3380 . 3381) (nil font-lock-face web-mode-html-tag-bracket-face 3380 . 3381) (nil tag-name "span" 3376 . 3380) (nil tag-type end 3376 . 3380) (nil font-lock-face web-mode-html-tag-face 3376 . 3380) (nil tag-name "span" 3375 . 3376) (nil tag-type end 3375 . 3376) (nil font-lock-face web-mode-html-tag-bracket-face 3375 . 3376) (nil tag-name "span" 3374 . 3375) (nil tag-type end 3374 . 3375) (nil tag-beg 20 3374 . 3375) (nil font-lock-face web-mode-html-tag-bracket-face 3374 . 3375) (nil rear-nonsticky t 3373 . 3374) (nil block-side t 3373 . 3374) (nil block-end t 3373 . 3374) (nil block-token delimiter-end 3373 . 3374) (nil font-lock-face web-mode-block-delimiter-face 3373 . 3374) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3373 . 3374) (nil block-side t 3372 . 3373) (nil block-token delimiter-end 3372 . 3373) (nil font-lock-face web-mode-block-delimiter-face 3372 . 3373) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3372 . 3373) (nil block-side t 3371 . 3372) (nil block-side t 3370 . 3371) (nil face web-mode-variable-name-face 3370 . 3371) (nil block-side t 3369 . 3370) (nil face web-mode-variable-name-face 3369 . 3370) (nil block-side t 3368 . 3369) (nil face web-mode-variable-name-face 3368 . 3369) (nil block-side t 3367 . 3368) (nil face web-mode-variable-name-face 3367 . 3368) (nil block-side t 3366 . 3367) (nil face web-mode-variable-name-face 3366 . 3367) (nil block-side t 3365 . 3366) (nil face web-mode-variable-name-face 3365 . 3366) (nil block-side t 3364 . 3365) (nil face web-mode-variable-name-face 3364 . 3365) (nil block-side t 3363 . 3364) (nil face web-mode-variable-name-face 3363 . 3364) (nil block-side t 3362 . 3363) (nil face web-mode-variable-name-face 3362 . 3363) (nil block-side t 3361 . 3362) (nil face web-mode-variable-name-face 3361 . 3362) (nil block-side t 3360 . 3361) (nil face web-mode-variable-name-face 3360 . 3361) (nil block-side t 3359 . 3360) (nil block-side t 3358 . 3359) (nil block-token delimiter-beg 3358 . 3359) (nil font-lock-face web-mode-block-delimiter-face 3358 . 3359) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3358 . 3359) (nil block-beg 0 3357 . 3358) (nil block-controls 0 3357 . 3358) (nil block-side t 3357 . 3358) (nil block-token delimiter-beg 3357 . 3358) (nil font-lock-face web-mode-block-delimiter-face 3357 . 3358) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3357 . 3358) (nil tag-name "span" 3355 . 3356) (nil tag-type start 3355 . 3356) (nil tag-end t 3355 . 3356) (nil font-lock-face web-mode-html-tag-bracket-face 3355 . 3356) (nil tag-name "span" 3351 . 3355) (nil tag-type start 3351 . 3355) (nil font-lock-face web-mode-html-tag-face 3351 . 3355) (nil tag-name "span" 3350 . 3351) (nil tag-type start 3350 . 3351) (nil tag-beg 16 3350 . 3351) (nil font-lock-face web-mode-html-tag-bracket-face 3350 . 3351) (nil tag-name "template" 3332 . 3333) (nil tag-type end 3332 . 3333) (nil tag-end t 3332 . 3333) (nil font-lock-face web-mode-html-tag-bracket-face 3332 . 3333) (nil tag-name "template" 3324 . 3332) (nil tag-type end 3324 . 3332) (nil font-lock-face web-mode-html-tag-face 3324 . 3332) (nil tag-name "template" 3323 . 3324) (nil tag-type end 3323 . 3324) (nil font-lock-face web-mode-html-tag-bracket-face 3323 . 3324) (nil tag-name "template" 3322 . 3323) (nil tag-type end 3322 . 3323) (nil tag-beg 20 3322 . 3323) (nil font-lock-face web-mode-html-tag-bracket-face 3322 . 3323) (3306 . 3408)) nil (25451 32482 582807 753000) 0 nil])
([nil nil (("                  " . -3312) (undo-tree-id2625 . -2) (3263 . 3265) (3200 . 3202) (3150 . 3152) (3077 . 3079) 2875) nil (25451 32482 582785 233000) 0 nil])
([nil nil ((3398 . 3413)) nil (25451 32482 582781 537000) 0 nil])
([nil nil ((2874 . 2887)) nil (25451 32482 582779 959000) 0 nil])
([nil nil ((#("              " 0 14 (face whitespace-trailing)) . -3380) (#("                    " 0 20 (face whitespace-trailing)) . -3039) ("            " . -2875) (undo-tree-id2595 . -12) (undo-tree-id2596 . -12) (undo-tree-id2597 . -12) (undo-tree-id2598 . -12) (undo-tree-id2599 . -12) (undo-tree-id2600 . -12) (undo-tree-id2601 . -12) (undo-tree-id2602 . -12) (undo-tree-id2603 . -12) (undo-tree-id2604 . -12) (undo-tree-id2605 . -12) (undo-tree-id2606 . -12) (undo-tree-id2607 . -12) (undo-tree-id2608 . -12) (undo-tree-id2609 . -12) (undo-tree-id2610 . -12) (undo-tree-id2611 . -12) (undo-tree-id2612 . -12) (undo-tree-id2613 . -12) (undo-tree-id2614 . -12) (undo-tree-id2615 . -12) (undo-tree-id2616 . -12) (undo-tree-id2617 . -12) (undo-tree-id2618 . -12) (undo-tree-id2619 . -12) (undo-tree-id2620 . -12) (undo-tree-id2621 . -12) (undo-tree-id2622 . -12) (undo-tree-id2623 . -12) (undo-tree-id2624 . -12) 2887) nil (25451 32482 582773 317000) 0 nil])
([nil nil (("
" . 3038) (undo-tree-id2636 . -1) (t 25451 32482 611390 976000)) nil (25451 32503 167932 426000) 0 nil])
([nil nil ((3037 . 3038)) nil (25451 32503 167929 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3083 . 3084) (nil tag-attr t 3083 . 3084) (nil tag-attr-end 4 3083 . 3084) (nil tag-name "span" 3083 . 3084) (nil tag-type start 3083 . 3084) (nil font-lock-face web-mode-html-attr-value-face 3083 . 3084) (nil tag-attr t 3080 . 3083) (nil tag-name "span" 3080 . 3083) (nil tag-type start 3080 . 3083) (nil font-lock-face web-mode-html-attr-value-face 3080 . 3083) (nil tag-attr t 3079 . 3080) (nil tag-name "span" 3079 . 3080) (nil tag-type start 3079 . 3080) (nil font-lock-face web-mode-html-attr-equal-face 3079 . 3080) (nil tag-attr t 3076 . 3079) (nil tag-name "span" 3076 . 3079) (nil tag-type start 3076 . 3079) (nil font-lock-face web-mode-html-attr-engine-face 3076 . 3079) (nil tag-attr-beg 2 3075 . 3076) (nil tag-attr t 3075 . 3076) (nil tag-name "span" 3075 . 3076) (nil tag-type start 3075 . 3076) (nil font-lock-face web-mode-html-attr-engine-face 3075 . 3076) (nil tag-name "span" 3053 . 3075) (nil tag-type start 3053 . 3075) (nil tag-name "span" 3052 . 3053) (nil tag-type start 3052 . 3053) (nil tag-attr t 3051 . 3052) (nil tag-attr-end 6 3051 . 3052) (nil tag-name "span" 3051 . 3052) (nil tag-type start 3051 . 3052) (nil font-lock-face web-mode-html-attr-value-face 3051 . 3052) (nil tag-attr t 3045 . 3051) (nil tag-name "span" 3045 . 3051) (nil tag-type start 3045 . 3051) (nil font-lock-face web-mode-html-attr-value-face 3045 . 3051) (nil tag-attr t 3044 . 3045) (nil tag-name "span" 3044 . 3045) (nil tag-type start 3044 . 3045) (nil font-lock-face web-mode-html-attr-equal-face 3044 . 3045) (nil tag-attr t 3039 . 3044) (nil tag-name "span" 3039 . 3044) (nil tag-type start 3039 . 3044) (nil font-lock-face web-mode-html-attr-engine-face 3039 . 3044) (nil tag-attr-beg 2 3038 . 3039) (nil tag-attr t 3038 . 3039) (nil tag-name "span" 3038 . 3039) (nil tag-type start 3038 . 3039) (nil font-lock-face web-mode-html-attr-engine-face 3038 . 3039) (3038 . 3084)) nil (25451 32503 167925 875000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#("
" 0 1 (tag-name "span" tag-type start)) . 3052) (undo-tree-id2635 . -1)) nil (25451 32503 169876 198000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 3052)) nil (25451 32515 967979 793000) 0 nil] [nil nil ((#("v" 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052) (#(" " 0 1 (tag-name "span" tag-type start)) . 3052)) ((3052 . 3053) (3052 . 3053) (3052 . 3053)) (25451 32503 167888 212000) 0 nil])
([nil nil ((#("{{ cursorvalue }}" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1 2 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2 3 (block-side t) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face) 10 11 (block-side t face web-mode-variable-name-face) 11 12 (block-side t face web-mode-variable-name-face) 12 13 (block-side t face web-mode-variable-name-face) 13 14 (block-side t face web-mode-variable-name-face) 14 15 (block-side t) 15 16 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 16 17 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3352) (undo-tree-id2638 . -17) (undo-tree-id2639 . -17)) nil (25451 32515 967978 132000) 0 nil])
nil
([nil nil ((3352 . 3365)) nil (25451 32515 967973 799000) 0 nil])
([nil nil ((" " . -3364) (undo-tree-id2637 . -1) 3365) nil (25451 32515 967971 262000) 0 nil])
([nil nil ((3364 . 3365)) nil (25451 32515 967954 461000) 0 nil])
([nil nil ((3462 . 3477) (t 25451 32515 988103 812000)) nil (25451 32561 94387 224000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3491 . 3492) (nil rear-nonsticky t 3491 . 3492) (nil block-side t 3491 . 3492) (nil block-end t 3491 . 3492) (nil block-token delimiter-end 3491 . 3492) (nil font-lock-face web-mode-block-delimiter-face 3491 . 3492) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3491 . 3492) (nil block-side t 3490 . 3491) (nil block-token delimiter-end 3490 . 3491) (nil font-lock-face web-mode-block-delimiter-face 3490 . 3491) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3490 . 3491) (nil block-side t 3489 . 3490) (nil block-side t 3488 . 3489) (nil face web-mode-variable-name-face 3488 . 3489) (nil block-side t 3487 . 3488) (nil face web-mode-variable-name-face 3487 . 3488) (nil block-side t 3486 . 3487) (nil face web-mode-variable-name-face 3486 . 3487) (nil block-side t 3485 . 3486) (nil face web-mode-variable-name-face 3485 . 3486) (nil block-side t 3484 . 3485) (nil face web-mode-variable-name-face 3484 . 3485) (nil block-side t 3483 . 3484) (nil face web-mode-variable-name-face 3483 . 3484) (nil block-side t 3482 . 3483) (nil face web-mode-variable-name-face 3482 . 3483) (nil block-side t 3481 . 3482) (nil face web-mode-variable-name-face 3481 . 3482) (nil block-side t 3480 . 3481) (nil face web-mode-variable-name-face 3480 . 3481) (nil block-side t 3479 . 3480) (nil block-side t 3478 . 3479) (nil block-token delimiter-beg 3478 . 3479) (nil font-lock-face web-mode-block-delimiter-face 3478 . 3479) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3478 . 3479) (nil block-beg 0 3477 . 3478) (nil block-controls 0 3477 . 3478) (nil block-side t 3477 . 3478) (nil block-token delimiter-beg 3477 . 3478) (nil font-lock-face web-mode-block-delimiter-face 3477 . 3478) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3477 . 3478) (3477 . 3492)) nil (25451 32561 94383 945000) 0 nil])
([nil nil ((#("                  <p style=\"display:inline;\">
                    {{ dataTSize }}" 18 19 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "p" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 27 43 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (rear-nonsticky t tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 66 67 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 67 68 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 68 69 (block-side t) 69 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t face web-mode-variable-name-face) 71 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t face web-mode-variable-name-face) 73 74 (block-side t face web-mode-variable-name-face) 74 75 (block-side t face web-mode-variable-name-face) 75 76 (block-side t face web-mode-variable-name-face) 76 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t face web-mode-variable-name-face) 78 79 (block-side t) 79 80 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 80 81 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3583) (undo-tree-id2648 . -81) (undo-tree-id2649 . -46) (undo-tree-id2650 . -81) (undo-tree-id2651 . -81) (undo-tree-id2652 . -81)) nil (25451 32561 94374 139000) 0 nil])
([nil nil (("
" . -3582) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) 3583) nil (25451 32561 94366 976000) 0 nil])
([nil nil ((#("
                  </p>" 19 20 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 21 22 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 22 23 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4074) (undo-tree-id2640 . -23) (undo-tree-id2641 . -1) (undo-tree-id2642 . -23)) nil (25451 32561 94359 786000) 0 nil])
([nil nil ((4194 . 4209)) nil (25451 32561 94346 972000) 0 nil])
([nil nil (("  " . -4037) ("  " . -4017) ("  " . -3987) ("  " . -3951) (#("  " 0 2 (tag-name "v-icon" tag-type start)) . -3927) (#("  " 0 2 (tag-name "v-icon" tag-type start)) . -3901) (#("  " 0 2 (tag-name "v-icon" tag-type start)) . -3860) (#("  " 0 2 (tag-name "v-icon" tag-type start)) . -3832) ("  " . -3802) ("  " . -3758) (#("  " 0 2 (tag-name "span" tag-type start)) . -3735) (#("  " 0 2 (tag-name "span" tag-type start)) . -3707) (#("  " 0 2 (tag-name "span" tag-type start)) . -3672) (#("  " 0 2 (tag-name "span" tag-type start)) . -3627) ("  " . -3601) 3493) nil (25451 32561 94343 544000) 0 nil])
([nil nil ((#("              " 0 14 (face whitespace-trailing)) . -4165) 3493) nil (25451 32561 94332 532000) 0 nil])
([nil nil ((3832 . 3834) (t 25451 32561 121321 706000)) nil (25451 32573 288846 998000) 0 nil])
([nil nil ((#("
                      class=\"tablestats\"" 0 1 (tag-name "v-icon" tag-type start) 1 23 (tag-name "v-icon" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 24 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 40 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . 3839) (undo-tree-id2653 . -41) (undo-tree-id2654 . -1) (undo-tree-id2655 . -41) (t 25451 32573 317642 940000)) nil (25451 32580 725469 299000) 0 nil])
([nil nil ((3839 . 3862) (t 25451 32580 745837 11000)) nil (25451 32593 726480 101000) 0 nil])
([nil nil ((3869 . 3873) (3862 . 3870)) nil (25451 32593 726478 845000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3872) (undo-tree-id2657 . -1) 3873) nil (25451 32593 726477 475000) 0 nil])
([nil nil ((3872 . 3876)) nil (25451 32593 726474 285000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3875) (undo-tree-id2656 . -1) 3876) nil (25451 32593 726471 833000) 0 nil])
([nil nil ((3875 . 3878)) nil (25451 32593 726455 59000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face)) . -3875) (undo-tree-id2658 . -1) 3876 (t 25451 32593 750173 959000)) nil (25451 32598 553307 986000) 0 nil])
([nil nil ((3875 . 3876)) nil (25451 32598 553291 554000) 0 nil])
([nil nil ((3401 . 3415) (#("              " 0 14 (face whitespace-trailing)) . 3400) (3400 . 3414) (3400 . 3401) (t 25451 32598 574298 55000)) nil (25451 32640 586452 182000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3489 . 3490) (nil tag-name "template" 3489 . 3490) (nil tag-type start 3489 . 3490) (nil tag-end t 3489 . 3490) (nil font-lock-face web-mode-html-tag-bracket-face 3489 . 3490) (nil block-side t 3488 . 3489) (nil block-end t 3488 . 3489) (nil block-token delimiter-end 3488 . 3489) (nil tag-attr t 3488 . 3489) (nil tag-attr-end 16 3488 . 3489) (nil tag-name "template" 3488 . 3489) (nil tag-type start 3488 . 3489) (nil font-lock-face web-mode-block-delimiter-face 3488 . 3489) (nil block-side t 3486 . 3488) (nil tag-attr t 3486 . 3488) (nil tag-name "template" 3486 . 3488) (nil tag-type start 3486 . 3488) (nil block-side t 3485 . 3486) (nil tag-attr t 3485 . 3486) (nil tag-name "template" 3485 . 3486) (nil tag-type start 3485 . 3486) (nil face web-mode-variable-name-face 3485 . 3486) (nil block-side t 3484 . 3485) (nil tag-attr t 3484 . 3485) (nil tag-name "template" 3484 . 3485) (nil tag-type start 3484 . 3485) (nil face web-mode-variable-name-face 3484 . 3485) (nil block-side t 3483 . 3484) (nil tag-attr t 3483 . 3484) (nil tag-name "template" 3483 . 3484) (nil tag-type start 3483 . 3484) (nil face web-mode-variable-name-face 3483 . 3484) (nil block-side t 3482 . 3483) (nil tag-attr t 3482 . 3483) (nil tag-name "template" 3482 . 3483) (nil tag-type start 3482 . 3483) (nil face web-mode-variable-name-face 3482 . 3483) (nil block-side t 3481 . 3482) (nil tag-attr t 3481 . 3482) (nil tag-name "template" 3481 . 3482) (nil tag-type start 3481 . 3482) (nil face web-mode-variable-name-face 3481 . 3482) (nil block-side t 3479 . 3481) (nil tag-attr t 3479 . 3481) (nil tag-name "template" 3479 . 3481) (nil tag-type start 3479 . 3481) (nil block-side t 3478 . 3479) (nil tag-attr t 3478 . 3479) (nil tag-name "template" 3478 . 3479) (nil tag-type start 3478 . 3479) (nil face web-mode-variable-name-face 3478 . 3479) (nil block-side t 3477 . 3478) (nil tag-attr t 3477 . 3478) (nil tag-name "template" 3477 . 3478) (nil tag-type start 3477 . 3478) (nil face web-mode-variable-name-face 3477 . 3478) (nil block-side t 3475 . 3477) (nil tag-attr t 3475 . 3477) (nil tag-name "template" 3475 . 3477) (nil tag-type start 3475 . 3477) (nil block-side t 3474 . 3475) (nil block-token delimiter-beg 3474 . 3475) (nil tag-attr t 3474 . 3475) (nil tag-name "template" 3474 . 3475) (nil tag-type start 3474 . 3475) (nil font-lock-face web-mode-block-delimiter-face 3474 . 3475) (nil block-side t 3473 . 3474) (nil block-token delimiter-beg 3473 . 3474) (nil tag-attr t 3473 . 3474) (nil tag-name "template" 3473 . 3474) (nil tag-type start 3473 . 3474) (nil font-lock-face web-mode-block-delimiter-face 3473 . 3474) (nil block-side t 3472 . 3473) (nil block-token delimiter-beg 3472 . 3473) (nil tag-attr t 3472 . 3473) (nil tag-name "template" 3472 . 3473) (nil tag-type start 3472 . 3473) (nil font-lock-face web-mode-block-delimiter-face 3472 . 3473) (nil block-side t 3471 . 3472) (nil block-token delimiter-beg 3471 . 3472) (nil tag-attr t 3471 . 3472) (nil tag-name "template" 3471 . 3472) (nil tag-type start 3471 . 3472) (nil font-lock-face web-mode-block-delimiter-face 3471 . 3472) (nil block-side t 3470 . 3471) (nil block-token delimiter-beg 3470 . 3471) (nil tag-attr t 3470 . 3471) (nil tag-name "template" 3470 . 3471) (nil tag-type start 3470 . 3471) (nil font-lock-face web-mode-block-delimiter-face 3470 . 3471) (nil block-side t 3469 . 3470) (nil block-token delimiter-beg 3469 . 3470) (nil tag-attr t 3469 . 3470) (nil tag-name "template" 3469 . 3470) (nil tag-type start 3469 . 3470) (nil font-lock-face web-mode-block-delimiter-face 3469 . 3470) (nil block-side t 3468 . 3469) (nil block-token delimiter-beg 3468 . 3469) (nil tag-attr t 3468 . 3469) (nil tag-name "template" 3468 . 3469) (nil tag-type start 3468 . 3469) (nil font-lock-face web-mode-block-delimiter-face 3468 . 3469) (nil block-side t 3467 . 3468) (nil block-token delimiter-beg 3467 . 3468) (nil tag-attr t 3467 . 3468) (nil tag-name "template" 3467 . 3468) (nil tag-type start 3467 . 3468) (nil font-lock-face web-mode-block-delimiter-face 3467 . 3468) (nil block-side t 3466 . 3467) (nil block-token delimiter-beg 3466 . 3467) (nil tag-attr t 3466 . 3467) (nil tag-name "template" 3466 . 3467) (nil tag-type start 3466 . 3467) (nil font-lock-face web-mode-block-delimiter-face 3466 . 3467) (nil block-side t 3465 . 3466) (nil block-token delimiter-beg 3465 . 3466) (nil tag-attr t 3465 . 3466) (nil tag-name "template" 3465 . 3466) (nil tag-type start 3465 . 3466) (nil font-lock-face web-mode-block-delimiter-face 3465 . 3466) (nil block-side t 3464 . 3465) (nil block-token delimiter-beg 3464 . 3465) (nil tag-attr t 3464 . 3465) (nil tag-name "template" 3464 . 3465) (nil tag-type start 3464 . 3465) (nil font-lock-face web-mode-block-delimiter-face 3464 . 3465) (nil block-beg 0 3463 . 3464) (nil block-controls 0 3463 . 3464) (nil block-side t 3463 . 3464) (nil block-token delimiter-beg 3463 . 3464) (nil tag-attr t 3463 . 3464) (nil tag-name "template" 3463 . 3464) (nil tag-type start 3463 . 3464) (nil font-lock-face web-mode-block-delimiter-face 3463 . 3464) (nil tag-attr t 3458 . 3463) (nil tag-name "template" 3458 . 3463) (nil tag-type start 3458 . 3463) (nil font-lock-face web-mode-html-attr-engine-face 3458 . 3463) (nil tag-attr-beg 2 3457 . 3458) (nil tag-attr t 3457 . 3458) (nil tag-name "template" 3457 . 3458) (nil tag-type start 3457 . 3458) (nil font-lock-face web-mode-html-attr-engine-face 3457 . 3458) (nil tag-name "template" 3456 . 3457) (nil tag-type start 3456 . 3457) (nil tag-name "template" 3448 . 3456) (nil tag-type start 3448 . 3456) (nil font-lock-face web-mode-html-tag-face 3448 . 3456) (nil tag-name "template" 3447 . 3448) (nil tag-type start 3447 . 3448) (nil tag-beg 17 3447 . 3448) (nil font-lock-face web-mode-html-tag-bracket-face 3447 . 3448) (nil tag-name "v-tooltip" 3429 . 3430) (nil tag-type start 3429 . 3430) (nil tag-end t 3429 . 3430) (nil font-lock-face web-mode-html-tag-bracket-face 3429 . 3430) (nil tag-attr t 3428 . 3429) (nil tag-attr-end 0 3428 . 3429) (nil tag-name "v-tooltip" 3428 . 3429) (nil tag-type start 3428 . 3429) (nil font-lock-face web-mode-html-attr-name-face 3428 . 3429) (nil tag-attr t 3427 . 3428) (nil tag-name "v-tooltip" 3427 . 3428) (nil tag-type start 3427 . 3428) (nil font-lock-face web-mode-html-attr-name-face 3427 . 3428) (nil tag-attr-beg 0 3426 . 3427) (nil tag-attr t 3426 . 3427) (nil tag-name "v-tooltip" 3426 . 3427) (nil tag-type start 3426 . 3427) (nil font-lock-face web-mode-html-attr-name-face 3426 . 3427) (nil tag-name "v-tooltip" 3425 . 3426) (nil tag-type start 3425 . 3426) (nil tag-name "v-tooltip" 3416 . 3425) (nil tag-type start 3416 . 3425) (nil font-lock-face web-mode-html-tag-custom-face 3416 . 3425) (nil tag-name "v-tooltip" 3415 . 3416) (nil tag-type start 3415 . 3416) (nil tag-beg 19 3415 . 3416) (nil font-lock-face web-mode-html-tag-bracket-face 3415 . 3416) (3415 . 3490)) nil (25451 32640 586441 657000) 0 nil])
([nil nil ((3584 . 3598) ("              " . 3583) (undo-tree-id2666 . -14) (3582 . 3598)) nil (25451 32640 586404 272000) 0 nil])
([nil nil ((3584 . 3600) ("              " . 3584) (3598 . 3609)) nil (25451 32640 586401 776000) 0 nil])
([nil nil ((3611 . 3628)) nil (25451 32640 586400 449000) 0 nil])
([nil nil (("  " . -3626) (3628 . 3640)) nil (25451 32640 586399 396000) 0 nil])
([nil nil ((3557 . 3575) ("              " . 3557) (undo-tree-id2665 . -14) (3491 . 3509) ("              " . 3491) 3402) nil (25451 32640 586397 706000) 0 nil])
([nil nil ((3490 . 3509)) nil (25451 32640 586394 874000) 0 nil])
([nil nil ((3509 . 3510)) nil (25451 32640 586394 18000) 0 nil])
([nil nil ((3510 . 3522)) nil (25451 32640 586393 118000) 0 nil])
([nil nil ((3516 . 3536) (3517 . 3535) (#("                    " 0 20 (face whitespace-trailing)) . 3516) (3516 . 3536) (3516 . 3517) ("                  " . 3516) (3515 . 3534)) nil (25451 32640 586391 623000) 0 nil])
([nil nil ((#("                  <v-icon class=\"tablestats\">mdi-counter</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 43 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 57 58 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 58 64 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 64 65 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3629) (undo-tree-id2663 . -66) (3603 . 3629) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3537) (undo-tree-id2664 . -20) (3563 . 3629) 3557) nil (25451 32640 586388 884000) 0 nil])
([nil nil ((#("                  {{ dataTSize }}
" 18 19 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 20 21 (block-side t) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t) 31 32 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 32 33 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 3663) (3637 . 3663) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 3603) (undo-tree-id2662 . -20) (3629 . 3663) 3623) nil (25451 32640 586384 389000) 0 nil])
([nil nil (("
" . 3536) (undo-tree-id2661 . -1)) nil (25451 32640 586381 381000) 0 nil])
([nil nil (("                  " . -3536)) nil (25451 32640 586378 966000) 0 nil])
([nil nil ((3602 . 3604) 3617) nil (25451 32640 586377 890000) 0 nil])
([nil nil ((3514 . 3515)) nil (25451 32640 586376 645000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3579 . 3580) (nil tag-attr t 3579 . 3580) (nil tag-attr-end 4 3579 . 3580) (nil tag-name "span" 3579 . 3580) (nil tag-type start 3579 . 3580) (nil font-lock-face web-mode-html-attr-value-face 3579 . 3580) (nil tag-attr t 3576 . 3579) (nil tag-name "span" 3576 . 3579) (nil tag-type start 3576 . 3579) (nil font-lock-face web-mode-html-attr-value-face 3576 . 3579) (nil tag-attr t 3575 . 3576) (nil tag-name "span" 3575 . 3576) (nil tag-type start 3575 . 3576) (nil font-lock-face web-mode-html-attr-equal-face 3575 . 3576) (nil tag-attr t 3572 . 3575) (nil tag-name "span" 3572 . 3575) (nil tag-type start 3572 . 3575) (nil font-lock-face web-mode-html-attr-engine-face 3572 . 3575) (nil tag-attr-beg 2 3571 . 3572) (nil tag-attr t 3571 . 3572) (nil tag-name "span" 3571 . 3572) (nil tag-type start 3571 . 3572) (nil font-lock-face web-mode-html-attr-engine-face 3571 . 3572) (nil tag-name "span" 3551 . 3571) (nil tag-type start 3551 . 3571) (nil tag-name "span" 3550 . 3551) (nil tag-type start 3550 . 3551) (nil tag-attr t 3549 . 3550) (nil tag-attr-end 6 3549 . 3550) (nil tag-name "span" 3549 . 3550) (nil tag-type start 3549 . 3550) (nil font-lock-face web-mode-html-attr-value-face 3549 . 3550) (nil tag-attr t 3543 . 3549) (nil tag-name "span" 3543 . 3549) (nil tag-type start 3543 . 3549) (nil font-lock-face web-mode-html-attr-value-face 3543 . 3549) (nil tag-attr t 3542 . 3543) (nil tag-name "span" 3542 . 3543) (nil tag-type start 3542 . 3543) (nil font-lock-face web-mode-html-attr-equal-face 3542 . 3543) (nil tag-attr t 3537 . 3542) (nil tag-name "span" 3537 . 3542) (nil tag-type start 3537 . 3542) (nil font-lock-face web-mode-html-attr-engine-face 3537 . 3542) (nil tag-attr-beg 2 3536 . 3537) (nil tag-attr t 3536 . 3537) (nil tag-name "span" 3536 . 3537) (nil tag-type start 3536 . 3537) (nil font-lock-face web-mode-html-attr-engine-face 3536 . 3537) (nil tag-name "span" 3516 . 3536) (nil tag-type start 3516 . 3536) (nil tag-name "span" 3515 . 3516) (nil tag-type start 3515 . 3516) (3515 . 3580)) nil (25451 32640 586373 40000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#(" " 0 1 (tag-name "span" tag-type start)) . 3515) (#("
" 0 1 (tag-name "span" tag-type start)) . 3515) (undo-tree-id2660 . -1)) nil (25451 32640 586358 203000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#(" " 0 1 (tag-name "span" tag-type start)) . 3529) (#("
" 0 1 (tag-name "span" tag-type start)) . 3529) (undo-tree-id2659 . -1)) nil (25451 32640 586344 635000) 0 nil])
([nil nil ((3699 . 3716) (t 25451 32640 611359 736000)) nil (25451 32678 620206 388000) 0 nil])
([nil nil ((3722 . 3733) (3716 . 3729)) nil (25451 32678 620204 938000) 0 nil])
([nil nil ((3733 . 3734)) nil (25451 32678 620203 706000) 0 nil])
([nil nil ((" " . -3733) (undo-tree-id2672 . -1) 3734) nil (25451 32678 620202 359000) 0 nil])
([nil nil ((3733 . 3738)) nil (25451 32678 620199 795000) 0 nil])
([nil nil (("D" . -3729) (undo-tree-id2671 . -1) 3730) nil (25451 32678 620198 554000) 0 nil])
([nil nil ((3729 . 3730)) nil (25451 32678 620195 938000) 0 nil])
([nil nil ((3729 . 3747)) nil (25451 32678 620194 951000) 0 nil])
([nil nil ((3747 . 3766)) nil (25451 32678 620193 978000) 0 nil])
([nil nil ((" " . 3766) ("e" . 3766) ("z" . 3766) ("i" . 3766) ("s" . 3766) ("a" . 3766) ("t" . 3766) (undo-tree-id2670 . -1) ("a" . 3766) ("d" . 3766)) nil (25451 32678 620191 675000) 0 nil])
([nil nil ((" " . -3765) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) 3766) nil (25451 32678 620186 764000) 0 nil])
([nil nil ((" " . -3722) (undo-tree-id2667 . -1) 3723) nil (25451 32678 620178 493000) 0 nil])
([nil nil ((4473 . 4487) (#("              " 0 14 (face whitespace-trailing)) . 4472) (4472 . 4486) (4472 . 4473) (t 25451 32678 648291 546000)) nil (25451 32752 601997 409000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4561 . 4562) (nil tag-name "template" 4561 . 4562) (nil tag-type start 4561 . 4562) (nil tag-end t 4561 . 4562) (nil font-lock-face web-mode-html-tag-bracket-face 4561 . 4562) (nil block-side t 4560 . 4561) (nil block-end t 4560 . 4561) (nil block-token delimiter-end 4560 . 4561) (nil tag-attr t 4560 . 4561) (nil tag-attr-end 16 4560 . 4561) (nil tag-name "template" 4560 . 4561) (nil tag-type start 4560 . 4561) (nil font-lock-face web-mode-block-delimiter-face 4560 . 4561) (nil block-side t 4558 . 4560) (nil tag-attr t 4558 . 4560) (nil tag-name "template" 4558 . 4560) (nil tag-type start 4558 . 4560) (nil block-side t 4557 . 4558) (nil tag-attr t 4557 . 4558) (nil tag-name "template" 4557 . 4558) (nil tag-type start 4557 . 4558) (nil face web-mode-variable-name-face 4557 . 4558) (nil block-side t 4556 . 4557) (nil tag-attr t 4556 . 4557) (nil tag-name "template" 4556 . 4557) (nil tag-type start 4556 . 4557) (nil face web-mode-variable-name-face 4556 . 4557) (nil block-side t 4555 . 4556) (nil tag-attr t 4555 . 4556) (nil tag-name "template" 4555 . 4556) (nil tag-type start 4555 . 4556) (nil face web-mode-variable-name-face 4555 . 4556) (nil block-side t 4554 . 4555) (nil tag-attr t 4554 . 4555) (nil tag-name "template" 4554 . 4555) (nil tag-type start 4554 . 4555) (nil face web-mode-variable-name-face 4554 . 4555) (nil block-side t 4553 . 4554) (nil tag-attr t 4553 . 4554) (nil tag-name "template" 4553 . 4554) (nil tag-type start 4553 . 4554) (nil face web-mode-variable-name-face 4553 . 4554) (nil block-side t 4551 . 4553) (nil tag-attr t 4551 . 4553) (nil tag-name "template" 4551 . 4553) (nil tag-type start 4551 . 4553) (nil block-side t 4550 . 4551) (nil tag-attr t 4550 . 4551) (nil tag-name "template" 4550 . 4551) (nil tag-type start 4550 . 4551) (nil face web-mode-variable-name-face 4550 . 4551) (nil block-side t 4549 . 4550) (nil tag-attr t 4549 . 4550) (nil tag-name "template" 4549 . 4550) (nil tag-type start 4549 . 4550) (nil face web-mode-variable-name-face 4549 . 4550) (nil block-side t 4547 . 4549) (nil tag-attr t 4547 . 4549) (nil tag-name "template" 4547 . 4549) (nil tag-type start 4547 . 4549) (nil block-side t 4546 . 4547) (nil block-token delimiter-beg 4546 . 4547) (nil tag-attr t 4546 . 4547) (nil tag-name "template" 4546 . 4547) (nil tag-type start 4546 . 4547) (nil font-lock-face web-mode-block-delimiter-face 4546 . 4547) (nil block-side t 4545 . 4546) (nil block-token delimiter-beg 4545 . 4546) (nil tag-attr t 4545 . 4546) (nil tag-name "template" 4545 . 4546) (nil tag-type start 4545 . 4546) (nil font-lock-face web-mode-block-delimiter-face 4545 . 4546) (nil block-side t 4544 . 4545) (nil block-token delimiter-beg 4544 . 4545) (nil tag-attr t 4544 . 4545) (nil tag-name "template" 4544 . 4545) (nil tag-type start 4544 . 4545) (nil font-lock-face web-mode-block-delimiter-face 4544 . 4545) (nil block-side t 4543 . 4544) (nil block-token delimiter-beg 4543 . 4544) (nil tag-attr t 4543 . 4544) (nil tag-name "template" 4543 . 4544) (nil tag-type start 4543 . 4544) (nil font-lock-face web-mode-block-delimiter-face 4543 . 4544) (nil block-side t 4542 . 4543) (nil block-token delimiter-beg 4542 . 4543) (nil tag-attr t 4542 . 4543) (nil tag-name "template" 4542 . 4543) (nil tag-type start 4542 . 4543) (nil font-lock-face web-mode-block-delimiter-face 4542 . 4543) (nil block-side t 4541 . 4542) (nil block-token delimiter-beg 4541 . 4542) (nil tag-attr t 4541 . 4542) (nil tag-name "template" 4541 . 4542) (nil tag-type start 4541 . 4542) (nil font-lock-face web-mode-block-delimiter-face 4541 . 4542) (nil block-side t 4540 . 4541) (nil block-token delimiter-beg 4540 . 4541) (nil tag-attr t 4540 . 4541) (nil tag-name "template" 4540 . 4541) (nil tag-type start 4540 . 4541) (nil font-lock-face web-mode-block-delimiter-face 4540 . 4541) (nil block-side t 4539 . 4540) (nil block-token delimiter-beg 4539 . 4540) (nil tag-attr t 4539 . 4540) (nil tag-name "template" 4539 . 4540) (nil tag-type start 4539 . 4540) (nil font-lock-face web-mode-block-delimiter-face 4539 . 4540) (nil block-side t 4538 . 4539) (nil block-token delimiter-beg 4538 . 4539) (nil tag-attr t 4538 . 4539) (nil tag-name "template" 4538 . 4539) (nil tag-type start 4538 . 4539) (nil font-lock-face web-mode-block-delimiter-face 4538 . 4539) (nil block-side t 4537 . 4538) (nil block-token delimiter-beg 4537 . 4538) (nil tag-attr t 4537 . 4538) (nil tag-name "template" 4537 . 4538) (nil tag-type start 4537 . 4538) (nil font-lock-face web-mode-block-delimiter-face 4537 . 4538) (nil block-side t 4536 . 4537) (nil block-token delimiter-beg 4536 . 4537) (nil tag-attr t 4536 . 4537) (nil tag-name "template" 4536 . 4537) (nil tag-type start 4536 . 4537) (nil font-lock-face web-mode-block-delimiter-face 4536 . 4537) (nil block-beg 0 4535 . 4536) (nil block-controls 0 4535 . 4536) (nil block-side t 4535 . 4536) (nil block-token delimiter-beg 4535 . 4536) (nil tag-attr t 4535 . 4536) (nil tag-name "template" 4535 . 4536) (nil tag-type start 4535 . 4536) (nil font-lock-face web-mode-block-delimiter-face 4535 . 4536) (nil tag-attr t 4530 . 4535) (nil tag-name "template" 4530 . 4535) (nil tag-type start 4530 . 4535) (nil font-lock-face web-mode-html-attr-engine-face 4530 . 4535) (nil tag-attr-beg 2 4529 . 4530) (nil tag-attr t 4529 . 4530) (nil tag-name "template" 4529 . 4530) (nil tag-type start 4529 . 4530) (nil font-lock-face web-mode-html-attr-engine-face 4529 . 4530) (nil tag-name "template" 4528 . 4529) (nil tag-type start 4528 . 4529) (nil tag-name "template" 4520 . 4528) (nil tag-type start 4520 . 4528) (nil font-lock-face web-mode-html-tag-face 4520 . 4528) (nil tag-name "template" 4519 . 4520) (nil tag-type start 4519 . 4520) (nil tag-beg 17 4519 . 4520) (nil font-lock-face web-mode-html-tag-bracket-face 4519 . 4520) (nil tag-name "v-tooltip" 4501 . 4502) (nil tag-type start 4501 . 4502) (nil tag-end t 4501 . 4502) (nil font-lock-face web-mode-html-tag-bracket-face 4501 . 4502) (nil tag-attr t 4500 . 4501) (nil tag-attr-end 0 4500 . 4501) (nil tag-name "v-tooltip" 4500 . 4501) (nil tag-type start 4500 . 4501) (nil font-lock-face web-mode-html-attr-name-face 4500 . 4501) (nil tag-attr t 4499 . 4500) (nil tag-name "v-tooltip" 4499 . 4500) (nil tag-type start 4499 . 4500) (nil font-lock-face web-mode-html-attr-name-face 4499 . 4500) (nil tag-attr-beg 0 4498 . 4499) (nil tag-attr t 4498 . 4499) (nil tag-name "v-tooltip" 4498 . 4499) (nil tag-type start 4498 . 4499) (nil font-lock-face web-mode-html-attr-name-face 4498 . 4499) (nil tag-name "v-tooltip" 4497 . 4498) (nil tag-type start 4497 . 4498) (nil tag-name "v-tooltip" 4488 . 4497) (nil tag-type start 4488 . 4497) (nil font-lock-face web-mode-html-tag-custom-face 4488 . 4497) (nil tag-name "v-tooltip" 4487 . 4488) (nil tag-type start 4487 . 4488) (nil tag-beg 19 4487 . 4488) (nil font-lock-face web-mode-html-tag-bracket-face 4487 . 4488) (4487 . 4562)) nil (25451 32752 601987 222000) 0 nil])
([nil nil ((4734 . 4752) ("              " . 4734) (4699 . 4703) (4637 . 4655) ("              " . 4637) (4563 . 4581) ("              " . 4563)) nil (25451 32752 601949 660000) 0 nil])
([nil nil ((4756 . 4775)) nil (25451 32752 601947 96000) 0 nil])
([nil nil (("  " . -4773) (4775 . 4786)) nil (25451 32752 601946 50000) 0 nil])
([nil nil ((4784 . 4801)) nil (25451 32752 601944 942000) 0 nil])
([nil nil (("  " . -4799) (4801 . 4813)) nil (25451 32752 601943 815000) 0 nil])
([nil nil ((4562 . 4581)) nil (25451 32752 601942 692000) 0 nil])
([nil nil ((4581 . 4594)) nil (25451 32752 601941 790000) 0 nil])
([nil nil ((4588 . 4608) (4589 . 4607) (#("                    " 0 20 (face whitespace-trailing)) . 4588) (4588 . 4608) (4588 . 4589) ("                  " . 4588) (4587 . 4606)) nil (25451 32752 601940 377000) 0 nil])
([nil nil ((#("                  <v-icon class=\"tablestats\">mdi-database-marker</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 43 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 64 65 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 65 66 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 66 72 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 72 73 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4709) (4683 . 4709) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4609) (undo-tree-id2722 . -20) (4635 . 4709) 4629) nil (25451 32752 601937 721000) 0 nil])
([nil nil ((#("                  <p style=\"display:inline;\">
" 18 19 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "p" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 27 43 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (rear-nonsticky t tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4755) (4729 . 4755) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4683) (undo-tree-id2721 . -20) (4709 . 4755) 4703) nil (25451 32752 601934 474000) 0 nil])
([nil nil ((#("                    {{ startP  + \"-\" + getMax() }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 39 (block-side t) 39 45 (block-side t face web-mode-function-call-face) 45 46 (block-side t face (rainbow-delimiters-depth-3-face)) 46 47 (rear-nonsticky t block-side t face (rainbow-delimiters-depth-3-face)) 47 48 (block-side t) 48 49 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 49 50 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 4806) (4780 . 4806) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4729) (undo-tree-id2720 . -20) (4755 . 4806) 4749) nil (25451 32752 601931 485000) 0 nil])
([nil nil ((#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4829) (undo-tree-id2718 . -22) (4803 . 4829) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4780) (undo-tree-id2719 . -20) (4806 . 4829) 4800) nil (25451 32752 601928 290000) 0 nil])
([nil nil ((4586 . 4587)) nil (25451 32752 601924 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4630 . 4631) (nil tag-attr t 4630 . 4631) (nil tag-attr-end 4 4630 . 4631) (nil tag-name "span" 4630 . 4631) (nil tag-type start 4630 . 4631) (nil font-lock-face web-mode-html-attr-value-face 4630 . 4631) (nil tag-attr t 4627 . 4630) (nil tag-name "span" 4627 . 4630) (nil tag-type start 4627 . 4630) (nil font-lock-face web-mode-html-attr-value-face 4627 . 4630) (nil tag-attr t 4626 . 4627) (nil tag-name "span" 4626 . 4627) (nil tag-type start 4626 . 4627) (nil font-lock-face web-mode-html-attr-equal-face 4626 . 4627) (nil tag-attr t 4623 . 4626) (nil tag-name "span" 4623 . 4626) (nil tag-type start 4623 . 4626) (nil font-lock-face web-mode-html-attr-engine-face 4623 . 4626) (nil tag-attr-beg 2 4622 . 4623) (nil tag-attr t 4622 . 4623) (nil tag-name "span" 4622 . 4623) (nil tag-type start 4622 . 4623) (nil font-lock-face web-mode-html-attr-engine-face 4622 . 4623) (nil tag-name "span" 4602 . 4622) (nil tag-type start 4602 . 4622) (nil tag-name "span" 4601 . 4602) (nil tag-type start 4601 . 4602) (nil tag-attr t 4600 . 4601) (nil tag-attr-end 6 4600 . 4601) (nil tag-name "span" 4600 . 4601) (nil tag-type start 4600 . 4601) (nil font-lock-face web-mode-html-attr-value-face 4600 . 4601) (nil tag-attr t 4594 . 4600) (nil tag-name "span" 4594 . 4600) (nil tag-type start 4594 . 4600) (nil font-lock-face web-mode-html-attr-value-face 4594 . 4600) (nil tag-attr t 4593 . 4594) (nil tag-name "span" 4593 . 4594) (nil tag-type start 4593 . 4594) (nil font-lock-face web-mode-html-attr-equal-face 4593 . 4594) (nil tag-attr t 4588 . 4593) (nil tag-name "span" 4588 . 4593) (nil tag-type start 4588 . 4593) (nil font-lock-face web-mode-html-attr-engine-face 4588 . 4593) (nil tag-attr-beg 2 4587 . 4588) (nil tag-attr t 4587 . 4588) (nil tag-name "span" 4587 . 4588) (nil tag-type start 4587 . 4588) (nil font-lock-face web-mode-html-attr-engine-face 4587 . 4588) (4587 . 4631)) nil (25451 32752 601920 921000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#("
" 0 1 (tag-name "span" tag-type start)) . 4601) (undo-tree-id2717 . -1)) nil (25451 32752 601909 946000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601) (#(" " 0 1 (tag-name "span" tag-type start)) . 4601)) nil (25451 32752 601905 619000) 0 nil])
([nil nil ((4829 . 4831) (4778 . 4780) (4728 . 4730) (4652 . 4654) 4571) nil (25451 32752 601901 250000) 0 nil])
([nil nil ((4889 . 4906)) nil (25451 32752 601899 598000) 0 nil])
([nil nil ((4906 . 4919)) nil (25451 32752 601898 726000) 0 nil])
([nil nil ((4912 . 4927)) nil (25451 32752 601897 834000) 0 nil])
([nil nil (("y" . -4926) (undo-tree-id2716 . -1) 4927) nil (25451 32752 601896 748000) 0 nil])
([nil nil ((4926 . 4929)) nil (25451 32752 601894 586000) 0 nil])
([nil nil (("S" . -4912) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) ("u" . -4913) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) ("b" . -4914) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) ("s" . -4915) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) ("e" . -4916) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) ("t" . -4917) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (" " . -4918) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) ("c" . -4919) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) ("u" . -4920) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) ("r" . -4921) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) ("r" . -4922) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) ("e" . -4923) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) ("n" . -4924) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) ("t" . -4925) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) ("l" . -4926) (undo-tree-id2713 . -1) ("y" . -4927) (undo-tree-id2714 . -1) (" " . -4928) (undo-tree-id2715 . -1) 4929) nil (25451 32752 601889 181000) 0 nil])
([nil nil ((4912 . 4930)) nil (25451 32752 601837 730000) 0 nil])
([nil nil ((4930 . 4936)) nil (25451 32752 601836 567000) 0 nil])
([nil nil ((" " . -4935) (undo-tree-id2673 . -1) 4936) nil (25451 32752 601834 655000) 0 nil])
([nil nil ((#("                    " 0 20 (face whitespace-trailing)) . -4613) 4935) nil (25451 32752 601817 263000) 0 nil])
([nil nil ((#("              <v-tooltip top>
" 14 15 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 24 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-tooltip" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5045) (4980 . 5045) (#("              <v-icon class=\"tablestats\">mdi-table-star</v-icon>
" 14 15 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 21 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-icon" tag-type start) 22 23 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 23 27 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 28 39 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4950) (undo-tree-id2759 . -38) (5015 . 5045) 4988 (t 25451 32752 626032 769000)) nil (25451 32839 374611 894000) 0 nil])
([nil nil ((#("                <template v-slot:activator=\"{ on, attrs }\">
" 16 17 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 17 25 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 25 26 (tag-name "template" tag-type start) 26 27 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 27 32 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 32 33 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 33 34 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 34 35 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 35 36 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 37 38 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 38 39 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 40 41 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 42 43 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 43 44 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 44 46 (block-side t tag-attr t tag-name "template" tag-type start) 46 47 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 47 48 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 48 50 (block-side t tag-attr t tag-name "template" tag-type start) 50 51 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 51 52 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 52 53 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 53 54 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 54 55 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 55 57 (block-side t tag-attr t tag-name "template" tag-type start) 57 58 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (rear-nonsticky t tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5105) (5040 . 5105) (#("              <v-icon class=\"tablestats\">mdi-table-star</v-icon>
" 14 15 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 15 21 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 21 22 (tag-name "v-icon" tag-type start) 22 23 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 23 27 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 28 39 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 55 56 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 56 57 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 57 63 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 63 64 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4980) (undo-tree-id2758 . -38) (5045 . 5105) 5018) nil (25451 32839 374608 516000) 0 nil])
([nil nil ((5040 . 5058) ("              " . 5040) 4950) nil (25451 32839 374605 390000) 0 nil])
([nil nil ((5379 . 5387)) nil (25451 32839 374603 991000) 0 nil])
([nil nil (("u" . -5380) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) ("r" . -5381) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) ("r" . -5382) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) ("e" . -5383) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) ("n" . -5384) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) ("t" . -5385) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (" " . -5386) (undo-tree-id2757 . -1) 5387) nil (25451 32839 374600 942000) 0 nil])
([nil nil ((5380 . 5386)) nil (25451 32839 374583 902000) 0 nil])
([nil nil ((" " . -5385) (undo-tree-id2744 . -1) 5386) nil (25451 32839 374582 778000) 0 nil])
([nil nil ((5385 . 5387)) nil (25451 32839 374580 626000) 0 nil])
([nil nil ((5385 . 5392)) nil (25451 32839 374579 303000) 0 nil])
([nil nil ((" " . -5391) (undo-tree-id2743 . -1) 5392) nil (25451 32839 374578 230000) 0 nil])
([nil nil ((5039 . 5058)) nil (25451 32839 374575 978000) 0 nil])
([nil nil ((5058 . 5071)) nil (25451 32839 374575 87000) 0 nil])
([nil nil ((5065 . 5085) (5066 . 5084) (#("                    " 0 20 (face whitespace-trailing)) . 5065) (5065 . 5085) (5065 . 5066) ("                  " . 5065) (5064 . 5083)) nil (25451 32839 374573 591000) 0 nil])
([nil nil ((#("                  <v-icon class=\"tablestats\">mdi-table-star</v-icon>
" 18 19 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 19 25 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 25 26 (tag-name "v-icon" tag-type start) 26 27 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 27 31 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 32 43 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 59 60 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 60 61 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 61 67 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 67 68 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5181) (5155 . 5181) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5086) (undo-tree-id2742 . -20) (5112 . 5181) 5106) nil (25451 32839 374571 35000) 0 nil])
([nil nil ((#("                  <p class=\"truncate\"
" 18 19 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 20 21 (tag-name "p" tag-type start) 21 22 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 22 26 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 27 28 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (rear-nonsticky t tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-name "p" tag-type start)) . 5219) (5193 . 5219) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5155) (undo-tree-id2741 . -20) (5181 . 5219) 5175) nil (25451 32839 374568 24000) 0 nil])
([nil nil (("                     v-bind=\"attrs\"
" . 5255) (5229 . 5255) (#("                  </span>
" 0 17 (tag-name "p" tag-type start) 17 18 (tag-name "p" tag-type start tag-end t) 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5193) (undo-tree-id2740 . -20) (5219 . 5255) 5213) nil (25451 32839 374564 959000) 0 nil])
([nil nil ((#("                     v-on=\"on\"
" 29 30 (rear-nonsticky t)) . 5286) (5260 . 5286) (#("                  </span>
" 0 17 (tag-name "p" tag-type start) 17 18 (tag-name "p" tag-type start tag-end t) 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5229) (undo-tree-id2739 . -20) (5255 . 5286) 5249) nil (25451 32839 374561 763000) 0 nil])
([nil nil ((#("                     style=\"display:inline-block;\">
" 50 51 (rear-nonsticky t)) . 5338) (5312 . 5338) (#("                  </span>
" 0 17 (tag-name "p" tag-type start) 17 18 (tag-name "p" tag-type start tag-end t) 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5260) (undo-tree-id2738 . -20) (5286 . 5338) 5280) nil (25451 32839 374558 696000) 0 nil])
([nil nil ((#("                    {{ cursorvalue }}
" 20 21 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 22 23 (block-side t) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (rear-nonsticky t block-side t face web-mode-variable-name-face) 34 35 (block-side t) 35 36 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 36 37 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 5376) (5350 . 5376) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5312) (undo-tree-id2737 . -20) (5338 . 5376) 5332) nil (25451 32839 374555 697000) 0 nil])
([nil nil (("
" . 5377) (5351 . 5377) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5350) (undo-tree-id2736 . -20) (5376 . 5377) 5370) nil (25451 32839 374552 418000) 0 nil])
([nil nil ((#("                  </p>
" 18 19 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 21 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 21 22 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5400) (5374 . 5400) (#("                  </span>
" 18 19 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 19 20 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 20 24 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 24 25 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5351) (undo-tree-id2735 . -20) (5377 . 5400) 5371) nil (25451 32839 374549 164000) 0 nil])
([nil nil ((#("
                     v-bind=\"attrs\"
                     v-on=\"on\"" 0 1 (tag-name "p" tag-type start) 1 22 (tag-name "p" tag-type start) 22 23 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 23 28 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 28 29 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 35 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 6 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "p" tag-type start) 37 58 (tag-name "p" tag-type start) 58 59 (tag-attr-beg 2 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 59 62 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-engine-face) 62 63 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 63 66 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (rear-nonsticky t tag-attr t tag-attr-end 4 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5192) (undo-tree-id2732 . -67) (undo-tree-id2733 . -1) (undo-tree-id2734 . -67)) nil (25451 32839 374545 920000) 0 nil])
([nil nil ((5063 . 5064)) nil (25451 32839 374541 715000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5130 . 5131) (nil rear-nonsticky t 5130 . 5131) (nil tag-attr t 5130 . 5131) (nil tag-attr-end 4 5130 . 5131) (nil tag-name "span" 5130 . 5131) (nil tag-type start 5130 . 5131) (nil font-lock-face web-mode-html-attr-value-face 5130 . 5131) (nil tag-attr t 5127 . 5130) (nil tag-name "span" 5127 . 5130) (nil tag-type start 5127 . 5130) (nil font-lock-face web-mode-html-attr-value-face 5127 . 5130) (nil tag-attr t 5126 . 5127) (nil tag-name "span" 5126 . 5127) (nil tag-type start 5126 . 5127) (nil font-lock-face web-mode-html-attr-equal-face 5126 . 5127) (nil tag-attr t 5123 . 5126) (nil tag-name "span" 5123 . 5126) (nil tag-type start 5123 . 5126) (nil font-lock-face web-mode-html-attr-engine-face 5123 . 5126) (nil tag-attr-beg 2 5122 . 5123) (nil tag-attr t 5122 . 5123) (nil tag-name "span" 5122 . 5123) (nil tag-type start 5122 . 5123) (nil font-lock-face web-mode-html-attr-engine-face 5122 . 5123) (nil tag-name "span" 5101 . 5122) (nil tag-type start 5101 . 5122) (nil tag-name "span" 5100 . 5101) (nil tag-type start 5100 . 5101) (nil tag-attr t 5099 . 5100) (nil tag-attr-end 6 5099 . 5100) (nil tag-name "span" 5099 . 5100) (nil tag-type start 5099 . 5100) (nil font-lock-face web-mode-html-attr-value-face 5099 . 5100) (nil tag-attr t 5093 . 5099) (nil tag-name "span" 5093 . 5099) (nil tag-type start 5093 . 5099) (nil font-lock-face web-mode-html-attr-value-face 5093 . 5099) (nil tag-attr t 5092 . 5093) (nil tag-name "span" 5092 . 5093) (nil tag-type start 5092 . 5093) (nil font-lock-face web-mode-html-attr-equal-face 5092 . 5093) (nil tag-attr t 5087 . 5092) (nil tag-name "span" 5087 . 5092) (nil tag-type start 5087 . 5092) (nil font-lock-face web-mode-html-attr-engine-face 5087 . 5092) (nil tag-attr-beg 2 5086 . 5087) (nil tag-attr t 5086 . 5087) (nil tag-name "span" 5086 . 5087) (nil tag-type start 5086 . 5087) (nil font-lock-face web-mode-html-attr-engine-face 5086 . 5087) (nil tag-name "span" 5065 . 5086) (nil tag-type start 5065 . 5086) (nil tag-name "span" 5064 . 5065) (nil tag-type start 5064 . 5065) (5064 . 5131)) nil (25451 32839 374538 46000) 0 nil])
([nil nil ((#("
" 0 1 (tag-name "span" tag-type start)) . 5064) (undo-tree-id2730 . -1) (undo-tree-id2731 . 1)) nil (25451 32839 374525 332000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064) (#(" " 0 1 (tag-name "span" tag-type start)) . 5064)) nil (25451 32839 374520 30000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#(" " 0 1 (tag-name "span" tag-type start)) . 5078) (#("
" 0 1 (tag-name "span" tag-type start)) . 5078) (undo-tree-id2729 . -1)) nil (25451 32839 374512 201000) 0 nil])
([nil nil (("
" . 5110) (undo-tree-id2727 . -1) (undo-tree-id2728 . 1)) nil (25451 32839 374505 769000) 0 nil])
([nil nil (("                  " . -5110)) nil (25451 32839 374502 554000) 0 nil])
([nil nil ((5179 . 5181) 5181) nil (25451 32839 374501 581000) 0 nil])
([nil nil ((5222 . 5224) 5223) nil (25451 32839 374500 447000) 0 nil])
([nil nil ((5275 . 5277) 5279) nil (25451 32839 374499 126000) 0 nil])
([nil nil ((5295 . 5317)) nil (25451 32839 374497 899000) 0 nil])
([nil nil ((5336 . 5338) 5340) nil (25451 32839 374496 533000) 0 nil])
([nil nil (("
" . 5317) (undo-tree-id2725 . -1) (undo-tree-id2726 . 1)) nil (25451 32839 374494 260000) 0 nil])
([nil nil (("                      " . -5315) (undo-tree-id2723 . -2) (undo-tree-id2724 . -2) 5317) nil (25451 33101 143736 771000) 0 nil])
([nil nil ((28228 . 28233) (t 25451 33102 249308 335000)) nil (25451 33239 935616 762000) 0 nil] [nil nil ((#("
    max-width: 1000px;" 0 5 (part-side css) 5 9 (part-side css face web-mode-css-property-name-face) 9 15 (part-side css face web-mode-css-property-name-face) 15 23 (part-side css)) . 28228) (undo-tree-id2773 . -23) (undo-tree-id2774 . -18) (undo-tree-id2775 . -18) (undo-tree-id2776 . -1) (undo-tree-id2777 . -23) (t 25451 32839 399970 48000)) ((28228 . 28251) (t 25451 33099 777261 82000)) (25451 33097 937730 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28312 . 28313) (nil part-side css 28312 . 28313) (nil face (rainbow-delimiters-depth-2-face) 28312 . 28313) (nil part-side css 28311 . 28312) (nil part-side css 28310 . 28311) (nil face (rainbow-delimiters-depth-3-face) 28310 . 28311) (nil part-side css 28298 . 28310) (nil part-side css 28292 . 28298) (nil face web-mode-css-property-name-face 28292 . 28298) (nil part-side css 28283 . 28292) (nil part-side css 28282 . 28283) (nil face (rainbow-delimiters-depth-3-face) 28282 . 28283) (nil part-side css 28271 . 28282) (nil part-side css 28270 . 28271) (nil face (rainbow-delimiters-depth-2-face) 28270 . 28271) (nil part-side css 28269 . 28270) (nil part-side css 28268 . 28269) (nil face (rainbow-delimiters-depth-2-face) 28268 . 28269) (nil part-side css 28262 . 28268) (nil part-side css 28252 . 28262) (nil face web-mode-css-property-name-face 28252 . 28262) (nil part-side css 28251 . 28252) (nil face (rainbow-delimiters-depth-2-face) 28251 . 28252) (nil part-side css 28250 . 28251) (nil part-side css 28247 . 28250) (nil face web-mode-css-function-face 28247 . 28250) (nil part-side css 28239 . 28247) (nil part-side css 28234 . 28239) (nil face web-mode-css-at-rule-face 28234 . 28239) (nil part-side css 28233 . 28234) (28233 . 28313)) nil (25451 33239 935614 33000) 0 nil])
([nil nil ((5199 . 5207)) ((#(" col-10 " 0 7 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5199) (undo-tree-id2778 . -4) (undo-tree-id2779 . -4) (undo-tree-id2780 . -8) (undo-tree-id2781 . -7) (undo-tree-id2782 . -7) (undo-tree-id2783 . -7) (undo-tree-id2784 . -7) (undo-tree-id2785 . -7) (undo-tree-id2786 . -7) (undo-tree-id2787 . -7) (undo-tree-id2788 . -7) (undo-tree-id2789 . -7) (undo-tree-id2790 . -7) (undo-tree-id2791 . -7) (undo-tree-id2792 . -7) (undo-tree-id2793 . -7) (undo-tree-id2794 . -7) (undo-tree-id2795 . -7) (undo-tree-id2796 . -7) (undo-tree-id2797 . -7) (undo-tree-id2798 . -7) (undo-tree-id2799 . -7) (undo-tree-id2800 . -7) (undo-tree-id2801 . -7) (undo-tree-id2802 . -7) (undo-tree-id2803 . -7) (undo-tree-id2804 . -7) (undo-tree-id2805 . -7) (undo-tree-id2806 . -7) (undo-tree-id2807 . -7) (undo-tree-id2808 . -7) (undo-tree-id2809 . -8) (undo-tree-id2810 . -8) (undo-tree-id2811 . -8) (undo-tree-id2812 . -8) (undo-tree-id2813 . -8) (undo-tree-id2814 . -8) (undo-tree-id2815 . -8) (undo-tree-id2816 . -8) (undo-tree-id2817 . -8) (undo-tree-id2818 . -8) (undo-tree-id2819 . -8) (undo-tree-id2820 . -8)) (25451 33097 557228 760000) 0 nil])
([nil nil ((28312 . 28316) 28313) nil (25451 33239 935606 871000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5206) (undo-tree-id2760 . -1) (undo-tree-id2762 . -1) (undo-tree-id2764 . -1) (undo-tree-id2766 . -1) (undo-tree-id2768 . -1) (undo-tree-id2770 . -1) (undo-tree-id2772 . -1) 5207) ((5206 . 5207) (t 25451 33087 769030 865000)) (25451 33087 739366 273000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28290) 28289) nil (25451 33239 935605 533000) 0 nil])
nil
([nil nil ((28276 . 28278) 28278) nil (25451 33239 935604 103000) 0 nil])
([nil nil ((28286 . 28294) (#("      " 0 6 (part-side css)) . 28286) 28294) nil (25451 33239 935602 684000) 0 nil])
([nil nil ((28312 . 28314) 28313) nil (25451 33239 935601 300000) 0 nil])
([nil nil ((#("    max-width: 1000px;
" 0 4 (part-side css face web-mode-css-selector-tag-face) 4 8 (part-side css face web-mode-css-selector-tag-face) 8 14 (part-side css face web-mode-css-selector-tag-face) 14 21 (part-side css face web-mode-css-selector-tag-face) 21 22 (part-side css) 22 23 (part-side css)) . 28345) (undo-tree-id2871 . -22) (undo-tree-id2872 . -17) (undo-tree-id2873 . -17) (undo-tree-id2874 . -22) (undo-tree-id2875 . -23) (undo-tree-id2876 . -22) (28339 . 28345) (#("    }
" 0 4 (part-side css) 4 5 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-2-face)) 5 6 (part-side css face web-mode-css-selector-tag-face)) . 28316) (28322 . 28345) 28344) nil (25451 33239 935599 497000) 0 nil])
([nil nil ((#("    max-width: 1000px;
" 0 4 (part-side css) 4 8 (part-side css face web-mode-css-selector-tag-face) 8 14 (part-side css face web-mode-css-selector-tag-face) 14 21 (part-side css face web-mode-css-selector-tag-face) 21 22 (part-side css) 22 23 (part-side css)) . 28339) (undo-tree-id2869 . -22) (undo-tree-id2870 . -23) (28331 . 28339) (#("      }
" 0 6 (part-side css) 6 7 (part-side css face (rainbow-delimiters-depth-3-face)) 7 8 (part-side css)) . 28308) (28316 . 28339) 28338) nil (25451 33239 935591 191000) 0 nil])
([nil nil ((#("    max-width: 1000px;
" 0 4 (part-side css) 4 8 (part-side css face web-mode-css-property-name-face) 8 14 (part-side css face web-mode-css-property-name-face) 14 21 (part-side css) 21 22 (part-side css) 22 23 (part-side css)) . 28331) (undo-tree-id2867 . -22) (undo-tree-id2868 . -23) (28309 . 28331) (#("        width: 400px;
" 0 8 (part-side css) 8 14 (part-side css face web-mode-css-property-name-face) 14 22 (part-side css)) . 28286) (28308 . 28331) 28330) nil (25451 33239 935587 203000) 0 nil])
([nil nil ((#("    max-width: 1000px;
" 0 4 (part-side css) 4 8 (part-side css face web-mode-css-property-name-face) 8 14 (part-side css face web-mode-css-property-name-face) 14 21 (part-side css) 21 22 (part-side css) 22 23 (part-side css)) . 28309) (undo-tree-id2865 . -22) (undo-tree-id2866 . -23) (28295 . 28309) (#("      .view {
" 0 6 (part-side css) 6 11 (part-side css face web-mode-css-selector-class-face) 11 12 (part-side css) 12 13 (part-side css face (rainbow-delimiters-depth-3-face)) 13 14 (part-side css)) . 28272) (28286 . 28309) 28308) nil (25451 33239 935582 87000) 0 nil])
([nil nil ((28276 . 28278) 28294) nil (25451 33239 935578 5000) 0 nil])
([nil nil ((#("      .view {
        width: 400px;
      }" 0 6 (part-side css) 6 11 (part-side css face web-mode-css-selector-class-face) 11 12 (part-side css) 12 13 (part-side css face (rainbow-delimiters-depth-3-face)) 13 14 (part-side css) 14 22 (part-side css) 22 28 (part-side css face web-mode-css-property-name-face) 28 34 (part-side css) 34 36 (part-side css) 36 42 (part-side css) 42 43 (part-side css face (rainbow-delimiters-depth-3-face))) . 28297) (undo-tree-id2862 . -43) (undo-tree-id2863 . -14) (undo-tree-id2864 . -43)) nil (25451 33239 935576 469000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28296) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) 28297) nil (25451 33239 935572 382000) 0 nil])
([nil nil ((28215 . 28217) (#("  " 0 2 (part-side css)) . 28214) (undo-tree-id2858 . -2) (28213 . 28217)) nil (25451 33239 935567 975000) 0 nil])
([nil nil ((28217 . 28230)) nil (25451 33239 935565 651000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28229) (undo-tree-id2857 . -1) 28230) nil (25451 33239 935564 413000) 0 nil])
([nil nil ((28230 . 28232) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28230) (28229 . 28231)) nil (25451 33239 935561 991000) 0 nil])
([nil nil ((28233 . 28235) (#("    " 0 4 (part-side css face whitespace-trailing)) . 28232) (undo-tree-id2855 . -2) (undo-tree-id2856 . 4) (28234 . 28236) (28231 . 28235)) nil (25451 33239 935560 294000) 0 nil])
([nil nil ((28232 . 28236)) nil (25451 33239 935556 699000) 0 nil])
([nil nil ((28236 . 28251)) nil (25451 33239 935555 725000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28250) (undo-tree-id2854 . -1) 28251) nil (25451 33239 935554 593000) 0 nil])
([nil nil ((#("    @media screen and (max-width: 540px) {
      max-width: 1000px;
    }" 0 4 (part-side css) 4 5 (part-side css) 5 10 (part-side css face web-mode-css-at-rule-face) 10 11 (part-side css) 11 17 (part-side css) 17 18 (part-side css) 18 21 (part-side css face web-mode-css-function-face) 21 22 (part-side css) 22 23 (part-side css face (rainbow-delimiters-depth-2-face)) 23 33 (part-side css face web-mode-css-property-name-face) 33 39 (part-side css) 39 40 (part-side css face (rainbow-delimiters-depth-2-face)) 40 41 (part-side css) 41 42 (part-side css face (rainbow-delimiters-depth-2-face)) 42 43 (part-side css) 43 49 (part-side css) 49 53 (part-side css face web-mode-css-property-name-face) 53 59 (part-side css face web-mode-css-property-name-face) 59 66 (part-side css) 66 67 (part-side css) 67 68 (part-side css) 68 72 (part-side css) 72 73 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-2-face))) . 28270) (undo-tree-id2848 . -73) (undo-tree-id2849 . -43) (undo-tree-id2850 . -4) (undo-tree-id2851 . -67) (undo-tree-id2852 . -73) (undo-tree-id2853 . -73)) nil (25451 33239 935552 124000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28269) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) 28270) nil (25451 33239 935544 919000) 0 nil])
([nil nil ((28215 . 28217) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28214) (28214 . 28216) (28214 . 28215)) nil (25451 33239 935536 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28289 . 28290) (nil rear-nonsticky t 28289 . 28290) (nil part-side css 28289 . 28290) (nil face (rainbow-delimiters-depth-1-face) 28289 . 28290) (nil part-side css 28285 . 28289) (nil part-side css 28284 . 28285) (nil part-side css 28283 . 28284) (nil part-side css 28276 . 28283) (nil face web-mode-css-selector-tag-face 28276 . 28283) (nil part-side css 28270 . 28276) (nil face web-mode-css-selector-tag-face 28270 . 28276) (nil part-side css 28266 . 28270) (nil face web-mode-css-selector-tag-face 28266 . 28270) (nil part-side css 28260 . 28266) (nil part-side css 28259 . 28260) (nil part-side css 28258 . 28259) (nil face (rainbow-delimiters-depth-1-face) 28258 . 28259) (nil part-side css 28257 . 28258) (nil part-side css 28256 . 28257) (nil face (rainbow-delimiters-depth-1-face) 28256 . 28257) (nil part-side css 28250 . 28256) (nil part-side css 28240 . 28250) (nil part-side css 28239 . 28240) (nil face (rainbow-delimiters-depth-1-face) 28239 . 28240) (nil part-side css 28238 . 28239) (nil part-side css 28235 . 28238) (nil face web-mode-keyword-face 28235 . 28238) (nil part-side css 28234 . 28235) (nil part-side css 28228 . 28234) (nil face web-mode-keyword-face 28228 . 28234) (nil part-side css 28227 . 28228) (nil part-side css 28222 . 28227) (nil face web-mode-css-at-rule-face 28222 . 28227) (nil part-side css 28221 . 28222) (nil face web-mode-css-at-rule-face 28221 . 28222) (nil part-side css 28217 . 28221) (28217 . 28290)) nil (25451 33239 935533 232000) 0 nil])
([nil nil ((#("    " 0 4 (part-side css)) . -28217) (undo-tree-id2841 . -3) 28220) nil (25451 33239 935524 852000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28260) 28258) nil (25451 33239 935522 589000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28281) (undo-tree-id2840 . -2) 28283) nil (25451 33239 935521 198000) 0 nil])
([nil nil ((#("  .cursor_size {
    width: 1000px;
  }" 0 2 (part-side css) 2 14 (part-side css face web-mode-css-selector-class-face) 14 15 (part-side css) 15 16 (part-side css face (rainbow-delimiters-depth-1-face)) 16 17 (part-side css) 17 21 (part-side css) 21 27 (part-side css face web-mode-css-property-name-face) 27 35 (part-side css) 35 38 (part-side css) 38 39 (part-side css face (rainbow-delimiters-depth-1-face))) . 28283) (undo-tree-id2836 . -39) (undo-tree-id2837 . -33) (undo-tree-id2838 . -17) (undo-tree-id2839 . -39)) nil (25451 33239 935518 751000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28282) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) 28283) nil (25451 33239 935512 882000) 0 nil])
([nil nil ((#("max-width: 1000px;" 0 17 (part-side css face web-mode-css-selector-tag-face) 17 18 (part-side css)) . 28260) (undo-tree-id2830 . -18) (undo-tree-id2831 . -18)) nil (25451 33239 935507 169000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28298 . 28299) (nil part-side css 28298 . 28299) (nil face (rainbow-delimiters-depth-2-face) 28298 . 28299) (nil part-side css 28295 . 28298) (nil part-side css 28287 . 28295) (nil part-side css 28281 . 28287) (nil face web-mode-css-property-name-face 28281 . 28287) (nil part-side css 28277 . 28281) (nil part-side css 28276 . 28277) (nil part-side css 28275 . 28276) (nil face (rainbow-delimiters-depth-2-face) 28275 . 28276) (nil part-side css 28274 . 28275) (nil part-side css 28262 . 28274) (nil face web-mode-css-selector-class-face 28262 . 28274) (nil part-side css 28260 . 28262) (28260 . 28299)) nil (25451 33239 935503 210000) 0 nil])
([nil nil ((28277 . 28285) (#("    " 0 4 (part-side css)) . 28277) 28295) nil (25451 33239 935499 171000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28260) 28276) nil (25451 33239 935497 762000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28281) 28293) nil (25451 33239 935496 244000) 0 nil])
([nil nil ((28298 . 28300) 28299) nil (25451 33239 935495 109000) 0 nil])
([nil nil ((28307 . 28309) (#("  " 0 2 (part-side css)) . 28306) (undo-tree-id2829 . -2) (28305 . 28309)) nil (25451 33239 935493 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28411 . 28412) (nil part-side css 28411 . 28412) (nil face (rainbow-delimiters-depth-1-face) 28411 . 28412) (nil part-side css 28410 . 28411) (nil part-side css 28409 . 28410) (nil face (rainbow-delimiters-depth-2-face) 28409 . 28410) (nil part-side css 28397 . 28409) (nil part-side css 28391 . 28397) (nil face web-mode-css-property-name-face 28391 . 28397) (nil part-side css 28382 . 28391) (nil part-side css 28381 . 28382) (nil face (rainbow-delimiters-depth-2-face) 28381 . 28382) (nil part-side css 28380 . 28381) (nil part-side css 28375 . 28380) (nil face web-mode-css-selector-class-face 28375 . 28380) (nil part-side css 28370 . 28375) (nil part-side css 28369 . 28370) (nil face (rainbow-delimiters-depth-1-face) 28369 . 28370) (nil part-side css 28368 . 28369) (nil part-side css 28367 . 28368) (nil face (rainbow-delimiters-depth-1-face) 28367 . 28368) (nil part-side css 28351 . 28367) (nil part-side css 28350 . 28351) (nil face (rainbow-delimiters-depth-1-face) 28350 . 28351) (nil part-side css 28349 . 28350) (nil part-side css 28346 . 28349) (nil face web-mode-keyword-face 28346 . 28349) (nil part-side css 28345 . 28346) (nil part-side css 28344 . 28345) (nil face (rainbow-delimiters-depth-1-face) 28344 . 28345) (nil part-side css 28328 . 28344) (nil part-side css 28327 . 28328) (nil face (rainbow-delimiters-depth-1-face) 28327 . 28328) (nil part-side css 28326 . 28327) (nil part-side css 28323 . 28326) (nil face web-mode-keyword-face 28323 . 28326) (nil part-side css 28322 . 28323) (nil part-side css 28316 . 28322) (nil face web-mode-keyword-face 28316 . 28322) (nil part-side css 28315 . 28316) (nil part-side css 28309 . 28315) (nil face web-mode-css-at-rule-face 28309 . 28315) (28309 . 28412)) nil (25451 33239 935489 73000) 0 nil])
([nil nil ((28411 . 28413) 28412) nil (25451 33239 935479 680000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css)) . -28389) 28307) nil (25451 33239 935478 373000) 0 nil])
([nil nil ((#(" and (max-width: 780px) " 0 1 (part-side css) 1 4 (part-side css face web-mode-keyword-face) 4 5 (part-side css) 5 6 (part-side css face (rainbow-delimiters-depth-1-face)) 6 22 (part-side css) 22 23 (part-side css face (rainbow-delimiters-depth-1-face)) 23 24 (part-side css)) . 28345) (undo-tree-id2827 . -24) (undo-tree-id2828 . -24)) nil (25451 33239 935476 941000) 0 nil])
([nil nil ((28345 . 28346)) nil (25451 33239 935473 703000) 0 nil])
([nil nil ((#("600px" 0 5 (part-side css)) . 28373) (undo-tree-id2825 . -5) (undo-tree-id2826 . -5)) nil (25451 33239 935472 581000) 0 nil])
([nil nil ((28373 . 28374)) nil (25451 33239 935469 155000) 0 nil])
([nil nil ((#("v" 0 1 (part-side css)) . -28373) (undo-tree-id2824 . -1) 28374) nil (25451 33239 935467 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28378 . 28379) (nil part-side css 28373 . 28379) (28373 . 28379)) nil (25451 33239 935464 986000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28288) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (#("0" 0 1 (part-side css)) . -28289) (undo-tree-id2823 . -1) 28290) nil (25451 33239 935461 854000) 0 nil])
([nil nil ((28288 . 28289)) nil (25451 33239 935444 112000) 0 nil])
([nil nil ((#("view" 0 4 (part-side css face web-mode-css-selector-class-face)) . 28352) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (t 25451 33239 967873 32000)) nil (25451 33251 671440 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28362 . 28363) (nil part-side css 28352 . 28363) (nil face web-mode-css-selector-class-face 28352 . 28363) (28352 . 28363)) nil (25451 33251 671436 581000) 0 nil])
([nil nil ((5191 . 5193)) nil (25451 33251 671434 977000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5191) (undo-tree-id2877 . -1) (#("v" 0 1 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5192) (undo-tree-id2878 . -1) 5193) nil (25451 33251 671432 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5201 . 5202) (nil tag-attr t 5191 . 5202) (nil tag-name "p" 5191 . 5202) (nil tag-type start 5191 . 5202) (nil font-lock-face web-mode-html-attr-value-face 5191 . 5202) (5191 . 5202)) nil (25451 33251 671419 794000) 0 nil])
([nil nil ((5202 . 5203)) nil (25451 33251 671411 634000) 0 nil])
([nil nil ((28293 . 28295) (t 25451 33251 700085 935000)) nil (25451 33275 978624 174000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -28294) (undo-tree-id2881 . -1) 28295) nil (25451 33275 978621 652000) 0 nil])
([nil nil ((28294 . 28297)) nil (25451 33275 978610 289000) 0 nil])
([nil nil ((28388 . 28392)) nil (25451 33275 978603 87000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28304) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) 28305 (t 25451 33276 8524 575000)) nil (25451 33292 422826 675000) 0 nil])
([nil nil ((28304 . 28305)) nil (25451 33292 422808 789000) 0 nil])
([nil nil ((#("2" 0 1 (part-side css)) . -28304) (undo-tree-id2884 . -1) 28305 (t 25451 33292 448819 397000)) nil (25451 33307 414860 797000) 0 nil])
([nil nil ((28304 . 28305)) nil (25451 33307 414843 665000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28259) (undo-tree-id2890 . -1) (#("4" 0 1 (part-side css)) . -28260) (undo-tree-id2891 . -1) 28261 (t 25451 33307 445087 79000)) nil (25451 33345 596235 478000) 0 nil])
([nil nil ((28259 . 28262)) nil (25451 33345 596231 105000) 0 nil])
([nil nil ((#("9" 0 1 (part-side css)) . -28261) (undo-tree-id2889 . -1) 28262) nil (25451 33345 596229 894000) 0 nil])
([nil nil ((28261 . 28262)) nil (25451 33345 596227 115000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28305) (undo-tree-id2888 . -1) 28306) nil (25451 33345 596225 917000) 0 nil])
([nil nil ((28305 . 28306)) nil (25451 33345 596223 430000) 0 nil])
([nil nil ((#("4" 0 1 (part-side css)) . -28305) (undo-tree-id2887 . -1) 28306) nil (25451 33345 596221 594000) 0 nil])
([nil nil ((28305 . 28306)) nil (25451 33345 596218 803000) 0 nil])
([nil nil ((#("540" 0 3 (part-side css)) . 28355) (undo-tree-id2885 . -3) (undo-tree-id2886 . -3)) nil (25451 33345 596216 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28358 . 28359) (nil part-side css 28355 . 28359) (28355 . 28359)) nil (25451 33345 596201 948000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28305) (undo-tree-id2892 . -1) 28306 (t 25451 33345 625763 478000)) nil (25451 33368 927962 422000) 0 nil])
([nil nil ((28305 . 28306)) nil (25451 33368 927946 860000) 0 nil])
([nil nil ((#("3" 0 1 (part-side css)) . -28305) (undo-tree-id2905 . -1) 28306 (t 25451 33368 954173 307000)) nil (25451 33374 960400 19000) 0 nil])
([nil nil ((28305 . 28306)) nil (25451 33374 960397 173000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -28306) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) 28307) nil (25451 33374 960393 803000) 0 nil])
([nil nil ((28306 . 28307)) nil (25451 33374 960365 409000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28693) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) 28694 (t 25451 33374 986278 869000)) nil (25451 33514 41781 593000) 0 nil])
([nil nil ((28693 . 28694)) nil (25451 33514 41776 772000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28727) (undo-tree-id2906 . -1) 28728) nil (25451 33514 41774 275000) 0 nil])
([nil nil ((28727 . 28728)) nil (25451 33514 41757 466000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28726) (undo-tree-id2910 . -1) (#("0" 0 1 (part-side css)) . -28727) (undo-tree-id2911 . -1) 28728 (t 25451 33514 88671 519000)) nil (25451 33520 563713 499000) 0 nil])
([nil nil ((28726 . 28727)) nil (25451 33520 563708 510000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . 28692) (#("1" 0 1 (part-side css)) . 28692) (undo-tree-id2909 . -1)) nil (25451 33520 563705 956000) 0 nil])
([nil nil ((28692 . 28693)) nil (25451 33520 563689 790000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28692) (undo-tree-id2914 . -1) 28693 (t 25451 33520 596781 690000)) nil (25451 33574 333069 349000) 0 nil])
([nil nil ((28692 . 28693)) nil (25451 33574 333066 652000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -28692) (undo-tree-id2913 . -1) 28693) nil (25451 33574 333065 361000) 0 nil])
([nil nil ((28692 . 28694)) nil (25451 33574 333062 38000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28726) (undo-tree-id2912 . -1) 28727) nil (25451 33574 333059 597000) 0 nil])
([nil nil ((28726 . 28728)) nil (25451 33574 333044 847000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28726) (undo-tree-id2917 . -1) (#("0" 0 1 (part-side css)) . -28727) (undo-tree-id2918 . -1) 28728 (t 25451 33574 357686 449000)) nil (25451 33590 577993 896000) 0 nil])
([nil nil ((28726 . 28727)) nil (25451 33590 577989 370000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28692) (undo-tree-id2915 . -1) (#("0" 0 1 (part-side css)) . -28693) (undo-tree-id2916 . -1) 28694) nil (25451 33590 577986 256000) 0 nil])
([nil nil ((28692 . 28693)) nil (25451 33590 577968 664000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28692) (undo-tree-id2936 . -1) 28693 (t 25451 33590 601958 46000)) nil (25451 33597 210758 294000) 0 nil])
([nil nil ((28692 . 28693)) nil (25451 33597 210755 498000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28725) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) 28726) nil (25451 33597 210752 20000) 0 nil])
([nil nil ((28725 . 28726)) nil (25451 33597 210714 776000) 0 nil])
([nil nil ((#("3" 0 1 (part-side css)) . -28725) (undo-tree-id2947 . -1) 28726 (t 25451 33597 234068 720000)) nil (25451 33605 312450 656000) 0 nil])
([nil nil ((28725 . 28726)) nil (25451 33605 312447 921000) 0 nil])
([nil nil ((#("3" 0 1 (part-side css)) . -28692) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) 28693) nil (25451 33605 312445 5000) 0 nil])
([nil nil ((28692 . 28693)) nil (25451 33605 312419 573000) 0 nil])
([nil nil ((6882 . 6893) (t 25451 33605 342203 841000)) nil (25451 33750 607297 554000) 0 nil])
([nil nil ((6900 . 6907) (6893 . 6901)) nil (25451 33750 607296 353000) 0 nil])
([nil nil ((6907 . 6913)) nil (25451 33750 607295 176000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6908) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (#("o" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6909) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (#("l" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6910) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (#("i" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6911) (undo-tree-id2967 . -1) (#("d" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6912) (undo-tree-id2968 . -1) 6913) nil (25451 33750 607292 807000) 0 nil])
([nil nil ((6908 . 6915)) nil (25451 33750 607279 199000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6914) (undo-tree-id2957 . -1) 6915) nil (25451 33750 607277 748000) 0 nil])
([nil nil ((6914 . 6919)) nil (25451 33750 607274 636000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6918) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) 6919) nil (25451 33750 607269 530000) 0 nil])
([nil nil ((#("
          style=\"border: solid 1px;\"" 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 36 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6882) (undo-tree-id2978 . -37) (undo-tree-id2979 . -26) (undo-tree-id2980 . -30) (undo-tree-id2981 . -1) (undo-tree-id2982 . -37) (t 25451 33750 640595 972000)) nil (25451 33775 786231 869000) 0 nil])
([nil nil ((6882 . 6893)) nil (25451 33775 786225 72000) 0 nil])
([nil nil ((6893 . 6902)) nil (25451 33775 786223 398000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-card" tag-type start)) . -6901) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) 6902) nil (25451 33775 786218 19000) 0 nil])
([nil nil ((6834 . 6842) (t 25451 33775 813005 390000)) nil (25451 33865 377517 153000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -6834) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6835) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6836) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (#("-" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6837) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("0" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6838) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (#(" " 0 1 (tag-name "v-col" tag-type start)) . -6839) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (#("m" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6840) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6841) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) 6842) nil (25451 33870 445926 674000) 0 nil] [nil nil ((#("l" 0 1 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face)) . -6833) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (#(" " 0 1 (tag-name "v-col" tag-type start)) . -6834) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6835) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6836) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (#("-" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6837) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (#("0" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6838) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (#(" " 0 1 (tag-name "v-col" tag-type start)) . -6839) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (#("m" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6840) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6841) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) 6842) ((6833 . 6842)) (25451 33865 374554 73000) 0 nil] [nil nil ((#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6835) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6836) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (#("-" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6837) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (#("0" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6838) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (#(" " 0 1 (tag-name "v-col" tag-type start)) . -6839) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (#("m" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6840) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (#("a" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6841) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) 6842) ((6835 . 6842)) (25451 33862 26257 831000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("0" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("-" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("t" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("m" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#(" " 0 1 (tag-name "v-row" tag-type start)) . 6803) (#("0" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("-" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("t" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("=" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("a" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("l" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803) (#("c" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6803)) nil (25451 33870 445903 424000) 0 nil])
nil
([nil nil ((6842 . 6851) (6835 . 6843)) ((#("class=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6835) (undo-tree-id2997 . -3) (undo-tree-id2998 . -7) (undo-tree-id2999 . -7) (undo-tree-id3000 . -7) (undo-tree-id3001 . -7) (undo-tree-id3002 . -7) (undo-tree-id3003 . -7) (undo-tree-id3004 . -7) (undo-tree-id3005 . -7) (undo-tree-id3006 . -7) (undo-tree-id3007 . -7) (undo-tree-id3008 . -7) (undo-tree-id3009 . -7) (undo-tree-id3010 . -7) (undo-tree-id3011 . -7) (#("pa-0 ma-0" 0 9 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6842) (undo-tree-id3012 . -7) (undo-tree-id3013 . -9) (undo-tree-id3014 . -9) (undo-tree-id3015 . -9) (undo-tree-id3016 . -9) (undo-tree-id3017 . -9) (undo-tree-id3018 . -9) (undo-tree-id3019 . -9) (undo-tree-id3020 . -9) (undo-tree-id3021 . -9) (undo-tree-id3022 . -9) (undo-tree-id3023 . -9) (undo-tree-id3024 . -9) (undo-tree-id3025 . -9) (t 25451 33845 358129 909000)) (25451 33845 333762 562000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -6802) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) 6803) nil (25451 33870 445893 375000) 0 nil])
nil
([nil nil (("    " . -5080) ("    " . -5069) ("    " . -5054) ("    " . -5032) ("    " . -4976) ("    " . -4952) ("    " . -4932) ("    " . -4913) ("    " . -4879) (#("    " 0 4 (tag-name "p" tag-type start)) . -4830) ("    " . -4779) ("    " . -4712) ("    " . -4664) ("    " . -4606) ("    " . -4578) ("    " . -4555) ("    " . -4508) ("    " . -4484) ("    " . -4464) ("    " . -4445) ("    " . -4398) ("    " . -4352) ("    " . -4280) ("    " . -4231) ("    " . -4173) ("    " . -4145) ("    " . -4121) ("    " . -4062) ("    " . -4038) ("    " . -4018) ("    " . -4002) ("    " . -3976) ("    " . -3944) (#("    " 0 4 (tag-name "v-icon" tag-type start)) . -3924) (#("    " 0 4 (tag-name "v-icon" tag-type start)) . -3902) (#("    " 0 4 (tag-name "v-icon" tag-type start)) . -3866) (#("    " 0 4 (tag-name "v-icon" tag-type start)) . -3840) ("    " . -3814) ("    " . -3774) (#("    " 0 4 (tag-name "span" tag-type start)) . -3755) (#("    " 0 4 (tag-name "span" tag-type start)) . -3731) (#("    " 0 4 (tag-name "span" tag-type start)) . -3700) (#("    " 0 4 (tag-name "span" tag-type start)) . -3659) ("    " . -3637) ("    " . -3579) ("    " . -3551) ("    " . -3528) ("    " . -3462) ("    " . -3438) ("    " . -3417) ("    " . -3387) ("    " . -3323) ("    " . -3275) ("    " . -3217) ("    " . -3189) ("    " . -3165) ("    " . -3127) ("    " . -3103) ("    " . -3083) ("    " . -3064) ("    " . -3005) ("    " . -2959) ("    " . -2890) ("    " . -2842) ("    " . -2784) ("    " . -2756) ("    " . -2710) ("    " . -2668) ("    " . -2655) ("  " . -2640) ("  " . -2619) ("  " . -2559) ("  " . -2535) ("  " . -2514) ("  " . -2470) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2452) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2407) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2371) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2349) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2328) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2302) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -2271) ("  " . -2248) ("  " . -2190) ("  " . -2162) ("  " . -2139) ("  " . -2082) ("  " . -2058) ("  " . -2037) ("  " . -1985) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1967) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1928) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1890) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1854) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1832) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1811) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1785) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1754) ("  " . -1731) ("  " . -1673) ("  " . -1645) ("  " . -1622) ("  " . -1565) ("  " . -1541) ("  " . -1520) ("  " . -1471) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1453) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1411) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1375) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1353) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1332) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1306) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -1275) ("  " . -1252) ("  " . -1194) ("  " . -1166) ("  " . -1143) ("  " . -1083) ("  " . -1059) ("  " . -1038) ("  " . -993) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -975) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -936) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -900) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -878) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -857) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -831) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -800) ("  " . -777) ("  " . -719) ("  " . -691) ("  " . -668) ("  " . -607) ("  " . -583) ("  " . -562) ("  " . -516) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -498) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -457) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -421) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -399) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -378) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -352) (#("  " 0 2 (tag-name "v-btn" tag-type start)) . -321) ("  " . -298) ("  " . -240) ("  " . -212) ("    " . -166) ("    " . -130) ("    " . -87) 12 (t 25451 33870 474533 830000)) nil (25451 33915 841730 910000) 0 nil])
([nil nil ((6488 . 6498)) nil (25451 33915 841693 132000) 0 nil])
([nil nil ((6382 . 6396) (6374 . 6383) (t 25451 33915 871261 241000)) nil (25451 33943 331395 368000) 0 nil])
([nil nil ((6396 . 6399)) nil (25451 33943 331394 24000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6398) (undo-tree-id3111 . -1) 6399) nil (25451 33943 331392 790000) 0 nil])
([nil nil ((6398 . 6405)) nil (25451 33943 331390 80000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6404) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) 6405) nil (25451 33943 331387 947000) 0 nil])
([nil nil ((6404 . 6406)) nil (25451 33943 331375 726000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6405) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) 6406) nil (25451 33943 331369 695000) 0 nil])
([nil nil ((6360 . 6361) (t 25451 33943 359700 110000)) nil (25451 33953 904805 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6390 . 6391) (nil tag-name "v-row" 6367 . 6391) (nil tag-type start 6367 . 6391) (nil tag-attr t 6366 . 6367) (nil tag-attr-end 5 6366 . 6367) (nil tag-name "v-row" 6366 . 6367) (nil tag-type start 6366 . 6367) (nil font-lock-face web-mode-html-attr-equal-face 6366 . 6367) (nil tag-attr t 6365 . 6366) (nil tag-name "v-row" 6365 . 6366) (nil tag-type start 6365 . 6366) (nil font-lock-face web-mode-html-attr-name-face 6365 . 6366) (nil tag-attr t 6364 . 6365) (nil tag-name "v-row" 6364 . 6365) (nil tag-type start 6364 . 6365) (nil font-lock-face web-mode-html-attr-name-face 6364 . 6365) (nil tag-attr t 6363 . 6364) (nil tag-name "v-row" 6363 . 6364) (nil tag-type start 6363 . 6364) (nil font-lock-face web-mode-html-attr-name-face 6363 . 6364) (nil tag-attr t 6362 . 6363) (nil tag-name "v-row" 6362 . 6363) (nil tag-type start 6362 . 6363) (nil font-lock-face web-mode-html-attr-name-face 6362 . 6363) (nil tag-attr-beg 0 6361 . 6362) (nil tag-attr t 6361 . 6362) (nil tag-name "v-row" 6361 . 6362) (nil tag-type start 6361 . 6362) (nil font-lock-face web-mode-html-attr-name-face 6361 . 6362) (6361 . 6391)) nil (25451 33953 904802 208000) 0 nil])
([nil nil ((#("b" 0 1 (tag-name "v-row" tag-type start)) . -6386) (undo-tree-id3112 . -1) (#("l" 0 1 (tag-name "v-row" tag-type start)) . -6387) (undo-tree-id3113 . -1) (#("u" 0 1 (tag-name "v-row" tag-type start)) . -6388) (undo-tree-id3114 . -1) (#("e" 0 1 (tag-name "v-row" tag-type start)) . -6389) (undo-tree-id3115 . -1) 6390) nil (25451 33953 904793 255000) 0 nil])
([nil nil ((6386 . 6389)) nil (25451 33953 904775 7000) 0 nil])
([nil nil ((6390 . 6391) (t 25451 33953 939868 723000)) nil (25451 33959 310180 971000) 0 nil])
([nil nil ((34 . 49) (27 . 36) (t 25451 33959 343954 785000)) nil (25451 33980 813946 947000) 0 nil])
([nil nil ((49 . 59)) nil (25451 33980 813944 689000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -58) (undo-tree-id3116 . -1) 59) nil (25451 33980 813939 314000) 0 nil])
([nil nil ((#("style=\"background-color: green;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 31 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id3122 . -32) (undo-tree-id3123 . -21) (undo-tree-id3124 . -29) (undo-tree-id3125 . -32) (t 25451 33980 840296 710000)) nil (25451 34022 527604 564000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . -26) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) 27) nil (25451 34022 527598 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 125 . 126) (nil tag-attr t 125 . 126) (nil tag-attr-end 5 125 . 126) (nil tag-name "v-row" 125 . 126) (nil tag-type start 125 . 126) (nil font-lock-face web-mode-html-attr-value-face 125 . 126) (nil tag-attr t 100 . 125) (nil tag-name "v-row" 100 . 125) (nil tag-type start 100 . 125) (nil font-lock-face web-mode-html-attr-value-face 100 . 125) (nil tag-attr t 99 . 100) (nil tag-name "v-row" 99 . 100) (nil tag-type start 99 . 100) (nil font-lock-face web-mode-html-attr-equal-face 99 . 100) (nil tag-attr t 95 . 99) (nil tag-name "v-row" 95 . 99) (nil tag-type start 95 . 99) (nil font-lock-face web-mode-html-attr-name-face 95 . 99) (nil tag-attr-beg 0 94 . 95) (nil tag-attr t 94 . 95) (nil tag-name "v-row" 94 . 95) (nil tag-type start 94 . 95) (nil font-lock-face web-mode-html-attr-name-face 94 . 95) (94 . 126)) nil (25451 34022 527581 888000) 0 nil])
([nil nil ((126 . 127)) nil (25451 34166 313502 587000) 0 nil])
([nil nil ((#("style=\"background-color: green;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 31 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 94) (undo-tree-id3269 . -32) (undo-tree-id3270 . -32)) nil (25451 34171 896986 893000) 0 nil] [nil nil ((#("style=\"background-color: green;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 31 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 94) (undo-tree-id3129 . -32) (undo-tree-id3130 . -32) (t 25451 34022 560958 537000)) ((94 . 126)) (25451 34165 578339 374000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -93) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) 94) nil (25451 34171 896979 15000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . 94)) ((94 . 95) (t 25451 34156 563070 177000)) (25451 34156 527016 385000) 0 nil] [nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -93) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) 94) ((93 . 94)) (25451 34152 164567 54000) 0 nil])
([nil nil ((#("
        <v-col class=\"text-left pa-0 ma-0\">" 9 10 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 33 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 33 42 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 157) (undo-tree-id3298 . -44) (undo-tree-id3299 . -1) (undo-tree-id3300 . -44) (t 25451 34171 923311 21000)) nil (25451 34189 297679 373000) 0 nil])
nil
([nil nil ((#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5076) (undo-tree-id3253 . -12) (undo-tree-id3254 . -13) (5059 . 5076) (#("        </v-col>
" 8 9 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5046) (5063 . 5076) 5075) ((#("      </div>
" 6 7 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 11 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 11 12 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5063) (undo-tree-id3264 . -12) (5046 . 5063) (#("        </v-col>
" 8 9 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5059) (5076 . 5089)) (25451 34150 135790 683000) 0 nil] [nil nil ((6485 . 6496)) ((#("
          " 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start)) . 6485) (undo-tree-id3198 . -11) (undo-tree-id3199 . -11) (undo-tree-id3200 . -1) (undo-tree-id3201 . -11) (undo-tree-id3202 . -11) (undo-tree-id3203 . -11) (undo-tree-id3204 . -11) (undo-tree-id3205 . -11) (undo-tree-id3206 . -11) (undo-tree-id3207 . -11) (undo-tree-id3208 . -11) (undo-tree-id3209 . -11) (undo-tree-id3210 . -11) (undo-tree-id3211 . -11) (undo-tree-id3212 . -11) (undo-tree-id3213 . -11) (undo-tree-id3214 . -11) (undo-tree-id3215 . -11) (undo-tree-id3216 . -11) (undo-tree-id3217 . -1) (undo-tree-id3218 . -11) (undo-tree-id3219 . -11) (undo-tree-id3220 . -11) (undo-tree-id3221 . -11) (undo-tree-id3222 . -11) (undo-tree-id3223 . -11) (undo-tree-id3224 . -11) (undo-tree-id3225 . -11) (undo-tree-id3226 . -11) (undo-tree-id3227 . -11) (undo-tree-id3228 . -11) (undo-tree-id3229 . -11) (undo-tree-id3230 . -11) (undo-tree-id3231 . -11) (undo-tree-id3232 . -11) (undo-tree-id3233 . -11) (undo-tree-id3234 . -11) (undo-tree-id3235 . -11) (undo-tree-id3236 . -11) (undo-tree-id3237 . -11)) (25451 34057 319888 951000) 0 nil] [nil nil ((nil rear-nonsticky nil 6814 . 6815) (nil rear-nonsticky t 6814 . 6815) (nil tag-attr t 6814 . 6815) (nil tag-attr-end 5 6814 . 6815) (nil tag-name "v-simple-table" 6814 . 6815) (nil tag-type start 6814 . 6815) (nil font-lock-face web-mode-html-attr-value-face 6814 . 6815) (nil tag-attr t 6789 . 6814) (nil tag-name "v-simple-table" 6789 . 6814) (nil tag-type start 6789 . 6814) (nil font-lock-face web-mode-html-attr-value-face 6789 . 6814) (nil tag-attr t 6788 . 6789) (nil tag-name "v-simple-table" 6788 . 6789) (nil tag-type start 6788 . 6789) (nil font-lock-face web-mode-html-attr-equal-face 6788 . 6789) (nil tag-attr t 6784 . 6788) (nil tag-name "v-simple-table" 6784 . 6788) (nil tag-type start 6784 . 6788) (nil font-lock-face web-mode-html-attr-name-face 6784 . 6788) (nil tag-attr-beg 0 6783 . 6784) (nil tag-attr t 6783 . 6784) (nil tag-name "v-simple-table" 6783 . 6784) (nil tag-type start 6783 . 6784) (nil font-lock-face web-mode-html-attr-name-face 6783 . 6784) (6783 . 6815)) ((#("style=\"background-color: green;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 31 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6783) (undo-tree-id3146 . -32) (undo-tree-id3147 . -32) (undo-tree-id3148 . -32) (undo-tree-id3149 . -32) (undo-tree-id3150 . -32) (undo-tree-id3151 . -32) (undo-tree-id3152 . -32) (undo-tree-id3153 . -32) (undo-tree-id3154 . -32) (undo-tree-id3155 . -32) (undo-tree-id3156 . -32) (undo-tree-id3157 . -32) (undo-tree-id3158 . -32) (undo-tree-id3159 . -32) (undo-tree-id3160 . -32) (undo-tree-id3161 . -32) (undo-tree-id3162 . -32) (undo-tree-id3163 . -32) (undo-tree-id3164 . -32) (undo-tree-id3165 . -32) (undo-tree-id3166 . -32) (undo-tree-id3167 . -32) (undo-tree-id3168 . -32) (undo-tree-id3169 . -32) (undo-tree-id3170 . -32) (undo-tree-id3171 . -32) (undo-tree-id3172 . -32) (undo-tree-id3173 . -32) (undo-tree-id3174 . -32) (undo-tree-id3175 . -32) (undo-tree-id3176 . -32) (undo-tree-id3177 . -32) (undo-tree-id3178 . -32) (undo-tree-id3179 . -32) (undo-tree-id3180 . -32) (nil tag-name "v-simple-table" 6783 . 6784) (nil tag-name "v-simple-table" 6784 . 6788) (nil tag-name "v-simple-table" 6788 . 6789) (nil tag-name "v-simple-table" 6789 . 6814) (nil tag-name "v-simple-table" 6814 . 6815) (nil rear-nonsticky nil 6814 . 6815) (nil rear-nonsticky t 6814 . 6815)) (25451 34046 127165 66000) 0 nil])
([nil nil ((#("
        </v-col>" 9 10 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2587) (undo-tree-id3294 . -17) (undo-tree-id3295 . -1) (undo-tree-id3296 . -17) (undo-tree-id3297 . -17)) nil (25451 34189 297674 965000) 0 nil])
([nil nil ((#("
        <v-col class=\"text-left pa-0 ma-0\">" 9 10 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 42 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2701) (undo-tree-id3250 . -44) (undo-tree-id3251 . -1) (undo-tree-id3252 . -44)) ((2701 . 2745)) (25451 34148 309464 476000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6527 . 6528) (nil rear-nonsticky t 6527 . 6528) (nil tag-attr t 6527 . 6528) (nil tag-attr-end 5 6527 . 6528) (nil tag-name "v-card" 6527 . 6528) (nil tag-type start 6527 . 6528) (nil font-lock-face web-mode-html-attr-value-face 6527 . 6528) (nil tag-attr t 6502 . 6527) (nil tag-name "v-card" 6502 . 6527) (nil tag-type start 6502 . 6527) (nil font-lock-face web-mode-html-attr-value-face 6502 . 6527) (nil tag-attr t 6501 . 6502) (nil tag-name "v-card" 6501 . 6502) (nil tag-type start 6501 . 6502) (nil font-lock-face web-mode-html-attr-equal-face 6501 . 6502) (nil tag-attr t 6497 . 6501) (nil tag-name "v-card" 6497 . 6501) (nil tag-type start 6497 . 6501) (nil font-lock-face web-mode-html-attr-name-face 6497 . 6501) (nil tag-attr-beg 0 6496 . 6497) (nil tag-attr t 6496 . 6497) (nil tag-name "v-card" 6496 . 6497) (nil tag-type start 6496 . 6497) (nil font-lock-face web-mode-html-attr-name-face 6496 . 6497) (6496 . 6528)) ((#("style=\"background-color: green;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 31 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6496) (undo-tree-id3181 . -32) (undo-tree-id3182 . -32) (undo-tree-id3183 . -32) (undo-tree-id3184 . -32) (undo-tree-id3185 . -32) (undo-tree-id3186 . -32) (undo-tree-id3187 . -32) (undo-tree-id3188 . -32) (undo-tree-id3189 . -32) (undo-tree-id3190 . -32) (undo-tree-id3191 . -32) (undo-tree-id3192 . -32) (undo-tree-id3193 . -32) (undo-tree-id3194 . -32) (undo-tree-id3195 . -32) (undo-tree-id3196 . -32) (undo-tree-id3197 . -32) (nil tag-name "v-card" 6496 . 6497) (nil tag-name "v-card" 6497 . 6501) (nil tag-name "v-card" 6501 . 6502) (nil tag-name "v-card" 6502 . 6527) (nil tag-name "v-card" 6527 . 6528) (nil rear-nonsticky nil 6527 . 6528) (nil rear-nonsticky t 6527 . 6528) (t 25451 34050 313397 552000)) (25451 34050 285292 274000) 0 nil])
([nil nil ((6815 . 6816)) ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . 6815) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (t 25451 34035 613165 126000)) (25451 34035 583714 330000) 0 nil])
([nil nil ((#("
        <v-col class=\"text-left pa-0 ma-0\">" 9 10 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 42 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (rear-nonsticky t tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2640) (undo-tree-id3291 . -44) (undo-tree-id3292 . -1) (undo-tree-id3293 . -44)) nil (25451 34189 297669 836000) 0 nil])
([nil nil (("
" . -2700) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) 2701) ((2700 . 2701)) (25451 34147 175529 494000) 0 nil])
nil
nil
([nil nil (("
" . -2639) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) 2640) nil (25451 34189 297665 346000) 0 nil])
([nil nil ((#("
        </v-col>" 9 10 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5013) (undo-tree-id3244 . -17) (undo-tree-id3245 . -1) (undo-tree-id3246 . -17)) ((5013 . 5030)) (25451 34146 203608 936000) 0 nil])
([nil nil ((#("
        </v-col>" 9 10 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 4939) (undo-tree-id3285 . -17) (undo-tree-id3286 . -1) (undo-tree-id3287 . -17)) nil (25451 34189 297659 830000) 0 nil])
([nil nil ((#("
        <v-col class=\"text-left pa-0 ma-0\">" 9 10 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 10 15 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-col" tag-type start) 16 17 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 17 21 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 21 22 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 22 33 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 33 42 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 157) (undo-tree-id3241 . -44) (undo-tree-id3242 . -1) (undo-tree-id3243 . -44)) ((157 . 201)) (25451 34145 333914 930000) 0 nil])
([nil nil (("
" . -4938) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) 4939) nil (25451 34189 297649 633000) 0 nil])
([nil nil ((#("
        </v-col>" 9 10 (tag-name "v-col" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-bracket-face) 11 16 (tag-name "v-col" tag-type end font-lock-face web-mode-html-tag-custom-face) 16 17 (tag-name "v-col" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 2587) (undo-tree-id3238 . -17) (undo-tree-id3239 . -1) (undo-tree-id3240 . -17)) ((2587 . 2604) (t 25451 34129 670647 954000)) (25451 34128 770630 751000) 0 nil])
([nil nil ((6380 . 6391) (t 25451 34189 327583 644000)) nil (25451 34246 807504 296000) 0 nil])
([nil nil ((142 . 152) (t 25451 34100 570190 234000)) ((#("ma-0 pa-0 " 0 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 142) (undo-tree-id3255 . -10) (undo-tree-id3256 . -10) (undo-tree-id3257 . -10) (undo-tree-id3258 . -10) (undo-tree-id3259 . -10) (undo-tree-id3260 . -10) (undo-tree-id3261 . -10) (undo-tree-id3262 . -10) (undo-tree-id3263 . -10) (t 25451 34125 770586 659000)) (25451 34125 742593 517000) 0 nil])
([nil nil ((6391 . 6396)) nil (25451 34246 807502 969000) 0 nil])
nil
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6391) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6392) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6393) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6394) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6395) (undo-tree-id3311 . -1) 6396) nil (25451 34246 807500 276000) 0 nil])
([nil nil ((6398 . 6399) (6391 . 6399)) nil (25451 34246 807485 973000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6398) (undo-tree-id3302 . -1) 6399) nil (25451 34246 807484 143000) 0 nil])
([nil nil ((6398 . 6403)) nil (25451 34246 807480 580000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6402) (undo-tree-id3301 . -1) 6403) nil (25451 34246 807475 365000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6398) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6399) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6400) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) 6401 (t 25451 34246 836482 548000)) nil (25451 34264 101819 866000) 0 nil])
([nil nil ((6398 . 6400)) nil (25451 34264 101797 564000) 0 nil])
([nil nil ((#("
          width=\"59%\"" 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 21 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6380) (undo-tree-id3318 . -22) (undo-tree-id3319 . -18) (undo-tree-id3320 . -1) (undo-tree-id3321 . -22) (undo-tree-id3322 . -22) (undo-tree-id3323 . -22) (t 25451 34264 132752 357000)) nil (25451 34283 74997 32000) 0 nil])
([nil nil ((6289 . 6293) (6282 . 6291)) nil (25451 34283 74973 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6248 . 6249) (nil tag-attr t 6248 . 6249) (nil tag-attr-end 5 6248 . 6249) (nil tag-name "v-row" 6248 . 6249) (nil tag-type start 6248 . 6249) (nil font-lock-face web-mode-html-attr-value-face 6248 . 6249) (nil tag-attr t 6243 . 6248) (nil tag-name "v-row" 6243 . 6248) (nil tag-type start 6243 . 6248) (nil font-lock-face web-mode-html-attr-value-face 6243 . 6248) (nil tag-attr t 6242 . 6243) (nil tag-name "v-row" 6242 . 6243) (nil tag-type start 6242 . 6243) (nil font-lock-face web-mode-html-attr-equal-face 6242 . 6243) (nil tag-attr t 6238 . 6242) (nil tag-name "v-row" 6238 . 6242) (nil tag-type start 6238 . 6242) (nil font-lock-face web-mode-html-attr-name-face 6238 . 6242) (nil tag-attr-beg 0 6237 . 6238) (nil tag-attr t 6237 . 6238) (nil tag-name "v-row" 6237 . 6238) (nil tag-type start 6237 . 6238) (nil font-lock-face web-mode-html-attr-name-face 6237 . 6238) (6237 . 6249) (t 25451 34283 109048 104000)) nil (25451 34290 724500 923000) 0 nil])
([nil nil ((6249 . 6250)) nil (25451 34290 724488 722000) 0 nil])
([nil nil ((#("width=\"100%\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6237) (undo-tree-id3337 . -12) (undo-tree-id3338 . -12) (t 25451 34290 753167 159000)) nil (25451 34304 927652 807000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -6236) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) 6237) nil (25451 34304 927648 638000) 0 nil])
([nil nil ((#("width=\"100%\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 11 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6282) (undo-tree-id3330 . -12) (undo-tree-id3331 . -10) (undo-tree-id3332 . -12) (undo-tree-id3333 . -12)) nil (25451 34304 927643 679000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -6281) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) 6282) nil (25451 34322 998797 218000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6427) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (#("m" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6428) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (#("l" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6429) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6430) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6431) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6432) (undo-tree-id3480 . -1) (#("m" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6433) (undo-tree-id3481 . -1) (#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6434) (undo-tree-id3482 . -1) (#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6435) (undo-tree-id3483 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6436) (undo-tree-id3484 . -1) 6437 (t 25451 34326 217718 953000)) nil (25451 34766 881866 209000) 0 nil] [nil nil ((#(" bg grid-list-xs text-xs-center fluid" 0 1 (tag-name "v-container" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-name "v-container" tag-type start) 4 5 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 15 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-name "v-container" tag-type start) 17 18 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 18 30 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 31 32 (tag-name "v-container" tag-type start) 32 33 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 33 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 36 37 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face)) . 44) (undo-tree-id3324 . -37) (undo-tree-id3325 . -37)) ((44 . 81)) (25451 34322 10659 306000) 0 nil])
([nil nil ((6427 . 6430) (t 25451 34766 911952 790000)) nil (25451 34788 985866 779000) 0 nil])
([nil nil ((#("class=\"ma-0 pa-0\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 10 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 13 16 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id3375 . -17) (undo-tree-id3377 . -17) (undo-tree-id3378 . -17) (t 25451 34304 957388 271000)) ((27 . 44)) (25451 34321 634984 974000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6428) (undo-tree-id3485 . -1) (#("l" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6429) (undo-tree-id3486 . -1) 6430) nil (25451 34788 985863 535000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . -26) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) (undo-tree-id3344 . -1) (undo-tree-id3346 . -1) (undo-tree-id3348 . -1) (undo-tree-id3350 . -1) (undo-tree-id3352 . -1) (undo-tree-id3354 . -1) (undo-tree-id3356 . -1) (undo-tree-id3358 . -1) (undo-tree-id3360 . -1) (undo-tree-id3362 . -1) (undo-tree-id3364 . -1) (undo-tree-id3366 . -1) (undo-tree-id3368 . -1) (undo-tree-id3370 . -1) (undo-tree-id3372 . -1) (undo-tree-id3374 . -1) 27) ((26 . 27) (t 25451 34314 161531 471000)) (25451 34314 128085 164000) 0 nil])
([nil nil ((6428 . 6432)) nil (25451 34788 985845 359000) 0 nil])
nil
([nil nil ((#("4" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6431) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) 6432 (t 25451 34789 24246 117000)) nil (25451 34794 670253 591000) 0 nil])
([nil nil ((6431 . 6432)) nil (25451 34794 670218 192000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6431) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) 6432 (t 25451 34794 704321 712000)) nil (25451 34799 595481 7000) 0 nil])
([nil nil ((6431 . 6432)) nil (25451 34799 595420 200000) 0 nil])
([nil nil ((6432 . 6438) (t 25451 34799 624387 272000)) nil (25451 34808 250269 244000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6437) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) 6438) nil (25451 34808 250263 659000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6431) (undo-tree-id3559 . -1) 6432 (t 25451 34808 280502 791000)) nil (25451 34853 719305 142000) 0 nil])
([nil nil ((6431 . 6432)) nil (25451 34853 719302 38000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6436) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) 6437) nil (25451 34853 719299 173000) 0 nil])
([nil nil ((6436 . 6437)) nil (25451 34927 616960 655000) 0 nil])
([nil nil ((6395 . 6406) (t 25451 34853 753113 180000)) nil (25451 35026 353622 123000) 0 nil] [nil nil ((6395 . 6406) (t 25451 34853 753113 180000)) ((#("
          " 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start)) . 6395) (undo-tree-id3562 . -11) (undo-tree-id3563 . -11) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -11) (undo-tree-id3567 . -11) (undo-tree-id3568 . -11) (undo-tree-id3569 . -11) (undo-tree-id3570 . -11) (undo-tree-id3571 . -11) (undo-tree-id3572 . -11) (undo-tree-id3573 . -11)) (25451 34927 276945 967000) 0 nil])
([nil nil ((6406 . 6412)) nil (25451 35026 353620 843000) 0 nil])
([nil nil ((6406 . 6414)) ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6406) (undo-tree-id3560 . -4) (undo-tree-id3561 . -7)) (25451 34927 275646 701000) 0 nil])
([nil nil ((#("u" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6408) (undo-tree-id3590 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6409) (undo-tree-id3591 . -1) (#("æ" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6410) (undo-tree-id3592 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6411) (undo-tree-id3593 . -1) 6412) nil (25451 35026 353618 897000) 0 nil])
nil
([nil nil ((6408 . 6414)) nil (25451 35026 353611 845000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6429 . 6430) (nil tag-attr t 6413 . 6430) (nil tag-name "v-card" 6413 . 6430) (nil tag-type start 6413 . 6430) (nil font-lock-face web-mode-html-attr-value-face 6413 . 6430) (6413 . 6430)) nil (25451 35026 353610 385000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6423) (undo-tree-id3584 . -1) (#("t" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6424) (undo-tree-id3585 . -1) (#("a" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6425) (undo-tree-id3586 . -1) (#("t" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6426) (undo-tree-id3587 . -1) (#("i" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6427) (undo-tree-id3588 . -1) (#("c" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6428) (undo-tree-id3589 . -1) 6429) nil (25451 35026 353605 59000) 0 nil])
([nil nil ((6423 . 6425)) nil (25451 35026 353569 664000) 0 nil])
([nil nil ((#("o" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6424) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) 6425) nil (25451 35026 353565 137000) 0 nil])
([nil nil ((6424 . 6429)) nil (25451 35026 353553 957000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6428) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) 6429) nil (25451 35026 353543 778000) 0 nil])
([nil nil ((#("
          style=\"position: fixed;\"" 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 18 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 18 33 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (rear-nonsticky t tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6395) (undo-tree-id3607 . -35) (undo-tree-id3608 . -31) (undo-tree-id3609 . -32) (undo-tree-id3610 . -1) (undo-tree-id3611 . -18) (undo-tree-id3612 . -35) (t 25451 35026 383477 595000)) nil (25451 35076 823558 357000) 0 nil])
([nil nil ((#("style=\"overflow: auto\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 21 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6607) (undo-tree-id3605 . -22) (undo-tree-id3606 . -22)) nil (25451 35076 823549 184000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -6606) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) 6607) nil (25451 35076 823541 355000) 0 nil])
([nil nil ((6606 . 6615) (t 25451 35076 856180 723000)) nil (25451 35113 963242 35000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6607) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6608) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6609) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6610) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6611) (undo-tree-id3621 . -1) (#("=" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -6612) (undo-tree-id3622 . -1) (#("\"" 0 1 (tag-name "v-row" tag-type start)) . -6613) (undo-tree-id3623 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6614) (undo-tree-id3624 . -1) 6615) nil (25451 35113 963230 367000) 0 nil])
([nil nil ((6607 . 6612)) nil (25451 35113 963174 886000) 0 nil])
([nil nil ((6614 . 6617) (6612 . 6615)) nil (25451 35113 963165 91000) 0 nil])
([nil nil ((#(" width=\"80%\"" 0 1 (tag-name "v-row" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6606) (undo-tree-id3633 . -12) (undo-tree-id3634 . -6) (undo-tree-id3635 . -12) (t 25451 35113 996701 3000)) nil (25451 35167 955086 893000) 0 nil])
([nil nil ((#("style=\"background-color: red;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 25 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 26 28 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6237) (undo-tree-id3631 . -30) (undo-tree-id3632 . -30)) nil (25451 35167 955059 606000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -6236) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) 6237) nil (25451 35167 955055 946000) 0 nil])
([nil nil ((6575 . 6576)) nil (25451 35167 955052 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6605 . 6606) (nil tag-attr t 6605 . 6606) (nil tag-attr-end 5 6605 . 6606) (nil tag-name "v-row" 6605 . 6606) (nil tag-type start 6605 . 6606) (nil font-lock-face web-mode-html-attr-value-face 6605 . 6606) (nil rear-nonsticky t 6604 . 6605) (nil tag-attr t 6604 . 6605) (nil tag-name "v-row" 6604 . 6605) (nil tag-type start 6604 . 6605) (nil font-lock-face web-mode-html-attr-value-face 6604 . 6605) (nil tag-attr t 6602 . 6604) (nil tag-name "v-row" 6602 . 6604) (nil tag-type start 6602 . 6604) (nil font-lock-face web-mode-html-attr-value-face 6602 . 6604) (nil tag-attr t 6601 . 6602) (nil tag-name "v-row" 6601 . 6602) (nil tag-type start 6601 . 6602) (nil font-lock-face web-mode-html-attr-value-face 6601 . 6602) (nil tag-attr t 6582 . 6601) (nil tag-name "v-row" 6582 . 6601) (nil tag-type start 6582 . 6601) (nil font-lock-face web-mode-html-attr-value-face 6582 . 6601) (nil tag-attr t 6581 . 6582) (nil tag-name "v-row" 6581 . 6582) (nil tag-type start 6581 . 6582) (nil font-lock-face web-mode-html-attr-equal-face 6581 . 6582) (nil tag-attr t 6577 . 6581) (nil tag-name "v-row" 6577 . 6581) (nil tag-type start 6577 . 6581) (nil font-lock-face web-mode-html-attr-name-face 6577 . 6581) (nil tag-attr-beg 0 6576 . 6577) (nil tag-attr t 6576 . 6577) (nil tag-name "v-row" 6576 . 6577) (nil tag-type start 6576 . 6577) (nil font-lock-face web-mode-html-attr-name-face 6576 . 6577) (6576 . 6606)) nil (25451 35167 955049 538000) 0 nil])
([nil nil ((#("style=\"background-color: blue;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 23 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 26 30 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6251) (undo-tree-id3627 . -31) (undo-tree-id3628 . -31)) nil (25451 35167 955040 372000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-col" tag-type start)) . -6250) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) 6251) nil (25451 35167 955033 65000) 0 nil])
([nil nil ((6611 . 6626) (6604 . 6613) (t 25451 35167 989461 304000)) nil (25451 35290 118443 126000) 0 nil])
([nil nil ((6626 . 6627)) nil (25451 35290 118441 784000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6626) (undo-tree-id3652 . -1) 6627) nil (25451 35290 118440 529000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6611) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (#("o" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6612) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (#("s" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6613) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (#("i" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6614) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (#("s" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6615) (undo-tree-id3647 . -1) (#("t" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6616) (undo-tree-id3648 . -1) (#("i" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6617) (undo-tree-id3649 . -1) (#("o" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6618) (undo-tree-id3650 . -1) (#("n" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6619) (undo-tree-id3651 . -1) 6620) nil (25451 35290 118435 286000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6618 . 6619) (nil tag-attr t 6611 . 6619) (nil tag-name "v-simple-table" 6611 . 6619) (nil tag-type start 6611 . 6619) (nil font-lock-face web-mode-html-attr-value-face 6611 . 6619) (6611 . 6619)) nil (25451 35290 118402 261000) 0 nil])
([nil nil ((6620 . 6621)) nil (25451 35290 118394 58000) 0 nil])
([nil nil ((#("style=\"position: fixed\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 7 14 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (rear-nonsticky t tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 15 22 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6604) (undo-tree-id3659 . -23) (undo-tree-id3660 . -7) (undo-tree-id3661 . -17) (undo-tree-id3662 . -7) (undo-tree-id3663 . -23) (t 25451 35290 155196 749000)) nil (25451 35419 760205 873000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6603) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) 6604) nil (25451 35609 241383 993000) 0 nil])
([nil nil ((6332 . 6343)) nil (25451 35621 140225 162000) 0 nil] [nil nil ((#("ml-2 mr-2" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 1 3 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 6 9 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6365) (undo-tree-id3727 . -9) (undo-tree-id3728 . -9) (undo-tree-id3729 . -9) (t 25451 35433 929261 8000)) ((6365 . 6374)) (25451 35608 439220 851000) 0 nil] [nil nil ((6375 . 6386)) ((#("
          " 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start)) . 6375) (undo-tree-id3685 . -11) (undo-tree-id3686 . -11) (undo-tree-id3687 . -1) (undo-tree-id3688 . -11) (undo-tree-id3689 . -11) (undo-tree-id3690 . -11) (undo-tree-id3691 . -11) (undo-tree-id3692 . -11) (undo-tree-id3693 . -11) (undo-tree-id3694 . -11) (undo-tree-id3695 . -11) (undo-tree-id3696 . -11) (undo-tree-id3697 . -11) (undo-tree-id3698 . -11) (undo-tree-id3699 . -11) (undo-tree-id3700 . -11) (undo-tree-id3701 . -11) (undo-tree-id3702 . -11) (undo-tree-id3703 . -11) (undo-tree-id3704 . -11) (undo-tree-id3705 . -11) (undo-tree-id3706 . -11) (undo-tree-id3707 . -11) (undo-tree-id3708 . -1) (undo-tree-id3709 . -11) (undo-tree-id3710 . -11) (undo-tree-id3711 . -11) (undo-tree-id3712 . -11) (undo-tree-id3713 . -11) (undo-tree-id3714 . -11) (undo-tree-id3715 . -11) (undo-tree-id3716 . -11) (undo-tree-id3717 . -11) (undo-tree-id3718 . -11) (undo-tree-id3719 . -11) (undo-tree-id3720 . -11)) (25451 35432 72602 106000) 0 nil])
([nil nil ((6343 . 6354)) nil (25451 35621 140224 66000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6364) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3725 . -1) 6365) ((6364 . 6365) (t 25451 35604 823737 838000)) (25451 35604 791589 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6408 . 6409) (nil tag-attr t 6408 . 6409) (nil tag-attr-end 5 6408 . 6409) (nil tag-name "v-card" 6408 . 6409) (nil tag-type start 6408 . 6409) (nil font-lock-face web-mode-html-attr-value-face 6408 . 6409) (nil tag-attr t 6401 . 6408) (nil tag-name "v-card" 6401 . 6408) (nil tag-type start 6401 . 6408) (nil font-lock-face web-mode-html-attr-value-face 6401 . 6408) (nil rear-nonsticky t 6400 . 6401) (nil tag-attr t 6400 . 6401) (nil tag-name "v-card" 6400 . 6401) (nil tag-type start 6400 . 6401) (nil font-lock-face web-mode-html-attr-value-face 6400 . 6401) (nil tag-attr t 6393 . 6400) (nil tag-name "v-card" 6393 . 6400) (nil tag-type start 6393 . 6400) (nil font-lock-face web-mode-html-attr-value-face 6393 . 6400) (nil tag-attr t 6392 . 6393) (nil tag-name "v-card" 6392 . 6393) (nil tag-type start 6392 . 6393) (nil font-lock-face web-mode-html-attr-value-face 6392 . 6393) (nil tag-attr t 6391 . 6392) (nil tag-name "v-card" 6391 . 6392) (nil tag-type start 6391 . 6392) (nil font-lock-face web-mode-html-attr-equal-face 6391 . 6392) (nil tag-attr t 6387 . 6391) (nil tag-name "v-card" 6387 . 6391) (nil tag-type start 6387 . 6391) (nil font-lock-face web-mode-html-attr-name-face 6387 . 6391) (nil tag-attr-beg 0 6386 . 6387) (nil tag-attr t 6386 . 6387) (nil tag-name "v-card" 6386 . 6387) (nil tag-type start 6386 . 6387) (nil font-lock-face web-mode-html-attr-name-face 6386 . 6387) (6386 . 6409)) ((#("style=\"position: fixed\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 7 14 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (rear-nonsticky t tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 15 22 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (rear-nonsticky nil tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6386) (undo-tree-id3664 . -23) (undo-tree-id3665 . -23) (undo-tree-id3666 . -23) (undo-tree-id3667 . -23) (undo-tree-id3668 . -23) (undo-tree-id3669 . -23) (undo-tree-id3670 . -23) (undo-tree-id3671 . -23) (undo-tree-id3672 . -23) (undo-tree-id3673 . -23) (undo-tree-id3674 . -23) (undo-tree-id3675 . -23) (undo-tree-id3676 . -23) (undo-tree-id3677 . -23) (undo-tree-id3678 . -23) (undo-tree-id3679 . -23) (undo-tree-id3680 . -23) (undo-tree-id3681 . -23) (undo-tree-id3682 . -23) (undo-tree-id3683 . -23) (undo-tree-id3684 . -23) (nil tag-name "v-card" 6386 . 6387) (nil tag-name "v-card" 6387 . 6391) (nil tag-name "v-card" 6391 . 6392) (nil tag-name "v-card" 6392 . 6393) (nil tag-name "v-card" 6393 . 6400) (nil tag-name "v-card" 6400 . 6401) (nil rear-nonsticky nil 6400 . 6401) (nil tag-name "v-card" 6401 . 6408) (nil tag-name "v-card" 6408 . 6409) (nil rear-nonsticky t 6408 . 6409) (t 25451 35419 801057 272000)) (25451 35419 760158 476000) 0 nil])
([nil nil ((6354 . 6357)) nil (25451 35630 324274 339000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (tag-name "v-card" tag-type start)) . -6336) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6337) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6338) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6339) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6340) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6341) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6342) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6343) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6344) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (#("s" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6345) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6346) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6347) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6348) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6349) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (#("n" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6350) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (#(":" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6351) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6352) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (#("f" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6353) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6354) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (#("x" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6355) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6356) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) 6357) nil (25451 35634 450046 174000) 0 nil] [nil nil ((#("p" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6343) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6344) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (#("s" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6345) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6346) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6347) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6348) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (#("o" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6349) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (#("n" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6350) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (#(":" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6351) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6352) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (#("f" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6353) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6354) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (#("x" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6355) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6356) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) 6357) ((6343 . 6357)) (25451 35629 604123 85000) 0 nil])
([nil nil ((#("
" 0 1 (tag-name "v-card" tag-type start)) . -6332) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6333) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6334) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (#(" " 0 1 (tag-name "v-card" tag-type start)) . -6335) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) 6336) nil (25451 35634 449957 968000) 0 nil])
([nil nil ((6350 . 6365) (6343 . 6351)) ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6343) (undo-tree-id3785 . -7) (undo-tree-id3786 . -7) (undo-tree-id3787 . -7) (undo-tree-id3788 . -7) (undo-tree-id3789 . -7) (undo-tree-id3790 . -7) (undo-tree-id3791 . -7) (undo-tree-id3792 . -7) (undo-tree-id3793 . -7) (undo-tree-id3794 . -7) (undo-tree-id3795 . -7) (undo-tree-id3796 . -7) (undo-tree-id3797 . -7) (undo-tree-id3798 . -7) (undo-tree-id3799 . -7) (undo-tree-id3800 . -7) (undo-tree-id3801 . -7) (undo-tree-id3802 . -7) (undo-tree-id3803 . -7) (undo-tree-id3804 . -7) (undo-tree-id3805 . -7) (undo-tree-id3806 . -7) (undo-tree-id3807 . -7) (undo-tree-id3808 . -7) (undo-tree-id3809 . -7) (undo-tree-id3810 . -7) (undo-tree-id3811 . -7) (undo-tree-id3812 . -7) (undo-tree-id3813 . -7) (undo-tree-id3814 . -7) (undo-tree-id3815 . -7) (undo-tree-id3816 . -7) (undo-tree-id3817 . -7) (#("position:fixed;" 0 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6350) (undo-tree-id3818 . -12) (undo-tree-id3819 . -13) (undo-tree-id3820 . -15) (undo-tree-id3821 . -15) (undo-tree-id3822 . -15) (undo-tree-id3823 . -15) (undo-tree-id3824 . -15) (undo-tree-id3825 . -15) (undo-tree-id3826 . -15) (undo-tree-id3827 . -15) (undo-tree-id3828 . -15) (undo-tree-id3829 . -15) (undo-tree-id3830 . -15) (undo-tree-id3831 . -15) (undo-tree-id3832 . -15) (undo-tree-id3833 . -15) (undo-tree-id3834 . -15) (undo-tree-id3835 . -15) (undo-tree-id3836 . -15) (undo-tree-id3837 . -15) (undo-tree-id3838 . -15) (undo-tree-id3839 . -15) (undo-tree-id3840 . -15) (undo-tree-id3841 . -15) (undo-tree-id3842 . -15) (undo-tree-id3843 . -15) (undo-tree-id3844 . -15) (undo-tree-id3845 . -15) (undo-tree-id3846 . -15) (undo-tree-id3847 . -15) (undo-tree-id3848 . -15) (undo-tree-id3849 . -15) (undo-tree-id3850 . -15)) (25451 35629 303262 779000) 0 nil])
([nil nil ((6544 . 6555) (t 25451 35634 484169 766000)) nil (25451 35660 832183 309000) 0 nil])
([nil nil ((6365 . 6366)) ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6365) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1)) (25451 35628 969088 511000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6544) (undo-tree-id3928 . -1) (#("a" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6545) (undo-tree-id3929 . -1) (#("c" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6546) (undo-tree-id3930 . -1) (#("k" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6547) (undo-tree-id3931 . -1) (#("g" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6548) (undo-tree-id3932 . -1) (#("r" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6549) (undo-tree-id3933 . -1) (#("o" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6550) (undo-tree-id3934 . -1) (#("u" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6551) (undo-tree-id3935 . -1) (#("n" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6552) (undo-tree-id3936 . -1) (#("d" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6553) (undo-tree-id3937 . -1) (#(":" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-block-delimiter-face)) . -6554) (undo-tree-id3938 . -1) 6555) nil (25451 35660 832179 676000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6365) (undo-tree-id3730 . -1) 6366) ((6365 . 6366) (t 25451 35621 175975 904000)) (25451 35621 140159 212000) 0 nil])
([nil nil ((6544 . 6550)) nil (25451 35660 832163 145000) 0 nil])
nil
([nil nil ((#(":" 0 1 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-block-delimiter-face)) . -6549) (undo-tree-id3927 . -1) 6550) nil (25451 35660 832160 716000) 0 nil])
([nil nil ((6551 . 6554) (6549 . 6553)) nil (25451 35660 832144 954000) 0 nil])
([nil nil ((#("width=\"80%\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 10 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6544) (undo-tree-id3942 . -11) (undo-tree-id3943 . -11) (t 25451 35660 864554 365000)) nil (25451 35680 677842 240000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -6543) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) 6544) nil (25451 35680 677837 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6561 . 6562) (nil tag-name "v-row" 6561 . 6562) (nil tag-type start 6561 . 6562) (nil tag-name "v-row" 6558 . 6561) (nil tag-type start 6558 . 6561) (nil tag-attr t 6557 . 6558) (nil tag-attr-end 5 6557 . 6558) (nil tag-name "v-row" 6557 . 6558) (nil tag-type start 6557 . 6558) (nil font-lock-face web-mode-html-attr-value-face 6557 . 6558) (nil tag-attr t 6556 . 6557) (nil tag-name "v-row" 6556 . 6557) (nil tag-type start 6556 . 6557) (nil font-lock-face web-mode-html-attr-value-face 6556 . 6557) (nil tag-attr t 6552 . 6556) (nil tag-name "v-row" 6552 . 6556) (nil tag-type start 6552 . 6556) (nil font-lock-face web-mode-html-attr-value-face 6552 . 6556) (nil tag-attr t 6551 . 6552) (nil tag-name "v-row" 6551 . 6552) (nil tag-type start 6551 . 6552) (nil font-lock-face web-mode-html-attr-value-face 6551 . 6552) (6551 . 6562)) nil (25451 35680 677822 653000) 0 nil])
([nil nil ((6562 . 6564)) nil (25451 35680 677810 811000) 0 nil])
([nil nil ((#("\"" 0 1 (rear-nonsticky t tag-name "v-row" tag-type start)) . -6561) (undo-tree-id3946 . -1) 6562 (t 25451 35680 712843 991000)) nil (25451 35685 176257 83000) 0 nil])
([nil nil ((#("=" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6556) (undo-tree-id3944 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6557) (undo-tree-id3945 . -1) 6558) nil (25451 35685 176252 384000) 0 nil])
([nil nil ((6556 . 6558)) nil (25451 35685 176235 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6567 . 6568) (nil tag-attr t 6551 . 6568) (nil tag-name "v-row" 6551 . 6568) (nil tag-type start 6551 . 6568) (nil font-lock-face web-mode-html-attr-value-face 6551 . 6568) (6551 . 6568) (t 25451 35685 208909 627000)) nil (25451 35721 282680 627000) 0 nil])
([nil nil ((6568 . 6569)) nil (25451 35721 282672 16000) 0 nil])
([nil nil ((#(" width: 80%; background-color: red;" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 8 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 8 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 11 13 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6568) (undo-tree-id3947 . -35) (undo-tree-id3948 . -35) (t 25451 35721 317437 144000)) nil (25451 35771 966301 431000) 0 nil])
([nil nil ((#(" ml-2 mr-2" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 2 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 7 10 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6364) (undo-tree-id3949 . -10) (undo-tree-id3950 . -10) (undo-tree-id3951 . -10) (undo-tree-id3952 . -10) (t 25451 35771 998178 610000)) nil (25451 35783 760168 369000) 0 nil])
([nil nil ((6596 . 6599) (6589 . 6598) (t 25451 35783 790351 301000)) nil (25451 35816 138919 720000) 0 nil])
([nil nil ((6596 . 6602)) nil (25451 35816 138917 981000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6601) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) 6602) nil (25451 35816 138915 163000) 0 nil])
([nil nil ((6601 . 6603)) nil (25451 35816 138889 687000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6603) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6604) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) 6605 (t 25451 35816 170825 803000)) nil (25451 35839 927584 567000) 0 nil])
([nil nil ((6603 . 6605)) nil (25451 35839 927577 778000) 0 nil])
([nil nil ((#("9" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6604) (undo-tree-id3963 . -1) 6605) nil (25451 35839 927576 106000) 0 nil])
([nil nil ((6604 . 6608)) nil (25451 35839 927565 283000) 0 nil])
([nil nil ((#("%" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6608)) nil (25451 35857 14286 171000) 0 nil])
([nil nil ((#("200" 0 3 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6603) (undo-tree-id4107 . -3) (undo-tree-id4108 . -3) (undo-tree-id4109 . -3) (t 25451 35839 959174 686000)) nil (25451 35923 801009 773000) 0 nil] [nil nil ((6317 . 6328) (t 25451 35839 959174 686000)) ((#("
          " 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start)) . 6317) (undo-tree-id4042 . -11) (undo-tree-id4043 . -11) (undo-tree-id4044 . -1) (undo-tree-id4045 . -11) (undo-tree-id4046 . -11) (undo-tree-id4047 . -11) (undo-tree-id4048 . -11) (undo-tree-id4049 . -11) (undo-tree-id4050 . -11) (undo-tree-id4051 . -11) (undo-tree-id4052 . -11) (undo-tree-id4053 . -11) (undo-tree-id4054 . -11) (undo-tree-id4055 . -11) (undo-tree-id4056 . -11) (undo-tree-id4057 . -11) (undo-tree-id4058 . -11) (undo-tree-id4059 . -11) (undo-tree-id4060 . -11) (undo-tree-id4061 . -11) (undo-tree-id4062 . -11) (undo-tree-id4063 . -11) (undo-tree-id4064 . -11) (undo-tree-id4065 . -11) (undo-tree-id4066 . -11) (undo-tree-id4067 . -11) (undo-tree-id4068 . -11) (undo-tree-id4069 . -11) (undo-tree-id4070 . -11) (undo-tree-id4071 . -11) (undo-tree-id4072 . -1) (undo-tree-id4073 . -11) (undo-tree-id4074 . -11) (undo-tree-id4075 . -11) (undo-tree-id4076 . -11) (undo-tree-id4077 . -11) (undo-tree-id4078 . -11) (undo-tree-id4079 . -11) (undo-tree-id4080 . -11) (undo-tree-id4081 . -11) (undo-tree-id4082 . -11) (undo-tree-id4083 . -11)) (25451 35856 618190 372000) 0 nil])
([nil nil ((6603 . 6605)) nil (25451 35923 801004 493000) 0 nil])
([nil nil ((6328 . 6331)) ((#("sty" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6328) (undo-tree-id4013 . -3) (undo-tree-id4014 . -3) (undo-tree-id4015 . -3) (undo-tree-id4016 . -3) (undo-tree-id4017 . -3) (undo-tree-id4018 . -3) (undo-tree-id4019 . -3) (undo-tree-id4020 . -2) (undo-tree-id4021 . -2) (undo-tree-id4022 . -2) (undo-tree-id4023 . -2) (undo-tree-id4024 . -2) (undo-tree-id4025 . -2) (undo-tree-id4026 . -2) (undo-tree-id4027 . -2) (undo-tree-id4028 . -2) (undo-tree-id4029 . -2) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -3) (undo-tree-id4035 . -3) (undo-tree-id4036 . -3) (undo-tree-id4037 . -3) (undo-tree-id4038 . -3) (undo-tree-id4039 . -3) (undo-tree-id4040 . -3) (undo-tree-id4041 . -3)) (25451 35856 301790 93000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6605) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (#("x" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6606) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) 6607) nil (25451 35923 801000 735000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6328) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6329) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6330) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) 6331) ((6328 . 6331)) (25451 35856 298160 309000) 0 nil])
([nil nil ((6605 . 6606)) nil (25451 35923 800957 81000) 0 nil])
nil
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6589) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6590) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6591) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6592) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6593) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (#("=" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -6594) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (#("\"" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6595) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (#("w" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6596) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (#("i" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (#("d" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (#("t" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (#("h" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6600) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (#(":" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6601) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6602) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (#("8" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6603) (undo-tree-id4156 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6604) (undo-tree-id4157 . -1) (#("%" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6605) (undo-tree-id4158 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6606) (undo-tree-id4159 . -1) 6607 (t 25451 35923 832406 494000)) nil (25451 35939 315122 874000) 0 nil])
([nil nil ((6596 . 6598) (6589 . 6597)) nil (25451 35939 314982 454000) 0 nil])
([nil nil ((#("7" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6596) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) 6598) nil (25451 35939 314979 80000) 0 nil])
([nil nil ((6596 . 6599)) nil (25451 35939 314958 224000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6588) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (#("w" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6589) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (#("i" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6590) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (#("d" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6591) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6592) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (#("h" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6593) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (#("=" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -6594) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (#("\"" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6595) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (#("8" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6596) (undo-tree-id4215 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id4216 . -1) (#("%" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id4217 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id4218 . -1) 6600 (t 25451 35939 348634 644000)) nil (25451 35947 367955 267000) 0 nil])
([nil nil ((6558 . 6572) (t 25451 35947 400753 69000)) nil (25451 35979 457720 965000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6571) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) 6572) nil (25451 35979 457715 355000) 0 nil])
([nil nil ((6565 . 6566) (t 25451 35979 493225 273000)) nil (25451 38290 272679 382000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6566) (#("0" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6566) (#("4" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6566)) nil (25451 38290 272677 684000) 0 nil])
([nil nil ((6566 . 6569)) nil (25451 38290 272675 98000) 0 nil])
([nil nil ((#("x" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6569) (#("p" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6569)) nil (25451 38290 272667 82000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6566) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) 6567 (t 25451 38290 305541 624000)) nil (25451 38303 82129 972000) 0 nil])
([nil nil ((6566 . 6567)) nil (25451 38303 82096 226000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6566) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) 6567 (t 25451 38303 109739 109000)) nil (25451 38316 657893 918000) 0 nil])
([nil nil ((6566 . 6567)) nil (25451 38316 657834 288000) 0 nil])
([nil nil ((#("9" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6566) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) 6567 (t 25451 38316 685948 482000)) nil (25451 38321 173681 550000) 0 nil])
([nil nil ((6566 . 6569)) nil (25451 38321 173650 690000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6568) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) 6569 (t 25451 38321 202018 122000)) nil (25451 38322 172614 290000) 0 nil])
([nil nil ((#(" width: 100%;" 0 13 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6558) (undo-tree-id4314 . -13) (undo-tree-id4315 . -13) (undo-tree-id4316 . -13) (t 25451 38322 202033 542000)) nil (25451 38342 893952 239000) 0 nil])
([nil nil ((#("h" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6551) (undo-tree-id4317 . -1) (#("i" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6552) (undo-tree-id4318 . -1) (#("d" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6553) (undo-tree-id4319 . -1) (#("d" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6554) (undo-tree-id4320 . -1) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6555) (undo-tree-id4321 . -1) (#("n" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6556) (undo-tree-id4322 . -1) 6557 (t 25451 38342 922353 15000)) nil (25451 38345 756703 80000) 0 nil])
([nil nil ((6551 . 6555)) nil (25451 38345 756678 628000) 0 nil])
([nil nil ((94 . 98) (t 25451 38345 790397 230000)) nil (25451 38381 657573 521000) 0 nil])
([nil nil ((#("g" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -97) (undo-tree-id4347 . -1) 98) nil (25451 38381 657572 69000) 0 nil])
([nil nil ((97 . 110)) nil (25451 38381 657569 577000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -94) (undo-tree-id4331 . -1) (#("a" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -95) (undo-tree-id4332 . -1) (#("c" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -96) (undo-tree-id4333 . -1) (#("k" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -97) (undo-tree-id4334 . -1) (#("g" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -98) (undo-tree-id4335 . -1) (#("r" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -99) (undo-tree-id4336 . -1) (#("o" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -100) (undo-tree-id4337 . -1) (#("u" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -101) (undo-tree-id4338 . -1) (#("n" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -102) (undo-tree-id4339 . -1) (#("d" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -103) (undo-tree-id4340 . -1) (#("-" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -104) (undo-tree-id4341 . -1) (#("c" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -105) (undo-tree-id4342 . -1) (#("o" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -106) (undo-tree-id4343 . -1) (#("l" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -107) (undo-tree-id4344 . -1) (#("o" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -108) (undo-tree-id4345 . -1) (#("r" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -109) (undo-tree-id4346 . -1) 110) nil (25451 38381 657565 382000) 0 nil])
([nil nil ((101 . 116) (94 . 103)) nil (25451 38381 657494 747000) 0 nil])
([nil nil ((116 . 122)) nil (25451 38381 657493 260000) 0 nil])
([nil nil ((122 . 124)) nil (25451 38381 657491 703000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -123) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) 124) nil (25451 38381 657485 779000) 0 nil])
([nil nil ((#("style=\"background-color: red;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 29 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 94) (undo-tree-id4353 . -30) (undo-tree-id4354 . -28) (undo-tree-id4355 . -28) (undo-tree-id4356 . -29) (undo-tree-id4357 . -30) (t 25451 38381 686950 514000)) nil (25451 38403 840568 927000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-row" tag-type start)) . -93) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) 94) nil (25451 38403 840560 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 164 . 165) (nil tag-attr t 164 . 165) (nil tag-attr-end 5 164 . 165) (nil tag-name "div" 164 . 165) (nil tag-type start 164 . 165) (nil font-lock-face web-mode-html-attr-value-face 164 . 165) (nil tag-attr t 141 . 164) (nil tag-name "div" 141 . 164) (nil tag-type start 141 . 164) (nil font-lock-face web-mode-html-attr-value-face 141 . 164) (nil tag-attr t 140 . 141) (nil tag-name "div" 140 . 141) (nil tag-type start 140 . 141) (nil font-lock-face web-mode-html-attr-equal-face 140 . 141) (nil tag-attr t 136 . 140) (nil tag-name "div" 136 . 140) (nil tag-type start 136 . 140) (nil font-lock-face web-mode-html-attr-name-face 136 . 140) (nil tag-attr-beg 0 135 . 136) (nil tag-attr t 135 . 136) (nil tag-name "div" 135 . 136) (nil tag-type start 135 . 136) (nil font-lock-face web-mode-html-attr-name-face 135 . 136) (135 . 165)) nil (25451 38403 840544 523000) 0 nil])
([nil nil ((165 . 166)) nil (25451 38403 840532 890000) 0 nil])
([nil nil ((#("style=\"background-color: red;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 29 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 135) (undo-tree-id4373 . -30) (undo-tree-id4374 . -30) (t 25451 38403 875292 413000)) nil (25451 38424 689889 14000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -134) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) 135) nil (25451 38424 689884 860000) 0 nil])
([nil nil ((6244 . 6249) (6236 . 6245)) nil (25451 38424 689879 747000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6248) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) 6249) nil (25451 38424 689873 578000) 0 nil])
([nil nil ((6248 . 6253) (t 25451 38424 723613 601000)) nil (25451 38436 204032 289000) 0 nil])
([nil nil ((6268 . 6270) (t 25451 38436 231790 871000)) nil (25451 38452 362313 456000) 0 nil])
([nil nil ((#("l" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6269) (undo-tree-id4375 . -1) 6270) nil (25451 38452 362310 914000) 0 nil])
([nil nil ((6276 . 6285) (6269 . 6277)) nil (25451 38452 362295 219000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6280) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (#("p" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6281) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (#("a" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6282) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (#("-" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6283) (undo-tree-id4398 . -1) (#("0" 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6284) (undo-tree-id4399 . -1) 6285 (t 25451 38452 396039 836000)) nil (25451 38459 742758 873000) 0 nil])
([nil nil ((6280 . 6290) (t 25451 38459 776153 496000)) nil (25451 38469 460297 800000) 0 nil])
([nil nil ((6290 . 6291)) nil (25451 38469 460295 684000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6290) (undo-tree-id4400 . -1) 6291) nil (25451 38469 460290 745000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6392) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6393) (undo-tree-id4416 . -1) (#("4" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6394) (undo-tree-id4417 . -1) (#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6395) (undo-tree-id4418 . -1) (#("p" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6396) (undo-tree-id4419 . -1) (#("t" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6397) (undo-tree-id4420 . -1) (#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6398) (undo-tree-id4421 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6399) (undo-tree-id4422 . -1) 6400 (t 25451 38469 500303 242000)) nil (25451 39623 76499 593000) 0 nil])
([nil nil ((6392 . 6396)) nil (25451 39623 76483 825000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6395) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) 6396) nil (25451 39623 76478 163000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6394) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) 6395 (t 25451 39623 113769 455000)) nil (25451 39634 562404 108000) 0 nil])
([nil nil ((6394 . 6395)) nil (25451 39634 562344 426000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6394) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) 6395 (t 25451 39634 593944 206000)) nil (25451 39642 462674 964000) 0 nil])
([nil nil ((6394 . 6395)) nil (25451 39642 462639 985000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6394) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) 6395 (t 25451 39642 494064 470000)) nil (25451 39646 712382 308000) 0 nil])
([nil nil ((6394 . 6395)) nil (25451 39646 712345 118000) 0 nil])
([nil nil ((6286 . 6291) (t 25451 39646 750129 264000)) nil (25451 39693 383637 486000) 0 nil])
([nil nil ((142 . 147) (t 25451 39693 414839 833000)) nil (25451 39713 766235 582000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -145) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -146) (undo-tree-id4508 . -1) 147) nil (25451 39713 766232 265000) 0 nil])
([nil nil ((145 . 147)) nil (25451 39713 766208 893000) 0 nil])
([nil nil ((14347 . 14352) (t 25451 39713 799150 290000)) nil (25451 40350 881315 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14467 . 14468) (nil part-side javascript 14467 . 14468) (nil part-side javascript 14466 . 14467) (nil face (rainbow-delimiters-depth-2-face) 14466 . 14467) (nil part-side javascript 14461 . 14466) (nil part-side javascript 14460 . 14461) (nil face (rainbow-delimiters-depth-3-face) 14460 . 14461) (nil part-side javascript 14453 . 14460) (nil part-side javascript 14452 . 14453) (nil face (rainbow-delimiters-depth-4-face) 14452 . 14453) (nil part-side javascript 14451 . 14452) (nil face (rainbow-delimiters-depth-4-face) 14451 . 14452) (nil part-side javascript 14435 . 14451) (nil face web-mode-function-call-face 14435 . 14451) (nil part-side javascript 14434 . 14435) (nil part-side javascript 14430 . 14434) (nil face web-mode-constant-face 14430 . 14434) (nil part-side javascript 14421 . 14430) (nil part-side javascript 14420 . 14421) (nil face (rainbow-delimiters-depth-3-face) 14420 . 14421) (nil part-side javascript 14419 . 14420) (nil part-side javascript 14418 . 14419) (nil face (rainbow-delimiters-depth-3-face) 14418 . 14419) (nil part-side javascript 14414 . 14418) (nil face web-mode-constant-face 14414 . 14418) (nil part-side javascript 14392 . 14414) (nil part-side javascript 14388 . 14392) (nil face web-mode-constant-face 14388 . 14392) (nil part-side javascript 14387 . 14388) (nil face (rainbow-delimiters-depth-3-face) 14387 . 14388) (nil part-side javascript 14386 . 14387) (nil part-side javascript 14384 . 14386) (nil face web-mode-keyword-face 14384 . 14386) (nil part-side javascript 14377 . 14384) (nil part-side javascript 14376 . 14377) (nil face (rainbow-delimiters-depth-2-face) 14376 . 14377) (nil part-side javascript 14375 . 14376) (nil part-side javascript 14374 . 14375) (nil face (rainbow-delimiters-depth-2-face) 14374 . 14375) (nil part-side javascript 14373 . 14374) (nil face (rainbow-delimiters-depth-2-face) 14373 . 14374) (nil part-side javascript 14365 . 14373) (nil face web-mode-keyword-face 14365 . 14373) (nil part-side javascript 14363 . 14365) (nil part-side javascript 14356 . 14363) (nil face web-mode-function-name-face 14356 . 14363) (nil part-side javascript 14352 . 14356) (14352 . 14468)) nil (25451 40350 881311 939000) 0 nil])
([nil nil ((#("    " 0 4 (part-side javascript)) . -14352) 14348) nil (25451 40350 881301 120000) 0 nil])
([nil nil ((#("    updated: function() {
      if (this.loadingCondition === true) {
        this.scrollHorizontal()
      }
    }," 0 4 (part-side javascript) 4 11 (part-side javascript face web-mode-function-name-face) 11 13 (part-side javascript) 13 21 (part-side javascript face web-mode-keyword-face) 21 22 (part-side javascript face (rainbow-delimiters-depth-2-face)) 22 23 (part-side javascript face (rainbow-delimiters-depth-2-face)) 23 24 (part-side javascript) 24 25 (part-side javascript face (rainbow-delimiters-depth-2-face)) 25 26 (part-side javascript) 26 32 (part-side javascript) 32 34 (part-side javascript face web-mode-keyword-face) 34 35 (part-side javascript) 35 36 (part-side javascript face (rainbow-delimiters-depth-3-face)) 36 40 (part-side javascript face web-mode-constant-face) 40 62 (part-side javascript) 62 66 (part-side javascript face web-mode-constant-face) 66 67 (part-side javascript face (rainbow-delimiters-depth-3-face)) 67 68 (part-side javascript) 68 69 (part-side javascript face (rainbow-delimiters-depth-3-face)) 69 78 (part-side javascript) 78 82 (part-side javascript face web-mode-constant-face) 82 83 (part-side javascript) 83 99 (part-side javascript face web-mode-function-call-face) 99 100 (part-side javascript face (rainbow-delimiters-depth-4-face)) 100 101 (part-side javascript face (rainbow-delimiters-depth-4-face)) 101 108 (part-side javascript) 108 109 (part-side javascript face (rainbow-delimiters-depth-3-face)) 109 110 (part-side javascript) 110 114 (part-side javascript) 114 115 (part-side javascript face (rainbow-delimiters-depth-2-face)) 115 116 (rear-nonsticky t part-side javascript)) . 14348) (undo-tree-id4515 . -116) (undo-tree-id4516 . -26) (undo-tree-id4517 . -4) (undo-tree-id4518 . -116) (undo-tree-id4519 . -64) (undo-tree-id4520 . -116)) nil (25451 40350 881298 311000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -14347) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) 14348) nil (25451 40350 881286 880000) 0 nil])
([nil nil ((25575 . 25582) (25562 . 25569) (25486 . 25493) (25451 . 25458) (25388 . 25395) (25315 . 25322) (25291 . 25547) (#("scrollHorizontal() {
        // Used to center horizontal on active element in data window
        const element = this.$el.querySelector('#activeEL')
        if (element !== null) {
          element.scrollIntoView({ inline: 'center', block: 'nearest' })
        }
      }," 0 16 (part-side javascript face web-mode-function-name-face) 16 17 (part-side javascript face (rainbow-delimiters-depth-3-face)) 17 18 (part-side javascript face (rainbow-delimiters-depth-3-face)) 18 19 (part-side javascript) 19 20 (part-side javascript face (rainbow-delimiters-depth-3-face)) 20 29 (part-side javascript) 29 30 (part-side javascript part-token comment syntax-table (11) font-lock-face web-mode-javascript-comment-face) 30 76 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 76 78 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 78 90 (part-side javascript part-token comment font-lock-face web-mode-javascript-comment-face) 90 91 (part-side javascript syntax-table (12)) 91 99 (part-side javascript) 99 104 (part-side javascript face web-mode-keyword-face) 104 105 (part-side javascript) 105 112 (part-side javascript face web-mode-variable-name-face) 112 115 (part-side javascript) 115 119 (part-side javascript face web-mode-constant-face) 119 124 (part-side javascript) 124 137 (part-side javascript face web-mode-function-call-face) 137 138 (part-side javascript face (rainbow-delimiters-depth-4-face)) 138 139 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 139 148 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 148 149 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 149 150 (part-side javascript face (rainbow-delimiters-depth-4-face)) 150 159 (part-side javascript) 159 161 (part-side javascript face web-mode-keyword-face) 161 162 (part-side javascript) 162 163 (part-side javascript face (rainbow-delimiters-depth-4-face)) 163 175 (part-side javascript) 175 179 (part-side javascript face web-mode-constant-face) 179 180 (part-side javascript face (rainbow-delimiters-depth-4-face)) 180 181 (part-side javascript) 181 182 (part-side javascript face (rainbow-delimiters-depth-4-face)) 182 201 (part-side javascript) 201 215 (part-side javascript face web-mode-function-call-face) 215 216 (part-side javascript face (rainbow-delimiters-depth-5-face)) 216 217 (part-side javascript face (rainbow-delimiters-depth-6-face)) 217 218 (part-side javascript) 218 224 (part-side javascript face web-mode-variable-name-face) 224 226 (part-side javascript) 226 227 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 227 233 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 233 234 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 234 236 (part-side javascript) 236 241 (part-side javascript face web-mode-variable-name-face) 241 243 (part-side javascript) 243 244 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 244 251 (part-side javascript part-token string font-lock-face web-mode-javascript-string-face) 251 252 (part-side javascript part-token string syntax-table (15) font-lock-face web-mode-javascript-string-face) 252 253 (part-side javascript) 253 254 (part-side javascript face (rainbow-delimiters-depth-6-face)) 254 255 (part-side javascript face (rainbow-delimiters-depth-5-face)) 255 264 (part-side javascript) 264 265 (part-side javascript face (rainbow-delimiters-depth-4-face)) 265 272 (part-side javascript) 272 273 (part-side javascript face (rainbow-delimiters-depth-3-face)) 273 274 (part-side javascript)) . 25291) (undo-tree-id4521 . -274) (undo-tree-id4522 . -274) (undo-tree-id4523 . -21) (undo-tree-id4524 . -274) (undo-tree-id4525 . -274) (t 25451 40350 912868 488000)) nil (25451 40432 571906 266000) 0 nil])
([nil nil ((6640 . 6644) (6633 . 6642) (t 25451 40432 610115 928000)) nil (25451 40507 275564 969000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6643) (undo-tree-id4535 . -1) 6644) nil (25451 40507 275563 317000) 0 nil])
([nil nil ((6640 . 6646)) nil (25451 40507 275561 3000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6644) (undo-tree-id4533 . -1) (#("h" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6645) (undo-tree-id4534 . -1) 6646) nil (25451 40507 275559 459000) 0 nil])
([nil nil ((6644 . 6646)) nil (25451 40507 275555 250000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6644) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (#("h" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6645) (undo-tree-id4532 . -1) 6646) nil (25451 40507 275552 314000) 0 nil])
([nil nil ((6644 . 6647)) nil (25451 40507 275528 944000) 0 nil])
([nil nil ((6650 . 6651) (t 25451 40507 311256 696000)) nil (25451 40509 497573 645000) 0 nil])
([nil nil ((#("8" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id4537 . -1) 6648 (t 25451 40509 535290 662000)) nil (25451 40524 661189 280000) 0 nil])
([nil nil ((6647 . 6648)) nil (25451 40524 661185 828000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id4536 . -1) 6648) nil (25451 40524 661183 316000) 0 nil])
([nil nil ((6647 . 6648)) nil (25451 40524 661167 283000) 0 nil])
([nil nil ((#("tyle=\"width: 50%;\"" 0 4 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 17 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6634) (undo-tree-id4637 . -18) (undo-tree-id4638 . -3) (undo-tree-id4639 . -3) (undo-tree-id4640 . -3) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -18) (undo-tree-id4649 . -18) (t 25451 40524 699522 254000)) nil (25451 40537 252873 654000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6632) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6633) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) 6634) nil (25451 40537 252849 499000) 0 nil])
([nil nil ((6410 . 6417) (t 25451 40537 291714 567000)) nil (25451 40719 888900 543000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6414) (undo-tree-id4682 . -1) (#("4" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6415) (undo-tree-id4683 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6416) (undo-tree-id4684 . -1) 6417) nil (25451 40719 888898 462000) 0 nil])
([nil nil ((6414 . 6415)) nil (25451 40719 888893 680000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6414) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) 6415) nil (25451 40719 888890 998000) 0 nil])
([nil nil ((6414 . 6417)) nil (25451 40719 888862 613000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6416) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) 6417) nil (25451 40719 888857 249000) 0 nil])
([nil nil ((6416 . 6417) (t 25451 40719 922552 105000)) nil (25451 40731 398039 723000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6414) (undo-tree-id4685 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6415) (undo-tree-id4686 . -1) (#("2" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6416) (undo-tree-id4687 . -1) 6417) nil (25451 40731 398036 480000) 0 nil])
([nil nil ((6414 . 6416)) nil (25451 40731 398017 362000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6410) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (#("m" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6411) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6412) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6413) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (#("4" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6414) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (#("0" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6415) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) 6416 (t 25451 40731 434746 382000)) nil (25451 40758 744832 639000) 0 nil])
([nil nil ((6640 . 6651) (6633 . 6642)) nil (25451 40758 744814 727000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6650) (undo-tree-id4702 . -1) 6651) nil (25451 40758 744813 281000) 0 nil])
([nil nil ((6650 . 6653)) nil (25451 40758 744811 180000) 0 nil])
([nil nil ((6653 . 6654)) nil (25451 40758 744810 317000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6646) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (#("3" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6648) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (#("0" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6649) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (#("p" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6650) (undo-tree-id4698 . -1) (#("x" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6651) (undo-tree-id4699 . -1) (#(";" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6652) (undo-tree-id4700 . -1) (#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6653) (undo-tree-id4701 . -1) 6654) nil (25451 40758 744807 52000) 0 nil])
([nil nil ((6646 . 6648)) nil (25451 40758 744791 482000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6646) (undo-tree-id4688 . -1) (#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id4689 . -1) 6648) nil (25451 40758 744788 558000) 0 nil])
([nil nil ((6646 . 6650)) nil (25451 41073 921146 244000) 0 nil])
([nil nil ((#(" style=\"width: 50%\"" 0 1 (tag-name "v-simple-table" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 2 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 18 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6632) (undo-tree-id5168 . -19) (undo-tree-id5169 . -1) (undo-tree-id5170 . -19) (undo-tree-id5171 . -19) (undo-tree-id5172 . -19) (undo-tree-id5173 . -19) (undo-tree-id5174 . -19) (undo-tree-id5175 . -19) (undo-tree-id5176 . -19) (undo-tree-id5177 . -19) (undo-tree-id5178 . -19) (undo-tree-id5179 . -19) (undo-tree-id5180 . -18) (undo-tree-id5181 . -18) (undo-tree-id5182 . -18) (undo-tree-id5183 . -11) (undo-tree-id5184 . -11) (undo-tree-id5185 . -11) (undo-tree-id5186 . -7) (undo-tree-id5187 . -7) (undo-tree-id5188 . -7) (undo-tree-id5189 . -5) (undo-tree-id5190 . -5) (undo-tree-id5191 . -5) (undo-tree-id5192 . -3) (undo-tree-id5193 . -3) (undo-tree-id5194 . -3) (undo-tree-id5195 . -3) (undo-tree-id5196 . -3) (undo-tree-id5197 . -3) (undo-tree-id5198 . -3) (undo-tree-id5199 . -2) (undo-tree-id5200 . -2) (undo-tree-id5201 . -2) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -19) (undo-tree-id5206 . -19)) nil (25451 41076 857087 927000) 0 nil] [nil nil ((#("style=\"width: 50%\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 17 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6633) (undo-tree-id4790 . -18) (undo-tree-id4791 . -16) (undo-tree-id4792 . -18)) ((6633 . 6651)) (25451 41072 304912 407000) 0 nil] [nil nil ((#("1" 0 1 (block-side t tag-attr t tag-name "tbody" tag-type start)) . -7956) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) 7957 (t 25451 40758 783206 489000)) ((7956 . 7957)) (25451 40826 506074 628000) 0 nil])
([nil nil ((6604 . 6617) (t 25451 41076 896439 914000)) nil (25451 42750 312084 107000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6632) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) 6633) ((6632 . 6633)) (25451 41072 109474 756000) 0 nil])
([nil nil ((7956 . 7957)) ((#("9" 0 1 (block-side t tag-attr t tag-name "tbody" tag-type start)) . 7956) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1)) (25451 40826 284194 966000) 0 nil])
([nil nil ((6622 . 6623) (6617 . 6628)) nil (25451 42750 312082 813000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6604 . 6605) (nil tag-attr t 6604 . 6605) (nil tag-name "v-row" 6604 . 6605) (nil tag-type start 6604 . 6605) (nil font-lock-face web-mode-html-attr-name-face 6604 . 6605) (nil tag-attr t 6602 . 6604) (nil tag-name "v-row" 6602 . 6604) (nil tag-type start 6602 . 6604) (nil font-lock-face web-mode-html-attr-name-face 6602 . 6604) (nil tag-attr-beg 0 6601 . 6602) (nil tag-attr t 6601 . 6602) (nil tag-name "v-row" 6601 . 6602) (nil tag-type start 6601 . 6602) (nil font-lock-face web-mode-html-attr-name-face 6601 . 6602) (nil tag-name "v-row" 6594 . 6601) (nil tag-type start 6594 . 6601) (nil tag-attr t 6593 . 6594) (nil tag-attr-end 5 6593 . 6594) (nil tag-name "v-row" 6593 . 6594) (nil tag-type start 6593 . 6594) (nil font-lock-face web-mode-html-attr-value-face 6593 . 6594) (nil tag-attr t 6592 . 6593) (nil tag-name "v-row" 6592 . 6593) (nil tag-type start 6592 . 6593) (nil font-lock-face web-mode-html-attr-value-face 6592 . 6593) (nil tag-attr t 6588 . 6592) (nil tag-name "v-row" 6588 . 6592) (nil tag-type start 6588 . 6592) (nil font-lock-face web-mode-html-attr-value-face 6588 . 6592) (nil tag-attr t 6587 . 6588) (nil tag-name "v-row" 6587 . 6588) (nil tag-type start 6587 . 6588) (nil font-lock-face web-mode-html-attr-value-face 6587 . 6588) (6587 . 6605)) ((#("style=\"width: 50%\"" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 7 14 (tag-name "v-row" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 15 17 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (rear-nonsticky nil tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6587) (undo-tree-id5151 . -18) (undo-tree-id5152 . -17) (undo-tree-id5153 . -17) (undo-tree-id5154 . -17) (undo-tree-id5155 . -17) (undo-tree-id5156 . -17) (undo-tree-id5157 . -18) (undo-tree-id5158 . -18) (undo-tree-id5159 . -18) (undo-tree-id5160 . -18) (undo-tree-id5161 . -18) (undo-tree-id5162 . -18) (undo-tree-id5163 . -18) (undo-tree-id5164 . -18) (undo-tree-id5165 . -18) (undo-tree-id5166 . -18) (undo-tree-id5167 . -18) (nil tag-name "v-row" 6587 . 6588) (nil tag-name "v-row" 6591 . 6592) (nil tag-name "v-row" 6590 . 6591) (nil tag-name "v-row" 6589 . 6590) (nil tag-name "v-row" 6588 . 6589) (nil tag-name "v-row" 6592 . 6593) (nil tag-name "v-row" 6593 . 6594) (nil tag-name "v-row" 6594 . 6601) (nil tag-name "v-row" 6601 . 6602) (nil tag-name "v-row" 6602 . 6604) (nil tag-name "v-row" 6604 . 6605) (nil rear-nonsticky t 6604 . 6605)) (25451 41071 777952 399000) 0 nil])
([nil nil ((#("9" 0 1 (block-side t tag-attr t tag-name "tbody" tag-type start)) . -7956) (undo-tree-id4727 . -1) 7957) ((7956 . 7957)) (25451 40825 754992 696000) 0 nil])
([nil nil ((#("d" 0 1 (tag-name "d" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -6618) (undo-tree-id5221 . -1) (#("v" 0 1 (tag-name "dv" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -6619) (undo-tree-id5222 . -1) (#("i" 0 1 (tag-name "dvi" tag-type start tag-end t font-lock-face web-mode-html-tag-unclosed-face)) . -6620) (undo-tree-id5223 . -1) (#(">" 0 1 (tag-name "dvi" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . -6621) (undo-tree-id5224 . -1) (" " . -6622) (undo-tree-id5225 . -1) 6623) nil (25451 42750 312080 805000) 0 nil])
([nil nil ((#("\"" 0 1 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6604) (undo-tree-id4786 . -1) 6605) ((6604 . 6605)) (25451 41071 437186 434000) 0 nil])
([nil nil ((#("0" 0 1 (block-side t tag-attr t tag-name "tbody" tag-type start)) . -7956) (undo-tree-id4715 . -1) (undo-tree-id4717 . -1) (undo-tree-id4719 . -1) (undo-tree-id4721 . -1) (undo-tree-id4723 . -1) (undo-tree-id4725 . -1) 7957) ((7956 . 7957)) (25451 40825 406271 323000) 0 nil])
([nil nil ((#("i" 0 1 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face)) . 6618) (#("v" 0 1 (tag-name "vi" tag-type start font-lock-face web-mode-html-tag-face)) . 6618) (#("d" 0 1 (tag-name "dvi" tag-type start font-lock-face web-mode-html-tag-face)) . 6618) (#("/" 0 1 (tag-name "dvi" tag-type end font-lock-face web-mode-html-tag-bracket-face)) . 6618) (#("<" 0 1 (tag-name "dvi" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face)) . 6618)) nil (25451 42750 312071 205000) 0 nil])
([nil nil ((6604 . 6606)) ((#("; " 0 1 (tag-attr t tag-attr-end 0 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-name "v-row" tag-type start)) . 6604)) (25451 41069 997887 456000) 0 nil])
([nil nil ((7956 . 7957)) ((#("9" 0 1 (block-side t tag-attr t tag-name "tbody" tag-type start)) . 7956) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (t 25451 40810 572072 566000)) (25451 40810 537585 829000) 0 nil])
([nil nil ((#("<" 0 1 (tag-name "_fragment_" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face)) . -6617) (undo-tree-id5220 . -1) 6618) nil (25451 42750 312069 167000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6587) (undo-tree-id4762 . -1) (undo-tree-id4764 . -1) (undo-tree-id4766 . -1) (undo-tree-id4768 . -1) (undo-tree-id4770 . -1) (undo-tree-id4772 . -1) (undo-tree-id4774 . -1) (#("t" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6588) (undo-tree-id4775 . -1) (undo-tree-id4777 . -1) (undo-tree-id4779 . -1) (#("y" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6589) (undo-tree-id4781 . -1) (#("l" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6590) (undo-tree-id4782 . -1) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6591) (undo-tree-id4783 . -1) (#("=" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6592) (undo-tree-id4784 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6593) (undo-tree-id4785 . -1) 6594) ((6587 . 6594)) (25451 41069 650321 63000) 0 nil])
nil
([nil nil ((6617 . 6627)) nil (25451 42750 312066 921000) 0 nil])
([nil nil ((#("auto" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6609) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) (t 25451 40837 944527 762000)) ((6609 . 6613)) (25451 41069 210002 767000) 0 nil])
([nil nil ((6623 . 6637) (6624 . 6636) (#("              " 0 14 (face whitespace-trailing)) . 6623) (6623 . 6637) (6623 . 6624) ("            " . 6623) (6622 . 6635)) nil (25451 42750 312065 463000) 0 nil])
([nil nil ((6609 . 6616)) ((#("scroll " 0 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6609) (undo-tree-id5137 . -6) (undo-tree-id5138 . -3) (undo-tree-id5139 . -7) (undo-tree-id5140 . -7) (undo-tree-id5141 . -7) (undo-tree-id5142 . -7) (undo-tree-id5143 . -7) (undo-tree-id5144 . -7) (undo-tree-id5145 . -7) (undo-tree-id5146 . -7) (undo-tree-id5147 . -7) (undo-tree-id5148 . -7) (undo-tree-id5149 . -7) (undo-tree-id5150 . -7)) (25451 41068 801901 582000) 0 nil])
([nil nil ((#("
            </div>" 13 14 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6637) (undo-tree-id5217 . -19) (undo-tree-id5218 . -1) (undo-tree-id5219 . -19)) nil (25451 42750 312063 4000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6615) (undo-tree-id4793 . -1) (undo-tree-id4795 . -1) (undo-tree-id4797 . -1) (undo-tree-id4799 . -1) (undo-tree-id4801 . -1) 6616) ((6615 . 6616)) (25451 41068 418060 130000) 0 nil])
([nil nil (("
" . 6637) (undo-tree-id5216 . -1)) nil (25451 42750 312058 193000) 0 nil])
([nil nil ((#("width: 50%;" 0 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 8 10 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587) (undo-tree-id4804 . -11) (undo-tree-id4806 . -1) (undo-tree-id4808 . -1) (undo-tree-id4810 . -1) (undo-tree-id4812 . -1) (undo-tree-id4814 . -11) (t 25451 40869 601052 145000)) ((6587 . 6598)) (25451 41067 963965 901000) 0 nil])
([nil nil (("            " . -6637)) nil (25451 42964 40483 831000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587)) ((6587 . 6588)) (25451 41067 550473 935000) 0 nil])
([nil nil ((#("
            <div>" 13 14 (tag-name "div" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6604) (undo-tree-id5880 . -18) (undo-tree-id5881 . -1) (undo-tree-id5882 . -17) (undo-tree-id5883 . -17) (undo-tree-id5884 . -17) (undo-tree-id5885 . -17) (undo-tree-id5886 . -17) (undo-tree-id5887 . -17) (undo-tree-id5888 . -18) (t 25451 42964 794400 88000)) nil (25451 42974 273066 19000) 0 nil] [nil nil ((9641 . 9652)) (("
          " . 9641) (undo-tree-id5853 . -11) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -11) (undo-tree-id5857 . -11) (undo-tree-id5858 . -11) (undo-tree-id5859 . -11) (undo-tree-id5860 . -11) (undo-tree-id5861 . -11) (undo-tree-id5862 . -11) (undo-tree-id5863 . -11) (undo-tree-id5864 . -11) (undo-tree-id5865 . -11) (undo-tree-id5866 . -11) (undo-tree-id5867 . -1) (undo-tree-id5868 . -11) (undo-tree-id5869 . -11) (undo-tree-id5870 . -11) (undo-tree-id5871 . -11) (undo-tree-id5872 . -11) (undo-tree-id5873 . -11) (undo-tree-id5874 . -11) (undo-tree-id5875 . -11) (undo-tree-id5876 . -11) (undo-tree-id5877 . -11) (undo-tree-id5878 . -11)) (25451 42963 629914 5000) 0 nil])
([nil nil ((#("scroll" 0 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id4867 . -6) (undo-tree-id4868 . -3) (undo-tree-id4869 . -6) (t 25451 40892 217425 499000)) ((6597 . 6603)) (25451 41067 119402 336000) 0 nil])
([nil nil (("  " . -6617) (undo-tree-id5879 . -2) 6646) nil (25451 42974 273049 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9670 . 9671) (nil tag-name "div" 9670 . 9671) (nil tag-type end 9670 . 9671) (nil tag-end t 9670 . 9671) (nil font-lock-face web-mode-html-tag-bracket-face 9670 . 9671) (nil tag-name "div" 9667 . 9670) (nil tag-type end 9667 . 9670) (nil font-lock-face web-mode-html-tag-face 9667 . 9670) (nil tag-name "div" 9666 . 9667) (nil tag-type end 9666 . 9667) (nil font-lock-face web-mode-html-tag-bracket-face 9666 . 9667) (nil tag-name "div" 9665 . 9666) (nil tag-type end 9665 . 9666) (nil tag-beg 20 9665 . 9666) (nil font-lock-face web-mode-html-tag-bracket-face 9665 . 9666) (9652 . 9671)) ((#("
            </div>" 13 14 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (rear-nonsticky nil tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9652) (undo-tree-id5840 . -19) (undo-tree-id5841 . -1) (undo-tree-id5842 . -19) (undo-tree-id5843 . -19) (undo-tree-id5844 . -19) (undo-tree-id5845 . -19) (undo-tree-id5846 . -19) (undo-tree-id5847 . -19) (undo-tree-id5848 . -19) (undo-tree-id5849 . -19) (undo-tree-id5850 . -19) (undo-tree-id5851 . -19) (undo-tree-id5852 . -19) (nil tag-name "div" 9665 . 9666) (nil tag-name "div" 9666 . 9667) (nil tag-name "div" 9667 . 9670) (nil tag-name "div" 9670 . 9671) (nil rear-nonsticky t 9670 . 9671)) (25451 42963 254713 215000) 0 nil])
([nil nil ((6597 . 6602)) ((#("autoi" 0 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id5116 . -4) (undo-tree-id5117 . -5) (undo-tree-id5118 . -5) (undo-tree-id5119 . -5) (undo-tree-id5120 . -5) (undo-tree-id5121 . -5) (undo-tree-id5122 . -5) (undo-tree-id5123 . -5) (undo-tree-id5124 . -5) (undo-tree-id5125 . -5) (undo-tree-id5126 . -5) (undo-tree-id5127 . -5) (undo-tree-id5128 . -5) (undo-tree-id5129 . -5) (undo-tree-id5130 . -5) (undo-tree-id5131 . -5) (undo-tree-id5132 . -5) (undo-tree-id5133 . -5) (undo-tree-id5134 . -5) (undo-tree-id5135 . -5) (undo-tree-id5136 . -5)) (25451 41066 596990 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6605 . 6606) (nil tag-attr t 6587 . 6606) (nil tag-name "v-row" 6587 . 6606) (nil tag-type start 6587 . 6606) (nil font-lock-face web-mode-html-attr-value-face 6587 . 6606) (6587 . 6606) (t 25451 42974 306561 179000)) nil (25451 43123 77957 208000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing)) . -9642) (undo-tree-id5207 . -10) (undo-tree-id5209 . -10) (undo-tree-id5211 . -10) (undo-tree-id5213 . -10) (undo-tree-id5215 . -10) 9671) ((9642 . 9652)) (25451 42962 918588 899000) 0 nil])
([nil nil ((#("i" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6601) (undo-tree-id4866 . -1) 6602) ((6601 . 6602)) (25451 41065 810082 184000) 0 nil])
([nil nil ((6606 . 6607)) nil (25451 43123 77954 923000) 0 nil])
([nil nil ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9662) (undo-tree-id5236 . -18) (undo-tree-id5237 . -19) (undo-tree-id5239 . -18) (9661 . 9662) ("
" . 9642) (9643 . 9662) 9661 (t 25451 42750 346701 598000)) ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9643) (undo-tree-id5814 . -18) (undo-tree-id5815 . -19) (undo-tree-id5816 . -18) (undo-tree-id5817 . -18) (undo-tree-id5818 . -18) (undo-tree-id5819 . -18) (undo-tree-id5820 . -18) (undo-tree-id5821 . -18) (undo-tree-id5822 . -18) (undo-tree-id5823 . -18) (undo-tree-id5824 . -18) (undo-tree-id5825 . -18) (undo-tree-id5826 . -18) (undo-tree-id5827 . -18) (undo-tree-id5828 . -18) (undo-tree-id5829 . -18) (undo-tree-id5830 . -18) (undo-tree-id5831 . -18) (undo-tree-id5832 . -18) (undo-tree-id5833 . -18) (undo-tree-id5834 . -18) (undo-tree-id5835 . -18) (undo-tree-id5836 . -18) (undo-tree-id5837 . -18) (undo-tree-id5838 . -18) (undo-tree-id5839 . -18) (9642 . 9643) ("
" . 9661) (9662 . 9681)) (25451 42961 998297 767000) 0 nil])
([nil nil ((6604 . 6617)) (("
            " . 6604) (undo-tree-id5094 . -13) (undo-tree-id5095 . -1) (undo-tree-id5096 . -13) (undo-tree-id5097 . -13) (undo-tree-id5098 . -13) (undo-tree-id5099 . -13) (undo-tree-id5100 . -13) (undo-tree-id5101 . -13) (undo-tree-id5102 . -13) (undo-tree-id5103 . -13) (undo-tree-id5104 . -1) (undo-tree-id5105 . -13) (undo-tree-id5106 . -13) (undo-tree-id5107 . -13) (undo-tree-id5108 . -13) (undo-tree-id5109 . -13) (undo-tree-id5110 . -13) (undo-tree-id5111 . -13) (undo-tree-id5112 . -13) (undo-tree-id5113 . -13) (undo-tree-id5114 . -13) (undo-tree-id5115 . -13)) (25451 41065 464522 103000) 0 nil])
([nil nil ((6600 . 6607)) nil (25451 43123 77953 846000) 0 nil])
([nil nil ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9661) (undo-tree-id5226 . -18) (undo-tree-id5227 . -19) (undo-tree-id5229 . -18) (undo-tree-id5231 . -18) (undo-tree-id5233 . -18) (undo-tree-id5235 . -18) (9642 . 9661) (#("          </v-row>
" 10 11 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9623) (9642 . 9661) 9660) ((#("            </div>
" 12 13 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 13 14 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 14 17 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 17 18 (rear-nonsticky t tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9642) (undo-tree-id5813 . -19) (9623 . 9642) (#("          </v-row>
" 10 11 (tag-name "v-row" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-bracket-face) 12 17 (tag-name "v-row" tag-type end font-lock-face web-mode-html-tag-custom-face) 17 18 (tag-name "v-row" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9642) (9661 . 9680)) (25451 42961 556763 388000) 0 nil])
([nil nil ((6617 . 6619)) ((#("<i" 0 1 (tag-name "i" tag-type start tag-beg 0 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . 6617) (undo-tree-id5085 . -2) (undo-tree-id5086 . -1) (undo-tree-id5087 . -2) (undo-tree-id5088 . -2) (undo-tree-id5089 . -2) (undo-tree-id5090 . -2) (undo-tree-id5091 . -2) (undo-tree-id5092 . -2) (undo-tree-id5093 . -2)) (25451 41065 104493 635000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6606) (undo-tree-id5907 . -1) 6607) nil (25451 43123 77952 534000) 0 nil])
([nil nil ((6629 . 6643) (6621 . 6630) (t 25451 42758 246840 454000)) ((#(" style=\"\"" 0 1 (tag-name "div" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6621) (undo-tree-id5714 . -8) (undo-tree-id5715 . -8) (undo-tree-id5716 . -8) (undo-tree-id5717 . -8) (undo-tree-id5718 . -9) (undo-tree-id5719 . -8) (undo-tree-id5720 . -8) (undo-tree-id5721 . -8) (undo-tree-id5722 . -8) (undo-tree-id5723 . -8) (undo-tree-id5724 . -8) (undo-tree-id5725 . -8) (undo-tree-id5726 . -8) (undo-tree-id5727 . -8) (undo-tree-id5728 . -8) (undo-tree-id5729 . -8) (undo-tree-id5730 . -8) (undo-tree-id5731 . -8) (undo-tree-id5732 . -8) (undo-tree-id5733 . -8) (undo-tree-id5734 . -8) (undo-tree-id5735 . -8) (undo-tree-id5736 . -8) (undo-tree-id5737 . -8) (undo-tree-id5738 . -8) (undo-tree-id5739 . -8) (undo-tree-id5740 . -8) (undo-tree-id5741 . -8) (undo-tree-id5742 . -8) (undo-tree-id5743 . -8) (undo-tree-id5744 . -8) (undo-tree-id5745 . -8) (undo-tree-id5746 . -8) (undo-tree-id5747 . -8) (undo-tree-id5748 . -8) (undo-tree-id5749 . -8) (undo-tree-id5750 . -8) (undo-tree-id5751 . -8) (undo-tree-id5752 . -8) (undo-tree-id5753 . -8) (undo-tree-id5754 . -8) (undo-tree-id5755 . -8) (undo-tree-id5756 . -8) (undo-tree-id5757 . -8) (undo-tree-id5758 . -8) (undo-tree-id5759 . -8) (undo-tree-id5760 . -8) (undo-tree-id5761 . -8) (undo-tree-id5762 . -8) (undo-tree-id5763 . -8) (#("position: fixe" 0 10 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6629) (undo-tree-id5764 . -14) (undo-tree-id5765 . -14) (undo-tree-id5766 . -10) (undo-tree-id5767 . -10) (undo-tree-id5768 . -14) (undo-tree-id5769 . -10) (undo-tree-id5770 . -14) (undo-tree-id5771 . -14) (undo-tree-id5772 . -14) (undo-tree-id5773 . -14) (undo-tree-id5774 . -14) (undo-tree-id5775 . -14) (undo-tree-id5776 . -14) (undo-tree-id5777 . -14) (undo-tree-id5778 . -14) (undo-tree-id5779 . -14) (undo-tree-id5780 . -14) (undo-tree-id5781 . -14) (undo-tree-id5782 . -14) (undo-tree-id5783 . -14) (undo-tree-id5784 . -14) (undo-tree-id5785 . -14) (undo-tree-id5786 . -14) (undo-tree-id5787 . -14) (undo-tree-id5788 . -14) (undo-tree-id5789 . -14) (undo-tree-id5790 . -14) (undo-tree-id5791 . -14) (undo-tree-id5792 . -14) (undo-tree-id5793 . -14) (undo-tree-id5794 . -14) (undo-tree-id5795 . -14) (undo-tree-id5796 . -14) (undo-tree-id5797 . -14) (undo-tree-id5798 . -14) (undo-tree-id5799 . -14) (undo-tree-id5800 . -14) (undo-tree-id5801 . -14) (undo-tree-id5802 . -14) (undo-tree-id5803 . -14) (undo-tree-id5804 . -14) (undo-tree-id5805 . -14) (undo-tree-id5806 . -14) (undo-tree-id5807 . -14) (undo-tree-id5808 . -14) (undo-tree-id5809 . -14) (undo-tree-id5810 . -14) (undo-tree-id5811 . -14) (undo-tree-id5812 . -14)) (25451 42961 246533 697000) 0 nil])
([nil nil ((#("i" 0 1 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-unclosed-face)) . -6618) (undo-tree-id4865 . -1) 6619) ((6618 . 6619)) (25451 41064 615449 537000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6608) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) 6609) nil (25451 43123 77948 604000) 0 nil])
([nil nil ((6643 . 6645)) ((#("d " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6643) (undo-tree-id5679 . -2) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -2) (undo-tree-id5708 . -2) (undo-tree-id5709 . -2) (undo-tree-id5710 . -2) (undo-tree-id5711 . -2) (undo-tree-id5712 . -2) (undo-tree-id5713 . -2)) (25451 42961 2237 933000) 0 nil])
([nil nil ((6622 . 6623) (6618 . 6628)) ((#("div></div>" 0 3 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 3 4 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 4 5 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 9 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 9 10 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6618) (undo-tree-id5026 . -4) (undo-tree-id5027 . -4) (undo-tree-id5028 . -4) (undo-tree-id5029 . -4) (undo-tree-id5030 . -4) (undo-tree-id5031 . -4) (undo-tree-id5032 . -4) (undo-tree-id5033 . -4) (undo-tree-id5034 . -4) (undo-tree-id5035 . -4) (undo-tree-id5036 . -4) (undo-tree-id5037 . -4) (undo-tree-id5038 . -4) (undo-tree-id5039 . -4) (undo-tree-id5040 . -4) (undo-tree-id5041 . -4) (undo-tree-id5042 . -4) (undo-tree-id5043 . -4) (undo-tree-id5044 . -4) (undo-tree-id5045 . -4) (undo-tree-id5046 . -4) (undo-tree-id5047 . -4) (undo-tree-id5048 . -4) (undo-tree-id5049 . -4) (undo-tree-id5050 . -4) (undo-tree-id5051 . -4) (undo-tree-id5052 . -4) (undo-tree-id5053 . -4) (undo-tree-id5054 . -4) (undo-tree-id5055 . -4) (undo-tree-id5056 . -4) (undo-tree-id5057 . -4) (undo-tree-id5058 . -4) (undo-tree-id5059 . -4) (undo-tree-id5060 . -4) (undo-tree-id5061 . -4) (undo-tree-id5062 . -4) (undo-tree-id5063 . -4) (undo-tree-id5064 . -4) (undo-tree-id5065 . -4) (undo-tree-id5066 . -4) (undo-tree-id5067 . -4) (undo-tree-id5068 . -4) (undo-tree-id5069 . -4) (undo-tree-id5070 . -4) (undo-tree-id5071 . -4) (undo-tree-id5072 . -4) (undo-tree-id5073 . -4) (undo-tree-id5074 . -4) (undo-tree-id5075 . -4) (undo-tree-id5076 . -4) (" " . 6622) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1)) (25451 41064 277805 54000) 0 nil])
([nil nil ((6608 . 6612)) nil (25451 43123 77918 269000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6644) (undo-tree-id5244 . -1) (undo-tree-id5246 . -1) (undo-tree-id5248 . -1) (undo-tree-id5250 . -1) 6645) ((6644 . 6645)) (25451 42960 719881 584000) 0 nil])
([nil nil ((" " . -6622) (undo-tree-id4864 . -1) 6623) ((6622 . 6623)) (25451 41063 919110 990000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6612) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6612)) nil (25451 43123 77910 869000) 0 nil])
([nil nil ((6644 . 6646)) ((#("; " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6644) (undo-tree-id5665 . -2) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2)) (25451 42960 441428 364000) 0 nil])
([nil nil ((6623 . 6637) (6624 . 6636) (#("              " 0 14 (face whitespace-trailing)) . 6623) (6623 . 6637) (6623 . 6624) ("            " . 6623) (6622 . 6635)) (("
            " . 6622) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (6623 . 6635) ("
" . 6623) (undo-tree-id4992 . -1) (undo-tree-id4993 . 1) ("              " . 6623) (6623 . 6637) ("            " . 6624) ("              " . 6623) (undo-tree-id4994 . -14) (undo-tree-id4995 . -5) (undo-tree-id4996 . -5) (undo-tree-id4997 . -5) (undo-tree-id4998 . -5) (undo-tree-id4999 . -5) (undo-tree-id5000 . -5) (undo-tree-id5001 . -5) (undo-tree-id5002 . -5) (undo-tree-id5003 . -5) (undo-tree-id5004 . -5) (undo-tree-id5005 . -5) (undo-tree-id5006 . -5) (undo-tree-id5007 . -14) (undo-tree-id5008 . -14) (undo-tree-id5009 . -14) (undo-tree-id5010 . -14) (undo-tree-id5011 . -14) (undo-tree-id5012 . -14) (undo-tree-id5013 . -14) (undo-tree-id5014 . -14) (undo-tree-id5015 . -14) (undo-tree-id5016 . -14) (undo-tree-id5017 . -14) (undo-tree-id5018 . -14) (undo-tree-id5019 . -14) (undo-tree-id5020 . -14) (undo-tree-id5021 . -14) (undo-tree-id5022 . -14) (undo-tree-id5023 . -14) (undo-tree-id5024 . -14) (undo-tree-id5025 . -14)) (25451 41063 610137 328000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6608) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) 6609 (t 25451 43123 117055 807000)) nil (25451 43140 132970 493000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6645) (undo-tree-id5240 . -1) (undo-tree-id5242 . -1) 6646) ((6645 . 6646)) (25451 42960 140230 674000) 0 nil])
([nil nil ((#("
            </div>" 13 14 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6637) (undo-tree-id4861 . -19) (undo-tree-id4862 . -1) (undo-tree-id4863 . -19)) ((6637 . 6656)) (25451 41063 349118 823000) 0 nil])
([nil nil ((6608 . 6609)) nil (25451 43140 132926 554000) 0 nil])
([nil nil ((#("f" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6639) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6640) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (#("x" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6641) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6642) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (#("d" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6643) (undo-tree-id5268 . -1) 6644 (t 25451 42776 767165 93000)) ((6639 . 6644)) (25451 42959 789536 578000) 0 nil])
([nil nil ((" " . -6628) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (" " . -6629) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (" " . -6630) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (" " . -6631) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (" " . -6632) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (" " . -6633) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (" " . -6634) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (" " . -6635) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (" " . -6636) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) 6637) ((6628 . 6637)) (25451 41062 907716 400000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6608) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) 6609 (t 25451 43140 173338 994000)) nil (25451 43154 853068 606000) 0 nil])
([nil nil ((6639 . 6646)) ((#("static " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6639) (undo-tree-id5646 . -7) (undo-tree-id5647 . -6) (undo-tree-id5648 . -6) (undo-tree-id5649 . -6) (undo-tree-id5650 . -6) (undo-tree-id5651 . -6) (undo-tree-id5652 . -6) (undo-tree-id5653 . -6) (undo-tree-id5654 . -6) (undo-tree-id5655 . -6) (undo-tree-id5656 . -6) (undo-tree-id5657 . -6) (undo-tree-id5658 . -7) (undo-tree-id5659 . -7) (undo-tree-id5660 . -7) (undo-tree-id5661 . -7) (undo-tree-id5662 . -7) (undo-tree-id5663 . -7) (undo-tree-id5664 . -7)) (25451 42959 503265 739000) 0 nil])
([nil nil (("
" . -6622) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (" " . -6623) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (" " . -6624) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (" " . -6625) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (" " . -6626) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (" " . -6627) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) 6628) ((6622 . 6628)) (25451 41062 511258 791000) 0 nil])
([nil nil ((#("scroll-margin-right: 0px;" 0 24 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587) (undo-tree-id6007 . -25) (undo-tree-id6008 . -16) (undo-tree-id6009 . -25) (t 25451 43154 893582 989000)) nil (25451 43246 662360 464000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6645) (undo-tree-id5252 . -1) (undo-tree-id5254 . -1) (undo-tree-id5256 . -1) (undo-tree-id5258 . -1) 6646) ((6645 . 6646)) (25451 42959 124530 151000) 0 nil])
([nil nil ((9620 . 9633)) (("
            " . 9620) (undo-tree-id4945 . -13) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -13) (undo-tree-id4949 . -13) (undo-tree-id4950 . -13) (undo-tree-id4951 . -13) (undo-tree-id4952 . -13) (undo-tree-id4953 . -13) (undo-tree-id4954 . -13) (undo-tree-id4955 . -13) (undo-tree-id4956 . -13) (undo-tree-id4957 . -13)) (25451 41062 201820 389000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587)) nil (25451 43246 662355 442000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6639) (undo-tree-id5397 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6640) (undo-tree-id5398 . -1) (#("a" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6641) (undo-tree-id5399 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6642) (undo-tree-id5400 . -1) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6643) (undo-tree-id5401 . -1) (#("c" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6644) (undo-tree-id5402 . -1) 6645) ((6639 . 6645)) (25451 42958 755327 896000) 0 nil] [nil nil ((nil rear-nonsticky nil 6603 . 6604) (nil tag-attr t 6587 . 6604) (nil tag-name "v-row" 6587 . 6604) (nil tag-type start 6587 . 6604) (nil font-lock-face web-mode-html-attr-value-face 6587 . 6604) (6587 . 6604) (t 25451 42818 47884 445000)) ((#("position: static;" 0 10 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 16 17 (rear-nonsticky nil tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587) (undo-tree-id5318 . -10) (undo-tree-id5319 . -10) (undo-tree-id5320 . -17) (undo-tree-id5321 . -10) (undo-tree-id5322 . -10) (undo-tree-id5323 . -10) (undo-tree-id5324 . -10) (undo-tree-id5325 . -10) (undo-tree-id5326 . -10) (undo-tree-id5327 . -10) (undo-tree-id5328 . -10) (undo-tree-id5329 . -10) (undo-tree-id5330 . -10) (undo-tree-id5331 . -10) (undo-tree-id5332 . -10) (undo-tree-id5333 . -10) (undo-tree-id5334 . -10) (undo-tree-id5335 . -10) (undo-tree-id5336 . -10) (undo-tree-id5337 . -10) (undo-tree-id5338 . -10) (undo-tree-id5339 . -10) (undo-tree-id5340 . -10) (undo-tree-id5341 . -10) (undo-tree-id5342 . -10) (undo-tree-id5343 . -10) (undo-tree-id5344 . -10) (undo-tree-id5345 . -10) (undo-tree-id5346 . -10) (undo-tree-id5347 . -10) (undo-tree-id5348 . -10) (undo-tree-id5349 . -10) (undo-tree-id5350 . -10) (undo-tree-id5351 . -10) (undo-tree-id5352 . -10) (undo-tree-id5353 . -10) (undo-tree-id5354 . -10) (undo-tree-id5355 . -10) (undo-tree-id5356 . -10) (undo-tree-id5357 . -10) (undo-tree-id5358 . -10) (undo-tree-id5359 . -10) (undo-tree-id5360 . -10) (undo-tree-id5361 . -10) (undo-tree-id5362 . -10) (undo-tree-id5363 . -10) (undo-tree-id5364 . -10) (undo-tree-id5365 . -10) (undo-tree-id5366 . -10) (undo-tree-id5367 . -10) (undo-tree-id5368 . -10) (undo-tree-id5369 . -10) (undo-tree-id5370 . -10) (undo-tree-id5371 . -16) (undo-tree-id5372 . -16) (undo-tree-id5373 . -16) (undo-tree-id5374 . -16) (undo-tree-id5375 . -16) (undo-tree-id5376 . -16) (undo-tree-id5377 . -16) (undo-tree-id5378 . -17) (undo-tree-id5379 . -17) (undo-tree-id5380 . -17) (undo-tree-id5381 . -17) (undo-tree-id5382 . -17) (undo-tree-id5383 . -17) (undo-tree-id5384 . -17) (undo-tree-id5385 . -17) (undo-tree-id5386 . -17) (undo-tree-id5387 . -17) (undo-tree-id5388 . -17) (nil tag-name "v-row" 6603 . 6604) (nil tag-name "v-row" 6602 . 6603) (nil tag-name "v-row" 6601 . 6602) (nil tag-name "v-row" 6600 . 6601) (nil tag-name "v-row" 6599 . 6600) (nil tag-name "v-row" 6598 . 6599) (nil tag-name "v-row" 6597 . 6598) (nil tag-name "v-row" 6587 . 6597) (nil rear-nonsticky t 6603 . 6604)) (25451 42847 233472 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9651 . 9652) (nil tag-name "div" 9651 . 9652) (nil tag-type end 9651 . 9652) (nil tag-end t 9651 . 9652) (nil font-lock-face web-mode-html-tag-bracket-face 9651 . 9652) (nil tag-name "div" 9648 . 9651) (nil tag-type end 9648 . 9651) (nil font-lock-face web-mode-html-tag-face 9648 . 9651) (nil tag-name "div" 9647 . 9648) (nil tag-type end 9647 . 9648) (nil font-lock-face web-mode-html-tag-bracket-face 9647 . 9648) (nil tag-name "div" 9646 . 9647) (nil tag-type end 9646 . 9647) (nil tag-beg 20 9646 . 9647) (nil font-lock-face web-mode-html-tag-bracket-face 9646 . 9647) (9633 . 9652)) ((#("
            </div>" 13 14 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 14 15 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 15 18 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 18 19 (rear-nonsticky nil tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 9633) (undo-tree-id4943 . -1) (undo-tree-id4944 . 19) (nil tag-name "div" 9646 . 9647) (nil tag-name "div" 9647 . 9648) (nil tag-name "div" 9648 . 9651) (nil tag-name "div" 9651 . 9652) (nil rear-nonsticky t 9651 . 9652)) (25451 41061 365417 274000) 0 nil])
([nil nil ((8131 . 8154)) nil (25451 43246 662354 541000) 0 nil])
([nil nil ((6639 . 6648)) ((#("relative " 0 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6639) (undo-tree-id5634 . -9) (undo-tree-id5635 . -9) (undo-tree-id5636 . -9) (undo-tree-id5637 . -9) (undo-tree-id5638 . -9) (undo-tree-id5639 . -9) (undo-tree-id5640 . -9) (undo-tree-id5641 . -9) (undo-tree-id5642 . -9) (undo-tree-id5643 . -9) (undo-tree-id5644 . -9) (undo-tree-id5645 . -9)) (25451 42958 442907 335000) 0 nil])
([nil nil ((6604 . 6605)) ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6604)) (25451 42846 945567 636000) 0 nil])
([nil nil (("            " . -9621) (undo-tree-id4815 . -12) (undo-tree-id4816 . -12) (undo-tree-id4818 . -12) (undo-tree-id4820 . -12) (undo-tree-id4822 . -12) (undo-tree-id4824 . -12) (undo-tree-id4826 . -12) (undo-tree-id4828 . -12) 9633) ((9621 . 9633)) (25451 41061 194135 16000) 0 nil])
([nil nil ((8154 . 8162)) nil (25451 43246 662353 516000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id5389 . -1) (undo-tree-id5391 . -1) (undo-tree-id5393 . -1) (undo-tree-id5395 . -1) 6648) ((6647 . 6648)) (25451 42958 124122 927000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id5270 . -1) (#("t" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id5271 . -1) (#("a" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id5272 . -1) (#("t" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6600) (undo-tree-id5273 . -1) (#("i" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6601) (undo-tree-id5274 . -1) (#("c" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6602) (undo-tree-id5275 . -1) 6603) ((6597 . 6603)) (25451 42846 598059 625000) 0 nil])
([nil nil ((#("auto" 0 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id4878 . -4) (undo-tree-id4879 . -4) (t 25451 41020 767529 603000)) ((6597 . 6601)) (25451 41061 16327 45000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8185 . 8186) (nil rear-nonsticky t 8185 . 8186) (nil tag-attr t 8185 . 8186) (nil tag-name "td" 8185 . 8186) (nil tag-type start 8185 . 8186) (nil font-lock-face web-mode-html-attr-value-face 8185 . 8186) (nil tag-attr t 8161 . 8185) (nil tag-name "td" 8161 . 8185) (nil tag-type start 8161 . 8185) (nil font-lock-face web-mode-html-attr-value-face 8161 . 8185) (8161 . 8186)) nil (25451 43246 662351 835000) 0 nil])
([nil nil ((#("relative" 0 8 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6639) (undo-tree-id5413 . -8) (undo-tree-id5414 . -3) (undo-tree-id5415 . -5) (undo-tree-id5416 . -8) (t 25451 42860 609 896000)) ((6639 . 6647)) (25451 42957 775163 189000) 0 nil])
([nil nil ((6597 . 6603)) ((#("fixed " 0 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id5276 . -3) (undo-tree-id5277 . -4) (undo-tree-id5278 . -6) (undo-tree-id5279 . -5) (undo-tree-id5280 . -5) (undo-tree-id5281 . -5) (undo-tree-id5282 . -5) (undo-tree-id5283 . -5) (undo-tree-id5284 . -5) (undo-tree-id5285 . -5) (undo-tree-id5286 . -5) (undo-tree-id5287 . -5) (undo-tree-id5288 . -5) (undo-tree-id5289 . -5) (undo-tree-id5290 . -5) (undo-tree-id5291 . -5) (undo-tree-id5292 . -5) (undo-tree-id5293 . -5) (undo-tree-id5294 . -5) (undo-tree-id5295 . -5) (undo-tree-id5296 . -5) (undo-tree-id5297 . -5) (undo-tree-id5298 . -5) (undo-tree-id5299 . -5) (undo-tree-id5300 . -5) (undo-tree-id5301 . -5) (undo-tree-id5302 . -5) (undo-tree-id5303 . -5) (undo-tree-id5304 . -5) (undo-tree-id5305 . -5) (undo-tree-id5306 . -5) (undo-tree-id5307 . -6) (undo-tree-id5308 . -6) (undo-tree-id5309 . -6) (undo-tree-id5310 . -6) (undo-tree-id5311 . -6) (undo-tree-id5312 . -6) (undo-tree-id5313 . -6) (undo-tree-id5314 . -6) (undo-tree-id5315 . -6) (undo-tree-id5316 . -6) (undo-tree-id5317 . -6)) (25451 42846 210644 86000) 0 nil])
([nil nil ((6597 . 6603)) ((#("false " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id4927 . -4) (undo-tree-id4928 . -6) (undo-tree-id4929 . -5) (undo-tree-id4930 . -5) (undo-tree-id4931 . -5) (undo-tree-id4932 . -5) (undo-tree-id4933 . -5) (undo-tree-id4934 . -5) (undo-tree-id4935 . -5) (undo-tree-id4936 . -6) (undo-tree-id4937 . -6) (undo-tree-id4938 . -6) (undo-tree-id4939 . -6) (undo-tree-id4940 . -6) (undo-tree-id4941 . -6) (undo-tree-id4942 . -6)) (25451 41060 808288 315000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8182) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) 8183) nil (25451 43246 662344 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6646 . 6647) (nil tag-attr t 6639 . 6647) (nil tag-name "div" 6639 . 6647) (nil tag-type start 6639 . 6647) (nil font-lock-face web-mode-html-attr-value-face 6639 . 6647) (6639 . 6647)) ((#("absolute" 0 7 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (rear-nonsticky nil tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6639) (undo-tree-id5611 . -8) (undo-tree-id5612 . -8) (undo-tree-id5613 . -8) (undo-tree-id5614 . -8) (undo-tree-id5615 . -8) (undo-tree-id5616 . -8) (undo-tree-id5617 . -8) (undo-tree-id5618 . -8) (undo-tree-id5619 . -8) (undo-tree-id5620 . -8) (undo-tree-id5621 . -8) (undo-tree-id5622 . -8) (undo-tree-id5623 . -8) (undo-tree-id5624 . -8) (undo-tree-id5625 . -8) (undo-tree-id5626 . -8) (undo-tree-id5627 . -8) (undo-tree-id5628 . -8) (undo-tree-id5629 . -8) (undo-tree-id5630 . -8) (undo-tree-id5631 . -8) (undo-tree-id5632 . -8) (undo-tree-id5633 . -8) (nil tag-name "div" 6646 . 6647) (nil tag-name "div" 6639 . 6646) (nil rear-nonsticky t 6646 . 6647)) (25451 42957 483146 871000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6602) (undo-tree-id5269 . -1) 6603) ((6602 . 6603) (t 25451 42837 256217 272000)) (25451 42837 221840 97000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6602) (undo-tree-id4870 . -1) (undo-tree-id4872 . -1) (undo-tree-id4874 . -1) (undo-tree-id4876 . -1) 6603) ((6602 . 6603)) (25451 41060 562690 34000) 0 nil])
([nil nil ((8182 . 8184)) nil (25451 43246 662232 805000) 0 nil])
([nil nil ((6647 . 6648)) ((#("x" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6647) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1)) (25451 42957 43475 861000) 0 nil])
nil
([nil nil ((#("f" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (#("a" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (#("l" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (#("s" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6600) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (#("e" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6601) (undo-tree-id4897 . -1) 6602 (t 25451 41036 83778 466000)) ((6597 . 6602)) (25451 41060 305153 9000) 0 nil])
([nil nil ((#("u" 0 1 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face)) . -8156) (undo-tree-id6010 . -1) 8157 (t 25451 43246 699096 973000)) nil (25451 43259 25431 561000) 0 nil])
([nil nil ((#("x" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6647) (undo-tree-id5403 . -1) (undo-tree-id5405 . -1) (undo-tree-id5407 . -1) (undo-tree-id5409 . -1) (undo-tree-id5411 . -1) 6648) ((6647 . 6648)) (25451 42956 649576 963000) 0 nil])
([nil nil ((6597 . 6604)) ((#("hidden " 0 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6597) (undo-tree-id4898 . -6) (undo-tree-id4899 . -7) (undo-tree-id4900 . -6) (undo-tree-id4901 . -6) (undo-tree-id4902 . -6) (undo-tree-id4903 . -6) (undo-tree-id4904 . -6) (undo-tree-id4905 . -6) (undo-tree-id4906 . -6) (undo-tree-id4907 . -6) (undo-tree-id4908 . -6) (undo-tree-id4909 . -6) (undo-tree-id4910 . -6) (undo-tree-id4911 . -6) (undo-tree-id4912 . -6) (undo-tree-id4913 . -6) (undo-tree-id4914 . -6) (undo-tree-id4915 . -6) (undo-tree-id4916 . -7) (undo-tree-id4917 . -7) (undo-tree-id4918 . -7) (undo-tree-id4919 . -7) (undo-tree-id4920 . -7) (undo-tree-id4921 . -7) (undo-tree-id4922 . -7) (undo-tree-id4923 . -7) (undo-tree-id4924 . -7) (undo-tree-id4925 . -7) (undo-tree-id4926 . -7)) (25451 41059 920842 22000) 0 nil])
([nil nil ((8156 . 8157)) nil (25451 43259 25415 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6605 . 6606) (nil tag-attr t 6605 . 6606) (nil tag-name "v-row" 6605 . 6606) (nil tag-type start 6605 . 6606) (nil font-lock-face web-mode-html-attr-value-face 6605 . 6606) (nil rear-nonsticky t 6604 . 6605) (nil tag-attr t 6604 . 6605) (nil tag-name "v-row" 6604 . 6605) (nil tag-type start 6604 . 6605) (nil font-lock-face web-mode-html-attr-value-face 6604 . 6605) (nil tag-attr t 6597 . 6604) (nil tag-name "v-row" 6597 . 6604) (nil tag-type start 6597 . 6604) (nil font-lock-face web-mode-html-attr-value-face 6597 . 6604) (nil tag-attr t 6587 . 6597) (nil tag-name "v-row" 6587 . 6597) (nil tag-type start 6587 . 6597) (nil font-lock-face web-mode-html-attr-value-face 6587 . 6597) (6587 . 6606) (t 25451 42890 141127 845000)) ((#("position: absolute;" 0 10 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 10 17 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 17 18 (rear-nonsticky t tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 18 19 (rear-nonsticky nil tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6587) (undo-tree-id5583 . -19) (undo-tree-id5584 . -19) (undo-tree-id5585 . -19) (undo-tree-id5586 . -19) (undo-tree-id5587 . -19) (undo-tree-id5588 . -19) (undo-tree-id5589 . -19) (undo-tree-id5590 . -19) (undo-tree-id5591 . -19) (undo-tree-id5592 . -19) (undo-tree-id5593 . -19) (undo-tree-id5594 . -19) (nil tag-name "v-row" 6587 . 6597) (nil tag-name "v-row" 6597 . 6604) (nil tag-name "v-row" 6604 . 6605) (nil rear-nonsticky nil 6604 . 6605) (nil tag-name "v-row" 6605 . 6606) (nil rear-nonsticky t 6605 . 6606)) (25451 42956 195992 980000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6603) (undo-tree-id4880 . -1) (undo-tree-id4882 . -1) (undo-tree-id4884 . -1) (undo-tree-id4886 . -1) (undo-tree-id4888 . -1) 6604) ((6603 . 6604) (t 25451 41040 763854 439000)) (25451 41040 730719 88000) 0 nil])
([nil nil ((8184 . 8185) (t 25451 43259 63299 929000)) nil (25451 43646 261755 239000) 0 nil])
([nil nil ((6606 . 6607)) ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6606)) (25451 42956 103026 220000) 0 nil])
nil
([nil nil ((#("m" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -142) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (#("l" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -143) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -144) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (#("1" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -145) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) 146 (t 25451 43646 301572 689000)) nil (25451 44078 765184 134000) 0 nil])
([nil nil ((#("style=\"position: absolute;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 17 24 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6642) (undo-tree-id5484 . -27) (undo-tree-id5485 . -17) (undo-tree-id5486 . -17) (undo-tree-id5487 . -26) (undo-tree-id5488 . -17) (undo-tree-id5489 . -17) (undo-tree-id5490 . -27) (undo-tree-id5491 . -26) (undo-tree-id5493 . -14) (undo-tree-id5495 . -14) (undo-tree-id5497 . -11) (undo-tree-id5499 . -11) (undo-tree-id5501 . -7) (undo-tree-id5503 . -6) (undo-tree-id5505 . -6) (undo-tree-id5507 . -4) (undo-tree-id5509 . -3) (undo-tree-id5511 . -3) (undo-tree-id5513 . -2) (undo-tree-id5515 . -2) (undo-tree-id5517 . -2) (undo-tree-id5519 . -1) (undo-tree-id5521 . -1) (undo-tree-id5523 . -27)) ((6642 . 6669)) (25451 42955 941643 21000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 142)) nil (25451 44078 765153 624000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "div" tag-type start)) . -6641) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5427 . -1) (undo-tree-id5429 . -1) (undo-tree-id5431 . -1) (undo-tree-id5433 . -1) (undo-tree-id5435 . -1) (undo-tree-id5437 . -1) (undo-tree-id5439 . -1) (undo-tree-id5441 . -1) (undo-tree-id5443 . -1) (undo-tree-id5445 . -1) (undo-tree-id5447 . -1) (undo-tree-id5449 . -1) (undo-tree-id5451 . -1) (undo-tree-id5453 . -1) (undo-tree-id5455 . -1) (undo-tree-id5457 . -1) (undo-tree-id5459 . -1) (undo-tree-id5461 . -1) (undo-tree-id5463 . -1) (undo-tree-id5465 . -1) (undo-tree-id5467 . -1) (undo-tree-id5469 . -1) (undo-tree-id5471 . -1) (undo-tree-id5473 . -1) (undo-tree-id5475 . -1) (undo-tree-id5477 . -1) (undo-tree-id5479 . -1) (undo-tree-id5481 . -1) (undo-tree-id5483 . -1) 6642) ((6641 . 6642)) (25451 42955 777387 350000) 0 nil])
([nil nil ((#("auto" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6592) (undo-tree-id6019 . -4) (undo-tree-id6020 . -4) (undo-tree-id6021 . -4) (t 25451 44078 804462 916000)) nil (25451 45616 683896 709000) 0 nil])
([nil nil ((#("auto" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 1 4 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6617) (undo-tree-id5534 . -4) (undo-tree-id5535 . -4) (undo-tree-id5536 . -4) (t 25451 42913 553528 408000)) ((6617 . 6621)) (25451 42955 627513 43000) 0 nil])
([nil nil ((6592 . 6598)) nil (25451 45665 506465 624000) 0 nil])
([nil nil ((6617 . 6624)) ((#("hidden " 0 6 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6617) (undo-tree-id5537 . -3) (undo-tree-id5538 . -6) (undo-tree-id5539 . -7) (undo-tree-id5540 . -6) (undo-tree-id5541 . -6) (undo-tree-id5542 . -6) (undo-tree-id5543 . -6) (undo-tree-id5544 . -6) (undo-tree-id5545 . -6) (undo-tree-id5546 . -6) (undo-tree-id5547 . -6) (undo-tree-id5548 . -6) (undo-tree-id5549 . -6) (undo-tree-id5550 . -6) (undo-tree-id5551 . -6) (undo-tree-id5552 . -6) (undo-tree-id5553 . -6) (undo-tree-id5554 . -6) (undo-tree-id5555 . -6) (undo-tree-id5556 . -6) (undo-tree-id5557 . -6) (undo-tree-id5558 . -6) (undo-tree-id5559 . -6) (undo-tree-id5560 . -6) (undo-tree-id5561 . -6) (undo-tree-id5562 . -6) (undo-tree-id5563 . -6) (undo-tree-id5564 . -6) (undo-tree-id5565 . -6) (undo-tree-id5566 . -6) (undo-tree-id5567 . -6) (undo-tree-id5568 . -6) (undo-tree-id5569 . -6) (undo-tree-id5570 . -6) (undo-tree-id5571 . -6) (undo-tree-id5572 . -6) (undo-tree-id5573 . -6) (undo-tree-id5574 . -6) (undo-tree-id5575 . -6) (undo-tree-id5576 . -6) (undo-tree-id5577 . -6) (undo-tree-id5578 . -6) (undo-tree-id5579 . -6) (undo-tree-id5580 . -7) (undo-tree-id5581 . -7) (undo-tree-id5582 . -7)) (25451 42955 502780 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6654 . 6655) (nil rear-nonsticky t 6654 . 6655) (nil tag-attr t 6654 . 6655) (nil tag-attr-end 5 6654 . 6655) (nil tag-name "v-simple-table" 6654 . 6655) (nil tag-type start 6654 . 6655) (nil font-lock-face web-mode-html-attr-value-face 6654 . 6655) (nil rear-nonsticky t 6653 . 6654) (nil tag-attr t 6653 . 6654) (nil tag-name "v-simple-table" 6653 . 6654) (nil tag-type start 6653 . 6654) (nil font-lock-face web-mode-html-attr-value-face 6653 . 6654) (nil tag-attr t 6646 . 6653) (nil tag-name "v-simple-table" 6646 . 6653) (nil tag-type start 6646 . 6653) (nil font-lock-face web-mode-html-attr-value-face 6646 . 6653) (nil tag-attr t 6645 . 6646) (nil tag-name "v-simple-table" 6645 . 6646) (nil tag-type start 6645 . 6646) (nil font-lock-face web-mode-html-attr-value-face 6645 . 6646) (nil tag-attr t 6638 . 6645) (nil tag-name "v-simple-table" 6638 . 6645) (nil tag-type start 6638 . 6645) (nil font-lock-face web-mode-html-attr-value-face 6638 . 6645) (nil tag-attr t 6637 . 6638) (nil tag-name "v-simple-table" 6637 . 6638) (nil tag-type start 6637 . 6638) (nil font-lock-face web-mode-html-attr-value-face 6637 . 6638) (nil tag-attr t 6636 . 6637) (nil tag-name "v-simple-table" 6636 . 6637) (nil tag-type start 6636 . 6637) (nil font-lock-face web-mode-html-attr-value-face 6636 . 6637) (nil tag-attr t 6635 . 6636) (nil tag-name "v-simple-table" 6635 . 6636) (nil tag-type start 6635 . 6636) (nil font-lock-face web-mode-html-attr-equal-face 6635 . 6636) (nil tag-attr t 6634 . 6635) (nil tag-name "v-simple-table" 6634 . 6635) (nil tag-type start 6634 . 6635) (nil font-lock-face web-mode-html-attr-name-face 6634 . 6635) (nil tag-attr t 6633 . 6634) (nil tag-name "v-simple-table" 6633 . 6634) (nil tag-type start 6633 . 6634) (nil font-lock-face web-mode-html-attr-name-face 6633 . 6634) (nil tag-attr t 6632 . 6633) (nil tag-name "v-simple-table" 6632 . 6633) (nil tag-type start 6632 . 6633) (nil font-lock-face web-mode-html-attr-name-face 6632 . 6633) (nil tag-attr t 6631 . 6632) (nil tag-name "v-simple-table" 6631 . 6632) (nil tag-type start 6631 . 6632) (nil font-lock-face web-mode-html-attr-name-face 6631 . 6632) (nil tag-attr-beg 0 6630 . 6631) (nil tag-attr t 6630 . 6631) (nil tag-name "v-simple-table" 6630 . 6631) (nil tag-type start 6630 . 6631) (nil font-lock-face web-mode-html-attr-name-face 6630 . 6631) (6630 . 6655)) nil (25451 45669 364378 353000) 0 nil] [nil nil ((6406 . 6417) (t 25451 45616 719807 478000)) ((#("
          " 0 1 (tag-name "v-card" tag-type start) 1 11 (tag-name "v-card" tag-type start)) . 6406) (undo-tree-id6035 . -11) (undo-tree-id6036 . -11) (undo-tree-id6037 . -1) (undo-tree-id6038 . -11) (undo-tree-id6039 . -11) (undo-tree-id6040 . -11) (undo-tree-id6041 . -11) (undo-tree-id6042 . -11) (undo-tree-id6043 . -11) (undo-tree-id6044 . -11) (undo-tree-id6045 . -11) (undo-tree-id6046 . -11) (undo-tree-id6047 . -11) (undo-tree-id6048 . -11) (undo-tree-id6049 . -11) (undo-tree-id6050 . -1) (undo-tree-id6051 . -11) (undo-tree-id6052 . -11) (undo-tree-id6053 . -11) (undo-tree-id6054 . -11) (undo-tree-id6055 . -11) (undo-tree-id6056 . -11) (undo-tree-id6057 . -11) (undo-tree-id6058 . -11) (undo-tree-id6059 . -11) (undo-tree-id6060 . -11) (undo-tree-id6061 . -11) (undo-tree-id6062 . -11) (undo-tree-id6063 . -11) (undo-tree-id6064 . -11) (undo-tree-id6065 . -11) (undo-tree-id6066 . -11) (undo-tree-id6067 . -11) (undo-tree-id6068 . -11) (undo-tree-id6069 . -11) (undo-tree-id6070 . -11) (undo-tree-id6071 . -11) (undo-tree-id6072 . -11) (undo-tree-id6073 . -11)) (25451 45664 844918 242000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6623) (undo-tree-id5524 . -1) (undo-tree-id5526 . -1) (undo-tree-id5528 . -1) (undo-tree-id5530 . -1) (undo-tree-id5532 . -1) 6624) ((6623 . 6624) (t 25451 42931 97827 620000)) (25451 42931 56276 574000) 0 nil])
([nil nil ((6655 . 6656)) nil (25451 45669 364359 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6441 . 6442) (nil rear-nonsticky t 6441 . 6442) (nil tag-attr t 6441 . 6442) (nil tag-attr-end 5 6441 . 6442) (nil tag-name "v-card" 6441 . 6442) (nil tag-type start 6441 . 6442) (nil font-lock-face web-mode-html-attr-value-face 6441 . 6442) (nil rear-nonsticky t 6440 . 6441) (nil tag-attr t 6440 . 6441) (nil tag-name "v-card" 6440 . 6441) (nil tag-type start 6440 . 6441) (nil font-lock-face web-mode-html-attr-value-face 6440 . 6441) (nil tag-attr t 6433 . 6440) (nil tag-name "v-card" 6433 . 6440) (nil tag-type start 6433 . 6440) (nil font-lock-face web-mode-html-attr-value-face 6433 . 6440) (nil tag-attr t 6432 . 6433) (nil tag-name "v-card" 6432 . 6433) (nil tag-type start 6432 . 6433) (nil font-lock-face web-mode-html-attr-value-face 6432 . 6433) (nil tag-attr t 6425 . 6432) (nil tag-name "v-card" 6425 . 6432) (nil tag-type start 6425 . 6432) (nil font-lock-face web-mode-html-attr-value-face 6425 . 6432) (nil tag-attr t 6424 . 6425) (nil tag-name "v-card" 6424 . 6425) (nil tag-type start 6424 . 6425) (nil font-lock-face web-mode-html-attr-value-face 6424 . 6425) (nil tag-attr t 6423 . 6424) (nil tag-name "v-card" 6423 . 6424) (nil tag-type start 6423 . 6424) (nil font-lock-face web-mode-html-attr-value-face 6423 . 6424) (nil tag-attr t 6422 . 6423) (nil tag-name "v-card" 6422 . 6423) (nil tag-type start 6422 . 6423) (nil font-lock-face web-mode-html-attr-equal-face 6422 . 6423) (nil tag-attr t 6421 . 6422) (nil tag-name "v-card" 6421 . 6422) (nil tag-type start 6421 . 6422) (nil font-lock-face web-mode-html-attr-name-face 6421 . 6422) (nil tag-attr t 6420 . 6421) (nil tag-name "v-card" 6420 . 6421) (nil tag-type start 6420 . 6421) (nil font-lock-face web-mode-html-attr-name-face 6420 . 6421) (nil tag-attr t 6419 . 6420) (nil tag-name "v-card" 6419 . 6420) (nil tag-type start 6419 . 6420) (nil font-lock-face web-mode-html-attr-name-face 6419 . 6420) (nil tag-attr t 6418 . 6419) (nil tag-name "v-card" 6418 . 6419) (nil tag-type start 6418 . 6419) (nil font-lock-face web-mode-html-attr-name-face 6418 . 6419) (nil tag-attr-beg 0 6417 . 6418) (nil tag-attr t 6417 . 6418) (nil tag-name "v-card" 6417 . 6418) (nil tag-type start 6417 . 6418) (nil font-lock-face web-mode-html-attr-name-face 6417 . 6418) (6417 . 6442)) ((#("style=\"overflow: hidden;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 8 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 16 23 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (rear-nonsticky t tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6417) (undo-tree-id6022 . -25) (undo-tree-id6023 . -25) (undo-tree-id6024 . -25) (undo-tree-id6025 . -25) (undo-tree-id6026 . -25) (undo-tree-id6027 . -25) (undo-tree-id6028 . -25) (undo-tree-id6029 . -25) (undo-tree-id6030 . -25) (undo-tree-id6031 . -25) (undo-tree-id6032 . -25) (undo-tree-id6033 . -25) (undo-tree-id6034 . -25) (nil tag-name "v-card" 6417 . 6418) (nil tag-name "v-card" 6418 . 6419) (nil tag-name "v-card" 6419 . 6420) (nil tag-name "v-card" 6420 . 6421) (nil tag-name "v-card" 6421 . 6422) (nil tag-name "v-card" 6422 . 6423) (nil tag-name "v-card" 6423 . 6424) (nil tag-name "v-card" 6424 . 6425) (nil tag-name "v-card" 6425 . 6432) (nil tag-name "v-card" 6432 . 6433) (nil tag-name "v-card" 6433 . 6440) (nil tag-name "v-card" 6440 . 6441) (nil rear-nonsticky nil 6440 . 6441) (nil tag-name "v-card" 6441 . 6442) (nil rear-nonsticky nil 6441 . 6442) (nil rear-nonsticky t 6441 . 6442) (t 25451 45648 800292 766000)) (25451 45648 763431 48000) 0 nil])
nil
([nil nil ((6645 . 6647) (t 25451 45669 404604 760000)) nil (25451 45787 529031 518000) 0 nil])
nil
([nil nil ((6590 . 6592)) nil (25451 45787 529023 568000) 0 nil])
([nil nil ((#("style=\"overflow-y: hidden;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 26 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6632) (undo-tree-id6077 . -27) (undo-tree-id6078 . -27) (t 25451 45787 566398 120000)) nil (25451 46149 897098 32000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6631) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) 6632) nil (25451 46149 897090 393000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6590) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (#("y" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6591) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) 6592 (t 25451 46149 931929 997000)) nil (25451 46237 263810 22000) 0 nil])
([nil nil ((6598 . 6599) (6598 . 6599) (t 25451 46237 301268 820000)) nil (25451 46271 725264 726000) 0 nil])
([nil nil ((#("n" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (#("\\" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id6132 . -1) (#("\"" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id6133 . -1) 6600) nil (25451 46271 725262 532000) 0 nil])
([nil nil ((6597 . 6599)) nil (25451 46271 725255 231000) 0 nil])
([nil nil ((#("!" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6597) (undo-tree-id6128 . -1) (#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6598) (undo-tree-id6129 . -1) 6599) nil (25451 46271 725253 421000) 0 nil])
([nil nil ((6597 . 6600)) nil (25451 46271 725248 895000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6599) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) 6600) nil (25451 46271 725243 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6655 . 6656) (nil rear-nonsticky t 6655 . 6656) (nil tag-attr t 6655 . 6656) (nil tag-name "v-simple-table" 6655 . 6656) (nil tag-type start 6655 . 6656) (nil font-lock-face web-mode-html-attr-value-face 6655 . 6656) (nil tag-attr t 6647 . 6655) (nil tag-name "v-simple-table" 6647 . 6655) (nil tag-type start 6647 . 6655) (nil font-lock-face web-mode-html-attr-value-face 6647 . 6655) (nil tag-attr t 6646 . 6647) (nil tag-name "v-simple-table" 6646 . 6647) (nil tag-type start 6646 . 6647) (nil font-lock-face web-mode-html-attr-value-face 6646 . 6647) (nil tag-attr t 6639 . 6646) (nil tag-name "v-simple-table" 6639 . 6646) (nil tag-type start 6639 . 6646) (nil font-lock-face web-mode-html-attr-value-face 6639 . 6646) (nil tag-attr t 6638 . 6639) (nil tag-name "v-simple-table" 6638 . 6639) (nil tag-type start 6638 . 6639) (nil font-lock-face web-mode-html-attr-value-face 6638 . 6639) (nil tag-attr t 6637 . 6638) (nil tag-name "v-simple-table" 6637 . 6638) (nil tag-type start 6637 . 6638) (nil font-lock-face web-mode-html-attr-value-face 6637 . 6638) (nil tag-attr t 6636 . 6637) (nil tag-name "v-simple-table" 6636 . 6637) (nil tag-type start 6636 . 6637) (nil font-lock-face web-mode-html-attr-equal-face 6636 . 6637) (nil tag-attr t 6635 . 6636) (nil tag-name "v-simple-table" 6635 . 6636) (nil tag-type start 6635 . 6636) (nil font-lock-face web-mode-html-attr-name-face 6635 . 6636) (nil tag-attr t 6634 . 6635) (nil tag-name "v-simple-table" 6634 . 6635) (nil tag-type start 6634 . 6635) (nil font-lock-face web-mode-html-attr-name-face 6634 . 6635) (nil tag-attr t 6633 . 6634) (nil tag-name "v-simple-table" 6633 . 6634) (nil tag-type start 6633 . 6634) (nil font-lock-face web-mode-html-attr-name-face 6633 . 6634) (nil tag-attr t 6632 . 6633) (nil tag-name "v-simple-table" 6632 . 6633) (nil tag-type start 6632 . 6633) (nil font-lock-face web-mode-html-attr-name-face 6632 . 6633) (nil tag-attr-beg 0 6631 . 6632) (nil tag-attr t 6631 . 6632) (nil tag-name "v-simple-table" 6631 . 6632) (nil tag-type start 6631 . 6632) (nil font-lock-face web-mode-html-attr-name-face 6631 . 6632) (6631 . 6656) (t 25451 46271 761797 269000)) nil (25451 46283 335589 127000) 0 nil])
([nil nil ((6656 . 6657)) nil (25451 46283 335569 888000) 0 nil])
([nil nil ((6656 . 6657) (t 25451 46283 373975 391000)) nil (25451 46286 970144 634000) 0 nil])
([nil nil ((27692 . 27694) (#("  " 0 2 (part-side css)) . 27691) (undo-tree-id6162 . -2) (27691 . 27694) (#("  " 0 2 (part-side css face whitespace-trailing)) . 27690) (27690 . 27692) (27690 . 27691) (t 25451 46287 10031 168000)) nil (25451 46416 940874 892000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27735 . 27736) (nil part-side css 27714 . 27736) (nil face web-mode-css-pseudo-class-face 27714 . 27736) (nil part-side css 27713 . 27714) (nil face web-mode-css-pseudo-class-face 27713 . 27714) (nil part-side css 27700 . 27713) (nil face web-mode-css-pseudo-class-face 27700 . 27713) (nil part-side css 27692 . 27700) (nil face web-mode-css-pseudo-class-face 27692 . 27700) (nil part-side css 27691 . 27692) (27691 . 27736)) nil (25451 46416 940870 628000) 0 nil])
([nil nil ((27691 . 27693) 27736) nil (25451 46416 940866 586000) 0 nil])
([nil nil ((27739 . 27741) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -27739) (27738 . 27740)) nil (25451 46416 940865 17000) 0 nil])
([nil nil ((27742 . 27744) (#("    " 0 4 (part-side css face whitespace-trailing)) . 27741) (undo-tree-id6160 . -2) (undo-tree-id6161 . 4) (27743 . 27745) (27740 . 27744)) nil (25451 46416 940862 883000) 0 nil])
([nil nil ((#("::v-deep " 0 1 (part-side css) 1 9 (part-side css face web-mode-css-pseudo-class-face)) . 27693) (undo-tree-id6158 . -9) (undo-tree-id6159 . -9)) nil (25451 46416 940858 848000) 0 nil])
([nil nil ((27732 . 27736)) nil (25451 46416 940855 680000) 0 nil])
([nil nil ((27736 . 27745)) nil (25451 46416 940854 575000) 0 nil])
([nil nil ((#("-" 0 1 (part-side css)) . -27744) (undo-tree-id6157 . -1) 27745) nil (25451 46416 940853 276000) 0 nil])
([nil nil ((27744 . 27753)) nil (25451 46416 940850 988000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27752) (undo-tree-id6156 . -1) 27753) nil (25451 46416 940849 626000) 0 nil])
([nil nil ((27752 . 27754)) nil (25451 46416 940846 990000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27753) (undo-tree-id6155 . -1) 27754) nil (25451 46416 940845 546000) 0 nil])
([nil nil ((27752 . 27754)) nil (25451 46416 940842 881000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -27753) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) 27754) nil (25451 46416 940839 630000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -27759) 27753) nil (25451 46878 119772 325000) 0 nil])
([nil nil ((27753 . 27754)) nil (25451 46883 298086 443000) 0 nil] [nil nil ((27744 . 27746) (t 25451 46416 980026 200000)) ((#("-x" 0 2 (part-side css face web-mode-css-property-name-face)) . 27744)) (25451 46877 915534 816000) 0 nil])
([nil nil ((#("!" 0 1 (part-side css)) . -27752) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (#(" " 0 1 (part-side css)) . -27753) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) 27754) nil (25451 46883 298083 190000) 0 nil])
([nil nil ((#("." 0 1 (part-side css face web-mode-css-selector-class-face)) . -27693) (undo-tree-id6185 . -1) (#("v" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27694) (undo-tree-id6186 . -1) (#("-" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27695) (undo-tree-id6187 . -1) (#("d" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27696) (undo-tree-id6188 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27697) (undo-tree-id6189 . -1) (#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27698) (undo-tree-id6190 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27699) (undo-tree-id6191 . -1) (#("-" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27700) (undo-tree-id6192 . -1) (#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27701) (undo-tree-id6193 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27702) (undo-tree-id6194 . -1) (#("b" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27703) (undo-tree-id6195 . -1) (#("l" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27704) (undo-tree-id6196 . -1) (#("e" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27705) (undo-tree-id6197 . -1) (#(" " 0 1 (part-side css)) . -27706) (undo-tree-id6198 . -1) 27707 (t 25451 46473 468893 983000)) ((27693 . 27707)) (25451 46877 723807 744000) 0 nil])
([nil nil ((27752 . 27753)) nil (25451 46883 298052 387000) 0 nil])
([nil nil ((#("!" 0 1 (part-side css)) . -27740) (undo-tree-id6163 . -1) (undo-tree-id6165 . -1) (undo-tree-id6167 . -1) (undo-tree-id6169 . -1) (undo-tree-id6171 . -1) (undo-tree-id6173 . -1) (undo-tree-id6175 . -1) (undo-tree-id6177 . -1) (undo-tree-id6179 . -1) (undo-tree-id6181 . -1) (undo-tree-id6183 . -1) 27741) ((27740 . 27741)) (25451 46877 519940 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27762 . 27763) (nil rear-nonsticky t 27762 . 27763) (nil part-side css 27762 . 27763) (nil face web-mode-css-priority-face 27762 . 27763) (nil part-side css 27753 . 27762) (nil face web-mode-css-priority-face 27753 . 27762) (27753 . 27763)) nil (25451 46883 298044 908000) 0 nil])
([nil nil ((27740 . 27741)) ((#(" " 0 1 (part-side css)) . 27740) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1)) (25451 46877 229042 603000) 0 nil])
([nil nil ((27744 . 27746) (t 25451 46883 339179 140000)) nil (25451 46942 819430 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27750 . 27751) (nil part-side css 27741 . 27751) (nil face web-mode-css-priority-face 27741 . 27751) (27741 . 27751)) ((#("!important" 0 9 (part-side css face web-mode-css-priority-face) 9 10 (rear-nonsticky nil part-side css face web-mode-css-priority-face)) . 27741) (undo-tree-id6199 . -10) (nil rear-nonsticky t 27750 . 27751) (t 25451 46860 614838 683000)) (25451 46860 578638 803000) 0 nil])
([nil nil ((6590 . 6592) (t 25451 46942 860072 658000)) nil (25451 47107 416232 147000) 0 nil])
nil
([nil nil ((#("!" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6600)) nil (25451 47107 416229 995000) 0 nil])
([nil nil ((6600 . 6601)) nil (25451 47107 416227 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6610 . 6611) (nil tag-attr t 6601 . 6611) (nil tag-name "v-row" 6601 . 6611) (nil tag-type start 6601 . 6611) (nil font-lock-face web-mode-html-attr-value-face 6601 . 6611) (6601 . 6611)) nil (25451 47180 637287 212000) 0 nil])
([nil nil ((27 . 36) (t 25451 47107 454554 954000)) nil (25451 47184 116871 800000) 0 nil] [nil nil ((nil rear-nonsticky nil 56 . 57) (nil tag-attr t 48 . 57) (nil tag-name "v-container" 48 . 57) (nil tag-type start 48 . 57) (nil font-lock-face web-mode-html-attr-name-face 48 . 57) (nil tag-attr-beg 0 47 . 48) (nil tag-attr t 47 . 48) (nil tag-name "v-container" 47 . 48) (nil tag-type start 47 . 48) (nil font-lock-face web-mode-html-attr-name-face 47 . 48) (nil tag-name "v-container" 45 . 47) (nil tag-type start 45 . 47) (nil tag-attr t 44 . 45) (nil tag-attr-end 0 44 . 45) (nil tag-name "v-container" 44 . 45) (nil tag-type start 44 . 45) (nil font-lock-face web-mode-html-attr-name-face 44 . 45) (nil tag-attr t 40 . 44) (nil tag-name "v-container" 40 . 44) (nil tag-type start 40 . 44) (nil font-lock-face web-mode-html-attr-name-face 40 . 44) (nil tag-attr-beg 0 39 . 40) (nil tag-attr t 39 . 40) (nil tag-name "v-container" 39 . 40) (nil tag-type start 39 . 40) (nil font-lock-face web-mode-html-attr-name-face 39 . 40) (nil tag-name "v-container" 38 . 39) (nil tag-type start 38 . 39) (nil tag-attr t 37 . 38) (nil tag-attr-end 0 37 . 38) (nil tag-name "v-container" 37 . 38) (nil tag-type start 37 . 38) (nil font-lock-face web-mode-html-attr-name-face 37 . 38) (nil tag-attr t 28 . 37) (nil tag-name "v-container" 28 . 37) (nil tag-type start 28 . 37) (nil font-lock-face web-mode-html-attr-name-face 28 . 37) (nil tag-attr-beg 0 27 . 28) (nil tag-attr t 27 . 28) (nil tag-name "v-container" 27 . 28) (nil tag-type start 27 . 28) (nil font-lock-face web-mode-html-attr-name-face 27 . 28) (27 . 57) (t 25451 47107 454554 954000)) ((#("overflow-y: hidden !important;" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 10 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 10 11 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 11 12 (tag-name "v-container" tag-type start) 12 13 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 13 17 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 18 20 (tag-name "v-container" tag-type start) 20 21 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 21 29 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (rear-nonsticky nil tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face)) . 27) (undo-tree-id6254 . -30) (undo-tree-id6255 . -30) (undo-tree-id6256 . -30) (undo-tree-id6257 . -30) (undo-tree-id6258 . -30) (undo-tree-id6259 . -30) (undo-tree-id6260 . -30) (undo-tree-id6261 . -30) (undo-tree-id6262 . -30) (undo-tree-id6263 . -30) (undo-tree-id6264 . -30) (undo-tree-id6265 . -30) (undo-tree-id6266 . -30) (undo-tree-id6267 . -30) (nil tag-name "v-container" 27 . 28) (nil tag-name "v-container" 28 . 37) (nil tag-name "v-container" 37 . 38) (nil tag-name "v-container" 38 . 39) (nil tag-name "v-container" 39 . 40) (nil tag-name "v-container" 40 . 44) (nil tag-name "v-container" 44 . 45) (nil tag-name "v-container" 45 . 47) (nil tag-name "v-container" 47 . 48) (nil tag-name "v-container" 56 . 57) (nil tag-name "v-container" 48 . 56) (nil rear-nonsticky t 56 . 57)) (25451 47180 257339 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 63 . 64) (nil tag-attr t 34 . 64) (nil tag-name "v-container" 34 . 64) (nil tag-type start 34 . 64) (nil font-lock-face web-mode-html-attr-value-face 34 . 64) (34 . 64)) nil (25451 47184 116864 258000) 0 nil])
([nil nil ((57 . 58)) ((#(" " 0 1 (tag-name "v-container" tag-type start)) . 57) (undo-tree-id6253 . -1)) (25451 47180 256312 895000) 0 nil])
([nil nil ((#("style=\"overflow-y: hidden !important;" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 7 36 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (rear-nonsticky t tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id6273 . -37) (undo-tree-id6274 . -7) (undo-tree-id6275 . -37) (t 25451 47184 155716 420000)) nil (25451 47288 825251 916000) 0 nil])
nil
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . 27) (#("\"" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face)) . 27)) nil (25451 47288 825246 130000) 0 nil])
([nil nil ((#("style=\"overflow: hidden!;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 24 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6643) (undo-tree-id6271 . -26) (undo-tree-id6272 . -26)) nil (25451 47288 825243 580000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-simple-table" tag-type start)) . -6642) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) 6643) nil (25451 47288 825235 108000) 0 nil])
([nil nil ((#("
                      style=\"scroll-margin-right: 400px;\"" 0 1 (tag-name "td" tag-type start) 1 23 (tag-name "td" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 24 26 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 30 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 30 56 (tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (rear-nonsticky t tag-attr t tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-attr-end 5 tag-name "td" tag-type start font-lock-face web-mode-html-attr-value-face)) . 8141) (undo-tree-id6276 . -58) (undo-tree-id6277 . -53) (undo-tree-id6278 . -1) (undo-tree-id6279 . -58) (t 25451 47288 861305 804000)) nil (25451 50609 280909 865000) 0 nil])
([nil nil ((6647 . 6651) (6643 . 6649) (t 25451 50609 320678 586000)) nil (25451 51358 754545 90000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6649) (undo-tree-id6285 . -1) (#("a" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6650) (undo-tree-id6286 . -1) 6651) nil (25451 51358 754543 221000) 0 nil])
([nil nil ((6649 . 6650)) nil (25451 51358 754539 121000) 0 nil])
([nil nil ((#("t" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6649) (undo-tree-id6284 . -1) 6650) nil (25451 51358 754537 862000) 0 nil])
([nil nil ((6649 . 6650)) nil (25451 51358 754535 547000) 0 nil])
([nil nil ((#("a" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6648) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (#("a" 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6649) (undo-tree-id6283 . -1) 6650) nil (25451 51358 754533 664000) 0 nil])
([nil nil ((6648 . 6654)) nil (25451 51358 754528 242000) 0 nil])
([nil nil ((6654 . 6655)) nil (25451 51358 754526 767000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6654) (undo-tree-id6280 . -1) 6655) nil (25451 51358 754521 127000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6590) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (#("y" 0 1 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6591) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) 6592 (t 25451 51358 792513 92000)) nil (25451 51595 568183 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64 . 65) (nil rear-nonsticky t 64 . 65) (nil tag-attr t 64 . 65) (nil tag-attr-end 5 64 . 65) (nil tag-name "v-container" 64 . 65) (nil tag-type start 64 . 65) (nil font-lock-face web-mode-html-attr-value-face 64 . 65) (nil rear-nonsticky t 63 . 64) (nil tag-attr t 63 . 64) (nil tag-name "v-container" 63 . 64) (nil tag-type start 63 . 64) (nil font-lock-face web-mode-html-attr-value-face 63 . 64) (nil rear-nonsticky t 62 . 63) (nil tag-attr t 62 . 63) (nil tag-name "v-container" 62 . 63) (nil tag-type start 62 . 63) (nil font-lock-face web-mode-html-attr-value-face 62 . 63) (nil tag-attr t 53 . 62) (nil tag-name "v-container" 53 . 62) (nil tag-type start 53 . 62) (nil font-lock-face web-mode-html-attr-value-face 53 . 62) (nil tag-attr t 45 . 53) (nil tag-name "v-container" 45 . 53) (nil tag-type start 45 . 53) (nil font-lock-face web-mode-html-attr-value-face 45 . 53) (nil tag-attr t 44 . 45) (nil tag-name "v-container" 44 . 45) (nil tag-type start 44 . 45) (nil font-lock-face web-mode-html-attr-value-face 44 . 45) (nil tag-attr t 35 . 44) (nil tag-name "v-container" 35 . 44) (nil tag-type start 35 . 44) (nil font-lock-face web-mode-html-attr-value-face 35 . 44) (nil tag-attr t 34 . 35) (nil tag-name "v-container" 34 . 35) (nil tag-type start 34 . 35) (nil font-lock-face web-mode-html-attr-value-face 34 . 35) (nil tag-attr t 33 . 34) (nil tag-name "v-container" 33 . 34) (nil tag-type start 33 . 34) (nil font-lock-face web-mode-html-attr-value-face 33 . 34) (nil tag-attr t 32 . 33) (nil tag-name "v-container" 32 . 33) (nil tag-type start 32 . 33) (nil font-lock-face web-mode-html-attr-equal-face 32 . 33) (nil tag-attr t 31 . 32) (nil tag-name "v-container" 31 . 32) (nil tag-type start 31 . 32) (nil font-lock-face web-mode-html-attr-name-face 31 . 32) (nil tag-attr t 30 . 31) (nil tag-name "v-container" 30 . 31) (nil tag-type start 30 . 31) (nil font-lock-face web-mode-html-attr-name-face 30 . 31) (nil tag-attr t 29 . 30) (nil tag-name "v-container" 29 . 30) (nil tag-type start 29 . 30) (nil font-lock-face web-mode-html-attr-name-face 29 . 30) (nil tag-attr t 28 . 29) (nil tag-name "v-container" 28 . 29) (nil tag-type start 28 . 29) (nil font-lock-face web-mode-html-attr-name-face 28 . 29) (nil tag-attr-beg 0 27 . 28) (nil tag-attr t 27 . 28) (nil tag-name "v-container" 27 . 28) (nil tag-type start 27 . 28) (nil font-lock-face web-mode-html-attr-name-face 27 . 28) (27 . 65) (t 25451 51595 608253 654000)) nil (25451 51611 962565 923000) 0 nil])
([nil nil ((65 . 66)) nil (25451 51611 962550 909000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -42) (undo-tree-id6363 . -1) (#("y" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -43) (undo-tree-id6364 . -1) (#(":" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -44) (undo-tree-id6365 . -1) (#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -45) (undo-tree-id6366 . -1) (#("h" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -46) (undo-tree-id6367 . -1) (#("i" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -47) (undo-tree-id6368 . -1) (#("d" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -48) (undo-tree-id6369 . -1) (#("d" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -49) (undo-tree-id6370 . -1) (#("e" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -50) (undo-tree-id6371 . -1) (#("n" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -51) (undo-tree-id6372 . -1) (#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -52) (undo-tree-id6373 . -1) (#("!" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -53) (undo-tree-id6374 . -1) (#("i" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -54) (undo-tree-id6375 . -1) (#("m" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -55) (undo-tree-id6376 . -1) (#("p" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -56) (undo-tree-id6377 . -1) (#("o" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -57) (undo-tree-id6378 . -1) (#("r" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -58) (undo-tree-id6379 . -1) (#("t" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -59) (undo-tree-id6380 . -1) (#("a" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -60) (undo-tree-id6381 . -1) (#("n" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -61) (undo-tree-id6382 . -1) (#("t" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -62) (undo-tree-id6383 . -1) 63) nil (25451 51611 962545 931000) 0 nil])
([nil nil ((42 . 51)) nil (25451 51611 962517 27000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -50) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) 51) nil (25451 51925 396595 887000) 0 nil])
([nil nil ((#("style=\"overflow: scroll;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 24 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id6474 . -25) (undo-tree-id6475 . -21) (undo-tree-id6476 . -23) (undo-tree-id6477 . -12) (undo-tree-id6478 . -12) (undo-tree-id6479 . -12) (undo-tree-id6480 . -8) (undo-tree-id6481 . -8) (undo-tree-id6482 . -8) (undo-tree-id6483 . -7) (undo-tree-id6484 . -7) (undo-tree-id6485 . -7) (undo-tree-id6486 . -7) (undo-tree-id6487 . -7) (undo-tree-id6488 . -7) (undo-tree-id6489 . -7) (undo-tree-id6490 . -6) (undo-tree-id6491 . -6) (undo-tree-id6492 . -6) (undo-tree-id6493 . -5) (undo-tree-id6494 . -5) (undo-tree-id6495 . -5) (undo-tree-id6496 . -4) (undo-tree-id6497 . -4) (undo-tree-id6498 . -4) (undo-tree-id6499 . -3) (undo-tree-id6500 . -3) (undo-tree-id6501 . -3) (undo-tree-id6502 . -2) (undo-tree-id6503 . -2) (undo-tree-id6504 . -2) (undo-tree-id6505 . -2) (undo-tree-id6506 . -2) (undo-tree-id6507 . -2) (undo-tree-id6508 . -2) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -25) (undo-tree-id6513 . -25) (undo-tree-id6514 . -25) (t 25451 51612 511 623000)) nil (25451 51928 704957 464000) 0 nil] [nil nil ((#("style=\"overflow: scroll;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 24 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id6393 . -25) (undo-tree-id6394 . -21) (undo-tree-id6395 . -23) (undo-tree-id6396 . -25) (t 25451 51612 511 623000)) ((27 . 52)) (25451 51924 513919 946000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . -26) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) 27) nil (25451 51928 704905 469000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . -26) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) 27) ((26 . 27)) (25451 51924 512803 799000) 0 nil])
([nil nil ((34 . 49) (27 . 36) (t 25451 51928 745479 386000)) nil (25451 52076 258198 985000) 0 nil])
nil
([nil nil ((49 . 53)) nil (25451 52076 258195 710000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -52) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) 53) nil (25451 52076 258190 687000) 0 nil])
([nil nil ((52 . 54)) nil (25451 52076 258156 344000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -53) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) 54) nil (25451 52076 258146 328000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -42) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (#("y" 0 1 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . -43) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) 44 (t 25451 52076 303785 576000)) nil (25451 52105 456331 475000) 0 nil])
([nil nil ((#("style=\"overflow: hidden;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 24 (tag-attr t tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face) 24 25 (tag-attr t tag-attr-end 5 tag-name "v-container" tag-type start font-lock-face web-mode-html-attr-value-face)) . 27) (undo-tree-id6650 . -25) (undo-tree-id6651 . -20) (undo-tree-id6652 . -24) (undo-tree-id6653 . -15) (undo-tree-id6654 . -25) (undo-tree-id6655 . -25) (t 25451 52105 496241 389000)) nil (25451 52111 696082 628000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "v-container" tag-type start)) . -26) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) 27) nil (25451 52111 696067 951000) 0 nil])
([nil nil (("Currently viewed subset" . 4408) (undo-tree-id28 . -23) (undo-tree-id29 . -23) (t 25451 52111 736338 806000)) nil (25452 53297 270041 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4441 . 4442) (nil block-side t 4441 . 4442) (nil block-end t 4441 . 4442) (nil block-token delimiter-end 4441 . 4442) (nil face (rainbow-delimiters-depth-1-face) 4441 . 4442) (nil block-side t 4440 . 4441) (nil block-token delimiter-end 4440 . 4441) (nil face (rainbow-delimiters-depth-2-face) 4440 . 4441) (nil block-side t 4439 . 4440) (nil face (rainbow-delimiters-depth-3-face) 4439 . 4440) (nil block-side t 4438 . 4439) (nil block-side t 4437 . 4438) (nil block-side t 4436 . 4437) (nil block-side t 4435 . 4436) (nil block-side t 4434 . 4435) (nil block-side t 4433 . 4434) (nil block-side t 4432 . 4433) (nil block-side t 4431 . 4432) (nil block-side t 4430 . 4431) (nil block-side t 4429 . 4430) (nil block-side t 4428 . 4429) (nil block-side t 4427 . 4428) (nil block-side t 4426 . 4427) (nil block-side t 4425 . 4426) (nil block-side t 4424 . 4425) (nil block-side t 4423 . 4424) (nil block-side t 4422 . 4423) (nil block-side t 4421 . 4422) (nil block-side t 4420 . 4421) (nil block-side t 4419 . 4420) (nil block-side t 4418 . 4419) (nil block-side t 4417 . 4418) (nil block-side t 4416 . 4417) (nil block-side t 4415 . 4416) (nil block-side t 4414 . 4415) (nil block-side t 4413 . 4414) (nil block-side t 4412 . 4413) (nil face (rainbow-delimiters-depth-3-face) 4412 . 4413) (nil block-side t 4411 . 4412) (nil block-side t 4410 . 4411) (nil block-side t 4409 . 4410) (nil block-token delimiter-beg 4409 . 4410) (nil face (rainbow-delimiters-depth-2-face) 4409 . 4410) (nil block-beg 0 4408 . 4409) (nil block-controls 0 4408 . 4409) (nil block-side t 4408 . 4409) (nil block-token delimiter-beg 4408 . 4409) (nil face (rainbow-delimiters-depth-1-face) 4408 . 4409) (4408 . 4442)) nil (25452 53297 270035 376000) 0 nil])
([nil nil ((#("dataDiff" 0 8 (block-side t)) . 4430) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8)) nil (25452 53297 270023 26000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4442 . 4443) (nil block-side t 4430 . 4443) (4430 . 4443)) nil (25452 53297 270017 920000) 0 nil])
([nil nil (("Cursor value:" . 4893) (undo-tree-id23 . -13) (undo-tree-id24 . -13)) nil (25452 53297 270016 219000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4931 . 4932) (nil rear-nonsticky t 4931 . 4932) (nil block-side t 4931 . 4932) (nil block-end t 4931 . 4932) (nil block-token delimiter-end 4931 . 4932) (nil face (rainbow-delimiters-depth-1-face) 4931 . 4932) (nil block-side t 4930 . 4931) (nil block-token delimiter-end 4930 . 4931) (nil face (rainbow-delimiters-depth-2-face) 4930 . 4931) (nil block-side t 4929 . 4930) (nil face (rainbow-delimiters-depth-3-face) 4929 . 4930) (nil block-side t 4928 . 4929) (nil rear-nonsticky t 4927 . 4928) (nil block-side t 4927 . 4928) (nil block-side t 4915 . 4927) (nil block-side t 4898 . 4915) (nil block-side t 4897 . 4898) (nil face (rainbow-delimiters-depth-3-face) 4897 . 4898) (nil block-side t 4895 . 4897) (nil block-side t 4894 . 4895) (nil block-token delimiter-beg 4894 . 4895) (nil face (rainbow-delimiters-depth-2-face) 4894 . 4895) (nil block-beg 0 4893 . 4894) (nil block-controls 0 4893 . 4894) (nil block-side t 4893 . 4894) (nil block-token delimiter-beg 4893 . 4894) (nil face (rainbow-delimiters-depth-1-face) 4893 . 4894) (4893 . 4932)) nil (25452 53297 270011 449000) 0 nil])
([nil nil ((#("currentSubset" 0 13 (block-side t)) . 4915) (undo-tree-id20 . -13) (undo-tree-id21 . -13) (undo-tree-id22 . -13)) nil (25452 53297 270003 188000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4925 . 4926) (nil block-side t 4915 . 4926) (4915 . 4926)) nil (25452 53297 269996 699000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3395 . 3396) (nil block-side t 3395 . 3396) (nil block-end t 3395 . 3396) (nil block-token delimiter-end 3395 . 3396) (nil face (rainbow-delimiters-depth-1-face) 3395 . 3396) (nil block-side t 3394 . 3395) (nil block-token delimiter-end 3394 . 3395) (nil face (rainbow-delimiters-depth-2-face) 3394 . 3395) (nil block-side t 3393 . 3394) (nil face (rainbow-delimiters-depth-3-face) 3393 . 3394) (nil block-side t 3392 . 3393) (nil block-side t 3391 . 3392) (nil block-side t 3390 . 3391) (nil block-side t 3389 . 3390) (nil block-side t 3388 . 3389) (nil block-side t 3387 . 3388) (nil block-side t 3386 . 3387) (nil block-side t 3385 . 3386) (nil block-side t 3384 . 3385) (nil block-side t 3383 . 3384) (nil block-side t 3382 . 3383) (nil block-side t 3381 . 3382) (nil block-side t 3380 . 3381) (nil block-side t 3379 . 3380) (nil block-side t 3378 . 3379) (nil block-side t 3377 . 3378) (nil block-side t 3376 . 3377) (nil block-side t 3375 . 3376) (nil block-side t 3374 . 3375) (nil block-side t 3373 . 3374) (nil block-side t 3372 . 3373) (nil block-side t 3371 . 3372) (nil block-side t 3370 . 3371) (nil block-side t 3369 . 3370) (nil block-side t 3368 . 3369) (nil block-side t 3367 . 3368) (nil block-side t 3366 . 3367) (nil face (rainbow-delimiters-depth-3-face) 3366 . 3367) (nil block-side t 3365 . 3366) (nil block-side t 3364 . 3365) (nil block-side t 3363 . 3364) (nil block-token delimiter-beg 3363 . 3364) (nil face (rainbow-delimiters-depth-2-face) 3363 . 3364) (nil block-beg 0 3362 . 3363) (nil block-controls 0 3362 . 3363) (nil block-side t 3362 . 3363) (nil block-token delimiter-beg 3362 . 3363) (nil face (rainbow-delimiters-depth-1-face) 3362 . 3363) (3362 . 3396)) nil (25452 53297 269992 329000) 0 nil])
([nil nil ((3396 . 3397)) nil (25452 53297 269980 351000) 0 nil])
([nil nil ((#("dataDiff" 0 8 (block-side t)) . 3384) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8)) nil (25452 53297 269978 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3392 . 3393) (nil block-side t 3384 . 3393) (3384 . 3393)) nil (25452 53297 269974 49000) 0 nil])
([nil nil (("Total number of rows for given date period" . 3398) (undo-tree-id13 . -42) (undo-tree-id14 . -14) (undo-tree-id15 . -42) (undo-tree-id16 . -42)) nil (25452 53297 269971 908000) 0 nil])
([nil nil ((" " . -3397) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 3398) nil (25452 53297 269965 918000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3062 . 3063) (nil rear-nonsticky t 3062 . 3063) (nil block-side t 3062 . 3063) (nil block-end t 3062 . 3063) (nil block-token delimiter-end 3062 . 3063) (nil face (rainbow-delimiters-depth-1-face) 3062 . 3063) (nil block-side t 3061 . 3062) (nil block-token delimiter-end 3061 . 3062) (nil face (rainbow-delimiters-depth-2-face) 3061 . 3062) (nil block-side t 3060 . 3061) (nil face (rainbow-delimiters-depth-3-face) 3060 . 3061) (nil block-side t 3059 . 3060) (nil rear-nonsticky t 3058 . 3059) (nil block-side t 3058 . 3059) (nil block-side t 3050 . 3058) (nil block-side t 3033 . 3050) (nil block-side t 3032 . 3033) (nil face (rainbow-delimiters-depth-3-face) 3032 . 3033) (nil block-side t 3030 . 3032) (nil block-side t 3029 . 3030) (nil block-token delimiter-beg 3029 . 3030) (nil face (rainbow-delimiters-depth-2-face) 3029 . 3030) (nil block-beg 0 3028 . 3029) (nil block-controls 0 3028 . 3029) (nil block-side t 3028 . 3029) (nil block-token delimiter-beg 3028 . 3029) (nil face (rainbow-delimiters-depth-1-face) 3028 . 3029) (3028 . 3063)) nil (25452 53297 269957 342000) 0 nil])
([nil nil ((3063 . 3064)) nil (25452 53297 269949 535000) 0 nil])
([nil nil ((#("mDataSize" 0 9 (block-side t)) . 3050) (undo-tree-id5 . -9) (undo-tree-id6 . -9) (undo-tree-id7 . -9)) nil (25452 53297 269947 879000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3051 . 3052) (nil block-side t 3050 . 3052) (3050 . 3052)) nil (25452 53297 269942 254000) 0 nil])
([nil nil (("Row / Column" . 3057) (undo-tree-id3 . -12) (undo-tree-id4 . -12)) nil (25452 53297 269939 469000) 0 nil])
([nil nil ((" " . -3056) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 3057) nil (25452 53297 269930 341000) 0 nil])
([nil nil ((6814 . 6823) (t 25452 53297 315014 662000)) nil (25479 23267 567620 585000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6815) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6816) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6817) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6818) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("e" 0 1 (tag-attr t tag-attr-end 0 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face)) . -6819) (undo-tree-id17 . -1) (#("=" 0 1 (tag-attr t tag-attr-end 5 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-equal-face)) . -6820) (undo-tree-id18 . -1) (#("\"" 0 1 (tag-name "tr" tag-type start)) . -6821) (undo-tree-id19 . -1) (#("\"" 0 1 (tag-attr t tag-attr-end 5 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6822)) nil (25479 23267 567617 484000) 0 nil])
([nil nil ((27679 . 27681) (#("  " 0 2 (part-side css)) . 27678) (undo-tree-id8 . -2) (27677 . 27681)) nil (25479 23267 567602 576000) 0 nil])
([nil nil ((27681 . 27688)) nil (25479 23267 567600 36000) 0 nil])
([nil nil ((#("H" 0 1 (part-side css face web-mode-css-selector-class-face)) . -27687) (undo-tree-id7 . -1) 27688) nil (25479 23267 567598 683000) 0 nil])
([nil nil ((27694 . 27696) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -27694) (27687 . 27695)) nil (25479 23267 567595 922000) 0 nil])
([nil nil ((27697 . 27699) (#("    " 0 4 (part-side css face whitespace-trailing)) . 27696) (undo-tree-id5 . -2) (undo-tree-id6 . 4) (27698 . 27700) (27695 . 27699)) nil (25479 23267 567593 742000) 0 nil])
([nil nil ((27700 . 27701)) nil (25479 23267 567589 959000) 0 nil])
([nil nil ((6822 . 6833) (6815 . 6823)) nil (25479 23267 567588 878000) 0 nil])
([nil nil ((27715 . 27719)) nil (25479 23267 567587 644000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -27723) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 27724) nil (25479 23267 567585 857000) 0 nil])
([nil nil ((27718 . 27728)) nil (25479 23267 567581 76000) 0 nil])
([nil nil ((27718 . 27734) (#("background" 0 10 (part-side css)) . -27718) (undo-tree-id0 . -10) (undo-tree-id1 . -10) 27728) nil (25479 23267 567579 239000) 0 nil])
([nil nil ((27734 . 27736)) nil (25479 23267 567560 838000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27742 . 27743) (nil part-side css 27736 . 27743) (nil face web-mode-css-color-face 27736 . 27743) (27736 . 27743)) nil (25479 23267 567559 580000) 0 nil])
([nil nil ((27743 . 27744)) nil (25479 23267 567557 63000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css face whitespace-trailing)) . -27744)) nil (25479 23267 567549 491000) 0 nil])
([nil nil ((#("#BDBDBD" 0 6 (part-side css face web-mode-css-color-face) 6 7 (rear-nonsticky t part-side css face web-mode-css-color-face)) . 27736) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (t 25479 23267 608594 340000)) nil (25479 23294 691205 184000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27742 . 27743) (nil part-side css 27736 . 27743) (nil face web-mode-css-color-face 27736 . 27743) (27736 . 27743)) nil (25479 23294 691184 54000) 0 nil])
([nil nil ((27750 . 27752) (#("  " 0 2 (part-side css)) . 27749) (undo-tree-id30 . -2) (27748 . 27752) (t 25479 23294 732988 936000)) nil (25479 23345 136257 989000) 0 nil])
([nil nil ((27768 . 27770) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -27768) (27752 . 27769)) nil (25479 23345 136254 873000) 0 nil])
([nil nil ((27771 . 27773) (#("    " 0 4 (part-side css face whitespace-trailing)) . 27770) (undo-tree-id28 . -2) (undo-tree-id29 . 4) (27772 . 27774) (27769 . 27773)) nil (25479 23345 136252 965000) 0 nil])
([nil nil ((27770 . 27774)) nil (25479 23345 136248 967000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27830 . 27831) (nil part-side css 27830 . 27831) (nil part-side css 27820 . 27830) (nil face web-mode-css-priority-face 27820 . 27830) (nil part-side css 27815 . 27820) (nil part-side css 27807 . 27815) (nil face web-mode-css-property-name-face 27807 . 27815) (nil part-side css 27794 . 27807) (nil part-side css 27787 . 27794) (nil face web-mode-css-color-face 27787 . 27794) (nil part-side css 27786 . 27787) (nil part-side css 27774 . 27786) (nil face web-mode-css-property-name-face 27774 . 27786) (27774 . 27831)) nil (25479 23345 136247 238000) 0 nil])
([nil nil ((27807 . 27811) (#(" " 0 1 (part-side css)) . 27806) (undo-tree-id27 . -1) (27807 . 27808)) nil (25479 23392 777505 253000) 0 nil])
([nil nil ((6960 . 6985) (t 25479 23394 430440 413000)) nil (25479 23456 681035 496000) 0 nil] [nil nil ((#("style" 0 1 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6985) (undo-tree-id25 . -5) (undo-tree-id26 . -5)) ((6985 . 6990)) (25479 23392 295971 35000) 0 nil])
([nil nil ((6985 . 6993)) nil (25479 23456 681033 714000) 0 nil])
([nil nil ((6985 . 6994)) ((#("class=\"\" " 0 1 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (tag-name "th" tag-type start)) . 6985) (undo-tree-id31 . -8) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -8)) (25479 23391 535436 820000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7005 . 7006) (nil tag-attr t 6992 . 7006) (nil tag-name "th" 6992 . 7006) (nil tag-type start 6992 . 7006) (nil font-lock-face web-mode-html-attr-value-face 6992 . 7006) (6992 . 7006)) nil (25479 23462 809432 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7005 . 7006) (nil tag-attr t 6992 . 7006) (nil tag-name "th" 6992 . 7006) (nil tag-type start 6992 . 7006) (nil font-lock-face web-mode-html-attr-value-face 6992 . 7006) (6992 . 7006)) ((#("tableheaderCol" 0 13 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 13 14 (rear-nonsticky nil tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6992) (nil tag-name "th" 7005 . 7006) (nil tag-name "th" 6992 . 7005) (nil rear-nonsticky t 7005 . 7006)) (25479 23390 823234 819000) 0 nil])
([nil nil ((#("
                        class=\"tableheaderCol\"" 0 1 (tag-name "th" tag-type start) 1 25 (tag-name "th" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 29 30 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 32 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 32 45 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (rear-nonsticky t tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6960) (undo-tree-id77 . -46) (undo-tree-id78 . -1) (undo-tree-id79 . -47) (undo-tree-id80 . -32) (undo-tree-id81 . -47) (t 25479 23464 383459 764000)) nil (25479 23475 335332 30000) 0 nil] [nil nil ((#("
                        style=\"border-left: #c5c5c5 solid thin; padding: 0px !important;\"" 0 25 (tag-name "th" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 32 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 41 42 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 42 43 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 43 44 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 47 48 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 50 51 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 51 52 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 52 53 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 53 54 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 54 55 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 55 56 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 56 57 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 58 59 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 59 60 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 60 61 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 61 62 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 62 63 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 63 64 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 64 65 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 65 66 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 67 68 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 68 69 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 69 70 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 70 71 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 74 75 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 75 76 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 76 77 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 78 79 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 79 80 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 80 81 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 81 82 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 82 83 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 83 84 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 84 85 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 85 86 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 86 87 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 87 88 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 88 89 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 89 90 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7007) (undo-tree-id35 . -1) (undo-tree-id36 . -90) (undo-tree-id37 . -89) (undo-tree-id38 . -25) (undo-tree-id39 . -25) (undo-tree-id41 . -90) (undo-tree-id43 . -90) (undo-tree-id45 . -90) (undo-tree-id47 . -90) (undo-tree-id49 . -90)) ((7007 . 7097) (t 25479 23456 719348 47000)) (25479 23456 681023 744000) 0 nil])
([nil nil ((#("5" 0 1 (tag-name "th" tag-type start)) . 7007) (#("c" 0 1 (tag-name "th" tag-type start)) . 7007) (#("5" 0 1 (tag-name "th" tag-type start)) . 7007) (#("c" 0 1 (tag-name "th" tag-type start)) . 7007) (#("#" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#(":" 0 1 (tag-name "th" tag-type start)) . 7007) (#("t" 0 1 (tag-name "th" tag-type start)) . 7007) (#("f" 0 1 (tag-name "th" tag-type start)) . 7007) (#("e" 0 1 (tag-name "th" tag-type start)) . 7007) (#("l" 0 1 (tag-name "th" tag-type start)) . 7007) (#("-" 0 1 (tag-name "th" tag-type start)) . 7007) (#("r" 0 1 (tag-name "th" tag-type start)) . 7007) (#("e" 0 1 (tag-name "th" tag-type start)) . 7007) (#("d" 0 1 (tag-name "th" tag-type start)) . 7007) (#("r" 0 1 (tag-name "th" tag-type start)) . 7007) (#("o" 0 1 (tag-name "th" tag-type start)) . 7007) (#("b" 0 1 (tag-name "th" tag-type start)) . 7007) (#("\"" 0 1 (tag-name "th" tag-type start)) . 7007) (#("=" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007)) ((7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008)) (25479 23390 329224 324000) 0 nil])
([nil nil ((#("  .tableheaderCol {
    border-left: #c5c5c5 solid thin;
    padding: 0px !important;
  }" 0 2 (part-side css) 2 17 (part-side css face web-mode-css-selector-class-face) 17 18 (part-side css) 18 19 (part-side css face (rainbow-delimiters-depth-1-face)) 19 20 (part-side css) 20 24 (part-side css) 24 36 (part-side css face web-mode-css-property-name-face) 36 37 (part-side css) 37 44 (part-side css face web-mode-css-color-face) 44 61 (part-side css) 61 69 (part-side css face web-mode-css-property-name-face) 69 74 (part-side css) 74 84 (part-side css face web-mode-css-priority-face) 84 85 (rear-nonsticky t part-side css) 85 88 (part-side css) 88 89 (part-side css face (rainbow-delimiters-depth-1-face))) . 27750) (undo-tree-id68 . -20) (undo-tree-id69 . -89) (undo-tree-id70 . -6) (undo-tree-id71 . -24) (undo-tree-id72 . -17) (undo-tree-id73 . -85) (undo-tree-id74 . -18) (undo-tree-id75 . -17) (undo-tree-id76 . -89)) nil (25479 23519 702 709000) 0 nil])
nil
([nil nil ((#("n" 0 1 (tag-name "th" tag-type start)) . 7007) (#("i" 0 1 (tag-name "th" tag-type start)) . 7007) (#("d" 0 1 (tag-name "th" tag-type start)) . 7007) (#("d" 0 1 (tag-name "th" tag-type start)) . 7007) (#("a" 0 1 (tag-name "th" tag-type start)) . 7007) (#("p" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#(";" 0 1 (tag-name "th" tag-type start)) . 7007) (#("n" 0 1 (tag-name "th" tag-type start)) . 7007) (#("i" 0 1 (tag-name "th" tag-type start)) . 7007) (#("h" 0 1 (tag-name "th" tag-type start)) . 7007) (#("t" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#("d" 0 1 (tag-name "th" tag-type start)) . 7007) (#("i" 0 1 (tag-name "th" tag-type start)) . 7007) (#("l" 0 1 (tag-name "th" tag-type start)) . 7007) (#("o" 0 1 (tag-name "th" tag-type start)) . 7007) (#("s" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#("5" 0 1 (tag-name "th" tag-type start)) . 7007) (#("c" 0 1 (tag-name "th" tag-type start)) . 7007)) ((7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008)) (25479 23389 822553 345000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -27748) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("
" 0 1 (part-side css)) . -27749) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 27750) nil (25479 23605 804997 104000) 0 nil] [nil nil ((#("
" 0 1 (part-side css)) . -27748) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("
" 0 1 (part-side css)) . -27749) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 27750) ((27748 . 27750)) (25479 23518 601206 550000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-name "th" tag-type start)) . 7007) (#(";" 0 1 (tag-name "th" tag-type start)) . 7007) (undo-tree-id24 . -1) (#("t" 0 1 (tag-name "th" tag-type start)) . 7007) (#("n" 0 1 (tag-name "th" tag-type start)) . 7007) (#("a" 0 1 (tag-name "th" tag-type start)) . 7007) (#("t" 0 1 (tag-name "th" tag-type start)) . 7007) (#("r" 0 1 (tag-name "th" tag-type start)) . 7007) (#("o" 0 1 (tag-name "th" tag-type start)) . 7007) (#("p" 0 1 (tag-name "th" tag-type start)) . 7007) (#("m" 0 1 (tag-name "th" tag-type start)) . 7007) (#("i" 0 1 (tag-name "th" tag-type start)) . 7007) (#("!" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#("x" 0 1 (tag-name "th" tag-type start)) . 7007) (#("p" 0 1 (tag-name "th" tag-type start)) . 7007) (#("0" 0 1 (tag-name "th" tag-type start)) . 7007) (#(" " 0 1 (tag-name "th" tag-type start)) . 7007) (#(":" 0 1 (tag-name "th" tag-type start)) . 7007) (#("g" 0 1 (tag-name "th" tag-type start)) . 7007)) ((7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (7007 . 7008) (t 25479 23345 177723 145000)) (25479 23345 136205 855000) 0 nil])
([nil nil ((#("      <div class=\"datatable-bar\">
          <v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <v-btn
                v-bind=\"attrs\"
                v-on=\"on\"
                icon
                small
                class=\"databuttons\"
                @click=\"saveDialog = true\"
              >
                <v-icon>mdi-table-lock</v-icon>
              </v-btn>
            </template>
            <span> {{$t('AnalysisNetwork.saveLayout')}}</span>
          </v-tooltip>
          <v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <v-btn
                v-bind=\"attrs\"
                v-on=\"on\"
                icon
                small
                class=\"databuttons\"
                @click=\"hideDialog=true\"
              >
                <v-icon>mdi-table-eye</v-icon>
              </v-btn>
            </template>
            <span> {{$t('AnalysisNetwork.hideTitle')}}</span>
          </v-tooltip>
          <v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <v-btn
                v-bind=\"attrs\"
                v-on=\"on\"
                icon
                small
                class=\"databuttons\"
                @click=\"resetDialog = true\"
              >
                <v-icon>mdi-table-refresh</v-icon>
              </v-btn>
            </template>
            <span> {{$t('AnalysisNetwork.reset')}} </span>
          </v-tooltip>
          <v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <v-btn
                v-bind=\"attrs\"
                v-on=\"on\"
                icon
                small
                class=\"databuttons\"
                :loading=\"gettingCSV\"
                @click=\"downloadCSVData\"
              >
                <v-icon>mdi-download-outline</v-icon>
              </v-btn>
            </template>
            <span> {{ $t(\"General.csvDownload\") }} </span>
          </v-tooltip>
          <v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <v-btn
                v-bind=\"attrs\"
                v-on=\"on\"
                icon
                small
                class=\"databuttons\"
                @click=\"shortcutDialog = true\"
              >
                <v-icon>mdi-keyboard</v-icon>
              </v-btn>
            </template>
            <span> {{$t('AnalysisNetwork.shortcut')}} </span>
          </v-tooltip>
      </div>" 6 7 (tag-name "div" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 10 (tag-name "div" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "div" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 31 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-name "div" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 44 45 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 45 54 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 54 55 (tag-name "v-tooltip" tag-type start) 55 56 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 56 57 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 57 58 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 58 59 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 73 81 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 81 82 (tag-name "template" tag-type start) 82 83 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 83 88 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 88 89 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 89 90 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 90 91 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 91 92 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 92 93 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 93 94 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 94 95 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 95 96 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 96 97 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 97 98 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 98 99 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 99 100 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 100 102 (block-side t tag-attr t tag-name "template" tag-type start) 102 103 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 103 104 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 104 106 (block-side t tag-attr t tag-name "template" tag-type start) 106 107 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 107 108 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 108 109 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 109 110 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 110 111 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 111 113 (block-side t tag-attr t tag-name "template" tag-type start) 113 114 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 114 115 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 130 131 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 131 136 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 136 153 (tag-name "v-btn" tag-type start) 153 154 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 154 159 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 159 160 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 160 166 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 166 167 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 167 184 (tag-name "v-btn" tag-type start) 184 185 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 185 188 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 188 189 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 189 192 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 192 193 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 193 210 (tag-name "v-btn" tag-type start) 210 211 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 211 213 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 213 214 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 214 231 (tag-name "v-btn" tag-type start) 231 232 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 232 235 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 235 236 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 236 253 (tag-name "v-btn" tag-type start) 253 254 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 254 258 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 258 259 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 259 271 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 271 272 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 272 289 (tag-name "v-btn" tag-type start) 289 290 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 290 291 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 291 292 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 292 293 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 293 294 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 294 295 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 295 296 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 296 297 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 297 298 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 298 299 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 299 300 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 300 301 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 301 302 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 302 303 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 303 304 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 304 305 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 305 306 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 306 307 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 307 310 (block-side t tag-attr t tag-name "v-btn" tag-type start) 310 311 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 311 312 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 312 313 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 313 314 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 314 315 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 315 330 (tag-name "v-btn" tag-type start) 330 331 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 348 349 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 349 355 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 355 356 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 370 371 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 371 372 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 372 378 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 378 379 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 394 395 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 395 396 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 396 401 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 401 402 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 415 416 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 416 417 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 417 425 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 425 426 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 439 440 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 440 444 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 444 445 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 446 447 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 447 448 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 448 449 (block-side t) 449 450 (block-side t face web-mode-variable-name-face) 450 451 (block-side t face (rainbow-delimiters-depth-3-face)) 451 452 (block-side t) 452 453 (block-side t face web-mode-variable-name-face) 453 454 (block-side t face web-mode-variable-name-face) 454 455 (block-side t face web-mode-variable-name-face) 455 456 (block-side t face web-mode-variable-name-face) 456 457 (block-side t face web-mode-variable-name-face) 457 458 (block-side t face web-mode-variable-name-face) 458 459 (block-side t face web-mode-variable-name-face) 459 460 (block-side t face web-mode-variable-name-face) 460 461 (block-side t face web-mode-variable-name-face) 461 462 (block-side t face web-mode-variable-name-face) 462 463 (block-side t face web-mode-variable-name-face) 463 464 (block-side t face web-mode-variable-name-face) 464 465 (block-side t face web-mode-variable-name-face) 465 466 (block-side t face web-mode-variable-name-face) 466 467 (block-side t face web-mode-variable-name-face) 467 468 (block-side t) 468 469 (block-side t face web-mode-variable-name-face) 469 470 (block-side t face web-mode-variable-name-face) 470 471 (block-side t face web-mode-variable-name-face) 471 472 (block-side t face web-mode-variable-name-face) 472 473 (block-side t face web-mode-variable-name-face) 473 474 (block-side t face web-mode-variable-name-face) 474 475 (block-side t face web-mode-variable-name-face) 475 476 (block-side t face web-mode-variable-name-face) 476 477 (block-side t face web-mode-variable-name-face) 477 478 (block-side t face web-mode-variable-name-face) 478 479 (block-side t) 479 480 (block-side t face (rainbow-delimiters-depth-3-face)) 480 481 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 481 482 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 482 483 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 483 484 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 484 488 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 488 489 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 500 501 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 501 502 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 502 511 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 511 512 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 523 524 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 524 533 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 533 534 (tag-name "v-tooltip" tag-type start) 534 535 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 535 536 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 536 537 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 537 538 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 551 552 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 552 560 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 560 561 (tag-name "template" tag-type start) 561 562 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 562 567 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 567 568 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 568 569 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 569 570 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 570 571 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 571 572 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 572 573 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 573 574 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 574 575 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 575 576 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 576 577 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 577 578 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 578 579 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 579 581 (block-side t tag-attr t tag-name "template" tag-type start) 581 582 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 582 583 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 583 585 (block-side t tag-attr t tag-name "template" tag-type start) 585 586 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 586 587 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 587 588 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 588 589 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 589 590 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 590 592 (block-side t tag-attr t tag-name "template" tag-type start) 592 593 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 593 594 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 609 610 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 610 615 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 615 632 (tag-name "v-btn" tag-type start) 632 633 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 633 638 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 638 639 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 639 645 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 645 646 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 646 663 (tag-name "v-btn" tag-type start) 663 664 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 664 667 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 667 668 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 668 671 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 671 672 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 672 689 (tag-name "v-btn" tag-type start) 689 690 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 690 692 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 692 693 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 693 710 (tag-name "v-btn" tag-type start) 710 711 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 711 714 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 714 715 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 715 732 (tag-name "v-btn" tag-type start) 732 733 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 733 737 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 737 738 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 738 750 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 750 751 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 751 768 (tag-name "v-btn" tag-type start) 768 769 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 769 770 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 770 771 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 771 772 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 772 773 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 773 774 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 774 775 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 775 776 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 776 777 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 777 778 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 778 779 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 779 780 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 780 781 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 781 782 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 782 783 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 783 784 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 784 785 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 785 786 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 786 787 (block-side t tag-attr t tag-name "v-btn" tag-type start) 787 788 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 788 789 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 789 790 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 790 791 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 791 792 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 792 807 (tag-name "v-btn" tag-type start) 807 808 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 825 826 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 826 832 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 832 833 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 846 847 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 847 848 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 848 854 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 854 855 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 870 871 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 871 872 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 872 877 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 877 878 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 891 892 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 892 893 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 893 901 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 901 902 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 915 916 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 916 920 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 920 921 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 922 923 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 923 924 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 924 925 (block-side t) 925 926 (block-side t face web-mode-variable-name-face) 926 927 (block-side t face (rainbow-delimiters-depth-3-face)) 927 928 (block-side t) 928 929 (block-side t face web-mode-variable-name-face) 929 930 (block-side t face web-mode-variable-name-face) 930 931 (block-side t face web-mode-variable-name-face) 931 932 (block-side t face web-mode-variable-name-face) 932 933 (block-side t face web-mode-variable-name-face) 933 934 (block-side t face web-mode-variable-name-face) 934 935 (block-side t face web-mode-variable-name-face) 935 936 (block-side t face web-mode-variable-name-face) 936 937 (block-side t face web-mode-variable-name-face) 937 938 (block-side t face web-mode-variable-name-face) 938 939 (block-side t face web-mode-variable-name-face) 939 940 (block-side t face web-mode-variable-name-face) 940 941 (block-side t face web-mode-variable-name-face) 941 942 (block-side t face web-mode-variable-name-face) 942 943 (block-side t face web-mode-variable-name-face) 943 944 (block-side t) 944 945 (block-side t face web-mode-variable-name-face) 945 946 (block-side t face web-mode-variable-name-face) 946 947 (block-side t face web-mode-variable-name-face) 947 948 (block-side t face web-mode-variable-name-face) 948 949 (block-side t face web-mode-variable-name-face) 949 950 (block-side t face web-mode-variable-name-face) 950 951 (block-side t face web-mode-variable-name-face) 951 952 (block-side t face web-mode-variable-name-face) 952 953 (block-side t face web-mode-variable-name-face) 953 954 (block-side t) 954 955 (block-side t face (rainbow-delimiters-depth-3-face)) 955 956 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 956 957 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 957 958 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 958 959 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 959 963 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 963 964 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 975 976 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 976 977 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 977 986 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 986 987 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 998 999 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 999 1008 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 1008 1009 (tag-name "v-tooltip" tag-type start) 1009 1010 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1010 1011 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1011 1012 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1012 1013 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1026 1027 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1027 1035 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 1035 1036 (tag-name "template" tag-type start) 1036 1037 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 1037 1042 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 1042 1043 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1043 1044 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1044 1045 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1045 1046 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1046 1047 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1047 1048 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1048 1049 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1049 1050 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1050 1051 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1051 1052 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1052 1053 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1053 1054 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1054 1056 (block-side t tag-attr t tag-name "template" tag-type start) 1056 1057 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1057 1058 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1058 1060 (block-side t tag-attr t tag-name "template" tag-type start) 1060 1061 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1061 1062 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1062 1063 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1063 1064 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1064 1065 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1065 1067 (block-side t tag-attr t tag-name "template" tag-type start) 1067 1068 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1068 1069 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1084 1085 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1085 1090 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 1090 1107 (tag-name "v-btn" tag-type start) 1107 1108 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1108 1113 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1113 1114 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1114 1120 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1120 1121 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1121 1138 (tag-name "v-btn" tag-type start) 1138 1139 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1139 1142 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1142 1143 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1143 1146 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1146 1147 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1147 1164 (tag-name "v-btn" tag-type start) 1164 1165 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1165 1167 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1167 1168 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1168 1185 (tag-name "v-btn" tag-type start) 1185 1186 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1186 1189 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1189 1190 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1190 1207 (tag-name "v-btn" tag-type start) 1207 1208 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1208 1212 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1212 1213 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1213 1225 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1225 1226 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1226 1243 (tag-name "v-btn" tag-type start) 1243 1244 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1244 1245 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1245 1246 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1246 1247 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1247 1248 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1248 1249 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1249 1250 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1250 1251 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1251 1252 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1252 1253 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1253 1254 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1254 1255 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1255 1256 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1256 1257 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1257 1258 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1258 1259 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1259 1260 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1260 1261 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1261 1262 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1262 1265 (block-side t tag-attr t tag-name "v-btn" tag-type start) 1265 1266 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1266 1267 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1267 1268 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1268 1269 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1269 1270 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1270 1285 (tag-name "v-btn" tag-type start) 1285 1286 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1303 1304 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 1304 1310 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 1310 1311 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1328 1329 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1329 1330 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1330 1336 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 1336 1337 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1352 1353 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1353 1354 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1354 1359 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 1359 1360 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1373 1374 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1374 1375 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1375 1383 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 1383 1384 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1397 1398 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1398 1402 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 1402 1403 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1404 1405 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1405 1406 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1406 1407 (block-side t) 1407 1408 (block-side t face web-mode-variable-name-face) 1408 1409 (block-side t face (rainbow-delimiters-depth-3-face)) 1409 1410 (block-side t) 1410 1411 (block-side t face web-mode-variable-name-face) 1411 1412 (block-side t face web-mode-variable-name-face) 1412 1413 (block-side t face web-mode-variable-name-face) 1413 1414 (block-side t face web-mode-variable-name-face) 1414 1415 (block-side t face web-mode-variable-name-face) 1415 1416 (block-side t face web-mode-variable-name-face) 1416 1417 (block-side t face web-mode-variable-name-face) 1417 1418 (block-side t face web-mode-variable-name-face) 1418 1419 (block-side t face web-mode-variable-name-face) 1419 1420 (block-side t face web-mode-variable-name-face) 1420 1421 (block-side t face web-mode-variable-name-face) 1421 1422 (block-side t face web-mode-variable-name-face) 1422 1423 (block-side t face web-mode-variable-name-face) 1423 1424 (block-side t face web-mode-variable-name-face) 1424 1425 (block-side t face web-mode-variable-name-face) 1425 1426 (block-side t) 1426 1427 (block-side t face web-mode-variable-name-face) 1427 1428 (block-side t face web-mode-variable-name-face) 1428 1429 (block-side t face web-mode-variable-name-face) 1429 1430 (block-side t face web-mode-variable-name-face) 1430 1431 (block-side t face web-mode-variable-name-face) 1431 1432 (block-side t) 1432 1433 (block-side t face (rainbow-delimiters-depth-3-face)) 1433 1434 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1434 1435 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1436 1437 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1437 1438 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1438 1442 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 1442 1443 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1454 1455 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1455 1456 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1456 1465 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 1465 1466 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1477 1478 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1478 1487 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 1487 1488 (tag-name "v-tooltip" tag-type start) 1488 1489 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1489 1490 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1490 1491 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 1491 1492 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1505 1506 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1506 1514 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 1514 1515 (tag-name "template" tag-type start) 1515 1516 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 1516 1521 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 1521 1522 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1522 1523 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1523 1524 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1524 1525 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1525 1526 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1526 1527 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1527 1528 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1528 1529 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1529 1530 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1530 1531 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1531 1532 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1532 1533 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1533 1535 (block-side t tag-attr t tag-name "template" tag-type start) 1535 1536 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1536 1537 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1537 1539 (block-side t tag-attr t tag-name "template" tag-type start) 1539 1540 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1540 1541 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1541 1542 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1542 1543 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1543 1544 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 1544 1546 (block-side t tag-attr t tag-name "template" tag-type start) 1546 1547 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 1547 1548 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1563 1564 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1564 1569 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 1569 1586 (tag-name "v-btn" tag-type start) 1586 1587 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1587 1592 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1592 1593 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1593 1599 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1599 1600 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1600 1617 (tag-name "v-btn" tag-type start) 1617 1618 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1618 1621 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 1621 1622 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1622 1625 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1625 1626 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1626 1643 (tag-name "v-btn" tag-type start) 1643 1644 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1644 1646 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1646 1647 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1647 1664 (tag-name "v-btn" tag-type start) 1664 1665 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1665 1668 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1668 1669 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1669 1686 (tag-name "v-btn" tag-type start) 1686 1687 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1687 1691 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 1691 1692 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 1692 1704 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1704 1705 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 1705 1722 (tag-name "v-btn" tag-type start) 1722 1723 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1723 1724 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1724 1725 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1725 1726 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1726 1727 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1727 1728 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1728 1729 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1729 1730 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1730 1731 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1731 1732 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1732 1733 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1733 1734 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1734 1735 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1735 1736 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1736 1737 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1737 1738 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1738 1739 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1739 1740 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1740 1741 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1741 1742 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1742 1743 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1743 1760 (tag-name "v-btn" tag-type start) 1760 1761 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1761 1762 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1762 1763 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1763 1764 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1764 1765 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1765 1766 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1766 1767 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1767 1768 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1768 1769 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1769 1770 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1770 1771 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1771 1772 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1772 1773 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1773 1774 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1774 1775 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1775 1776 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1776 1777 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1777 1778 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1778 1779 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1779 1780 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1780 1781 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1781 1782 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1782 1783 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 1783 1784 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 1784 1799 (tag-name "v-btn" tag-type start) 1799 1800 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1817 1818 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 1818 1824 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 1824 1825 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1845 1846 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1846 1847 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1847 1853 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 1853 1854 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1869 1870 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1870 1871 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1871 1876 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 1876 1877 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1890 1891 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1891 1892 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1892 1900 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 1900 1901 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1914 1915 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 1915 1919 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 1919 1920 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 1921 1922 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1922 1923 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1923 1925 (block-side t) 1925 1926 (block-side t face web-mode-variable-name-face) 1926 1927 (block-side t face (rainbow-delimiters-depth-3-face)) 1927 1928 (block-side t) 1928 1929 (block-side t face web-mode-variable-name-face) 1929 1930 (block-side t face web-mode-variable-name-face) 1930 1931 (block-side t face web-mode-variable-name-face) 1931 1932 (block-side t face web-mode-variable-name-face) 1932 1933 (block-side t face web-mode-variable-name-face) 1933 1934 (block-side t face web-mode-variable-name-face) 1934 1935 (block-side t face web-mode-variable-name-face) 1935 1936 (block-side t) 1936 1937 (block-side t face web-mode-variable-name-face) 1937 1938 (block-side t face web-mode-variable-name-face) 1938 1939 (block-side t face web-mode-variable-name-face) 1939 1940 (block-side t face web-mode-variable-name-face) 1940 1941 (block-side t face web-mode-variable-name-face) 1941 1942 (block-side t face web-mode-variable-name-face) 1942 1943 (block-side t face web-mode-variable-name-face) 1943 1944 (block-side t face web-mode-variable-name-face) 1944 1945 (block-side t face web-mode-variable-name-face) 1945 1946 (block-side t face web-mode-variable-name-face) 1946 1947 (block-side t face web-mode-variable-name-face) 1947 1948 (block-side t) 1948 1949 (block-side t face (rainbow-delimiters-depth-3-face)) 1949 1950 (block-side t) 1950 1951 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 1951 1952 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 1953 1954 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1954 1955 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1955 1959 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 1959 1960 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1971 1972 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 1972 1973 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 1973 1982 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 1982 1983 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 1994 1995 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1995 2004 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 2004 2005 (tag-name "v-tooltip" tag-type start) 2005 2006 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 2006 2007 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 2007 2008 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 2008 2009 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2022 2023 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 2023 2031 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 2031 2032 (tag-name "template" tag-type start) 2032 2033 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 2033 2038 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 2038 2039 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2039 2040 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2040 2041 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2041 2042 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2042 2043 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2043 2044 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2044 2045 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2045 2046 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2046 2047 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2047 2048 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2048 2049 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2049 2050 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2050 2052 (block-side t tag-attr t tag-name "template" tag-type start) 2052 2053 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2053 2054 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2054 2056 (block-side t tag-attr t tag-name "template" tag-type start) 2056 2057 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2057 2058 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2058 2059 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2059 2060 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2060 2061 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 2061 2063 (block-side t tag-attr t tag-name "template" tag-type start) 2063 2064 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 2064 2065 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2080 2081 (tag-name "v-btn" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 2081 2086 (tag-name "v-btn" tag-type start font-lock-face web-mode-html-tag-custom-face) 2086 2103 (tag-name "v-btn" tag-type start) 2103 2104 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 2104 2109 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 2109 2110 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 2110 2116 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2116 2117 (tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2117 2134 (tag-name "v-btn" tag-type start) 2134 2135 (tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 2135 2138 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face) 2138 2139 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 2139 2142 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2142 2143 (tag-attr t tag-attr-end 4 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2143 2160 (tag-name "v-btn" tag-type start) 2160 2161 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2161 2163 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2163 2164 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2164 2181 (tag-name "v-btn" tag-type start) 2181 2182 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2182 2185 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2185 2186 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2186 2203 (tag-name "v-btn" tag-type start) 2203 2204 (tag-attr-beg 0 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2204 2208 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-name-face) 2208 2209 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-equal-face) 2209 2221 (tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2221 2222 (tag-attr t tag-attr-end 5 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-value-face) 2222 2239 (tag-name "v-btn" tag-type start) 2239 2240 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2240 2241 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2241 2242 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2242 2243 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2243 2244 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2244 2245 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2245 2246 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2246 2247 (block-side t block-token delimiter-beg tag-attr t tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2247 2248 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2248 2249 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2249 2250 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2250 2251 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2251 2252 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2252 2253 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2253 2254 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2254 2255 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2255 2256 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2256 2257 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2257 2258 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2258 2259 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2259 2260 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2260 2261 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2261 2264 (block-side t tag-attr t tag-name "v-btn" tag-type start) 2264 2265 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2265 2266 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2266 2267 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2267 2268 (block-side t tag-attr t tag-name "v-btn" tag-type start face web-mode-variable-name-face) 2268 2269 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-btn" tag-type start font-lock-face web-mode-block-delimiter-face) 2269 2284 (tag-name "v-btn" tag-type start) 2284 2285 (tag-name "v-btn" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2302 2303 (tag-name "v-icon" tag-type start tag-beg 18 font-lock-face web-mode-html-tag-bracket-face) 2303 2309 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 2309 2310 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2322 2323 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 2323 2324 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2324 2330 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 2330 2331 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2346 2347 (tag-name "v-btn" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 2347 2348 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2348 2353 (tag-name "v-btn" tag-type end font-lock-face web-mode-html-tag-custom-face) 2353 2354 (tag-name "v-btn" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2367 2368 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2368 2369 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2369 2377 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 2377 2378 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2391 2392 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 2392 2396 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 2396 2397 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 2398 2399 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2399 2400 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2400 2401 (block-side t) 2401 2402 (block-side t face web-mode-variable-name-face) 2402 2403 (block-side t face (rainbow-delimiters-depth-3-face)) 2403 2404 (block-side t) 2404 2405 (block-side t face web-mode-variable-name-face) 2405 2406 (block-side t face web-mode-variable-name-face) 2406 2407 (block-side t face web-mode-variable-name-face) 2407 2408 (block-side t face web-mode-variable-name-face) 2408 2409 (block-side t face web-mode-variable-name-face) 2409 2410 (block-side t face web-mode-variable-name-face) 2410 2411 (block-side t face web-mode-variable-name-face) 2411 2412 (block-side t face web-mode-variable-name-face) 2412 2413 (block-side t face web-mode-variable-name-face) 2413 2414 (block-side t face web-mode-variable-name-face) 2414 2415 (block-side t face web-mode-variable-name-face) 2415 2416 (block-side t face web-mode-variable-name-face) 2416 2417 (block-side t face web-mode-variable-name-face) 2417 2418 (block-side t face web-mode-variable-name-face) 2418 2419 (block-side t face web-mode-variable-name-face) 2419 2420 (block-side t) 2420 2421 (block-side t face web-mode-variable-name-face) 2421 2422 (block-side t face web-mode-variable-name-face) 2422 2423 (block-side t face web-mode-variable-name-face) 2423 2424 (block-side t face web-mode-variable-name-face) 2424 2425 (block-side t face web-mode-variable-name-face) 2425 2426 (block-side t face web-mode-variable-name-face) 2426 2427 (block-side t face web-mode-variable-name-face) 2427 2428 (block-side t face web-mode-variable-name-face) 2428 2429 (block-side t) 2429 2430 (block-side t face (rainbow-delimiters-depth-3-face)) 2430 2431 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 2431 2432 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 2433 2434 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2434 2435 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2435 2439 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 2439 2440 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2451 2452 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 2452 2453 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2453 2462 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 2462 2463 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 2470 2471 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 2471 2472 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2472 2475 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 2475 2476 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 124) (undo-tree-id163 . -34) (undo-tree-id164 . -2476) (undo-tree-id165 . -2476) (t 25479 23606 349530 382000)) nil (25479 26681 209123 258000) 0 nil] [nil nil ((#(" #c5c5c5" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7004) (undo-tree-id147 . -8) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -8) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (t 25479 23521 516292 783000)) ((7004 . 7012) (t 25479 23578 197119 592000)) (25479 23578 158358 631000) 0 nil])
([nil nil ((#("#c5c5c5" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 1 2 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7005) (undo-tree-id82 . -7) (undo-tree-id84 . -7) (t 25479 23475 375620 0)) ((7005 . 7012)) (25479 23518 225102 224000) 0 nil])
nil
([nil nil (("
" . -123) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 124) nil (25479 26681 209118 245000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 7011 . 7012) (nil tag-attr t 7005 . 7012) (nil tag-name "th" 7005 . 7012) (nil tag-type start 7005 . 7012) (nil font-lock-face web-mode-html-attr-value-face 7005 . 7012) (7005 . 7012)) ((#("#616161" 0 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (rear-nonsticky nil tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7005) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (undo-tree-id122 . -7) (nil tag-name "th" 7011 . 7012) (nil tag-name "th" 7005 . 7011) (nil rear-nonsticky t 7011 . 7012) (t 25479 23513 8168 706000)) (25479 23512 970288 684000) 0 nil] [nil nil ((nil rear-nonsticky nil 7011 . 7012) (nil tag-attr t 7005 . 7012) (nil tag-name "th" 7005 . 7012) (nil tag-type start 7005 . 7012) (nil font-lock-face web-mode-html-attr-value-face 7005 . 7012) (7005 . 7012)) ((#("#424242" 0 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (rear-nonsticky nil tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7005) (undo-tree-id85 . -7) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7) (undo-tree-id93 . -7) (undo-tree-id94 . -7) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (nil tag-name "th" 7011 . 7012) (nil tag-name "th" 7005 . 7011) (nil rear-nonsticky t 7011 . 7012) (t 25479 23495 363911 419000)) (25479 23495 317942 693000) 0 nil])
([nil nil ((2523 . 2530)) nil (25479 26681 209112 476000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 5005 . 5006) (nil tag-name "div" 5005 . 5006) (nil tag-type end 5005 . 5006) (nil tag-end t 5005 . 5006) (nil font-lock-face web-mode-html-tag-bracket-face 5005 . 5006) (nil tag-name "div" 5002 . 5005) (nil tag-type end 5002 . 5005) (nil font-lock-face web-mode-html-tag-face 5002 . 5005) (nil tag-name "div" 5001 . 5002) (nil tag-type end 5001 . 5002) (nil font-lock-face web-mode-html-tag-bracket-face 5001 . 5002) (nil tag-name "div" 5000 . 5001) (nil tag-type end 5000 . 5001) (nil tag-beg 20 5000 . 5001) (nil font-lock-face web-mode-html-tag-bracket-face 5000 . 5001) (nil tag-name "v-tooltip" 4992 . 4993) (nil tag-type end 4992 . 4993) (nil tag-end t 4992 . 4993) (nil font-lock-face web-mode-html-tag-bracket-face 4992 . 4993) (nil tag-name "v-tooltip" 4983 . 4992) (nil tag-type end 4983 . 4992) (nil font-lock-face web-mode-html-tag-custom-face 4983 . 4992) (nil tag-name "v-tooltip" 4982 . 4983) (nil tag-type end 4982 . 4983) (nil font-lock-face web-mode-html-tag-bracket-face 4982 . 4983) (nil tag-name "v-tooltip" 4981 . 4982) (nil tag-type end 4981 . 4982) (nil tag-beg 22 4981 . 4982) (nil font-lock-face web-mode-html-tag-bracket-face 4981 . 4982) (nil tag-name "span" 4969 . 4970) (nil tag-type end 4969 . 4970) (nil tag-end t 4969 . 4970) (nil font-lock-face web-mode-html-tag-bracket-face 4969 . 4970) (nil tag-name "span" 4965 . 4969) (nil tag-type end 4965 . 4969) (nil font-lock-face web-mode-html-tag-face 4965 . 4969) (nil tag-name "span" 4964 . 4965) (nil tag-type end 4964 . 4965) (nil font-lock-face web-mode-html-tag-bracket-face 4964 . 4965) (nil tag-name "span" 4963 . 4964) (nil tag-type end 4963 . 4964) (nil tag-beg 20 4963 . 4964) (nil font-lock-face web-mode-html-tag-bracket-face 4963 . 4964) (nil block-side t 4961 . 4962) (nil block-end t 4961 . 4962) (nil block-token delimiter-end 4961 . 4962) (nil font-lock-face web-mode-block-delimiter-face 4961 . 4962) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4961 . 4962) (nil block-side t 4960 . 4961) (nil block-token delimiter-end 4960 . 4961) (nil font-lock-face web-mode-block-delimiter-face 4960 . 4961) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4960 . 4961) (nil block-side t 4959 . 4960) (nil face (rainbow-delimiters-depth-3-face) 4959 . 4960) (nil block-side t 4958 . 4959) (nil block-side t 4957 . 4958) (nil face web-mode-variable-name-face 4957 . 4958) (nil block-side t 4956 . 4957) (nil face web-mode-variable-name-face 4956 . 4957) (nil block-side t 4955 . 4956) (nil face web-mode-variable-name-face 4955 . 4956) (nil block-side t 4954 . 4955) (nil face web-mode-variable-name-face 4954 . 4955) (nil block-side t 4953 . 4954) (nil face web-mode-variable-name-face 4953 . 4954) (nil block-side t 4952 . 4953) (nil face web-mode-variable-name-face 4952 . 4953) (nil block-side t 4951 . 4952) (nil face web-mode-variable-name-face 4951 . 4952) (nil block-side t 4950 . 4951) (nil face web-mode-variable-name-face 4950 . 4951) (nil block-side t 4949 . 4950) (nil block-side t 4948 . 4949) (nil face web-mode-variable-name-face 4948 . 4949) (nil block-side t 4947 . 4948) (nil face web-mode-variable-name-face 4947 . 4948) (nil block-side t 4946 . 4947) (nil face web-mode-variable-name-face 4946 . 4947) (nil block-side t 4945 . 4946) (nil face web-mode-variable-name-face 4945 . 4946) (nil block-side t 4944 . 4945) (nil face web-mode-variable-name-face 4944 . 4945) (nil block-side t 4943 . 4944) (nil face web-mode-variable-name-face 4943 . 4944) (nil block-side t 4942 . 4943) (nil face web-mode-variable-name-face 4942 . 4943) (nil block-side t 4941 . 4942) (nil face web-mode-variable-name-face 4941 . 4942) (nil block-side t 4940 . 4941) (nil face web-mode-variable-name-face 4940 . 4941) (nil block-side t 4939 . 4940) (nil face web-mode-variable-name-face 4939 . 4940) (nil block-side t 4938 . 4939) (nil face web-mode-variable-name-face 4938 . 4939) (nil block-side t 4937 . 4938) (nil face web-mode-variable-name-face 4937 . 4938) (nil block-side t 4936 . 4937) (nil face web-mode-variable-name-face 4936 . 4937) (nil block-side t 4935 . 4936) (nil face web-mode-variable-name-face 4935 . 4936) (nil block-side t 4934 . 4935) (nil face web-mode-variable-name-face 4934 . 4935) (nil block-side t 4933 . 4934) (nil block-side t 4932 . 4933) (nil face (rainbow-delimiters-depth-3-face) 4932 . 4933) (nil block-side t 4931 . 4932) (nil face web-mode-variable-name-face 4931 . 4932) (nil block-side t 4930 . 4931) (nil block-side t 4929 . 4930) (nil block-token delimiter-beg 4929 . 4930) (nil font-lock-face web-mode-block-delimiter-face 4929 . 4930) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4929 . 4930) (nil block-beg 0 4928 . 4929) (nil block-controls 0 4928 . 4929) (nil block-side t 4928 . 4929) (nil block-token delimiter-beg 4928 . 4929) (nil font-lock-face web-mode-block-delimiter-face 4928 . 4929) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4928 . 4929) (nil tag-name "span" 4926 . 4927) (nil tag-type start 4926 . 4927) (nil tag-end t 4926 . 4927) (nil font-lock-face web-mode-html-tag-bracket-face 4926 . 4927) (nil tag-name "span" 4922 . 4926) (nil tag-type start 4922 . 4926) (nil font-lock-face web-mode-html-tag-face 4922 . 4926) (nil tag-name "span" 4921 . 4922) (nil tag-type start 4921 . 4922) (nil tag-beg 16 4921 . 4922) (nil font-lock-face web-mode-html-tag-bracket-face 4921 . 4922) (nil tag-name "template" 4907 . 4908) (nil tag-type end 4907 . 4908) (nil tag-end t 4907 . 4908) (nil font-lock-face web-mode-html-tag-bracket-face 4907 . 4908) (nil tag-name "template" 4899 . 4907) (nil tag-type end 4899 . 4907) (nil font-lock-face web-mode-html-tag-face 4899 . 4907) (nil tag-name "template" 4898 . 4899) (nil tag-type end 4898 . 4899) (nil font-lock-face web-mode-html-tag-bracket-face 4898 . 4899) (nil tag-name "template" 4897 . 4898) (nil tag-type end 4897 . 4898) (nil tag-beg 20 4897 . 4898) (nil font-lock-face web-mode-html-tag-bracket-face 4897 . 4898) (nil tag-name "v-btn" 4883 . 4884) (nil tag-type end 4883 . 4884) (nil tag-end t 4883 . 4884) (nil font-lock-face web-mode-html-tag-bracket-face 4883 . 4884) (nil tag-name "v-btn" 4878 . 4883) (nil tag-type end 4878 . 4883) (nil font-lock-face web-mode-html-tag-custom-face 4878 . 4883) (nil tag-name "v-btn" 4877 . 4878) (nil tag-type end 4877 . 4878) (nil font-lock-face web-mode-html-tag-bracket-face 4877 . 4878) (nil tag-name "v-btn" 4876 . 4877) (nil tag-type end 4876 . 4877) (nil tag-beg 22 4876 . 4877) (nil font-lock-face web-mode-html-tag-bracket-face 4876 . 4877) (nil tag-name "v-icon" 4860 . 4861) (nil tag-type end 4860 . 4861) (nil tag-end t 4860 . 4861) (nil font-lock-face web-mode-html-tag-bracket-face 4860 . 4861) (nil tag-name "v-icon" 4854 . 4860) (nil tag-type end 4854 . 4860) (nil font-lock-face web-mode-html-tag-custom-face 4854 . 4860) (nil tag-name "v-icon" 4853 . 4854) (nil tag-type end 4853 . 4854) (nil font-lock-face web-mode-html-tag-bracket-face 4853 . 4854) (nil tag-name "v-icon" 4852 . 4853) (nil tag-type end 4852 . 4853) (nil tag-beg 22 4852 . 4853) (nil font-lock-face web-mode-html-tag-bracket-face 4852 . 4853) (nil tag-name "v-icon" 4839 . 4840) (nil tag-type start 4839 . 4840) (nil tag-end t 4839 . 4840) (nil font-lock-face web-mode-html-tag-bracket-face 4839 . 4840) (nil tag-name "v-icon" 4833 . 4839) (nil tag-type start 4833 . 4839) (nil font-lock-face web-mode-html-tag-custom-face 4833 . 4839) (nil tag-name "v-icon" 4832 . 4833) (nil tag-type start 4832 . 4833) (nil tag-beg 18 4832 . 4833) (nil font-lock-face web-mode-html-tag-bracket-face 4832 . 4833) (nil tag-name "v-btn" 4814 . 4815) (nil tag-type start 4814 . 4815) (nil tag-end t 4814 . 4815) (nil font-lock-face web-mode-html-tag-bracket-face 4814 . 4815) (nil tag-name "v-btn" 4799 . 4814) (nil tag-type start 4799 . 4814) (nil block-side t 4798 . 4799) (nil block-end t 4798 . 4799) (nil block-token delimiter-end 4798 . 4799) (nil tag-attr t 4798 . 4799) (nil tag-attr-end 6 4798 . 4799) (nil tag-name "v-btn" 4798 . 4799) (nil tag-type start 4798 . 4799) (nil font-lock-face web-mode-block-delimiter-face 4798 . 4799) (nil block-side t 4797 . 4798) (nil tag-attr t 4797 . 4798) (nil tag-name "v-btn" 4797 . 4798) (nil tag-type start 4797 . 4798) (nil face web-mode-variable-name-face 4797 . 4798) (nil block-side t 4796 . 4797) (nil tag-attr t 4796 . 4797) (nil tag-name "v-btn" 4796 . 4797) (nil tag-type start 4796 . 4797) (nil face web-mode-variable-name-face 4796 . 4797) (nil block-side t 4795 . 4796) (nil tag-attr t 4795 . 4796) (nil tag-name "v-btn" 4795 . 4796) (nil tag-type start 4795 . 4796) (nil face web-mode-variable-name-face 4795 . 4796) (nil block-side t 4794 . 4795) (nil tag-attr t 4794 . 4795) (nil tag-name "v-btn" 4794 . 4795) (nil tag-type start 4794 . 4795) (nil face web-mode-variable-name-face 4794 . 4795) (nil block-side t 4791 . 4794) (nil tag-attr t 4791 . 4794) (nil tag-name "v-btn" 4791 . 4794) (nil tag-type start 4791 . 4794) (nil block-side t 4790 . 4791) (nil tag-attr t 4790 . 4791) (nil tag-name "v-btn" 4790 . 4791) (nil tag-type start 4790 . 4791) (nil face web-mode-variable-name-face 4790 . 4791) (nil block-side t 4789 . 4790) (nil tag-attr t 4789 . 4790) (nil tag-name "v-btn" 4789 . 4790) (nil tag-type start 4789 . 4790) (nil face web-mode-variable-name-face 4789 . 4790) (nil block-side t 4788 . 4789) (nil tag-attr t 4788 . 4789) (nil tag-name "v-btn" 4788 . 4789) (nil tag-type start 4788 . 4789) (nil face web-mode-variable-name-face 4788 . 4789) (nil block-side t 4787 . 4788) (nil tag-attr t 4787 . 4788) (nil tag-name "v-btn" 4787 . 4788) (nil tag-type start 4787 . 4788) (nil face web-mode-variable-name-face 4787 . 4788) (nil block-side t 4786 . 4787) (nil tag-attr t 4786 . 4787) (nil tag-name "v-btn" 4786 . 4787) (nil tag-type start 4786 . 4787) (nil face web-mode-variable-name-face 4786 . 4787) (nil block-side t 4785 . 4786) (nil tag-attr t 4785 . 4786) (nil tag-name "v-btn" 4785 . 4786) (nil tag-type start 4785 . 4786) (nil face web-mode-variable-name-face 4785 . 4786) (nil block-side t 4784 . 4785) (nil tag-attr t 4784 . 4785) (nil tag-name "v-btn" 4784 . 4785) (nil tag-type start 4784 . 4785) (nil face web-mode-variable-name-face 4784 . 4785) (nil block-side t 4783 . 4784) (nil tag-attr t 4783 . 4784) (nil tag-name "v-btn" 4783 . 4784) (nil tag-type start 4783 . 4784) (nil face web-mode-variable-name-face 4783 . 4784) (nil block-side t 4782 . 4783) (nil tag-attr t 4782 . 4783) (nil tag-name "v-btn" 4782 . 4783) (nil tag-type start 4782 . 4783) (nil face web-mode-variable-name-face 4782 . 4783) (nil block-side t 4781 . 4782) (nil tag-attr t 4781 . 4782) (nil tag-name "v-btn" 4781 . 4782) (nil tag-type start 4781 . 4782) (nil face web-mode-variable-name-face 4781 . 4782) (nil block-side t 4780 . 4781) (nil tag-attr t 4780 . 4781) (nil tag-name "v-btn" 4780 . 4781) (nil tag-type start 4780 . 4781) (nil face web-mode-variable-name-face 4780 . 4781) (nil block-side t 4779 . 4780) (nil tag-attr t 4779 . 4780) (nil tag-name "v-btn" 4779 . 4780) (nil tag-type start 4779 . 4780) (nil face web-mode-variable-name-face 4779 . 4780) (nil block-side t 4778 . 4779) (nil tag-attr t 4778 . 4779) (nil tag-name "v-btn" 4778 . 4779) (nil tag-type start 4778 . 4779) (nil face web-mode-variable-name-face 4778 . 4779) (nil block-side t 4777 . 4778) (nil tag-attr t 4777 . 4778) (nil tag-name "v-btn" 4777 . 4778) (nil tag-type start 4777 . 4778) (nil face web-mode-variable-name-face 4777 . 4778) (nil block-side t 4776 . 4777) (nil block-token delimiter-beg 4776 . 4777) (nil tag-attr t 4776 . 4777) (nil tag-name "v-btn" 4776 . 4777) (nil tag-type start 4776 . 4777) (nil font-lock-face web-mode-block-delimiter-face 4776 . 4777) (nil block-side t 4775 . 4776) (nil block-token delimiter-beg 4775 . 4776) (nil tag-attr t 4775 . 4776) (nil tag-name "v-btn" 4775 . 4776) (nil tag-type start 4775 . 4776) (nil font-lock-face web-mode-block-delimiter-face 4775 . 4776) (nil block-side t 4774 . 4775) (nil block-token delimiter-beg 4774 . 4775) (nil tag-attr t 4774 . 4775) (nil tag-name "v-btn" 4774 . 4775) (nil tag-type start 4774 . 4775) (nil font-lock-face web-mode-block-delimiter-face 4774 . 4775) (nil block-side t 4773 . 4774) (nil block-token delimiter-beg 4773 . 4774) (nil tag-attr t 4773 . 4774) (nil tag-name "v-btn" 4773 . 4774) (nil tag-type start 4773 . 4774) (nil font-lock-face web-mode-block-delimiter-face 4773 . 4774) (nil block-side t 4772 . 4773) (nil block-token delimiter-beg 4772 . 4773) (nil tag-attr t 4772 . 4773) (nil tag-name "v-btn" 4772 . 4773) (nil tag-type start 4772 . 4773) (nil font-lock-face web-mode-block-delimiter-face 4772 . 4773) (nil block-side t 4771 . 4772) (nil block-token delimiter-beg 4771 . 4772) (nil tag-attr t 4771 . 4772) (nil tag-name "v-btn" 4771 . 4772) (nil tag-type start 4771 . 4772) (nil font-lock-face web-mode-block-delimiter-face 4771 . 4772) (nil block-side t 4770 . 4771) (nil block-token delimiter-beg 4770 . 4771) (nil tag-attr t 4770 . 4771) (nil tag-name "v-btn" 4770 . 4771) (nil tag-type start 4770 . 4771) (nil font-lock-face web-mode-block-delimiter-face 4770 . 4771) (nil block-beg 0 4769 . 4770) (nil block-controls 0 4769 . 4770) (nil block-side t 4769 . 4770) (nil block-token delimiter-beg 4769 . 4770) (nil tag-attr-beg 2 4769 . 4770) (nil tag-attr t 4769 . 4770) (nil tag-name "v-btn" 4769 . 4770) (nil tag-type start 4769 . 4770) (nil font-lock-face web-mode-block-delimiter-face 4769 . 4770) (nil tag-name "v-btn" 4752 . 4769) (nil tag-type start 4752 . 4769) (nil tag-attr t 4751 . 4752) (nil tag-attr-end 5 4751 . 4752) (nil tag-name "v-btn" 4751 . 4752) (nil tag-type start 4751 . 4752) (nil font-lock-face web-mode-html-attr-value-face 4751 . 4752) (nil tag-attr t 4739 . 4751) (nil tag-name "v-btn" 4739 . 4751) (nil tag-type start 4739 . 4751) (nil font-lock-face web-mode-html-attr-value-face 4739 . 4751) (nil tag-attr t 4738 . 4739) (nil tag-name "v-btn" 4738 . 4739) (nil tag-type start 4738 . 4739) (nil font-lock-face web-mode-html-attr-equal-face 4738 . 4739) (nil tag-attr t 4734 . 4738) (nil tag-name "v-btn" 4734 . 4738) (nil tag-type start 4734 . 4738) (nil font-lock-face web-mode-html-attr-name-face 4734 . 4738) (nil tag-attr-beg 0 4733 . 4734) (nil tag-attr t 4733 . 4734) (nil tag-name "v-btn" 4733 . 4734) (nil tag-type start 4733 . 4734) (nil font-lock-face web-mode-html-attr-name-face 4733 . 4734) (nil tag-name "v-btn" 4716 . 4733) (nil tag-type start 4716 . 4733) (nil tag-attr t 4715 . 4716) (nil tag-attr-end 0 4715 . 4716) (nil tag-name "v-btn" 4715 . 4716) (nil tag-type start 4715 . 4716) (nil font-lock-face web-mode-html-attr-name-face 4715 . 4716) (nil tag-attr t 4712 . 4715) (nil tag-name "v-btn" 4712 . 4715) (nil tag-type start 4712 . 4715) (nil font-lock-face web-mode-html-attr-name-face 4712 . 4715) (nil tag-attr-beg 0 4711 . 4712) (nil tag-attr t 4711 . 4712) (nil tag-name "v-btn" 4711 . 4712) (nil tag-type start 4711 . 4712) (nil font-lock-face web-mode-html-attr-name-face 4711 . 4712) (nil tag-name "v-btn" 4694 . 4711) (nil tag-type start 4694 . 4711) (nil tag-attr t 4693 . 4694) (nil tag-attr-end 0 4693 . 4694) (nil tag-name "v-btn" 4693 . 4694) (nil tag-type start 4693 . 4694) (nil font-lock-face web-mode-html-attr-name-face 4693 . 4694) (nil tag-attr t 4691 . 4693) (nil tag-name "v-btn" 4691 . 4693) (nil tag-type start 4691 . 4693) (nil font-lock-face web-mode-html-attr-name-face 4691 . 4693) (nil tag-attr-beg 0 4690 . 4691) (nil tag-attr t 4690 . 4691) (nil tag-name "v-btn" 4690 . 4691) (nil tag-type start 4690 . 4691) (nil font-lock-face web-mode-html-attr-name-face 4690 . 4691) (nil tag-name "v-btn" 4673 . 4690) (nil tag-type start 4673 . 4690) (nil tag-attr t 4672 . 4673) (nil tag-attr-end 4 4672 . 4673) (nil tag-name "v-btn" 4672 . 4673) (nil tag-type start 4672 . 4673) (nil font-lock-face web-mode-html-attr-value-face 4672 . 4673) (nil tag-attr t 4669 . 4672) (nil tag-name "v-btn" 4669 . 4672) (nil tag-type start 4669 . 4672) (nil font-lock-face web-mode-html-attr-value-face 4669 . 4672) (nil tag-attr t 4668 . 4669) (nil tag-name "v-btn" 4668 . 4669) (nil tag-type start 4668 . 4669) (nil font-lock-face web-mode-html-attr-equal-face 4668 . 4669) (nil tag-attr t 4665 . 4668) (nil tag-name "v-btn" 4665 . 4668) (nil tag-type start 4665 . 4668) (nil font-lock-face web-mode-html-attr-engine-face 4665 . 4668) (nil tag-attr-beg 2 4664 . 4665) (nil tag-attr t 4664 . 4665) (nil tag-name "v-btn" 4664 . 4665) (nil tag-type start 4664 . 4665) (nil font-lock-face web-mode-html-attr-engine-face 4664 . 4665) (nil tag-name "v-btn" 4647 . 4664) (nil tag-type start 4647 . 4664) (nil tag-attr t 4646 . 4647) (nil tag-attr-end 6 4646 . 4647) (nil tag-name "v-btn" 4646 . 4647) (nil tag-type start 4646 . 4647) (nil font-lock-face web-mode-html-attr-value-face 4646 . 4647) (nil tag-attr t 4640 . 4646) (nil tag-name "v-btn" 4640 . 4646) (nil tag-type start 4640 . 4646) (nil font-lock-face web-mode-html-attr-value-face 4640 . 4646) (nil tag-attr t 4639 . 4640) (nil tag-name "v-btn" 4639 . 4640) (nil tag-type start 4639 . 4640) (nil font-lock-face web-mode-html-attr-equal-face 4639 . 4640) (nil tag-attr t 4634 . 4639) (nil tag-name "v-btn" 4634 . 4639) (nil tag-type start 4634 . 4639) (nil font-lock-face web-mode-html-attr-engine-face 4634 . 4639) (nil tag-attr-beg 2 4633 . 4634) (nil tag-attr t 4633 . 4634) (nil tag-name "v-btn" 4633 . 4634) (nil tag-type start 4633 . 4634) (nil font-lock-face web-mode-html-attr-engine-face 4633 . 4634) (nil tag-name "v-btn" 4616 . 4633) (nil tag-type start 4616 . 4633) (nil tag-name "v-btn" 4611 . 4616) (nil tag-type start 4611 . 4616) (nil font-lock-face web-mode-html-tag-custom-face 4611 . 4616) (nil tag-name "v-btn" 4610 . 4611) (nil tag-type start 4610 . 4611) (nil tag-beg 19 4610 . 4611) (nil font-lock-face web-mode-html-tag-bracket-face 4610 . 4611) (nil tag-name "template" 4594 . 4595) (nil tag-type start 4594 . 4595) (nil tag-end t 4594 . 4595) (nil font-lock-face web-mode-html-tag-bracket-face 4594 . 4595) (nil block-side t 4593 . 4594) (nil block-end t 4593 . 4594) (nil block-token delimiter-end 4593 . 4594) (nil tag-attr t 4593 . 4594) (nil tag-attr-end 16 4593 . 4594) (nil tag-name "template" 4593 . 4594) (nil tag-type start 4593 . 4594) (nil font-lock-face web-mode-block-delimiter-face 4593 . 4594) (nil block-side t 4591 . 4593) (nil tag-attr t 4591 . 4593) (nil tag-name "template" 4591 . 4593) (nil tag-type start 4591 . 4593) (nil block-side t 4590 . 4591) (nil tag-attr t 4590 . 4591) (nil tag-name "template" 4590 . 4591) (nil tag-type start 4590 . 4591) (nil face web-mode-variable-name-face 4590 . 4591) (nil block-side t 4589 . 4590) (nil tag-attr t 4589 . 4590) (nil tag-name "template" 4589 . 4590) (nil tag-type start 4589 . 4590) (nil face web-mode-variable-name-face 4589 . 4590) (nil block-side t 4588 . 4589) (nil tag-attr t 4588 . 4589) (nil tag-name "template" 4588 . 4589) (nil tag-type start 4588 . 4589) (nil face web-mode-variable-name-face 4588 . 4589) (nil block-side t 4587 . 4588) (nil tag-attr t 4587 . 4588) (nil tag-name "template" 4587 . 4588) (nil tag-type start 4587 . 4588) (nil face web-mode-variable-name-face 4587 . 4588) (nil block-side t 4586 . 4587) (nil tag-attr t 4586 . 4587) (nil tag-name "template" 4586 . 4587) (nil tag-type start 4586 . 4587) (nil face web-mode-variable-name-face 4586 . 4587) (nil block-side t 4584 . 4586) (nil tag-attr t 4584 . 4586) (nil tag-name "template" 4584 . 4586) (nil tag-type start 4584 . 4586) (nil block-side t 4583 . 4584) (nil tag-attr t 4583 . 4584) (nil tag-name "template" 4583 . 4584) (nil tag-type start 4583 . 4584) (nil face web-mode-variable-name-face 4583 . 4584) (nil block-side t 4582 . 4583) (nil tag-attr t 4582 . 4583) (nil tag-name "template" 4582 . 4583) (nil tag-type start 4582 . 4583) (nil face web-mode-variable-name-face 4582 . 4583) (nil block-side t 4580 . 4582) (nil tag-attr t 4580 . 4582) (nil tag-name "template" 4580 . 4582) (nil tag-type start 4580 . 4582) (nil block-side t 4579 . 4580) (nil block-token delimiter-beg 4579 . 4580) (nil tag-attr t 4579 . 4580) (nil tag-name "template" 4579 . 4580) (nil tag-type start 4579 . 4580) (nil font-lock-face web-mode-block-delimiter-face 4579 . 4580) (nil block-side t 4578 . 4579) (nil block-token delimiter-beg 4578 . 4579) (nil tag-attr t 4578 . 4579) (nil tag-name "template" 4578 . 4579) (nil tag-type start 4578 . 4579) (nil font-lock-face web-mode-block-delimiter-face 4578 . 4579) (nil block-side t 4577 . 4578) (nil block-token delimiter-beg 4577 . 4578) (nil tag-attr t 4577 . 4578) (nil tag-name "template" 4577 . 4578) (nil tag-type start 4577 . 4578) (nil font-lock-face web-mode-block-delimiter-face 4577 . 4578) (nil block-side t 4576 . 4577) (nil block-token delimiter-beg 4576 . 4577) (nil tag-attr t 4576 . 4577) (nil tag-name "template" 4576 . 4577) (nil tag-type start 4576 . 4577) (nil font-lock-face web-mode-block-delimiter-face 4576 . 4577) (nil block-side t 4575 . 4576) (nil block-token delimiter-beg 4575 . 4576) (nil tag-attr t 4575 . 4576) (nil tag-name "template" 4575 . 4576) (nil tag-type start 4575 . 4576) (nil font-lock-face web-mode-block-delimiter-face 4575 . 4576) (nil block-side t 4574 . 4575) (nil block-token delimiter-beg 4574 . 4575) (nil tag-attr t 4574 . 4575) (nil tag-name "template" 4574 . 4575) (nil tag-type start 4574 . 4575) (nil font-lock-face web-mode-block-delimiter-face 4574 . 4575) (nil block-side t 4573 . 4574) (nil block-token delimiter-beg 4573 . 4574) (nil tag-attr t 4573 . 4574) (nil tag-name "template" 4573 . 4574) (nil tag-type start 4573 . 4574) (nil font-lock-face web-mode-block-delimiter-face 4573 . 4574) (nil block-side t 4572 . 4573) (nil block-token delimiter-beg 4572 . 4573) (nil tag-attr t 4572 . 4573) (nil tag-name "template" 4572 . 4573) (nil tag-type start 4572 . 4573) (nil font-lock-face web-mode-block-delimiter-face 4572 . 4573) (nil block-side t 4571 . 4572) (nil block-token delimiter-beg 4571 . 4572) (nil tag-attr t 4571 . 4572) (nil tag-name "template" 4571 . 4572) (nil tag-type start 4571 . 4572) (nil font-lock-face web-mode-block-delimiter-face 4571 . 4572) (nil block-side t 4570 . 4571) (nil block-token delimiter-beg 4570 . 4571) (nil tag-attr t 4570 . 4571) (nil tag-name "template" 4570 . 4571) (nil tag-type start 4570 . 4571) (nil font-lock-face web-mode-block-delimiter-face 4570 . 4571) (nil block-side t 4569 . 4570) (nil block-token delimiter-beg 4569 . 4570) (nil tag-attr t 4569 . 4570) (nil tag-name "template" 4569 . 4570) (nil tag-type start 4569 . 4570) (nil font-lock-face web-mode-block-delimiter-face 4569 . 4570) (nil block-beg 0 4568 . 4569) (nil block-controls 0 4568 . 4569) (nil block-side t 4568 . 4569) (nil block-token delimiter-beg 4568 . 4569) (nil tag-attr t 4568 . 4569) (nil tag-name "template" 4568 . 4569) (nil tag-type start 4568 . 4569) (nil font-lock-face web-mode-block-delimiter-face 4568 . 4569) (nil tag-attr t 4563 . 4568) (nil tag-name "template" 4563 . 4568) (nil tag-type start 4563 . 4568) (nil font-lock-face web-mode-html-attr-engine-face 4563 . 4568) (nil tag-attr-beg 2 4562 . 4563) (nil tag-attr t 4562 . 4563) (nil tag-name "template" 4562 . 4563) (nil tag-type start 4562 . 4563) (nil font-lock-face web-mode-html-attr-engine-face 4562 . 4563) (nil tag-name "template" 4561 . 4562) (nil tag-type start 4561 . 4562) (nil tag-name "template" 4553 . 4561) (nil tag-type start 4553 . 4561) (nil font-lock-face web-mode-html-tag-face 4553 . 4561) (nil tag-name "template" 4552 . 4553) (nil tag-type start 4552 . 4553) (nil tag-beg 17 4552 . 4553) (nil font-lock-face web-mode-html-tag-bracket-face 4552 . 4553) (nil tag-name "v-tooltip" 4538 . 4539) (nil tag-type start 4538 . 4539) (nil tag-end t 4538 . 4539) (nil font-lock-face web-mode-html-tag-bracket-face 4538 . 4539) (nil tag-attr t 4537 . 4538) (nil tag-attr-end 0 4537 . 4538) (nil tag-name "v-tooltip" 4537 . 4538) (nil tag-type start 4537 . 4538) (nil font-lock-face web-mode-html-attr-name-face 4537 . 4538) (nil tag-attr t 4536 . 4537) (nil tag-name "v-tooltip" 4536 . 4537) (nil tag-type start 4536 . 4537) (nil font-lock-face web-mode-html-attr-name-face 4536 . 4537) (nil tag-attr-beg 0 4535 . 4536) (nil tag-attr t 4535 . 4536) (nil tag-name "v-tooltip" 4535 . 4536) (nil tag-type start 4535 . 4536) (nil font-lock-face web-mode-html-attr-name-face 4535 . 4536) (nil tag-name "v-tooltip" 4534 . 4535) (nil tag-type start 4534 . 4535) (nil tag-name "v-tooltip" 4525 . 4534) (nil tag-type start 4525 . 4534) (nil font-lock-face web-mode-html-tag-custom-face 4525 . 4534) (nil tag-name "v-tooltip" 4524 . 4525) (nil tag-type start 4524 . 4525) (nil tag-beg 19 4524 . 4525) (nil font-lock-face web-mode-html-tag-bracket-face 4524 . 4525) (nil tag-name "v-tooltip" 4512 . 4513) (nil tag-type end 4512 . 4513) (nil tag-end t 4512 . 4513) (nil font-lock-face web-mode-html-tag-bracket-face 4512 . 4513) (nil tag-name "v-tooltip" 4503 . 4512) (nil tag-type end 4503 . 4512) (nil font-lock-face web-mode-html-tag-custom-face 4503 . 4512) (nil tag-name "v-tooltip" 4502 . 4503) (nil tag-type end 4502 . 4503) (nil font-lock-face web-mode-html-tag-bracket-face 4502 . 4503) (nil tag-name "v-tooltip" 4501 . 4502) (nil tag-type end 4501 . 4502) (nil tag-beg 22 4501 . 4502) (nil font-lock-face web-mode-html-tag-bracket-face 4501 . 4502) (nil tag-name "span" 4489 . 4490) (nil tag-type end 4489 . 4490) (nil tag-end t 4489 . 4490) (nil font-lock-face web-mode-html-tag-bracket-face 4489 . 4490) (nil tag-name "span" 4485 . 4489) (nil tag-type end 4485 . 4489) (nil font-lock-face web-mode-html-tag-face 4485 . 4489) (nil tag-name "span" 4484 . 4485) (nil tag-type end 4484 . 4485) (nil font-lock-face web-mode-html-tag-bracket-face 4484 . 4485) (nil tag-name "span" 4483 . 4484) (nil tag-type end 4483 . 4484) (nil tag-beg 20 4483 . 4484) (nil font-lock-face web-mode-html-tag-bracket-face 4483 . 4484) (nil block-side t 4481 . 4482) (nil block-end t 4481 . 4482) (nil block-token delimiter-end 4481 . 4482) (nil font-lock-face web-mode-block-delimiter-face 4481 . 4482) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4481 . 4482) (nil block-side t 4480 . 4481) (nil block-token delimiter-end 4480 . 4481) (nil font-lock-face web-mode-block-delimiter-face 4480 . 4481) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4480 . 4481) (nil block-side t 4479 . 4480) (nil block-side t 4478 . 4479) (nil face (rainbow-delimiters-depth-3-face) 4478 . 4479) (nil block-side t 4477 . 4478) (nil block-side t 4476 . 4477) (nil face web-mode-variable-name-face 4476 . 4477) (nil block-side t 4475 . 4476) (nil face web-mode-variable-name-face 4475 . 4476) (nil block-side t 4474 . 4475) (nil face web-mode-variable-name-face 4474 . 4475) (nil block-side t 4473 . 4474) (nil face web-mode-variable-name-face 4473 . 4474) (nil block-side t 4472 . 4473) (nil face web-mode-variable-name-face 4472 . 4473) (nil block-side t 4471 . 4472) (nil face web-mode-variable-name-face 4471 . 4472) (nil block-side t 4470 . 4471) (nil face web-mode-variable-name-face 4470 . 4471) (nil block-side t 4469 . 4470) (nil face web-mode-variable-name-face 4469 . 4470) (nil block-side t 4468 . 4469) (nil face web-mode-variable-name-face 4468 . 4469) (nil block-side t 4467 . 4468) (nil face web-mode-variable-name-face 4467 . 4468) (nil block-side t 4466 . 4467) (nil face web-mode-variable-name-face 4466 . 4467) (nil block-side t 4465 . 4466) (nil block-side t 4464 . 4465) (nil face web-mode-variable-name-face 4464 . 4465) (nil block-side t 4463 . 4464) (nil face web-mode-variable-name-face 4463 . 4464) (nil block-side t 4462 . 4463) (nil face web-mode-variable-name-face 4462 . 4463) (nil block-side t 4461 . 4462) (nil face web-mode-variable-name-face 4461 . 4462) (nil block-side t 4460 . 4461) (nil face web-mode-variable-name-face 4460 . 4461) (nil block-side t 4459 . 4460) (nil face web-mode-variable-name-face 4459 . 4460) (nil block-side t 4458 . 4459) (nil face web-mode-variable-name-face 4458 . 4459) (nil block-side t 4457 . 4458) (nil block-side t 4456 . 4457) (nil face (rainbow-delimiters-depth-3-face) 4456 . 4457) (nil block-side t 4455 . 4456) (nil face web-mode-variable-name-face 4455 . 4456) (nil block-side t 4453 . 4455) (nil block-side t 4452 . 4453) (nil block-token delimiter-beg 4452 . 4453) (nil font-lock-face web-mode-block-delimiter-face 4452 . 4453) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 4452 . 4453) (nil block-beg 0 4451 . 4452) (nil block-controls 0 4451 . 4452) (nil block-side t 4451 . 4452) (nil block-token delimiter-beg 4451 . 4452) (nil font-lock-face web-mode-block-delimiter-face 4451 . 4452) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 4451 . 4452) (nil tag-name "span" 4449 . 4450) (nil tag-type start 4449 . 4450) (nil tag-end t 4449 . 4450) (nil font-lock-face web-mode-html-tag-bracket-face 4449 . 4450) (nil tag-name "span" 4445 . 4449) (nil tag-type start 4445 . 4449) (nil font-lock-face web-mode-html-tag-face 4445 . 4449) (nil tag-name "span" 4444 . 4445) (nil tag-type start 4444 . 4445) (nil tag-beg 16 4444 . 4445) (nil font-lock-face web-mode-html-tag-bracket-face 4444 . 4445) (nil tag-name "template" 4430 . 4431) (nil tag-type end 4430 . 4431) (nil tag-end t 4430 . 4431) (nil font-lock-face web-mode-html-tag-bracket-face 4430 . 4431) (nil tag-name "template" 4422 . 4430) (nil tag-type end 4422 . 4430) (nil font-lock-face web-mode-html-tag-face 4422 . 4430) (nil tag-name "template" 4421 . 4422) (nil tag-type end 4421 . 4422) (nil font-lock-face web-mode-html-tag-bracket-face 4421 . 4422) (nil tag-name "template" 4420 . 4421) (nil tag-type end 4420 . 4421) (nil tag-beg 20 4420 . 4421) (nil font-lock-face web-mode-html-tag-bracket-face 4420 . 4421) (nil tag-name "v-btn" 4406 . 4407) (nil tag-type end 4406 . 4407) (nil tag-end t 4406 . 4407) (nil font-lock-face web-mode-html-tag-bracket-face 4406 . 4407) (nil tag-name "v-btn" 4401 . 4406) (nil tag-type end 4401 . 4406) (nil font-lock-face web-mode-html-tag-custom-face 4401 . 4406) (nil tag-name "v-btn" 4400 . 4401) (nil tag-type end 4400 . 4401) (nil font-lock-face web-mode-html-tag-bracket-face 4400 . 4401) (nil tag-name "v-btn" 4399 . 4400) (nil tag-type end 4399 . 4400) (nil tag-beg 22 4399 . 4400) (nil font-lock-face web-mode-html-tag-bracket-face 4399 . 4400) (nil tag-name "v-icon" 4383 . 4384) (nil tag-type end 4383 . 4384) (nil tag-end t 4383 . 4384) (nil font-lock-face web-mode-html-tag-bracket-face 4383 . 4384) (nil tag-name "v-icon" 4377 . 4383) (nil tag-type end 4377 . 4383) (nil font-lock-face web-mode-html-tag-custom-face 4377 . 4383) (nil tag-name "v-icon" 4376 . 4377) (nil tag-type end 4376 . 4377) (nil font-lock-face web-mode-html-tag-bracket-face 4376 . 4377) (nil tag-name "v-icon" 4375 . 4376) (nil tag-type end 4375 . 4376) (nil tag-beg 22 4375 . 4376) (nil font-lock-face web-mode-html-tag-bracket-face 4375 . 4376) (nil tag-name "v-icon" 4354 . 4355) (nil tag-type start 4354 . 4355) (nil tag-end t 4354 . 4355) (nil font-lock-face web-mode-html-tag-bracket-face 4354 . 4355) (nil tag-name "v-icon" 4348 . 4354) (nil tag-type start 4348 . 4354) (nil font-lock-face web-mode-html-tag-custom-face 4348 . 4354) (nil tag-name "v-icon" 4347 . 4348) (nil tag-type start 4347 . 4348) (nil tag-beg 18 4347 . 4348) (nil font-lock-face web-mode-html-tag-bracket-face 4347 . 4348) (nil tag-name "v-btn" 4329 . 4330) (nil tag-type start 4329 . 4330) (nil tag-end t 4329 . 4330) (nil font-lock-face web-mode-html-tag-bracket-face 4329 . 4330) (nil tag-name "v-btn" 4314 . 4329) (nil tag-type start 4314 . 4329) (nil block-side t 4313 . 4314) (nil block-end t 4313 . 4314) (nil block-token delimiter-end 4313 . 4314) (nil tag-attr t 4313 . 4314) (nil tag-attr-end 6 4313 . 4314) (nil tag-name "v-btn" 4313 . 4314) (nil tag-type start 4313 . 4314) (nil font-lock-face web-mode-block-delimiter-face 4313 . 4314) (nil block-side t 4312 . 4313) (nil tag-attr t 4312 . 4313) (nil tag-name "v-btn" 4312 . 4313) (nil tag-type start 4312 . 4313) (nil face web-mode-variable-name-face 4312 . 4313) (nil block-side t 4311 . 4312) (nil tag-attr t 4311 . 4312) (nil tag-name "v-btn" 4311 . 4312) (nil tag-type start 4311 . 4312) (nil face web-mode-variable-name-face 4311 . 4312) (nil block-side t 4310 . 4311) (nil tag-attr t 4310 . 4311) (nil tag-name "v-btn" 4310 . 4311) (nil tag-type start 4310 . 4311) (nil face web-mode-variable-name-face 4310 . 4311) (nil block-side t 4309 . 4310) (nil tag-attr t 4309 . 4310) (nil tag-name "v-btn" 4309 . 4310) (nil tag-type start 4309 . 4310) (nil face web-mode-variable-name-face 4309 . 4310) (nil block-side t 4308 . 4309) (nil tag-attr t 4308 . 4309) (nil tag-name "v-btn" 4308 . 4309) (nil tag-type start 4308 . 4309) (nil face web-mode-variable-name-face 4308 . 4309) (nil block-side t 4307 . 4308) (nil tag-attr t 4307 . 4308) (nil tag-name "v-btn" 4307 . 4308) (nil tag-type start 4307 . 4308) (nil face web-mode-variable-name-face 4307 . 4308) (nil block-side t 4306 . 4307) (nil tag-attr t 4306 . 4307) (nil tag-name "v-btn" 4306 . 4307) (nil tag-type start 4306 . 4307) (nil face web-mode-variable-name-face 4306 . 4307) (nil block-side t 4305 . 4306) (nil tag-attr t 4305 . 4306) (nil tag-name "v-btn" 4305 . 4306) (nil tag-type start 4305 . 4306) (nil face web-mode-variable-name-face 4305 . 4306) (nil block-side t 4304 . 4305) (nil tag-attr t 4304 . 4305) (nil tag-name "v-btn" 4304 . 4305) (nil tag-type start 4304 . 4305) (nil face web-mode-variable-name-face 4304 . 4305) (nil block-side t 4303 . 4304) (nil tag-attr t 4303 . 4304) (nil tag-name "v-btn" 4303 . 4304) (nil tag-type start 4303 . 4304) (nil face web-mode-variable-name-face 4303 . 4304) (nil block-side t 4302 . 4303) (nil tag-attr t 4302 . 4303) (nil tag-name "v-btn" 4302 . 4303) (nil tag-type start 4302 . 4303) (nil face web-mode-variable-name-face 4302 . 4303) (nil block-side t 4301 . 4302) (nil tag-attr t 4301 . 4302) (nil tag-name "v-btn" 4301 . 4302) (nil tag-type start 4301 . 4302) (nil face web-mode-variable-name-face 4301 . 4302) (nil block-side t 4300 . 4301) (nil tag-attr t 4300 . 4301) (nil tag-name "v-btn" 4300 . 4301) (nil tag-type start 4300 . 4301) (nil face web-mode-variable-name-face 4300 . 4301) (nil block-side t 4299 . 4300) (nil tag-attr t 4299 . 4300) (nil tag-name "v-btn" 4299 . 4300) (nil tag-type start 4299 . 4300) (nil face web-mode-variable-name-face 4299 . 4300) (nil block-side t 4298 . 4299) (nil tag-attr t 4298 . 4299) (nil tag-name "v-btn" 4298 . 4299) (nil tag-type start 4298 . 4299) (nil face web-mode-variable-name-face 4298 . 4299) (nil block-side t 4297 . 4298) (nil block-token delimiter-beg 4297 . 4298) (nil tag-attr t 4297 . 4298) (nil tag-name "v-btn" 4297 . 4298) (nil tag-type start 4297 . 4298) (nil font-lock-face web-mode-block-delimiter-face 4297 . 4298) (nil block-side t 4296 . 4297) (nil block-token delimiter-beg 4296 . 4297) (nil tag-attr t 4296 . 4297) (nil tag-name "v-btn" 4296 . 4297) (nil tag-type start 4296 . 4297) (nil font-lock-face web-mode-block-delimiter-face 4296 . 4297) (nil block-side t 4295 . 4296) (nil block-token delimiter-beg 4295 . 4296) (nil tag-attr t 4295 . 4296) (nil tag-name "v-btn" 4295 . 4296) (nil tag-type start 4295 . 4296) (nil font-lock-face web-mode-block-delimiter-face 4295 . 4296) (nil block-side t 4294 . 4295) (nil block-token delimiter-beg 4294 . 4295) (nil tag-attr t 4294 . 4295) (nil tag-name "v-btn" 4294 . 4295) (nil tag-type start 4294 . 4295) (nil font-lock-face web-mode-block-delimiter-face 4294 . 4295) (nil block-side t 4293 . 4294) (nil block-token delimiter-beg 4293 . 4294) (nil tag-attr t 4293 . 4294) (nil tag-name "v-btn" 4293 . 4294) (nil tag-type start 4293 . 4294) (nil font-lock-face web-mode-block-delimiter-face 4293 . 4294) (nil block-side t 4292 . 4293) (nil block-token delimiter-beg 4292 . 4293) (nil tag-attr t 4292 . 4293) (nil tag-name "v-btn" 4292 . 4293) (nil tag-type start 4292 . 4293) (nil font-lock-face web-mode-block-delimiter-face 4292 . 4293) (nil block-side t 4291 . 4292) (nil block-token delimiter-beg 4291 . 4292) (nil tag-attr t 4291 . 4292) (nil tag-name "v-btn" 4291 . 4292) (nil tag-type start 4291 . 4292) (nil font-lock-face web-mode-block-delimiter-face 4291 . 4292) (nil block-beg 0 4290 . 4291) (nil block-controls 0 4290 . 4291) (nil block-side t 4290 . 4291) (nil block-token delimiter-beg 4290 . 4291) (nil tag-attr-beg 2 4290 . 4291) (nil tag-attr t 4290 . 4291) (nil tag-name "v-btn" 4290 . 4291) (nil tag-type start 4290 . 4291) (nil font-lock-face web-mode-block-delimiter-face 4290 . 4291) (nil tag-name "v-btn" 4273 . 4290) (nil tag-type start 4273 . 4290) (nil block-side t 4272 . 4273) (nil block-end t 4272 . 4273) (nil block-token delimiter-end 4272 . 4273) (nil tag-attr t 4272 . 4273) (nil tag-attr-end 8 4272 . 4273) (nil tag-name "v-btn" 4272 . 4273) (nil tag-type start 4272 . 4273) (nil font-lock-face web-mode-block-delimiter-face 4272 . 4273) (nil block-side t 4271 . 4272) (nil tag-attr t 4271 . 4272) (nil tag-name "v-btn" 4271 . 4272) (nil tag-type start 4271 . 4272) (nil face web-mode-variable-name-face 4271 . 4272) (nil block-side t 4270 . 4271) (nil tag-attr t 4270 . 4271) (nil tag-name "v-btn" 4270 . 4271) (nil tag-type start 4270 . 4271) (nil face web-mode-variable-name-face 4270 . 4271) (nil block-side t 4269 . 4270) (nil tag-attr t 4269 . 4270) (nil tag-name "v-btn" 4269 . 4270) (nil tag-type start 4269 . 4270) (nil face web-mode-variable-name-face 4269 . 4270) (nil block-side t 4268 . 4269) (nil tag-attr t 4268 . 4269) (nil tag-name "v-btn" 4268 . 4269) (nil tag-type start 4268 . 4269) (nil face web-mode-variable-name-face 4268 . 4269) (nil block-side t 4267 . 4268) (nil tag-attr t 4267 . 4268) (nil tag-name "v-btn" 4267 . 4268) (nil tag-type start 4267 . 4268) (nil face web-mode-variable-name-face 4267 . 4268) (nil block-side t 4266 . 4267) (nil tag-attr t 4266 . 4267) (nil tag-name "v-btn" 4266 . 4267) (nil tag-type start 4266 . 4267) (nil face web-mode-variable-name-face 4266 . 4267) (nil block-side t 4265 . 4266) (nil tag-attr t 4265 . 4266) (nil tag-name "v-btn" 4265 . 4266) (nil tag-type start 4265 . 4266) (nil face web-mode-variable-name-face 4265 . 4266) (nil block-side t 4264 . 4265) (nil tag-attr t 4264 . 4265) (nil tag-name "v-btn" 4264 . 4265) (nil tag-type start 4264 . 4265) (nil face web-mode-variable-name-face 4264 . 4265) (nil block-side t 4263 . 4264) (nil tag-attr t 4263 . 4264) (nil tag-name "v-btn" 4263 . 4264) (nil tag-type start 4263 . 4264) (nil face web-mode-variable-name-face 4263 . 4264) (nil block-side t 4262 . 4263) (nil tag-attr t 4262 . 4263) (nil tag-name "v-btn" 4262 . 4263) (nil tag-type start 4262 . 4263) (nil face web-mode-variable-name-face 4262 . 4263) (nil block-side t 4261 . 4262) (nil block-token delimiter-beg 4261 . 4262) (nil tag-attr t 4261 . 4262) (nil tag-name "v-btn" 4261 . 4262) (nil tag-type start 4261 . 4262) (nil font-lock-face web-mode-block-delimiter-face 4261 . 4262) (nil block-side t 4260 . 4261) (nil block-token delimiter-beg 4260 . 4261) (nil tag-attr t 4260 . 4261) (nil tag-name "v-btn" 4260 . 4261) (nil tag-type start 4260 . 4261) (nil font-lock-face web-mode-block-delimiter-face 4260 . 4261) (nil block-side t 4259 . 4260) (nil block-token delimiter-beg 4259 . 4260) (nil tag-attr t 4259 . 4260) (nil tag-name "v-btn" 4259 . 4260) (nil tag-type start 4259 . 4260) (nil font-lock-face web-mode-block-delimiter-face 4259 . 4260) (nil block-side t 4258 . 4259) (nil block-token delimiter-beg 4258 . 4259) (nil tag-attr t 4258 . 4259) (nil tag-name "v-btn" 4258 . 4259) (nil tag-type start 4258 . 4259) (nil font-lock-face web-mode-block-delimiter-face 4258 . 4259) (nil block-side t 4257 . 4258) (nil block-token delimiter-beg 4257 . 4258) (nil tag-attr t 4257 . 4258) (nil tag-name "v-btn" 4257 . 4258) (nil tag-type start 4257 . 4258) (nil font-lock-face web-mode-block-delimiter-face 4257 . 4258) (nil block-side t 4256 . 4257) (nil block-token delimiter-beg 4256 . 4257) (nil tag-attr t 4256 . 4257) (nil tag-name "v-btn" 4256 . 4257) (nil tag-type start 4256 . 4257) (nil font-lock-face web-mode-block-delimiter-face 4256 . 4257) (nil block-side t 4255 . 4256) (nil block-token delimiter-beg 4255 . 4256) (nil tag-attr t 4255 . 4256) (nil tag-name "v-btn" 4255 . 4256) (nil tag-type start 4255 . 4256) (nil font-lock-face web-mode-block-delimiter-face 4255 . 4256) (nil block-side t 4254 . 4255) (nil block-token delimiter-beg 4254 . 4255) (nil tag-attr t 4254 . 4255) (nil tag-name "v-btn" 4254 . 4255) (nil tag-type start 4254 . 4255) (nil font-lock-face web-mode-block-delimiter-face 4254 . 4255) (nil block-side t 4253 . 4254) (nil block-token delimiter-beg 4253 . 4254) (nil tag-attr t 4253 . 4254) (nil tag-name "v-btn" 4253 . 4254) (nil tag-type start 4253 . 4254) (nil font-lock-face web-mode-block-delimiter-face 4253 . 4254) (nil block-beg 0 4252 . 4253) (nil block-controls 0 4252 . 4253) (nil block-side t 4252 . 4253) (nil block-token delimiter-beg 4252 . 4253) (nil tag-attr-beg 2 4252 . 4253) (nil tag-attr t 4252 . 4253) (nil tag-name "v-btn" 4252 . 4253) (nil tag-type start 4252 . 4253) (nil font-lock-face web-mode-block-delimiter-face 4252 . 4253) (nil tag-name "v-btn" 4235 . 4252) (nil tag-type start 4235 . 4252) (nil tag-attr t 4234 . 4235) (nil tag-attr-end 5 4234 . 4235) (nil tag-name "v-btn" 4234 . 4235) (nil tag-type start 4234 . 4235) (nil font-lock-face web-mode-html-attr-value-face 4234 . 4235) (nil tag-attr t 4222 . 4234) (nil tag-name "v-btn" 4222 . 4234) (nil tag-type start 4222 . 4234) (nil font-lock-face web-mode-html-attr-value-face 4222 . 4234) (nil tag-attr t 4221 . 4222) (nil tag-name "v-btn" 4221 . 4222) (nil tag-type start 4221 . 4222) (nil font-lock-face web-mode-html-attr-equal-face 4221 . 4222) (nil tag-attr t 4217 . 4221) (nil tag-name "v-btn" 4217 . 4221) (nil tag-type start 4217 . 4221) (nil font-lock-face web-mode-html-attr-name-face 4217 . 4221) (nil tag-attr-beg 0 4216 . 4217) (nil tag-attr t 4216 . 4217) (nil tag-name "v-btn" 4216 . 4217) (nil tag-type start 4216 . 4217) (nil font-lock-face web-mode-html-attr-name-face 4216 . 4217) (nil tag-name "v-btn" 4199 . 4216) (nil tag-type start 4199 . 4216) (nil tag-attr t 4198 . 4199) (nil tag-attr-end 0 4198 . 4199) (nil tag-name "v-btn" 4198 . 4199) (nil tag-type start 4198 . 4199) (nil font-lock-face web-mode-html-attr-name-face 4198 . 4199) (nil tag-attr t 4195 . 4198) (nil tag-name "v-btn" 4195 . 4198) (nil tag-type start 4195 . 4198) (nil font-lock-face web-mode-html-attr-name-face 4195 . 4198) (nil tag-attr-beg 0 4194 . 4195) (nil tag-attr t 4194 . 4195) (nil tag-name "v-btn" 4194 . 4195) (nil tag-type start 4194 . 4195) (nil font-lock-face web-mode-html-attr-name-face 4194 . 4195) (nil tag-name "v-btn" 4177 . 4194) (nil tag-type start 4177 . 4194) (nil tag-attr t 4176 . 4177) (nil tag-attr-end 0 4176 . 4177) (nil tag-name "v-btn" 4176 . 4177) (nil tag-type start 4176 . 4177) (nil font-lock-face web-mode-html-attr-name-face 4176 . 4177) (nil tag-attr t 4174 . 4176) (nil tag-name "v-btn" 4174 . 4176) (nil tag-type start 4174 . 4176) (nil font-lock-face web-mode-html-attr-name-face 4174 . 4176) (nil tag-attr-beg 0 4173 . 4174) (nil tag-attr t 4173 . 4174) (nil tag-name "v-btn" 4173 . 4174) (nil tag-type start 4173 . 4174) (nil font-lock-face web-mode-html-attr-name-face 4173 . 4174) (nil tag-name "v-btn" 4156 . 4173) (nil tag-type start 4156 . 4173) (nil tag-attr t 4155 . 4156) (nil tag-attr-end 4 4155 . 4156) (nil tag-name "v-btn" 4155 . 4156) (nil tag-type start 4155 . 4156) (nil font-lock-face web-mode-html-attr-value-face 4155 . 4156) (nil tag-attr t 4152 . 4155) (nil tag-name "v-btn" 4152 . 4155) (nil tag-type start 4152 . 4155) (nil font-lock-face web-mode-html-attr-value-face 4152 . 4155) (nil tag-attr t 4151 . 4152) (nil tag-name "v-btn" 4151 . 4152) (nil tag-type start 4151 . 4152) (nil font-lock-face web-mode-html-attr-equal-face 4151 . 4152) (nil tag-attr t 4148 . 4151) (nil tag-name "v-btn" 4148 . 4151) (nil tag-type start 4148 . 4151) (nil font-lock-face web-mode-html-attr-engine-face 4148 . 4151) (nil tag-attr-beg 2 4147 . 4148) (nil tag-attr t 4147 . 4148) (nil tag-name "v-btn" 4147 . 4148) (nil tag-type start 4147 . 4148) (nil font-lock-face web-mode-html-attr-engine-face 4147 . 4148) (nil tag-name "v-btn" 4130 . 4147) (nil tag-type start 4130 . 4147) (nil tag-attr t 4129 . 4130) (nil tag-attr-end 6 4129 . 4130) (nil tag-name "v-btn" 4129 . 4130) (nil tag-type start 4129 . 4130) (nil font-lock-face web-mode-html-attr-value-face 4129 . 4130) (nil tag-attr t 4123 . 4129) (nil tag-name "v-btn" 4123 . 4129) (nil tag-type start 4123 . 4129) (nil font-lock-face web-mode-html-attr-value-face 4123 . 4129) (nil tag-attr t 4122 . 4123) (nil tag-name "v-btn" 4122 . 4123) (nil tag-type start 4122 . 4123) (nil font-lock-face web-mode-html-attr-equal-face 4122 . 4123) (nil tag-attr t 4117 . 4122) (nil tag-name "v-btn" 4117 . 4122) (nil tag-type start 4117 . 4122) (nil font-lock-face web-mode-html-attr-engine-face 4117 . 4122) (nil tag-attr-beg 2 4116 . 4117) (nil tag-attr t 4116 . 4117) (nil tag-name "v-btn" 4116 . 4117) (nil tag-type start 4116 . 4117) (nil font-lock-face web-mode-html-attr-engine-face 4116 . 4117) (nil tag-name "v-btn" 4099 . 4116) (nil tag-type start 4099 . 4116) (nil tag-name "v-btn" 4094 . 4099) (nil tag-type start 4094 . 4099) (nil font-lock-face web-mode-html-tag-custom-face 4094 . 4099) (nil tag-name "v-btn" 4093 . 4094) (nil tag-type start 4093 . 4094) (nil tag-beg 19 4093 . 4094) (nil font-lock-face web-mode-html-tag-bracket-face 4093 . 4094) (nil tag-name "template" 4077 . 4078) (nil tag-type start 4077 . 4078) (nil tag-end t 4077 . 4078) (nil font-lock-face web-mode-html-tag-bracket-face 4077 . 4078) (nil block-side t 4076 . 4077) (nil block-end t 4076 . 4077) (nil block-token delimiter-end 4076 . 4077) (nil tag-attr t 4076 . 4077) (nil tag-attr-end 16 4076 . 4077) (nil tag-name "template" 4076 . 4077) (nil tag-type start 4076 . 4077) (nil font-lock-face web-mode-block-delimiter-face 4076 . 4077) (nil block-side t 4074 . 4076) (nil tag-attr t 4074 . 4076) (nil tag-name "template" 4074 . 4076) (nil tag-type start 4074 . 4076) (nil block-side t 4073 . 4074) (nil tag-attr t 4073 . 4074) (nil tag-name "template" 4073 . 4074) (nil tag-type start 4073 . 4074) (nil face web-mode-variable-name-face 4073 . 4074) (nil block-side t 4072 . 4073) (nil tag-attr t 4072 . 4073) (nil tag-name "template" 4072 . 4073) (nil tag-type start 4072 . 4073) (nil face web-mode-variable-name-face 4072 . 4073) (nil block-side t 4071 . 4072) (nil tag-attr t 4071 . 4072) (nil tag-name "template" 4071 . 4072) (nil tag-type start 4071 . 4072) (nil face web-mode-variable-name-face 4071 . 4072) (nil block-side t 4070 . 4071) (nil tag-attr t 4070 . 4071) (nil tag-name "template" 4070 . 4071) (nil tag-type start 4070 . 4071) (nil face web-mode-variable-name-face 4070 . 4071) (nil block-side t 4069 . 4070) (nil tag-attr t 4069 . 4070) (nil tag-name "template" 4069 . 4070) (nil tag-type start 4069 . 4070) (nil face web-mode-variable-name-face 4069 . 4070) (nil block-side t 4067 . 4069) (nil tag-attr t 4067 . 4069) (nil tag-name "template" 4067 . 4069) (nil tag-type start 4067 . 4069) (nil block-side t 4066 . 4067) (nil tag-attr t 4066 . 4067) (nil tag-name "template" 4066 . 4067) (nil tag-type start 4066 . 4067) (nil face web-mode-variable-name-face 4066 . 4067) (nil block-side t 4065 . 4066) (nil tag-attr t 4065 . 4066) (nil tag-name "template" 4065 . 4066) (nil tag-type start 4065 . 4066) (nil face web-mode-variable-name-face 4065 . 4066) (nil block-side t 4063 . 4065) (nil tag-attr t 4063 . 4065) (nil tag-name "template" 4063 . 4065) (nil tag-type start 4063 . 4065) (nil block-side t 4062 . 4063) (nil block-token delimiter-beg 4062 . 4063) (nil tag-attr t 4062 . 4063) (nil tag-name "template" 4062 . 4063) (nil tag-type start 4062 . 4063) (nil font-lock-face web-mode-block-delimiter-face 4062 . 4063) (nil block-side t 4061 . 4062) (nil block-token delimiter-beg 4061 . 4062) (nil tag-attr t 4061 . 4062) (nil tag-name "template" 4061 . 4062) (nil tag-type start 4061 . 4062) (nil font-lock-face web-mode-block-delimiter-face 4061 . 4062) (nil block-side t 4060 . 4061) (nil block-token delimiter-beg 4060 . 4061) (nil tag-attr t 4060 . 4061) (nil tag-name "template" 4060 . 4061) (nil tag-type start 4060 . 4061) (nil font-lock-face web-mode-block-delimiter-face 4060 . 4061) (nil block-side t 4059 . 4060) (nil block-token delimiter-beg 4059 . 4060) (nil tag-attr t 4059 . 4060) (nil tag-name "template" 4059 . 4060) (nil tag-type start 4059 . 4060) (nil font-lock-face web-mode-block-delimiter-face 4059 . 4060) (nil block-side t 4058 . 4059) (nil block-token delimiter-beg 4058 . 4059) (nil tag-attr t 4058 . 4059) (nil tag-name "template" 4058 . 4059) (nil tag-type start 4058 . 4059) (nil font-lock-face web-mode-block-delimiter-face 4058 . 4059) (nil block-side t 4057 . 4058) (nil block-token delimiter-beg 4057 . 4058) (nil tag-attr t 4057 . 4058) (nil tag-name "template" 4057 . 4058) (nil tag-type start 4057 . 4058) (nil font-lock-face web-mode-block-delimiter-face 4057 . 4058) (nil block-side t 4056 . 4057) (nil block-token delimiter-beg 4056 . 4057) (nil tag-attr t 4056 . 4057) (nil tag-name "template" 4056 . 4057) (nil tag-type start 4056 . 4057) (nil font-lock-face web-mode-block-delimiter-face 4056 . 4057) (nil block-side t 4055 . 4056) (nil block-token delimiter-beg 4055 . 4056) (nil tag-attr t 4055 . 4056) (nil tag-name "template" 4055 . 4056) (nil tag-type start 4055 . 4056) (nil font-lock-face web-mode-block-delimiter-face 4055 . 4056) (nil block-side t 4054 . 4055) (nil block-token delimiter-beg 4054 . 4055) (nil tag-attr t 4054 . 4055) (nil tag-name "template" 4054 . 4055) (nil tag-type start 4054 . 4055) (nil font-lock-face web-mode-block-delimiter-face 4054 . 4055) (nil block-side t 4053 . 4054) (nil block-token delimiter-beg 4053 . 4054) (nil tag-attr t 4053 . 4054) (nil tag-name "template" 4053 . 4054) (nil tag-type start 4053 . 4054) (nil font-lock-face web-mode-block-delimiter-face 4053 . 4054) (nil block-side t 4052 . 4053) (nil block-token delimiter-beg 4052 . 4053) (nil tag-attr t 4052 . 4053) (nil tag-name "template" 4052 . 4053) (nil tag-type start 4052 . 4053) (nil font-lock-face web-mode-block-delimiter-face 4052 . 4053) (nil block-beg 0 4051 . 4052) (nil block-controls 0 4051 . 4052) (nil block-side t 4051 . 4052) (nil block-token delimiter-beg 4051 . 4052) (nil tag-attr t 4051 . 4052) (nil tag-name "template" 4051 . 4052) (nil tag-type start 4051 . 4052) (nil font-lock-face web-mode-block-delimiter-face 4051 . 4052) (nil tag-attr t 4046 . 4051) (nil tag-name "template" 4046 . 4051) (nil tag-type start 4046 . 4051) (nil font-lock-face web-mode-html-attr-engine-face 4046 . 4051) (nil tag-attr-beg 2 4045 . 4046) (nil tag-attr t 4045 . 4046) (nil tag-name "template" 4045 . 4046) (nil tag-type start 4045 . 4046) (nil font-lock-face web-mode-html-attr-engine-face 4045 . 4046) (nil tag-name "template" 4044 . 4045) (nil tag-type start 4044 . 4045) (nil tag-name "template" 4036 . 4044) (nil tag-type start 4036 . 4044) (nil font-lock-face web-mode-html-tag-face 4036 . 4044) (nil tag-name "template" 4035 . 4036) (nil tag-type start 4035 . 4036) (nil tag-beg 17 4035 . 4036) (nil font-lock-face web-mode-html-tag-bracket-face 4035 . 4036) (nil tag-name "v-tooltip" 4021 . 4022) (nil tag-type start 4021 . 4022) (nil tag-end t 4021 . 4022) (nil font-lock-face web-mode-html-tag-bracket-face 4021 . 4022) (nil tag-attr t 4020 . 4021) (nil tag-attr-end 0 4020 . 4021) (nil tag-name "v-tooltip" 4020 . 4021) (nil tag-type start 4020 . 4021) (nil font-lock-face web-mode-html-attr-name-face 4020 . 4021) (nil tag-attr t 4019 . 4020) (nil tag-name "v-tooltip" 4019 . 4020) (nil tag-type start 4019 . 4020) (nil font-lock-face web-mode-html-attr-name-face 4019 . 4020) (nil tag-attr-beg 0 4018 . 4019) (nil tag-attr t 4018 . 4019) (nil tag-name "v-tooltip" 4018 . 4019) (nil tag-type start 4018 . 4019) (nil font-lock-face web-mode-html-attr-name-face 4018 . 4019) (nil tag-name "v-tooltip" 4017 . 4018) (nil tag-type start 4017 . 4018) (nil tag-name "v-tooltip" 4008 . 4017) (nil tag-type start 4008 . 4017) (nil font-lock-face web-mode-html-tag-custom-face 4008 . 4017) (nil tag-name "v-tooltip" 4007 . 4008) (nil tag-type start 4007 . 4008) (nil tag-beg 19 4007 . 4008) (nil font-lock-face web-mode-html-tag-bracket-face 4007 . 4008) (nil tag-name "v-tooltip" 3995 . 3996) (nil tag-type end 3995 . 3996) (nil tag-end t 3995 . 3996) (nil font-lock-face web-mode-html-tag-bracket-face 3995 . 3996) (nil tag-name "v-tooltip" 3986 . 3995) (nil tag-type end 3986 . 3995) (nil font-lock-face web-mode-html-tag-custom-face 3986 . 3995) (nil tag-name "v-tooltip" 3985 . 3986) (nil tag-type end 3985 . 3986) (nil font-lock-face web-mode-html-tag-bracket-face 3985 . 3986) (nil tag-name "v-tooltip" 3984 . 3985) (nil tag-type end 3984 . 3985) (nil tag-beg 22 3984 . 3985) (nil font-lock-face web-mode-html-tag-bracket-face 3984 . 3985) (nil tag-name "span" 3972 . 3973) (nil tag-type end 3972 . 3973) (nil tag-end t 3972 . 3973) (nil font-lock-face web-mode-html-tag-bracket-face 3972 . 3973) (nil tag-name "span" 3968 . 3972) (nil tag-type end 3968 . 3972) (nil font-lock-face web-mode-html-tag-face 3968 . 3972) (nil tag-name "span" 3967 . 3968) (nil tag-type end 3967 . 3968) (nil font-lock-face web-mode-html-tag-bracket-face 3967 . 3968) (nil tag-name "span" 3966 . 3967) (nil tag-type end 3966 . 3967) (nil tag-beg 20 3966 . 3967) (nil font-lock-face web-mode-html-tag-bracket-face 3966 . 3967) (nil block-side t 3964 . 3965) (nil block-end t 3964 . 3965) (nil block-token delimiter-end 3964 . 3965) (nil font-lock-face web-mode-block-delimiter-face 3964 . 3965) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3964 . 3965) (nil block-side t 3963 . 3964) (nil block-token delimiter-end 3963 . 3964) (nil font-lock-face web-mode-block-delimiter-face 3963 . 3964) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3963 . 3964) (nil block-side t 3962 . 3963) (nil face (rainbow-delimiters-depth-3-face) 3962 . 3963) (nil block-side t 3961 . 3962) (nil block-side t 3960 . 3961) (nil face web-mode-variable-name-face 3960 . 3961) (nil block-side t 3959 . 3960) (nil face web-mode-variable-name-face 3959 . 3960) (nil block-side t 3958 . 3959) (nil face web-mode-variable-name-face 3958 . 3959) (nil block-side t 3957 . 3958) (nil face web-mode-variable-name-face 3957 . 3958) (nil block-side t 3956 . 3957) (nil face web-mode-variable-name-face 3956 . 3957) (nil block-side t 3955 . 3956) (nil block-side t 3954 . 3955) (nil face web-mode-variable-name-face 3954 . 3955) (nil block-side t 3953 . 3954) (nil face web-mode-variable-name-face 3953 . 3954) (nil block-side t 3952 . 3953) (nil face web-mode-variable-name-face 3952 . 3953) (nil block-side t 3951 . 3952) (nil face web-mode-variable-name-face 3951 . 3952) (nil block-side t 3950 . 3951) (nil face web-mode-variable-name-face 3950 . 3951) (nil block-side t 3949 . 3950) (nil face web-mode-variable-name-face 3949 . 3950) (nil block-side t 3948 . 3949) (nil face web-mode-variable-name-face 3948 . 3949) (nil block-side t 3947 . 3948) (nil face web-mode-variable-name-face 3947 . 3948) (nil block-side t 3946 . 3947) (nil face web-mode-variable-name-face 3946 . 3947) (nil block-side t 3945 . 3946) (nil face web-mode-variable-name-face 3945 . 3946) (nil block-side t 3944 . 3945) (nil face web-mode-variable-name-face 3944 . 3945) (nil block-side t 3943 . 3944) (nil face web-mode-variable-name-face 3943 . 3944) (nil block-side t 3942 . 3943) (nil face web-mode-variable-name-face 3942 . 3943) (nil block-side t 3941 . 3942) (nil face web-mode-variable-name-face 3941 . 3942) (nil block-side t 3940 . 3941) (nil face web-mode-variable-name-face 3940 . 3941) (nil block-side t 3939 . 3940) (nil block-side t 3938 . 3939) (nil face (rainbow-delimiters-depth-3-face) 3938 . 3939) (nil block-side t 3937 . 3938) (nil face web-mode-variable-name-face 3937 . 3938) (nil block-side t 3936 . 3937) (nil block-side t 3935 . 3936) (nil block-token delimiter-beg 3935 . 3936) (nil font-lock-face web-mode-block-delimiter-face 3935 . 3936) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3935 . 3936) (nil block-beg 0 3934 . 3935) (nil block-controls 0 3934 . 3935) (nil block-side t 3934 . 3935) (nil block-token delimiter-beg 3934 . 3935) (nil font-lock-face web-mode-block-delimiter-face 3934 . 3935) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3934 . 3935) (nil tag-name "span" 3932 . 3933) (nil tag-type start 3932 . 3933) (nil tag-end t 3932 . 3933) (nil font-lock-face web-mode-html-tag-bracket-face 3932 . 3933) (nil tag-name "span" 3928 . 3932) (nil tag-type start 3928 . 3932) (nil font-lock-face web-mode-html-tag-face 3928 . 3932) (nil tag-name "span" 3927 . 3928) (nil tag-type start 3927 . 3928) (nil tag-beg 16 3927 . 3928) (nil font-lock-face web-mode-html-tag-bracket-face 3927 . 3928) (nil tag-name "template" 3913 . 3914) (nil tag-type end 3913 . 3914) (nil tag-end t 3913 . 3914) (nil font-lock-face web-mode-html-tag-bracket-face 3913 . 3914) (nil tag-name "template" 3905 . 3913) (nil tag-type end 3905 . 3913) (nil font-lock-face web-mode-html-tag-face 3905 . 3913) (nil tag-name "template" 3904 . 3905) (nil tag-type end 3904 . 3905) (nil font-lock-face web-mode-html-tag-bracket-face 3904 . 3905) (nil tag-name "template" 3903 . 3904) (nil tag-type end 3903 . 3904) (nil tag-beg 20 3903 . 3904) (nil font-lock-face web-mode-html-tag-bracket-face 3903 . 3904) (nil tag-name "v-btn" 3889 . 3890) (nil tag-type end 3889 . 3890) (nil tag-end t 3889 . 3890) (nil font-lock-face web-mode-html-tag-bracket-face 3889 . 3890) (nil tag-name "v-btn" 3884 . 3889) (nil tag-type end 3884 . 3889) (nil font-lock-face web-mode-html-tag-custom-face 3884 . 3889) (nil tag-name "v-btn" 3883 . 3884) (nil tag-type end 3883 . 3884) (nil font-lock-face web-mode-html-tag-bracket-face 3883 . 3884) (nil tag-name "v-btn" 3882 . 3883) (nil tag-type end 3882 . 3883) (nil tag-beg 22 3882 . 3883) (nil font-lock-face web-mode-html-tag-bracket-face 3882 . 3883) (nil tag-name "v-icon" 3866 . 3867) (nil tag-type end 3866 . 3867) (nil tag-end t 3866 . 3867) (nil font-lock-face web-mode-html-tag-bracket-face 3866 . 3867) (nil tag-name "v-icon" 3860 . 3866) (nil tag-type end 3860 . 3866) (nil font-lock-face web-mode-html-tag-custom-face 3860 . 3866) (nil tag-name "v-icon" 3859 . 3860) (nil tag-type end 3859 . 3860) (nil font-lock-face web-mode-html-tag-bracket-face 3859 . 3860) (nil tag-name "v-icon" 3858 . 3859) (nil tag-type end 3858 . 3859) (nil tag-beg 22 3858 . 3859) (nil font-lock-face web-mode-html-tag-bracket-face 3858 . 3859) (nil tag-name "v-icon" 3840 . 3841) (nil tag-type start 3840 . 3841) (nil tag-end t 3840 . 3841) (nil font-lock-face web-mode-html-tag-bracket-face 3840 . 3841) (nil tag-name "v-icon" 3834 . 3840) (nil tag-type start 3834 . 3840) (nil font-lock-face web-mode-html-tag-custom-face 3834 . 3840) (nil tag-name "v-icon" 3833 . 3834) (nil tag-type start 3833 . 3834) (nil tag-beg 18 3833 . 3834) (nil font-lock-face web-mode-html-tag-bracket-face 3833 . 3834) (nil tag-name "v-btn" 3815 . 3816) (nil tag-type start 3815 . 3816) (nil tag-end t 3815 . 3816) (nil font-lock-face web-mode-html-tag-bracket-face 3815 . 3816) (nil tag-name "v-btn" 3800 . 3815) (nil tag-type start 3800 . 3815) (nil block-side t 3799 . 3800) (nil block-end t 3799 . 3800) (nil block-token delimiter-end 3799 . 3800) (nil tag-attr t 3799 . 3800) (nil tag-attr-end 6 3799 . 3800) (nil tag-name "v-btn" 3799 . 3800) (nil tag-type start 3799 . 3800) (nil font-lock-face web-mode-block-delimiter-face 3799 . 3800) (nil block-side t 3798 . 3799) (nil tag-attr t 3798 . 3799) (nil tag-name "v-btn" 3798 . 3799) (nil tag-type start 3798 . 3799) (nil face web-mode-variable-name-face 3798 . 3799) (nil block-side t 3797 . 3798) (nil tag-attr t 3797 . 3798) (nil tag-name "v-btn" 3797 . 3798) (nil tag-type start 3797 . 3798) (nil face web-mode-variable-name-face 3797 . 3798) (nil block-side t 3796 . 3797) (nil tag-attr t 3796 . 3797) (nil tag-name "v-btn" 3796 . 3797) (nil tag-type start 3796 . 3797) (nil face web-mode-variable-name-face 3796 . 3797) (nil block-side t 3795 . 3796) (nil tag-attr t 3795 . 3796) (nil tag-name "v-btn" 3795 . 3796) (nil tag-type start 3795 . 3796) (nil face web-mode-variable-name-face 3795 . 3796) (nil block-side t 3792 . 3795) (nil tag-attr t 3792 . 3795) (nil tag-name "v-btn" 3792 . 3795) (nil tag-type start 3792 . 3795) (nil block-side t 3791 . 3792) (nil tag-attr t 3791 . 3792) (nil tag-name "v-btn" 3791 . 3792) (nil tag-type start 3791 . 3792) (nil face web-mode-variable-name-face 3791 . 3792) (nil block-side t 3790 . 3791) (nil tag-attr t 3790 . 3791) (nil tag-name "v-btn" 3790 . 3791) (nil tag-type start 3790 . 3791) (nil face web-mode-variable-name-face 3790 . 3791) (nil block-side t 3789 . 3790) (nil tag-attr t 3789 . 3790) (nil tag-name "v-btn" 3789 . 3790) (nil tag-type start 3789 . 3790) (nil face web-mode-variable-name-face 3789 . 3790) (nil block-side t 3788 . 3789) (nil tag-attr t 3788 . 3789) (nil tag-name "v-btn" 3788 . 3789) (nil tag-type start 3788 . 3789) (nil face web-mode-variable-name-face 3788 . 3789) (nil block-side t 3787 . 3788) (nil tag-attr t 3787 . 3788) (nil tag-name "v-btn" 3787 . 3788) (nil tag-type start 3787 . 3788) (nil face web-mode-variable-name-face 3787 . 3788) (nil block-side t 3786 . 3787) (nil tag-attr t 3786 . 3787) (nil tag-name "v-btn" 3786 . 3787) (nil tag-type start 3786 . 3787) (nil face web-mode-variable-name-face 3786 . 3787) (nil block-side t 3785 . 3786) (nil tag-attr t 3785 . 3786) (nil tag-name "v-btn" 3785 . 3786) (nil tag-type start 3785 . 3786) (nil face web-mode-variable-name-face 3785 . 3786) (nil block-side t 3784 . 3785) (nil tag-attr t 3784 . 3785) (nil tag-name "v-btn" 3784 . 3785) (nil tag-type start 3784 . 3785) (nil face web-mode-variable-name-face 3784 . 3785) (nil block-side t 3783 . 3784) (nil tag-attr t 3783 . 3784) (nil tag-name "v-btn" 3783 . 3784) (nil tag-type start 3783 . 3784) (nil face web-mode-variable-name-face 3783 . 3784) (nil block-side t 3782 . 3783) (nil tag-attr t 3782 . 3783) (nil tag-name "v-btn" 3782 . 3783) (nil tag-type start 3782 . 3783) (nil face web-mode-variable-name-face 3782 . 3783) (nil block-side t 3781 . 3782) (nil tag-attr t 3781 . 3782) (nil tag-name "v-btn" 3781 . 3782) (nil tag-type start 3781 . 3782) (nil face web-mode-variable-name-face 3781 . 3782) (nil block-side t 3780 . 3781) (nil block-token delimiter-beg 3780 . 3781) (nil tag-attr t 3780 . 3781) (nil tag-name "v-btn" 3780 . 3781) (nil tag-type start 3780 . 3781) (nil font-lock-face web-mode-block-delimiter-face 3780 . 3781) (nil block-side t 3779 . 3780) (nil block-token delimiter-beg 3779 . 3780) (nil tag-attr t 3779 . 3780) (nil tag-name "v-btn" 3779 . 3780) (nil tag-type start 3779 . 3780) (nil font-lock-face web-mode-block-delimiter-face 3779 . 3780) (nil block-side t 3778 . 3779) (nil block-token delimiter-beg 3778 . 3779) (nil tag-attr t 3778 . 3779) (nil tag-name "v-btn" 3778 . 3779) (nil tag-type start 3778 . 3779) (nil font-lock-face web-mode-block-delimiter-face 3778 . 3779) (nil block-side t 3777 . 3778) (nil block-token delimiter-beg 3777 . 3778) (nil tag-attr t 3777 . 3778) (nil tag-name "v-btn" 3777 . 3778) (nil tag-type start 3777 . 3778) (nil font-lock-face web-mode-block-delimiter-face 3777 . 3778) (nil block-side t 3776 . 3777) (nil block-token delimiter-beg 3776 . 3777) (nil tag-attr t 3776 . 3777) (nil tag-name "v-btn" 3776 . 3777) (nil tag-type start 3776 . 3777) (nil font-lock-face web-mode-block-delimiter-face 3776 . 3777) (nil block-side t 3775 . 3776) (nil block-token delimiter-beg 3775 . 3776) (nil tag-attr t 3775 . 3776) (nil tag-name "v-btn" 3775 . 3776) (nil tag-type start 3775 . 3776) (nil font-lock-face web-mode-block-delimiter-face 3775 . 3776) (nil block-side t 3774 . 3775) (nil block-token delimiter-beg 3774 . 3775) (nil tag-attr t 3774 . 3775) (nil tag-name "v-btn" 3774 . 3775) (nil tag-type start 3774 . 3775) (nil font-lock-face web-mode-block-delimiter-face 3774 . 3775) (nil block-beg 0 3773 . 3774) (nil block-controls 0 3773 . 3774) (nil block-side t 3773 . 3774) (nil block-token delimiter-beg 3773 . 3774) (nil tag-attr-beg 2 3773 . 3774) (nil tag-attr t 3773 . 3774) (nil tag-name "v-btn" 3773 . 3774) (nil tag-type start 3773 . 3774) (nil font-lock-face web-mode-block-delimiter-face 3773 . 3774) (nil tag-name "v-btn" 3756 . 3773) (nil tag-type start 3756 . 3773) (nil tag-attr t 3755 . 3756) (nil tag-attr-end 5 3755 . 3756) (nil tag-name "v-btn" 3755 . 3756) (nil tag-type start 3755 . 3756) (nil font-lock-face web-mode-html-attr-value-face 3755 . 3756) (nil tag-attr t 3743 . 3755) (nil tag-name "v-btn" 3743 . 3755) (nil tag-type start 3743 . 3755) (nil font-lock-face web-mode-html-attr-value-face 3743 . 3755) (nil tag-attr t 3742 . 3743) (nil tag-name "v-btn" 3742 . 3743) (nil tag-type start 3742 . 3743) (nil font-lock-face web-mode-html-attr-equal-face 3742 . 3743) (nil tag-attr t 3738 . 3742) (nil tag-name "v-btn" 3738 . 3742) (nil tag-type start 3738 . 3742) (nil font-lock-face web-mode-html-attr-name-face 3738 . 3742) (nil tag-attr-beg 0 3737 . 3738) (nil tag-attr t 3737 . 3738) (nil tag-name "v-btn" 3737 . 3738) (nil tag-type start 3737 . 3738) (nil font-lock-face web-mode-html-attr-name-face 3737 . 3738) (nil tag-name "v-btn" 3720 . 3737) (nil tag-type start 3720 . 3737) (nil tag-attr t 3719 . 3720) (nil tag-attr-end 0 3719 . 3720) (nil tag-name "v-btn" 3719 . 3720) (nil tag-type start 3719 . 3720) (nil font-lock-face web-mode-html-attr-name-face 3719 . 3720) (nil tag-attr t 3716 . 3719) (nil tag-name "v-btn" 3716 . 3719) (nil tag-type start 3716 . 3719) (nil font-lock-face web-mode-html-attr-name-face 3716 . 3719) (nil tag-attr-beg 0 3715 . 3716) (nil tag-attr t 3715 . 3716) (nil tag-name "v-btn" 3715 . 3716) (nil tag-type start 3715 . 3716) (nil font-lock-face web-mode-html-attr-name-face 3715 . 3716) (nil tag-name "v-btn" 3698 . 3715) (nil tag-type start 3698 . 3715) (nil tag-attr t 3697 . 3698) (nil tag-attr-end 0 3697 . 3698) (nil tag-name "v-btn" 3697 . 3698) (nil tag-type start 3697 . 3698) (nil font-lock-face web-mode-html-attr-name-face 3697 . 3698) (nil tag-attr t 3695 . 3697) (nil tag-name "v-btn" 3695 . 3697) (nil tag-type start 3695 . 3697) (nil font-lock-face web-mode-html-attr-name-face 3695 . 3697) (nil tag-attr-beg 0 3694 . 3695) (nil tag-attr t 3694 . 3695) (nil tag-name "v-btn" 3694 . 3695) (nil tag-type start 3694 . 3695) (nil font-lock-face web-mode-html-attr-name-face 3694 . 3695) (nil tag-name "v-btn" 3677 . 3694) (nil tag-type start 3677 . 3694) (nil tag-attr t 3676 . 3677) (nil tag-attr-end 4 3676 . 3677) (nil tag-name "v-btn" 3676 . 3677) (nil tag-type start 3676 . 3677) (nil font-lock-face web-mode-html-attr-value-face 3676 . 3677) (nil tag-attr t 3673 . 3676) (nil tag-name "v-btn" 3673 . 3676) (nil tag-type start 3673 . 3676) (nil font-lock-face web-mode-html-attr-value-face 3673 . 3676) (nil tag-attr t 3672 . 3673) (nil tag-name "v-btn" 3672 . 3673) (nil tag-type start 3672 . 3673) (nil font-lock-face web-mode-html-attr-equal-face 3672 . 3673) (nil tag-attr t 3669 . 3672) (nil tag-name "v-btn" 3669 . 3672) (nil tag-type start 3669 . 3672) (nil font-lock-face web-mode-html-attr-engine-face 3669 . 3672) (nil tag-attr-beg 2 3668 . 3669) (nil tag-attr t 3668 . 3669) (nil tag-name "v-btn" 3668 . 3669) (nil tag-type start 3668 . 3669) (nil font-lock-face web-mode-html-attr-engine-face 3668 . 3669) (nil tag-name "v-btn" 3651 . 3668) (nil tag-type start 3651 . 3668) (nil tag-attr t 3650 . 3651) (nil tag-attr-end 6 3650 . 3651) (nil tag-name "v-btn" 3650 . 3651) (nil tag-type start 3650 . 3651) (nil font-lock-face web-mode-html-attr-value-face 3650 . 3651) (nil tag-attr t 3644 . 3650) (nil tag-name "v-btn" 3644 . 3650) (nil tag-type start 3644 . 3650) (nil font-lock-face web-mode-html-attr-value-face 3644 . 3650) (nil tag-attr t 3643 . 3644) (nil tag-name "v-btn" 3643 . 3644) (nil tag-type start 3643 . 3644) (nil font-lock-face web-mode-html-attr-equal-face 3643 . 3644) (nil tag-attr t 3638 . 3643) (nil tag-name "v-btn" 3638 . 3643) (nil tag-type start 3638 . 3643) (nil font-lock-face web-mode-html-attr-engine-face 3638 . 3643) (nil tag-attr-beg 2 3637 . 3638) (nil tag-attr t 3637 . 3638) (nil tag-name "v-btn" 3637 . 3638) (nil tag-type start 3637 . 3638) (nil font-lock-face web-mode-html-attr-engine-face 3637 . 3638) (nil tag-name "v-btn" 3620 . 3637) (nil tag-type start 3620 . 3637) (nil tag-name "v-btn" 3615 . 3620) (nil tag-type start 3615 . 3620) (nil font-lock-face web-mode-html-tag-custom-face 3615 . 3620) (nil tag-name "v-btn" 3614 . 3615) (nil tag-type start 3614 . 3615) (nil tag-beg 19 3614 . 3615) (nil font-lock-face web-mode-html-tag-bracket-face 3614 . 3615) (nil tag-name "template" 3598 . 3599) (nil tag-type start 3598 . 3599) (nil tag-end t 3598 . 3599) (nil font-lock-face web-mode-html-tag-bracket-face 3598 . 3599) (nil block-side t 3597 . 3598) (nil block-end t 3597 . 3598) (nil block-token delimiter-end 3597 . 3598) (nil tag-attr t 3597 . 3598) (nil tag-attr-end 16 3597 . 3598) (nil tag-name "template" 3597 . 3598) (nil tag-type start 3597 . 3598) (nil font-lock-face web-mode-block-delimiter-face 3597 . 3598) (nil block-side t 3595 . 3597) (nil tag-attr t 3595 . 3597) (nil tag-name "template" 3595 . 3597) (nil tag-type start 3595 . 3597) (nil block-side t 3594 . 3595) (nil tag-attr t 3594 . 3595) (nil tag-name "template" 3594 . 3595) (nil tag-type start 3594 . 3595) (nil face web-mode-variable-name-face 3594 . 3595) (nil block-side t 3593 . 3594) (nil tag-attr t 3593 . 3594) (nil tag-name "template" 3593 . 3594) (nil tag-type start 3593 . 3594) (nil face web-mode-variable-name-face 3593 . 3594) (nil block-side t 3592 . 3593) (nil tag-attr t 3592 . 3593) (nil tag-name "template" 3592 . 3593) (nil tag-type start 3592 . 3593) (nil face web-mode-variable-name-face 3592 . 3593) (nil block-side t 3591 . 3592) (nil tag-attr t 3591 . 3592) (nil tag-name "template" 3591 . 3592) (nil tag-type start 3591 . 3592) (nil face web-mode-variable-name-face 3591 . 3592) (nil block-side t 3590 . 3591) (nil tag-attr t 3590 . 3591) (nil tag-name "template" 3590 . 3591) (nil tag-type start 3590 . 3591) (nil face web-mode-variable-name-face 3590 . 3591) (nil block-side t 3588 . 3590) (nil tag-attr t 3588 . 3590) (nil tag-name "template" 3588 . 3590) (nil tag-type start 3588 . 3590) (nil block-side t 3587 . 3588) (nil tag-attr t 3587 . 3588) (nil tag-name "template" 3587 . 3588) (nil tag-type start 3587 . 3588) (nil face web-mode-variable-name-face 3587 . 3588) (nil block-side t 3586 . 3587) (nil tag-attr t 3586 . 3587) (nil tag-name "template" 3586 . 3587) (nil tag-type start 3586 . 3587) (nil face web-mode-variable-name-face 3586 . 3587) (nil block-side t 3584 . 3586) (nil tag-attr t 3584 . 3586) (nil tag-name "template" 3584 . 3586) (nil tag-type start 3584 . 3586) (nil block-side t 3583 . 3584) (nil block-token delimiter-beg 3583 . 3584) (nil tag-attr t 3583 . 3584) (nil tag-name "template" 3583 . 3584) (nil tag-type start 3583 . 3584) (nil font-lock-face web-mode-block-delimiter-face 3583 . 3584) (nil block-side t 3582 . 3583) (nil block-token delimiter-beg 3582 . 3583) (nil tag-attr t 3582 . 3583) (nil tag-name "template" 3582 . 3583) (nil tag-type start 3582 . 3583) (nil font-lock-face web-mode-block-delimiter-face 3582 . 3583) (nil block-side t 3581 . 3582) (nil block-token delimiter-beg 3581 . 3582) (nil tag-attr t 3581 . 3582) (nil tag-name "template" 3581 . 3582) (nil tag-type start 3581 . 3582) (nil font-lock-face web-mode-block-delimiter-face 3581 . 3582) (nil block-side t 3580 . 3581) (nil block-token delimiter-beg 3580 . 3581) (nil tag-attr t 3580 . 3581) (nil tag-name "template" 3580 . 3581) (nil tag-type start 3580 . 3581) (nil font-lock-face web-mode-block-delimiter-face 3580 . 3581) (nil block-side t 3579 . 3580) (nil block-token delimiter-beg 3579 . 3580) (nil tag-attr t 3579 . 3580) (nil tag-name "template" 3579 . 3580) (nil tag-type start 3579 . 3580) (nil font-lock-face web-mode-block-delimiter-face 3579 . 3580) (nil block-side t 3578 . 3579) (nil block-token delimiter-beg 3578 . 3579) (nil tag-attr t 3578 . 3579) (nil tag-name "template" 3578 . 3579) (nil tag-type start 3578 . 3579) (nil font-lock-face web-mode-block-delimiter-face 3578 . 3579) (nil block-side t 3577 . 3578) (nil block-token delimiter-beg 3577 . 3578) (nil tag-attr t 3577 . 3578) (nil tag-name "template" 3577 . 3578) (nil tag-type start 3577 . 3578) (nil font-lock-face web-mode-block-delimiter-face 3577 . 3578) (nil block-side t 3576 . 3577) (nil block-token delimiter-beg 3576 . 3577) (nil tag-attr t 3576 . 3577) (nil tag-name "template" 3576 . 3577) (nil tag-type start 3576 . 3577) (nil font-lock-face web-mode-block-delimiter-face 3576 . 3577) (nil block-side t 3575 . 3576) (nil block-token delimiter-beg 3575 . 3576) (nil tag-attr t 3575 . 3576) (nil tag-name "template" 3575 . 3576) (nil tag-type start 3575 . 3576) (nil font-lock-face web-mode-block-delimiter-face 3575 . 3576) (nil block-side t 3574 . 3575) (nil block-token delimiter-beg 3574 . 3575) (nil tag-attr t 3574 . 3575) (nil tag-name "template" 3574 . 3575) (nil tag-type start 3574 . 3575) (nil font-lock-face web-mode-block-delimiter-face 3574 . 3575) (nil block-side t 3573 . 3574) (nil block-token delimiter-beg 3573 . 3574) (nil tag-attr t 3573 . 3574) (nil tag-name "template" 3573 . 3574) (nil tag-type start 3573 . 3574) (nil font-lock-face web-mode-block-delimiter-face 3573 . 3574) (nil block-beg 0 3572 . 3573) (nil block-controls 0 3572 . 3573) (nil block-side t 3572 . 3573) (nil block-token delimiter-beg 3572 . 3573) (nil tag-attr t 3572 . 3573) (nil tag-name "template" 3572 . 3573) (nil tag-type start 3572 . 3573) (nil font-lock-face web-mode-block-delimiter-face 3572 . 3573) (nil tag-attr t 3567 . 3572) (nil tag-name "template" 3567 . 3572) (nil tag-type start 3567 . 3572) (nil font-lock-face web-mode-html-attr-engine-face 3567 . 3572) (nil tag-attr-beg 2 3566 . 3567) (nil tag-attr t 3566 . 3567) (nil tag-name "template" 3566 . 3567) (nil tag-type start 3566 . 3567) (nil font-lock-face web-mode-html-attr-engine-face 3566 . 3567) (nil tag-name "template" 3565 . 3566) (nil tag-type start 3565 . 3566) (nil tag-name "template" 3557 . 3565) (nil tag-type start 3557 . 3565) (nil font-lock-face web-mode-html-tag-face 3557 . 3565) (nil tag-name "template" 3556 . 3557) (nil tag-type start 3556 . 3557) (nil tag-beg 17 3556 . 3557) (nil font-lock-face web-mode-html-tag-bracket-face 3556 . 3557) (nil tag-name "v-tooltip" 3542 . 3543) (nil tag-type start 3542 . 3543) (nil tag-end t 3542 . 3543) (nil font-lock-face web-mode-html-tag-bracket-face 3542 . 3543) (nil tag-attr t 3541 . 3542) (nil tag-attr-end 0 3541 . 3542) (nil tag-name "v-tooltip" 3541 . 3542) (nil tag-type start 3541 . 3542) (nil font-lock-face web-mode-html-attr-name-face 3541 . 3542) (nil tag-attr t 3540 . 3541) (nil tag-name "v-tooltip" 3540 . 3541) (nil tag-type start 3540 . 3541) (nil font-lock-face web-mode-html-attr-name-face 3540 . 3541) (nil tag-attr-beg 0 3539 . 3540) (nil tag-attr t 3539 . 3540) (nil tag-name "v-tooltip" 3539 . 3540) (nil tag-type start 3539 . 3540) (nil font-lock-face web-mode-html-attr-name-face 3539 . 3540) (nil tag-name "v-tooltip" 3538 . 3539) (nil tag-type start 3538 . 3539) (nil tag-name "v-tooltip" 3529 . 3538) (nil tag-type start 3529 . 3538) (nil font-lock-face web-mode-html-tag-custom-face 3529 . 3538) (nil tag-name "v-tooltip" 3528 . 3529) (nil tag-type start 3528 . 3529) (nil tag-beg 19 3528 . 3529) (nil font-lock-face web-mode-html-tag-bracket-face 3528 . 3529) (nil tag-name "v-tooltip" 3516 . 3517) (nil tag-type end 3516 . 3517) (nil tag-end t 3516 . 3517) (nil font-lock-face web-mode-html-tag-bracket-face 3516 . 3517) (nil tag-name "v-tooltip" 3507 . 3516) (nil tag-type end 3507 . 3516) (nil font-lock-face web-mode-html-tag-custom-face 3507 . 3516) (nil tag-name "v-tooltip" 3506 . 3507) (nil tag-type end 3506 . 3507) (nil font-lock-face web-mode-html-tag-bracket-face 3506 . 3507) (nil tag-name "v-tooltip" 3505 . 3506) (nil tag-type end 3505 . 3506) (nil tag-beg 22 3505 . 3506) (nil font-lock-face web-mode-html-tag-bracket-face 3505 . 3506) (nil tag-name "span" 3493 . 3494) (nil tag-type end 3493 . 3494) (nil tag-end t 3493 . 3494) (nil font-lock-face web-mode-html-tag-bracket-face 3493 . 3494) (nil tag-name "span" 3489 . 3493) (nil tag-type end 3489 . 3493) (nil font-lock-face web-mode-html-tag-face 3489 . 3493) (nil tag-name "span" 3488 . 3489) (nil tag-type end 3488 . 3489) (nil font-lock-face web-mode-html-tag-bracket-face 3488 . 3489) (nil tag-name "span" 3487 . 3488) (nil tag-type end 3487 . 3488) (nil tag-beg 20 3487 . 3488) (nil font-lock-face web-mode-html-tag-bracket-face 3487 . 3488) (nil block-side t 3486 . 3487) (nil block-end t 3486 . 3487) (nil block-token delimiter-end 3486 . 3487) (nil font-lock-face web-mode-block-delimiter-face 3486 . 3487) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3486 . 3487) (nil block-side t 3485 . 3486) (nil block-token delimiter-end 3485 . 3486) (nil font-lock-face web-mode-block-delimiter-face 3485 . 3486) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3485 . 3486) (nil block-side t 3484 . 3485) (nil face (rainbow-delimiters-depth-3-face) 3484 . 3485) (nil block-side t 3483 . 3484) (nil block-side t 3482 . 3483) (nil face web-mode-variable-name-face 3482 . 3483) (nil block-side t 3481 . 3482) (nil face web-mode-variable-name-face 3481 . 3482) (nil block-side t 3480 . 3481) (nil face web-mode-variable-name-face 3480 . 3481) (nil block-side t 3479 . 3480) (nil face web-mode-variable-name-face 3479 . 3480) (nil block-side t 3478 . 3479) (nil face web-mode-variable-name-face 3478 . 3479) (nil block-side t 3477 . 3478) (nil face web-mode-variable-name-face 3477 . 3478) (nil block-side t 3476 . 3477) (nil face web-mode-variable-name-face 3476 . 3477) (nil block-side t 3475 . 3476) (nil face web-mode-variable-name-face 3475 . 3476) (nil block-side t 3474 . 3475) (nil face web-mode-variable-name-face 3474 . 3475) (nil block-side t 3473 . 3474) (nil block-side t 3472 . 3473) (nil face web-mode-variable-name-face 3472 . 3473) (nil block-side t 3471 . 3472) (nil face web-mode-variable-name-face 3471 . 3472) (nil block-side t 3470 . 3471) (nil face web-mode-variable-name-face 3470 . 3471) (nil block-side t 3469 . 3470) (nil face web-mode-variable-name-face 3469 . 3470) (nil block-side t 3468 . 3469) (nil face web-mode-variable-name-face 3468 . 3469) (nil block-side t 3467 . 3468) (nil face web-mode-variable-name-face 3467 . 3468) (nil block-side t 3466 . 3467) (nil face web-mode-variable-name-face 3466 . 3467) (nil block-side t 3465 . 3466) (nil face web-mode-variable-name-face 3465 . 3466) (nil block-side t 3464 . 3465) (nil face web-mode-variable-name-face 3464 . 3465) (nil block-side t 3463 . 3464) (nil face web-mode-variable-name-face 3463 . 3464) (nil block-side t 3462 . 3463) (nil face web-mode-variable-name-face 3462 . 3463) (nil block-side t 3461 . 3462) (nil face web-mode-variable-name-face 3461 . 3462) (nil block-side t 3460 . 3461) (nil face web-mode-variable-name-face 3460 . 3461) (nil block-side t 3459 . 3460) (nil face web-mode-variable-name-face 3459 . 3460) (nil block-side t 3458 . 3459) (nil face web-mode-variable-name-face 3458 . 3459) (nil block-side t 3457 . 3458) (nil block-side t 3456 . 3457) (nil face (rainbow-delimiters-depth-3-face) 3456 . 3457) (nil block-side t 3455 . 3456) (nil face web-mode-variable-name-face 3455 . 3456) (nil block-side t 3454 . 3455) (nil block-side t 3453 . 3454) (nil block-token delimiter-beg 3453 . 3454) (nil font-lock-face web-mode-block-delimiter-face 3453 . 3454) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3453 . 3454) (nil block-beg 0 3452 . 3453) (nil block-controls 0 3452 . 3453) (nil block-side t 3452 . 3453) (nil block-token delimiter-beg 3452 . 3453) (nil font-lock-face web-mode-block-delimiter-face 3452 . 3453) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3452 . 3453) (nil tag-name "span" 3450 . 3451) (nil tag-type start 3450 . 3451) (nil tag-end t 3450 . 3451) (nil font-lock-face web-mode-html-tag-bracket-face 3450 . 3451) (nil tag-name "span" 3446 . 3450) (nil tag-type start 3446 . 3450) (nil font-lock-face web-mode-html-tag-face 3446 . 3450) (nil tag-name "span" 3445 . 3446) (nil tag-type start 3445 . 3446) (nil tag-beg 16 3445 . 3446) (nil font-lock-face web-mode-html-tag-bracket-face 3445 . 3446) (nil tag-name "template" 3431 . 3432) (nil tag-type end 3431 . 3432) (nil tag-end t 3431 . 3432) (nil font-lock-face web-mode-html-tag-bracket-face 3431 . 3432) (nil tag-name "template" 3423 . 3431) (nil tag-type end 3423 . 3431) (nil font-lock-face web-mode-html-tag-face 3423 . 3431) (nil tag-name "template" 3422 . 3423) (nil tag-type end 3422 . 3423) (nil font-lock-face web-mode-html-tag-bracket-face 3422 . 3423) (nil tag-name "template" 3421 . 3422) (nil tag-type end 3421 . 3422) (nil tag-beg 20 3421 . 3422) (nil font-lock-face web-mode-html-tag-bracket-face 3421 . 3422) (nil tag-name "v-btn" 3407 . 3408) (nil tag-type end 3407 . 3408) (nil tag-end t 3407 . 3408) (nil font-lock-face web-mode-html-tag-bracket-face 3407 . 3408) (nil tag-name "v-btn" 3402 . 3407) (nil tag-type end 3402 . 3407) (nil font-lock-face web-mode-html-tag-custom-face 3402 . 3407) (nil tag-name "v-btn" 3401 . 3402) (nil tag-type end 3401 . 3402) (nil font-lock-face web-mode-html-tag-bracket-face 3401 . 3402) (nil tag-name "v-btn" 3400 . 3401) (nil tag-type end 3400 . 3401) (nil tag-beg 22 3400 . 3401) (nil font-lock-face web-mode-html-tag-bracket-face 3400 . 3401) (nil tag-name "v-icon" 3384 . 3385) (nil tag-type end 3384 . 3385) (nil tag-end t 3384 . 3385) (nil font-lock-face web-mode-html-tag-bracket-face 3384 . 3385) (nil tag-name "v-icon" 3378 . 3384) (nil tag-type end 3378 . 3384) (nil font-lock-face web-mode-html-tag-custom-face 3378 . 3384) (nil tag-name "v-icon" 3377 . 3378) (nil tag-type end 3377 . 3378) (nil font-lock-face web-mode-html-tag-bracket-face 3377 . 3378) (nil tag-name "v-icon" 3376 . 3377) (nil tag-type end 3376 . 3377) (nil tag-beg 22 3376 . 3377) (nil font-lock-face web-mode-html-tag-bracket-face 3376 . 3377) (nil tag-name "v-icon" 3362 . 3363) (nil tag-type start 3362 . 3363) (nil tag-end t 3362 . 3363) (nil font-lock-face web-mode-html-tag-bracket-face 3362 . 3363) (nil tag-name "v-icon" 3356 . 3362) (nil tag-type start 3356 . 3362) (nil font-lock-face web-mode-html-tag-custom-face 3356 . 3362) (nil tag-name "v-icon" 3355 . 3356) (nil tag-type start 3355 . 3356) (nil tag-beg 18 3355 . 3356) (nil font-lock-face web-mode-html-tag-bracket-face 3355 . 3356) (nil tag-name "v-btn" 3337 . 3338) (nil tag-type start 3337 . 3338) (nil tag-end t 3337 . 3338) (nil font-lock-face web-mode-html-tag-bracket-face 3337 . 3338) (nil tag-name "v-btn" 3322 . 3337) (nil tag-type start 3322 . 3337) (nil block-side t 3321 . 3322) (nil block-end t 3321 . 3322) (nil block-token delimiter-end 3321 . 3322) (nil tag-attr t 3321 . 3322) (nil tag-attr-end 6 3321 . 3322) (nil tag-name "v-btn" 3321 . 3322) (nil tag-type start 3321 . 3322) (nil font-lock-face web-mode-block-delimiter-face 3321 . 3322) (nil block-side t 3320 . 3321) (nil tag-attr t 3320 . 3321) (nil tag-name "v-btn" 3320 . 3321) (nil tag-type start 3320 . 3321) (nil face web-mode-variable-name-face 3320 . 3321) (nil block-side t 3319 . 3320) (nil tag-attr t 3319 . 3320) (nil tag-name "v-btn" 3319 . 3320) (nil tag-type start 3319 . 3320) (nil face web-mode-variable-name-face 3319 . 3320) (nil block-side t 3318 . 3319) (nil tag-attr t 3318 . 3319) (nil tag-name "v-btn" 3318 . 3319) (nil tag-type start 3318 . 3319) (nil face web-mode-variable-name-face 3318 . 3319) (nil block-side t 3317 . 3318) (nil tag-attr t 3317 . 3318) (nil tag-name "v-btn" 3317 . 3318) (nil tag-type start 3317 . 3318) (nil face web-mode-variable-name-face 3317 . 3318) (nil block-side t 3316 . 3317) (nil tag-attr t 3316 . 3317) (nil tag-name "v-btn" 3316 . 3317) (nil tag-type start 3316 . 3317) (nil block-side t 3315 . 3316) (nil tag-attr t 3315 . 3316) (nil tag-name "v-btn" 3315 . 3316) (nil tag-type start 3315 . 3316) (nil face web-mode-variable-name-face 3315 . 3316) (nil block-side t 3314 . 3315) (nil tag-attr t 3314 . 3315) (nil tag-name "v-btn" 3314 . 3315) (nil tag-type start 3314 . 3315) (nil face web-mode-variable-name-face 3314 . 3315) (nil block-side t 3313 . 3314) (nil tag-attr t 3313 . 3314) (nil tag-name "v-btn" 3313 . 3314) (nil tag-type start 3313 . 3314) (nil face web-mode-variable-name-face 3313 . 3314) (nil block-side t 3312 . 3313) (nil tag-attr t 3312 . 3313) (nil tag-name "v-btn" 3312 . 3313) (nil tag-type start 3312 . 3313) (nil face web-mode-variable-name-face 3312 . 3313) (nil block-side t 3311 . 3312) (nil tag-attr t 3311 . 3312) (nil tag-name "v-btn" 3311 . 3312) (nil tag-type start 3311 . 3312) (nil face web-mode-variable-name-face 3311 . 3312) (nil block-side t 3310 . 3311) (nil tag-attr t 3310 . 3311) (nil tag-name "v-btn" 3310 . 3311) (nil tag-type start 3310 . 3311) (nil face web-mode-variable-name-face 3310 . 3311) (nil block-side t 3309 . 3310) (nil tag-attr t 3309 . 3310) (nil tag-name "v-btn" 3309 . 3310) (nil tag-type start 3309 . 3310) (nil face web-mode-variable-name-face 3309 . 3310) (nil block-side t 3308 . 3309) (nil tag-attr t 3308 . 3309) (nil tag-name "v-btn" 3308 . 3309) (nil tag-type start 3308 . 3309) (nil face web-mode-variable-name-face 3308 . 3309) (nil block-side t 3307 . 3308) (nil tag-attr t 3307 . 3308) (nil tag-name "v-btn" 3307 . 3308) (nil tag-type start 3307 . 3308) (nil face web-mode-variable-name-face 3307 . 3308) (nil block-side t 3306 . 3307) (nil tag-attr t 3306 . 3307) (nil tag-name "v-btn" 3306 . 3307) (nil tag-type start 3306 . 3307) (nil face web-mode-variable-name-face 3306 . 3307) (nil block-side t 3305 . 3306) (nil block-token delimiter-beg 3305 . 3306) (nil tag-attr t 3305 . 3306) (nil tag-name "v-btn" 3305 . 3306) (nil tag-type start 3305 . 3306) (nil font-lock-face web-mode-block-delimiter-face 3305 . 3306) (nil block-side t 3304 . 3305) (nil block-token delimiter-beg 3304 . 3305) (nil tag-attr t 3304 . 3305) (nil tag-name "v-btn" 3304 . 3305) (nil tag-type start 3304 . 3305) (nil font-lock-face web-mode-block-delimiter-face 3304 . 3305) (nil block-side t 3303 . 3304) (nil block-token delimiter-beg 3303 . 3304) (nil tag-attr t 3303 . 3304) (nil tag-name "v-btn" 3303 . 3304) (nil tag-type start 3303 . 3304) (nil font-lock-face web-mode-block-delimiter-face 3303 . 3304) (nil block-side t 3302 . 3303) (nil block-token delimiter-beg 3302 . 3303) (nil tag-attr t 3302 . 3303) (nil tag-name "v-btn" 3302 . 3303) (nil tag-type start 3302 . 3303) (nil font-lock-face web-mode-block-delimiter-face 3302 . 3303) (nil block-side t 3301 . 3302) (nil block-token delimiter-beg 3301 . 3302) (nil tag-attr t 3301 . 3302) (nil tag-name "v-btn" 3301 . 3302) (nil tag-type start 3301 . 3302) (nil font-lock-face web-mode-block-delimiter-face 3301 . 3302) (nil block-side t 3300 . 3301) (nil block-token delimiter-beg 3300 . 3301) (nil tag-attr t 3300 . 3301) (nil tag-name "v-btn" 3300 . 3301) (nil tag-type start 3300 . 3301) (nil font-lock-face web-mode-block-delimiter-face 3300 . 3301) (nil block-side t 3299 . 3300) (nil block-token delimiter-beg 3299 . 3300) (nil tag-attr t 3299 . 3300) (nil tag-name "v-btn" 3299 . 3300) (nil tag-type start 3299 . 3300) (nil font-lock-face web-mode-block-delimiter-face 3299 . 3300) (nil block-beg 0 3298 . 3299) (nil block-controls 0 3298 . 3299) (nil block-side t 3298 . 3299) (nil block-token delimiter-beg 3298 . 3299) (nil tag-attr-beg 2 3298 . 3299) (nil tag-attr t 3298 . 3299) (nil tag-name "v-btn" 3298 . 3299) (nil tag-type start 3298 . 3299) (nil font-lock-face web-mode-block-delimiter-face 3298 . 3299) (nil tag-name "v-btn" 3281 . 3298) (nil tag-type start 3281 . 3298) (nil tag-attr t 3280 . 3281) (nil tag-attr-end 5 3280 . 3281) (nil tag-name "v-btn" 3280 . 3281) (nil tag-type start 3280 . 3281) (nil font-lock-face web-mode-html-attr-value-face 3280 . 3281) (nil tag-attr t 3268 . 3280) (nil tag-name "v-btn" 3268 . 3280) (nil tag-type start 3268 . 3280) (nil font-lock-face web-mode-html-attr-value-face 3268 . 3280) (nil tag-attr t 3267 . 3268) (nil tag-name "v-btn" 3267 . 3268) (nil tag-type start 3267 . 3268) (nil font-lock-face web-mode-html-attr-equal-face 3267 . 3268) (nil tag-attr t 3263 . 3267) (nil tag-name "v-btn" 3263 . 3267) (nil tag-type start 3263 . 3267) (nil font-lock-face web-mode-html-attr-name-face 3263 . 3267) (nil tag-attr-beg 0 3262 . 3263) (nil tag-attr t 3262 . 3263) (nil tag-name "v-btn" 3262 . 3263) (nil tag-type start 3262 . 3263) (nil font-lock-face web-mode-html-attr-name-face 3262 . 3263) (nil tag-name "v-btn" 3245 . 3262) (nil tag-type start 3245 . 3262) (nil tag-attr t 3244 . 3245) (nil tag-attr-end 0 3244 . 3245) (nil tag-name "v-btn" 3244 . 3245) (nil tag-type start 3244 . 3245) (nil font-lock-face web-mode-html-attr-name-face 3244 . 3245) (nil tag-attr t 3241 . 3244) (nil tag-name "v-btn" 3241 . 3244) (nil tag-type start 3241 . 3244) (nil font-lock-face web-mode-html-attr-name-face 3241 . 3244) (nil tag-attr-beg 0 3240 . 3241) (nil tag-attr t 3240 . 3241) (nil tag-name "v-btn" 3240 . 3241) (nil tag-type start 3240 . 3241) (nil font-lock-face web-mode-html-attr-name-face 3240 . 3241) (nil tag-name "v-btn" 3223 . 3240) (nil tag-type start 3223 . 3240) (nil tag-attr t 3222 . 3223) (nil tag-attr-end 0 3222 . 3223) (nil tag-name "v-btn" 3222 . 3223) (nil tag-type start 3222 . 3223) (nil font-lock-face web-mode-html-attr-name-face 3222 . 3223) (nil tag-attr t 3220 . 3222) (nil tag-name "v-btn" 3220 . 3222) (nil tag-type start 3220 . 3222) (nil font-lock-face web-mode-html-attr-name-face 3220 . 3222) (nil tag-attr-beg 0 3219 . 3220) (nil tag-attr t 3219 . 3220) (nil tag-name "v-btn" 3219 . 3220) (nil tag-type start 3219 . 3220) (nil font-lock-face web-mode-html-attr-name-face 3219 . 3220) (nil tag-name "v-btn" 3202 . 3219) (nil tag-type start 3202 . 3219) (nil tag-attr t 3201 . 3202) (nil tag-attr-end 4 3201 . 3202) (nil tag-name "v-btn" 3201 . 3202) (nil tag-type start 3201 . 3202) (nil font-lock-face web-mode-html-attr-value-face 3201 . 3202) (nil tag-attr t 3198 . 3201) (nil tag-name "v-btn" 3198 . 3201) (nil tag-type start 3198 . 3201) (nil font-lock-face web-mode-html-attr-value-face 3198 . 3201) (nil tag-attr t 3197 . 3198) (nil tag-name "v-btn" 3197 . 3198) (nil tag-type start 3197 . 3198) (nil font-lock-face web-mode-html-attr-equal-face 3197 . 3198) (nil tag-attr t 3194 . 3197) (nil tag-name "v-btn" 3194 . 3197) (nil tag-type start 3194 . 3197) (nil font-lock-face web-mode-html-attr-engine-face 3194 . 3197) (nil tag-attr-beg 2 3193 . 3194) (nil tag-attr t 3193 . 3194) (nil tag-name "v-btn" 3193 . 3194) (nil tag-type start 3193 . 3194) (nil font-lock-face web-mode-html-attr-engine-face 3193 . 3194) (nil tag-name "v-btn" 3176 . 3193) (nil tag-type start 3176 . 3193) (nil tag-attr t 3175 . 3176) (nil tag-attr-end 6 3175 . 3176) (nil tag-name "v-btn" 3175 . 3176) (nil tag-type start 3175 . 3176) (nil font-lock-face web-mode-html-attr-value-face 3175 . 3176) (nil tag-attr t 3169 . 3175) (nil tag-name "v-btn" 3169 . 3175) (nil tag-type start 3169 . 3175) (nil font-lock-face web-mode-html-attr-value-face 3169 . 3175) (nil tag-attr t 3168 . 3169) (nil tag-name "v-btn" 3168 . 3169) (nil tag-type start 3168 . 3169) (nil font-lock-face web-mode-html-attr-equal-face 3168 . 3169) (nil tag-attr t 3163 . 3168) (nil tag-name "v-btn" 3163 . 3168) (nil tag-type start 3163 . 3168) (nil font-lock-face web-mode-html-attr-engine-face 3163 . 3168) (nil tag-attr-beg 2 3162 . 3163) (nil tag-attr t 3162 . 3163) (nil tag-name "v-btn" 3162 . 3163) (nil tag-type start 3162 . 3163) (nil font-lock-face web-mode-html-attr-engine-face 3162 . 3163) (nil tag-name "v-btn" 3145 . 3162) (nil tag-type start 3145 . 3162) (nil tag-name "v-btn" 3140 . 3145) (nil tag-type start 3140 . 3145) (nil font-lock-face web-mode-html-tag-custom-face 3140 . 3145) (nil tag-name "v-btn" 3139 . 3140) (nil tag-type start 3139 . 3140) (nil tag-beg 19 3139 . 3140) (nil font-lock-face web-mode-html-tag-bracket-face 3139 . 3140) (nil tag-name "template" 3123 . 3124) (nil tag-type start 3123 . 3124) (nil tag-end t 3123 . 3124) (nil font-lock-face web-mode-html-tag-bracket-face 3123 . 3124) (nil block-side t 3122 . 3123) (nil block-end t 3122 . 3123) (nil block-token delimiter-end 3122 . 3123) (nil tag-attr t 3122 . 3123) (nil tag-attr-end 16 3122 . 3123) (nil tag-name "template" 3122 . 3123) (nil tag-type start 3122 . 3123) (nil font-lock-face web-mode-block-delimiter-face 3122 . 3123) (nil block-side t 3120 . 3122) (nil tag-attr t 3120 . 3122) (nil tag-name "template" 3120 . 3122) (nil tag-type start 3120 . 3122) (nil block-side t 3119 . 3120) (nil tag-attr t 3119 . 3120) (nil tag-name "template" 3119 . 3120) (nil tag-type start 3119 . 3120) (nil face web-mode-variable-name-face 3119 . 3120) (nil block-side t 3118 . 3119) (nil tag-attr t 3118 . 3119) (nil tag-name "template" 3118 . 3119) (nil tag-type start 3118 . 3119) (nil face web-mode-variable-name-face 3118 . 3119) (nil block-side t 3117 . 3118) (nil tag-attr t 3117 . 3118) (nil tag-name "template" 3117 . 3118) (nil tag-type start 3117 . 3118) (nil face web-mode-variable-name-face 3117 . 3118) (nil block-side t 3116 . 3117) (nil tag-attr t 3116 . 3117) (nil tag-name "template" 3116 . 3117) (nil tag-type start 3116 . 3117) (nil face web-mode-variable-name-face 3116 . 3117) (nil block-side t 3115 . 3116) (nil tag-attr t 3115 . 3116) (nil tag-name "template" 3115 . 3116) (nil tag-type start 3115 . 3116) (nil face web-mode-variable-name-face 3115 . 3116) (nil block-side t 3113 . 3115) (nil tag-attr t 3113 . 3115) (nil tag-name "template" 3113 . 3115) (nil tag-type start 3113 . 3115) (nil block-side t 3112 . 3113) (nil tag-attr t 3112 . 3113) (nil tag-name "template" 3112 . 3113) (nil tag-type start 3112 . 3113) (nil face web-mode-variable-name-face 3112 . 3113) (nil block-side t 3111 . 3112) (nil tag-attr t 3111 . 3112) (nil tag-name "template" 3111 . 3112) (nil tag-type start 3111 . 3112) (nil face web-mode-variable-name-face 3111 . 3112) (nil block-side t 3109 . 3111) (nil tag-attr t 3109 . 3111) (nil tag-name "template" 3109 . 3111) (nil tag-type start 3109 . 3111) (nil block-side t 3108 . 3109) (nil block-token delimiter-beg 3108 . 3109) (nil tag-attr t 3108 . 3109) (nil tag-name "template" 3108 . 3109) (nil tag-type start 3108 . 3109) (nil font-lock-face web-mode-block-delimiter-face 3108 . 3109) (nil block-side t 3107 . 3108) (nil block-token delimiter-beg 3107 . 3108) (nil tag-attr t 3107 . 3108) (nil tag-name "template" 3107 . 3108) (nil tag-type start 3107 . 3108) (nil font-lock-face web-mode-block-delimiter-face 3107 . 3108) (nil block-side t 3106 . 3107) (nil block-token delimiter-beg 3106 . 3107) (nil tag-attr t 3106 . 3107) (nil tag-name "template" 3106 . 3107) (nil tag-type start 3106 . 3107) (nil font-lock-face web-mode-block-delimiter-face 3106 . 3107) (nil block-side t 3105 . 3106) (nil block-token delimiter-beg 3105 . 3106) (nil tag-attr t 3105 . 3106) (nil tag-name "template" 3105 . 3106) (nil tag-type start 3105 . 3106) (nil font-lock-face web-mode-block-delimiter-face 3105 . 3106) (nil block-side t 3104 . 3105) (nil block-token delimiter-beg 3104 . 3105) (nil tag-attr t 3104 . 3105) (nil tag-name "template" 3104 . 3105) (nil tag-type start 3104 . 3105) (nil font-lock-face web-mode-block-delimiter-face 3104 . 3105) (nil block-side t 3103 . 3104) (nil block-token delimiter-beg 3103 . 3104) (nil tag-attr t 3103 . 3104) (nil tag-name "template" 3103 . 3104) (nil tag-type start 3103 . 3104) (nil font-lock-face web-mode-block-delimiter-face 3103 . 3104) (nil block-side t 3102 . 3103) (nil block-token delimiter-beg 3102 . 3103) (nil tag-attr t 3102 . 3103) (nil tag-name "template" 3102 . 3103) (nil tag-type start 3102 . 3103) (nil font-lock-face web-mode-block-delimiter-face 3102 . 3103) (nil block-side t 3101 . 3102) (nil block-token delimiter-beg 3101 . 3102) (nil tag-attr t 3101 . 3102) (nil tag-name "template" 3101 . 3102) (nil tag-type start 3101 . 3102) (nil font-lock-face web-mode-block-delimiter-face 3101 . 3102) (nil block-side t 3100 . 3101) (nil block-token delimiter-beg 3100 . 3101) (nil tag-attr t 3100 . 3101) (nil tag-name "template" 3100 . 3101) (nil tag-type start 3100 . 3101) (nil font-lock-face web-mode-block-delimiter-face 3100 . 3101) (nil block-side t 3099 . 3100) (nil block-token delimiter-beg 3099 . 3100) (nil tag-attr t 3099 . 3100) (nil tag-name "template" 3099 . 3100) (nil tag-type start 3099 . 3100) (nil font-lock-face web-mode-block-delimiter-face 3099 . 3100) (nil block-side t 3098 . 3099) (nil block-token delimiter-beg 3098 . 3099) (nil tag-attr t 3098 . 3099) (nil tag-name "template" 3098 . 3099) (nil tag-type start 3098 . 3099) (nil font-lock-face web-mode-block-delimiter-face 3098 . 3099) (nil block-beg 0 3097 . 3098) (nil block-controls 0 3097 . 3098) (nil block-side t 3097 . 3098) (nil block-token delimiter-beg 3097 . 3098) (nil tag-attr t 3097 . 3098) (nil tag-name "template" 3097 . 3098) (nil tag-type start 3097 . 3098) (nil font-lock-face web-mode-block-delimiter-face 3097 . 3098) (nil tag-attr t 3092 . 3097) (nil tag-name "template" 3092 . 3097) (nil tag-type start 3092 . 3097) (nil font-lock-face web-mode-html-attr-engine-face 3092 . 3097) (nil tag-attr-beg 2 3091 . 3092) (nil tag-attr t 3091 . 3092) (nil tag-name "template" 3091 . 3092) (nil tag-type start 3091 . 3092) (nil font-lock-face web-mode-html-attr-engine-face 3091 . 3092) (nil tag-name "template" 3090 . 3091) (nil tag-type start 3090 . 3091) (nil tag-name "template" 3082 . 3090) (nil tag-type start 3082 . 3090) (nil font-lock-face web-mode-html-tag-face 3082 . 3090) (nil tag-name "template" 3081 . 3082) (nil tag-type start 3081 . 3082) (nil tag-beg 17 3081 . 3082) (nil font-lock-face web-mode-html-tag-bracket-face 3081 . 3082) (nil tag-name "v-tooltip" 3067 . 3068) (nil tag-type start 3067 . 3068) (nil tag-end t 3067 . 3068) (nil font-lock-face web-mode-html-tag-bracket-face 3067 . 3068) (nil tag-attr t 3066 . 3067) (nil tag-attr-end 0 3066 . 3067) (nil tag-name "v-tooltip" 3066 . 3067) (nil tag-type start 3066 . 3067) (nil font-lock-face web-mode-html-attr-name-face 3066 . 3067) (nil tag-attr t 3065 . 3066) (nil tag-name "v-tooltip" 3065 . 3066) (nil tag-type start 3065 . 3066) (nil font-lock-face web-mode-html-attr-name-face 3065 . 3066) (nil tag-attr-beg 0 3064 . 3065) (nil tag-attr t 3064 . 3065) (nil tag-name "v-tooltip" 3064 . 3065) (nil tag-type start 3064 . 3065) (nil font-lock-face web-mode-html-attr-name-face 3064 . 3065) (nil tag-name "v-tooltip" 3063 . 3064) (nil tag-type start 3063 . 3064) (nil tag-name "v-tooltip" 3054 . 3063) (nil tag-type start 3054 . 3063) (nil font-lock-face web-mode-html-tag-custom-face 3054 . 3063) (nil tag-name "v-tooltip" 3053 . 3054) (nil tag-type start 3053 . 3054) (nil tag-beg 19 3053 . 3054) (nil font-lock-face web-mode-html-tag-bracket-face 3053 . 3054) (nil tag-name "v-tooltip" 3041 . 3042) (nil tag-type end 3041 . 3042) (nil tag-end t 3041 . 3042) (nil font-lock-face web-mode-html-tag-bracket-face 3041 . 3042) (nil tag-name "v-tooltip" 3032 . 3041) (nil tag-type end 3032 . 3041) (nil font-lock-face web-mode-html-tag-custom-face 3032 . 3041) (nil tag-name "v-tooltip" 3031 . 3032) (nil tag-type end 3031 . 3032) (nil font-lock-face web-mode-html-tag-bracket-face 3031 . 3032) (nil tag-name "v-tooltip" 3030 . 3031) (nil tag-type end 3030 . 3031) (nil tag-beg 22 3030 . 3031) (nil font-lock-face web-mode-html-tag-bracket-face 3030 . 3031) (nil tag-name "span" 3018 . 3019) (nil tag-type end 3018 . 3019) (nil tag-end t 3018 . 3019) (nil font-lock-face web-mode-html-tag-bracket-face 3018 . 3019) (nil tag-name "span" 3014 . 3018) (nil tag-type end 3014 . 3018) (nil font-lock-face web-mode-html-tag-face 3014 . 3018) (nil tag-name "span" 3013 . 3014) (nil tag-type end 3013 . 3014) (nil font-lock-face web-mode-html-tag-bracket-face 3013 . 3014) (nil tag-name "span" 3012 . 3013) (nil tag-type end 3012 . 3013) (nil tag-beg 20 3012 . 3013) (nil font-lock-face web-mode-html-tag-bracket-face 3012 . 3013) (nil block-side t 3011 . 3012) (nil block-end t 3011 . 3012) (nil block-token delimiter-end 3011 . 3012) (nil font-lock-face web-mode-block-delimiter-face 3011 . 3012) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 3011 . 3012) (nil block-side t 3010 . 3011) (nil block-token delimiter-end 3010 . 3011) (nil font-lock-face web-mode-block-delimiter-face 3010 . 3011) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 3010 . 3011) (nil block-side t 3009 . 3010) (nil face (rainbow-delimiters-depth-3-face) 3009 . 3010) (nil block-side t 3008 . 3009) (nil block-side t 3007 . 3008) (nil face web-mode-variable-name-face 3007 . 3008) (nil block-side t 3006 . 3007) (nil face web-mode-variable-name-face 3006 . 3007) (nil block-side t 3005 . 3006) (nil face web-mode-variable-name-face 3005 . 3006) (nil block-side t 3004 . 3005) (nil face web-mode-variable-name-face 3004 . 3005) (nil block-side t 3003 . 3004) (nil face web-mode-variable-name-face 3003 . 3004) (nil block-side t 3002 . 3003) (nil face web-mode-variable-name-face 3002 . 3003) (nil block-side t 3001 . 3002) (nil face web-mode-variable-name-face 3001 . 3002) (nil block-side t 3000 . 3001) (nil face web-mode-variable-name-face 3000 . 3001) (nil block-side t 2999 . 3000) (nil face web-mode-variable-name-face 2999 . 3000) (nil block-side t 2998 . 2999) (nil face web-mode-variable-name-face 2998 . 2999) (nil block-side t 2997 . 2998) (nil block-side t 2996 . 2997) (nil face web-mode-variable-name-face 2996 . 2997) (nil block-side t 2995 . 2996) (nil face web-mode-variable-name-face 2995 . 2996) (nil block-side t 2994 . 2995) (nil face web-mode-variable-name-face 2994 . 2995) (nil block-side t 2993 . 2994) (nil face web-mode-variable-name-face 2993 . 2994) (nil block-side t 2992 . 2993) (nil face web-mode-variable-name-face 2992 . 2993) (nil block-side t 2991 . 2992) (nil face web-mode-variable-name-face 2991 . 2992) (nil block-side t 2990 . 2991) (nil face web-mode-variable-name-face 2990 . 2991) (nil block-side t 2989 . 2990) (nil face web-mode-variable-name-face 2989 . 2990) (nil block-side t 2988 . 2989) (nil face web-mode-variable-name-face 2988 . 2989) (nil block-side t 2987 . 2988) (nil face web-mode-variable-name-face 2987 . 2988) (nil block-side t 2986 . 2987) (nil face web-mode-variable-name-face 2986 . 2987) (nil block-side t 2985 . 2986) (nil face web-mode-variable-name-face 2985 . 2986) (nil block-side t 2984 . 2985) (nil face web-mode-variable-name-face 2984 . 2985) (nil block-side t 2983 . 2984) (nil face web-mode-variable-name-face 2983 . 2984) (nil block-side t 2982 . 2983) (nil face web-mode-variable-name-face 2982 . 2983) (nil block-side t 2981 . 2982) (nil block-side t 2980 . 2981) (nil face (rainbow-delimiters-depth-3-face) 2980 . 2981) (nil block-side t 2979 . 2980) (nil face web-mode-variable-name-face 2979 . 2980) (nil block-side t 2978 . 2979) (nil block-side t 2977 . 2978) (nil block-token delimiter-beg 2977 . 2978) (nil font-lock-face web-mode-block-delimiter-face 2977 . 2978) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 2977 . 2978) (nil block-beg 0 2976 . 2977) (nil block-controls 0 2976 . 2977) (nil block-side t 2976 . 2977) (nil block-token delimiter-beg 2976 . 2977) (nil font-lock-face web-mode-block-delimiter-face 2976 . 2977) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 2976 . 2977) (nil tag-name "span" 2974 . 2975) (nil tag-type start 2974 . 2975) (nil tag-end t 2974 . 2975) (nil font-lock-face web-mode-html-tag-bracket-face 2974 . 2975) (nil tag-name "span" 2970 . 2974) (nil tag-type start 2970 . 2974) (nil font-lock-face web-mode-html-tag-face 2970 . 2974) (nil tag-name "span" 2969 . 2970) (nil tag-type start 2969 . 2970) (nil tag-beg 16 2969 . 2970) (nil font-lock-face web-mode-html-tag-bracket-face 2969 . 2970) (nil tag-name "template" 2955 . 2956) (nil tag-type end 2955 . 2956) (nil tag-end t 2955 . 2956) (nil font-lock-face web-mode-html-tag-bracket-face 2955 . 2956) (nil tag-name "template" 2947 . 2955) (nil tag-type end 2947 . 2955) (nil font-lock-face web-mode-html-tag-face 2947 . 2955) (nil tag-name "template" 2946 . 2947) (nil tag-type end 2946 . 2947) (nil font-lock-face web-mode-html-tag-bracket-face 2946 . 2947) (nil tag-name "template" 2945 . 2946) (nil tag-type end 2945 . 2946) (nil tag-beg 20 2945 . 2946) (nil font-lock-face web-mode-html-tag-bracket-face 2945 . 2946) (nil tag-name "v-btn" 2931 . 2932) (nil tag-type end 2931 . 2932) (nil tag-end t 2931 . 2932) (nil font-lock-face web-mode-html-tag-bracket-face 2931 . 2932) (nil tag-name "v-btn" 2926 . 2931) (nil tag-type end 2926 . 2931) (nil font-lock-face web-mode-html-tag-custom-face 2926 . 2931) (nil tag-name "v-btn" 2925 . 2926) (nil tag-type end 2925 . 2926) (nil font-lock-face web-mode-html-tag-bracket-face 2925 . 2926) (nil tag-name "v-btn" 2924 . 2925) (nil tag-type end 2924 . 2925) (nil tag-beg 22 2924 . 2925) (nil font-lock-face web-mode-html-tag-bracket-face 2924 . 2925) (nil tag-name "v-icon" 2908 . 2909) (nil tag-type end 2908 . 2909) (nil tag-end t 2908 . 2909) (nil font-lock-face web-mode-html-tag-bracket-face 2908 . 2909) (nil tag-name "v-icon" 2902 . 2908) (nil tag-type end 2902 . 2908) (nil font-lock-face web-mode-html-tag-custom-face 2902 . 2908) (nil tag-name "v-icon" 2901 . 2902) (nil tag-type end 2901 . 2902) (nil font-lock-face web-mode-html-tag-bracket-face 2901 . 2902) (nil tag-name "v-icon" 2900 . 2901) (nil tag-type end 2900 . 2901) (nil tag-beg 22 2900 . 2901) (nil font-lock-face web-mode-html-tag-bracket-face 2900 . 2901) (nil tag-name "v-icon" 2885 . 2886) (nil tag-type start 2885 . 2886) (nil tag-end t 2885 . 2886) (nil font-lock-face web-mode-html-tag-bracket-face 2885 . 2886) (nil tag-name "v-icon" 2879 . 2885) (nil tag-type start 2879 . 2885) (nil font-lock-face web-mode-html-tag-custom-face 2879 . 2885) (nil tag-name "v-icon" 2878 . 2879) (nil tag-type start 2878 . 2879) (nil tag-beg 18 2878 . 2879) (nil font-lock-face web-mode-html-tag-bracket-face 2878 . 2879) (nil tag-name "v-btn" 2860 . 2861) (nil tag-type start 2860 . 2861) (nil tag-end t 2860 . 2861) (nil font-lock-face web-mode-html-tag-bracket-face 2860 . 2861) (nil tag-name "v-btn" 2845 . 2860) (nil tag-type start 2845 . 2860) (nil block-side t 2844 . 2845) (nil block-end t 2844 . 2845) (nil block-token delimiter-end 2844 . 2845) (nil tag-attr t 2844 . 2845) (nil tag-attr-end 6 2844 . 2845) (nil tag-name "v-btn" 2844 . 2845) (nil tag-type start 2844 . 2845) (nil font-lock-face web-mode-block-delimiter-face 2844 . 2845) (nil block-side t 2843 . 2844) (nil tag-attr t 2843 . 2844) (nil tag-name "v-btn" 2843 . 2844) (nil tag-type start 2843 . 2844) (nil face web-mode-variable-name-face 2843 . 2844) (nil block-side t 2842 . 2843) (nil tag-attr t 2842 . 2843) (nil tag-name "v-btn" 2842 . 2843) (nil tag-type start 2842 . 2843) (nil face web-mode-variable-name-face 2842 . 2843) (nil block-side t 2841 . 2842) (nil tag-attr t 2841 . 2842) (nil tag-name "v-btn" 2841 . 2842) (nil tag-type start 2841 . 2842) (nil face web-mode-variable-name-face 2841 . 2842) (nil block-side t 2840 . 2841) (nil tag-attr t 2840 . 2841) (nil tag-name "v-btn" 2840 . 2841) (nil tag-type start 2840 . 2841) (nil face web-mode-variable-name-face 2840 . 2841) (nil block-side t 2837 . 2840) (nil tag-attr t 2837 . 2840) (nil tag-name "v-btn" 2837 . 2840) (nil tag-type start 2837 . 2840) (nil block-side t 2836 . 2837) (nil tag-attr t 2836 . 2837) (nil tag-name "v-btn" 2836 . 2837) (nil tag-type start 2836 . 2837) (nil face web-mode-variable-name-face 2836 . 2837) (nil block-side t 2835 . 2836) (nil tag-attr t 2835 . 2836) (nil tag-name "v-btn" 2835 . 2836) (nil tag-type start 2835 . 2836) (nil face web-mode-variable-name-face 2835 . 2836) (nil block-side t 2834 . 2835) (nil tag-attr t 2834 . 2835) (nil tag-name "v-btn" 2834 . 2835) (nil tag-type start 2834 . 2835) (nil face web-mode-variable-name-face 2834 . 2835) (nil block-side t 2833 . 2834) (nil tag-attr t 2833 . 2834) (nil tag-name "v-btn" 2833 . 2834) (nil tag-type start 2833 . 2834) (nil face web-mode-variable-name-face 2833 . 2834) (nil block-side t 2832 . 2833) (nil tag-attr t 2832 . 2833) (nil tag-name "v-btn" 2832 . 2833) (nil tag-type start 2832 . 2833) (nil face web-mode-variable-name-face 2832 . 2833) (nil block-side t 2831 . 2832) (nil tag-attr t 2831 . 2832) (nil tag-name "v-btn" 2831 . 2832) (nil tag-type start 2831 . 2832) (nil face web-mode-variable-name-face 2831 . 2832) (nil block-side t 2830 . 2831) (nil tag-attr t 2830 . 2831) (nil tag-name "v-btn" 2830 . 2831) (nil tag-type start 2830 . 2831) (nil face web-mode-variable-name-face 2830 . 2831) (nil block-side t 2829 . 2830) (nil tag-attr t 2829 . 2830) (nil tag-name "v-btn" 2829 . 2830) (nil tag-type start 2829 . 2830) (nil face web-mode-variable-name-face 2829 . 2830) (nil block-side t 2828 . 2829) (nil tag-attr t 2828 . 2829) (nil tag-name "v-btn" 2828 . 2829) (nil tag-type start 2828 . 2829) (nil face web-mode-variable-name-face 2828 . 2829) (nil block-side t 2827 . 2828) (nil tag-attr t 2827 . 2828) (nil tag-name "v-btn" 2827 . 2828) (nil tag-type start 2827 . 2828) (nil face web-mode-variable-name-face 2827 . 2828) (nil block-side t 2826 . 2827) (nil block-token delimiter-beg 2826 . 2827) (nil tag-attr t 2826 . 2827) (nil tag-name "v-btn" 2826 . 2827) (nil tag-type start 2826 . 2827) (nil font-lock-face web-mode-block-delimiter-face 2826 . 2827) (nil block-side t 2825 . 2826) (nil block-token delimiter-beg 2825 . 2826) (nil tag-attr t 2825 . 2826) (nil tag-name "v-btn" 2825 . 2826) (nil tag-type start 2825 . 2826) (nil font-lock-face web-mode-block-delimiter-face 2825 . 2826) (nil block-side t 2824 . 2825) (nil block-token delimiter-beg 2824 . 2825) (nil tag-attr t 2824 . 2825) (nil tag-name "v-btn" 2824 . 2825) (nil tag-type start 2824 . 2825) (nil font-lock-face web-mode-block-delimiter-face 2824 . 2825) (nil block-side t 2823 . 2824) (nil block-token delimiter-beg 2823 . 2824) (nil tag-attr t 2823 . 2824) (nil tag-name "v-btn" 2823 . 2824) (nil tag-type start 2823 . 2824) (nil font-lock-face web-mode-block-delimiter-face 2823 . 2824) (nil block-side t 2822 . 2823) (nil block-token delimiter-beg 2822 . 2823) (nil tag-attr t 2822 . 2823) (nil tag-name "v-btn" 2822 . 2823) (nil tag-type start 2822 . 2823) (nil font-lock-face web-mode-block-delimiter-face 2822 . 2823) (nil block-side t 2821 . 2822) (nil block-token delimiter-beg 2821 . 2822) (nil tag-attr t 2821 . 2822) (nil tag-name "v-btn" 2821 . 2822) (nil tag-type start 2821 . 2822) (nil font-lock-face web-mode-block-delimiter-face 2821 . 2822) (nil block-side t 2820 . 2821) (nil block-token delimiter-beg 2820 . 2821) (nil tag-attr t 2820 . 2821) (nil tag-name "v-btn" 2820 . 2821) (nil tag-type start 2820 . 2821) (nil font-lock-face web-mode-block-delimiter-face 2820 . 2821) (nil block-beg 0 2819 . 2820) (nil block-controls 0 2819 . 2820) (nil block-side t 2819 . 2820) (nil block-token delimiter-beg 2819 . 2820) (nil tag-attr-beg 2 2819 . 2820) (nil tag-attr t 2819 . 2820) (nil tag-name "v-btn" 2819 . 2820) (nil tag-type start 2819 . 2820) (nil font-lock-face web-mode-block-delimiter-face 2819 . 2820) (nil tag-name "v-btn" 2802 . 2819) (nil tag-type start 2802 . 2819) (nil tag-attr t 2801 . 2802) (nil tag-attr-end 5 2801 . 2802) (nil tag-name "v-btn" 2801 . 2802) (nil tag-type start 2801 . 2802) (nil font-lock-face web-mode-html-attr-value-face 2801 . 2802) (nil tag-attr t 2789 . 2801) (nil tag-name "v-btn" 2789 . 2801) (nil tag-type start 2789 . 2801) (nil font-lock-face web-mode-html-attr-value-face 2789 . 2801) (nil tag-attr t 2788 . 2789) (nil tag-name "v-btn" 2788 . 2789) (nil tag-type start 2788 . 2789) (nil font-lock-face web-mode-html-attr-equal-face 2788 . 2789) (nil tag-attr t 2784 . 2788) (nil tag-name "v-btn" 2784 . 2788) (nil tag-type start 2784 . 2788) (nil font-lock-face web-mode-html-attr-name-face 2784 . 2788) (nil tag-attr-beg 0 2783 . 2784) (nil tag-attr t 2783 . 2784) (nil tag-name "v-btn" 2783 . 2784) (nil tag-type start 2783 . 2784) (nil font-lock-face web-mode-html-attr-name-face 2783 . 2784) (nil tag-name "v-btn" 2766 . 2783) (nil tag-type start 2766 . 2783) (nil tag-attr t 2765 . 2766) (nil tag-attr-end 0 2765 . 2766) (nil tag-name "v-btn" 2765 . 2766) (nil tag-type start 2765 . 2766) (nil font-lock-face web-mode-html-attr-name-face 2765 . 2766) (nil tag-attr t 2762 . 2765) (nil tag-name "v-btn" 2762 . 2765) (nil tag-type start 2762 . 2765) (nil font-lock-face web-mode-html-attr-name-face 2762 . 2765) (nil tag-attr-beg 0 2761 . 2762) (nil tag-attr t 2761 . 2762) (nil tag-name "v-btn" 2761 . 2762) (nil tag-type start 2761 . 2762) (nil font-lock-face web-mode-html-attr-name-face 2761 . 2762) (nil tag-name "v-btn" 2744 . 2761) (nil tag-type start 2744 . 2761) (nil tag-attr t 2743 . 2744) (nil tag-attr-end 0 2743 . 2744) (nil tag-name "v-btn" 2743 . 2744) (nil tag-type start 2743 . 2744) (nil font-lock-face web-mode-html-attr-name-face 2743 . 2744) (nil tag-attr t 2741 . 2743) (nil tag-name "v-btn" 2741 . 2743) (nil tag-type start 2741 . 2743) (nil font-lock-face web-mode-html-attr-name-face 2741 . 2743) (nil tag-attr-beg 0 2740 . 2741) (nil tag-attr t 2740 . 2741) (nil tag-name "v-btn" 2740 . 2741) (nil tag-type start 2740 . 2741) (nil font-lock-face web-mode-html-attr-name-face 2740 . 2741) (nil tag-name "v-btn" 2723 . 2740) (nil tag-type start 2723 . 2740) (nil tag-attr t 2722 . 2723) (nil tag-attr-end 4 2722 . 2723) (nil tag-name "v-btn" 2722 . 2723) (nil tag-type start 2722 . 2723) (nil font-lock-face web-mode-html-attr-value-face 2722 . 2723) (nil tag-attr t 2719 . 2722) (nil tag-name "v-btn" 2719 . 2722) (nil tag-type start 2719 . 2722) (nil font-lock-face web-mode-html-attr-value-face 2719 . 2722) (nil tag-attr t 2718 . 2719) (nil tag-name "v-btn" 2718 . 2719) (nil tag-type start 2718 . 2719) (nil font-lock-face web-mode-html-attr-equal-face 2718 . 2719) (nil tag-attr t 2715 . 2718) (nil tag-name "v-btn" 2715 . 2718) (nil tag-type start 2715 . 2718) (nil font-lock-face web-mode-html-attr-engine-face 2715 . 2718) (nil tag-attr-beg 2 2714 . 2715) (nil tag-attr t 2714 . 2715) (nil tag-name "v-btn" 2714 . 2715) (nil tag-type start 2714 . 2715) (nil font-lock-face web-mode-html-attr-engine-face 2714 . 2715) (nil tag-name "v-btn" 2697 . 2714) (nil tag-type start 2697 . 2714) (nil tag-attr t 2696 . 2697) (nil tag-attr-end 6 2696 . 2697) (nil tag-name "v-btn" 2696 . 2697) (nil tag-type start 2696 . 2697) (nil font-lock-face web-mode-html-attr-value-face 2696 . 2697) (nil tag-attr t 2690 . 2696) (nil tag-name "v-btn" 2690 . 2696) (nil tag-type start 2690 . 2696) (nil font-lock-face web-mode-html-attr-value-face 2690 . 2696) (nil tag-attr t 2689 . 2690) (nil tag-name "v-btn" 2689 . 2690) (nil tag-type start 2689 . 2690) (nil font-lock-face web-mode-html-attr-equal-face 2689 . 2690) (nil tag-attr t 2684 . 2689) (nil tag-name "v-btn" 2684 . 2689) (nil tag-type start 2684 . 2689) (nil font-lock-face web-mode-html-attr-engine-face 2684 . 2689) (nil tag-attr-beg 2 2683 . 2684) (nil tag-attr t 2683 . 2684) (nil tag-name "v-btn" 2683 . 2684) (nil tag-type start 2683 . 2684) (nil font-lock-face web-mode-html-attr-engine-face 2683 . 2684) (nil tag-name "v-btn" 2666 . 2683) (nil tag-type start 2666 . 2683) (nil tag-name "v-btn" 2661 . 2666) (nil tag-type start 2661 . 2666) (nil font-lock-face web-mode-html-tag-custom-face 2661 . 2666) (nil tag-name "v-btn" 2660 . 2661) (nil tag-type start 2660 . 2661) (nil tag-beg 19 2660 . 2661) (nil font-lock-face web-mode-html-tag-bracket-face 2660 . 2661) (nil tag-name "template" 2644 . 2645) (nil tag-type start 2644 . 2645) (nil tag-end t 2644 . 2645) (nil font-lock-face web-mode-html-tag-bracket-face 2644 . 2645) (nil block-side t 2643 . 2644) (nil block-end t 2643 . 2644) (nil block-token delimiter-end 2643 . 2644) (nil tag-attr t 2643 . 2644) (nil tag-attr-end 16 2643 . 2644) (nil tag-name "template" 2643 . 2644) (nil tag-type start 2643 . 2644) (nil font-lock-face web-mode-block-delimiter-face 2643 . 2644) (nil block-side t 2641 . 2643) (nil tag-attr t 2641 . 2643) (nil tag-name "template" 2641 . 2643) (nil tag-type start 2641 . 2643) (nil block-side t 2640 . 2641) (nil tag-attr t 2640 . 2641) (nil tag-name "template" 2640 . 2641) (nil tag-type start 2640 . 2641) (nil face web-mode-variable-name-face 2640 . 2641) (nil block-side t 2639 . 2640) (nil tag-attr t 2639 . 2640) (nil tag-name "template" 2639 . 2640) (nil tag-type start 2639 . 2640) (nil face web-mode-variable-name-face 2639 . 2640) (nil block-side t 2638 . 2639) (nil tag-attr t 2638 . 2639) (nil tag-name "template" 2638 . 2639) (nil tag-type start 2638 . 2639) (nil face web-mode-variable-name-face 2638 . 2639) (nil block-side t 2637 . 2638) (nil tag-attr t 2637 . 2638) (nil tag-name "template" 2637 . 2638) (nil tag-type start 2637 . 2638) (nil face web-mode-variable-name-face 2637 . 2638) (nil block-side t 2636 . 2637) (nil tag-attr t 2636 . 2637) (nil tag-name "template" 2636 . 2637) (nil tag-type start 2636 . 2637) (nil face web-mode-variable-name-face 2636 . 2637) (nil block-side t 2634 . 2636) (nil tag-attr t 2634 . 2636) (nil tag-name "template" 2634 . 2636) (nil tag-type start 2634 . 2636) (nil block-side t 2633 . 2634) (nil tag-attr t 2633 . 2634) (nil tag-name "template" 2633 . 2634) (nil tag-type start 2633 . 2634) (nil face web-mode-variable-name-face 2633 . 2634) (nil block-side t 2632 . 2633) (nil tag-attr t 2632 . 2633) (nil tag-name "template" 2632 . 2633) (nil tag-type start 2632 . 2633) (nil face web-mode-variable-name-face 2632 . 2633) (nil block-side t 2630 . 2632) (nil tag-attr t 2630 . 2632) (nil tag-name "template" 2630 . 2632) (nil tag-type start 2630 . 2632) (nil block-side t 2629 . 2630) (nil block-token delimiter-beg 2629 . 2630) (nil tag-attr t 2629 . 2630) (nil tag-name "template" 2629 . 2630) (nil tag-type start 2629 . 2630) (nil font-lock-face web-mode-block-delimiter-face 2629 . 2630) (nil block-side t 2628 . 2629) (nil block-token delimiter-beg 2628 . 2629) (nil tag-attr t 2628 . 2629) (nil tag-name "template" 2628 . 2629) (nil tag-type start 2628 . 2629) (nil font-lock-face web-mode-block-delimiter-face 2628 . 2629) (nil block-side t 2627 . 2628) (nil block-token delimiter-beg 2627 . 2628) (nil tag-attr t 2627 . 2628) (nil tag-name "template" 2627 . 2628) (nil tag-type start 2627 . 2628) (nil font-lock-face web-mode-block-delimiter-face 2627 . 2628) (nil block-side t 2626 . 2627) (nil block-token delimiter-beg 2626 . 2627) (nil tag-attr t 2626 . 2627) (nil tag-name "template" 2626 . 2627) (nil tag-type start 2626 . 2627) (nil font-lock-face web-mode-block-delimiter-face 2626 . 2627) (nil block-side t 2625 . 2626) (nil block-token delimiter-beg 2625 . 2626) (nil tag-attr t 2625 . 2626) (nil tag-name "template" 2625 . 2626) (nil tag-type start 2625 . 2626) (nil font-lock-face web-mode-block-delimiter-face 2625 . 2626) (nil block-side t 2624 . 2625) (nil block-token delimiter-beg 2624 . 2625) (nil tag-attr t 2624 . 2625) (nil tag-name "template" 2624 . 2625) (nil tag-type start 2624 . 2625) (nil font-lock-face web-mode-block-delimiter-face 2624 . 2625) (nil block-side t 2623 . 2624) (nil block-token delimiter-beg 2623 . 2624) (nil tag-attr t 2623 . 2624) (nil tag-name "template" 2623 . 2624) (nil tag-type start 2623 . 2624) (nil font-lock-face web-mode-block-delimiter-face 2623 . 2624) (nil block-side t 2622 . 2623) (nil block-token delimiter-beg 2622 . 2623) (nil tag-attr t 2622 . 2623) (nil tag-name "template" 2622 . 2623) (nil tag-type start 2622 . 2623) (nil font-lock-face web-mode-block-delimiter-face 2622 . 2623) (nil block-side t 2621 . 2622) (nil block-token delimiter-beg 2621 . 2622) (nil tag-attr t 2621 . 2622) (nil tag-name "template" 2621 . 2622) (nil tag-type start 2621 . 2622) (nil font-lock-face web-mode-block-delimiter-face 2621 . 2622) (nil block-side t 2620 . 2621) (nil block-token delimiter-beg 2620 . 2621) (nil tag-attr t 2620 . 2621) (nil tag-name "template" 2620 . 2621) (nil tag-type start 2620 . 2621) (nil font-lock-face web-mode-block-delimiter-face 2620 . 2621) (nil block-side t 2619 . 2620) (nil block-token delimiter-beg 2619 . 2620) (nil tag-attr t 2619 . 2620) (nil tag-name "template" 2619 . 2620) (nil tag-type start 2619 . 2620) (nil font-lock-face web-mode-block-delimiter-face 2619 . 2620) (nil block-beg 0 2618 . 2619) (nil block-controls 0 2618 . 2619) (nil block-side t 2618 . 2619) (nil block-token delimiter-beg 2618 . 2619) (nil tag-attr t 2618 . 2619) (nil tag-name "template" 2618 . 2619) (nil tag-type start 2618 . 2619) (nil font-lock-face web-mode-block-delimiter-face 2618 . 2619) (nil tag-attr t 2613 . 2618) (nil tag-name "template" 2613 . 2618) (nil tag-type start 2613 . 2618) (nil font-lock-face web-mode-html-attr-engine-face 2613 . 2618) (nil tag-attr-beg 2 2612 . 2613) (nil tag-attr t 2612 . 2613) (nil tag-name "template" 2612 . 2613) (nil tag-type start 2612 . 2613) (nil font-lock-face web-mode-html-attr-engine-face 2612 . 2613) (nil tag-name "template" 2611 . 2612) (nil tag-type start 2611 . 2612) (nil tag-name "template" 2603 . 2611) (nil tag-type start 2603 . 2611) (nil font-lock-face web-mode-html-tag-face 2603 . 2611) (nil tag-name "template" 2602 . 2603) (nil tag-type start 2602 . 2603) (nil tag-beg 17 2602 . 2603) (nil font-lock-face web-mode-html-tag-bracket-face 2602 . 2603) (nil tag-name "v-tooltip" 2588 . 2589) (nil tag-type start 2588 . 2589) (nil tag-end t 2588 . 2589) (nil font-lock-face web-mode-html-tag-bracket-face 2588 . 2589) (nil tag-attr t 2587 . 2588) (nil tag-attr-end 0 2587 . 2588) (nil tag-name "v-tooltip" 2587 . 2588) (nil tag-type start 2587 . 2588) (nil font-lock-face web-mode-html-attr-name-face 2587 . 2588) (nil tag-attr t 2586 . 2587) (nil tag-name "v-tooltip" 2586 . 2587) (nil tag-type start 2586 . 2587) (nil font-lock-face web-mode-html-attr-name-face 2586 . 2587) (nil tag-attr-beg 0 2585 . 2586) (nil tag-attr t 2585 . 2586) (nil tag-name "v-tooltip" 2585 . 2586) (nil tag-type start 2585 . 2586) (nil font-lock-face web-mode-html-attr-name-face 2585 . 2586) (nil tag-name "v-tooltip" 2584 . 2585) (nil tag-type start 2584 . 2585) (nil tag-name "v-tooltip" 2575 . 2584) (nil tag-type start 2575 . 2584) (nil font-lock-face web-mode-html-tag-custom-face 2575 . 2584) (nil tag-name "v-tooltip" 2574 . 2575) (nil tag-type start 2574 . 2575) (nil tag-beg 19 2574 . 2575) (nil font-lock-face web-mode-html-tag-bracket-face 2574 . 2575) (nil tag-name "div" 2562 . 2563) (nil tag-type start 2562 . 2563) (nil tag-end t 2562 . 2563) (nil font-lock-face web-mode-html-tag-bracket-face 2562 . 2563) (nil tag-attr t 2561 . 2562) (nil tag-attr-end 5 2561 . 2562) (nil tag-name "div" 2561 . 2562) (nil tag-type start 2561 . 2562) (nil font-lock-face web-mode-html-attr-value-face 2561 . 2562) (nil tag-attr t 2547 . 2561) (nil tag-name "div" 2547 . 2561) (nil tag-type start 2547 . 2561) (nil font-lock-face web-mode-html-attr-value-face 2547 . 2561) (nil tag-attr t 2546 . 2547) (nil tag-name "div" 2546 . 2547) (nil tag-type start 2546 . 2547) (nil font-lock-face web-mode-html-attr-equal-face 2546 . 2547) (nil tag-attr t 2542 . 2546) (nil tag-name "div" 2542 . 2546) (nil tag-type start 2542 . 2546) (nil font-lock-face web-mode-html-attr-name-face 2542 . 2546) (nil tag-attr-beg 0 2541 . 2542) (nil tag-attr t 2541 . 2542) (nil tag-name "div" 2541 . 2542) (nil tag-type start 2541 . 2542) (nil font-lock-face web-mode-html-attr-name-face 2541 . 2542) (nil tag-name "div" 2540 . 2541) (nil tag-type start 2540 . 2541) (nil tag-name "div" 2537 . 2540) (nil tag-type start 2537 . 2540) (nil font-lock-face web-mode-html-tag-face 2537 . 2540) (nil tag-name "div" 2536 . 2537) (nil tag-type start 2536 . 2537) (nil tag-beg 17 2536 . 2537) (nil font-lock-face web-mode-html-tag-bracket-face 2536 . 2537) (2530 . 5006)) nil (25479 26681 208951 513000) 0 nil])
([nil nil ((2523 . 2530)) nil (25479 26681 208306 429000) 0 nil])
([nil nil (("      " . -2537)) nil (25479 26681 208305 241000) 0 nil])
([nil nil (("  " . -2573) 2571) nil (25479 26681 208304 84000) 0 nil])
([nil nil (("  " . -2599) 2597) nil (25479 26681 208302 716000) 0 nil])
([nil nil ((#("l" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -143) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 144) nil (25479 26681 208300 266000) 0 nil])
([nil nil ((143 . 144)) nil (25479 26681 208289 787000) 0 nil])
([nil nil (("      " . -2524) 144) nil (25479 26681 208282 8000) 0 nil])
([nil nil ((2536 . 2545) (t 25479 26681 255579 786000)) nil (25479 26719 212396 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2554 . 2555) (nil tag-attr t 2543 . 2555) (nil tag-name "div" 2543 . 2555) (nil tag-type start 2543 . 2555) (nil font-lock-face web-mode-html-attr-value-face 2543 . 2555) (2543 . 2555)) nil (25479 26719 212388 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2566 . 2567) (nil tag-attr t 2555 . 2567) (nil tag-name "div" 2555 . 2567) (nil tag-type start 2555 . 2567) (nil font-lock-face web-mode-html-attr-value-face 2555 . 2567) (2555 . 2567) (t 25479 26719 256147 339000)) nil (25479 26949 165811 277000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2586 . 2587) (nil tag-attr t 2576 . 2587) (nil tag-name "div" 2576 . 2587) (nil tag-type start 2576 . 2587) (nil font-lock-face web-mode-html-attr-value-face 2576 . 2587) (2576 . 2587) (t 25479 26949 215576 95000)) nil (25479 26980 415994 86000) 0 nil])
([nil nil ((2587 . 2588)) nil (25479 26980 415984 233000) 0 nil])
([nil nil ((#("float:right;clear:right;" 0 11 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 12 23 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 23 24 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2543) (undo-tree-id173 . -24) (undo-tree-id174 . -12) (undo-tree-id175 . -24) (t 25479 26980 460041 335000)) nil (25479 27114 183621 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2564 . 2565) (nil tag-attr t 2543 . 2565) (nil tag-name "div" 2543 . 2565) (nil tag-type start 2543 . 2565) (nil font-lock-face web-mode-html-attr-value-face 2543 . 2565) (2543 . 2565)) nil (25479 27114 183615 139000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2560) (undo-tree-id168 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2561) (undo-tree-id169 . -1) (#("a" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2562) (undo-tree-id170 . -1) (#("r" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2563) (undo-tree-id171 . -1) (#("t" 0 1 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2564) (undo-tree-id172 . -1) 2565) nil (25479 27114 183611 620000) 0 nil])
([nil nil ((2560 . 2562)) nil (25479 27114 183603 116000) 0 nil])
([nil nil ((#("d" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2561) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 2562) nil (25479 27114 183600 561000) 0 nil])
([nil nil ((2561 . 2564)) nil (25479 27114 183582 345000) 0 nil])
([nil nil ((#("j" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2543) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("u" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2544) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("s" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2545) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2546) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2547) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("f" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2548) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("y" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2549) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2550) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("c" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2551) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("o" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2552) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("n" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2553) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2554) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2555) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("n" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2556) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2557) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(":" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2558) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2559) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2560) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("n" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2561) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("d" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2562) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#(";" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -2563) (undo-tree-id216 . -1) 2564 (t 25479 27114 234031 964000)) nil (25479 27231 363257 744000) 0 nil])
([nil nil ((2543 . 2560)) nil (25479 27231 363142 448000) 0 nil])
([nil nil ((2560 . 2561)) nil (25479 27231 363139 555000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("d" 0 1 (rear-nonsticky t tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("n" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("e" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("-" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("y" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("f" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("i" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("t" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("s" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("u" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570) (#("j" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 2570)) nil (25479 27231 363124 272000) 0 nil])
([nil nil ((28660 . 28662) (#("  " 0 2 (part-side css)) . 28659) (undo-tree-id217 . -2) (28658 . 28662) (t 25479 27231 411774 167000)) nil (25479 27881 372229 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28920 . 28921) (nil part-side css 28920 . 28921) (nil face (rainbow-delimiters-depth-1-face) 28920 . 28921) (nil part-side css 28918 . 28920) (nil part-side css 28914 . 28918) (nil face web-mode-css-color-face 28914 . 28918) (nil part-side css 28913 . 28914) (nil part-side css 28902 . 28913) (nil face web-mode-css-property-name-face 28902 . 28913) (nil part-side css 28899 . 28902) (nil part-side css 28898 . 28899) (nil face (rainbow-delimiters-depth-1-face) 28898 . 28899) (nil part-side css 28891 . 28898) (nil face web-mode-css-pseudo-class-face 28891 . 28898) (nil part-side css 28866 . 28891) (nil face web-mode-css-selector-tag-face 28866 . 28891) (nil part-side css 28865 . 28866) (nil syntax-table (12) 28865 . 28866) (nil face web-mode-css-selector-tag-face 28865 . 28866) (nil part-side css 28845 . 28865) (nil part-token comment 28845 . 28865) (nil font-lock-face web-mode-css-comment-face 28845 . 28865) (nil part-side css 28844 . 28845) (nil part-token comment 28844 . 28845) (nil syntax-table (11) 28844 . 28845) (nil font-lock-face web-mode-css-comment-face 28844 . 28845) (nil part-side css 28842 . 28844) (nil part-side css 28841 . 28842) (nil face (rainbow-delimiters-depth-1-face) 28841 . 28842) (nil part-side css 28839 . 28841) (nil part-side css 28835 . 28839) (nil face web-mode-css-color-face 28835 . 28839) (nil part-side css 28834 . 28835) (nil part-side css 28823 . 28834) (nil face web-mode-css-property-name-face 28823 . 28834) (nil part-side css 28820 . 28823) (nil part-side css 28819 . 28820) (nil face (rainbow-delimiters-depth-1-face) 28819 . 28820) (nil part-side css 28793 . 28819) (nil face web-mode-css-selector-tag-face 28793 . 28819) (nil part-side css 28792 . 28793) (nil syntax-table (12) 28792 . 28793) (nil face web-mode-css-selector-tag-face 28792 . 28793) (nil part-side css 28781 . 28792) (nil part-token comment 28781 . 28792) (nil font-lock-face web-mode-css-comment-face 28781 . 28792) (nil part-side css 28780 . 28781) (nil part-token comment 28780 . 28781) (nil syntax-table (11) 28780 . 28781) (nil font-lock-face web-mode-css-comment-face 28780 . 28781) (nil part-side css 28778 . 28780) (nil part-side css 28777 . 28778) (nil face (rainbow-delimiters-depth-1-face) 28777 . 28778) (nil part-side css 28775 . 28777) (nil part-side css 28768 . 28775) (nil face web-mode-css-color-face 28768 . 28775) (nil part-side css 28767 . 28768) (nil part-side css 28756 . 28767) (nil face web-mode-css-property-name-face 28756 . 28767) (nil part-side css 28753 . 28756) (nil part-side css 28752 . 28753) (nil face (rainbow-delimiters-depth-1-face) 28752 . 28753) (nil part-side css 28726 . 28752) (nil face web-mode-css-selector-tag-face 28726 . 28752) (nil part-side css 28725 . 28726) (nil syntax-table (12) 28725 . 28726) (nil face web-mode-css-selector-tag-face 28725 . 28726) (nil part-side css 28715 . 28725) (nil part-token comment 28715 . 28725) (nil font-lock-face web-mode-css-comment-face 28715 . 28725) (nil part-side css 28714 . 28715) (nil part-token comment 28714 . 28715) (nil syntax-table (11) 28714 . 28715) (nil font-lock-face web-mode-css-comment-face 28714 . 28715) (nil part-side css 28712 . 28714) (nil part-side css 28711 . 28712) (nil face (rainbow-delimiters-depth-1-face) 28711 . 28712) (nil part-side css 28704 . 28711) (nil part-side css 28698 . 28704) (nil face web-mode-css-property-name-face 28698 . 28704) (nil part-side css 28695 . 28698) (nil part-side css 28694 . 28695) (nil face (rainbow-delimiters-depth-1-face) 28694 . 28695) (nil part-side css 28674 . 28694) (nil face web-mode-css-selector-tag-face 28674 . 28694) (nil part-side css 28673 . 28674) (nil syntax-table (12) 28673 . 28674) (nil face web-mode-css-selector-tag-face 28673 . 28674) (nil part-side css 28663 . 28673) (nil part-token comment 28663 . 28673) (nil font-lock-face web-mode-css-comment-face 28663 . 28673) (nil part-side css 28662 . 28663) (nil part-token comment 28662 . 28663) (nil syntax-table (11) 28662 . 28663) (nil font-lock-face web-mode-css-comment-face 28662 . 28663) (28662 . 28921)) nil (25479 27881 372215 0) 0 nil])
([nil nil ((28948 . 28950) (28928 . 28930) (28890 . 28892) (28866 . 28868) (28861 . 28863) (28841 . 28843) (28809 . 28811) (28794 . 28796) (28789 . 28791) (28766 . 28768) (28734 . 28736) (28720 . 28722) (28715 . 28717) (28700 . 28702) (28674 . 28676) 28660) nil (25479 27881 372185 597000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28709) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 28710 (t 25479 27881 421424 207000)) nil (25479 27899 320247 922000) 0 nil])
([nil nil ((28709 . 28710)) nil (25479 27899 319948 992000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . 28710)) nil (25479 27899 319940 700000) 0 nil])
([nil nil ((28712 . 28713) (t 25479 27899 365690 409000)) nil (25479 27944 907451 189000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28722 . 28723) (nil part-side css 28713 . 28723) (nil face web-mode-css-priority-face 28713 . 28723) (28713 . 28723)) nil (25479 27944 907442 883000) 0 nil])
([nil nil ((#("  /* width */
  ::-webkit-scrollbar {
    width: 5px !important;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }" 0 2 (part-side css) 2 3 (part-side css part-token comment syntax-table (11) font-lock-face web-mode-css-comment-face) 3 13 (part-side css part-token comment font-lock-face web-mode-css-comment-face) 13 14 (part-side css syntax-table (12) face web-mode-css-selector-tag-face) 14 36 (part-side css face web-mode-css-selector-tag-face) 36 37 (part-side css face (rainbow-delimiters-depth-1-face)) 37 42 (part-side css) 42 48 (part-side css face web-mode-css-property-name-face) 48 53 (part-side css) 53 62 (part-side css face web-mode-css-priority-face) 62 63 (rear-nonsticky t part-side css face web-mode-css-priority-face) 63 67 (part-side css) 67 68 (part-side css face (rainbow-delimiters-depth-1-face)) 68 69 (part-side css) 69 72 (part-side css) 72 73 (part-side css part-token comment syntax-table (11) font-lock-face web-mode-css-comment-face) 73 83 (part-side css part-token comment font-lock-face web-mode-css-comment-face) 83 84 (part-side css syntax-table (12) face web-mode-css-selector-tag-face) 84 112 (part-side css face web-mode-css-selector-tag-face) 112 113 (part-side css face (rainbow-delimiters-depth-1-face)) 113 118 (part-side css) 118 129 (part-side css face web-mode-css-property-name-face) 129 130 (part-side css) 130 137 (part-side css face web-mode-css-color-face) 137 141 (part-side css) 141 142 (part-side css face (rainbow-delimiters-depth-1-face)) 142 143 (part-side css) 143 146 (part-side css) 146 147 (part-side css part-token comment syntax-table (11) font-lock-face web-mode-css-comment-face) 147 158 (part-side css part-token comment font-lock-face web-mode-css-comment-face) 158 159 (part-side css syntax-table (12) face web-mode-css-selector-tag-face) 159 187 (part-side css face web-mode-css-selector-tag-face) 187 188 (part-side css face (rainbow-delimiters-depth-1-face)) 188 193 (part-side css) 193 204 (part-side css face web-mode-css-property-name-face) 204 205 (part-side css) 205 209 (part-side css face web-mode-css-color-face) 209 213 (part-side css) 213 214 (part-side css face (rainbow-delimiters-depth-1-face)) 214 215 (part-side css) 215 218 (part-side css) 218 219 (part-side css part-token comment syntax-table (11) font-lock-face web-mode-css-comment-face) 219 239 (part-side css part-token comment font-lock-face web-mode-css-comment-face) 239 240 (part-side css syntax-table (12) face web-mode-css-selector-tag-face) 240 267 (part-side css face web-mode-css-selector-tag-face) 267 274 (part-side css face web-mode-css-pseudo-class-face) 274 275 (part-side css face (rainbow-delimiters-depth-1-face)) 275 280 (part-side css) 280 291 (part-side css face web-mode-css-property-name-face) 291 292 (part-side css) 292 296 (part-side css face web-mode-css-color-face) 296 300 (part-side css) 300 301 (rear-nonsticky t part-side css face (rainbow-delimiters-depth-1-face))) . 28660) (undo-tree-id444 . -301) (undo-tree-id445 . -14) (undo-tree-id446 . -2) (undo-tree-id447 . -301) (undo-tree-id448 . -63) (undo-tree-id449 . -63) (undo-tree-id450 . -63) (undo-tree-id451 . -63) (undo-tree-id452 . -63) (undo-tree-id453 . -63) (undo-tree-id454 . -63) (undo-tree-id455 . -63) (undo-tree-id456 . -63) (undo-tree-id457 . -63) (undo-tree-id458 . -63) (undo-tree-id459 . -63) (undo-tree-id460 . -63) (undo-tree-id461 . -63) (undo-tree-id462 . -63) (undo-tree-id463 . -63) (undo-tree-id464 . -63) (undo-tree-id465 . -63) (undo-tree-id466 . -63) (undo-tree-id467 . -63) (undo-tree-id468 . -301) (undo-tree-id469 . -301) (undo-tree-id470 . -301) (undo-tree-id471 . -301) (undo-tree-id472 . -301) (undo-tree-id473 . -301) (undo-tree-id474 . -301) (undo-tree-id475 . -301) (undo-tree-id476 . -301) (undo-tree-id477 . -301) (undo-tree-id478 . -281) (undo-tree-id479 . -281) (undo-tree-id480 . -281) (undo-tree-id481 . -243) (undo-tree-id482 . -243) (undo-tree-id483 . -243) (undo-tree-id484 . -215) (undo-tree-id485 . -215) (undo-tree-id486 . -215) (undo-tree-id487 . -144) (undo-tree-id488 . -144) (undo-tree-id489 . -139) (undo-tree-id490 . -139) (undo-tree-id491 . -69) (undo-tree-id492 . -69) (undo-tree-id493 . -65) (undo-tree-id494 . -65) (undo-tree-id495 . -65) (undo-tree-id496 . -65) (undo-tree-id497 . -65) (undo-tree-id498 . -65) (undo-tree-id499 . -38) (undo-tree-id500 . -38) (undo-tree-id501 . -14) (undo-tree-id502 . -14) (undo-tree-id503 . -14) (undo-tree-id504 . -14) (undo-tree-id505 . -14) (undo-tree-id506 . -14) (undo-tree-id507 . -301) (undo-tree-id508 . -53) (undo-tree-id509 . -301) (t 25479 27944 950366 614000)) nil (25479 27957 136699 819000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28658) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("
" 0 1 (part-side css)) . -28659) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 28660) nil (25479 27957 136604 642000) 0 nil])
([nil nil ((6857 . 6863) (t 25479 27957 182548 59000)) nil (25479 28076 832499 213000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6862) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) 6863) nil (25479 28076 832493 1000) 0 nil])
([nil nil ((6862 . 6867) (t 25479 28076 880323 441000)) nil (25479 28087 80298 231000) 0 nil])
([nil nil ((6876 . 6883) (6868 . 6877) (t 25479 28087 128475 435000)) nil (25479 28104 247576 675000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6882) (undo-tree-id530 . -1) 6883) nil (25479 28104 247574 923000) 0 nil])
([nil nil ((6882 . 6884)) nil (25479 28104 247572 389000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6883) (undo-tree-id529 . -1) 6884) nil (25479 28104 247570 769000) 0 nil])
([nil nil ((6883 . 6886)) nil (25479 28104 247568 326000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6884) (undo-tree-id527 . -1) (#("p" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6885) (undo-tree-id528 . -1) 6886) nil (25479 28104 247566 864000) 0 nil])
([nil nil ((6884 . 6885)) nil (25479 28104 247562 818000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6884) (undo-tree-id526 . -1) 6885) nil (25479 28104 247561 165000) 0 nil])
([nil nil ((6884 . 6889)) nil (25479 28104 247557 731000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6888) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 6889) nil (25479 28104 247552 394000) 0 nil])
([nil nil ((6815 . 6816) (t 25479 28104 296730 63000)) nil (25479 28126 384362 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6835 . 6836) (nil tag-attr t 6835 . 6836) (nil tag-attr-end 5 6835 . 6836) (nil tag-name "thead" 6835 . 6836) (nil tag-type start 6835 . 6836) (nil font-lock-face web-mode-html-attr-value-face 6835 . 6836) (nil tag-attr t 6822 . 6835) (nil tag-name "thead" 6822 . 6835) (nil tag-type start 6822 . 6835) (nil font-lock-face web-mode-html-attr-value-face 6822 . 6835) (nil tag-attr t 6821 . 6822) (nil tag-name "thead" 6821 . 6822) (nil tag-type start 6821 . 6822) (nil font-lock-face web-mode-html-attr-equal-face 6821 . 6822) (nil tag-attr t 6820 . 6821) (nil tag-name "thead" 6820 . 6821) (nil tag-type start 6820 . 6821) (nil font-lock-face web-mode-html-attr-name-face 6820 . 6821) (nil tag-attr t 6819 . 6820) (nil tag-name "thead" 6819 . 6820) (nil tag-type start 6819 . 6820) (nil font-lock-face web-mode-html-attr-name-face 6819 . 6820) (nil tag-attr t 6818 . 6819) (nil tag-name "thead" 6818 . 6819) (nil tag-type start 6818 . 6819) (nil font-lock-face web-mode-html-attr-name-face 6818 . 6819) (nil tag-attr t 6817 . 6818) (nil tag-name "thead" 6817 . 6818) (nil tag-type start 6817 . 6818) (nil font-lock-face web-mode-html-attr-name-face 6817 . 6818) (nil tag-attr-beg 0 6816 . 6817) (nil tag-attr t 6816 . 6817) (nil tag-name "thead" 6816 . 6817) (nil tag-type start 6816 . 6817) (nil font-lock-face web-mode-html-attr-name-face 6816 . 6817) (6816 . 6836)) nil (25479 28126 384353 339000) 0 nil])
([nil nil ((7068 . 7079) (t 25479 28126 437058 425000)) nil (25479 28145 705140 396000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7077) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7078) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 7079) nil (25479 28145 705135 526000) 0 nil])
([nil nil ((7077 . 7081)) nil (25479 28145 705080 705000) 0 nil])
([nil nil ((#("style=\"height: 4px;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 19 (tag-attr t tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face) 19 20 (tag-attr t tag-attr-end 5 tag-name "tr" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6890) (undo-tree-id622 . -20) (undo-tree-id623 . -3) (undo-tree-id624 . -12) (undo-tree-id625 . -20) (undo-tree-id626 . -20) (t 25479 28145 753344 896000)) nil (25479 28154 877991 991000) 0 nil])
([nil nil ((#(" " 0 1 (tag-name "tr" tag-type start)) . -6889) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) 6890) nil (25479 28154 877983 481000) 0 nil])
([nil nil ((#(" style=\"height: 4px;\"" 0 1 (tag-name "thead" tag-type start) 1 2 (tag-attr-beg 0 tag-attr t tag-name "thead" tag-type start font-lock-face web-mode-html-attr-name-face) 2 6 (tag-attr t tag-name "thead" tag-type start font-lock-face web-mode-html-attr-name-face) 6 7 (tag-attr t tag-name "thead" tag-type start font-lock-face web-mode-html-attr-equal-face) 7 20 (tag-attr t tag-name "thead" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (rear-nonsticky t tag-attr t tag-attr-end 5 tag-name "thead" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6815) (undo-tree-id565 . -21) (undo-tree-id566 . -1) (undo-tree-id567 . -21) (undo-tree-id568 . -21) (undo-tree-id569 . -21) (undo-tree-id570 . -21) (undo-tree-id571 . -21) (undo-tree-id572 . -21) (undo-tree-id573 . -21) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -20) (undo-tree-id577 . -15) (undo-tree-id578 . -15) (undo-tree-id579 . -15) (undo-tree-id580 . -13) (undo-tree-id581 . -13) (undo-tree-id582 . -13) (undo-tree-id583 . -13) (undo-tree-id584 . -12) (undo-tree-id585 . -12) (undo-tree-id586 . -12) (undo-tree-id587 . -11) (undo-tree-id588 . -11) (undo-tree-id589 . -11) (undo-tree-id590 . -10) (undo-tree-id591 . -10) (undo-tree-id592 . -10) (undo-tree-id593 . -8) (undo-tree-id594 . -8) (undo-tree-id595 . -8) (undo-tree-id596 . -7) (undo-tree-id597 . -7) (undo-tree-id598 . -7) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -5) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -21) (undo-tree-id616 . -21)) nil (25479 28154 877969 598000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) 7035 (t 25479 28154 925480 926000)) nil (25479 28170 253261 375000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28170 253214 771000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) 7035 (t 25479 28170 305709 19000)) nil (25479 28182 875941 336000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28182 875874 70000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id656 . -1) 7035 (t 25479 28182 925896 180000)) nil (25479 28196 550776 308000) 0 nil])
([nil nil ((7034 . 7036)) nil (25479 28215 85582 534000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id660 . -1) 7035) nil (25479 28218 310984 244000) 0 nil] [nil nil ((#("height: 10px;" 0 13 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7026) (undo-tree-id657 . -13) (undo-tree-id659 . -13) (t 25479 28196 594098 878000)) ((7026 . 7039)) (25479 28214 538597 4000) 0 nil])
([nil nil ((7034 . 7036)) nil (25479 28218 310968 676000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7026)) ((7026 . 7027) (t 25479 28211 166314 973000)) (25479 28211 123299 830000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7035) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 7036 (t 25479 28218 358421 626000)) nil (25479 28223 625350 990000) 0 nil])
nil
([nil nil ((7034 . 7035)) nil (25479 28223 625204 96000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) 7035 (t 25479 28223 666500 338000)) nil (25479 28227 791329 520000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28227 791304 744000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 7035 (t 25479 28227 834562 145000)) nil (25479 28230 876475 575000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28230 876451 56000) 0 nil])
([nil nil ((#("3" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) 7035 (t 25479 28230 918607 882000)) nil (25479 28233 942102 606000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28233 942070 509000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7034) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 7035 (t 25479 28233 986653 377000)) nil (25479 28237 103758 416000) 0 nil])
([nil nil ((7034 . 7035)) nil (25479 28237 103737 789000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28388) (undo-tree-id766 . -1) 28389 (t 25479 28237 150700 296000)) nil (25479 28790 864362 575000) 0 nil])
([nil nil ((28388 . 28389)) nil (25479 28790 864359 763000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28412) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 28413) nil (25479 28790 864357 509000) 0 nil])
([nil nil ((28412 . 28413)) nil (25479 28790 864342 173000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28435) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 28436) nil (25479 28790 864338 495000) 0 nil])
([nil nil ((28435 . 28436)) nil (25479 28790 864299 825000) 0 nil])
([nil nil ((#("7" 0 1 (part-side css)) . -28435) (undo-tree-id769 . -1) 28436 (t 25479 28790 913970 213000)) nil (25479 28800 360892 599000) 0 nil])
([nil nil ((28435 . 28436)) nil (25479 28800 360889 371000) 0 nil])
([nil nil ((#("7" 0 1 (part-side css)) . -28412) (undo-tree-id768 . -1) 28413) nil (25479 28800 360887 678000) 0 nil])
([nil nil ((28412 . 28413)) nil (25479 28800 360884 404000) 0 nil])
([nil nil ((#("7" 0 1 (part-side css)) . -28388) (undo-tree-id767 . -1) 28389) nil (25479 28800 360881 843000) 0 nil])
([nil nil ((28388 . 28389)) nil (25479 28800 360865 2000) 0 nil])
([nil nil ((28439 . 28444) (t 25479 28800 410096 490000)) nil (25479 28825 384677 921000) 0 nil])
([nil nil ((28444 . 28465)) nil (25479 28825 384675 645000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28464) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) 28465) nil (25479 28825 384670 48000) 0 nil])
([nil nil ((#("5" 0 1 (part-side css)) . -28460) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) 28461 (t 25479 28825 426430 148000)) nil (25479 28830 944630 180000) 0 nil])
([nil nil ((28460 . 28461)) nil (25479 28830 944587 778000) 0 nil])
([nil nil ((#("#E0E0E0" 0 7 (face web-mode-css-color-face part-side css)) . 27784) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (t 25479 28830 994504 598000)) nil (25480 33323 177497 998000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27790 . 27791) (nil part-side css 27784 . 27791) (nil face web-mode-css-color-face 27784 . 27791) (27784 . 27791)) nil (25480 33323 177472 966000) 0 nil])
([nil nil ((#("#B0BEC5" 0 6 (face web-mode-css-color-face part-side css) 6 7 (face web-mode-css-color-face part-side css rear-nonsticky t)) . 27784) (undo-tree-id5 . -7) (undo-tree-id6 . -1) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (t 25480 33323 225931 276000)) nil (25480 33337 925398 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27790 . 27791) (nil part-side css 27784 . 27791) (nil face web-mode-css-color-face 27784 . 27791) (27784 . 27791)) nil (25480 33337 925378 751000) 0 nil])
([nil nil ((#("g" 0 1 (part-side css)) . -28665) (undo-tree-id0 . -1) (#("r" 0 1 (part-side css)) . -28666) (undo-tree-id1 . -1) (#("a" 0 1 (part-side css)) . -28667) (undo-tree-id2 . -1) (#("y" 0 1 (part-side css)) . -28668) (undo-tree-id3 . -1) 28669 (t 25480 33337 970199 299000)) nil (25481 48587 139849 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28671 . 28672) (nil part-side css 28665 . 28672) (nil face web-mode-css-color-face 28665 . 28672) (28665 . 28672)) nil (25481 48587 139811 742000) 0 nil])
([nil nil ((#("#" 0 1 (part-side css)) . -28665) (undo-tree-id4 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28666) (undo-tree-id5 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28667) (undo-tree-id6 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28668) (undo-tree-id7 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28669) (undo-tree-id8 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28670) (undo-tree-id9 . -1) (#("E" 0 1 (rear-nonsticky t part-side css face web-mode-css-color-face)) . -28671) (undo-tree-id10 . -1) 28672 (t 25481 48587 185967 496000)) nil (25481 48603 348291 161000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28671 . 28672) (nil part-side css 28665 . 28672) (nil face web-mode-css-color-face 28665 . 28672) (28665 . 28672)) nil (25481 48603 348267 297000) 0 nil])
([nil nil ((#("#" 0 1 (part-side css)) . -28665) (undo-tree-id11 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28666) (undo-tree-id12 . -1) (#("0" 0 1 (part-side css face web-mode-css-color-face)) . -28667) (undo-tree-id13 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28668) (undo-tree-id14 . -1) (#("0" 0 1 (part-side css face web-mode-css-color-face)) . -28669) (undo-tree-id15 . -1) (#("E" 0 1 (part-side css face web-mode-css-color-face)) . -28670) (undo-tree-id16 . -1) (#("0" 0 1 (rear-nonsticky t part-side css face web-mode-css-color-face)) . -28671) (undo-tree-id17 . -1) 28672 (t 25481 48603 389929 826000)) nil (25481 48666 102129 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28671 . 28672) (nil part-side css 28665 . 28672) (nil face web-mode-css-color-face 28665 . 28672) (28665 . 28672)) nil (25481 48666 102105 57000) 0 nil])
([nil nil ((#("#" 0 1 (part-side css)) . -28665) (undo-tree-id18 . -1) (#("B" 0 1 (part-side css face web-mode-css-color-face)) . -28666) (undo-tree-id19 . -1) (#("D" 0 1 (part-side css face web-mode-css-color-face)) . -28667) (undo-tree-id20 . -1) (#("B" 0 1 (part-side css face web-mode-css-color-face)) . -28668) (undo-tree-id21 . -1) (#("D" 0 1 (part-side css face web-mode-css-color-face)) . -28669) (undo-tree-id22 . -1) (#("B" 0 1 (part-side css face web-mode-css-color-face)) . -28670) (undo-tree-id23 . -1) (#("D" 0 1 (rear-nonsticky t part-side css face web-mode-css-color-face)) . -28671) (undo-tree-id24 . -1) 28672 (t 25481 48666 149781 691000)) nil (25481 48730 348269 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28671 . 28672) (nil part-side css 28665 . 28672) (nil face web-mode-css-color-face 28665 . 28672) (28665 . 28672)) nil (25481 48730 348244 797000) 0 nil])
([nil nil ((6451 . 6462) (t 25481 48730 393626 709000)) nil (25481 48769 207226 382000) 0 nil])
([nil nil ((6469 . 6474) (6462 . 6470)) nil (25481 48769 207225 172000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6473) (undo-tree-id26 . -1) 6474) nil (25481 48769 207223 682000) 0 nil])
([nil nil ((6473 . 6480)) nil (25481 48769 207221 62000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6479) (undo-tree-id25 . -1) 6480) nil (25481 48769 207219 427000) 0 nil])
([nil nil ((6479 . 6482)) nil (25481 48769 207209 567000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6488 . 6489) (nil tag-attr t 6482 . 6489) (nil tag-name "v-card" 6482 . 6489) (nil tag-type start 6482 . 6489) (nil font-lock-face web-mode-html-attr-value-face 6482 . 6489) (6482 . 6489)) nil (25481 48769 207207 520000) 0 nil])
([nil nil ((6489 . 6490)) nil (25481 48769 207199 483000) 0 nil])
([nil nil ((6490 . 6511) (t 25481 48769 249531 504000)) nil (25481 48827 976715 273000) 0 nil])
([nil nil ((6511 . 6513)) nil (25481 48827 976714 177000) 0 nil])
([nil nil ((6513 . 6517)) nil (25481 48827 976713 203000) 0 nil])
([nil nil ((#("o" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6512) (undo-tree-id35 . -1) (#("u" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6513) (undo-tree-id36 . -1) (#("s" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6514) (undo-tree-id37 . -1) (#(":" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6515) (undo-tree-id38 . -1) (#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6516) (undo-tree-id39 . -1) 6517) nil (25481 48827 976711 258000) 0 nil])
([nil nil ((6512 . 6519)) nil (25481 48827 976703 354000) 0 nil])
([nil nil ((#("x" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6517) (undo-tree-id33 . -1) (#("p" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6518) (undo-tree-id34 . -1) 6519) nil (25481 48827 976701 614000) 0 nil])
([nil nil ((6517 . 6521)) nil (25481 48833 883559 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6549 . 6550) (nil tag-attr t 6521 . 6550) (nil tag-name "v-card" 6521 . 6550) (nil tag-type start 6521 . 6550) (nil font-lock-face web-mode-html-attr-value-face 6521 . 6550) (6521 . 6550)) nil (25481 48841 430415 52000) 0 nil] [nil nil ((#("-" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6501) (undo-tree-id27 . -1) (#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6502) (undo-tree-id28 . -1) (#("i" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6503) (undo-tree-id29 . -1) (#("g" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6504) (undo-tree-id30 . -1) (#("h" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6505) (undo-tree-id31 . -1) (#("t" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6506) (undo-tree-id32 . -1) 6507) ((6501 . 6507) (t 25481 48828 21385 608000)) (25481 48827 976691 307000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6532) (undo-tree-id40 . -1) (#("i" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6533) (undo-tree-id41 . -1) (#("g" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6534) (undo-tree-id42 . -1) (#("h" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6535) (undo-tree-id43 . -1) (#("t" 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6536) (undo-tree-id44 . -1) 6537) nil (25481 48841 430410 671000) 0 nil])
nil
([nil nil ((6532 . 6536)) nil (25481 48841 430388 994000) 0 nil])
([nil nil ((28054 . 28057) (t 25481 48841 473351 913000)) nil (25481 49070 614997 624000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28054) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (part-side css)) . -28055) (undo-tree-id58 . -1) (#(" " 0 1 (part-side css)) . -28056) (undo-tree-id59 . -1) 28057) nil (25481 49070 614995 308000) 0 nil])
([nil nil ((28056 . 28058) (#("  " 0 2 (part-side css)) . 28055) (undo-tree-id55 . -2) (28054 . 28058)) nil (25481 49070 614989 658000) 0 nil])
([nil nil ((28058 . 28076)) nil (25481 49070 614987 272000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28075) (undo-tree-id54 . -1) 28076) nil (25481 49070 614985 954000) 0 nil])
([nil nil ((28076 . 28078) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28076) (28075 . 28077)) nil (25481 49070 614983 625000) 0 nil])
([nil nil ((28079 . 28081) (#("    " 0 4 (part-side css face whitespace-trailing)) . 28078) (undo-tree-id52 . -2) (undo-tree-id53 . 4) (28080 . 28082) (28077 . 28081)) nil (25481 49070 614981 839000) 0 nil])
([nil nil ((28078 . 28082)) nil (25481 49070 614978 182000) 0 nil])
([nil nil ((28082 . 28095)) nil (25481 49070 614977 229000) 0 nil])
([nil nil ((#("r" 0 1 (part-side css)) . -28089) (undo-tree-id46 . -1) (#("i" 0 1 (part-side css)) . -28090) (undo-tree-id47 . -1) (#("g" 0 1 (part-side css)) . -28091) (undo-tree-id48 . -1) (#("h" 0 1 (part-side css)) . -28092) (undo-tree-id49 . -1) (#("t" 0 1 (part-side css)) . -28093) (undo-tree-id50 . -1) (#(":" 0 1 (part-side css face web-mode-css-property-name-face)) . -28094) (undo-tree-id51 . -1) 28095) nil (25481 49070 614975 194000) 0 nil])
([nil nil ((28089 . 28093)) nil (25481 49070 614966 564000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . 28070) (#("h" 0 1 (part-side css face web-mode-css-selector-class-face)) . 28070) (#("g" 0 1 (part-side css face web-mode-css-selector-class-face)) . 28070) (#("i" 0 1 (part-side css face web-mode-css-selector-class-face)) . 28070) (#("r" 0 1 (part-side css face web-mode-css-selector-class-face)) . 28070)) nil (25481 49070 614964 683000) 0 nil])
([nil nil ((28070 . 28074)) nil (25481 49070 614962 786000) 0 nil])
([nil nil ((28092 . 28099)) nil (25481 49070 614961 829000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28098) (undo-tree-id45 . -1) 28099) nil (25481 49070 614959 894000) 0 nil])
([nil nil ((714 . 723)) nil (25481 49070 614949 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 735 . 736) (nil tag-attr t 721 . 736) (nil tag-name "span" 721 . 736) (nil tag-type start 721 . 736) (nil font-lock-face web-mode-html-attr-value-face 721 . 736) (721 . 736)) nil (25481 49113 738761 939000) 0 nil])
([nil nil ((1687 . 1696) (t 25481 49100 4686 843000)) nil (25481 49122 246854 411000) 0 nil] [nil nil ((nil rear-nonsticky nil 1701 . 1702) (nil tag-attr t 1688 . 1702) (nil tag-name "span" 1688 . 1702) (nil tag-type start 1688 . 1702) (nil font-lock-face web-mode-html-attr-name-face 1688 . 1702) (nil tag-attr-beg 0 1687 . 1688) (nil tag-attr t 1687 . 1688) (nil tag-name "span" 1687 . 1688) (nil tag-type start 1687 . 1688) (nil font-lock-face web-mode-html-attr-name-face 1687 . 1688) (1687 . 1702) (t 25481 49100 4686 843000)) ((#("tablestats_left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 14 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (rear-nonsticky nil tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face)) . 1687) (undo-tree-id131 . -15) (nil tag-name "span" 1687 . 1688) (nil tag-name "span" 1701 . 1702) (nil tag-name "span" 1688 . 1701) (nil rear-nonsticky t 1701 . 1702)) (25481 49113 736345 282000) 0 nil] [nil nil ((1092 . 1109) (t 25481 49070 656763 769000)) ((#("
                " 0 1 (tag-name "span" tag-type start) 1 17 (tag-name "span" tag-type start)) . 1092) (undo-tree-id93 . -1) (undo-tree-id94 . -17) (undo-tree-id95 . -17) (undo-tree-id96 . -17) (undo-tree-id97 . -17) (undo-tree-id98 . -17) (undo-tree-id99 . -17) (undo-tree-id100 . -17) (undo-tree-id101 . -17) (undo-tree-id102 . -17) (undo-tree-id103 . -17) (undo-tree-id104 . -17) (undo-tree-id105 . -17) (undo-tree-id106 . -17) (undo-tree-id107 . -17) (undo-tree-id108 . -17) (undo-tree-id109 . -17) (undo-tree-id110 . -17) (undo-tree-id111 . -17) (undo-tree-id112 . -17) (undo-tree-id113 . -17) (undo-tree-id114 . -17) (undo-tree-id115 . -17) (undo-tree-id116 . -17) (undo-tree-id117 . -17) (undo-tree-id118 . -1) (undo-tree-id119 . -17) (undo-tree-id120 . -17) (undo-tree-id121 . -17) (undo-tree-id122 . -17) (undo-tree-id123 . -17) (undo-tree-id124 . -17) (undo-tree-id125 . -17) (undo-tree-id126 . -17) (undo-tree-id127 . -17) (undo-tree-id128 . -17) (undo-tree-id129 . -17) (undo-tree-id130 . -17)) (25481 49095 529384 514000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1708 . 1709) (nil tag-attr t 1694 . 1709) (nil tag-name "span" 1694 . 1709) (nil tag-type start 1694 . 1709) (nil font-lock-face web-mode-html-attr-value-face 1694 . 1709) (1694 . 1709)) nil (25481 49122 246845 533000) 0 nil])
nil
([nil nil ((1109 . 1117)) ((#("class=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1109) (undo-tree-id70 . -7) (undo-tree-id71 . -4) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7)) (25481 49095 169579 762000) 0 nil] [nil nil ((nil rear-nonsticky nil 1123 . 1124) (nil tag-attr t 1123 . 1124) (nil tag-attr-end 0 1123 . 1124) (nil tag-name "span" 1123 . 1124) (nil tag-type start 1123 . 1124) (nil font-lock-face web-mode-html-attr-name-face 1123 . 1124) (nil tag-attr t 1110 . 1123) (nil tag-name "span" 1110 . 1123) (nil tag-type start 1110 . 1123) (nil font-lock-face web-mode-html-attr-name-face 1110 . 1123) (nil tag-attr-beg 0 1109 . 1110) (nil tag-attr t 1109 . 1110) (nil tag-name "span" 1109 . 1110) (nil tag-type start 1109 . 1110) (nil font-lock-face web-mode-html-attr-name-face 1109 . 1110) (1109 . 1124)) ((#("tablestats_left" 0 1 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 1 14 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (rear-nonsticky nil tag-attr t tag-attr-end 0 tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face)) . 1109) (undo-tree-id60 . -15) (nil tag-name "span" 1109 . 1110) (nil tag-name "span" 1110 . 1123) (nil tag-name "span" 1123 . 1124) (nil rear-nonsticky t 1123 . 1124)) (25481 49089 456074 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2182 . 2183) (nil tag-attr t 2182 . 2183) (nil tag-attr-end 5 2182 . 2183) (nil tag-name "span" 2182 . 2183) (nil tag-type start 2182 . 2183) (nil font-lock-face web-mode-html-attr-value-face 2182 . 2183) (nil rear-nonsticky t 2181 . 2182) (nil tag-attr t 2181 . 2182) (nil tag-name "span" 2181 . 2182) (nil tag-type start 2181 . 2182) (nil font-lock-face web-mode-html-attr-value-face 2181 . 2182) (nil tag-attr t 2167 . 2181) (nil tag-name "span" 2167 . 2181) (nil tag-type start 2167 . 2181) (nil font-lock-face web-mode-html-attr-value-face 2167 . 2181) (nil tag-attr t 2166 . 2167) (nil tag-name "span" 2166 . 2167) (nil tag-type start 2166 . 2167) (nil font-lock-face web-mode-html-attr-value-face 2166 . 2167) (nil tag-attr t 2165 . 2166) (nil tag-name "span" 2165 . 2166) (nil tag-type start 2165 . 2166) (nil font-lock-face web-mode-html-attr-equal-face 2165 . 2166) (nil tag-attr t 2161 . 2165) (nil tag-name "span" 2161 . 2165) (nil tag-type start 2161 . 2165) (nil font-lock-face web-mode-html-attr-name-face 2161 . 2165) (nil tag-attr-beg 0 2160 . 2161) (nil tag-attr t 2160 . 2161) (nil tag-name "span" 2160 . 2161) (nil tag-type start 2160 . 2161) (nil font-lock-face web-mode-html-attr-name-face 2160 . 2161) (2160 . 2183) (t 25481 49122 296628 208000)) nil (25481 49145 113406 993000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1130 . 1131) (nil tag-attr t 1116 . 1131) (nil tag-name "span" 1116 . 1131) (nil tag-type start 1116 . 1131) (nil font-lock-face web-mode-html-attr-value-face 1116 . 1131) (1116 . 1131)) ((#("tablestats_left" 0 14 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 14 15 (rear-nonsticky nil tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 1116) (undo-tree-id61 . -15) (undo-tree-id62 . -15) (undo-tree-id63 . -15) (undo-tree-id64 . -15) (undo-tree-id65 . -15) (undo-tree-id66 . -15) (undo-tree-id67 . -15) (undo-tree-id68 . -15) (undo-tree-id69 . -15) (nil tag-name "span" 1130 . 1131) (nil tag-name "span" 1116 . 1130) (nil rear-nonsticky t 1130 . 1131) (t 25481 49092 64707 686000)) (25481 49092 17831 526000) 0 nil])
nil
([nil nil ((2183 . 2184)) nil (25481 49145 113387 573000) 0 nil])
nil
([nil nil ((#("3" 0 1 (part-side css)) . -28166) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 28167 (t 25481 49145 168567 873000)) nil (25481 49170 553748 814000) 0 nil])
([nil nil ((28166 . 28167)) nil (25481 49170 553744 54000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28166) (undo-tree-id132 . -1) 28167) nil (25481 49170 553741 736000) 0 nil])
([nil nil ((28166 . 28169)) nil (25481 49170 553724 896000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28166) (undo-tree-id135 . -1) (#("9" 0 1 (part-side css)) . -28167) (undo-tree-id136 . -1) (#("0" 0 1 (part-side css)) . -28168) (undo-tree-id137 . -1) 28169 (t 25481 49170 596500 594000)) nil (25481 49177 427584 890000) 0 nil])
([nil nil ((28166 . 28167)) nil (25481 49177 427566 739000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28166) (undo-tree-id138 . -1) 28167 (t 25481 49177 472482 367000)) nil (25481 49187 391882 35000) 0 nil])
([nil nil ((28166 . 28168)) nil (25481 49187 391864 105000) 0 nil])
([nil nil ((#("1" 0 1 (part-side css)) . -28166) (undo-tree-id139 . -1) (#("0" 0 1 (part-side css)) . -28167) (undo-tree-id140 . -1) 28168 (t 25481 49187 436455 930000)) nil (25481 49201 876138 744000) 0 nil])
([nil nil ((28166 . 28167)) nil (25481 49201 876120 156000) 0 nil])
([nil nil ((#("8" 0 1 (part-side css)) . -28166) (undo-tree-id141 . -1) 28167 (t 25481 49201 928417 425000)) nil (25481 49207 223080 750000) 0 nil])
([nil nil ((28166 . 28168)) nil (25481 49207 223066 860000) 0 nil])
([nil nil ((#("{{(cursorX+1)}}" 0 1 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 1 2 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 2 3 (face (rainbow-delimiters-depth-3-face) block-side t) 3 4 (face web-mode-variable-name-face block-side t) 4 5 (face web-mode-variable-name-face block-side t) 5 6 (face web-mode-variable-name-face block-side t) 6 7 (face web-mode-variable-name-face block-side t) 7 8 (face web-mode-variable-name-face block-side t) 8 9 (face web-mode-variable-name-face block-side t) 9 10 (face web-mode-variable-name-face block-side t) 10 12 (block-side t) 12 13 (face (rainbow-delimiters-depth-3-face) block-side t) 13 14 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 14 15 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 422) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -15) (undo-tree-id3 . -15) (t 25481 50701 605862 78000)) nil (25485 63144 237625 446000) 0 nil])
([nil nil ((" " . 422) ("/" . 422) (" " . 422)) nil (25485 63144 237605 61000) 0 nil])
([nil nil ((446 . 449)) nil (25485 63144 237602 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 463 . 464) (nil block-side t 463 . 464) (nil block-end t 463 . 464) (nil block-token delimiter-end 463 . 464) (nil font-lock-face web-mode-block-delimiter-face 463 . 464) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 463 . 464) (nil block-side t 462 . 463) (nil block-token delimiter-end 462 . 463) (nil font-lock-face web-mode-block-delimiter-face 462 . 463) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 462 . 463) (nil block-side t 461 . 462) (nil face (rainbow-delimiters-depth-3-face) 461 . 462) (nil block-side t 459 . 461) (nil block-side t 458 . 459) (nil face web-mode-variable-name-face 458 . 459) (nil block-side t 457 . 458) (nil face web-mode-variable-name-face 457 . 458) (nil block-side t 456 . 457) (nil face web-mode-variable-name-face 456 . 457) (nil block-side t 455 . 456) (nil face web-mode-variable-name-face 455 . 456) (nil block-side t 454 . 455) (nil face web-mode-variable-name-face 454 . 455) (nil block-side t 453 . 454) (nil face web-mode-variable-name-face 453 . 454) (nil block-side t 452 . 453) (nil face web-mode-variable-name-face 452 . 453) (nil block-side t 451 . 452) (nil face (rainbow-delimiters-depth-3-face) 451 . 452) (nil block-side t 450 . 451) (nil block-token delimiter-beg 450 . 451) (nil font-lock-face web-mode-block-delimiter-face 450 . 451) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 450 . 451) (nil block-beg 0 449 . 450) (nil block-controls 0 449 . 450) (nil block-side t 449 . 450) (nil block-token delimiter-beg 449 . 450) (nil font-lock-face web-mode-block-delimiter-face 449 . 450) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 449 . 450) (449 . 464)) nil (25485 63144 237594 580000) 0 nil])
([nil nil ((5109 . 5114) (t 25487 6259 814460 951000)) nil (25487 17000 58388 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5163 . 5164) (nil tag-name "v-progress-linear" 5163 . 5164) (nil tag-type end 5163 . 5164) (nil tag-end t 5163 . 5164) (nil font-lock-face web-mode-html-tag-bracket-face 5163 . 5164) (nil tag-name "v-progress-linear" 5146 . 5163) (nil tag-type end 5146 . 5163) (nil font-lock-face web-mode-html-tag-custom-face 5146 . 5163) (nil tag-name "v-progress-linear" 5145 . 5146) (nil tag-type end 5145 . 5146) (nil font-lock-face web-mode-html-tag-bracket-face 5145 . 5146) (nil tag-name "v-progress-linear" 5144 . 5145) (nil tag-type end 5144 . 5145) (nil tag-beg 22 5144 . 5145) (nil font-lock-face web-mode-html-tag-bracket-face 5144 . 5145) (nil tag-name "v-progress-linear" 5143 . 5144) (nil tag-type start 5143 . 5144) (nil tag-end t 5143 . 5144) (nil font-lock-face web-mode-html-tag-bracket-face 5143 . 5144) (nil tag-attr t 5142 . 5143) (nil tag-attr-end 5 5142 . 5143) (nil tag-name "v-progress-linear" 5142 . 5143) (nil tag-type start 5142 . 5143) (nil font-lock-face web-mode-html-attr-value-face 5142 . 5143) (nil tag-attr t 5139 . 5142) (nil tag-name "v-progress-linear" 5139 . 5142) (nil tag-type start 5139 . 5142) (nil font-lock-face web-mode-html-attr-value-face 5139 . 5142) (nil tag-attr t 5138 . 5139) (nil tag-name "v-progress-linear" 5138 . 5139) (nil tag-type start 5138 . 5139) (nil font-lock-face web-mode-html-attr-equal-face 5138 . 5139) (nil tag-attr t 5134 . 5138) (nil tag-name "v-progress-linear" 5134 . 5138) (nil tag-type start 5134 . 5138) (nil font-lock-face web-mode-html-attr-name-face 5134 . 5138) (nil tag-attr-beg 0 5133 . 5134) (nil tag-attr t 5133 . 5134) (nil tag-name "v-progress-linear" 5133 . 5134) (nil tag-type start 5133 . 5134) (nil font-lock-face web-mode-html-attr-name-face 5133 . 5134) (nil tag-name "v-progress-linear" 5132 . 5133) (nil tag-type start 5132 . 5133) (nil tag-name "v-progress-linear" 5115 . 5132) (nil tag-type start 5115 . 5132) (nil font-lock-face web-mode-html-tag-custom-face 5115 . 5132) (nil tag-name "v-progress-linear" 5114 . 5115) (nil tag-type start 5114 . 5115) (nil tag-beg 19 5114 . 5115) (nil font-lock-face web-mode-html-tag-bracket-face 5114 . 5115) (5114 . 5164)) nil (25487 17000 58379 204000) 0 nil])
([nil nil ((5140 . 5151) (5133 . 5142) (t 25487 17000 151604 807000)) nil (25487 17045 245032 963000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5164 . 5165) (nil tag-attr t 5151 . 5165) (nil tag-name "v-progress-linear" 5151 . 5165) (nil tag-type start 5151 . 5165) (nil font-lock-face web-mode-html-attr-value-face 5151 . 5165) (5151 . 5165)) nil (25487 17045 245030 460000) 0 nil])
([nil nil ((5151 . 5153)) nil (25487 17045 245021 602000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5153) (t 25487 17045 338802 616000)) nil (25487 17064 248912 336000) 0 nil])
([nil nil ((5153 . 5154)) nil (25487 17064 248909 402000) 0 nil])
([nil nil ((#("d" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5163) (#("e" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5163) (#("r" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5163)) nil (25487 17064 248907 973000) 0 nil])
([nil nil ((5163 . 5168)) nil (25487 17064 248906 364000) 0 nil])
([nil nil ((#("c" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5165) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("k" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5166) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5167) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 5168) nil (25487 17064 248901 305000) 0 nil])
([nil nil ((5165 . 5169)) nil (25487 17064 248811 408000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5168) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 5169) nil (25487 17064 248806 381000) 0 nil])
([nil nil ((5168 . 5169) (t 25487 17064 342465 223000)) nil (25487 17080 442517 701000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5168) (undo-tree-id62 . -1) 5169) nil (25487 17080 442516 126000) 0 nil])
([nil nil ((5169 . 5170)) nil (25487 17080 442513 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5198 . 5199) (nil rear-nonsticky t 5198 . 5199) (nil tag-attr t 5198 . 5199) (nil tag-name "v-progress-linear" 5198 . 5199) (nil tag-type start 5198 . 5199) (nil font-lock-face web-mode-html-attr-value-face 5198 . 5199) (nil tag-attr t 5184 . 5198) (nil tag-name "v-progress-linear" 5184 . 5198) (nil tag-type start 5184 . 5198) (nil font-lock-face web-mode-html-attr-value-face 5184 . 5198) (nil tag-attr t 5170 . 5184) (nil tag-name "v-progress-linear" 5170 . 5184) (nil tag-type start 5170 . 5184) (nil font-lock-face web-mode-html-attr-value-face 5170 . 5184) (5170 . 5199)) nil (25487 17080 442511 637000) 0 nil])
([nil nil ((#("l" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5177) (undo-tree-id58 . -1) (#("e" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5178) (undo-tree-id59 . -1) (#("f" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5179) (undo-tree-id60 . -1) (#("t" 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5180) (undo-tree-id61 . -1) 5181) nil (25487 17080 442505 519000) 0 nil])
([nil nil ((5177 . 5182)) nil (25487 17080 442485 24000) 0 nil])
([nil nil ((28696 . 28698) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28695) (28695 . 28697) (28695 . 28696) (t 25487 17080 534177 747000)) nil (25487 17136 989241 726000) 0 nil])
([nil nil ((28698 . 28708)) nil (25487 17136 989239 928000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28705) (undo-tree-id82 . -1) (#("r" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28706) (undo-tree-id83 . -1) (#("o" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28707) (undo-tree-id84 . -1) 28708) nil (25487 17136 989238 418000) 0 nil])
([nil nil ((28715 . 28717) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28715) (28705 . 28716)) nil (25487 17136 989233 929000) 0 nil])
([nil nil ((28718 . 28720) (#("    " 0 4 (part-side css face whitespace-trailing)) . 28717) (undo-tree-id80 . -2) (undo-tree-id81 . 4) (28719 . 28721) (28716 . 28720)) nil (25487 17136 989232 207000) 0 nil])
([nil nil ((28721 . 28724)) nil (25487 17136 989228 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28776 . 28777) (nil rear-nonsticky t 28776 . 28777) (nil part-side css 28776 . 28777) (nil part-side css 28760 . 28776) (nil part-side css 28747 . 28760) (nil face web-mode-css-property-name-face 28747 . 28760) (nil part-side css 28746 . 28747) (nil rear-nonsticky t 28745 . 28746) (nil part-side css 28745 . 28746) (nil part-side css 28731 . 28745) (nil part-side css 28729 . 28731) (nil part-side css 28717 . 28729) (nil face web-mode-css-property-name-face 28717 . 28729) (28717 . 28777)) nil (25487 17136 989227 141000) 0 nil])
([nil nil ((28717 . 28721) 28777) nil (25487 17136 989223 505000) 0 nil])
([nil nil ((28751 . 28755) (#(" " 0 1 (part-side css)) . 28750) (undo-tree-id79 . -1) (28751 . 28752)) nil (25487 17136 989221 974000) 0 nil])
([nil nil ((#("style=\"border-left: 1px solid black; border-right: 1px solid black;\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 1 5 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 21 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 21 35 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (rear-nonsticky t tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 37 66 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (rear-nonsticky t tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 67 68 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 5133) (undo-tree-id70 . -7) (undo-tree-id71 . -68) (undo-tree-id72 . -36) (undo-tree-id73 . -18) (undo-tree-id74 . -35) (undo-tree-id75 . -36) (undo-tree-id76 . -37) (undo-tree-id77 . -67) (undo-tree-id78 . -68)) nil (25487 17136 989219 25000) 0 nil])
([nil nil ((5140 . 5146) (5133 . 5141)) nil (25487 17136 989208 859000) 0 nil])
([nil nil ((5146 . 5157)) nil (25487 17136 989207 588000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -5156) (undo-tree-id69 . -1) 5157) nil (25487 17136 989206 442000) 0 nil])
([nil nil ((28741 . 28746)) nil (25487 17136 989204 179000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28767 . 28768) (nil part-side css 28767 . 28768) (nil part-side css 28760 . 28767) (nil face web-mode-css-color-face 28760 . 28767) (nil part-side css 28759 . 28760) (nil part-side css 28746 . 28759) (nil face web-mode-css-property-name-face 28746 . 28759) (28746 . 28768)) nil (25487 17136 989202 768000) 0 nil])
([nil nil ((#("black" 0 5 (part-side css)) . 28735) (undo-tree-id67 . -5) (undo-tree-id68 . -5)) nil (25487 17136 989200 140000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28734) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 28735) nil (25487 17136 989196 671000) 0 nil])
([nil nil ((#(" black" 0 6 (part-side css)) . 28699) (undo-tree-id63 . -6) (undo-tree-id64 . -6)) nil (25487 17136 989192 168000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -28761) 28699) nil (25487 17136 989175 678000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28693) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("s" 0 1 (part-side css)) . -28694) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("o" 0 1 (part-side css)) . -28695) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("l" 0 1 (part-side css)) . -28696) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("i" 0 1 (part-side css)) . -28697) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("d" 0 1 (part-side css)) . -28698) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 28699 (t 25487 17137 77173 771000)) nil (25487 17148 776409 312000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css)) . 28716) (undo-tree-id85 . -1) (#("i" 0 1 (part-side css)) . 28716) (#("l" 0 1 (part-side css)) . 28716) (#("o" 0 1 (part-side css)) . 28716) (#("s" 0 1 (part-side css)) . 28716) (#(" " 0 1 (part-side css)) . 28716)) nil (25487 17148 776387 655000) 0 nil])
([nil nil ((28717 . 28722) (t 25487 17148 868965 300000)) nil (25487 17193 107256 985000) 0 nil])
([nil nil ((28722 . 28743)) nil (25487 17193 107255 37000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28742) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 28743) nil (25487 17193 107249 568000) 0 nil])
([nil nil ((28664 . 28665) (t 25487 17193 208221 794000)) nil (25487 17210 393619 657000) 0 nil])
([nil nil ((28717 . 28724) (t 25487 17210 487931 132000)) nil (25487 17226 229206 673000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28723) (undo-tree-id115 . -1) 28724) nil (25487 17226 229205 124000) 0 nil])
([nil nil ((28694 . 28701)) nil (25487 17226 229202 639000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28700) (undo-tree-id114 . -1) 28701) nil (25487 17226 229200 468000) 0 nil])
([nil nil ((#("
    border-style: solid;" 0 1 (part-side css) 1 5 (part-side css) 5 18 (part-side css face web-mode-css-property-name-face) 18 25 (part-side css)) . 28730) (undo-tree-id111 . -1) (undo-tree-id112 . -25) (undo-tree-id113 . -25)) nil (25487 17226 229193 520000) 0 nil])
([nil nil ((16251 . 16258) (t 25487 17226 315664 473000)) nil (25487 17461 958131 639000) 0 nil])
([nil nil ((16258 . 16265)) nil (25487 17461 958130 521000) 0 nil])
([nil nil ((#("c" 0 1 (part-side javascript)) . -16258) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("u" 0 1 (part-side javascript)) . -16259) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("r" 0 1 (part-side javascript)) . -16260) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("s" 0 1 (part-side javascript)) . -16261) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("o" 0 1 (part-side javascript)) . -16262) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("r" 0 1 (part-side javascript)) . -16263) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("v" 0 1 (part-side javascript)) . -16264) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 16265) nil (25487 17461 958127 754000) 0 nil])
([nil nil ((16258 . 16270)) nil (25487 17461 958104 528000) 0 nil])
([nil nil ((#("_" 0 1 (part-side javascript)) . -16266) (undo-tree-id129 . -1) (#("v" 0 1 (part-side javascript)) . -16267) (undo-tree-id130 . -1) (#("a" 0 1 (part-side javascript)) . -16268) (undo-tree-id131 . -1) (#("l" 0 1 (part-side javascript)) . -16269) (undo-tree-id132 . -1) 16270) nil (25487 17461 958102 900000) 0 nil])
([nil nil ((16266 . 16270)) nil (25487 17461 958097 86000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16269) (undo-tree-id128 . -1) 16270) nil (25487 17461 958095 935000) 0 nil])
([nil nil ((16269 . 16280)) nil (25487 17461 958093 786000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16279) (undo-tree-id127 . -1) 16280) nil (25487 17461 958092 720000) 0 nil])
([nil nil ((16279 . 16280)) nil (25487 17461 958090 661000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -16279) (undo-tree-id126 . -1) 16280) nil (25487 17461 958089 583000) 0 nil])
([nil nil ((16279 . 16281) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -16279) (16279 . 16280)) nil (25487 17461 958087 384000) 0 nil])
([nil nil ((16282 . 16284) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-3-face))) . -16282) (16281 . 16283)) nil (25487 17461 958085 866000) 0 nil])
([nil nil ((16285 . 16291) (#("        " 0 8 (part-side javascript face whitespace-trailing)) . 16284) (undo-tree-id124 . 8) (16284 . 16292) (#("      " 0 6 (part-side javascript)) . 16284) (undo-tree-id125 . -6) (16283 . 16291)) nil (25487 17461 958084 120000) 0 nil])
([nil nil ((16291 . 16292)) nil (25487 17461 958080 289000) 0 nil])
([nil nil ((5158 . 5159)) nil (25487 17461 958079 298000) 0 nil])
([nil nil ((#("5" 0 1 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start)) . 5166) (#("1" 0 1 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start)) . 5166)) nil (25487 17461 958078 201000) 0 nil])
([nil nil ((5166 . 5174)) nil (25487 17461 958077 122000) 0 nil])
([nil nil ((5174 . 5178)) nil (25487 17461 958076 239000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start)) . -5177) (undo-tree-id123 . -1) 5178) nil (25487 17461 958075 115000) 0 nil])
([nil nil ((16294 . 16302)) nil (25487 17461 958072 745000) 0 nil])
([nil nil ((16302 . 16315)) nil (25487 17461 958071 885000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16314) (undo-tree-id122 . -1) 16315) nil (25487 17461 958070 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16331 . 16332) (nil part-side javascript 16330 . 16332) (nil part-side javascript 16329 . 16330) (nil part-side javascript 16328 . 16329) (nil part-side javascript 16327 . 16328) (nil part-side javascript 16326 . 16327) (nil part-side javascript 16325 . 16326) (nil part-side javascript 16324 . 16325) (nil part-side javascript 16323 . 16324) (nil part-side javascript 16320 . 16323) (nil part-side javascript 16319 . 16320) (nil part-side javascript 16318 . 16319) (nil part-side javascript 16317 . 16318) (nil part-side javascript 16316 . 16317) (nil part-side javascript 16315 . 16316) (nil part-side javascript 16314 . 16315) (16314 . 16332)) nil (25487 17461 958067 766000) 0 nil])
([nil nil ((16323 . 16328)) nil (25487 17461 958063 748000) 0 nil])
([nil nil ((16335 . 16336)) nil (25487 17461 958062 886000) 0 nil])
([nil nil ((16337 . 16338)) nil (25487 17461 958062 20000) 0 nil])
([nil nil ((16293 . 16302)) nil (25487 17461 958061 146000) 0 nil])
([nil nil ((16302 . 16317)) nil (25487 17461 958060 294000) 0 nil])
([nil nil ((16317 . 16319)) nil (25487 17461 958059 450000) 0 nil])
([nil nil ((#("w" 0 1 (part-side javascript face web-mode-variable-name-face)) . -16317) (undo-tree-id120 . -1) (#("o" 0 1 (part-side javascript face web-mode-variable-name-face)) . -16318) (undo-tree-id121 . -1) 16319) nil (25487 17461 958058 98000) 0 nil])
([nil nil ((16317 . 16322)) nil (25487 17461 958054 414000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . 16322) (#("n" 0 1 (part-side javascript)) . 16322) (#("r" 0 1 (part-side javascript)) . 16322) (#("u" 0 1 (part-side javascript)) . 16322) (#("t" 0 1 (part-side javascript)) . 16322) (#("e" 0 1 (part-side javascript)) . 16322) (#("r" 0 1 (part-side javascript face web-mode-keyword-face)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#(" " 0 1 (part-side javascript)) . 16322) (#("
" 0 1 (part-side javascript)) . 16322) (undo-tree-id118 . -1) (undo-tree-id119 . 1)) nil (25487 17461 958051 231000) 0 nil])
([nil nil ((16352 . 16361)) nil (25487 17461 958044 951000) 0 nil])
([nil nil ((16361 . 16368)) nil (25487 17461 958044 81000) 0 nil])
([nil nil ((16368 . 16388)) nil (25487 17461 958043 164000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16387) (undo-tree-id117 . -1) 16388) nil (25487 17461 958042 59000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16395 . 16396) (nil part-side javascript 16395 . 16396) (nil part-side javascript 16394 . 16395) (nil part-side javascript 16393 . 16394) (nil part-side javascript 16392 . 16393) (nil part-side javascript 16391 . 16392) (nil part-side javascript 16390 . 16391) (nil part-side javascript 16389 . 16390) (nil part-side javascript 16388 . 16389) (nil part-side javascript 16387 . 16388) (16387 . 16396)) nil (25487 17461 958038 818000) 0 nil])
([nil nil ((16396 . 16403)) nil (25487 17461 958035 837000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -16402) (undo-tree-id116 . -1) 16403) nil (25487 17461 958034 674000) 0 nil])
([nil nil ((16368 . 16370) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . -16368) (16368 . 16369)) nil (25487 17461 958024 848000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-4-face))) . 16369)) nil (25487 17461 958023 399000) 0 nil])
([nil nil ((16403 . 16404)) nil (25487 17461 958022 408000) 0 nil])
([nil nil ((16397 . 16398)) nil (25487 17461 958021 319000) 0 nil])
([nil nil ((16369 . 16371) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -16369) (16369 . 16370)) nil (25487 17461 958019 350000) 0 nil])
([nil nil ((#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . 16370)) nil (25487 17461 958011 864000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -16413) (undo-tree-id151 . -1) 16414 (t 25487 17462 51652 418000)) nil (25487 17468 904429 919000) 0 nil])
([nil nil ((16414 . 16415)) nil (25487 17468 904416 237000) 0 nil])
([nil nil ((#("    <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>" 4 5 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 5 22 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 22 23 (tag-name "v-progress-linear" tag-type start) 23 24 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 24 25 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 25 26 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 27 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 27 28 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 28 29 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 29 46 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 47 48 (tag-name "v-progress-linear" tag-type start) 48 49 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 49 50 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 50 51 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 57 58 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 68 69 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 69 70 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 70 71 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 71 88 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 88 89 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 5110) (undo-tree-id159 . -89) (undo-tree-id160 . -23) (undo-tree-id161 . -23) (undo-tree-id162 . -23) (undo-tree-id163 . -23) (undo-tree-id164 . -89) (t 25487 17468 991533 336000)) nil (25487 17826 939199 199000) 0 nil])
([nil nil (("
" . -5109) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 5110) nil (25487 17826 939191 291000) 0 nil])
([nil nil ((6400 . 6407)) nil (25487 17826 939174 723000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6495 . 6496) (nil rear-nonsticky t 6495 . 6496) (nil tag-name "v-progress-linear" 6495 . 6496) (nil tag-type end 6495 . 6496) (nil tag-end t 6495 . 6496) (nil font-lock-face web-mode-html-tag-bracket-face 6495 . 6496) (nil tag-name "v-progress-linear" 6478 . 6495) (nil tag-type end 6478 . 6495) (nil font-lock-face web-mode-html-tag-custom-face 6478 . 6495) (nil tag-name "v-progress-linear" 6477 . 6478) (nil tag-type end 6477 . 6478) (nil font-lock-face web-mode-html-tag-bracket-face 6477 . 6478) (nil tag-name "v-progress-linear" 6476 . 6477) (nil tag-type end 6476 . 6477) (nil tag-beg 22 6476 . 6477) (nil font-lock-face web-mode-html-tag-bracket-face 6476 . 6477) (nil tag-name "v-progress-linear" 6475 . 6476) (nil tag-type start 6475 . 6476) (nil tag-end t 6475 . 6476) (nil font-lock-face web-mode-html-tag-bracket-face 6475 . 6476) (nil block-side t 6474 . 6475) (nil block-end t 6474 . 6475) (nil block-token delimiter-end 6474 . 6475) (nil tag-attr t 6474 . 6475) (nil tag-attr-end 6 6474 . 6475) (nil tag-name "v-progress-linear" 6474 . 6475) (nil tag-type start 6474 . 6475) (nil font-lock-face web-mode-block-delimiter-face 6474 . 6475) (nil block-side t 6473 . 6474) (nil tag-attr t 6473 . 6474) (nil tag-name "v-progress-linear" 6473 . 6474) (nil tag-type start 6473 . 6474) (nil face web-mode-variable-name-face 6473 . 6474) (nil block-side t 6472 . 6473) (nil tag-attr t 6472 . 6473) (nil tag-name "v-progress-linear" 6472 . 6473) (nil tag-type start 6472 . 6473) (nil face web-mode-variable-name-face 6472 . 6473) (nil block-side t 6471 . 6472) (nil tag-attr t 6471 . 6472) (nil tag-name "v-progress-linear" 6471 . 6472) (nil tag-type start 6471 . 6472) (nil face web-mode-variable-name-face 6471 . 6472) (nil block-side t 6470 . 6471) (nil tag-attr t 6470 . 6471) (nil tag-name "v-progress-linear" 6470 . 6471) (nil tag-type start 6470 . 6471) (nil face web-mode-variable-name-face 6470 . 6471) (nil block-side t 6469 . 6470) (nil tag-attr t 6469 . 6470) (nil tag-name "v-progress-linear" 6469 . 6470) (nil tag-type start 6469 . 6470) (nil face web-mode-variable-name-face 6469 . 6470) (nil block-side t 6468 . 6469) (nil tag-attr t 6468 . 6469) (nil tag-name "v-progress-linear" 6468 . 6469) (nil tag-type start 6468 . 6469) (nil face web-mode-variable-name-face 6468 . 6469) (nil block-side t 6467 . 6468) (nil tag-attr t 6467 . 6468) (nil tag-name "v-progress-linear" 6467 . 6468) (nil tag-type start 6467 . 6468) (nil face web-mode-variable-name-face 6467 . 6468) (nil block-side t 6466 . 6467) (nil tag-attr t 6466 . 6467) (nil tag-name "v-progress-linear" 6466 . 6467) (nil tag-type start 6466 . 6467) (nil face web-mode-variable-name-face 6466 . 6467) (nil block-side t 6465 . 6466) (nil tag-attr t 6465 . 6466) (nil tag-name "v-progress-linear" 6465 . 6466) (nil tag-type start 6465 . 6466) (nil face web-mode-variable-name-face 6465 . 6466) (nil block-side t 6464 . 6465) (nil tag-attr t 6464 . 6465) (nil tag-name "v-progress-linear" 6464 . 6465) (nil tag-type start 6464 . 6465) (nil face web-mode-variable-name-face 6464 . 6465) (nil block-side t 6463 . 6464) (nil tag-attr t 6463 . 6464) (nil tag-name "v-progress-linear" 6463 . 6464) (nil tag-type start 6463 . 6464) (nil face web-mode-variable-name-face 6463 . 6464) (nil block-side t 6462 . 6463) (nil block-token delimiter-beg 6462 . 6463) (nil tag-attr t 6462 . 6463) (nil tag-name "v-progress-linear" 6462 . 6463) (nil tag-type start 6462 . 6463) (nil font-lock-face web-mode-block-delimiter-face 6462 . 6463) (nil block-side t 6461 . 6462) (nil block-token delimiter-beg 6461 . 6462) (nil tag-attr t 6461 . 6462) (nil tag-name "v-progress-linear" 6461 . 6462) (nil tag-type start 6461 . 6462) (nil font-lock-face web-mode-block-delimiter-face 6461 . 6462) (nil block-side t 6460 . 6461) (nil block-token delimiter-beg 6460 . 6461) (nil tag-attr t 6460 . 6461) (nil tag-name "v-progress-linear" 6460 . 6461) (nil tag-type start 6460 . 6461) (nil font-lock-face web-mode-block-delimiter-face 6460 . 6461) (nil block-side t 6459 . 6460) (nil block-token delimiter-beg 6459 . 6460) (nil tag-attr t 6459 . 6460) (nil tag-name "v-progress-linear" 6459 . 6460) (nil tag-type start 6459 . 6460) (nil font-lock-face web-mode-block-delimiter-face 6459 . 6460) (nil block-side t 6458 . 6459) (nil block-token delimiter-beg 6458 . 6459) (nil tag-attr t 6458 . 6459) (nil tag-name "v-progress-linear" 6458 . 6459) (nil tag-type start 6458 . 6459) (nil font-lock-face web-mode-block-delimiter-face 6458 . 6459) (nil block-side t 6457 . 6458) (nil block-token delimiter-beg 6457 . 6458) (nil tag-attr t 6457 . 6458) (nil tag-name "v-progress-linear" 6457 . 6458) (nil tag-type start 6457 . 6458) (nil font-lock-face web-mode-block-delimiter-face 6457 . 6458) (nil block-side t 6456 . 6457) (nil block-token delimiter-beg 6456 . 6457) (nil tag-attr t 6456 . 6457) (nil tag-name "v-progress-linear" 6456 . 6457) (nil tag-type start 6456 . 6457) (nil font-lock-face web-mode-block-delimiter-face 6456 . 6457) (nil block-beg 0 6455 . 6456) (nil block-controls 0 6455 . 6456) (nil block-side t 6455 . 6456) (nil block-token delimiter-beg 6455 . 6456) (nil tag-attr-beg 2 6455 . 6456) (nil tag-attr t 6455 . 6456) (nil tag-name "v-progress-linear" 6455 . 6456) (nil tag-type start 6455 . 6456) (nil font-lock-face web-mode-block-delimiter-face 6455 . 6456) (nil tag-name "v-progress-linear" 6454 . 6455) (nil tag-type start 6454 . 6455) (nil tag-attr t 6453 . 6454) (nil tag-attr-end 5 6453 . 6454) (nil tag-name "v-progress-linear" 6453 . 6454) (nil tag-type start 6453 . 6454) (nil font-lock-face web-mode-html-attr-value-face 6453 . 6454) (nil tag-attr t 6436 . 6453) (nil tag-name "v-progress-linear" 6436 . 6453) (nil tag-type start 6436 . 6453) (nil font-lock-face web-mode-html-attr-value-face 6436 . 6453) (nil tag-attr t 6435 . 6436) (nil tag-name "v-progress-linear" 6435 . 6436) (nil tag-type start 6435 . 6436) (nil font-lock-face web-mode-html-attr-equal-face 6435 . 6436) (nil tag-attr t 6434 . 6435) (nil tag-name "v-progress-linear" 6434 . 6435) (nil tag-type start 6434 . 6435) (nil font-lock-face web-mode-html-attr-name-face 6434 . 6435) (nil tag-attr t 6433 . 6434) (nil tag-name "v-progress-linear" 6433 . 6434) (nil tag-type start 6433 . 6434) (nil font-lock-face web-mode-html-attr-name-face 6433 . 6434) (nil tag-attr t 6432 . 6433) (nil tag-name "v-progress-linear" 6432 . 6433) (nil tag-type start 6432 . 6433) (nil font-lock-face web-mode-html-attr-name-face 6432 . 6433) (nil tag-attr t 6431 . 6432) (nil tag-name "v-progress-linear" 6431 . 6432) (nil tag-type start 6431 . 6432) (nil font-lock-face web-mode-html-attr-name-face 6431 . 6432) (nil tag-attr-beg 0 6430 . 6431) (nil tag-attr t 6430 . 6431) (nil tag-name "v-progress-linear" 6430 . 6431) (nil tag-type start 6430 . 6431) (nil font-lock-face web-mode-html-attr-name-face 6430 . 6431) (nil tag-name "v-progress-linear" 6429 . 6430) (nil tag-type start 6429 . 6430) (nil tag-name "v-progress-linear" 6412 . 6429) (nil tag-type start 6412 . 6429) (nil font-lock-face web-mode-html-tag-custom-face 6412 . 6429) (nil tag-name "v-progress-linear" 6411 . 6412) (nil tag-type start 6411 . 6412) (nil tag-beg 19 6411 . 6412) (nil font-lock-face web-mode-html-tag-bracket-face 6411 . 6412) (6407 . 6496)) nil (25487 17826 939164 391000) 0 nil])
([nil nil (("    " . -6407) 6496) nil (25487 17826 939120 408000) 0 nil])
([nil nil ((#("      <v-col class=\"ma-0 pl-0 pt-0 pr-0\">
" 6 7 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 12 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 39 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6535) (6443 . 6535) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6401) (undo-tree-id186 . -91) (undo-tree-id187 . -6) (6493 . 6535) 6492 (t 25487 17827 29338 388000)) nil (25487 17844 314094 706000) 0 nil])
([nil nil ((#("        <v-card
" 8 9 (tag-name "v-card" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 9 15 (tag-name "v-card" tag-type start font-lock-face web-mode-html-tag-custom-face) 15 16 (tag-name "v-card" tag-type start)) . 6551) (6459 . 6551) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6443) (undo-tree-id185 . -91) (6535 . 6551) 6534) nil (25487 17844 314090 73000) 0 nil])
([nil nil (("          wrap
" . 6566) (6474 . 6566) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6459) (undo-tree-id184 . -91) (6551 . 6566) 6550) nil (25487 17844 314086 458000) 0 nil])
([nil nil (("          fluid
" . 6582) (6490 . 6582) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6474) (undo-tree-id183 . -91) (6566 . 6582) 6565) nil (25487 17844 314083 194000) 0 nil])
([nil nil (("          outlined
" . 6601) (6509 . 6601) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6490) (undo-tree-id182 . -91) (6582 . 6601) 6581) nil (25487 17844 314079 762000) 0 nil])
([nil nil (("          flat
" . 6616) (6524 . 6616) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6509) (undo-tree-id181 . -91) (6601 . 6616) 6600) nil (25487 17844 314076 473000) 0 nil])
([nil nil (("          style=\"border-color:#9E9E9E; border-top-right-radius: 0px; border-top-left-radius: 0px;\"
" . 6715) (6623 . 6715) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6524) (undo-tree-id180 . -91) (6616 . 6715) 6615) nil (25487 17844 314073 290000) 0 nil])
([nil nil (("          class=\"pa-3 mt-0\"
" . 6743) (6651 . 6743) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6623) (undo-tree-id179 . -91) (6715 . 6743) 6714) nil (25487 17844 314070 158000) 0 nil])
([nil nil ((#("          :ripple=\"false\"
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t face web-mode-variable-name-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 6769) (6677 . 6769) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6651) (undo-tree-id178 . -91) (6743 . 6769) 6742) nil (25487 17844 314066 680000) 0 nil])
([nil nil ((#("          @mousemove=\"mouseMoveDrag\"
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t face web-mode-variable-name-face) 32 33 (block-side t face web-mode-variable-name-face) 33 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t face web-mode-variable-name-face) 35 36 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 6806) (6714 . 6806) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6677) (undo-tree-id177 . -91) (6769 . 6806) 6768) nil (25487 17844 314063 395000) 0 nil])
([nil nil ((#("          @mouseup=\"mouseUpDrag\"
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t face web-mode-variable-name-face) 21 22 (block-side t face web-mode-variable-name-face) 22 23 (block-side t face web-mode-variable-name-face) 23 24 (block-side t face web-mode-variable-name-face) 24 25 (block-side t face web-mode-variable-name-face) 25 26 (block-side t face web-mode-variable-name-face) 26 27 (block-side t face web-mode-variable-name-face) 27 28 (block-side t face web-mode-variable-name-face) 28 29 (block-side t face web-mode-variable-name-face) 29 30 (block-side t face web-mode-variable-name-face) 30 31 (block-side t face web-mode-variable-name-face) 31 32 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 6839) (6747 . 6839) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6714) (undo-tree-id176 . -91) (6806 . 6839) 6805) nil (25487 17844 314059 689000) 0 nil])
([nil nil ((#("          @wheel=\"debounceScrollLog($event)\"
" 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 18 35 (block-side t face web-mode-function-call-face) 35 37 (block-side t) 37 38 (block-side t face web-mode-variable-name-face) 38 39 (block-side t face web-mode-variable-name-face) 39 40 (block-side t face web-mode-variable-name-face) 40 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 44 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face)) . 6884) (6792 . 6884) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6747) (undo-tree-id174 . -91) (undo-tree-id175 . -91) (6839 . 6884) 6838) nil (25487 17844 314055 162000) 0 nil])
([nil nil (("        >
" . 6894) (6802 . 6894) (#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6792) (undo-tree-id165 . -91) (undo-tree-id166 . -91) (undo-tree-id167 . -91) (undo-tree-id168 . -91) (undo-tree-id169 . -91) (undo-tree-id170 . -91) (undo-tree-id171 . -91) (undo-tree-id172 . -91) (undo-tree-id173 . -91) (6884 . 6894) 6883) nil (25487 17844 314046 417000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6894) (undo-tree-id246 . -91) (undo-tree-id247 . -92) (6884 . 6894) (#("        >
" 0 8 (tag-name "v-card" tag-type start) 8 9 (tag-name "v-card" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6792) (6802 . 6894) 6893 (t 25487 17844 409035 687000)) nil (25487 17856 490966 543000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6884) (undo-tree-id244 . -91) (undo-tree-id245 . -92) (6839 . 6884) (#("          @wheel=\"debounceScrollLog($event)\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 18 35 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-function-call-face) 35 37 (block-side t tag-attr t tag-name "v-card" tag-type start) 37 38 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 38 39 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 39 40 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 40 41 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 41 42 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 42 43 (block-side t tag-attr t tag-name "v-card" tag-type start) 43 44 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 44 45 (tag-name "v-card" tag-type start)) . 6747) (6792 . 6884) 6883) nil (25487 17856 490962 119000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6839) (undo-tree-id242 . -91) (undo-tree-id243 . -92) (6806 . 6839) (#("          @mouseup=\"mouseUpDrag\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 31 32 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 8 tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 32 33 (tag-name "v-card" tag-type start)) . 6714) (6747 . 6839) 6838) nil (25487 17856 490957 491000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6806) (undo-tree-id240 . -91) (undo-tree-id241 . -92) (6769 . 6806) (#("          @mousemove=\"mouseMoveDrag\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 24 25 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 33 34 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 34 35 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 35 36 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 10 tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 36 37 (tag-name "v-card" tag-type start)) . 6677) (6714 . 6806) 6805) nil (25487 17856 490953 227000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6769) (undo-tree-id238 . -91) (undo-tree-id239 . -92) (6743 . 6769) (#("          :ripple=\"false\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 12 13 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 13 14 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 14 15 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 15 16 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 16 17 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 17 18 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 20 21 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 21 22 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 22 23 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 23 24 (block-side t tag-attr t tag-name "v-card" tag-type start face web-mode-variable-name-face) 24 25 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 7 tag-name "v-card" tag-type start font-lock-face web-mode-block-delimiter-face) 25 26 (tag-name "v-card" tag-type start)) . 6651) (6677 . 6769) 6768) nil (25487 17856 490949 93000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6743) (undo-tree-id236 . -91) (undo-tree-id237 . -92) (6715 . 6743) (#("          class=\"pa-3 mt-0\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 26 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-name "v-card" tag-type start)) . 6623) (6651 . 6743) 6742) nil (25487 17856 490944 790000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6715) (undo-tree-id234 . -91) (undo-tree-id235 . -92) (6616 . 6715) (#("          style=\"border-color:#9E9E9E; border-top-right-radius: 0px; border-top-left-radius: 0px;\"
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 15 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-equal-face) 16 97 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 97 98 (tag-attr t tag-attr-end 5 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 98 99 (tag-name "v-card" tag-type start)) . 6524) (6623 . 6715) 6714) nil (25487 17856 490940 399000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6616) (undo-tree-id232 . -91) (undo-tree-id233 . -92) (6601 . 6616) (#("          flat
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-name "v-card" tag-type start)) . 6509) (6524 . 6616) 6615) nil (25487 17856 490936 270000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6601) (undo-tree-id222 . -91) (undo-tree-id223 . -92) (undo-tree-id224 . -91) (undo-tree-id225 . -91) (undo-tree-id226 . -91) (undo-tree-id227 . -91) (undo-tree-id228 . -91) (undo-tree-id229 . -91) (undo-tree-id230 . -91) (undo-tree-id231 . -91) (6582 . 6601) (#("          outlined
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 17 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-name "v-card" tag-type start)) . 6490) (6509 . 6601) 6600) nil (25487 17856 490931 474000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6582) (undo-tree-id216 . -91) (undo-tree-id217 . -92) (undo-tree-id218 . -91) (undo-tree-id219 . -91) (undo-tree-id220 . -91) (undo-tree-id221 . -91) (6566 . 6582) (#("          fluid
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 14 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-name "v-card" tag-type start)) . 6474) (6490 . 6582) 6581) nil (25487 17856 490832 455000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6566) (undo-tree-id206 . -91) (undo-tree-id207 . -92) (undo-tree-id208 . -91) (undo-tree-id209 . -91) (undo-tree-id210 . -91) (undo-tree-id211 . -91) (undo-tree-id212 . -91) (undo-tree-id213 . -91) (undo-tree-id214 . -91) (undo-tree-id215 . -91) (6551 . 6566) (#("          wrap
" 0 10 (tag-name "v-card" tag-type start) 10 11 (tag-attr-beg 0 tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 11 13 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-attr-end 0 tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-name "v-card" tag-type start)) . 6459) (6474 . 6566) 6565) nil (25487 17856 490823 467000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 0 5 (tag-name "v-card" tag-type start) 5 6 (tag-name "v-card" tag-type start tag-end t) 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6551) (undo-tree-id196 . -91) (undo-tree-id197 . -92) (undo-tree-id198 . -91) (undo-tree-id199 . -91) (undo-tree-id200 . -91) (undo-tree-id201 . -91) (undo-tree-id202 . -91) (undo-tree-id203 . -91) (undo-tree-id204 . -91) (undo-tree-id205 . -91) (6535 . 6551) (#("        <v-card
" 8 9 (tag-name "v-card" tag-type start tag-beg 2 font-lock-face web-mode-html-tag-bracket-face) 9 15 (tag-name "v-card" tag-type start font-lock-face web-mode-html-tag-unclosed-face) 15 16 (tag-name "v-card" tag-type start)) . 6443) (6459 . 6551) 6550) nil (25487 17856 490810 622000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6535) (undo-tree-id194 . -91) (undo-tree-id195 . -92) (6493 . 6535) (#("      <v-col class=\"ma-0 pl-0 pt-0 pr-0\">
" 6 7 (tag-name "v-col" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 12 (tag-name "v-col" tag-type start font-lock-face web-mode-html-tag-custom-face) 12 13 (tag-name "v-col" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 39 (tag-attr t tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-attr-end 5 tag-name "v-col" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-name "v-col" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6401) (6443 . 6535) 6534) nil (25487 17856 490797 964000) 0 nil])
([nil nil ((#("      <v-progress-linear class=\"data-progressbar\" :value=\"progressVal\"></v-progress-linear>
" 6 7 (tag-name "v-progress-linear" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 7 24 (tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-tag-custom-face) 24 25 (tag-name "v-progress-linear" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 48 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 48 49 (tag-attr t tag-attr-end 5 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 49 50 (tag-name "v-progress-linear" tag-type start) 50 51 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 56 57 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 57 58 (block-side t block-token delimiter-beg tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 58 59 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 60 61 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 61 62 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 62 63 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 67 68 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 68 69 (block-side t tag-attr t tag-name "v-progress-linear" tag-type start face web-mode-variable-name-face) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 6 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "v-progress-linear" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 71 72 (tag-name "v-progress-linear" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 72 73 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-bracket-face) 73 90 (tag-name "v-progress-linear" tag-type end font-lock-face web-mode-html-tag-custom-face) 90 91 (rear-nonsticky t tag-name "v-progress-linear" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6493) (undo-tree-id188 . -91) (undo-tree-id189 . -92) (undo-tree-id190 . -91) (undo-tree-id191 . -91) (undo-tree-id192 . -91) (undo-tree-id193 . -91) (6463 . 6493) (#("    <v-row class=\"ma-0 pa-0\">
" 4 5 (tag-name "v-row" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 5 10 (tag-name "v-row" tag-type start font-lock-face web-mode-html-tag-custom-face) 10 11 (tag-name "v-row" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 27 (tag-attr t tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 27 28 (tag-attr t tag-attr-end 5 tag-name "v-row" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-name "v-row" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 6371) (6401 . 6493) 6492) nil (25487 17856 490792 431000) 0 nil])
([nil nil (("  " . -6375) 6462) nil (25487 18123 690841 866000) 0 nil])
([nil nil ((28894 . 28899) (t 25487 18124 688137 334000)) nil (25487 18178 499854 588000) 0 nil] [nil nil ((28894 . 28899) (t 25487 17856 596823 320000)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 28894) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -1) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -1) (undo-tree-id633 . -5) (undo-tree-id634 . -5) (undo-tree-id635 . -5) (undo-tree-id636 . -5) (undo-tree-id637 . -5) (undo-tree-id638 . -5) (undo-tree-id639 . -5) (undo-tree-id640 . -5)) (25487 18123 474358 239000) 0 nil])
([nil nil ((28899 . 28910)) nil (25487 18178 499853 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28922 . 28923) (nil rear-nonsticky t 28922 . 28923) (nil part-side css 28922 . 28923) (nil part-side css 28912 . 28922) (nil part-side css 28899 . 28912) (nil face web-mode-css-property-name-face 28899 . 28912) (28899 . 28923)) ((#("border-right: 1px solid;" 0 7 (part-side css face web-mode-css-property-name-face) 7 8 (part-side css face web-mode-css-property-name-face) 8 9 (part-side css face web-mode-css-property-name-face) 9 10 (part-side css face web-mode-css-property-name-face) 10 11 (part-side css face web-mode-css-property-name-face) 11 12 (part-side css face web-mode-css-property-name-face) 12 13 (part-side css face web-mode-css-property-name-face) 13 23 (part-side css) 23 24 (rear-nonsticky t part-side css)) . 28899) (undo-tree-id608 . -7) (undo-tree-id609 . -12) (undo-tree-id610 . -12) (undo-tree-id611 . -12) (undo-tree-id612 . -12) (undo-tree-id613 . -12) (undo-tree-id614 . -12) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -12) (undo-tree-id618 . -12) (nil rear-nonsticky nil 28922 . 28923) (nil rear-nonsticky t 28922 . 28923)) (25487 18122 119678 683000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28909) (undo-tree-id648 . -1) 28910) nil (25487 18178 499852 64000) 0 nil])
([nil nil ((#("r" 0 1 (part-side css face web-mode-css-property-name-face)) . -28906) (undo-tree-id268 . -1) (#("i" 0 1 (part-side css face web-mode-css-property-name-face)) . -28907) (undo-tree-id269 . -1) (#("g" 0 1 (part-side css face web-mode-css-property-name-face)) . -28908) (undo-tree-id270 . -1) (#("h" 0 1 (part-side css face web-mode-css-property-name-face)) . -28909) (undo-tree-id271 . -1) (#("t" 0 1 (part-side css face web-mode-css-property-name-face)) . -28910) (undo-tree-id272 . -1) 28911) ((28906 . 28911)) (25487 18121 592683 628000) 0 nil])
([nil nil ((28909 . 28918)) nil (25487 18178 499849 692000) 0 nil])
([nil nil ((28906 . 28910)) ((#("top " 0 3 (part-side css face web-mode-css-property-name-face) 3 4 (part-side css face web-mode-css-property-name-face)) . 28906) (undo-tree-id566 . -3) (undo-tree-id567 . -4) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4)) (25487 18121 37525 634000) 0 nil] [nil nil ((28906 . 28909)) ((#("top" 0 3 (part-side css face web-mode-css-property-name-face)) . 28906)) (25487 18097 467367 485000) 0 nil])
([nil nil ((#("o" 0 1 (part-side css)) . -28915) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (#("s" 0 1 (part-side css)) . -28916) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("l" 0 1 (part-side css)) . -28917) (undo-tree-id647 . -1) 28918) nil (25487 18178 499847 988000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css face web-mode-css-property-name-face)) . -28909) (undo-tree-id565 . -1) 28910) ((28909 . 28910) (t 25487 18107 616436 432000)) (25487 18107 512112 309000) 0 nil])
([nil nil ((28816 . 28818) (#("  " 0 2 (part-side css)) . 28815) (undo-tree-id267 . -2) (28814 . 28818)) ((#("
  
" 0 1 (part-side css) 1 3 (part-side css face whitespace-trailing) 3 4 (part-side css)) . 28814) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -1) (undo-tree-id527 . 3) (28815 . 28817) (#("  " 0 2 (part-side css)) . 28816) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2)) (25487 18097 127937 219000) 0 nil])
([nil nil ((28915 . 28921)) nil (25487 18178 499840 839000) 0 nil])
nil
([nil nil ((28818 . 28823)) ((#(".data" 0 1 (part-side css face web-mode-css-selector-class-face) 1 2 (part-side css face web-mode-css-selector-class-face) 2 3 (part-side css face web-mode-css-selector-class-face) 3 4 (part-side css face web-mode-css-selector-class-face) 4 5 (part-side css face web-mode-css-selector-class-face)) . 28818) (undo-tree-id459 . -5) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5)) (25487 18096 780553 668000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28920) (undo-tree-id642 . -1) 28921) nil (25487 18178 499839 360000) 0 nil])
([nil nil ((#("d" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28819) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28820) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28821) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28822) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 28823) ((28819 . 28823)) (25487 18096 417427 657000) 0 nil])
([nil nil ((28920 . 28922)) nil (25487 18178 499835 403000) 0 nil])
([nil nil ((28830 . 28832) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28830) (28819 . 28831)) ((#("card-table {" 0 10 (part-side css face web-mode-css-selector-class-face) 10 11 (part-side css) 11 12 (part-side css face (rainbow-delimiters-depth-1-face))) . 28819) (undo-tree-id450 . -11) (undo-tree-id451 . -11) (undo-tree-id452 . -11) (undo-tree-id453 . -10) (undo-tree-id454 . -11) (28830 . 28831) (#("{}" 0 1 (part-side css face (rainbow-delimiters-depth-1-face)) 1 2 (part-side css face (rainbow-delimiters-depth-1-face))) . 28830) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1)) (25487 18096 77092 906000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28921) (undo-tree-id641 . -1) 28922) nil (25487 18178 499829 979000) 0 nil])
([nil nil ((28833 . 28835) (#("    " 0 4 (part-side css face whitespace-trailing)) . 28832) (undo-tree-id257 . -2) (undo-tree-id258 . 4) (28834 . 28836) (28831 . 28835)) ((#("
  
" 0 1 (part-side css) 1 3 (part-side css face whitespace-trailing) 3 4 (part-side css)) . 28831) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -4) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("  " 0 2 (part-side css face whitespace-trailing)) . 28834) (28832 . 28836) (#("  " 0 2 (part-side css)) . 28833)) (25487 18095 745222 775000) 0 nil])
([nil nil ((28661 . 28663) (#("  " 0 2 (part-side css)) . 28660) (undo-tree-id662 . -2) (28659 . 28663) (t 25487 18178 599192 298000)) nil (25487 18426 401763 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28911 . 28912) (nil part-side css 28907 . 28912) (nil part-side css 28884 . 28907) (nil face web-mode-css-property-name-face 28884 . 28907) (nil part-side css 28878 . 28884) (nil part-side css 28854 . 28878) (nil face web-mode-css-property-name-face 28854 . 28878) (nil part-side css 28852 . 28854) (nil part-side css 28845 . 28852) (nil face web-mode-css-color-face 28845 . 28852) (nil part-side css 28832 . 28845) (nil face web-mode-css-property-name-face 28832 . 28845) (28832 . 28912)) ((#("border-color:#9E9E9E; border-top-right-radius: 0px; border-top-left-radius: 0px;" 0 13 (part-side css face web-mode-css-property-name-face) 13 20 (part-side css face web-mode-css-color-face) 20 21 (part-side css) 21 22 (part-side css) 22 46 (part-side css face web-mode-css-property-name-face) 46 51 (part-side css) 51 52 (part-side css) 52 75 (part-side css face web-mode-css-property-name-face) 75 79 (part-side css) 79 80 (rear-nonsticky nil part-side css)) . 28832) (undo-tree-id393 . -80) (undo-tree-id394 . -80) (undo-tree-id395 . -20) (undo-tree-id396 . -22) (undo-tree-id397 . -22) (undo-tree-id398 . -22) (undo-tree-id399 . -22) (undo-tree-id400 . -22) (undo-tree-id401 . -22) (undo-tree-id402 . -22) (undo-tree-id403 . -22) (undo-tree-id404 . -80) (undo-tree-id405 . -80) (undo-tree-id406 . -80) (undo-tree-id407 . -80) (undo-tree-id408 . -80) (undo-tree-id409 . -80) (undo-tree-id410 . -80) (undo-tree-id411 . -80) (undo-tree-id412 . -80) (undo-tree-id413 . -80) (undo-tree-id414 . -80) (undo-tree-id415 . -80) (nil rear-nonsticky t 28911 . 28912)) (25487 18095 380136 311000) 0 nil])
([nil nil ((28663 . 28665)) nil (25487 18426 401760 845000) 0 nil])
([nil nil ((28832 . 28836) 28912) ((#("    " 0 4 (part-side css)) . 28832)) (25487 18094 930919 906000) 0 nil])
([nil nil ((#("v" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28664) (undo-tree-id661 . -1) 28665) nil (25487 18426 401759 702000) 0 nil])
([nil nil ((28858 . 28862) (#(" " 0 1 (part-side css)) . 28857) (undo-tree-id256 . -1) (28858 . 28859)) ((#("
" 0 1 (part-side css)) . 28858) (undo-tree-id392 . -1) (28857 . 28858) (#("    " 0 4 (part-side css)) . 28858)) (25487 18094 181778 457000) 0 nil])
([nil nil ((28664 . 28669)) nil (25487 18426 401757 423000) 0 nil])
([nil nil ((28892 . 28896) (#(" " 0 1 (part-side css)) . 28891) (undo-tree-id255 . -1) (28892 . 28893)) ((#("
" 0 1 (part-side css)) . 28892) (28891 . 28892) (#("    " 0 4 (part-side css)) . 28892)) (25487 18093 644956 908000) 0 nil])
([nil nil ((#("
  .table
" 0 1 (part-side css) 1 3 (part-side css) 3 9 (part-side css face web-mode-css-selector-class-face) 9 10 (part-side css face web-mode-css-selector-class-face)) . 28660) (undo-tree-id657 . -9) (undo-tree-id658 . -1) (undo-tree-id659 . -10) (undo-tree-id660 . -10)) nil (25487 18426 401756 51000) 0 nil])
([nil nil (("style=\"border-color:#9E9E9E; border-top-right-radius: 0px; border-top-left-radius: 0px;\"" . 6624) (undo-tree-id250 . -7) (undo-tree-id251 . -88) (undo-tree-id252 . -88) (undo-tree-id253 . -87) (undo-tree-id254 . -88)) ((6624 . 6712)) (25487 18092 539881 614000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28659) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) 28660) nil (25487 18426 401750 443000) 0 nil])
([nil nil ((#("
" 0 1 (tag-name "v-card" tag-type start)) . 6624) (undo-tree-id249 . -1)) ((6624 . 6625)) (25487 18091 5447 71000) 0 nil])
([nil nil ((28659 . 28662)) nil (25487 18457 4936 588000) 0 nil])
([nil nil ((#("          " 0 10 (tag-name "v-card" tag-type start)) . -6624)) ((6624 . 6634)) (25487 18090 975925 59000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -28660) 28199) nil (25487 18457 834261 655000) 0 nil] [nil nil ((#("#CFD8DC" 0 7 (part-side css face web-mode-css-color-face)) . 28199) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id652 . -7)) ((28199 . 28206)) (25487 18456 553421 191000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6640 . 6641) (nil tag-attr t 6631 . 6641) (nil tag-name "v-card" 6631 . 6641) (nil tag-type start 6631 . 6641) (nil font-lock-face web-mode-html-attr-value-face 6631 . 6641) (6631 . 6641)) ((#("card-table" 0 9 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (rear-nonsticky nil tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6631) (undo-tree-id386 . -10) (undo-tree-id387 . -10) (undo-tree-id388 . -10) (undo-tree-id389 . -10) (undo-tree-id390 . -10) (undo-tree-id391 . -10) (nil tag-name "v-card" 6640 . 6641) (nil tag-name "v-card" 6631 . 6640) (nil rear-nonsticky t 6640 . 6641)) (25487 18090 955529 627000) 0 nil])
([nil nil ((#("C" 0 1 (part-side css)) . 28199) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("D" 0 1 (part-side css)) . 28199) (#("8" 0 1 (part-side css)) . 28199) (#("D" 0 1 (part-side css)) . 28199) (#("F" 0 1 (part-side css)) . 28199) (#("C" 0 1 (part-side css)) . 28199) (#("#" 0 1 (part-side css face web-mode-css-color-face)) . 28199) (t 25487 18457 930285 841000)) nil (25487 18464 266285 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28206 . 28207) (nil part-side css 28206 . 28207) (nil part-side css 28199 . 28206) (nil face web-mode-css-color-face 28199 . 28206) (28199 . 28207)) ((#("#ECEFF1
" 0 7 (part-side css face web-mode-css-color-face) 7 8 (rear-nonsticky nil part-side css)) . 28199) (undo-tree-id678 . -8) (undo-tree-id679 . -8) (undo-tree-id680 . -8) (undo-tree-id681 . -8) (undo-tree-id682 . -8) (undo-tree-id683 . -8) (nil rear-nonsticky t 28206 . 28207)) (25487 18456 206198 373000) 0 nil] [nil nil ((nil rear-nonsticky nil 28269 . 28270) (nil part-side css 28269 . 28270) (nil part-side css 28259 . 28269) (nil face web-mode-css-priority-face 28259 . 28269) (nil part-side css 28254 . 28259) (nil part-side css 28246 . 28254) (nil face web-mode-css-property-name-face 28246 . 28254) (nil part-side css 28233 . 28246) (nil part-side css 28226 . 28233) (nil face web-mode-css-color-face 28226 . 28233) (nil part-side css 28225 . 28226) (nil part-side css 28213 . 28225) (nil face web-mode-css-property-name-face 28213 . 28225) (nil part-side css 28206 . 28213) (nil part-side css 28199 . 28206) (nil face web-mode-css-property-name-face 28199 . 28206) (28199 . 28270)) ((#("height: 20px; border-left: #c5c5c5 solid thin; padding: 0px !important;" 0 7 (part-side css face web-mode-css-property-name-face) 7 14 (part-side css) 14 26 (part-side css face web-mode-css-property-name-face) 26 27 (part-side css) 27 34 (part-side css face web-mode-css-color-face) 34 47 (part-side css) 47 55 (part-side css face web-mode-css-property-name-face) 55 60 (part-side css) 60 70 (part-side css face web-mode-css-priority-face) 70 71 (rear-nonsticky nil part-side css)) . 28199) (undo-tree-id663 . -71) (nil rear-nonsticky t 28269 . 28270)) (25487 18426 401722 576000) 0 nil])
([nil nil ((6641 . 6642)) ((#(" " 0 1 (tag-attr t tag-name "v-card" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6641) (undo-tree-id385 . -1)) (25487 18090 953177 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28206 . 28207) (nil part-side css 28206 . 28207) (nil part-side css 28199 . 28206) (nil face web-mode-css-color-face 28199 . 28206) (28199 . 28207)) nil (25487 18464 266279 720000) 0 nil])
([nil nil ((#("  " 0 2 (part-side css face whitespace-trailing)) . -28661) 28207) ((28661 . 28663)) (25487 18455 652398 189000) 0 nil])
nil
([nil nil ((28836 . 28841)) ((#("
    " 0 1 (part-side css) 1 5 (part-side css)) . 28836) (undo-tree-id380 . -5) (undo-tree-id381 . -1) (undo-tree-id382 . -5) (undo-tree-id383 . -1) (undo-tree-id384 . -5)) (25487 18090 870049 173000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t part-side css)) . -28206) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) 28207) nil (25487 18464 266273 547000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t part-side css)) . -28206) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id667 . -1) (undo-tree-id669 . -1) (undo-tree-id671 . -1) (undo-tree-id673 . -1) (undo-tree-id675 . -1) (undo-tree-id677 . -1) 28207 (t 25487 18435 558679 289000)) ((28206 . 28207) (t 25487 18436 470663 252000)) (25487 18436 374112 914000) 0 nil])
([nil nil ((28841 . 28852)) ((#("border-top:" 0 11 (part-side css face web-mode-css-property-name-face)) . 28841) (undo-tree-id370 . -11) (undo-tree-id371 . -3) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11)) (25487 18090 840377 774000) 0 nil])
([nil nil ((7334 . 7353) (t 25487 18464 362172 709000)) nil (25487 18614 551326 759000) 0 nil])
nil
([nil nil ((28852 . 28858)) ((#(" 0px; " 0 5 (part-side css) 5 6 (part-side css)) . 28852) (undo-tree-id364 . -6) (undo-tree-id365 . -5) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6)) (25487 18090 814036 785000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7348) (undo-tree-id699 . -1) 7349 (t 25487 18614 651527 751000)) nil (25487 18625 443459 78000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28857) (undo-tree-id248 . -1) 28858) ((28857 . 28858)) (25487 18090 781855 84000) 0 nil])
([nil nil ((7348 . 7349)) nil (25487 18625 443456 193000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6409 . 6410) (nil tag-attr t 6395 . 6410) (nil tag-name "v-progress-linear" 6395 . 6410) (nil tag-type start 6395 . 6410) (nil font-lock-face web-mode-html-attr-name-face 6395 . 6410) (nil tag-attr-beg 0 6394 . 6395) (nil tag-attr t 6394 . 6395) (nil tag-name "v-progress-linear" 6394 . 6395) (nil tag-type start 6394 . 6395) (nil font-lock-face web-mode-html-attr-name-face 6394 . 6395) (6394 . 6410) (t 25487 17965 986914 405000)) ((#("background-color" 0 1 (tag-attr-beg 0 tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 1 15 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (rear-nonsticky nil tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-name-face)) . 6394) (undo-tree-id341 . -16) (undo-tree-id342 . -16) (undo-tree-id343 . -16) (undo-tree-id344 . -16) (undo-tree-id345 . -16) (undo-tree-id346 . -16) (undo-tree-id347 . -16) (undo-tree-id348 . -16) (undo-tree-id349 . -16) (undo-tree-id350 . -16) (undo-tree-id351 . -16) (undo-tree-id352 . -16) (undo-tree-id353 . -16) (undo-tree-id354 . -16) (undo-tree-id355 . -16) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -16) (undo-tree-id362 . -16) (undo-tree-id363 . -16) (nil tag-name "v-progress-linear" 6394 . 6395) (nil tag-name "v-progress-linear" 6409 . 6410) (nil tag-name "v-progress-linear" 6395 . 6409) (nil rear-nonsticky t 6409 . 6410)) (25487 18090 762126 560000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id697 . -1) (#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7348) (undo-tree-id698 . -1) 7349) nil (25487 18625 443453 604000) 0 nil])
([nil nil ((6412 . 6413) (6410 . 6414)) ((#("=\"\" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-equal-face) 1 2 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 2 3 (tag-attr t tag-attr-end 16 tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 3 4 (tag-name "v-progress-linear" tag-type start)) . 6410) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6412) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1)) (25487 18090 243472 820000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18649 212195 509000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . -6412) (undo-tree-id273 . -1) 6413) ((6412 . 6413)) (25487 18089 895710 289000) 0 nil])
([nil nil ((28231 . 28233) (#("  " 0 2 (part-side css)) . 28230) (undo-tree-id715 . -2) (28229 . 28233)) nil (25487 18680 824416 752000) 0 nil] [nil nil ((#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("r" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("m" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("!" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#(":" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("g" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("d" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("d" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (t 25487 18625 543335 967000)) ((7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352)) (25487 18645 217139 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6418 . 6419) (nil tag-attr t 6412 . 6419) (nil tag-name "v-progress-linear" 6412 . 6419) (nil tag-type start 6412 . 6419) (nil font-lock-face web-mode-html-attr-value-face 6412 . 6419) (6412 . 6419)) ((#("#CFD8DC" 0 6 (tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face) 6 7 (rear-nonsticky nil tag-attr t tag-name "v-progress-linear" tag-type start font-lock-face web-mode-html-attr-value-face)) . 6412) (undo-tree-id274 . -7) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -7) (undo-tree-id287 . -7) (undo-tree-id288 . -7) (undo-tree-id289 . -7) (undo-tree-id290 . -7) (undo-tree-id291 . -7) (undo-tree-id292 . -7) (undo-tree-id293 . -7) (undo-tree-id294 . -7) (undo-tree-id295 . -7) (undo-tree-id296 . -7) (undo-tree-id297 . -7) (undo-tree-id298 . -7) (undo-tree-id299 . -7) (undo-tree-id300 . -7) (undo-tree-id301 . -7) (undo-tree-id302 . -7) (undo-tree-id303 . -7) (undo-tree-id304 . -7) (nil tag-name "v-progress-linear" 6418 . 6419) (nil tag-name "v-progress-linear" 6412 . 6418) (nil rear-nonsticky t 6418 . 6419) (t 25487 18069 849097 830000)) (25487 18069 746504 617000) 0 nil])
([nil nil ((28233 . 28236)) nil (25487 18680 824414 227000) 0 nil])
([nil nil ((#(";" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (undo-tree-id700 . -1) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351)) ((7351 . 7352) (7351 . 7352) (7351 . 7352) (7351 . 7352) (t 25487 18640 307075 984000)) (25487 18640 207509 254000) 0 nil])
nil
([nil nil ((#("t" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28234) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("a" 0 1 (part-side css face web-mode-css-selector-class-face)) . -28235) (undo-tree-id713 . -1) (undo-tree-id714 . -1) 28236) nil (25487 18680 824412 803000) 0 nil])
nil
([nil nil ((28244 . 28246) (#("{" 0 1 (part-side css face (rainbow-delimiters-depth-1-face))) . -28244) (28234 . 28245)) nil (25487 18680 824406 207000) 0 nil])
([nil nil ((28247 . 28249) (#("    " 0 4 (part-side css face whitespace-trailing)) . 28246) (undo-tree-id709 . -2) (undo-tree-id710 . 4) (28248 . 28250) (28245 . 28249)) nil (25487 18680 824404 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28334 . 28335) (nil part-side css 28334 . 28335) (nil part-side css 28333 . 28334) (nil face web-mode-css-priority-face 28333 . 28334) (nil part-side css 28332 . 28333) (nil face web-mode-css-priority-face 28332 . 28333) (nil part-side css 28331 . 28332) (nil face web-mode-css-priority-face 28331 . 28332) (nil part-side css 28330 . 28331) (nil face web-mode-css-priority-face 28330 . 28331) (nil part-side css 28329 . 28330) (nil face web-mode-css-priority-face 28329 . 28330) (nil part-side css 28328 . 28329) (nil face web-mode-css-priority-face 28328 . 28329) (nil part-side css 28327 . 28328) (nil face web-mode-css-priority-face 28327 . 28328) (nil part-side css 28326 . 28327) (nil face web-mode-css-priority-face 28326 . 28327) (nil part-side css 28325 . 28326) (nil face web-mode-css-priority-face 28325 . 28326) (nil part-side css 28324 . 28325) (nil face web-mode-css-priority-face 28324 . 28325) (nil part-side css 28323 . 28324) (nil part-side css 28322 . 28323) (nil part-side css 28321 . 28322) (nil part-side css 28320 . 28321) (nil part-side css 28319 . 28320) (nil part-side css 28318 . 28319) (nil face web-mode-css-property-name-face 28318 . 28319) (nil part-side css 28317 . 28318) (nil face web-mode-css-property-name-face 28317 . 28318) (nil part-side css 28316 . 28317) (nil face web-mode-css-property-name-face 28316 . 28317) (nil part-side css 28315 . 28316) (nil face web-mode-css-property-name-face 28315 . 28316) (nil part-side css 28314 . 28315) (nil face web-mode-css-property-name-face 28314 . 28315) (nil part-side css 28313 . 28314) (nil face web-mode-css-property-name-face 28313 . 28314) (nil part-side css 28312 . 28313) (nil face web-mode-css-property-name-face 28312 . 28313) (nil part-side css 28311 . 28312) (nil face web-mode-css-property-name-face 28311 . 28312) (nil part-side css 28310 . 28311) (nil part-side css 28305 . 28310) (nil part-side css 28293 . 28305) (nil face web-mode-css-property-name-face 28293 . 28305) (nil part-side css 28280 . 28293) (nil part-side css 28273 . 28280) (nil face web-mode-css-color-face 28273 . 28280) (nil part-side css 28272 . 28273) (nil part-side css 28260 . 28272) (nil face web-mode-css-property-name-face 28260 . 28272) (nil part-side css 28253 . 28260) (nil part-side css 28246 . 28253) (nil face web-mode-css-property-name-face 28246 . 28253) (28246 . 28335)) nil (25487 18782 642025 98000) 0 nil])
([nil nil ((#("  .headercol {
height: 20px; border-left: #c5c5c5 solid thin; padding-top: 4px; padding: 0px !important;
  }" 0 2 (part-side css) 2 12 (part-side css face web-mode-css-selector-class-face) 12 13 (part-side css) 13 14 (part-side css face (rainbow-delimiters-depth-1-face)) 14 15 (part-side css) 15 22 (part-side css face web-mode-css-property-name-face) 22 28 (part-side css) 28 29 (part-side css) 29 41 (part-side css face web-mode-css-property-name-face) 41 42 (part-side css) 42 49 (part-side css face web-mode-css-color-face) 49 61 (part-side css) 61 62 (part-side css) 62 63 (part-side css face web-mode-css-property-name-face) 63 64 (part-side css face web-mode-css-property-name-face) 64 65 (part-side css face web-mode-css-property-name-face) 65 66 (part-side css face web-mode-css-property-name-face) 66 67 (part-side css face web-mode-css-property-name-face) 67 68 (part-side css face web-mode-css-property-name-face) 68 69 (part-side css face web-mode-css-property-name-face) 69 70 (part-side css face web-mode-css-property-name-face) 70 71 (part-side css face web-mode-css-property-name-face) 71 72 (part-side css face web-mode-css-property-name-face) 72 73 (part-side css face web-mode-css-property-name-face) 73 74 (part-side css face web-mode-css-property-name-face) 74 75 (part-side css) 75 76 (part-side css) 76 77 (part-side css) 77 78 (part-side css) 78 79 (part-side css) 79 80 (part-side css) 80 88 (part-side css face web-mode-css-property-name-face) 88 92 (part-side css) 92 93 (part-side css) 93 103 (part-side css face web-mode-css-priority-face) 103 104 (rear-nonsticky t part-side css) 104 107 (part-side css) 107 108 (part-side css face (rainbow-delimiters-depth-1-face))) . 28231) (undo-tree-id1060 . -92) (undo-tree-id1061 . -15) (undo-tree-id1062 . -108) (undo-tree-id1063 . -92) (undo-tree-id1064 . -15) (undo-tree-id1065 . -12) (undo-tree-id1066 . -104) (undo-tree-id1067 . -108)) nil (25487 18804 741538 15000) 0 nil] [nil nil ((7255 . 7280)) ((#("
                        " 0 1 (tag-name "th" tag-type start) 1 25 (tag-name "th" tag-type start)) . 7255) (undo-tree-id976 . -1) (undo-tree-id977 . -25) (undo-tree-id978 . -25) (undo-tree-id979 . -25) (undo-tree-id980 . -25) (undo-tree-id981 . -25) (undo-tree-id982 . -25) (undo-tree-id983 . -25) (undo-tree-id984 . -25) (undo-tree-id985 . -25) (undo-tree-id986 . -25) (undo-tree-id987 . -25) (undo-tree-id988 . -25) (undo-tree-id989 . -25) (undo-tree-id990 . -25) (undo-tree-id991 . -25) (undo-tree-id992 . -25) (undo-tree-id993 . -25) (undo-tree-id994 . -25) (undo-tree-id995 . -25) (undo-tree-id996 . -25) (undo-tree-id997 . -25) (undo-tree-id998 . -1) (undo-tree-id999 . -25) (undo-tree-id1000 . -25) (undo-tree-id1001 . -25) (undo-tree-id1002 . -25) (undo-tree-id1003 . -25) (undo-tree-id1004 . -25) (undo-tree-id1005 . -25) (undo-tree-id1006 . -25) (undo-tree-id1007 . -25) (undo-tree-id1008 . -25) (undo-tree-id1009 . -25) (undo-tree-id1010 . -25)) (25487 18782 229803 207000) 0 nil])
([nil nil ((#("
" 0 1 (part-side css)) . -28229) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#("
" 0 1 (part-side css)) . -28230) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) 28231) nil (25487 18804 741527 892000) 0 nil])
([nil nil ((7287 . 7288) (7280 . 7288)) ((#("class=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7280) (undo-tree-id939 . -8) (undo-tree-id940 . -7) (undo-tree-id941 . -8) (undo-tree-id942 . -7) (undo-tree-id943 . -8) (undo-tree-id944 . -8) (undo-tree-id945 . -7) (undo-tree-id946 . -7) (undo-tree-id947 . -7) (undo-tree-id948 . -7) (undo-tree-id949 . -7) (undo-tree-id950 . -7) (undo-tree-id951 . -7) (undo-tree-id952 . -7) (undo-tree-id953 . -7) (undo-tree-id954 . -7) (undo-tree-id955 . -7) (undo-tree-id956 . -7) (undo-tree-id957 . -7) (undo-tree-id958 . -7) (undo-tree-id959 . -7) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7287) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1)) (25487 18781 942073 658000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7333) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7334) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7335) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (#("d" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7336) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("d" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7337) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7338) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7339) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("g" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7340) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7341) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7342) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7344) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#(":" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7345) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7346) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1040 . -1) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7348) (undo-tree-id1041 . -1) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7349) (undo-tree-id1042 . -1) (#(";" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7350) (undo-tree-id1043 . -1) 7351) nil (25487 18804 741505 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7296 . 7297) (nil tag-attr t 7288 . 7297) (nil tag-name "th" 7288 . 7297) (nil tag-type start 7288 . 7297) (nil font-lock-face web-mode-html-attr-value-face 7288 . 7297) (7288 . 7297)) ((#("headercol" 0 8 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 8 9 (rear-nonsticky nil tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7288) (nil tag-name "th" 7296 . 7297) (nil tag-name "th" 7288 . 7296) (nil rear-nonsticky t 7296 . 7297)) (25487 18780 660577 97000) 0 nil])
([nil nil ((7343 . 7355)) nil (25487 18804 741467 72000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7287) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 7288) ((7287 . 7288)) (25487 18780 463926 432000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1011 . -1) 7348) nil (25487 18804 741464 501000) 0 nil])
([nil nil ((#("
                        style=\"height: 20px; border-left: #c5c5c5 solid thin; padding-top: 4px; padding: 0px !important;\"" 0 25 (tag-name "th" tag-type start) 25 26 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 26 30 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 30 31 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 31 38 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 39 40 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 40 41 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 41 44 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 44 45 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 45 46 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 46 47 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 47 57 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 57 58 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 58 60 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 60 61 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 61 65 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 65 66 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 66 67 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 67 68 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 68 71 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 71 72 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 72 73 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 73 74 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 74 77 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 77 78 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 78 79 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 79 80 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 80 90 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 90 91 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 91 93 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 93 94 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 94 95 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 95 96 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 96 97 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 97 98 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 98 99 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 99 100 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 100 101 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 101 102 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 102 103 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 103 104 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 104 105 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 105 106 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 106 107 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 107 108 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 108 109 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 109 110 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 110 111 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 111 112 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 112 113 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 113 114 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 114 115 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 115 116 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 116 117 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 117 118 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 118 119 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 119 120 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 120 121 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 121 122 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7297) (undo-tree-id702 . -1) (undo-tree-id703 . -122) (undo-tree-id704 . -121) (undo-tree-id705 . -121) (undo-tree-id706 . -122)) ((7297 . 7419)) (25487 18780 190500 891000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18804 741448 654000) 0 nil])
([nil nil ((28166 . 28170) 28168) ((#("    " 0 4 (part-side css)) . 28166)) (25487 18779 937198 783000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1068 . -1) 7348 (t 25487 18804 844177 252000)) nil (25487 18815 228266 985000) 0 nil])
([nil nil ((28184 . 28188) (#(" " 0 1 (part-side css)) . 28183) (undo-tree-id701 . -1) (28184 . 28185)) ((#("
" 0 1 (part-side css)) . 28184) (undo-tree-id938 . -1) (28183 . 28184) (#("    " 0 4 (part-side css)) . 28184)) (25487 18779 747953 799000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18815 228250 272000) 0 nil])
([nil nil ((28221 . 28225) (#(" " 0 1 (part-side css)) . 28220) (undo-tree-id738 . -1) (28221 . 28222)) ((#("
" 0 1 (part-side css)) . 28221) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (28220 . 28221) (#("    " 0 4 (part-side css)) . 28221) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4)) (25487 18779 586474 867000) 0 nil] [nil nil ((28221 . 28225) (#(" " 0 1 (part-side css)) . 28220) (undo-tree-id732 . -1) (28221 . 28222)) ((#("
" 0 1 (part-side css)) . 28221) (undo-tree-id735 . -1) (28220 . 28221) (#("    " 0 4 (part-side css)) . 28221)) (25487 18694 939137 251000) 0 nil] [nil nil ((28221 . 28222)) ((#("'" 0 1 (part-side css part-token string syntax-table (15) font-lock-face web-mode-css-string-face)) . 28221) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1)) (25487 18680 825065 208000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1070 . -1) 7348 (t 25487 18815 327992 479000)) nil (25487 18821 933543 260000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 28225) (#(";" 0 1 (part-side css)) . 28225) (#("x" 0 1 (part-side css)) . 28225) (#("p" 0 1 (part-side css)) . 28225) (#("4" 0 1 (part-side css)) . 28225) (#(" " 0 1 (part-side css)) . 28225) (#(":" 0 1 (part-side css)) . 28225) (#("p" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("o" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("t" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("-" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("g" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("n" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("i" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("d" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("d" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("a" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225) (#("p" 0 1 (part-side css face web-mode-css-property-name-face)) . 28225)) ((28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226) (28225 . 28226)) (25487 18779 422151 291000) 0 nil])
([nil nil ((28243 . 28247) (#(" " 0 1 (part-side css)) . 28242) (undo-tree-id731 . -1) (28243 . 28244)) ((#("
" 0 1 (part-side css)) . 28243) (undo-tree-id734 . -1) (28242 . 28243) (#("    " 0 4 (part-side css)) . 28243)) (25487 18694 590966 418000) 0 nil])
([nil nil ((28222 . 28227)) ((#("
    " 0 1 (part-side css syntax-table (15)) 1 5 (part-side css)) . 28222) (undo-tree-id716 . -5) (undo-tree-id717 . -1)) (25487 18680 824350 527000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18821 933539 994000) 0 nil])
([nil nil ((28237 . 28248)) ((#(" 0px 0px 0p" 0 1 (part-side css) 1 2 (part-side css) 2 3 (part-side css) 3 4 (part-side css) 4 5 (part-side css) 5 6 (part-side css) 6 7 (part-side css) 7 8 (part-side css) 8 9 (part-side css) 9 10 (part-side css) 10 11 (part-side css)) . 28237) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -11) (undo-tree-id915 . -1) (undo-tree-id916 . -11) (undo-tree-id917 . -11) (undo-tree-id918 . -11)) (25487 18779 277094 685000) 0 nil])
([nil nil ((28254 . 28261)) ((#("-bottom" 0 7 (part-side css face web-mode-css-property-name-face)) . 28254) (undo-tree-id733 . -6)) (25487 18694 590221 655000) 0 nil])
nil
([nil nil ((#("6" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1069 . -1) 7348) nil (25487 18821 933537 446000) 0 nil])
([nil nil ((28248 . 28250)) ((#("x " 0 1 (part-side css) 1 2 (part-side css)) . 28248) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2)) (25487 18779 144841 670000) 0 nil])
nil
([nil nil ((7347 . 7349)) nil (25487 18821 933521 68000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28249) (undo-tree-id737 . -1) 28250) ((28249 . 28250)) (25487 18779 1927 471000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1072 . -1) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7348) (undo-tree-id1073 . -1) 7349 (t 25487 18822 39874 181000)) nil (25487 18856 184809 268000) 0 nil])
([nil nil ((#("0" 0 1 (part-side css)) . -28238) (undo-tree-id736 . -1) 28239) ((28238 . 28239)) (25487 18778 850916 672000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18856 184804 629000) 0 nil])
([nil nil ((28238 . 28240)) ((#("-4" 0 1 (part-side css) 1 2 (part-side css)) . 28238)) (25487 18778 693152 688000) 0 nil])
([nil nil ((#("9" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1071 . -1) 7348) nil (25487 18856 184802 559000) 0 nil])
([nil nil ((#("4" 0 1 (part-side css)) . 28238) (#("-" 0 1 (part-side css)) . 28238) (t 25487 18712 529803 882000)) ((28238 . 28239) (28238 . 28239)) (25487 18778 533792 11000) 0 nil])
([nil nil ((7347 . 7348)) nil (25487 18861 797001 563000) 0 nil])
([nil nil ((28238 . 28239)) ((#("0" 0 1 (part-side css)) . 28238)) (25487 18777 747796 861000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7351) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) 7352 (t 25487 18863 683140 146000)) nil (25487 18885 304951 610000) 0 nil] [nil nil ((7287 . 7307)) ((#("text-align: center; " 0 20 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7287) (undo-tree-id1074 . -20) (undo-tree-id1075 . -20) (undo-tree-id1076 . -20) (undo-tree-id1077 . -20) (undo-tree-id1078 . -20) (undo-tree-id1079 . -20) (undo-tree-id1080 . -20) (undo-tree-id1081 . -20) (undo-tree-id1082 . -20) (undo-tree-id1083 . -20) (undo-tree-id1084 . -20) (undo-tree-id1085 . -20) (undo-tree-id1086 . -20) (undo-tree-id1087 . -20) (undo-tree-id1088 . -20) (undo-tree-id1089 . -20) (undo-tree-id1090 . -20) (undo-tree-id1091 . -20) (undo-tree-id1092 . -20) (undo-tree-id1093 . -20) (undo-tree-id1094 . -20) (undo-tree-id1095 . -20) (undo-tree-id1096 . -20) (undo-tree-id1097 . -20) (undo-tree-id1098 . -20) (t 25487 18856 283270 589000)) (25487 18856 184786 622000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 28238) (#("x" 0 1 (part-side css)) . 28238) (#("p" 0 1 (part-side css)) . 28238) (#("0" 0 1 (part-side css)) . 28238) (#(" " 0 1 (part-side css)) . 28238) (#("x" 0 1 (part-side css)) . 28238) (#("p" 0 1 (part-side css)) . 28238) (#("0" 0 1 (part-side css)) . 28238) (#(" " 0 1 (part-side css)) . 28238) (#("x" 0 1 (part-side css)) . 28238) (#("p" 0 1 (part-side css)) . 28238) (#("0" 0 1 (part-side css)) . 28238) (t 25487 18735 373401 435000)) ((28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239) (28238 . 28239)) (25487 18777 272543 452000) 0 nil])
([nil nil ((7351 . 7353)) nil (25487 18885 304933 26000) 0 nil])
nil
([nil nil ((7297 . 7322) (t 25487 18741 925286 0)) ((#("
                        " 0 1 (tag-name "th" tag-type start) 1 25 (tag-name "th" tag-type start)) . 7297) (undo-tree-id897 . -1) (undo-tree-id898 . -25) (undo-tree-id899 . -25) (undo-tree-id900 . -25) (undo-tree-id901 . -1) (undo-tree-id902 . -25) (undo-tree-id903 . -25) (undo-tree-id904 . -25) (undo-tree-id905 . -25) (undo-tree-id906 . -25)) (25487 18776 984601 430000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (t 25487 18885 406757 183000)) nil (25487 18895 13967 296000) 0 nil])
([nil nil ((7329 . 7340) (7322 . 7330)) ((#("style=\"\"" 0 1 (tag-attr-beg 0 tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-name-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-equal-face) 6 7 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 7 8 (tag-attr t tag-attr-end 5 tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7322) (undo-tree-id821 . -7) (undo-tree-id822 . -7) (undo-tree-id823 . -7) (undo-tree-id824 . -7) (undo-tree-id825 . -7) (undo-tree-id826 . -7) (undo-tree-id827 . -7) (undo-tree-id828 . -7) (undo-tree-id829 . -7) (undo-tree-id830 . -7) (undo-tree-id831 . -7) (undo-tree-id832 . -7) (undo-tree-id833 . -7) (undo-tree-id834 . -7) (undo-tree-id835 . -7) (undo-tree-id836 . -7) (undo-tree-id837 . -7) (undo-tree-id838 . -7) (undo-tree-id839 . -7) (undo-tree-id840 . -7) (undo-tree-id841 . -7) (undo-tree-id842 . -7) (undo-tree-id843 . -7) (undo-tree-id844 . -7) (undo-tree-id845 . -7) (undo-tree-id846 . -7) (undo-tree-id847 . -7) (undo-tree-id848 . -7) (undo-tree-id849 . -7) (undo-tree-id850 . -7) (undo-tree-id851 . -7) (undo-tree-id852 . -7) (undo-tree-id853 . -7) (undo-tree-id854 . -7) (undo-tree-id855 . -7) (undo-tree-id856 . -7) (undo-tree-id857 . -7) (undo-tree-id858 . -7) (#("padding: op" 0 9 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 9 10 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 10 11 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7329) (undo-tree-id859 . -11) (undo-tree-id860 . -11) (undo-tree-id861 . -9) (undo-tree-id862 . -9) (undo-tree-id863 . -9) (undo-tree-id864 . -9) (undo-tree-id865 . -9) (undo-tree-id866 . -9) (undo-tree-id867 . -9) (undo-tree-id868 . -9) (undo-tree-id869 . -9) (undo-tree-id870 . -9) (undo-tree-id871 . -9) (undo-tree-id872 . -9) (undo-tree-id873 . -9) (undo-tree-id874 . -9) (undo-tree-id875 . -9) (undo-tree-id876 . -9) (undo-tree-id877 . -9) (undo-tree-id878 . -9) (undo-tree-id879 . -9) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) (undo-tree-id888 . -9) (undo-tree-id889 . -11) (undo-tree-id890 . -11) (undo-tree-id891 . -11) (undo-tree-id892 . -11) (undo-tree-id893 . -11) (undo-tree-id894 . -11) (undo-tree-id895 . -11) (undo-tree-id896 . -11)) (25487 18776 697069 654000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7351) (t 25487 18895 110586 110000)) nil (25487 18903 3965 896000) 0 nil])
([nil nil ((#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7338) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7339) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 7340) ((7338 . 7340)) (25487 18776 406661 622000) 0 nil])
([nil nil ((7351 . 7352)) nil (25487 18903 3964 444000) 0 nil])
([nil nil ((7338 . 7344)) ((#("0px ha" 0 4 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 4 5 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7338) (undo-tree-id799 . -6) (undo-tree-id800 . -6) (undo-tree-id801 . -6) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -6) (undo-tree-id814 . -6) (undo-tree-id815 . -6) (undo-tree-id816 . -6) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id820 . -6)) (25487 18776 142933 920000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1101 . -1) 7344) nil (25487 18903 3962 49000) 0 nil])
([nil nil ((#("h" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7342) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) 7344) ((7342 . 7344)) (25487 18775 825190 391000) 0 nil])
([nil nil ((7343 . 7344)) nil (25487 18903 3947 360000) 0 nil])
([nil nil ((7342 . 7354)) ((#("!important; " 0 11 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7342) (undo-tree-id754 . -9) (undo-tree-id755 . -12) (undo-tree-id756 . -11) (undo-tree-id757 . -11) (undo-tree-id758 . -11) (undo-tree-id759 . -11) (undo-tree-id760 . -11) (undo-tree-id761 . -11) (undo-tree-id762 . -11) (undo-tree-id763 . -11) (undo-tree-id764 . -11) (undo-tree-id765 . -11) (undo-tree-id766 . -11) (undo-tree-id767 . -11) (undo-tree-id768 . -11) (undo-tree-id769 . -11) (undo-tree-id770 . -11) (undo-tree-id771 . -11) (undo-tree-id772 . -11) (undo-tree-id773 . -11) (undo-tree-id774 . -11) (undo-tree-id775 . -11) (undo-tree-id776 . -11) (undo-tree-id777 . -11) (undo-tree-id778 . -11) (undo-tree-id779 . -11) (undo-tree-id780 . -11) (undo-tree-id781 . -11) (undo-tree-id782 . -11) (undo-tree-id783 . -11) (undo-tree-id784 . -11) (undo-tree-id785 . -11) (undo-tree-id786 . -11) (undo-tree-id787 . -11) (undo-tree-id788 . -11) (undo-tree-id789 . -11) (undo-tree-id790 . -11) (undo-tree-id791 . -12) (undo-tree-id792 . -12) (undo-tree-id793 . -12) (undo-tree-id794 . -12) (undo-tree-id795 . -12) (undo-tree-id796 . -12) (undo-tree-id797 . -12) (undo-tree-id798 . -12)) (25487 18775 521290 513000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1102 . -1) 7344 (t 25487 18903 102445 210000)) nil (25487 18907 714543 747000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7353) (undo-tree-id739 . -1) (undo-tree-id741 . -1) (undo-tree-id743 . -1) 7354) ((7353 . 7354) (t 25487 18758 232998 659000)) (25487 18758 129138 158000) 0 nil])
([nil nil ((7343 . 7344)) nil (25487 18907 714526 863000) 0 nil])
nil
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7295) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7296) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) 7297 (t 25487 18907 814362 136000)) nil (25487 18917 477555 480000) 0 nil])
([nil nil ((7295 . 7297)) nil (25487 18917 477531 882000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (undo-tree-id1127 . -1) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7343) (t 25487 18917 574190 60000)) nil (25487 18945 616694 761000) 0 nil])
([nil nil ((7334 . 7351)) nil (25487 18945 616690 106000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7350) (undo-tree-id1126 . -1) 7351) nil (25487 18945 616688 531000) 0 nil])
([nil nil ((7350 . 7366)) nil (25487 18945 616685 469000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7365) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) 7366) nil (25487 18945 616679 833000) 0 nil])
([nil nil ((7365 . 7366) (t 25487 18945 721693 763000)) nil (25487 18946 997293 49000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7350) (undo-tree-id1128 . -1) 7351 (t 25487 18947 101669 430000)) nil (25487 18955 981809 114000) 0 nil])
([nil nil ((7350 . 7352)) nil (25487 18955 981792 986000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7334) (undo-tree-id1129 . -1) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7335) (undo-tree-id1130 . -1) (#("r" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7336) (undo-tree-id1131 . -1) (#("g" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7337) (undo-tree-id1132 . -1) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7338) (undo-tree-id1133 . -1) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7339) (undo-tree-id1134 . -1) (#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7340) (undo-tree-id1135 . -1) 7341 (t 25487 18956 81511 85000)) nil (25487 18981 926973 335000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) 7344 (t 25487 18982 157051 269000)) nil (25487 18993 525256 986000) 0 nil])
([nil nil ((7343 . 7344)) nil (25487 18993 525222 852000) 0 nil])
([nil nil ((7334 . 7341) (t 25487 18993 628848 961000)) nil (25487 19060 235246 79000) 0 nil])
([nil nil ((#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7349) (t 25487 19060 339672 372000)) nil (25487 19068 660268 300000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7295) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (#("5" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7296) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) 7297 (t 25487 19068 771523 643000)) nil (25487 19079 436048 404000) 0 nil])
([nil nil ((7295 . 7297)) nil (25487 19079 435974 581000) 0 nil])
([nil nil ((#("b" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7341) (undo-tree-id1213 . -1) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7342) (undo-tree-id1214 . -1) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1215 . -1) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7344) (undo-tree-id1216 . -1) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7345) (undo-tree-id1217 . -1) (#("m" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7346) (undo-tree-id1218 . -1) 7347 (t 25487 19079 555333 426000)) nil (25487 19097 485166 815000) 0 nil])
([nil nil ((7341 . 7344)) nil (25487 19097 485143 254000) 0 nil])
([nil nil ((#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("m" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("!" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("5" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#(":" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (undo-tree-id1219 . -1) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("-" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("i" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("g" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("r" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("m" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (t 25487 19097 591015 280000)) nil (25487 19116 82420 640000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("o" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334)) nil (25487 19116 82405 944000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#(";" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("n" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("a" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334) (#("t" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7334)) nil (25487 19116 82402 861000) 0 nil])
([nil nil ((7343 . 7347)) nil (25487 19116 82394 924000) 0 nil])
([nil nil ((7347 . 7355) (t 25487 19116 182687 313000)) nil (25487 19123 45385 810000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) 7344 (t 25487 19123 142564 533000)) nil (25487 19133 762323 756000) 0 nil])
([nil nil ((7343 . 7344)) nil (25487 19133 762299 53000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7343) (undo-tree-id1236 . -1) 7344 (t 25487 19133 866375 351000)) nil (25487 19196 652651 763000) 0 nil])
([nil nil ((7343 . 7344)) nil (25487 19196 652649 353000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7347) (undo-tree-id1231 . -1) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7348) (undo-tree-id1232 . -1) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7349) (undo-tree-id1233 . -1) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7350) (undo-tree-id1234 . -1) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7351) (undo-tree-id1235 . -1) 7352) nil (25487 19203 247042 9000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347)) nil (25487 19214 226858 163000) 0 nil] [nil nil ((#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("0" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#(" " 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("x" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347) (#("p" 0 1 (tag-attr t tag-name "th" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7347)) ((7347 . 7348) (7347 . 7348) (7347 . 7348) (7347 . 7348) (7347 . 7348) (7347 . 7348) (7347 . 7348)) (25487 19202 568200 298000) 0 nil])
([nil nil ((7995 . 8016)) nil (25487 19214 226855 669000) 0 nil])
([nil nil ((7994 . 8015)) ((#(" 0px 0px 0px !importa" 0 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 5 6 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 6 20 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7994) (undo-tree-id1274 . -21) (undo-tree-id1275 . -21) (undo-tree-id1276 . -6) (undo-tree-id1277 . -6) (undo-tree-id1278 . -6) (undo-tree-id1279 . -6) (undo-tree-id1280 . -6) (undo-tree-id1281 . -21) (undo-tree-id1282 . -21) (undo-tree-id1283 . -21) (undo-tree-id1284 . -21) (undo-tree-id1285 . -21) (undo-tree-id1286 . -21) (undo-tree-id1287 . -21) (undo-tree-id1288 . -21) (undo-tree-id1289 . -21) (undo-tree-id1290 . -21) (undo-tree-id1291 . -21) (undo-tree-id1292 . -21) (undo-tree-id1293 . -21) (undo-tree-id1294 . -21) (undo-tree-id1295 . -21) (undo-tree-id1296 . -21) (undo-tree-id1297 . -21) (undo-tree-id1298 . -21) (undo-tree-id1299 . -21) (undo-tree-id1300 . -21) (undo-tree-id1301 . -21) (undo-tree-id1302 . -21) (undo-tree-id1303 . -21) (undo-tree-id1304 . -21)) (25487 19202 162346 887000) 0 nil])
([nil nil ((8016 . 8017)) nil (25487 19214 226854 80000) 0 nil])
([nil nil ((8015 . 8018)) ((#("nt " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face)) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face))) . 8015) (undo-tree-id1260 . -1) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -3) (undo-tree-id1268 . -3) (undo-tree-id1269 . -3) (undo-tree-id1270 . -3) (undo-tree-id1271 . -3) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3)) (25487 19201 761275 989000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face))) . -8016) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) 8017) nil (25487 19214 226847 967000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face face (whitespace-line web-mode-html-attr-value-face))) . -8017) (undo-tree-id1230 . -1) 8018) ((8017 . 8018)) (25487 19201 421832 496000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8012) (undo-tree-id1320 . -1) 8013 (t 25487 19214 336895 398000)) nil (25487 19230 365591 134000) 0 nil])
([nil nil ((#("0" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -7999) (undo-tree-id1229 . -1) 8000) ((7999 . 8000)) (25487 19201 48140 688000) 0 nil])
([nil nil ((8012 . 8013)) nil (25487 19230 365574 339000) 0 nil])
([nil nil ((7999 . 8001)) ((#("-5" 0 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7999) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (t 25487 19196 749265 536000)) (25487 19196 652614 343000) 0 nil])
([nil nil ((#("4" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8012) (undo-tree-id1321 . -1) 8013 (t 25487 19230 468556 713000)) nil (25487 19235 316175 157000) 0 nil])
nil
([nil nil ((8012 . 8013)) nil (25487 19235 316158 854000) 0 nil])
([nil nil ((2055 . 2060) (1989 . 1992) (1962 . 1965) (1941 . 1942) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -1922) (#("   " 0 3 (tag-type comment font-lock-face web-mode-comment-face)) . -1876) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -1833) (#(" " 0 1 (tag-type comment font-lock-face web-mode-comment-face)) . -1762) (1689 . 1690) (1628 . 1631) (1595 . 2066) (#("<v-tooltip top>
            <template v-slot:activator=\"{ on, attrs }\">
              <span class=\"tablestats_left\" v-bind=\"attrs\" v-on=\"on\">

                <v-icon class=\"tablestats\">mdi-database-marker</v-icon>
                <p style=\"display:inline;\">
                  {{ startP  + \"-\" + getMax() }}
                </p>
              </span>
            </template>
            <span>{{$t('AnalysisNetwork.currentSubset')}}</span>
          </v-tooltip>" 0 1 (tag-name "v-tooltip" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 1 10 (tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-tag-custom-face) 10 11 (tag-name "v-tooltip" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 12 13 (tag-attr t tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 13 14 (tag-attr t tag-attr-end 0 tag-name "v-tooltip" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-name "v-tooltip" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 28 29 (tag-name "template" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 29 37 (tag-name "template" tag-type start font-lock-face web-mode-html-tag-face) 37 38 (tag-name "template" tag-type start) 38 39 (tag-attr-beg 2 tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 39 44 (tag-attr t tag-name "template" tag-type start font-lock-face web-mode-html-attr-engine-face) 44 45 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 45 46 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 47 48 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 48 49 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 49 50 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 50 51 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 51 52 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 52 53 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 53 54 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 54 55 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 55 56 (block-side t block-token delimiter-beg tag-attr t tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 56 58 (block-side t tag-attr t tag-name "template" tag-type start) 58 59 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 59 60 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 60 62 (block-side t tag-attr t tag-name "template" tag-type start) 62 63 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 63 64 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 64 65 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 65 66 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 66 67 (block-side t tag-attr t tag-name "template" tag-type start face web-mode-variable-name-face) 67 69 (block-side t tag-attr t tag-name "template" tag-type start) 69 70 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 16 tag-name "template" tag-type start font-lock-face web-mode-block-delimiter-face) 70 71 (tag-name "template" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 86 87 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 87 91 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 91 92 (tag-name "span" tag-type start) 92 93 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 93 97 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 97 98 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 98 114 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 114 115 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 115 116 (tag-name "span" tag-type start) 116 117 (tag-attr-beg 2 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 117 122 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 122 123 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 123 129 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 129 130 (tag-attr t tag-attr-end 6 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 130 131 (tag-name "span" tag-type start) 131 132 (tag-attr-beg 2 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 132 135 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-engine-face) 135 136 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 136 139 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 139 140 (tag-attr t tag-attr-end 4 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 140 141 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 159 160 (tag-name "v-icon" tag-type start tag-beg 19 font-lock-face web-mode-html-tag-bracket-face) 160 166 (tag-name "v-icon" tag-type start font-lock-face web-mode-html-tag-custom-face) 166 167 (tag-name "v-icon" tag-type start) 167 168 (tag-attr-beg 0 tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 168 172 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-name-face) 172 173 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-equal-face) 173 184 (tag-attr t tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 184 185 (tag-attr t tag-attr-end 5 tag-name "v-icon" tag-type start font-lock-face web-mode-html-attr-value-face) 185 186 (tag-name "v-icon" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 205 206 (tag-name "v-icon" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 206 207 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-bracket-face) 207 213 (tag-name "v-icon" tag-type end font-lock-face web-mode-html-tag-custom-face) 213 214 (tag-name "v-icon" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 231 232 (tag-name "p" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 232 233 (tag-name "p" tag-type start font-lock-face web-mode-html-tag-face) 233 234 (tag-name "p" tag-type start) 234 235 (tag-attr-beg 0 tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 235 239 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-name-face) 239 240 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-equal-face) 240 256 (tag-attr t tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 256 257 (tag-attr t tag-attr-end 5 tag-name "p" tag-type start font-lock-face web-mode-html-attr-value-face) 257 258 (tag-name "p" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 277 278 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 278 279 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 279 280 (block-side t) 280 281 (block-side t face web-mode-variable-name-face) 281 282 (block-side t face web-mode-variable-name-face) 282 283 (block-side t face web-mode-variable-name-face) 283 284 (block-side t face web-mode-variable-name-face) 284 285 (block-side t face web-mode-variable-name-face) 285 286 (block-side t face web-mode-variable-name-face) 286 296 (block-side t) 296 302 (block-side t face web-mode-function-call-face) 302 303 (block-side t face (rainbow-delimiters-depth-3-face)) 303 304 (block-side t face (rainbow-delimiters-depth-3-face)) 304 305 (block-side t) 305 306 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 306 307 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 324 325 (tag-name "p" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 325 326 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-bracket-face) 326 327 (tag-name "p" tag-type end font-lock-face web-mode-html-tag-face) 327 328 (tag-name "p" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 343 344 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 344 345 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 345 349 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 349 350 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 363 364 (tag-name "template" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 364 365 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-bracket-face) 365 373 (tag-name "template" tag-type end font-lock-face web-mode-html-tag-face) 373 374 (tag-name "template" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 387 388 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 388 392 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 392 393 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 393 394 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 394 395 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 395 396 (block-side t) 396 397 (block-side t face web-mode-variable-name-face) 397 398 (block-side t face (rainbow-delimiters-depth-3-face)) 398 399 (block-side t) 399 400 (block-side t face web-mode-variable-name-face) 400 401 (block-side t face web-mode-variable-name-face) 401 402 (block-side t face web-mode-variable-name-face) 402 403 (block-side t face web-mode-variable-name-face) 403 404 (block-side t face web-mode-variable-name-face) 404 405 (block-side t face web-mode-variable-name-face) 405 406 (block-side t face web-mode-variable-name-face) 406 407 (block-side t face web-mode-variable-name-face) 407 408 (block-side t face web-mode-variable-name-face) 408 409 (block-side t face web-mode-variable-name-face) 409 410 (block-side t face web-mode-variable-name-face) 410 411 (block-side t face web-mode-variable-name-face) 411 412 (block-side t face web-mode-variable-name-face) 412 413 (block-side t face web-mode-variable-name-face) 413 414 (block-side t face web-mode-variable-name-face) 414 415 (block-side t) 415 416 (block-side t face web-mode-variable-name-face) 416 417 (block-side t face web-mode-variable-name-face) 417 418 (block-side t face web-mode-variable-name-face) 418 419 (block-side t face web-mode-variable-name-face) 419 420 (block-side t face web-mode-variable-name-face) 420 421 (block-side t face web-mode-variable-name-face) 421 422 (block-side t face web-mode-variable-name-face) 422 423 (block-side t face web-mode-variable-name-face) 423 424 (block-side t face web-mode-variable-name-face) 424 425 (block-side t face web-mode-variable-name-face) 425 426 (block-side t face web-mode-variable-name-face) 426 427 (block-side t face web-mode-variable-name-face) 427 428 (block-side t face web-mode-variable-name-face) 428 429 (block-side t) 429 430 (block-side t face (rainbow-delimiters-depth-3-face)) 430 431 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 431 432 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 432 433 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 433 434 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 434 438 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 438 439 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 450 451 (tag-name "v-tooltip" tag-type end tag-beg 22 font-lock-face web-mode-html-tag-bracket-face) 451 452 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-bracket-face) 452 461 (tag-name "v-tooltip" tag-type end font-lock-face web-mode-html-tag-custom-face) 461 462 (tag-name "v-tooltip" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 1595) (undo-tree-id1322 . -16) (undo-tree-id1323 . -462) (undo-tree-id1324 . -462) (undo-tree-id1325 . -462) (t 25487 19235 416453 116000)) nil (25487 19566 733480 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7025 . 7026) (nil tag-attr t 7014 . 7026) (nil tag-name "v-simple-table" 7014 . 7026) (nil tag-type start 7014 . 7026) (nil font-lock-face web-mode-html-attr-value-face 7014 . 7026) (7014 . 7026) (t 25487 19566 841755 816000)) nil (25487 23489 967132 745000) 0 nil])
([nil nil ((7026 . 7027)) nil (25487 23489 967117 135000) 0 nil])
([nil nil ((#("zebrastripes " 0 11 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 11 12 (rear-nonsticky t tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face) 12 13 (tag-attr t tag-name "v-simple-table" tag-type start font-lock-face web-mode-html-attr-value-face)) . 7014) (undo-tree-id1326 . -13) (undo-tree-id1327 . -13) (t 25487 23490 35916 776000)) nil (25487 23622 559767 862000) 0 nil])
([nil nil ((28253 . 28255) (#("  " 0 2 (part-side css)) . 28252) (undo-tree-id16 . -2) (28251 . 28255) (t 25487 23622 613799 130000)) nil (25488 25149 131976 641000) 0 nil])
([nil nil ((28255 . 28271)) nil (25488 25149 131973 589000) 0 nil])
([nil nil ((#("t" 0 1 (part-side css)) . -28268) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("h" 0 1 (part-side css)) . -28269) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(" " 0 1 (part-side css)) . -28270) (undo-tree-id15 . -1) 28271) nil (25488 25149 131970 278000) 0 nil])
([nil nil ((28271 . 28273) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face) part-side css)) . -28271) (28268 . 28272)) nil (25488 25149 131960 901000) 0 nil])
([nil nil ((28274 . 28276) (#("    " 0 4 (face whitespace-trailing part-side css)) . 28273) (undo-tree-id9 . -2) (undo-tree-id10 . 4) (28275 . 28277) (28272 . 28276)) nil (25488 25149 131958 126000) 0 nil])
([nil nil ((28277 . 28278)) nil (25488 25149 131952 861000) 0 nil])
([nil nil ((#("," 0 1 (part-side css)) . -28277) (undo-tree-id8 . -1) 28278) nil (25488 25149 131950 557000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28343 . 28344) (nil part-side css 28343 . 28344) (nil part-side css 28333 . 28343) (nil face web-mode-css-priority-face 28333 . 28343) (nil part-side css 28328 . 28333) (nil part-side css 28320 . 28328) (nil face web-mode-css-property-name-face 28320 . 28328) (nil part-side css 28307 . 28320) (nil part-side css 28300 . 28307) (nil face web-mode-css-color-face 28300 . 28307) (nil part-side css 28299 . 28300) (nil part-side css 28287 . 28299) (nil face web-mode-css-property-name-face 28287 . 28299) (nil part-side css 28280 . 28287) (nil part-side css 28273 . 28280) (nil face web-mode-css-property-name-face 28273 . 28280) (28273 . 28344)) nil (25488 25149 131947 84000) 0 nil])
([nil nil ((28273 . 28277) 28344) nil (25488 25149 131940 290000) 0 nil])
([nil nil ((28291 . 28295) (#(" " 0 1 (part-side css)) . 28290) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (28291 . 28292)) nil (25488 25149 131937 835000) 0 nil])
([nil nil ((28308 . 28314) (#(" " 0 1 (part-side css)) . 28307) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (28308 . 28309)) nil (25488 25149 131932 981000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . 28307) (#(" " 0 1 (part-side css)) . 28307) (#(" " 0 1 (part-side css)) . 28307) (#(" " 0 1 (part-side css)) . 28307) (#(" " 0 1 (part-side css)) . 28307) (#("
" 0 1 (part-side css)) . 28307) (undo-tree-id3 . -1)) nil (25488 25149 131925 493000) 0 nil])
([nil nil ((28328 . 28332) (#(" " 0 1 (part-side css)) . 28327) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (28328 . 28329)) nil (25488 25149 131916 4000) 0 nil])
([nil nil ((#("style=\"height: 20px; border-left: #c5c5c5 solid thin; padding: 0px !important;\"" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t tag-attr-beg 0) 1 5 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "th" tag-attr t) 6 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 5 tag-attr t)) . 7299) (undo-tree-id71 . -7) (undo-tree-id72 . -79) (undo-tree-id73 . -59) (undo-tree-id74 . -78) (undo-tree-id75 . -78) (undo-tree-id76 . -79) (undo-tree-id77 . -79) (t 25488 25149 251960 920000)) nil (25488 25152 549514 772000) 0 nil])
([nil nil ((#("                        " 0 24 (tag-type start tag-name "th")) . -7275) (undo-tree-id17 . -24) (undo-tree-id18 . -24) (undo-tree-id19 . -24) (undo-tree-id20 . -24) (undo-tree-id21 . -24) (undo-tree-id22 . -24) (undo-tree-id23 . -24) (undo-tree-id24 . -24) (undo-tree-id25 . -24) (undo-tree-id26 . -24) (undo-tree-id27 . -24) (undo-tree-id28 . -24) (undo-tree-id29 . -24) (undo-tree-id30 . -24) (undo-tree-id31 . -24) (undo-tree-id32 . -24) (undo-tree-id33 . -24) (undo-tree-id34 . -24) (undo-tree-id35 . -24) (undo-tree-id36 . -24) (undo-tree-id37 . -24) (undo-tree-id38 . -24) (undo-tree-id39 . -24) (undo-tree-id40 . -24) (undo-tree-id41 . -24) (undo-tree-id42 . -24) (undo-tree-id43 . -24) (undo-tree-id44 . -24) (undo-tree-id45 . -24) (undo-tree-id46 . -24) (undo-tree-id47 . -24) (undo-tree-id48 . -24) (undo-tree-id49 . -24) (undo-tree-id50 . -24) (undo-tree-id51 . -24) (undo-tree-id52 . -24) (undo-tree-id53 . -24) (undo-tree-id54 . -24) (undo-tree-id55 . -24) (undo-tree-id56 . -24) (undo-tree-id57 . -24) (undo-tree-id58 . -24) (undo-tree-id59 . -24) (undo-tree-id60 . -24) (undo-tree-id61 . -24) (undo-tree-id62 . -24) (undo-tree-id63 . -24) (undo-tree-id64 . -24) (undo-tree-id65 . -24) (undo-tree-id66 . -24) (undo-tree-id67 . -24) (undo-tree-id68 . -24) (undo-tree-id69 . -24) (undo-tree-id70 . -24) 7299) nil (25488 25152 549499 982000) 0 nil])
([nil nil ((7275 . 7299) (t 25488 25152 659961 439000)) nil (25488 25187 212172 25000) 0 nil])
([nil nil ((7306 . 7315) (7299 . 7307)) nil (25488 25187 212170 662000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7311) (undo-tree-id79 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7312) (undo-tree-id80 . -1) (#("w" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7313) (undo-tree-id81 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7314) (undo-tree-id82 . -1) 7315) nil (25488 25187 212168 579000) 0 nil])
([nil nil ((7311 . 7315)) nil (25488 25187 212161 239000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7314) (undo-tree-id78 . -1) 7315) nil (25488 25187 212159 525000) 0 nil])
([nil nil ((28207 . 28208)) nil (25488 25187 212149 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28215 . 28216) (nil part-side css 28208 . 28216) (nil face web-mode-css-selector-class-face 28208 . 28216) (28208 . 28216)) nil (25488 25187 212142 625000) 0 nil])
([nil nil ((28235 . 28236) (t 25488 25187 315973 806000)) nil (25488 25195 740854 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28245 . 28246) (nil part-side css 28236 . 28246) (nil face web-mode-css-priority-face 28236 . 28246) (28236 . 28246)) nil (25488 25282 336506 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7328 . 7329) (nil tag-attr t 7306 . 7329) (nil tag-name "th" 7306 . 7329) (nil tag-type start 7306 . 7329) (nil font-lock-face web-mode-html-attr-value-face 7306 . 7329) (7306 . 7329) (t 25488 25195 847978 770000)) nil (25488 25537 529582 168000) 0 nil] [nil nil ((7315 . 7340) (t 25488 25195 847978 770000)) ((#("
                        " 0 1 (tag-type start tag-name "th") 1 25 (tag-type start tag-name "th")) . 7315) (undo-tree-id84 . -25) (undo-tree-id85 . -1) (undo-tree-id86 . -25) (undo-tree-id87 . -1) (undo-tree-id88 . -25) (undo-tree-id89 . -25) (undo-tree-id90 . -25) (undo-tree-id91 . -25) (undo-tree-id92 . -25) (undo-tree-id93 . -25) (undo-tree-id94 . -25) (undo-tree-id95 . -25) (undo-tree-id96 . -25) (undo-tree-id97 . -25) (undo-tree-id98 . -25) (undo-tree-id99 . -25) (undo-tree-id100 . -25) (undo-tree-id101 . -25) (undo-tree-id102 . -25) (undo-tree-id103 . -25) (undo-tree-id104 . -25) (undo-tree-id105 . -25) (undo-tree-id106 . -25) (undo-tree-id107 . -25)) (25488 25281 683046 117000) 0 nil])
([nil nil ((7329 . 7330)) nil (25488 25537 529580 23000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7362 . 7363) (nil tag-name "th" 7362 . 7363) (nil tag-type start 7362 . 7363) (nil face (rainbow-delimiters-depth-1-face) 7362 . 7363) (nil tag-name "th" 7361 . 7362) (nil tag-type start 7361 . 7362) (nil tag-attr-beg 0 7360 . 7361) (nil tag-attr t 7360 . 7361) (nil tag-attr-end 0 7360 . 7361) (nil tag-name "th" 7360 . 7361) (nil tag-type start 7360 . 7361) (nil font-lock-face web-mode-html-attr-name-face 7360 . 7361) (nil tag-name "th" 7359 . 7360) (nil tag-type start 7359 . 7360) (nil tag-attr t 7358 . 7359) (nil tag-attr-end 6 7358 . 7359) (nil tag-name "th" 7358 . 7359) (nil tag-type start 7358 . 7359) (nil font-lock-face web-mode-html-attr-value-face 7358 . 7359) (nil tag-attr t 7357 . 7358) (nil tag-name "th" 7357 . 7358) (nil tag-type start 7357 . 7358) (nil font-lock-face web-mode-html-attr-value-face 7357 . 7358) (nil tag-attr t 7356 . 7357) (nil tag-name "th" 7356 . 7357) (nil tag-type start 7356 . 7357) (nil font-lock-face web-mode-html-attr-equal-face 7356 . 7357) (nil tag-attr t 7351 . 7356) (nil tag-name "th" 7351 . 7356) (nil tag-type start 7351 . 7356) (nil font-lock-face web-mode-html-attr-name-face 7351 . 7356) (nil tag-attr-beg 0 7350 . 7351) (nil tag-attr t 7350 . 7351) (nil tag-name "th" 7350 . 7351) (nil tag-type start 7350 . 7351) (nil font-lock-face web-mode-html-attr-name-face 7350 . 7351) (nil tag-name "th" 7349 . 7350) (nil tag-type start 7349 . 7350) (nil tag-attr t 7348 . 7349) (nil tag-attr-end 0 7348 . 7349) (nil tag-name "th" 7348 . 7349) (nil tag-type start 7348 . 7349) (nil font-lock-face web-mode-html-attr-name-face 7348 . 7349) (nil tag-attr t 7343 . 7348) (nil tag-name "th" 7343 . 7348) (nil tag-type start 7343 . 7348) (nil font-lock-face web-mode-html-attr-name-face 7343 . 7348) (nil tag-attr-beg 0 7342 . 7343) (nil tag-attr t 7342 . 7343) (nil tag-name "th" 7342 . 7343) (nil tag-type start 7342 . 7343) (nil font-lock-face web-mode-html-attr-name-face 7342 . 7343) (nil tag-name "th" 7341 . 7342) (nil tag-type start 7341 . 7342) (nil tag-attr-beg 0 7340 . 7341) (nil tag-attr t 7340 . 7341) (nil tag-attr-end 0 7340 . 7341) (nil tag-name "th" 7340 . 7341) (nil tag-type start 7340 . 7341) (nil font-lock-face web-mode-html-attr-name-face 7340 . 7341) (nil face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face) 7340 . 7341) (7340 . 7363)) ((#("{ active: index === 0 }" 0 1 (face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face) font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr-end 0 tag-attr t tag-attr-beg 0) 1 2 (tag-type start tag-name "th") 2 3 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t tag-attr-beg 0) 3 8 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr-end 0 tag-attr t) 9 10 (tag-type start tag-name "th") 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t tag-attr-beg 0) 11 16 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr t) 16 17 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "th" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 6 tag-attr t) 19 20 (tag-type start tag-name "th") 20 21 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "th" tag-attr-end 0 tag-attr t tag-attr-beg 0) 21 22 (tag-type start tag-name "th") 22 23 (face (rainbow-delimiters-depth-1-face) tag-type start tag-name "th" rear-nonsticky nil)) . 7340) (undo-tree-id83 . -23) (nil face (rainbow-delimiters-depth-1-face web-mode-html-attr-name-face) 7340 . 7341) (nil tag-name "th" 7340 . 7341) (nil tag-name "th" 7341 . 7342) (nil tag-name "th" 7342 . 7343) (nil tag-name "th" 7343 . 7348) (nil tag-name "th" 7348 . 7349) (nil tag-name "th" 7349 . 7350) (nil tag-name "th" 7350 . 7351) (nil tag-name "th" 7351 . 7356) (nil tag-name "th" 7356 . 7357) (nil tag-name "th" 7357 . 7358) (nil tag-name "th" 7358 . 7359) (nil tag-name "th" 7359 . 7360) (nil tag-name "th" 7360 . 7361) (nil tag-name "th" 7361 . 7362) (nil face (rainbow-delimiters-depth-1-face) 7362 . 7363) (nil tag-name "th" 7362 . 7363) (nil rear-nonsticky t 7362 . 7363)) (25488 25281 664388 141000) 0 nil])
([nil nil ((#("tablecol" 0 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . 7330) (undo-tree-id183 . -8) (undo-tree-id184 . -8)) nil (25488 25537 529578 825000) 0 nil])
nil
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7329) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 7330) nil (25488 25537 529575 683000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7308) (undo-tree-id175 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7309) (undo-tree-id176 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7310) (undo-tree-id177 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7311) (undo-tree-id178 . -1) (#("v" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7312) (undo-tree-id179 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7313) (undo-tree-id180 . -1) 7314) nil (25488 25537 529571 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7315 . 7316) (nil tag-attr t 7308 . 7316) (nil tag-name "th" 7308 . 7316) (nil tag-type start 7308 . 7316) (nil font-lock-face web-mode-html-attr-value-face 7308 . 7316) (7308 . 7316)) nil (25488 25537 529540 581000) 0 nil])
([nil nil ((28207 . 28209) (#("  " 0 2 (face whitespace-trailing part-side css)) . 28206) (28206 . 28208) (28206 . 28207)) nil (25488 25537 529538 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28333 . 28334) (nil part-side css 28333 . 28334) (nil face (rainbow-delimiters-depth-1-face) 28333 . 28334) (nil part-side css 28330 . 28333) (nil rear-nonsticky t 28329 . 28330) (nil part-side css 28329 . 28330) (nil part-side css 28319 . 28329) (nil face web-mode-css-priority-face 28319 . 28329) (nil part-side css 28314 . 28319) (nil part-side css 28306 . 28314) (nil face web-mode-css-property-name-face 28306 . 28314) (nil part-side css 28289 . 28306) (nil part-side css 28282 . 28289) (nil face web-mode-css-color-face 28282 . 28289) (nil part-side css 28281 . 28282) (nil part-side css 28269 . 28281) (nil face web-mode-css-property-name-face 28269 . 28281) (nil part-side css 28263 . 28269) (nil rear-nonsticky t 28262 . 28263) (nil part-side css 28262 . 28263) (nil face web-mode-css-priority-face 28262 . 28263) (nil part-side css 28253 . 28262) (nil face web-mode-css-priority-face 28253 . 28262) (nil part-side css 28247 . 28253) (nil part-side css 28240 . 28247) (nil face web-mode-css-property-name-face 28240 . 28247) (nil part-side css 28235 . 28240) (nil part-side css 28234 . 28235) (nil face (rainbow-delimiters-depth-1-face) 28234 . 28235) (nil part-side css 28233 . 28234) (nil rear-nonsticky t 28232 . 28233) (nil part-side css 28232 . 28233) (nil face web-mode-css-selector-class-face 28232 . 28233) (nil part-side css 28225 . 28232) (nil face web-mode-css-selector-class-face 28225 . 28232) (nil part-side css 28224 . 28225) (nil face web-mode-css-selector-class-face 28224 . 28225) (nil part-side css 28221 . 28224) (nil part-side css 28209 . 28221) (nil face web-mode-css-selector-class-face 28209 . 28221) (28209 . 28334)) nil (25488 25537 529534 473000) 0 nil])
([nil nil ((28334 . 28337)) nil (25488 25537 529524 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28461 . 28462) (nil part-side css 28461 . 28462) (nil face (rainbow-delimiters-depth-1-face) 28461 . 28462) (nil part-side css 28458 . 28461) (nil rear-nonsticky t 28457 . 28458) (nil part-side css 28457 . 28458) (nil part-side css 28447 . 28457) (nil face web-mode-css-priority-face 28447 . 28457) (nil part-side css 28442 . 28447) (nil part-side css 28434 . 28442) (nil face web-mode-css-property-name-face 28434 . 28442) (nil part-side css 28417 . 28434) (nil part-side css 28410 . 28417) (nil face web-mode-css-color-face 28410 . 28417) (nil part-side css 28409 . 28410) (nil part-side css 28397 . 28409) (nil face web-mode-css-property-name-face 28397 . 28409) (nil part-side css 28391 . 28397) (nil rear-nonsticky t 28390 . 28391) (nil part-side css 28390 . 28391) (nil face web-mode-css-priority-face 28390 . 28391) (nil part-side css 28381 . 28390) (nil face web-mode-css-priority-face 28381 . 28390) (nil part-side css 28375 . 28381) (nil part-side css 28368 . 28375) (nil face web-mode-css-property-name-face 28368 . 28375) (nil part-side css 28363 . 28368) (nil part-side css 28362 . 28363) (nil face (rainbow-delimiters-depth-1-face) 28362 . 28363) (nil part-side css 28361 . 28362) (nil rear-nonsticky t 28360 . 28361) (nil part-side css 28360 . 28361) (nil face web-mode-css-selector-class-face 28360 . 28361) (nil part-side css 28353 . 28360) (nil face web-mode-css-selector-class-face 28353 . 28360) (nil part-side css 28352 . 28353) (nil face web-mode-css-selector-class-face 28352 . 28353) (nil part-side css 28349 . 28352) (nil part-side css 28337 . 28349) (nil face web-mode-css-selector-class-face 28337 . 28349) (28337 . 28462)) nil (25488 25537 529521 961000) 0 nil])
([nil nil ((#("c" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28358) (undo-tree-id172 . -1) (#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28359) (undo-tree-id173 . -1) (#("l" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28360) (undo-tree-id174 . -1) 28361) nil (25488 25537 529511 372000) 0 nil])
([nil nil ((28358 . 28359)) nil (25488 25537 529506 759000) 0 nil])
([nil nil ((#("F" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28358) (undo-tree-id171 . -1) 28359) nil (25488 25537 529505 477000) 0 nil])
([nil nil ((28358 . 28362)) nil (25488 25537 529503 335000) 0 nil])
([nil nil ((#("l" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28232) (undo-tree-id170 . -1) 28233) nil (25488 25537 529502 151000) 0 nil])
([nil nil ((#("o" 0 1 (face web-mode-css-selector-class-face part-side css)) . -28231) (undo-tree-id169 . -1) 28232) nil (25488 25537 529499 723000) 0 nil])
([nil nil ((28231 . 28238)) nil (25488 25537 529497 359000) 0 nil])
([nil nil ((28363 . 28366)) nil (25488 25537 529496 422000) 0 nil])
([nil nil ((#("tablecol" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t) 7 8 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t rear-nonsticky t)) . 7308) (undo-tree-id167 . -8) (undo-tree-id168 . -8)) nil (25488 25537 529495 243000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7320 . 7321) (nil tag-attr t 7308 . 7321) (nil tag-name "th" 7308 . 7321) (nil tag-type start 7308 . 7321) (nil font-lock-face web-mode-html-attr-value-face 7308 . 7321) (7308 . 7321)) nil (25488 25537 529491 412000) 0 nil])
([nil nil ((#("index" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . 7323) (undo-tree-id165 . -5) (undo-tree-id166 . -5)) nil (25488 25537 529489 226000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7328 . 7329) (nil tag-attr t 7323 . 7329) (nil tag-name "th" 7323 . 7329) (nil tag-type start 7323 . 7329) (nil font-lock-face web-mode-html-attr-value-face 7323 . 7329) (7323 . 7329)) nil (25488 25537 529486 118000) 0 nil])
([nil nil ((7335 . 7337)) nil (25488 25537 529484 187000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7363 . 7364) (nil tag-attr t 7358 . 7364) (nil tag-name "th" 7358 . 7364) (nil tag-type start 7358 . 7364) (nil font-lock-face web-mode-html-attr-value-face 7358 . 7364) (nil rear-nonsticky t 7357 . 7358) (nil tag-attr t 7357 . 7358) (nil tag-name "th" 7357 . 7358) (nil tag-type start 7357 . 7358) (nil font-lock-face web-mode-html-attr-value-face 7357 . 7358) (nil tag-attr t 7352 . 7357) (nil tag-name "th" 7352 . 7357) (nil tag-type start 7352 . 7357) (nil font-lock-face web-mode-html-attr-value-face 7352 . 7357) (nil tag-attr t 7350 . 7352) (nil tag-name "th" 7350 . 7352) (nil tag-type start 7350 . 7352) (nil font-lock-face web-mode-html-attr-value-face 7350 . 7352) (nil rear-nonsticky t 7349 . 7350) (nil tag-attr t 7349 . 7350) (nil tag-name "th" 7349 . 7350) (nil tag-type start 7349 . 7350) (nil font-lock-face web-mode-html-attr-value-face 7349 . 7350) (nil tag-attr t 7337 . 7349) (nil tag-name "th" 7337 . 7349) (nil tag-type start 7337 . 7349) (nil font-lock-face web-mode-html-attr-value-face 7337 . 7349) (7337 . 7364)) nil (25488 25537 529481 838000) 0 nil])
([nil nil ((#("First" 0 5 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . 7345) (undo-tree-id163 . -5) (undo-tree-id164 . -5)) nil (25488 25537 529474 982000) 0 nil])
([nil nil ((#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7354) (undo-tree-id160 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7355) (undo-tree-id161 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7356) (undo-tree-id162 . -1) 7357) nil (25488 25537 529471 224000) 0 nil])
([nil nil ((7354 . 7355)) nil (25488 25537 529466 711000) 0 nil])
([nil nil ((7357 . 7361)) nil (25488 25537 529465 846000) 0 nil])
([nil nil ((7361 . 7371)) nil (25488 25537 529464 861000) 0 nil])
([nil nil ((#("z" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7369) (undo-tree-id158 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7370) (undo-tree-id159 . -1) 7371) nil (25488 25537 529463 564000) 0 nil])
([nil nil ((7369 . 7384)) nil (25488 25537 529459 689000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7369) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7370) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7371) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7372) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7373) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7374) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("x" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7375) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7376) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7377) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7378) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7379) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7380) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7381) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7382) (undo-tree-id156 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7383) (undo-tree-id157 . -1) 7384) nil (25488 25537 529455 197000) 0 nil])
([nil nil ((7369 . 7380)) nil (25488 25537 529419 49000) 0 nil])
([nil nil ((7380 . 7385)) nil (25488 25537 529418 229000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7384) (undo-tree-id125 . -1) 7385) nil (25488 25537 529417 58000) 0 nil])
([nil nil ((7384 . 7388)) nil (25488 25537 529413 805000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7387) (undo-tree-id124 . -1) 7388) nil (25488 25537 529412 640000) 0 nil])
([nil nil ((7387 . 7389)) nil (25488 25537 529410 339000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7387) (undo-tree-id122 . -1) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7388) (undo-tree-id123 . -1) 7389) nil (25488 25537 529409 68000) 0 nil])
([nil nil ((7387 . 7398)) nil (25488 25537 529405 637000) 0 nil])
([nil nil ((7398 . 7401)) nil (25488 25537 529404 644000) 0 nil])
([nil nil ((7412 . 7414) (7401 . 7413)) nil (25488 25537 529403 570000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 5 tag-attr t)) . -7411) (undo-tree-id119 . -1) (#("=" 0 1 (tag-type start tag-name "th")) . -7412) (undo-tree-id120 . -1) (#(" " 0 1 (tag-type start tag-name "th")) . -7413) (undo-tree-id121 . -1) 7414) nil (25488 25537 529401 631000) 0 nil])
([nil nil ((7411 . 7412)) nil (25488 25537 529396 895000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 5 tag-attr t)) . 7412)) nil (25488 25537 529395 908000) 0 nil])
([nil nil ((7412 . 7415)) nil (25488 25537 529394 819000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 5 tag-attr t)) . 7413) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr-end 5 tag-attr t)) . 7413)) nil (25488 25537 529393 558000) 0 nil])
([nil nil ((7413 . 7431)) nil (25488 25537 529392 497000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7427) (undo-tree-id115 . -1) (#("-" 0 1 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7428) (undo-tree-id116 . -1) (#("1" 0 1 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7429) (undo-tree-id117 . -1) (#(" " 0 1 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7430) (undo-tree-id118 . -1) 7431) nil (25488 25537 529390 689000) 0 nil])
([nil nil ((7427 . 7430)) nil (25488 25537 529384 798000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line web-mode-html-attr-value-face) font-lock-face web-mode-html-attr-value-face tag-type start tag-name "th" tag-attr t)) . -7429) (undo-tree-id114 . -1) 7430) nil (25488 25537 529383 756000) 0 nil])
([nil nil ((7413 . 7414)) nil (25488 25537 529381 696000) 0 nil])
([nil nil ((28436 . 28441)) nil (25488 25537 529380 696000) 0 nil])
([nil nil ((28441 . 28451)) nil (25488 25537 529379 847000) 0 nil])
([nil nil ((28441 . 28457) (#("background" 0 10 (part-side css)) . -28441) (undo-tree-id112 . -10) (undo-tree-id113 . -10) 28451) nil (25488 25537 529378 574000) 0 nil])
([nil nil ((28457 . 28464)) nil (25488 25537 529375 143000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28463) (undo-tree-id111 . -1) 28464) nil (25488 25537 529373 975000) 0 nil])
([nil nil ((28595 . 28600)) nil (25488 25537 529371 743000) 0 nil])
([nil nil ((28600 . 28621)) nil (25488 25537 529370 838000) 0 nil])
([nil nil ((28621 . 28623)) nil (25488 25537 529369 897000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28622) (undo-tree-id110 . -1) 28623) nil (25488 25537 529368 729000) 0 nil])
([nil nil ((28622 . 28623)) nil (25488 25537 529365 822000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28622) (undo-tree-id109 . -1) 28623) nil (25488 25537 529364 272000) 0 nil])
([nil nil ((28622 . 28624)) nil (25488 25537 529360 563000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28623) (undo-tree-id108 . -1) 28624) nil (25488 25537 529355 625000) 0 nil])
([nil nil ((8133 . 8135) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -8133) (8132 . 8134) (8131 . 8133) (#("{" 0 1 (face (rainbow-delimiters-depth-1-face))) . -8131) (8130 . 8132) (t 25488 25537 644669 351000)) nil (25488 25605 177235 779000) 0 nil])
([nil nil ((" " . -8132) (undo-tree-id206 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -8133) (undo-tree-id207 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face))) . 8134)) nil (25488 25605 177232 290000) 0 nil])
([nil nil ((8133 . 8140) (8132 . 8134) (#("{" 0 1 (face (rainbow-delimiters-depth-2-face))) . -8132) (8132 . 8133)) nil (25488 25605 177227 420000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t)) . -8139) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 8140) nil (25488 25605 177220 573000) 0 nil])
([nil nil ((7299 . 7300) (t 25488 25605 292892 943000)) nil (25488 25666 394235 678000) 0 nil])
([nil nil ((#("
    border-left: #c5c5c5 solid thin;" 0 5 (part-side css) 5 17 (face web-mode-css-property-name-face part-side css) 17 18 (part-side css) 18 25 (face web-mode-css-color-face part-side css) 25 37 (part-side css)) . 28382) (undo-tree-id208 . -1) (undo-tree-id209 . -37) (undo-tree-id210 . -37) (t 25488 25666 513113 240000)) nil (25488 25687 811147 210000) 0 nil])
([nil nil ((#("
  .tableheader th.tablecolLast {
    height: 20px !important;
    border-left: #c5c5c5 solid thin;
    padding: 0px !important;
    background-color: blue;
  }" 0 1 (part-side css) 1 3 (part-side css) 3 15 (face web-mode-css-selector-class-face part-side css) 15 18 (part-side css) 18 31 (face web-mode-css-selector-class-face part-side css) 31 32 (part-side css) 32 33 (face (rainbow-delimiters-depth-1-face) part-side css) 33 38 (part-side css) 38 45 (face web-mode-css-property-name-face part-side css) 45 51 (part-side css) 51 61 (face web-mode-css-priority-face part-side css) 61 67 (part-side css) 67 79 (face web-mode-css-property-name-face part-side css) 79 80 (part-side css) 80 87 (face web-mode-css-color-face part-side css) 87 104 (part-side css) 104 112 (face web-mode-css-property-name-face part-side css) 112 117 (part-side css) 117 127 (face web-mode-css-priority-face part-side css) 127 129 (part-side css) 129 133 (part-side css) 133 150 (face web-mode-css-property-name-face part-side css) 150 156 (part-side css) 156 159 (part-side css) 159 160 (face (rainbow-delimiters-depth-1-face) part-side css rear-nonsticky t)) . 28442) (undo-tree-id235 . -1) (undo-tree-id236 . -160) (undo-tree-id237 . -156) (undo-tree-id238 . -135) (undo-tree-id239 . -99) (undo-tree-id240 . -160) (t 25488 25687 921193 932000)) nil (25488 25822 844720 955000) 0 nil])
([nil nil ((#("
    background-color: red;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 27 (part-side css)) . 28411) (undo-tree-id231 . -1) (undo-tree-id232 . -27) (undo-tree-id233 . -27) (undo-tree-id234 . -27)) nil (25488 25822 844712 673000) 0 nil])
([nil nil ((#(" " 0 1 (face (whitespace-line) tag-type start tag-name "th" tag-attr t block-side t)) . -7431) (undo-tree-id230 . -1) 7432) nil (25488 25822 844706 747000) 0 nil])
([nil nil ((#("tablecolLast: hindex === mheader.length-1" 0 1 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 1 2 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 2 3 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 9 10 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 10 11 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 11 12 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 12 14 (tag-type start tag-name "th" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 15 16 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 16 17 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 17 18 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 18 19 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 19 20 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 20 25 (tag-type start tag-name "th" tag-attr t block-side t) 25 26 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 26 27 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 27 28 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 28 29 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 29 30 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 30 31 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 31 32 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 32 33 (tag-type start tag-name "th" tag-attr t block-side t) 33 34 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 34 35 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 35 36 (face (whitespace-line web-mode-variable-name-face) tag-type start tag-name "th" tag-attr t block-side t) 36 37 (face (whitespace-line web-mode-variable-name-face) tag-type start tag-name "th" tag-attr t block-side t) 37 38 (face (whitespace-line web-mode-variable-name-face) tag-type start tag-name "th" tag-attr t block-side t) 38 39 (face (whitespace-line web-mode-variable-name-face) tag-type start tag-name "th" tag-attr t block-side t) 39 41 (face (whitespace-line) tag-type start tag-name "th" tag-attr t block-side t)) . 7390) (undo-tree-id227 . -41) (undo-tree-id228 . -25) (undo-tree-id229 . -41)) nil (25488 25822 844702 373000) 0 nil])
([nil nil ((#("," 0 1 (tag-type start tag-name "th" tag-attr t block-side t)) . -7388) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#(" " 0 1 (tag-type start tag-name "th" tag-attr t block-side t)) . -7389) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 7390) nil (25488 25822 844697 120000) 0 nil])
([nil nil ((7570 . 7575)) nil (25488 25822 844688 602000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -7574) (undo-tree-id220 . -1) 7575) nil (25488 25822 844686 951000) 0 nil])
([nil nil ((7574 . 7578)) nil (25488 25822 844684 458000) 0 nil])
([nil nil ((7570 . 7571)) nil (25488 25822 844683 436000) 0 nil])
([nil nil ((#(":" 0 1 (font-lock-face web-mode-block-delimiter-face tag-type start tag-name "div" tag-attr t tag-attr-beg 2 block-token delimiter-beg block-side t block-controls 0 block-beg 0)) . -7570) (undo-tree-id219 . -1) 7571) nil (25488 25822 844682 80000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7601 . 7602) (nil tag-attr t 7599 . 7602) (nil tag-name "div" 7599 . 7602) (nil tag-type start 7599 . 7602) (nil font-lock-face web-mode-html-attr-value-face 7599 . 7602) (nil tag-attr t 7598 . 7599) (nil tag-name "div" 7598 . 7599) (nil tag-type start 7598 . 7599) (nil font-lock-face web-mode-html-attr-value-face 7598 . 7599) (nil tag-attr t 7597 . 7598) (nil tag-name "div" 7597 . 7598) (nil tag-type start 7597 . 7598) (nil font-lock-face web-mode-html-attr-value-face 7597 . 7598) (nil tag-attr t 7596 . 7597) (nil tag-name "div" 7596 . 7597) (nil tag-type start 7596 . 7597) (nil font-lock-face web-mode-html-attr-value-face 7596 . 7597) (nil tag-attr t 7595 . 7596) (nil tag-name "div" 7595 . 7596) (nil tag-type start 7595 . 7596) (nil font-lock-face web-mode-html-attr-value-face 7595 . 7596) (nil tag-attr t 7594 . 7595) (nil tag-name "div" 7594 . 7595) (nil tag-type start 7594 . 7595) (nil font-lock-face web-mode-html-attr-value-face 7594 . 7595) (nil tag-attr t 7593 . 7594) (nil tag-name "div" 7593 . 7594) (nil tag-type start 7593 . 7594) (nil font-lock-face web-mode-html-attr-value-face 7593 . 7594) (nil tag-attr t 7592 . 7593) (nil tag-name "div" 7592 . 7593) (nil tag-type start 7592 . 7593) (nil font-lock-face web-mode-html-attr-value-face 7592 . 7593) (nil tag-attr t 7591 . 7592) (nil tag-name "div" 7591 . 7592) (nil tag-type start 7591 . 7592) (nil font-lock-face web-mode-html-attr-value-face 7591 . 7592) (nil tag-attr t 7590 . 7591) (nil tag-name "div" 7590 . 7591) (nil tag-type start 7590 . 7591) (nil font-lock-face web-mode-html-attr-value-face 7590 . 7591) (nil tag-attr t 7589 . 7590) (nil tag-name "div" 7589 . 7590) (nil tag-type start 7589 . 7590) (nil font-lock-face web-mode-html-attr-value-face 7589 . 7590) (nil tag-attr t 7588 . 7589) (nil tag-name "div" 7588 . 7589) (nil tag-type start 7588 . 7589) (nil font-lock-face web-mode-html-attr-value-face 7588 . 7589) (nil tag-attr t 7587 . 7588) (nil tag-name "div" 7587 . 7588) (nil tag-type start 7587 . 7588) (nil font-lock-face web-mode-html-attr-value-face 7587 . 7588) (nil tag-attr t 7586 . 7587) (nil tag-name "div" 7586 . 7587) (nil tag-type start 7586 . 7587) (nil font-lock-face web-mode-html-attr-value-face 7586 . 7587) (nil tag-attr t 7585 . 7586) (nil tag-name "div" 7585 . 7586) (nil tag-type start 7585 . 7586) (nil font-lock-face web-mode-html-attr-value-face 7585 . 7586) (nil tag-attr t 7582 . 7585) (nil tag-name "div" 7582 . 7585) (nil tag-type start 7582 . 7585) (nil font-lock-face web-mode-html-attr-value-face 7582 . 7585) (nil tag-attr t 7581 . 7582) (nil tag-name "div" 7581 . 7582) (nil tag-type start 7581 . 7582) (nil font-lock-face web-mode-html-attr-value-face 7581 . 7582) (nil tag-attr t 7580 . 7581) (nil tag-name "div" 7580 . 7581) (nil tag-type start 7580 . 7581) (nil font-lock-face web-mode-html-attr-value-face 7580 . 7581) (nil tag-attr t 7579 . 7580) (nil tag-name "div" 7579 . 7580) (nil tag-type start 7579 . 7580) (nil font-lock-face web-mode-html-attr-value-face 7579 . 7580) (nil tag-attr t 7578 . 7579) (nil tag-name "div" 7578 . 7579) (nil tag-type start 7578 . 7579) (nil font-lock-face web-mode-html-attr-value-face 7578 . 7579) (nil tag-attr t 7577 . 7578) (nil tag-name "div" 7577 . 7578) (nil tag-type start 7577 . 7578) (nil font-lock-face web-mode-html-attr-value-face 7577 . 7578) (nil tag-attr t 7576 . 7577) (nil tag-name "div" 7576 . 7577) (nil tag-type start 7576 . 7577) (nil font-lock-face web-mode-html-attr-value-face 7576 . 7577) (7576 . 7602)) nil (25488 25822 844674 286000) 0 nil])
([nil nil ((#("<" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7583)) nil (25488 25822 844639 929000) 0 nil])
([nil nil ((7585 . 7587) (7583 . 7586)) nil (25488 25822 844637 746000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "div")) . -7587) (undo-tree-id218 . -1) 7588) nil (25488 25822 844633 607000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . -7584) (undo-tree-id217 . -1) 7585) nil (25488 25822 844629 869000) 0 nil])
([nil nil ((#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7583) (undo-tree-id216 . -1) 7584) nil (25488 25822 844625 743000) 0 nil])
([nil nil ((7583 . 7584)) nil (25488 25822 844620 844000) 0 nil])
([nil nil ((#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7584)) nil (25488 25822 844618 815000) 0 nil])
([nil nil ((#("!" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7583) (undo-tree-id215 . -1) 7584) nil (25488 25822 844616 434000) 0 nil])
([nil nil ((7583 . 7587)) nil (25488 25822 844612 58000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7584) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 7584) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 7584)) nil (25488 25822 844609 954000) 0 nil])
([nil nil ((#("=" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7583) (undo-tree-id214 . -1) 7584) nil (25488 25822 844607 0) 0 nil])
([nil nil ((7583 . 7584)) nil (25488 25822 844602 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8227 . 8228) (nil tag-attr t 8227 . 8228) (nil tag-attr-end 4 8227 . 8228) (nil tag-name "div" 8227 . 8228) (nil tag-type start 8227 . 8228) (nil font-lock-face web-mode-html-attr-value-face 8227 . 8228) (nil rear-nonsticky t 8226 . 8227) (nil tag-attr t 8226 . 8227) (nil tag-name "div" 8226 . 8227) (nil tag-type start 8226 . 8227) (nil font-lock-face web-mode-html-attr-value-face 8226 . 8227) (nil tag-attr t 8225 . 8226) (nil tag-name "div" 8225 . 8226) (nil tag-type start 8225 . 8226) (nil font-lock-face web-mode-html-attr-value-face 8225 . 8226) (nil tag-attr t 8224 . 8225) (nil tag-name "div" 8224 . 8225) (nil tag-type start 8224 . 8225) (nil font-lock-face web-mode-html-attr-value-face 8224 . 8225) (nil tag-attr t 8223 . 8224) (nil tag-name "div" 8223 . 8224) (nil tag-type start 8223 . 8224) (nil font-lock-face web-mode-html-attr-value-face 8223 . 8224) (nil tag-attr t 8211 . 8223) (nil tag-name "div" 8211 . 8223) (nil tag-type start 8211 . 8223) (nil font-lock-face web-mode-html-attr-value-face 8211 . 8223) (nil tag-attr t 8210 . 8211) (nil tag-name "div" 8210 . 8211) (nil tag-type start 8210 . 8211) (nil font-lock-face web-mode-html-attr-value-face 8210 . 8211) (nil tag-attr t 8209 . 8210) (nil tag-name "div" 8209 . 8210) (nil tag-type start 8209 . 8210) (nil font-lock-face web-mode-html-attr-value-face 8209 . 8210) (nil tag-attr t 8208 . 8209) (nil tag-name "div" 8208 . 8209) (nil tag-type start 8208 . 8209) (nil font-lock-face web-mode-html-attr-value-face 8208 . 8209) (nil tag-attr t 8200 . 8208) (nil tag-name "div" 8200 . 8208) (nil tag-type start 8200 . 8208) (nil font-lock-face web-mode-html-attr-value-face 8200 . 8208) (nil tag-attr t 8199 . 8200) (nil tag-name "div" 8199 . 8200) (nil tag-type start 8199 . 8200) (nil font-lock-face web-mode-html-attr-value-face 8199 . 8200) (nil tag-attr t 8198 . 8199) (nil tag-name "div" 8198 . 8199) (nil tag-type start 8198 . 8199) (nil font-lock-face web-mode-html-attr-equal-face 8198 . 8199) (nil tag-attr t 8197 . 8198) (nil tag-name "div" 8197 . 8198) (nil tag-type start 8197 . 8198) (nil font-lock-face web-mode-html-attr-engine-face 8197 . 8198) (nil tag-attr t 8196 . 8197) (nil tag-name "div" 8196 . 8197) (nil tag-type start 8196 . 8197) (nil font-lock-face web-mode-html-attr-engine-face 8196 . 8197) (nil tag-attr t 8195 . 8196) (nil tag-name "div" 8195 . 8196) (nil tag-type start 8195 . 8196) (nil font-lock-face web-mode-html-attr-engine-face 8195 . 8196) (nil tag-attr-beg 2 8194 . 8195) (nil tag-attr t 8194 . 8195) (nil tag-name "div" 8194 . 8195) (nil tag-type start 8194 . 8195) (nil font-lock-face web-mode-html-attr-engine-face 8194 . 8195) (8194 . 8228)) nil (25488 25822 844594 405000) 0 nil])
([nil nil ((8228 . 8229)) nil (25488 25822 844562 294000) 0 nil])
([nil nil ((#("!" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7583) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 7584) nil (25488 25822 844560 454000) 0 nil])
([nil nil ((7585 . 7586) (7583 . 7587)) nil (25488 25822 844553 865000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . 7586) (#("\"" 0 1 (tag-type start tag-name "div")) . 7586)) nil (25488 25822 844551 962000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 7584)) nil (25488 25822 844549 823000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 7587) (undo-tree-id211 . -1) (#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 7587) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("g" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("." 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("h" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7587)) nil (25488 25822 844544 586000) 0 nil])
([nil nil ((7587 . 7589)) nil (25488 25822 844527 931000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "div")) . 7588)) nil (25488 25822 844524 137000) 0 nil])
([nil nil ((7587 . 7588)) nil (25488 25822 844514 287000) 0 nil])
([nil nil ((28422 . 28427) (t 25488 25822 957740 739000)) nil (25488 25873 917914 300000) 0 nil])
([nil nil ((28427 . 28437)) nil (25488 25873 917913 30000) 0 nil])
([nil nil ((28427 . 28443) (#("background" 0 10 (part-side css)) . -28427) (undo-tree-id252 . -10) (undo-tree-id253 . -10) 28437) nil (25488 25873 917911 392000) 0 nil])
([nil nil ((28443 . 28450)) nil (25488 25873 917907 22000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28448) (undo-tree-id250 . -1) (#(";" 0 1 (part-side css)) . -28449) (undo-tree-id251 . -1) 28450) nil (25488 25873 917905 24000) 0 nil])
([nil nil ((28448 . 28450)) nil (25488 25873 917898 849000) 0 nil])
([nil nil ((#(" " 0 1 (part-side css)) . -28449) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 28450) nil (25488 25873 917893 236000) 0 nil])
([nil nil ((#("&& hindex < mheader.length -1" 0 3 (tag-type start tag-name "th" tag-attr t block-side t) 3 4 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 4 5 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 5 6 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 6 7 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 7 8 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 8 9 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 9 12 (tag-type start tag-name "th" tag-attr t block-side t) 12 13 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 13 14 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 14 15 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 15 16 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 16 17 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 17 18 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 18 19 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 19 20 (tag-type start tag-name "th" tag-attr t block-side t) 20 21 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 21 22 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 22 23 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 23 24 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 24 25 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 25 26 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t) 26 29 (tag-type start tag-name "th" tag-attr t block-side t)) . 7359) (undo-tree-id259 . -29) (undo-tree-id260 . -29) (undo-tree-id261 . -29) (undo-tree-id262 . -29) (undo-tree-id263 . -29) (t 25488 25874 41962 486000)) nil (25488 25889 169783 349000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "th" tag-attr t block-side t)) . -7358) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 7359) nil (25488 25889 169757 668000) 0 nil])
([nil nil ((#("
    background-color: red;" 0 1 (part-side css) 1 5 (part-side css) 5 22 (face web-mode-css-property-name-face part-side css) 22 27 (part-side css)) . 28392) (undo-tree-id264 . -1) (undo-tree-id265 . -27) (undo-tree-id266 . -27) (undo-tree-id267 . -27) (undo-tree-id268 . -27) (t 25488 25889 282030 26000)) nil (25488 25895 399038 667000) 0 nil])
([nil nil ((#("v-if=\"hindex === 0\"" 0 1 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t tag-attr-beg 2) 1 2 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t) 2 3 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t) 3 4 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t) 4 5 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 5 6 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 6 14 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 14 15 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 15 16 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 16 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 18 19 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 7540) (undo-tree-id278 . -19) (undo-tree-id279 . -6) (undo-tree-id280 . -17) (undo-tree-id281 . -19) (t 25488 25895 510057 802000)) nil (25488 25967 260681 894000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -7539) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 7540) nil (25488 25967 260668 766000) 0 nil])
([nil nil ((8252 . 8257) (8124 . 8262) (#("<div v-if=\"hindex != mheader.length -1\" style=\"cursor: col-resize; width: 10px; height: inherit;\">
                        </div>" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t tag-attr-beg 2) 6 9 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 10 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t rear-nonsticky t) 39 40 (tag-type start tag-name "div") 40 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 41 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 46 55 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 55 56 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 56 65 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 65 66 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 66 67 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 67 68 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 68 72 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 72 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 73 76 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 76 77 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 77 78 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 78 79 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 79 80 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 80 81 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 81 86 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 86 87 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 87 88 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 88 89 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 89 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 123 124 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 124 125 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 125 128 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 8124) (undo-tree-id286 . -99) (undo-tree-id287 . -129) (undo-tree-id288 . -5) (undo-tree-id289 . -129) (t 25488 25967 370385 186000)) nil (25488 26067 390863 793000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7574 . 7575) (nil tag-attr t 7574 . 7575) (nil tag-attr-end 4 7574 . 7575) (nil tag-name "div" 7574 . 7575) (nil tag-type start 7574 . 7575) (nil font-lock-face web-mode-html-attr-value-face 7574 . 7575) (nil tag-attr t 7546 . 7574) (nil tag-name "div" 7546 . 7574) (nil tag-type start 7546 . 7574) (nil font-lock-face web-mode-html-attr-value-face 7546 . 7574) (nil tag-attr t 7545 . 7546) (nil tag-name "div" 7545 . 7546) (nil tag-type start 7545 . 7546) (nil font-lock-face web-mode-html-attr-equal-face 7545 . 7546) (nil tag-attr t 7542 . 7545) (nil tag-name "div" 7542 . 7545) (nil tag-type start 7542 . 7545) (nil font-lock-face web-mode-html-attr-engine-face 7542 . 7545) (nil tag-attr-beg 2 7541 . 7542) (nil tag-attr t 7541 . 7542) (nil tag-name "div" 7541 . 7542) (nil tag-type start 7541 . 7542) (nil font-lock-face web-mode-html-attr-engine-face 7541 . 7542) (nil tag-name "div" 7540 . 7541) (nil tag-type start 7540 . 7541) (7540 . 7575)) nil (25488 26067 390855 759000) 0 nil])
([nil nil ((7575 . 7576)) nil (25488 26067 390848 286000) 0 nil])
([nil nil ((#(" mheader.length -1" 0 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 7556) (undo-tree-id283 . -18) (undo-tree-id284 . -18) (undo-tree-id285 . -18)) nil (25488 26067 390846 334000) 0 nil])
([nil nil ((7556 . 7558)) nil (25488 26067 390839 963000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "div")) . -7540) (undo-tree-id282 . -1) 7541) nil (25488 26173 284814 899000) 0 nil])
([nil nil ((7615 . 7635) (t 25488 26174 83386 149000)) nil (25488 26219 359764 235000) 0 nil] [nil nil (("     " . -8266) (8143 . 8278) (#("<!-- <div v-if=\"hindex != mheader.length -1\" style=\"cursor: col-resize; width: 10px; height: inherit;\">
                             </div> -->
" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 142 (font-lock-face web-mode-comment-face tag-type comment) 142 143 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 8143) (undo-tree-id290 . -104) (undo-tree-id291 . -143) (undo-tree-id292 . -44) (undo-tree-id293 . -143) (t 25488 26067 502860 273000)) ((8143 . 8287) (#("<div v-if=\"hindex != mheader.length -1\" style=\"cursor: col-resize; width: 10px; height: inherit;\">
                             </div>
" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "div") 1 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "div") 4 5 (tag-type start tag-name "div") 5 6 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t tag-attr-beg 2) 6 9 (font-lock-face web-mode-html-attr-engine-face tag-type start tag-name "div" tag-attr t) 9 10 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 10 38 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 38 39 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t) 39 40 (tag-type start tag-name "div") 40 41 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t tag-attr-beg 0) 41 45 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "div" tag-attr t) 45 46 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "div" tag-attr t) 46 96 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 96 97 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t) 97 98 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div") 128 129 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "div") 129 130 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "div") 130 133 (font-lock-face web-mode-html-tag-face tag-type end tag-name "div") 133 134 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "div")) . 8143) (undo-tree-id295 . -99) (8266 . 8271) (t 25488 26132 687179 673000)) (25488 26132 568259 205000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7634) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 7635) nil (25488 26219 359758 198000) 0 nil])
nil
([nil nil ((#("1" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -7630) (undo-tree-id314 . -1) 7631 (t 25488 26219 471444 666000)) nil (25488 26236 25923 43000) 0 nil])
([nil nil ((7630 . 7631)) nil (25488 26236 25906 526000) 0 nil])
([nil nil (("     " . -8285) (8162 . 8297) (#("<!-- <div v-if=\"hindex != mheader.length -1\" style=\"cursor: col-resize; width: 10px; height: inherit;\">
                             </div> -->
" 0 1 (font-lock-face web-mode-comment-face tag-beg 0 tag-type comment) 1 142 (font-lock-face web-mode-comment-face tag-type comment) 142 143 (font-lock-face web-mode-comment-face tag-end t tag-type comment)) . 8162) (undo-tree-id321 . -104) (undo-tree-id322 . -143) (undo-tree-id323 . -44) (undo-tree-id324 . -143) (undo-tree-id325 . -143) (t 25488 26236 147157 482000)) nil (25488 26348 202020 451000) 0 nil])
([nil nil ((#("!" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8180) (undo-tree-id320 . -1) 8181) nil (25488 26348 202013 44000) 0 nil])
([nil nil ((8180 . 8184)) nil (25488 26348 202010 453000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "div")) . 8182)) nil (25488 26348 202009 229000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . -8181) (undo-tree-id319 . -1) 8182) nil (25488 26348 202007 893000) 0 nil])
([nil nil ((8181 . 8184)) nil (25488 26348 202005 103000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "div")) . 8183)) nil (25488 26348 202004 83000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . 8182) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 4 tag-attr t)) . 8182)) nil (25488 26348 202002 438000) 0 nil])
([nil nil ((8259 . 8260)) nil (25488 26348 202001 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8277 . 8278) (nil tag-attr t 8260 . 8278) (nil tag-name "div" 8260 . 8278) (nil tag-type start 8260 . 8278) (nil font-lock-face web-mode-html-attr-value-face 8260 . 8278) (8260 . 8278)) nil (25488 26348 201999 588000) 0 nil])
([nil nil ((#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8267) (undo-tree-id315 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8268) (undo-tree-id316 . -1) (#("f" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8269) (undo-tree-id317 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8270) (undo-tree-id318 . -1) 8271) nil (25488 26348 201995 404000) 0 nil])
([nil nil ((8267 . 8272)) nil (25488 26348 201974 345000) 0 nil])
([nil nil ((#("argin-right: -5px;" 0 17 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t) 17 18 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t rear-nonsticky t)) . 8261) (undo-tree-id403 . -18) (undo-tree-id404 . -11) (undo-tree-id405 . -18) (undo-tree-id406 . -18) (t 25488 26348 325492 161000)) nil (25488 26403 777835 10000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8259) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("m" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -8260) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) 8261) nil (25488 26403 777821 133000) 0 nil])
([nil nil ((#(" {{hindex}}" 1 2 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t block-controls 0 block-beg 0) 2 3 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-beg block-side t) 3 4 (face web-mode-variable-name-face block-side t) 4 5 (face web-mode-variable-name-face block-side t) 5 6 (face web-mode-variable-name-face block-side t) 6 7 (face web-mode-variable-name-face block-side t) 7 8 (face web-mode-variable-name-face block-side t) 8 9 (face web-mode-variable-name-face block-side t) 9 10 (face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-side t) 10 11 (face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) font-lock-face web-mode-block-delimiter-face block-token delimiter-end block-end t block-side t)) . 8095) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (t 25488 26403 896819 771000)) nil (25488 26481 388254 690000) 0 nil])
([nil nil ((7428 . 7429) (t 25488 26481 504024 793000)) nil (25488 33823 308581 253000) 0 nil])
([nil nil ((#("h" 0 1 (face web-mode-variable-name-face tag-type start tag-name "th" tag-attr t block-side t)) . -7428) (undo-tree-id412 . -1) 7429) nil (25488 33823 308579 748000) 0 nil])
([nil nil ((7428 . 7437)) nil (25488 33823 308577 501000) 0 nil])
([nil nil ((#(" " 0 1 (tag-type start tag-name "th" tag-attr t block-side t)) . -7436) (undo-tree-id411 . -1) 7437) nil (25488 33823 308576 323000) 0 nil])
([nil nil ((22081 . 22090)) nil (25488 33823 308573 727000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -22089) (undo-tree-id410 . -1) 22090) nil (25488 33823 308572 492000) 0 nil])
([nil nil ((#("h" 0 1 (part-side javascript)) . -22083) (undo-tree-id409 . -1) 22084) nil (25488 33823 308568 642000) 0 nil])
([nil nil ((22104 . 22110)) nil (25488 33823 308557 36000) 0 nil])
([nil nil ((22110 . 22118)) nil (25488 33823 308550 288000) 0 nil])
([nil nil ((14274 . 14275) (t 25488 33823 429764 557000)) nil (25596 38065 821625 419000) 0 nil])
([nil nil ((14275 . 14282)) nil (25596 38065 821624 174000) 0 nil])
([nil nil ((14282 . 14291)) nil (25596 38065 821623 216000) 0 nil])
([nil nil ((14282 . 14299) (#("check_agg" 0 9 (part-side javascript)) . -14282) (undo-tree-id10 . -9) (undo-tree-id11 . -9) 14291) nil (25596 38065 821621 990000) 0 nil])
([nil nil ((14299 . 14306)) nil (25596 38065 821618 536000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14305) (undo-tree-id9 . -1) 14306) nil (25596 38065 821617 408000) 0 nil])
([nil nil ((14305 . 14307)) nil (25596 38065 821615 382000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -14305) (undo-tree-id7 . -1) (#(" " 0 1 (part-side javascript)) . -14306) (undo-tree-id8 . -1) 14307) nil (25596 38065 821613 977000) 0 nil])
([nil nil ((14305 . 14307)) nil (25596 38065 821610 30000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -14306) (undo-tree-id6 . -1) 14307) nil (25596 38065 821608 872000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -14305) (undo-tree-id5 . -1) 14306) nil (25596 38065 821606 409000) 0 nil])
([nil nil ((2954 . 2971)) nil (25596 38065 821604 151000) 0 nil])
([nil nil ((2971 . 2983)) nil (25596 38065 821603 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2999 . 3000) (nil block-side t 2983 . 3000) (nil tag-attr t 2983 . 3000) (nil tag-name "v-btn" 2983 . 3000) (nil tag-type start 2983 . 3000) (nil block-side t 2982 . 2983) (nil tag-attr t 2982 . 2983) (nil tag-name "v-btn" 2982 . 2983) (nil tag-type start 2982 . 2983) (2982 . 3000)) nil (25596 38065 821601 880000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -2982) (undo-tree-id4 . -1) 2983) nil (25596 38065 821598 548000) 0 nil])
([nil nil ((3955 . 3972)) nil (25596 38065 821596 149000) 0 nil])
([nil nil ((3972 . 3980)) nil (25596 38065 821594 940000) 0 nil])
([nil nil ((#("v" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -3977) (undo-tree-id1 . -1) (#("b" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -3978) (undo-tree-id2 . -1) (#("l" 0 1 (tag-attr t tag-attr-end 0 tag-name "v-btn" tag-type start font-lock-face web-mode-html-attr-engine-face)) . -3979) (undo-tree-id3 . -1) 3980) nil (25596 38065 821592 558000) 0 nil])
([nil nil ((3977 . 3984)) nil (25596 38065 821586 49000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4000 . 4001) (nil block-side t 3984 . 4001) (nil tag-attr t 3984 . 4001) (nil tag-name "v-btn" 3984 . 4001) (nil tag-type start 3984 . 4001) (nil block-side t 3983 . 3984) (nil tag-attr t 3983 . 3984) (nil tag-name "v-btn" 3983 . 3984) (nil tag-type start 3983 . 3984) (3983 . 4001)) nil (25596 38065 821583 992000) 0 nil])
([nil nil ((#(" " 0 1 (block-side t tag-attr t tag-name "v-btn" tag-type start)) . -3983) (undo-tree-id0 . -1) 3984) nil (25596 38065 821576 100000) 0 nil])
([nil nil ((#("bool" 0 4 (part-side javascript)) . 14393) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (t 25596 38065 873907 554000)) nil (25596 38104 566220 779000) 0 nil])
([nil current ((nil rear-nonsticky nil 14399 . 14400) (nil part-side javascript 14393 . 14400) (14393 . 14400)) nil (25596 38104 566202 848000) 0 nil])
nil
