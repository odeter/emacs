(undo-tree-save-format-version . 1)
"b82b0d8ac2d6e18c5e17f31c6568e511b3bd47d1"
[nil nil nil nil (25669 46494 742535 38000) 0 nil]
([nil nil ((627 . 628) (t 25653 34988 906165 652000)) nil (25669 46494 742533 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 676 . 677) (nil rear-nonsticky t 676 . 677) (nil block-side t 676 . 677) (nil block-end t 676 . 677) (nil block-token delimiter-end 676 . 677) (nil font-lock-face web-mode-block-delimiter-face 676 . 677) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 676 . 677) (nil block-side t 675 . 676) (nil block-token delimiter-end 675 . 676) (nil font-lock-face web-mode-block-delimiter-face 675 . 676) (nil block-side t 674 . 675) (nil block-side t 662 . 674) (nil face web-mode-variable-name-face 662 . 674) (nil block-side t 661 . 662) (nil block-side t 654 . 661) (nil face web-mode-variable-name-face 654 . 661) (nil block-side t 653 . 654) (nil block-side t 639 . 653) (nil face web-mode-variable-name-face 639 . 653) (nil block-side t 638 . 639) (nil block-side t 631 . 638) (nil face web-mode-block-control-face 631 . 638) (nil block-side t 630 . 631) (nil block-side t 629 . 630) (nil block-token delimiter-beg 629 . 630) (nil font-lock-face web-mode-block-delimiter-face 629 . 630) (nil block-beg 0 628 . 629) (nil block-controls 0 628 . 629) (nil block-side t 628 . 629) (nil block-token delimiter-beg 628 . 629) (nil font-lock-face web-mode-block-delimiter-face 628 . 629) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 628 . 629) (628 . 677)) nil (25669 46494 742530 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 635 . 636) (nil font-lock-face (web-mode-html-entity-face) 628 . 636) (628 . 636)) nil (25669 46494 742521 970000) 0 nil])
([nil nil ((636 . 637)) nil (25669 46494 742519 223000) 0 nil])
([nil nil ((#("o" 0 1 (block-side t face web-mode-variable-name-face)) . -672) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("s" 0 1 (block-side t face web-mode-variable-name-face)) . -673) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -674) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 675) nil (25669 46494 742513 364000) 0 nil])
([nil nil ((672 . 675)) nil (25669 46494 742478 506000) 0 nil])
([nil nil ((700 . 707) (t 25669 46494 743885 666000)) nil (25669 47737 273395 910000) 0 nil])
([nil nil ((nil rear-nonsticky nil 792 . 793) (nil tag-name "li" 792 . 793) (nil tag-type end 792 . 793) (nil tag-end t 792 . 793) (nil font-lock-face web-mode-html-tag-bracket-face 792 . 793) (nil tag-name "li" 790 . 792) (nil tag-type end 790 . 792) (nil font-lock-face web-mode-html-tag-face 790 . 792) (nil tag-name "li" 789 . 790) (nil tag-type end 789 . 790) (nil font-lock-face web-mode-html-tag-bracket-face 789 . 790) (nil tag-name "li" 788 . 789) (nil tag-type end 788 . 789) (nil tag-beg 20 788 . 789) (nil font-lock-face web-mode-html-tag-bracket-face 788 . 789) (nil rear-nonsticky t 787 . 788) (nil block-side t 787 . 788) (nil block-end t 787 . 788) (nil block-token delimiter-end 787 . 788) (nil font-lock-face web-mode-block-delimiter-face 787 . 788) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 787 . 788) (nil block-side t 786 . 787) (nil block-token delimiter-end 786 . 787) (nil font-lock-face web-mode-block-delimiter-face 786 . 787) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 786 . 787) (nil block-side t 785 . 786) (nil rear-nonsticky t 784 . 785) (nil block-side t 784 . 785) (nil block-token string 784 . 785) (nil font-lock-face web-mode-block-string-face 784 . 785) (nil block-side t 781 . 784) (nil block-token string 781 . 784) (nil font-lock-face web-mode-block-string-face 781 . 784) (nil block-side t 779 . 781) (nil block-side t 775 . 779) (nil face web-mode-filter-face 775 . 779) (nil block-side t 772 . 775) (nil block-side t 768 . 772) (nil face web-mode-variable-name-face 768 . 772) (nil block-side t 767 . 768) (nil block-side t 763 . 767) (nil face web-mode-variable-name-face 763 . 767) (nil block-side t 762 . 763) (nil block-side t 761 . 762) (nil block-token delimiter-beg 761 . 762) (nil font-lock-face web-mode-block-delimiter-face 761 . 762) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 761 . 762) (nil block-beg 0 760 . 761) (nil block-controls 0 760 . 761) (nil block-side t 760 . 761) (nil block-token delimiter-beg 760 . 761) (nil font-lock-face web-mode-block-delimiter-face 760 . 761) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 760 . 761) (nil tag-name "i" 759 . 760) (nil tag-type end 759 . 760) (nil tag-end t 759 . 760) (nil font-lock-face web-mode-html-tag-bracket-face 759 . 760) (nil tag-name "i" 758 . 759) (nil tag-type end 758 . 759) (nil font-lock-face web-mode-html-tag-face 758 . 759) (nil tag-name "i" 757 . 758) (nil tag-type end 757 . 758) (nil font-lock-face web-mode-html-tag-bracket-face 757 . 758) (nil tag-name "i" 756 . 757) (nil tag-type end 756 . 757) (nil tag-beg 20 756 . 757) (nil font-lock-face web-mode-html-tag-bracket-face 756 . 757) (nil tag-name "i" 755 . 756) (nil tag-type start 755 . 756) (nil tag-end t 755 . 756) (nil font-lock-face web-mode-html-tag-bracket-face 755 . 756) (nil tag-attr t 754 . 755) (nil tag-attr-end 5 754 . 755) (nil tag-name "i" 754 . 755) (nil tag-type start 754 . 755) (nil font-lock-face web-mode-html-attr-value-face 754 . 755) (nil tag-attr t 738 . 754) (nil tag-name "i" 738 . 754) (nil tag-type start 738 . 754) (nil font-lock-face web-mode-html-attr-value-face 738 . 754) (nil tag-attr t 737 . 738) (nil tag-name "i" 737 . 738) (nil tag-type start 737 . 738) (nil font-lock-face web-mode-html-attr-equal-face 737 . 738) (nil tag-attr t 733 . 737) (nil tag-name "i" 733 . 737) (nil tag-type start 733 . 737) (nil font-lock-face web-mode-html-attr-name-face 733 . 737) (nil tag-attr-beg 0 732 . 733) (nil tag-attr t 732 . 733) (nil tag-name "i" 732 . 733) (nil tag-type start 732 . 733) (nil font-lock-face web-mode-html-attr-name-face 732 . 733) (nil tag-name "i" 731 . 732) (nil tag-type start 731 . 732) (nil tag-name "i" 730 . 731) (nil tag-type start 730 . 731) (nil font-lock-face web-mode-html-tag-face 730 . 731) (nil tag-name "i" 729 . 730) (nil tag-type start 729 . 730) (nil tag-beg 17 729 . 730) (nil font-lock-face web-mode-html-tag-bracket-face 729 . 730) (nil tag-name "li" 728 . 729) (nil tag-type start 728 . 729) (nil tag-end t 728 . 729) (nil font-lock-face web-mode-html-tag-bracket-face 728 . 729) (nil tag-attr t 727 . 728) (nil tag-attr-end 5 727 . 728) (nil tag-name "li" 727 . 728) (nil tag-type start 727 . 728) (nil font-lock-face web-mode-html-attr-value-face 727 . 728) (nil tag-attr t 717 . 727) (nil tag-name "li" 717 . 727) (nil tag-type start 717 . 727) (nil font-lock-face web-mode-html-attr-value-face 717 . 727) (nil tag-attr t 716 . 717) (nil tag-name "li" 716 . 717) (nil tag-type start 716 . 717) (nil font-lock-face web-mode-html-attr-equal-face 716 . 717) (nil tag-attr t 712 . 716) (nil tag-name "li" 712 . 716) (nil tag-type start 712 . 716) (nil font-lock-face web-mode-html-attr-name-face 712 . 716) (nil tag-attr-beg 0 711 . 712) (nil tag-attr t 711 . 712) (nil tag-name "li" 711 . 712) (nil tag-type start 711 . 712) (nil font-lock-face web-mode-html-attr-name-face 711 . 712) (nil tag-name "li" 710 . 711) (nil tag-type start 710 . 711) (nil tag-name "li" 708 . 710) (nil tag-type start 708 . 710) (nil font-lock-face web-mode-html-tag-face 708 . 710) (nil tag-name "li" 707 . 708) (nil tag-type start 707 . 708) (nil tag-beg 17 707 . 708) (nil font-lock-face web-mode-html-tag-bracket-face 707 . 708) (707 . 793)) nil (25669 47737 273387 999000) 0 nil])
([nil nil ((#("<li class=\"tag__item\">" 0 1 (tag-name "li" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 1 3 (tag-name "li" tag-type start font-lock-face web-mode-html-tag-face) 3 4 (tag-name "li" tag-type start) 4 5 (tag-attr-beg 0 tag-attr t tag-name "li" tag-type start font-lock-face web-mode-html-attr-name-face) 5 9 (tag-attr t tag-name "li" tag-type start font-lock-face web-mode-html-attr-name-face) 9 10 (tag-attr t tag-name "li" tag-type start font-lock-face web-mode-html-attr-equal-face) 10 20 (tag-attr t tag-name "li" tag-type start font-lock-face web-mode-html-attr-value-face) 20 21 (tag-attr t tag-attr-end 5 tag-name "li" tag-type start font-lock-face web-mode-html-attr-value-face) 21 22 (tag-name "li" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 707) (undo-tree-id31 . -22) (undo-tree-id32 . -22) (undo-tree-id33 . -22)) nil (25669 47737 273358 695000) 0 nil])
([nil nil ((#("</li>" 0 1 (tag-name "li" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "li" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 4 (tag-name "li" tag-type end font-lock-face web-mode-html-tag-face) 4 5 (rear-nonsticky t tag-name "li" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 766) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5)) nil (25669 47737 273354 200000) 0 nil])
([nil nil ((700 . 707)) nil (25669 47737 273350 437000) 0 nil])
([nil nil ((707 . 720)) nil (25669 47737 273349 173000) 0 nil])
([nil nil ((714 . 722) (715 . 721) (#("        " 0 8 (face whitespace-trailing)) . 714) (714 . 722) (714 . 715) ("      " . 714) (713 . 720)) nil (25669 47737 273347 718000) 0 nil])
([nil nil ((#("      <i class=\"fas fa-tag mr-2\"></i>{{ post.tags | join: \", \" }}
" 6 7 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "i" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 10 14 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 15 31 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 36 37 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 37 38 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 39 40 (block-side t) 40 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t) 45 49 (block-side t face web-mode-variable-name-face) 49 52 (block-side t) 52 56 (block-side t face web-mode-filter-face) 56 58 (block-side t) 58 62 (block-side t block-token string font-lock-face web-mode-block-string-face) 62 63 (block-side t) 63 64 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 64 65 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 803) (undo-tree-id21 . -65) (undo-tree-id22 . -8) (undo-tree-id23 . -66) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -65) (undo-tree-id27 . -6) (789 . 803) (#("      </span>
" 6 7 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 12 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 12 13 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 723) (737 . 803) 745) nil (25669 47737 273344 824000) 0 nil])
([nil nil ((#("      <i class=\"fas fa-tag mr-2\"></i>{{ post.tags | join: \", \" }}
" 6 7 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 8 9 (tag-name "i" tag-type start) 9 10 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 10 14 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 14 15 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 15 31 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 36 37 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 37 38 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 39 40 (block-side t) 40 44 (block-side t face web-mode-variable-name-face) 44 45 (block-side t) 45 49 (block-side t face web-mode-variable-name-face) 49 52 (block-side t) 52 56 (block-side t face web-mode-filter-face) 56 58 (block-side t) 58 62 (block-side t block-token string font-lock-face web-mode-block-string-face) 62 63 (block-side t) 63 64 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 64 65 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 789) (undo-tree-id19 . -8) (undo-tree-id20 . -66) (780 . 789) (#("        
" 0 8 (face whitespace-trailing)) . 714) (723 . 789) 731) nil (25669 47737 273335 328000) 0 nil])
([nil nil ((714 . 722) ("      " . 714) 722) nil (25669 47737 273331 115000) 0 nil])
([nil nil (("
" . 790) (undo-tree-id17 . -1) (undo-tree-id18 . 1)) nil (25669 47737 273328 788000) 0 nil])
([nil nil (("        " . -788) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) 790) nil (25669 47737 273321 303000) 0 nil])
([nil nil ((#("o" 0 1 (block-side t face web-mode-variable-name-face)) . -757) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("s" 0 1 (block-side t face web-mode-variable-name-face)) . -758) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("t" 0 1 (block-side t face web-mode-variable-name-face)) . -759) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 760 (t 25669 47737 279320 803000)) nil (25669 47755 322072 664000) 0 nil])
([nil nil ((757 . 760)) nil (25669 47755 321973 639000) 0 nil])
([nil nil ((700 . 707)) nil (25669 47755 321972 456000) 0 nil])
([nil nil ((707 . 710)) nil (25669 47755 321970 792000) 0 nil])
([nil nil ((710 . 711) (710 . 711)) nil (25669 47755 321964 37000) 0 nil])
([nil nil ((#("        <i class=\"fas fa-tag mr-2\"></i>{{ page.tags | join: \", \" }}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 33 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 36 37 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 38 39 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 39 40 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 41 42 (block-side t) 42 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t) 47 51 (block-side t face web-mode-variable-name-face) 51 54 (block-side t) 54 58 (block-side t face web-mode-filter-face) 58 60 (block-side t) 60 64 (block-side t block-token string font-lock-face web-mode-block-string-face) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 794) (undo-tree-id82 . -12) (undo-tree-id83 . -68) (781 . 794) (#("      <span>
" 6 7 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 7 11 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 11 12 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 713) (726 . 794) 738 (t 25669 47755 327375 37000)) nil (25669 47774 681282 372000) 0 nil])
([nil nil ((#("        <i class=\"fas fa-tag mr-2\"></i>{{ page.tags | join: \", \" }}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 33 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 36 37 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 38 39 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 39 40 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 41 42 (block-side t) 42 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t) 47 51 (block-side t face web-mode-variable-name-face) 51 54 (block-side t) 54 58 (block-side t face web-mode-filter-face) 58 60 (block-side t) 60 64 (block-side t block-token string font-lock-face web-mode-block-string-face) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 781) (undo-tree-id79 . -12) (undo-tree-id80 . -68) (769 . 781) (#("      <hr/>
" 6 7 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 7 9 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 9 10 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 701) (undo-tree-id81 . -9) (713 . 781) 725) nil (25669 47774 681277 840000) 0 nil])
([nil nil ((#("        <i class=\"fas fa-tag mr-2\"></i>{{ page.tags | join: \", \" }}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 33 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 34 35 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 36 37 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 38 39 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 39 40 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 41 42 (block-side t) 42 46 (block-side t face web-mode-variable-name-face) 46 47 (block-side t) 47 51 (block-side t face web-mode-variable-name-face) 51 54 (block-side t) 54 58 (block-side t face web-mode-filter-face) 58 60 (block-side t) 60 64 (block-side t block-token string font-lock-face web-mode-block-string-face) 64 65 (block-side t) 65 66 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 66 67 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 769) (undo-tree-id74 . -12) (undo-tree-id75 . -68) (755 . 769) (#("      </span>
" 6 7 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 7 8 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 8 12 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 12 13 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 687) (undo-tree-id76 . -13) (undo-tree-id77 . -13) (undo-tree-id78 . -13) (701 . 769) 713) nil (25669 47774 681270 839000) 0 nil])
([nil nil ((686 . 695)) nil (25669 47774 681264 55000) 0 nil])
([nil nil ((698 . 699) (695 . 699)) nil (25669 47774 681262 958000) 0 nil])
([nil nil ((#("      <hr/>
      <span>
      </span>" 6 7 (tag-name "hr" tag-type void tag-beg 24 font-lock-face web-mode-html-tag-bracket-face) 7 9 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-face) 9 10 (tag-name "hr" tag-type void font-lock-face web-mode-html-tag-bracket-face) 10 11 (tag-name "hr" tag-type void tag-end t font-lock-face web-mode-html-tag-bracket-face) 18 19 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 19 23 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 23 24 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 33 37 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 37 38 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 783) (undo-tree-id69 . -38) (undo-tree-id70 . -12) (undo-tree-id71 . -38) (undo-tree-id72 . -24) (undo-tree-id73 . -38)) nil (25669 47774 681260 387000) 0 nil])
([nil nil (("
" . -782) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 783) nil (25669 47774 681249 44000) 0 nil])
([nil nil ((700 . 709) (t 25669 47774 683430 538000)) nil (25669 47829 292846 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 741 . 742) (nil tag-name "i" 741 . 742) (nil tag-type end 741 . 742) (nil tag-end t 741 . 742) (nil font-lock-face web-mode-html-tag-bracket-face 741 . 742) (nil tag-name "i" 740 . 741) (nil tag-type end 740 . 741) (nil font-lock-face web-mode-html-tag-face 740 . 741) (nil tag-name "i" 739 . 740) (nil tag-type end 739 . 740) (nil font-lock-face web-mode-html-tag-bracket-face 739 . 740) (nil tag-name "i" 738 . 739) (nil tag-type end 738 . 739) (nil tag-beg 20 738 . 739) (nil font-lock-face web-mode-html-tag-bracket-face 738 . 739) (nil tag-name "i" 737 . 738) (nil tag-type start 737 . 738) (nil tag-end t 737 . 738) (nil font-lock-face web-mode-html-tag-bracket-face 737 . 738) (nil tag-attr t 736 . 737) (nil tag-attr-end 5 736 . 737) (nil tag-name "i" 736 . 737) (nil tag-type start 736 . 737) (nil font-lock-face web-mode-html-attr-value-face 736 . 737) (nil tag-attr t 718 . 736) (nil tag-name "i" 718 . 736) (nil tag-type start 718 . 736) (nil font-lock-face web-mode-html-attr-value-face 718 . 736) (nil tag-attr t 717 . 718) (nil tag-name "i" 717 . 718) (nil tag-type start 717 . 718) (nil font-lock-face web-mode-html-attr-equal-face 717 . 718) (nil tag-attr t 713 . 717) (nil tag-name "i" 713 . 717) (nil tag-type start 713 . 717) (nil font-lock-face web-mode-html-attr-name-face 713 . 717) (nil tag-attr-beg 0 712 . 713) (nil tag-attr t 712 . 713) (nil tag-name "i" 712 . 713) (nil tag-type start 712 . 713) (nil font-lock-face web-mode-html-attr-name-face 712 . 713) (nil tag-name "i" 711 . 712) (nil tag-type start 711 . 712) (nil tag-name "i" 710 . 711) (nil tag-type start 710 . 711) (nil font-lock-face web-mode-html-tag-face 710 . 711) (nil tag-name "i" 709 . 710) (nil tag-type start 709 . 710) (nil tag-beg 17 709 . 710) (nil font-lock-face web-mode-html-tag-bracket-face 709 . 710) (709 . 742)) nil (25669 47829 292843 75000) 0 nil])
([nil nil ((742 . 743)) nil (25669 47829 292831 968000) 0 nil])
([nil nil ((nil rear-nonsticky nil 791 . 792) (nil rear-nonsticky t 791 . 792) (nil block-side t 791 . 792) (nil block-end t 791 . 792) (nil block-token delimiter-end 791 . 792) (nil font-lock-face web-mode-block-delimiter-face 791 . 792) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 791 . 792) (nil block-side t 790 . 791) (nil block-token delimiter-end 790 . 791) (nil font-lock-face web-mode-block-delimiter-face 790 . 791) (nil block-side t 789 . 790) (nil block-side t 777 . 789) (nil face web-mode-variable-name-face 777 . 789) (nil block-side t 776 . 777) (nil block-side t 769 . 776) (nil face web-mode-variable-name-face 769 . 776) (nil block-side t 768 . 769) (nil block-side t 754 . 768) (nil face web-mode-variable-name-face 754 . 768) (nil block-side t 753 . 754) (nil block-side t 746 . 753) (nil face web-mode-block-control-face 746 . 753) (nil block-side t 745 . 746) (nil block-side t 744 . 745) (nil block-token delimiter-beg 744 . 745) (nil font-lock-face web-mode-block-delimiter-face 744 . 745) (nil block-beg 0 743 . 744) (nil block-controls 0 743 . 744) (nil block-side t 743 . 744) (nil block-token delimiter-beg 743 . 744) (nil font-lock-face web-mode-block-delimiter-face 743 . 744) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 743 . 744) (743 . 792)) nil (25669 47829 292829 200000) 0 nil])
([nil nil ((#("&middot; {% include read_time.html content=page.content %}" 0 7 (font-lock-face (web-mode-html-entity-face)) 7 8 (rear-nonsticky t font-lock-face (web-mode-html-entity-face)) 9 10 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 10 11 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 11 12 (block-side t) 12 19 (block-side t face web-mode-block-control-face) 19 20 (block-side t) 20 34 (block-side t face web-mode-variable-name-face) 34 35 (block-side t) 35 42 (block-side t face web-mode-variable-name-face) 42 43 (block-side t) 43 55 (block-side t face web-mode-variable-name-face) 55 56 (block-side t) 56 57 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 57 58 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 628) (undo-tree-id147 . -58) (undo-tree-id148 . -58) (undo-tree-id149 . -44) (undo-tree-id150 . -47) (undo-tree-id151 . -58) (undo-tree-id152 . -58) (undo-tree-id153 . -5) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -58) (undo-tree-id164 . -58)) nil (25669 47829 292819 931000) 0 nil])
([nil nil ((" " . -627) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 628) nil (25669 47829 292793 285000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -672) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("m" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -673) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("r" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -674) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("-" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -675) (undo-tree-id171 . -1) (#("2" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -676) (undo-tree-id172 . -1) 677 (t 25669 47829 299573 149000)) nil (25669 47846 334708 24000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 757) (#("-" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 757) (#("r" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 757) (#("m" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 757) (#(" " 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . 757)) nil (25669 47866 900011 238000) 0 nil])
([nil nil ((650 . 663)) nil (25669 47894 817151 148000) 0 nil] [nil nil ((#("</i>" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (rear-nonsticky t tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 674) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (t 25669 47846 339613 656000)) ((674 . 678)) (25669 47866 543591 305000) 0 nil])
([nil nil ((657 . 667) (658 . 666) (#("          " 0 10 (face whitespace-trailing)) . 657) (657 . 667) (657 . 658) ("        " . 657) (656 . 665)) nil (25669 47894 817149 284000) 0 nil])
([nil nil ((724 . 725)) ((" " . 724) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1)) (25669 47866 178751 801000) 0 nil])
([nil nil ((#("        </span><i class=\"fas fa-clock\"></i> {% include read_time.html content=page.content %}
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 15 16 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 16 17 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 17 18 (tag-name "i" tag-type start) 18 19 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 19 23 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 23 24 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 24 37 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 37 38 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 38 39 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 39 40 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 40 41 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 41 42 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 42 43 (rear-nonsticky t tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 44 45 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 45 46 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 46 47 (block-side t) 47 54 (block-side t face web-mode-block-control-face) 54 55 (block-side t) 55 69 (block-side t face web-mode-variable-name-face) 69 70 (block-side t) 70 77 (block-side t face web-mode-variable-name-face) 77 78 (block-side t) 78 90 (block-side t face web-mode-variable-name-face) 90 91 (block-side t) 91 92 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 92 93 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 762) (undo-tree-id229 . -93) (undo-tree-id230 . -16) (undo-tree-id231 . -94) (undo-tree-id232 . -94) (undo-tree-id233 . -44) (undo-tree-id234 . -39) (751 . 762) (#("          
" 0 10 (face whitespace-trailing)) . 657) (668 . 762) 684) nil (25669 47894 817146 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 728 . 729) (nil rear-nonsticky t 728 . 729) (nil tag-name "i" 728 . 729) (nil tag-type end 728 . 729) (nil tag-end t 728 . 729) (nil font-lock-face web-mode-html-tag-bracket-face 728 . 729) (nil tag-name "i" 727 . 728) (nil tag-type end 727 . 728) (nil font-lock-face web-mode-html-tag-face 727 . 728) (nil tag-name "i" 726 . 727) (nil tag-type end 726 . 727) (nil font-lock-face web-mode-html-tag-bracket-face 726 . 727) (nil tag-name "i" 725 . 726) (nil tag-type end 725 . 726) (nil tag-beg 20 725 . 726) (nil font-lock-face web-mode-html-tag-bracket-face 725 . 726) (725 . 729)) ((#("</i>" 0 1 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 1 2 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 2 3 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 3 4 (rear-nonsticky t tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 725) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (nil tag-name "i" 725 . 726) (nil tag-name "i" 726 . 727) (nil tag-name "i" 727 . 728) (nil tag-name "i" 728 . 729) (nil rear-nonsticky nil 728 . 729) (nil rear-nonsticky t 728 . 729) (t 25669 47860 319645 556000)) (25669 47860 312378 145000) 0 nil])
([nil nil ((672 . 681)) nil (25669 47894 817137 347000) 0 nil])
nil
([nil nil ((#("        <i class=\"fas fa-clock\"></i> {% include read_time.html content=page.content %}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 30 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 30 31 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 31 32 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 33 34 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 35 36 (rear-nonsticky t tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 37 38 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 38 39 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 39 40 (block-side t) 40 47 (block-side t face web-mode-block-control-face) 47 48 (block-side t) 48 62 (block-side t face web-mode-variable-name-face) 62 63 (block-side t) 63 70 (block-side t face web-mode-variable-name-face) 70 71 (block-side t) 71 83 (block-side t face web-mode-variable-name-face) 83 84 (block-side t) 84 85 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 85 86 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 760) (undo-tree-id227 . -8) (undo-tree-id228 . -87) (744 . 760) (#("        </span>
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 657) (673 . 760) 681) nil (25669 47894 817135 686000) 0 nil])
([nil nil ((665 . 667)) nil (25669 47894 817131 149000) 0 nil])
([nil nil ((655 . 656)) nil (25669 47894 817130 242000) 0 nil])
([nil nil ((656 . 659)) nil (25669 47894 817129 58000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face)) . -656) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("t" 0 1 (tag-attr t tag-attr-end 0 tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face)) . -657) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("y" 0 1 (tag-attr t tag-attr-end 0 tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face)) . -658) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 659) nil (25669 47894 817126 163000) 0 nil])
([nil nil ((663 . 667) (656 . 664)) nil (25669 47894 817105 215000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing)) . -775) 667) nil (25669 47894 817096 698000) 0 nil])
([nil nil ((#("1" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -666) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 667 (t 25669 47894 823719 340000)) nil (25669 47901 880341 94000) 0 nil])
([nil nil ((666 . 667)) nil (25669 47901 880304 29000) 0 nil])
([nil nil ((775 . 779) (t 25669 47901 887733 609000)) nil (25669 47915 815873 672000) 0 nil])
([nil nil (("s" . -775) (undo-tree-id353 . -1) (undo-tree-id354 . -1) ("p" . -776) (undo-tree-id355 . -1) (undo-tree-id356 . -1) ("a" . -777) (undo-tree-id357 . -1) (undo-tree-id358 . -1) ("n" . -778) (undo-tree-id359 . -1) 779) nil (25669 47915 815871 519000) 0 nil])
([nil nil ((775 . 783) (775 . 788)) nil (25669 47915 815862 644000) 0 nil])
([nil nil ((790 . 800) (791 . 799) (#("          " 0 10 (face whitespace-trailing)) . 790) (790 . 800) (790 . 791) ("        " . 790) (789 . 798)) nil (25669 47915 815860 961000) 0 nil])
([nil nil ((#("        <i class=\"fas fa-tag\"></i>{{ page.tags | join: \", \" }}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 28 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 33 34 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 36 37 (block-side t) 37 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t) 42 46 (block-side t face web-mode-variable-name-face) 46 49 (block-side t) 49 53 (block-side t face web-mode-filter-face) 53 55 (block-side t) 55 59 (block-side t block-token string font-lock-face web-mode-block-string-face) 59 60 (block-side t) 60 61 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 61 62 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 880) (undo-tree-id329 . -10) (undo-tree-id330 . -63) (undo-tree-id331 . -10) (undo-tree-id332 . -10) (undo-tree-id333 . -10) (undo-tree-id334 . -10) (undo-tree-id335 . -10) (undo-tree-id336 . -10) (undo-tree-id337 . -10) (undo-tree-id338 . -10) (undo-tree-id339 . -10) (undo-tree-id340 . -10) (undo-tree-id341 . -10) (undo-tree-id342 . -10) (undo-tree-id343 . -10) (undo-tree-id344 . -10) (864 . 880) (#("        </span>
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 801) (undo-tree-id345 . -10) (undo-tree-id346 . -10) (undo-tree-id347 . -10) (undo-tree-id348 . -10) (undo-tree-id349 . -10) (undo-tree-id350 . -10) (undo-tree-id351 . -10) (undo-tree-id352 . -10) (817 . 880) 827) nil (25669 47915 815856 857000) 0 nil])
([nil nil ((#("        <i class=\"fas fa-tag\"></i>{{ page.tags | join: \", \" }}
" 8 9 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "i" tag-type start) 11 12 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 12 16 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 17 28 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 28 29 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 29 30 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 30 31 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 31 32 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 32 33 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 33 34 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 34 35 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 35 36 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 36 37 (block-side t) 37 41 (block-side t face web-mode-variable-name-face) 41 42 (block-side t) 42 46 (block-side t face web-mode-variable-name-face) 46 49 (block-side t) 49 53 (block-side t face web-mode-filter-face) 53 55 (block-side t) 55 59 (block-side t block-token string font-lock-face web-mode-block-string-face) 59 60 (block-side t) 60 61 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 61 62 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 864) (undo-tree-id304 . -63) (undo-tree-id305 . -10) (undo-tree-id306 . -63) (undo-tree-id307 . -63) (undo-tree-id308 . -63) (undo-tree-id309 . -63) (undo-tree-id310 . -10) (undo-tree-id311 . -10) (undo-tree-id312 . -10) (undo-tree-id313 . -10) (undo-tree-id314 . -10) (undo-tree-id315 . -10) (undo-tree-id316 . -10) (undo-tree-id317 . -10) (853 . 864) (#("          
" 0 10 (face whitespace-trailing)) . 790) (undo-tree-id318 . 1) (undo-tree-id319 . -10) (undo-tree-id320 . -10) (undo-tree-id321 . -10) (undo-tree-id322 . -10) (undo-tree-id323 . -10) (undo-tree-id324 . -10) (undo-tree-id325 . -10) (undo-tree-id326 . -10) (undo-tree-id327 . -10) (undo-tree-id328 . -10) (801 . 864) 811) nil (25669 47915 815827 740000) 0 nil])
([nil nil ((798 . 800) 800) nil (25669 47915 815748 594000) 0 nil])
([nil nil (("
" . 865) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . 1)) nil (25669 47915 815745 615000) 0 nil])
([nil nil (("          " . -863) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) 865) nil (25669 47915 815723 919000) 0 nil])
([nil nil ((820 . 822) (t 25669 47915 823760 954000)) nil (25669 47927 935076 578000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -820) (undo-tree-id360 . -1) (#("r" 0 1 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face)) . -821) (undo-tree-id361 . -1) 822) nil (25669 47927 935073 555000) 0 nil])
([nil nil ((820 . 825)) nil (25669 47927 935057 217000) 0 nil])
([nil nil ((641 . 650) (t 25669 47927 939783 881000)) nil (25669 47945 850996 253000) 0 nil])
([nil nil ((650 . 661)) nil (25669 47953 780045 530000) 0 nil] [nil nil ((650 . 661)) ((#("div></span>" 4 5 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 5 6 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 6 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 10 11 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 650) (undo-tree-id362 . -3) (undo-tree-id363 . -11)) (25669 47945 849865 562000) 0 nil])
([nil nil ((656 . 666) (657 . 665) (#("          " 0 10 (face whitespace-trailing)) . 656) (656 . 666) (656 . 657) ("        " . 656) (655 . 664)) nil (25669 47953 780043 987000) 0 nil])
nil
([nil nil ((#("        <span class=\"mr-2\">
" 8 9 (tag-name "span" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 10 11 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 11 12 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 13 14 (tag-name "span" tag-type start) 14 15 (tag-attr-beg 0 tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 15 16 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 16 17 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 17 18 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-name-face) 19 20 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-equal-face) 20 25 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 25 26 (tag-attr t tag-attr-end 5 tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face) 26 27 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 710) (undo-tree-id375 . -16) (undo-tree-id376 . -8) (695 . 710) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 667) (undo-tree-id377 . -10) (682 . 710) 677) nil (25669 47953 780041 121000) 0 nil])
([nil nil ((#("          <i class=\"fas fa-clock\"></i> {% include read_time.html content=page.content %}
" 10 11 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "i" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 32 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 32 33 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 33 34 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 34 35 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 35 36 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 36 37 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 37 38 (rear-nonsticky t tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 39 40 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 40 41 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face) 41 42 (block-side t) 42 49 (block-side t face web-mode-block-control-face) 49 50 (block-side t) 50 64 (block-side t face web-mode-variable-name-face) 64 65 (block-side t) 65 72 (block-side t face web-mode-variable-name-face) 72 73 (block-side t) 73 85 (block-side t face web-mode-variable-name-face) 85 86 (block-side t) 86 87 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face) 87 88 (rear-nonsticky t block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 799) (784 . 799) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 695) (undo-tree-id374 . -10) (710 . 799) 705) nil (25669 47953 780035 611000) 0 nil])
([nil nil ((#("        </span>
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 815) (800 . 815) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 784) (undo-tree-id373 . -10) (799 . 815) 794) nil (25669 47953 780032 281000) 0 nil])
([nil nil ((#("        <span>
" 8 9 (tag-name "span" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face) 9 13 (tag-name "span" tag-type start font-lock-face web-mode-html-tag-face) 13 14 (tag-name "span" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 830) (815 . 830) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 800) (undo-tree-id372 . -10) (815 . 830) 810) nil (25669 47953 780028 755000) 0 nil])
([nil nil ((#("          <i class=\"fas fa-tag mr-1\"></i>{{ page.tags | join: \", \" }}
" 10 11 (tag-name "i" tag-type start tag-beg 17 font-lock-face web-mode-html-tag-bracket-face) 11 12 (tag-name "i" tag-type start font-lock-face web-mode-html-tag-face) 12 13 (tag-name "i" tag-type start) 13 14 (tag-attr-beg 0 tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 14 18 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-name-face) 18 19 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-equal-face) 19 35 (tag-attr t tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 35 36 (tag-attr t tag-attr-end 5 tag-name "i" tag-type start font-lock-face web-mode-html-attr-value-face) 36 37 (tag-name "i" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face) 37 38 (tag-name "i" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 38 39 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-bracket-face) 39 40 (tag-name "i" tag-type end font-lock-face web-mode-html-tag-face) 40 41 (tag-name "i" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face) 41 42 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face)) 42 43 (block-side t block-token delimiter-beg font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 43 44 (block-side t) 44 48 (block-side t face web-mode-variable-name-face) 48 49 (block-side t) 49 53 (block-side t face web-mode-variable-name-face) 53 56 (block-side t) 56 60 (block-side t face web-mode-filter-face) 60 62 (block-side t) 62 66 (block-side t block-token string font-lock-face web-mode-block-string-face) 66 67 (block-side t) 67 68 (block-side t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face)) 68 69 (block-side t block-end t block-token delimiter-end font-lock-face web-mode-block-delimiter-face face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face))) . 900) (885 . 900) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 815) (undo-tree-id371 . -10) (830 . 900) 825) nil (25669 47953 780024 970000) 0 nil])
([nil nil ((#("        </span>
" 8 9 (tag-name "span" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 14 (tag-name "span" tag-type end font-lock-face web-mode-html-tag-face) 14 15 (tag-name "span" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 916) (undo-tree-id366 . -8) (undo-tree-id367 . -8) (undo-tree-id368 . -8) (undo-tree-id369 . -8) (901 . 916) (#("        </div>
" 8 9 (tag-name "div" tag-type end tag-beg 20 font-lock-face web-mode-html-tag-bracket-face) 9 10 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-bracket-face) 10 13 (tag-name "div" tag-type end font-lock-face web-mode-html-tag-face) 13 14 (tag-name "div" tag-type end tag-end t font-lock-face web-mode-html-tag-bracket-face)) . 885) (undo-tree-id370 . -10) (900 . 916) 895) nil (25669 47953 780020 767000) 0 nil])
([nil nil ((903 . 905) (833 . 835) (814 . 816) (796 . 798) (707 . 709) (675 . 677) 642) nil (25669 47953 780011 854000) 0 nil])
([nil nil (("
" . 655) (undo-tree-id364 . -1) (undo-tree-id365 . -1)) nil (25669 47953 780008 132000) 0 nil])
([nil nil ((#("          " 0 10 (face whitespace-trailing)) . -655)) nil (25669 47953 779990 158000) 0 nil])
([nil nil ((662 . 676) (654 . 663) (t 25669 47953 787830 233000)) nil (25669 47962 719989 894000) 0 nil])
([nil nil ((676 . 678)) nil (25669 47962 719982 345000) 0 nil])
([nil nil ((704 . 706) (t 25669 47962 727845 477000)) nil (25669 48010 201940 22000) 0 nil])
([nil nil ((#("r" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -705) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 706) nil (25669 48010 201936 296000) 0 nil])
([nil nil ((705 . 709)) nil (25669 48010 201905 452000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -707) (undo-tree-id392 . -1) 708 (t 25669 48010 207920 44000)) nil (25669 48020 150738 764000) 0 nil])
([nil nil ((707 . 708)) nil (25669 48020 150723 274000) 0 nil])
([nil nil ((#("tyle=\"font-size: 1rem;\"" 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 1 2 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 2 3 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 3 4 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face) 4 5 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-equal-face) 5 22 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face) 22 23 (tag-attr t tag-attr-end 5 tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . 656) (undo-tree-id401 . -23) (undo-tree-id402 . -6) (undo-tree-id403 . -22) (undo-tree-id404 . -23) (undo-tree-id405 . -22) (undo-tree-id406 . -23) (t 25669 48020 159934 364000)) nil (25669 48088 210769 213000) 0 nil])
([nil nil ((#("s" 0 1 (tag-attr-beg 0 tag-attr t tag-attr-end 0 tag-name "div" tag-type start font-lock-face web-mode-html-attr-name-face)) . -655) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 656) nil (25669 48088 210754 6000) 0 nil])
([nil nil ((655 . 663)) nil (25669 48088 210738 664000) 0 nil])
([nil nil ((nil rear-nonsticky nil 670 . 671) (nil fontified t 662 . 671) (nil tag-attr t 662 . 671) (nil tag-name "div" 662 . 671) (nil tag-type start 662 . 671) (nil font-lock-face web-mode-html-attr-value-face 662 . 671) (662 . 671)) nil (25669 48088 210735 540000) 0 nil])
([nil nil ((#("." 0 1 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) . -662) (undo-tree-id393 . -1) (undo-tree-id394 . -1) 663) nil (25669 48088 210725 850000) 0 nil])
([nil nil ((#("l-4" 0 3 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 697) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (t 25669 48088 220021 95000)) nil (25669 48186 314438 875000) 0 nil])
([nil nil ((#("m" 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . -696) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) 697) nil (25669 48186 314418 65000) 0 nil])
([nil nil ((#(" " 0 1 (tag-attr t tag-name "span" tag-type start font-lock-face web-mode-html-attr-value-face)) . 696)) nil (25669 48186 314362 171000) 0 nil])
([nil nil ((#("
          <span class=\"mr-2\">
            <i class=\"fas fa-clock\"></i> " 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "span") 12 16 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 16 17 (tag-type start tag-name "span") 17 18 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t tag-attr-beg 0) 18 22 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "span" tag-attr t) 22 23 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "span" tag-attr t) 23 28 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr t) 28 29 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "span" tag-attr-end 5 tag-attr t) 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 43 44 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 44 45 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 45 46 (tag-type start tag-name "i") 46 47 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 47 51 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 51 52 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 52 65 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 65 66 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 66 67 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 67 68 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 68 69 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 69 70 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 70 71 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i")) . 672) (undo-tree-id8 . -1) (undo-tree-id9 . -72) (undo-tree-id10 . -72) (undo-tree-id11 . -72) (undo-tree-id12 . -72) (t 25669 48186 324115 365000)) nil (25670 61789 380532 972000) 0 nil])
([nil nil ((672 . 683)) nil (25670 61789 380525 813000) 0 nil])
([nil nil ((#("
          </span>
          <span>
            <i class=\"fas fa-tag mr-1\"></i>" 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 13 17 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span") 29 30 (font-lock-face web-mode-html-tag-bracket-face tag-beg 16 tag-type start tag-name "span") 30 34 (font-lock-face web-mode-html-tag-face tag-type start tag-name "span") 34 35 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "span") 48 49 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "i") 49 50 (font-lock-face web-mode-html-tag-face tag-type start tag-name "i") 50 51 (tag-type start tag-name "i") 51 52 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t tag-attr-beg 0) 52 56 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "i" tag-attr t) 56 57 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "i" tag-attr t) 57 73 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr t) 73 74 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "i" tag-attr-end 5 tag-attr t) 74 75 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "i") 75 76 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "i") 76 77 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "i") 77 78 (font-lock-face web-mode-html-tag-face tag-type end tag-name "i") 78 79 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "i")) . 732) (undo-tree-id4 . -1) (undo-tree-id5 . -79) (undo-tree-id6 . -79) (undo-tree-id7 . -79)) nil (25670 61789 380524 415000) 0 nil])
([nil nil ((732 . 743)) nil (25670 61789 380519 315000) 0 nil])
([nil nil ((#("
          </span>" 11 12 (font-lock-face web-mode-html-tag-bracket-face tag-beg 20 tag-type end tag-name "span") 12 13 (font-lock-face web-mode-html-tag-bracket-face tag-type end tag-name "span") 13 17 (font-lock-face web-mode-html-tag-face tag-type end tag-name "span") 17 18 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type end tag-name "span")) . 771) (undo-tree-id0 . -1) (undo-tree-id1 . -18) (undo-tree-id2 . -18) (undo-tree-id3 . -18)) nil (25670 61789 380517 59000) 0 nil])
([nil nil ((732 . 743)) nil (25670 61789 380495 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 750 . 751) (nil font-lock-face (web-mode-html-entity-face) 743 . 751) (743 . 751)) nil (25670 61789 380476 310000) 0 nil])
([nil nil ((2104 . 2106) (t 25670 61789 387248 380000)) nil (25672 18466 647922 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2665 . 2666) (nil rear-nonsticky t 2665 . 2666) (nil tag-name "script" 2665 . 2666) (nil tag-type end 2665 . 2666) (nil tag-end t 2665 . 2666) (nil font-lock-face web-mode-html-tag-bracket-face 2665 . 2666) (nil tag-name "script" 2659 . 2665) (nil tag-type end 2659 . 2665) (nil font-lock-face web-mode-html-tag-face 2659 . 2665) (nil tag-name "script" 2658 . 2659) (nil tag-type end 2658 . 2659) (nil font-lock-face web-mode-html-tag-bracket-face 2658 . 2659) (nil tag-name "script" 2657 . 2658) (nil tag-type end 2657 . 2658) (nil tag-beg 20 2657 . 2658) (nil font-lock-face web-mode-html-tag-bracket-face 2657 . 2658) (nil part-side javascript 2654 . 2657) (nil part-side javascript 2653 . 2654) (nil part-side javascript 2652 . 2653) (nil face (rainbow-delimiters-depth-1-face) 2652 . 2653) (nil part-side javascript 2647 . 2652) (nil part-side javascript 2646 . 2647) (nil part-side javascript 2645 . 2646) (nil face (rainbow-delimiters-depth-2-face) 2645 . 2646) (nil part-side javascript 2639 . 2645) (nil part-side javascript 2638 . 2639) (nil rear-nonsticky t 2637 . 2638) (nil block-side t 2637 . 2638) (nil block-end t 2637 . 2638) (nil block-token delimiter-end 2637 . 2638) (nil part-side javascript 2637 . 2638) (nil font-lock-face web-mode-block-delimiter-face 2637 . 2638) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2637 . 2638) (nil block-side t 2636 . 2637) (nil block-token delimiter-end 2636 . 2637) (nil part-side javascript 2636 . 2637) (nil font-lock-face web-mode-block-delimiter-face 2636 . 2637) (nil block-side t 2635 . 2636) (nil part-side javascript 2635 . 2636) (nil block-side t 2630 . 2635) (nil part-side javascript 2630 . 2635) (nil face web-mode-block-control-face 2630 . 2635) (nil block-side t 2629 . 2630) (nil part-side javascript 2629 . 2630) (nil block-side t 2628 . 2629) (nil block-token delimiter-beg 2628 . 2629) (nil part-side javascript 2628 . 2629) (nil font-lock-face web-mode-block-delimiter-face 2628 . 2629) (nil block-beg 0 2627 . 2628) (nil block-controls 0 2627 . 2628) (nil block-side t 2627 . 2628) (nil block-token delimiter-beg 2627 . 2628) (nil part-side javascript 2627 . 2628) (nil font-lock-face web-mode-block-delimiter-face 2627 . 2628) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2627 . 2628) (nil part-side javascript 2619 . 2627) (nil part-side javascript 2617 . 2619) (nil part-side javascript 2616 . 2617) (nil part-token string 2616 . 2617) (nil syntax-table (15) 2616 . 2617) (nil font-lock-face web-mode-javascript-string-face 2616 . 2617) (nil rear-nonsticky t 2615 . 2616) (nil block-side t 2615 . 2616) (nil block-end t 2615 . 2616) (nil block-token delimiter-end 2615 . 2616) (nil part-side javascript 2615 . 2616) (nil part-token string 2615 . 2616) (nil font-lock-face web-mode-block-delimiter-face 2615 . 2616) (nil block-side t 2614 . 2615) (nil block-token delimiter-end 2614 . 2615) (nil part-side javascript 2614 . 2615) (nil part-token string 2614 . 2615) (nil font-lock-face web-mode-block-delimiter-face 2614 . 2615) (nil block-side t 2613 . 2614) (nil part-side javascript 2613 . 2614) (nil part-token string 2613 . 2614) (nil block-side t 2610 . 2613) (nil block-token string 2610 . 2613) (nil part-side javascript 2610 . 2613) (nil part-token string 2610 . 2613) (nil font-lock-face web-mode-block-string-face 2610 . 2613) (nil block-side t 2608 . 2610) (nil part-side javascript 2608 . 2610) (nil part-token string 2608 . 2610) (nil block-side t 2604 . 2608) (nil block-token string 2604 . 2608) (nil part-side javascript 2604 . 2608) (nil part-token string 2604 . 2608) (nil font-lock-face web-mode-block-string-face 2604 . 2608) (nil block-side t 2602 . 2604) (nil part-side javascript 2602 . 2604) (nil part-token string 2602 . 2604) (nil block-side t 2595 . 2602) (nil part-side javascript 2595 . 2602) (nil part-token string 2595 . 2602) (nil face web-mode-filter-face 2595 . 2602) (nil block-side t 2592 . 2595) (nil part-side javascript 2592 . 2595) (nil part-token string 2592 . 2595) (nil block-side t 2585 . 2592) (nil part-side javascript 2585 . 2592) (nil part-token string 2585 . 2592) (nil face web-mode-variable-name-face 2585 . 2592) (nil block-side t 2584 . 2585) (nil part-side javascript 2584 . 2585) (nil part-token string 2584 . 2585) (nil block-side t 2580 . 2584) (nil part-side javascript 2580 . 2584) (nil part-token string 2580 . 2584) (nil face web-mode-variable-name-face 2580 . 2584) (nil block-side t 2578 . 2580) (nil part-side javascript 2578 . 2580) (nil part-token string 2578 . 2580) (nil block-side t 2571 . 2578) (nil part-side javascript 2571 . 2578) (nil part-token string 2571 . 2578) (nil face web-mode-filter-face 2571 . 2578) (nil block-side t 2568 . 2571) (nil part-side javascript 2568 . 2571) (nil part-token string 2568 . 2571) (nil block-side t 2565 . 2568) (nil part-side javascript 2565 . 2568) (nil part-token string 2565 . 2568) (nil face web-mode-variable-name-face 2565 . 2568) (nil block-side t 2564 . 2565) (nil part-side javascript 2564 . 2565) (nil part-token string 2564 . 2565) (nil block-side t 2560 . 2564) (nil part-side javascript 2560 . 2564) (nil part-token string 2560 . 2564) (nil face web-mode-variable-name-face 2560 . 2564) (nil block-side t 2559 . 2560) (nil part-side javascript 2559 . 2560) (nil part-token string 2559 . 2560) (nil block-side t 2555 . 2559) (nil part-side javascript 2555 . 2559) (nil part-token string 2555 . 2559) (nil face web-mode-variable-name-face 2555 . 2559) (nil block-side t 2554 . 2555) (nil part-side javascript 2554 . 2555) (nil part-token string 2554 . 2555) (nil block-side t 2553 . 2554) (nil block-token delimiter-beg 2553 . 2554) (nil part-side javascript 2553 . 2554) (nil part-token string 2553 . 2554) (nil font-lock-face web-mode-block-delimiter-face 2553 . 2554) (nil block-beg 0 2552 . 2553) (nil block-controls 0 2552 . 2553) (nil block-side t 2552 . 2553) (nil block-token delimiter-beg 2552 . 2553) (nil part-side javascript 2552 . 2553) (nil part-token string 2552 . 2553) (nil font-lock-face web-mode-block-delimiter-face 2552 . 2553) (nil part-side javascript 2551 . 2552) (nil part-token string 2551 . 2552) (nil syntax-table (15) 2551 . 2552) (nil font-lock-face web-mode-javascript-string-face 2551 . 2552) (nil part-side javascript 2520 . 2551) (nil part-side javascript 2519 . 2520) (nil rear-nonsticky t 2518 . 2519) (nil block-side t 2518 . 2519) (nil block-end t 2518 . 2519) (nil block-token delimiter-end 2518 . 2519) (nil part-side javascript 2518 . 2519) (nil font-lock-face web-mode-block-delimiter-face 2518 . 2519) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2518 . 2519) (nil block-side t 2517 . 2518) (nil block-token delimiter-end 2517 . 2518) (nil part-side javascript 2517 . 2518) (nil font-lock-face web-mode-block-delimiter-face 2517 . 2518) (nil block-side t 2516 . 2517) (nil part-side javascript 2516 . 2517) (nil block-side t 2503 . 2516) (nil part-side javascript 2503 . 2516) (nil face web-mode-variable-name-face 2503 . 2516) (nil block-side t 2502 . 2503) (nil part-side javascript 2502 . 2503) (nil block-side t 2500 . 2502) (nil part-side javascript 2500 . 2502) (nil face web-mode-block-control-face 2500 . 2502) (nil block-side t 2499 . 2500) (nil part-side javascript 2499 . 2500) (nil block-side t 2498 . 2499) (nil block-token delimiter-beg 2498 . 2499) (nil part-side javascript 2498 . 2499) (nil font-lock-face web-mode-block-delimiter-face 2498 . 2499) (nil block-beg 0 2497 . 2498) (nil block-controls 0 2497 . 2498) (nil block-side t 2497 . 2498) (nil block-token delimiter-beg 2497 . 2498) (nil part-side javascript 2497 . 2498) (nil font-lock-face web-mode-block-delimiter-face 2497 . 2498) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2497 . 2498) (nil part-side javascript 2489 . 2497) (nil part-side javascript 2488 . 2489) (nil syntax-table (12) 2488 . 2489) (nil part-side javascript 2475 . 2488) (nil part-token comment 2475 . 2488) (nil font-lock-face web-mode-javascript-comment-face 2475 . 2488) (nil part-side javascript 2474 . 2475) (nil part-token comment 2474 . 2475) (nil syntax-table (11) 2474 . 2475) (nil font-lock-face web-mode-javascript-comment-face 2474 . 2475) (nil part-side javascript 2466 . 2474) (nil part-side javascript 2465 . 2466) (nil part-side javascript 2464 . 2465) (nil face (rainbow-delimiters-depth-2-face) 2464 . 2465) (nil part-side javascript 2463 . 2464) (nil part-side javascript 2462 . 2463) (nil face (rainbow-delimiters-depth-2-face) 2462 . 2463) (nil part-side javascript 2461 . 2462) (nil part-token string 2461 . 2462) (nil syntax-table (15) 2461 . 2462) (nil font-lock-face web-mode-javascript-string-face 2461 . 2462) (nil part-side javascript 2459 . 2461) (nil part-token string 2459 . 2461) (nil font-lock-face web-mode-javascript-string-face 2459 . 2461) (nil part-side javascript 2458 . 2459) (nil part-token string 2458 . 2459) (nil syntax-table (15) 2458 . 2459) (nil font-lock-face web-mode-javascript-string-face 2458 . 2459) (nil part-side javascript 2445 . 2458) (nil part-side javascript 2444 . 2445) (nil face (rainbow-delimiters-depth-2-face) 2444 . 2445) (nil part-side javascript 2443 . 2444) (nil part-side javascript 2441 . 2443) (nil face web-mode-keyword-face 2441 . 2443) (nil part-side javascript 2440 . 2441) (nil part-side javascript 2436 . 2440) (nil face web-mode-keyword-face 2436 . 2440) (nil part-side javascript 2430 . 2436) (nil part-side javascript 2429 . 2430) (nil part-side javascript 2428 . 2429) (nil face (rainbow-delimiters-depth-2-face) 2428 . 2429) (nil part-side javascript 2422 . 2428) (nil part-side javascript 2421 . 2422) (nil rear-nonsticky t 2420 . 2421) (nil block-side t 2420 . 2421) (nil block-end t 2420 . 2421) (nil block-token delimiter-end 2420 . 2421) (nil part-side javascript 2420 . 2421) (nil font-lock-face web-mode-block-delimiter-face 2420 . 2421) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2420 . 2421) (nil block-side t 2419 . 2420) (nil block-token delimiter-end 2419 . 2420) (nil part-side javascript 2419 . 2420) (nil font-lock-face web-mode-block-delimiter-face 2419 . 2420) (nil block-side t 2418 . 2419) (nil part-side javascript 2418 . 2419) (nil block-side t 2413 . 2418) (nil part-side javascript 2413 . 2418) (nil face web-mode-block-control-face 2413 . 2418) (nil block-side t 2412 . 2413) (nil part-side javascript 2412 . 2413) (nil block-side t 2411 . 2412) (nil block-token delimiter-beg 2411 . 2412) (nil part-side javascript 2411 . 2412) (nil font-lock-face web-mode-block-delimiter-face 2411 . 2412) (nil block-beg 0 2410 . 2411) (nil block-controls 0 2410 . 2411) (nil block-side t 2410 . 2411) (nil block-token delimiter-beg 2410 . 2411) (nil part-side javascript 2410 . 2411) (nil font-lock-face web-mode-block-delimiter-face 2410 . 2411) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2410 . 2411) (nil part-side javascript 2402 . 2410) (nil part-side javascript 2400 . 2402) (nil part-side javascript 2399 . 2400) (nil part-token string 2399 . 2400) (nil syntax-table (15) 2399 . 2400) (nil font-lock-face web-mode-javascript-string-face 2399 . 2400) (nil rear-nonsticky t 2398 . 2399) (nil block-side t 2398 . 2399) (nil block-end t 2398 . 2399) (nil block-token delimiter-end 2398 . 2399) (nil part-side javascript 2398 . 2399) (nil part-token string 2398 . 2399) (nil font-lock-face web-mode-block-delimiter-face 2398 . 2399) (nil block-side t 2397 . 2398) (nil block-token delimiter-end 2397 . 2398) (nil part-side javascript 2397 . 2398) (nil part-token string 2397 . 2398) (nil font-lock-face web-mode-block-delimiter-face 2397 . 2398) (nil block-side t 2396 . 2397) (nil part-side javascript 2396 . 2397) (nil part-token string 2396 . 2397) (nil block-side t 2393 . 2396) (nil block-token string 2393 . 2396) (nil part-side javascript 2393 . 2396) (nil part-token string 2393 . 2396) (nil font-lock-face web-mode-block-string-face 2393 . 2396) (nil block-side t 2391 . 2393) (nil part-side javascript 2391 . 2393) (nil part-token string 2391 . 2393) (nil block-side t 2387 . 2391) (nil block-token string 2387 . 2391) (nil part-side javascript 2387 . 2391) (nil part-token string 2387 . 2391) (nil font-lock-face web-mode-block-string-face 2387 . 2391) (nil block-side t 2385 . 2387) (nil part-side javascript 2385 . 2387) (nil part-token string 2385 . 2387) (nil block-side t 2378 . 2385) (nil part-side javascript 2378 . 2385) (nil part-token string 2378 . 2385) (nil face web-mode-filter-face 2378 . 2385) (nil block-side t 2375 . 2378) (nil part-side javascript 2375 . 2378) (nil part-token string 2375 . 2378) (nil block-side t 2368 . 2375) (nil part-side javascript 2368 . 2375) (nil part-token string 2368 . 2375) (nil face web-mode-variable-name-face 2368 . 2375) (nil block-side t 2367 . 2368) (nil part-side javascript 2367 . 2368) (nil part-token string 2367 . 2368) (nil block-side t 2363 . 2367) (nil part-side javascript 2363 . 2367) (nil part-token string 2363 . 2367) (nil face web-mode-variable-name-face 2363 . 2367) (nil block-side t 2361 . 2363) (nil part-side javascript 2361 . 2363) (nil part-token string 2361 . 2363) (nil block-side t 2354 . 2361) (nil part-side javascript 2354 . 2361) (nil part-token string 2354 . 2361) (nil face web-mode-filter-face 2354 . 2361) (nil block-side t 2351 . 2354) (nil part-side javascript 2351 . 2354) (nil part-token string 2351 . 2354) (nil block-side t 2348 . 2351) (nil part-side javascript 2348 . 2351) (nil part-token string 2348 . 2351) (nil face web-mode-variable-name-face 2348 . 2351) (nil block-side t 2347 . 2348) (nil part-side javascript 2347 . 2348) (nil part-token string 2347 . 2348) (nil block-side t 2339 . 2347) (nil part-side javascript 2339 . 2347) (nil part-token string 2339 . 2347) (nil face web-mode-variable-name-face 2339 . 2347) (nil block-side t 2338 . 2339) (nil part-side javascript 2338 . 2339) (nil part-token string 2338 . 2339) (nil block-side t 2334 . 2338) (nil part-side javascript 2334 . 2338) (nil part-token string 2334 . 2338) (nil face web-mode-variable-name-face 2334 . 2338) (nil block-side t 2333 . 2334) (nil part-side javascript 2333 . 2334) (nil part-token string 2333 . 2334) (nil block-side t 2332 . 2333) (nil block-token delimiter-beg 2332 . 2333) (nil part-side javascript 2332 . 2333) (nil part-token string 2332 . 2333) (nil font-lock-face web-mode-block-delimiter-face 2332 . 2333) (nil block-beg 0 2331 . 2332) (nil block-controls 0 2331 . 2332) (nil block-side t 2331 . 2332) (nil block-token delimiter-beg 2331 . 2332) (nil part-side javascript 2331 . 2332) (nil part-token string 2331 . 2332) (nil font-lock-face web-mode-block-delimiter-face 2331 . 2332) (nil part-side javascript 2330 . 2331) (nil part-token string 2330 . 2331) (nil syntax-table (15) 2330 . 2331) (nil font-lock-face web-mode-javascript-string-face 2330 . 2331) (nil part-side javascript 2299 . 2330) (nil part-side javascript 2298 . 2299) (nil rear-nonsticky t 2297 . 2298) (nil block-side t 2297 . 2298) (nil block-end t 2297 . 2298) (nil block-token delimiter-end 2297 . 2298) (nil part-side javascript 2297 . 2298) (nil font-lock-face web-mode-block-delimiter-face 2297 . 2298) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2297 . 2298) (nil block-side t 2296 . 2297) (nil block-token delimiter-end 2296 . 2297) (nil part-side javascript 2296 . 2297) (nil font-lock-face web-mode-block-delimiter-face 2296 . 2297) (nil block-side t 2295 . 2296) (nil part-side javascript 2295 . 2296) (nil block-side t 2278 . 2295) (nil part-side javascript 2278 . 2295) (nil face web-mode-variable-name-face 2278 . 2295) (nil block-side t 2277 . 2278) (nil part-side javascript 2277 . 2278) (nil block-side t 2275 . 2277) (nil part-side javascript 2275 . 2277) (nil face web-mode-block-control-face 2275 . 2277) (nil block-side t 2274 . 2275) (nil part-side javascript 2274 . 2275) (nil block-side t 2273 . 2274) (nil block-token delimiter-beg 2273 . 2274) (nil part-side javascript 2273 . 2274) (nil font-lock-face web-mode-block-delimiter-face 2273 . 2274) (nil block-beg 0 2272 . 2273) (nil block-controls 0 2272 . 2273) (nil block-side t 2272 . 2273) (nil block-token delimiter-beg 2272 . 2273) (nil part-side javascript 2272 . 2273) (nil font-lock-face web-mode-block-delimiter-face 2272 . 2273) (nil face (rainbow-delimiters-depth-3-face web-mode-block-delimiter-face) 2272 . 2273) (nil part-side javascript 2264 . 2272) (nil part-side javascript 2263 . 2264) (nil syntax-table (12) 2263 . 2264) (nil part-side javascript 2251 . 2263) (nil part-token comment 2251 . 2263) (nil font-lock-face web-mode-javascript-comment-face 2251 . 2263) (nil part-side javascript 2250 . 2251) (nil part-token comment 2250 . 2251) (nil syntax-table (11) 2250 . 2251) (nil font-lock-face web-mode-javascript-comment-face 2250 . 2251) (nil part-side javascript 2242 . 2250) (nil part-side javascript 2241 . 2242) (nil part-side javascript 2240 . 2241) (nil face (rainbow-delimiters-depth-2-face) 2240 . 2241) (nil part-side javascript 2239 . 2240) (nil part-side javascript 2238 . 2239) (nil face (rainbow-delimiters-depth-2-face) 2238 . 2239) (nil part-side javascript 2237 . 2238) (nil part-token string 2237 . 2238) (nil syntax-table (15) 2237 . 2238) (nil font-lock-face web-mode-javascript-string-face 2237 . 2238) (nil part-side javascript 2235 . 2237) (nil part-token string 2235 . 2237) (nil font-lock-face web-mode-javascript-string-face 2235 . 2237) (nil part-side javascript 2234 . 2235) (nil part-token string 2234 . 2235) (nil syntax-table (15) 2234 . 2235) (nil font-lock-face web-mode-javascript-string-face 2234 . 2235) (nil part-side javascript 2221 . 2234) (nil part-side javascript 2220 . 2221) (nil face (rainbow-delimiters-depth-2-face) 2220 . 2221) (nil part-side javascript 2219 . 2220) (nil part-side javascript 2217 . 2219) (nil face web-mode-keyword-face 2217 . 2219) (nil part-side javascript 2210 . 2217) (nil part-side javascript 2180 . 2210) (nil part-side javascript 2179 . 2180) (nil part-side javascript 2178 . 2179) (nil face (rainbow-delimiters-depth-1-face) 2178 . 2179) (nil part-side javascript 2177 . 2178) (nil part-side javascript 2176 . 2177) (nil face (rainbow-delimiters-depth-1-face) 2176 . 2177) (nil part-side javascript 2175 . 2176) (nil part-side javascript 2174 . 2175) (nil face (rainbow-delimiters-depth-1-face) 2174 . 2175) (nil part-side javascript 2166 . 2174) (nil face web-mode-function-name-face 2166 . 2174) (nil part-side javascript 2165 . 2166) (nil part-side javascript 2157 . 2165) (nil face web-mode-keyword-face 2157 . 2165) (nil part-side javascript 2152 . 2157) (nil part-side javascript 2116 . 2152) (nil tag-name "script" 2115 . 2116) (nil tag-type start 2115 . 2116) (nil tag-end t 2115 . 2116) (nil font-lock-face web-mode-html-tag-bracket-face 2115 . 2116) (nil tag-name "script" 2109 . 2115) (nil tag-type start 2109 . 2115) (nil font-lock-face web-mode-html-tag-face 2109 . 2115) (nil tag-name "script" 2108 . 2109) (nil tag-type start 2108 . 2109) (nil tag-beg 16 2108 . 2109) (nil font-lock-face web-mode-html-tag-bracket-face 2108 . 2109) (2106 . 2666)) nil (25672 18466 647898 548000) 0 nil])
([nil current ((#("  " 0 2 (part-side javascript)) . -2621) (#("  " 0 2 (part-side javascript)) . -2618) (#("  " 0 2 (part-side javascript)) . -2613) (#("  " 0 2 (part-side javascript)) . -2597) (#("  " 0 2 (part-side javascript)) . -2500) (#("  " 0 2 (part-side javascript)) . -2471) (#("  " 0 2 (part-side javascript)) . -2450) (#("  " 0 2 (part-side javascript)) . -2414) (#("  " 0 2 (part-side javascript)) . -2408) (#("  " 0 2 (part-side javascript)) . -2392) (#("  " 0 2 (part-side javascript)) . -2291) (#("  " 0 2 (part-side javascript)) . -2258) (#("  " 0 2 (part-side javascript)) . -2238) (#("  " 0 2 (part-side javascript)) . -2207) (#("  " 0 2 (part-side javascript)) . -2179) (#("  " 0 2 (part-side javascript)) . -2151) (#("  " 0 2 (part-side javascript)) . -2117) ("  " . -2106)) nil (25672 18466 647795 536000) 0 nil])
nil
