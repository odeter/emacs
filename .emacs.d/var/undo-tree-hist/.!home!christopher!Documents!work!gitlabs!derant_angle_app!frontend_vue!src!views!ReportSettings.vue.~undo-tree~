(undo-tree-save-format-version . 1)
"3834d66b24615071d5559bf1c0853718fe0cc076"
[nil nil nil nil (25479 12765 828846 310000) 0 nil]
([nil nil ((19589 . 19600) (t 25430 15053 191606 782000)) nil (25479 13035 6514 484000) 0 nil] [nil nil ((19589 . 19590) (t 25430 15053 191606 782000)) ((#("3" 0 1 (part-side javascript)) . 19589) (undo-tree-id0 . -1)) (25479 12765 827039 202000) 0 nil])
([nil nil ((19600 . 19618)) nil (25479 13035 6513 409000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 19644 . 19645) (nil part-side javascript 19644 . 19645) (nil face (rainbow-delimiters-depth-5-face) 19644 . 19645) (nil part-side javascript 19643 . 19644) (nil face (rainbow-delimiters-depth-6-face) 19643 . 19644) (nil part-side javascript 19642 . 19643) (nil face (rainbow-delimiters-depth-7-face) 19642 . 19643) (nil part-side javascript 19639 . 19642) (nil part-side javascript 19638 . 19639) (nil face web-mode-variable-name-face 19638 . 19639) (nil part-side javascript 19637 . 19638) (nil face (rainbow-delimiters-depth-7-face) 19637 . 19638) (nil part-side javascript 19636 . 19637) (nil face (rainbow-delimiters-depth-6-face) 19636 . 19637) (nil part-side javascript 19632 . 19636) (nil part-side javascript 19631 . 19632) (nil face (rainbow-delimiters-depth-6-face) 19631 . 19632) (nil part-side javascript 19630 . 19631) (nil face (rainbow-delimiters-depth-7-face) 19630 . 19631) (nil part-side javascript 19629 . 19630) (nil face web-mode-variable-name-face 19629 . 19630) (nil part-side javascript 19627 . 19629) (nil part-side javascript 19626 . 19627) (nil face web-mode-variable-name-face 19626 . 19627) (nil part-side javascript 19625 . 19626) (nil face (rainbow-delimiters-depth-7-face) 19625 . 19626) (nil part-side javascript 19624 . 19625) (nil face (rainbow-delimiters-depth-6-face) 19624 . 19625) (nil part-side javascript 19623 . 19624) (nil face (rainbow-delimiters-depth-5-face) 19623 . 19624) (nil part-side javascript 19620 . 19623) (nil face web-mode-function-call-face 19620 . 19623) (nil part-side javascript 19618 . 19620) (19618 . 19645)) nil (25479 13035 6510 550000) 0 nil])
([nil nil ((#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19624) (undo-tree-id12 . -1) (#("{" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19625) (undo-tree-id13 . -1) (#("a" 0 1 (part-side javascript)) . -19626) (undo-tree-id14 . -1) (#("," 0 1 (part-side javascript)) . -19627) (undo-tree-id15 . -1) (#(" " 0 1 (part-side javascript)) . -19628) (undo-tree-id16 . -1) (#("b" 0 1 (part-side javascript)) . -19629) (undo-tree-id17 . -1) (#("}" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19630) (undo-tree-id18 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19631) (undo-tree-id19 . -1) (#(" " 0 1 (part-side javascript)) . -19632) (undo-tree-id20 . -1) (#("=" 0 1 (part-side javascript)) . -19633) (undo-tree-id21 . -1) (#(">" 0 1 (part-side javascript)) . -19634) (undo-tree-id22 . -1) (#(" " 0 1 (part-side javascript)) . -19635) (undo-tree-id23 . -1) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19636) (undo-tree-id24 . -1) (#(")" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-6-face))) . 19637) (#("[" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19637) (undo-tree-id25 . -1) (#("a" 0 1 (part-side javascript)) . -19638) (undo-tree-id26 . -1) (#("," 0 1 (part-side javascript)) . -19639) (undo-tree-id27 . -1) (#(" " 0 1 (part-side javascript)) . -19640) (undo-tree-id28 . -1) (#("b" 0 1 (part-side javascript)) . -19641) (undo-tree-id29 . -1) (#("]" 0 1 (part-side javascript face (rainbow-delimiters-depth-7-face))) . -19642) (undo-tree-id30 . -1) (#(")" 0 1 (part-side javascript face (rainbow-delimiters-depth-6-face))) . -19643) (undo-tree-id31 . -1) 19644) nil (25479 13035 6499 2000) 0 nil])
([nil nil ((19624 . 19625)) nil (25479 13035 6471 925000) 0 nil])
([nil nil ((19624 . 19632)) nil (25479 13035 6468 669000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19631) (undo-tree-id11 . -1) 19632) nil (25479 13035 6464 710000) 0 nil])
([nil nil ((#("l" 0 1 (part-side javascript)) . -19618) (undo-tree-id10 . -1) 19619) nil (25479 13035 6458 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19633 . 19634) (nil part-side javascript 19622 . 19634) (nil part-side javascript 19618 . 19622) (nil face web-mode-constant-face 19618 . 19622) (19618 . 19634)) nil (25479 13035 6450 279000) 0 nil])
([nil nil ((19647 . 19658)) nil (25479 13035 6445 678000) 0 nil])
([nil nil ((19670 . 19679) (19669 . 19671) (#("(" 0 1 (part-side javascript face (rainbow-delimiters-depth-5-face))) . -19669) (19658 . 19670)) nil (25479 13035 6442 266000) 0 nil])
([nil nil ((19679 . 19680)) nil (25479 13035 6436 786000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19679) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 19680) nil (25479 13035 6430 564000) 0 nil])
([nil nil ((#("x" 0 1 (part-side javascript)) . -19639) (undo-tree-id33 . -1) 19640 (t 25479 13035 14692 874000)) nil (25479 13073 470659 610000) 0 nil])
([nil nil ((19639 . 19646)) nil (25479 13073 470646 380000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19645) (undo-tree-id32 . -1) 19646) nil (25479 13073 470629 950000) 0 nil])
([nil nil ((#("Object.value" 0 6 (part-side javascript) 6 12 (part-side javascript)) . 19639) (undo-tree-id37 . -12) (undo-tree-id38 . -5) (undo-tree-id39 . -12) (t 25479 13073 475260 255000)) nil (25479 13134 798504 590000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19658 . 19659) (nil part-side javascript 19658 . 19659) (nil face (rainbow-delimiters-depth-5-face) 19658 . 19659) (nil part-side javascript 19657 . 19658) (nil face (rainbow-delimiters-depth-6-face) 19657 . 19658) (nil part-side javascript 19654 . 19657) (nil part-side javascript 19653 . 19654) (nil face (rainbow-delimiters-depth-6-face) 19653 . 19654) (nil part-side javascript 19645 . 19653) (nil part-side javascript 19644 . 19645) (nil face (rainbow-delimiters-depth-6-face) 19644 . 19645) (nil part-side javascript 19640 . 19644) (nil part-side javascript 19639 . 19640) (nil face (rainbow-delimiters-depth-6-face) 19639 . 19640) (19639 . 19659)) nil (25479 13134 798499 88000) 0 nil])
([nil nil ((#("k" 0 1 (part-side javascript)) . -19654) (undo-tree-id34 . -1) (#("e" 0 1 (part-side javascript)) . -19655) (undo-tree-id35 . -1) (#("y" 0 1 (part-side javascript)) . -19656) (undo-tree-id36 . -1) 19657) nil (25479 13134 798493 707000) 0 nil])
([nil nil ((19654 . 19656)) nil (25479 13134 798482 131000) 0 nil])
([nil nil ((19655 . 19660)) nil (25479 13134 798475 72000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t part-side javascript face (rainbow-delimiters-depth-5-face))) . -19662) (undo-tree-id40 . -1) 19663 (t 25479 13134 804156 631000)) nil (25479 13144 70918 901000) 0 nil])
([nil nil ((#("this.chosenUsers" 0 4 (part-side javascript face web-mode-constant-face) 4 16 (part-side javascript)) . 19765) (undo-tree-id41 . -16) (undo-tree-id42 . -16) (undo-tree-id43 . -16) (undo-tree-id44 . -16) (undo-tree-id45 . -16) (undo-tree-id46 . -16) (undo-tree-id47 . -16) (undo-tree-id48 . -16) (undo-tree-id49 . -15) (undo-tree-id50 . -15) (undo-tree-id51 . -15) (undo-tree-id52 . -15) (undo-tree-id53 . -15) (undo-tree-id54 . -15) (undo-tree-id55 . -15) (undo-tree-id56 . -13) (undo-tree-id57 . -13) (undo-tree-id58 . -13) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -16) (undo-tree-id96 . -16) (t 25479 13144 76291 317000)) nil (25479 13211 659519 856000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19773 . 19774) (nil part-side javascript 19765 . 19774) (19765 . 19774)) nil (25479 13211 659438 610000) 0 nil])
([nil nil ((17949 . 17962) (t 25481 50701 613862 64000)) nil (25525 32193 323379 367000) 0 nil])
([nil nil ((17975 . 17980) (nil part-token string 17975 . 17976) (nil font-lock-face web-mode-javascript-string-face 17975 . 17976) (nil part-side javascript 17975 . 17976) (17974 . 17976) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -17974) (17974 . 17975) (17973 . 17975) (#("(" 0 1 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . -17973) (17962 . 17974)) nil (25525 32193 323377 606000) 0 nil])
([nil nil ((17981 . 17982)) nil (25525 32193 323374 778000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -17981) (undo-tree-id17 . -1) 17982) nil (25525 32193 323373 589000) 0 nil])
([nil nil ((17981 . 17982)) nil (25525 32193 323371 482000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -17981) (undo-tree-id16 . -1) 17982) nil (25525 32193 323370 194000) 0 nil])
([nil nil ((17981 . 17990)) nil (25525 32193 323367 790000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -17981) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("+" 0 1 (part-side javascript)) . -17982) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (part-side javascript)) . -17983) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("u" 0 1 (part-side javascript)) . -17984) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("s" 0 1 (part-side javascript)) . -17985) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("e" 0 1 (part-side javascript)) . -17986) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("r" 0 1 (part-side javascript)) . -17987) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (part-side javascript)) . -17988) (undo-tree-id14 . -1) (#(" " 0 1 (part-side javascript)) . -17989) (undo-tree-id15 . -1) 17990) nil (25525 32193 323363 172000) 0 nil])
([nil nil ((17981 . 17988)) nil (25525 32193 323323 44000) 0 nil])
([nil nil ((19736 . 19747) (t 25525 32193 325489 309000)) nil (25525 32245 941932 615000) 0 nil])
([nil nil ((#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . 19761) (19760 . 19761) (nil part-token string 19760 . 19761) (nil font-lock-face web-mode-javascript-string-face 19760 . 19761) (nil part-side javascript 19760 . 19761) (19759 . 19761) (#("\"" 0 1 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript)) . -19759) (19759 . 19760) (19758 . 19760) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -19758) (19747 . 19759)) nil (25525 32245 941929 838000) 0 nil])
([nil nil ((19760 . 19772)) nil (25525 32245 941925 439000) 0 nil])
([nil nil ((19773 . 19791)) nil (25525 32245 941918 753000) 0 nil])
([nil nil ((19640 . 19643) (t 25525 32245 941644 73000)) nil (25525 32335 558023 305000) 0 nil])
([nil nil ((#("user_list" 0 9 (part-side javascript)) . 19864) (undo-tree-id33 . -9) (undo-tree-id34 . -9)) nil (25525 32335 558021 953000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19879 . 19880) (nil part-side javascript 19868 . 19880) (nil part-side javascript 19864 . 19868) (nil face web-mode-constant-face 19864 . 19868) (19864 . 19880)) nil (25525 32335 558018 490000) 0 nil])
([nil nil ((#("          console.log(user_list)
          console.log(\"Chosen users\", this.chosenUsers)" 0 18 (part-side javascript) 18 21 (face web-mode-function-call-face part-side javascript) 21 22 (face (rainbow-delimiters-depth-5-face) part-side javascript) 22 31 (part-side javascript) 31 32 (face (rainbow-delimiters-depth-5-face) part-side javascript) 32 33 (part-side javascript) 33 51 (part-side javascript) 51 54 (face web-mode-function-call-face part-side javascript) 54 55 (face (rainbow-delimiters-depth-5-face) part-side javascript) 55 56 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 56 68 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 68 69 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 69 71 (part-side javascript) 71 75 (face web-mode-constant-face part-side javascript) 75 87 (part-side javascript) 87 88 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 19707) (undo-tree-id29 . -88) (undo-tree-id30 . -86) (undo-tree-id31 . -33) (undo-tree-id32 . -88)) nil (25525 32335 558015 503000) 0 nil])
([nil nil ((#("
" 0 1 (syntax-table (12) part-side javascript)) . -19706) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 19707) nil (25525 32335 558006 244000) 0 nil])
([nil nil ((19629 . 19640) (t 25525 32335 565895 749000)) nil (25525 32759 235221 79000) 0 nil])
([nil nil ((19652 . 19657) (19651 . 19653) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -19651) (19640 . 19652)) nil (25525 32759 235217 694000) 0 nil])
([nil nil ((#("," 0 1 (part-side javascript)) . -19656) (undo-tree-id35 . -1) 19657) nil (25525 32759 235212 506000) 0 nil])
([nil nil ((19656 . 19668)) nil (25525 32759 235189 256000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -19680) (undo-tree-id49 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -19681) (undo-tree-id50 . -1) (#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -19682) (undo-tree-id51 . -1) 19683 (t 25525 32759 246941 444000)) nil (25525 32935 604850 788000) 0 nil])
([nil nil ((19640 . 19642)) nil (25525 32935 604834 187000) 0 nil])
([nil nil ((#("this.chosenUsers" 0 4 (face web-mode-constant-face part-side javascript) 4 15 (part-side javascript) 15 16 (part-side javascript rear-nonsticky t)) . 19814) (undo-tree-id47 . -16) (undo-tree-id48 . -16)) nil (25525 32935 604829 875000) 0 nil])
([nil nil ((19814 . 19823)) nil (25525 32935 604819 916000) 0 nil])
([nil nil ((19745 . 19756)) nil (25525 32935 604816 436000) 0 nil])
([nil nil ((19768 . 19774) (19767 . 19769) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -19767) (19756 . 19768)) nil (25525 32935 604811 853000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -19772) (undo-tree-id45 . -1) (#("_" 0 1 (part-side javascript)) . -19773) (undo-tree-id46 . -1) 19774) nil (25525 32935 604804 191000) 0 nil])
([nil nil ((19772 . 19778)) nil (25525 32935 604792 315000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19777) (undo-tree-id44 . -1) 19778) nil (25525 32935 604787 967000) 0 nil])
([nil nil ((19778 . 19789)) nil (25525 32935 604780 226000) 0 nil])
([nil nil ((19789 . 19794)) nil (25525 32935 604776 654000) 0 nil])
([nil nil ((#("e" 0 1 (part-side javascript)) . -19789) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("x" 0 1 (part-side javascript)) . -19790) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("i" 0 1 (part-side javascript)) . -19791) (undo-tree-id41 . -1) (#("t" 0 1 (part-side javascript)) . -19792) (undo-tree-id42 . -1) (#(" " 0 1 (part-side javascript)) . -19793) (undo-tree-id43 . -1) 19794) nil (25525 32935 604767 40000) 0 nil])
([nil nil ((19789 . 19796)) nil (25525 32935 604735 315000) 0 nil])
([nil nil ((#(" " 0 1 (part-side javascript)) . -19795) (undo-tree-id36 . -1) 19796) nil (25525 32935 604715 3000) 0 nil])
([nil nil ((19603 . 19606) (t 25525 32935 619331 671000)) nil (25525 32969 42857 898000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -19605) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 19606) nil (25525 32969 42852 698000) 0 nil])
([nil nil ((19780 . 19791) (t 25525 32969 47403 708000)) nil (25525 33023 932535 148000) 0 nil])
([nil nil ((19803 . 19808) (19802 . 19804) (#("(" 0 1 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . -19802) (19791 . 19803)) nil (25525 33023 932533 721000) 0 nil])
([nil nil ((#("s" 0 1 (part-side javascript)) . -19807) (undo-tree-id64 . -1) 19808) nil (25525 33023 932531 867000) 0 nil])
([nil nil ((19807 . 19808)) nil (25525 33023 932529 700000) 0 nil])
([nil nil ((#("u" 0 1 (part-side javascript)) . -19803) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("s" 0 1 (part-side javascript)) . -19804) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("e" 0 1 (part-side javascript)) . -19805) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("r" 0 1 (part-side javascript)) . -19806) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("_" 0 1 (part-side javascript)) . -19807) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 19808) nil (25525 33023 932526 567000) 0 nil])
([nil nil ((19803 . 19814)) nil (25525 33023 932505 255000) 0 nil])
([nil nil ((19803 . 19808)) nil (25525 33023 932498 980000) 0 nil])
([nil nil ((19684 . 19687) (t 25525 33023 939520 883000)) nil (25525 33092 613688 945000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -19686) (undo-tree-id67 . -1) 19687) nil (25525 33092 613687 200000) 0 nil])
([nil nil ((#("user_list" 0 9 (part-side javascript)) . 19908) (undo-tree-id65 . -9) (undo-tree-id66 . -9)) nil (25525 33092 613683 108000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19923 . 19924) (nil part-side javascript 19913 . 19924) (nil part-side javascript 19912 . 19913) (nil part-side javascript 19908 . 19912) (nil face web-mode-constant-face 19908 . 19912) (19908 . 19924)) nil (25525 33092 613668 620000) 0 nil])
([nil nil ((#("this.users.slice()" 0 4 (face web-mode-constant-face part-side javascript) 4 11 (part-side javascript) 11 16 (face web-mode-function-call-face part-side javascript) 16 17 (face (rainbow-delimiters-depth-7-face) part-side javascript) 17 18 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 17638) (undo-tree-id70 . -18) (undo-tree-id71 . -18) (undo-tree-id72 . -18) (undo-tree-id73 . -18) (t 25525 33092 619665 731000)) nil (25525 33152 264974 689000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17682 . 17683) (nil part-side javascript 17682 . 17683) (nil face (rainbow-delimiters-depth-7-face) 17682 . 17683) (nil part-side javascript 17681 . 17682) (nil face (rainbow-delimiters-depth-8-face) 17681 . 17682) (nil part-side javascript 17680 . 17681) (nil part-token string 17680 . 17681) (nil syntax-table (15) 17680 . 17681) (nil font-lock-face web-mode-javascript-string-face 17680 . 17681) (nil part-side javascript 17675 . 17680) (nil part-token string 17675 . 17680) (nil font-lock-face web-mode-javascript-string-face 17675 . 17680) (nil part-side javascript 17674 . 17675) (nil part-token string 17674 . 17675) (nil syntax-table (15) 17674 . 17675) (nil font-lock-face web-mode-javascript-string-face 17674 . 17675) (nil part-side javascript 17673 . 17674) (nil face (rainbow-delimiters-depth-8-face) 17673 . 17674) (nil part-side javascript 17665 . 17673) (nil part-side javascript 17664 . 17665) (nil face (rainbow-delimiters-depth-8-face) 17664 . 17665) (nil part-side javascript 17660 . 17664) (nil part-side javascript 17659 . 17660) (nil face (rainbow-delimiters-depth-8-face) 17659 . 17660) (nil part-side javascript 17658 . 17659) (nil face (rainbow-delimiters-depth-7-face) 17658 . 17659) (nil part-side javascript 17655 . 17658) (nil face web-mode-function-call-face 17655 . 17658) (nil part-side javascript 17642 . 17655) (nil part-side javascript 17638 . 17642) (nil face web-mode-constant-face 17638 . 17642) (17638 . 17683)) nil (25525 33152 264964 996000) 0 nil])
([nil nil ((#("chosenUsers" 0 11 (part-side javascript)) . 17643) (undo-tree-id68 . -11) (undo-tree-id69 . -11)) nil (25525 33152 264956 177000) 0 nil])
([nil nil ((17643 . 17648)) nil (25525 33152 264940 596000) 0 nil])
([nil nil ((19781 . 19783) (t 25525 33152 271790 123000)) nil (25525 33170 88553 535000) 0 nil])
([nil nil ((#("/" 0 1 (part-side javascript)) . -19624) (undo-tree-id77 . -1) (#("/" 0 1 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript)) . -19625) (undo-tree-id78 . -1) 19626 (t 25525 33170 95827 60000)) nil (25525 33188 682740 322000) 0 nil])
([nil nil ((#("
          return" 0 1 (part-side javascript) 1 11 (part-side javascript) 11 17 (face web-mode-keyword-face part-side javascript)) . 19843) (undo-tree-id74 . -17) (undo-tree-id75 . -1) (undo-tree-id76 . -17)) nil (25525 33188 682731 986000) 0 nil])
([nil nil ((#("          //console.log(this.chosenUsers)
          //const user_list = this.chosenUsers.map((item) => item['value'])
          //console.log(user_list)
          console.log(this.chosenUsers)" 0 10 (part-side javascript) 10 11 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 11 20 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 20 23 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 23 24 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 24 28 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 28 40 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 40 41 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 41 42 (syntax-table (12) part-side javascript) 42 52 (part-side javascript) 52 53 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 53 54 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 54 59 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 59 60 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 60 69 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 69 72 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 72 76 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 76 89 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 89 92 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 92 93 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 93 94 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 94 98 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 98 99 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 99 107 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 107 108 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 108 109 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 109 114 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 114 115 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 115 116 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 116 117 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 117 118 (syntax-table (12) part-side javascript) 118 128 (part-side javascript) 128 129 (font-lock-face web-mode-javascript-comment-face syntax-table (11) part-token comment part-side javascript) 129 138 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 138 141 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 141 142 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 142 151 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 151 152 (font-lock-face web-mode-javascript-comment-face part-token comment part-side javascript) 152 153 (syntax-table (12) part-side javascript) 153 171 (part-side javascript) 171 174 (face web-mode-function-call-face part-side javascript) 174 175 (face (rainbow-delimiters-depth-5-face) part-side javascript) 175 179 (face web-mode-constant-face part-side javascript) 179 180 (part-side javascript) 180 191 (part-side javascript) 191 192 (face (rainbow-delimiters-depth-5-face) part-side javascript)) . 19651) (undo-tree-id89 . -192) (undo-tree-id90 . -42) (undo-tree-id91 . -41) (undo-tree-id92 . -117) (undo-tree-id93 . -191) (undo-tree-id94 . -191) (undo-tree-id95 . -72) (undo-tree-id96 . -117) (undo-tree-id97 . -192) (undo-tree-id98 . -192) (t 25525 33188 687865 481000)) nil (25525 33240 988066 171000) 0 nil])
([nil nil ((#("
" 0 1 (part-side javascript)) . -19650) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 19651) nil (25525 33240 988050 417000) 0 nil])
([nil nil ((#("
            console.log(\"users\", users)" 0 1 (part-side javascript) 1 21 (part-side javascript) 21 24 (face web-mode-function-call-face part-side javascript) 24 25 (face (rainbow-delimiters-depth-7-face) part-side javascript) 25 26 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 26 31 (font-lock-face web-mode-javascript-string-face part-token string part-side javascript) 31 32 (font-lock-face web-mode-javascript-string-face syntax-table (15) part-token string part-side javascript) 32 39 (part-side javascript) 39 40 (face (rainbow-delimiters-depth-7-face) part-side javascript)) . 17970) (undo-tree-id99 . -40) (undo-tree-id100 . -1) (undo-tree-id101 . -40) (t 25525 33581 744658 196000)) nil (25525 33616 375723 419000) 0 nil])
([nil nil ((8771 . 8786) (t 25528 12941 354073 678000)) nil (25681 5792 718515 270000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9085 . 9086) (nil rear-nonsticky t 9085 . 9086) (nil tag-name "v-alert" 9085 . 9086) (nil tag-type end 9085 . 9086) (nil tag-end t 9085 . 9086) (nil font-lock-face web-mode-html-tag-bracket-face 9085 . 9086) (nil tag-name "v-alert" 9078 . 9085) (nil tag-type end 9078 . 9085) (nil font-lock-face web-mode-html-tag-custom-face 9078 . 9085) (nil tag-name "v-alert" 9077 . 9078) (nil tag-type end 9077 . 9078) (nil font-lock-face web-mode-html-tag-bracket-face 9077 . 9078) (nil tag-name "v-alert" 9076 . 9077) (nil tag-type end 9076 . 9077) (nil tag-beg 22 9076 . 9077) (nil font-lock-face web-mode-html-tag-bracket-face 9076 . 9077) (nil rear-nonsticky t 9050 . 9051) (nil block-side t 9050 . 9051) (nil block-end t 9050 . 9051) (nil block-token delimiter-end 9050 . 9051) (nil font-lock-face web-mode-block-delimiter-face 9050 . 9051) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 9050 . 9051) (nil block-side t 9049 . 9050) (nil block-token delimiter-end 9049 . 9050) (nil font-lock-face web-mode-block-delimiter-face 9049 . 9050) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 9049 . 9050) (nil block-side t 9048 . 9049) (nil face (rainbow-delimiters-depth-3-face) 9048 . 9049) (nil block-side t 9046 . 9048) (nil rear-nonsticky t 9045 . 9046) (nil block-side t 9045 . 9046) (nil face web-mode-variable-name-face 9045 . 9046) (nil block-side t 9044 . 9045) (nil face web-mode-variable-name-face 9044 . 9045) (nil block-side t 9043 . 9044) (nil face web-mode-variable-name-face 9043 . 9044) (nil block-side t 9042 . 9043) (nil face web-mode-variable-name-face 9042 . 9043) (nil block-side t 9041 . 9042) (nil face web-mode-variable-name-face 9041 . 9042) (nil block-side t 9040 . 9041) (nil face web-mode-variable-name-face 9040 . 9041) (nil block-side t 9039 . 9040) (nil face web-mode-variable-name-face 9039 . 9040) (nil block-side t 9038 . 9039) (nil face web-mode-variable-name-face 9038 . 9039) (nil block-side t 9037 . 9038) (nil face web-mode-variable-name-face 9037 . 9038) (nil block-side t 9036 . 9037) (nil face web-mode-variable-name-face 9036 . 9037) (nil block-side t 9035 . 9036) (nil block-side t 9034 . 9035) (nil face web-mode-variable-name-face 9034 . 9035) (nil block-side t 9033 . 9034) (nil face web-mode-variable-name-face 9033 . 9034) (nil block-side t 9032 . 9033) (nil face web-mode-variable-name-face 9032 . 9033) (nil block-side t 9031 . 9032) (nil face web-mode-variable-name-face 9031 . 9032) (nil block-side t 9030 . 9031) (nil face web-mode-variable-name-face 9030 . 9031) (nil block-side t 9029 . 9030) (nil block-side t 9028 . 9029) (nil face (rainbow-delimiters-depth-3-face) 9028 . 9029) (nil block-side t 9027 . 9028) (nil face web-mode-variable-name-face 9027 . 9028) (nil block-side t 9025 . 9027) (nil block-side t 9024 . 9025) (nil block-token delimiter-beg 9024 . 9025) (nil font-lock-face web-mode-block-delimiter-face 9024 . 9025) (nil face (rainbow-delimiters-depth-2-face web-mode-block-delimiter-face) 9024 . 9025) (nil block-beg 0 9023 . 9024) (nil block-controls 0 9023 . 9024) (nil block-side t 9023 . 9024) (nil block-token delimiter-beg 9023 . 9024) (nil font-lock-face web-mode-block-delimiter-face 9023 . 9024) (nil face (rainbow-delimiters-depth-1-face web-mode-block-delimiter-face) 9023 . 9024) (nil tag-name "v-alert" 8995 . 8996) (nil tag-type start 8995 . 8996) (nil tag-end t 8995 . 8996) (nil font-lock-face web-mode-html-tag-bracket-face 8995 . 8996) (nil tag-name "v-alert" 8970 . 8995) (nil tag-type start 8970 . 8995) (nil tag-attr t 8969 . 8970) (nil tag-attr-end 4 8969 . 8970) (nil tag-name "v-alert" 8969 . 8970) (nil tag-type start 8969 . 8970) (nil font-lock-face web-mode-html-attr-value-face 8969 . 8970) (nil tag-attr t 8961 . 8969) (nil tag-name "v-alert" 8961 . 8969) (nil tag-type start 8961 . 8969) (nil font-lock-face web-mode-html-attr-value-face 8961 . 8969) (nil tag-attr t 8960 . 8961) (nil tag-name "v-alert" 8960 . 8961) (nil tag-type start 8960 . 8961) (nil font-lock-face web-mode-html-attr-equal-face 8960 . 8961) (nil tag-attr t 8957 . 8960) (nil tag-name "v-alert" 8957 . 8960) (nil tag-type start 8957 . 8960) (nil font-lock-face web-mode-html-attr-name-face 8957 . 8960) (nil tag-attr-beg 0 8956 . 8957) (nil tag-attr t 8956 . 8957) (nil tag-name "v-alert" 8956 . 8957) (nil tag-type start 8956 . 8957) (nil font-lock-face web-mode-html-attr-name-face 8956 . 8957) (nil tag-name "v-alert" 8929 . 8956) (nil tag-type start 8929 . 8956) (nil tag-attr t 8928 . 8929) (nil tag-attr-end 6 8928 . 8929) (nil tag-name "v-alert" 8928 . 8929) (nil tag-type start 8928 . 8929) (nil font-lock-face web-mode-html-attr-value-face 8928 . 8929) (nil tag-attr t 8923 . 8928) (nil tag-name "v-alert" 8923 . 8928) (nil tag-type start 8923 . 8928) (nil font-lock-face web-mode-html-attr-value-face 8923 . 8928) (nil tag-attr t 8922 . 8923) (nil tag-name "v-alert" 8922 . 8923) (nil tag-type start 8922 . 8923) (nil font-lock-face web-mode-html-attr-equal-face 8922 . 8923) (nil tag-attr t 8917 . 8922) (nil tag-name "v-alert" 8917 . 8922) (nil tag-type start 8917 . 8922) (nil font-lock-face web-mode-html-attr-name-face 8917 . 8922) (nil tag-attr-beg 0 8916 . 8917) (nil tag-attr t 8916 . 8917) (nil tag-name "v-alert" 8916 . 8917) (nil tag-type start 8916 . 8917) (nil font-lock-face web-mode-html-attr-name-face 8916 . 8917) (nil tag-name "v-alert" 8889 . 8916) (nil tag-type start 8889 . 8916) (nil tag-attr t 8888 . 8889) (nil tag-attr-end 5 8888 . 8889) (nil tag-name "v-alert" 8888 . 8889) (nil tag-type start 8888 . 8889) (nil font-lock-face web-mode-html-attr-value-face 8888 . 8889) (nil tag-attr t 8883 . 8888) (nil tag-name "v-alert" 8883 . 8888) (nil tag-type start 8883 . 8888) (nil font-lock-face web-mode-html-attr-value-face 8883 . 8888) (nil tag-attr t 8882 . 8883) (nil tag-name "v-alert" 8882 . 8883) (nil tag-type start 8882 . 8883) (nil font-lock-face web-mode-html-attr-equal-face 8882 . 8883) (nil tag-attr t 8881 . 8882) (nil tag-name "v-alert" 8881 . 8882) (nil tag-type start 8881 . 8882) (nil font-lock-face web-mode-html-attr-name-face 8881 . 8882) (nil tag-attr t 8880 . 8881) (nil tag-name "v-alert" 8880 . 8881) (nil tag-type start 8880 . 8881) (nil font-lock-face web-mode-html-attr-name-face 8880 . 8881) (nil tag-attr t 8879 . 8880) (nil tag-name "v-alert" 8879 . 8880) (nil tag-type start 8879 . 8880) (nil font-lock-face web-mode-html-attr-name-face 8879 . 8880) (nil tag-attr t 8878 . 8879) (nil tag-name "v-alert" 8878 . 8879) (nil tag-type start 8878 . 8879) (nil font-lock-face web-mode-html-attr-name-face 8878 . 8879) (nil tag-attr-beg 0 8877 . 8878) (nil tag-attr t 8877 . 8878) (nil tag-name "v-alert" 8877 . 8878) (nil tag-type start 8877 . 8878) (nil font-lock-face web-mode-html-attr-name-face 8877 . 8878) (nil tag-name "v-alert" 8851 . 8877) (nil tag-type start 8851 . 8877) (nil tag-name "v-alert" 8850 . 8851) (nil tag-type start 8850 . 8851) (nil tag-attr t 8849 . 8850) (nil tag-attr-end 0 8849 . 8850) (nil tag-name "v-alert" 8849 . 8850) (nil tag-type start 8849 . 8850) (nil font-lock-face web-mode-html-attr-name-face 8849 . 8850) (nil tag-attr t 8846 . 8849) (nil tag-name "v-alert" 8846 . 8849) (nil tag-type start 8846 . 8849) (nil font-lock-face web-mode-html-attr-name-face 8846 . 8849) (nil tag-attr-beg 0 8845 . 8846) (nil tag-attr t 8845 . 8846) (nil tag-name "v-alert" 8845 . 8846) (nil tag-type start 8845 . 8846) (nil font-lock-face web-mode-html-attr-name-face 8845 . 8846) (nil tag-name "v-alert" 8818 . 8845) (nil tag-type start 8818 . 8845) (nil tag-name "v-alert" 8811 . 8818) (nil tag-type start 8811 . 8818) (nil font-lock-face web-mode-html-tag-custom-face 8811 . 8818) (nil tag-name "v-alert" 8810 . 8811) (nil tag-type start 8810 . 8811) (nil tag-beg 19 8810 . 8811) (nil font-lock-face web-mode-html-tag-bracket-face 8810 . 8811) (8786 . 9086)) nil (25681 5792 718503 432000) 0 nil])
([nil nil (("          " . -8982) ("          " . -8939) (#("          " 0 10 (tag-name "v-alert" tag-type start)) . -8921) (#("          " 0 10 (tag-name "v-alert" tag-type start)) . -8892) (#("          " 0 10 (tag-name "v-alert" tag-type start)) . -8862) (#("          " 0 10 (tag-name "v-alert" tag-type start)) . -8833) (#("          " 0 10 (tag-name "v-alert" tag-type start)) . -8811) ("                        " . -8786) 8771) nil (25681 5792 718451 141000) 0 nil])
([nil nil ((#("forgotSpam" 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t face web-mode-variable-name-face) 6 7 (block-side t face web-mode-variable-name-face) 7 8 (block-side t face web-mode-variable-name-face) 8 9 (block-side t face web-mode-variable-name-face) 9 10 (block-side t face web-mode-variable-name-face)) . 8952) (undo-tree-id8 . -10) (undo-tree-id9 . -10) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (t 25681 5792 721410 956000)) nil (25681 5953 112245 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8961 . 8962) (nil block-side t 8961 . 8962) (nil face web-mode-variable-name-face 8961 . 8962) (nil block-side t 8960 . 8961) (nil face web-mode-variable-name-face 8960 . 8961) (nil block-side t 8959 . 8960) (nil face web-mode-variable-name-face 8959 . 8960) (nil block-side t 8958 . 8959) (nil face web-mode-variable-name-face 8958 . 8959) (nil block-side t 8957 . 8958) (nil face web-mode-variable-name-face 8957 . 8958) (nil block-side t 8956 . 8957) (nil face web-mode-variable-name-face 8956 . 8957) (nil block-side t 8955 . 8956) (nil face web-mode-variable-name-face 8955 . 8956) (nil block-side t 8954 . 8955) (nil face web-mode-variable-name-face 8954 . 8955) (nil block-side t 8953 . 8954) (nil face web-mode-variable-name-face 8953 . 8954) (nil block-side t 8952 . 8953) (nil face web-mode-variable-name-face 8952 . 8953) (8952 . 8962)) nil (25681 5953 112239 429000) 0 nil])
([nil nil ((#("Login." 0 1 (block-side t face web-mode-variable-name-face) 1 2 (block-side t face web-mode-variable-name-face) 2 3 (block-side t face web-mode-variable-name-face) 3 4 (block-side t face web-mode-variable-name-face) 4 5 (block-side t face web-mode-variable-name-face) 5 6 (block-side t)) . 8946) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -6)) nil (25681 5953 112232 920000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8959 . 8960) (nil block-side t 8959 . 8960) (nil face web-mode-variable-name-face 8959 . 8960) (nil block-side t 8958 . 8959) (nil face web-mode-variable-name-face 8958 . 8959) (nil block-side t 8957 . 8958) (nil face web-mode-variable-name-face 8957 . 8958) (nil block-side t 8956 . 8957) (nil face web-mode-variable-name-face 8956 . 8957) (nil block-side t 8955 . 8956) (nil face web-mode-variable-name-face 8955 . 8956) (nil block-side t 8954 . 8955) (nil face web-mode-variable-name-face 8954 . 8955) (nil block-side t 8953 . 8954) (nil face web-mode-variable-name-face 8953 . 8954) (nil block-side t 8952 . 8953) (nil face web-mode-variable-name-face 8952 . 8953) (nil block-side t 8951 . 8952) (nil face web-mode-variable-name-face 8951 . 8952) (nil block-side t 8950 . 8951) (nil face web-mode-variable-name-face 8950 . 8951) (nil block-side t 8949 . 8950) (nil face web-mode-variable-name-face 8949 . 8950) (nil block-side t 8948 . 8949) (nil face web-mode-variable-name-face 8948 . 8949) (nil block-side t 8947 . 8948) (nil face web-mode-variable-name-face 8947 . 8948) (nil block-side t 8946 . 8947) (nil face web-mode-variable-name-face 8946 . 8947) (8946 . 8960)) nil (25681 5953 112206 727000) 0 nil])
([nil nil ((8960 . 8961)) nil (25681 5953 112193 595000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-img" tag-type start font-lock-face web-mode-html-attr-value-face)) . -11697) (undo-tree-id13 . -1) 11698 (t 25681 5953 117140 494000)) nil (25681 5979 521359 122000) 0 nil])
([nil nil ((11697 . 11698)) nil (25681 5979 521355 121000) 0 nil])
([nil nil ((#("9" 0 1 (tag-attr t tag-name "v-img" tag-type start font-lock-face web-mode-html-attr-value-face)) . 11698) (undo-tree-id12 . -1)) nil (25681 5979 521352 639000) 0 nil])
([nil nil ((11698 . 11699)) nil (25681 5979 521336 679000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-img" tag-type start font-lock-face web-mode-html-attr-value-face)) . -11698) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 11699 (t 25681 5979 529097 612000)) nil (25681 5983 669165 704000) 0 nil])
([nil nil ((11698 . 11699)) nil (25681 5983 669131 800000) 0 nil])
([nil nil ((#("5" 0 1 (tag-attr t tag-name "v-img" tag-type start font-lock-face web-mode-html-attr-value-face)) . -11698) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 11699 (t 25681 5983 673090 921000)) nil (25681 5988 382020 300000) 0 nil])
([nil nil ((11698 . 11699)) nil (25681 5988 381987 370000) 0 nil])
([nil nil ((#("2" 0 1 (tag-attr t tag-name "v-img" tag-type start font-lock-face web-mode-html-attr-value-face)) . -11699) (undo-tree-id48 . -1) 11700 (t 25681 5988 389083 323000)) nil (25681 5995 91491 461000) 0 nil])
([nil nil ((11699 . 11700)) nil (25681 5995 91474 999000) 0 nil])
([nil nil ((8794 . 8811) (t 25681 5995 101072 524000)) nil (25681 6337 724590 792000) 0 nil])
([nil nil ((8811 . 8818)) nil (25681 6337 724588 714000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8827 . 8828) (nil tag-attr t 8817 . 8828) (nil tag-name "v-alert" 8817 . 8828) (nil tag-type start 8817 . 8828) (nil font-lock-face web-mode-html-attr-value-face 8817 . 8828) (8817 . 8828)) nil (25681 6337 724579 902000) 0 nil])
([nil nil ((8828 . 8832) (t 25681 6337 732548 850000)) nil (25681 6369 593840 940000) 0 nil])
([nil nil ((#("=" 0 1 (tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8829) (undo-tree-id51 . -1) (#("!" 0 1 (tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8830) (undo-tree-id52 . -1) (#(" " 0 1 (tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8831) (undo-tree-id53 . -1) 8832) nil (25681 6369 593838 321000) 0 nil])
([nil nil ((8832 . 8834) (#("[" 0 1 (tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-html-attr-value-face)) . -8832) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (8829 . 8833)) nil (25681 6369 593829 33000) 0 nil])
([nil nil ((8811 . 8812) (t 25681 6369 604502 285000)) nil (25681 6380 515634 968000) 0 nil])
([nil current ((#("
                :v-if=\"chosenUsers != []\"" 0 1 (tag-name "v-alert" tag-type start) 1 17 (tag-name "v-alert" tag-type start) 17 18 (block-beg 0 block-controls 0 block-side t block-token delimiter-beg tag-attr-beg 2 tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 18 19 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 19 20 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 20 21 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 21 22 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 22 23 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 23 24 (block-side t block-token delimiter-beg tag-attr t tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face) 24 25 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 25 26 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 26 27 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 27 28 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 28 29 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 29 30 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 30 31 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 31 32 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 32 33 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 33 34 (block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 34 35 (rear-nonsticky t block-side t tag-attr t tag-name "v-alert" tag-type start face web-mode-variable-name-face) 35 39 (block-side t tag-attr t tag-name "v-alert" tag-type start) 39 40 (block-side t tag-attr t tag-name "v-alert" tag-type start) 40 41 (block-side t tag-attr t tag-name "v-alert" tag-type start) 41 42 (block-side t block-end t block-token delimiter-end tag-attr t tag-attr-end 5 tag-name "v-alert" tag-type start font-lock-face web-mode-block-delimiter-face)) . 8794) (undo-tree-id54 . -42) (undo-tree-id55 . -21) (undo-tree-id56 . -35) (undo-tree-id57 . -35) (undo-tree-id58 . -1) (undo-tree-id59 . -24) (undo-tree-id60 . -42) (t 25681 6380 520486 402000)) nil (25681 6386 894883 69000) 0 nil])
nil
